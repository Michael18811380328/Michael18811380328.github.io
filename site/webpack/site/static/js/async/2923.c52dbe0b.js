"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["2923"],{9346:function(e,n,s){s.r(n),s.d(n,{default:function(){return d}});var a=s(6469),c=s(8809);function r(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h3:"h3",pre:"pre",code:"code"},(0,c.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h1,{id:"说明",children:["说明",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#说明",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"这是一个测试目录，主要练习 react webpack babel(es6) 的编译和配置。"}),"\n",(0,a.jsxs)(n.h3,{id:"1-webpack-环境搭建版本6",children:["1. webpack 环境搭建（版本6）",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1-webpack-环境搭建版本6",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cnpm install webpack -g\ncnpm install webpack-cli 先把 loaders \ncnpm install webpack-dev-server -g\n# webpack 自带的CLI环境和本地的测试服务器安装\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"2-相关的依赖库",children:["2. 相关的依赖库",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2-相关的依赖库",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm init\n# 初始化项目\n\n# webpack 本地依赖库\ncnpm install webpack --save-dev\ncnpm install webpack-dev-server --save-dev\n\n# babel 库\ncnpm install babel-core --save-dev\n# 核心组件\ncnpm install babel-preset-es2015 --save-dev\n# 这是babel对于ES6(es2015)的预设\n# babel 对于 react 的预设\ncnpm install babel-preset-react --save-dev\ncnpm install babel-loader --save-dev # babel 加载器\n\n# react\ncnpm install react --save-dev\ncnpm install react-dom --save-dev\ncnpm install react-hot-loader -dev--save # 热更新\n\n# css 优化\ncnpm install style-loader -D\ncnpm install css-loader -D\n\n# 装完后检查一下是否完整\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"3-webpack-配置",children:["3. webpack 配置",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#3-webpack-配置",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"// webpack.config.js\nmodule.exports = {\n  entry: './index.js',\n  // 入口文件\n  output: {\n    path: __dirname,\n    filename: 'bundle.js'\n  },\n  // 出口文件和输出文件名\n  devtool: 'source-map',\n  // 浏览器开发工具（显示原文件的位置）浏览器自带\n  module: {\n    loaders: [\n      {test: /\\.css$/, loader: 'style!css'},\n      {test: /\\.js$/, loader: 'react-hot!babel', exclude: /node_modules/},\n    ]\n  }\n  // 加载器：对于css结尾的文件使用 style-loader || css-loader 处理，对于 js 文件使用后面的处理，排除掉node_nodules 下面的文件。\n}\n"})}),"\n",(0,a.jsx)(n.p,{children:"babel 配置"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"// .babelrc\n{\n  presets: [['es2015'], ['react']]\n}\n// 注意：是双数组\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"4-运行-webpack",children:["4. 运行 webpack",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#4-运行-webpack",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"此时出现问题：配置 loaders 改成 rules, react-hot 一直报错所以删了，babel 改成 babel-loader."}),"\n",(0,a.jsx)(n.p,{children:"最后界面中可以显示当前的应用"}),"\n",(0,a.jsxs)(n.h3,{id:"5-高级配置",children:["5. 高级配置",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#5-高级配置",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"make dist"}),"\n",(0,a.jsx)(n.p,{children:"直接运行 make dist 即可进行编译和迁移css文件"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-makefile",children:'PROJECT=Michale\n\n# 依次运行 clean transpile postdist\ndist: clean transpile postdist\n\n# 删除dist下面的代码\nclean:\n	@echo \'--\x3e Cleaning dist\'\n	rm -rf dist/*\n	@echo "\\033[32;36m clean dist success \\033[0m"\n\n# 编译核心：使用生产环境模板编译代码\ntranspile:\n	@echo "--\x3e Compile dist"\n	export NODE_ENV=production && webpack\n	@echo "\\033[32;36m compile dist success \\033[0m"\n\n# 移动CSS文件\npostdist:\n	@echo "--\x3e Copy css and remove settings.js"\n	cp -r css dist/css\n	@echo "\\033[32;36m post dist success \\033[0m"\n\n.PHONY: transpile postdist clean\n'})}),"\n",(0,a.jsx)(n.p,{children:"注意：如果是nodeJS项目，webpack 可能出现下面的问题"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ERROR in ./dist/xxx.js\nModule not found: Error: Can't resolve 'fs' in '/Users/xxx'\n @ ./dist/xxx.js 8:33-46\n"})}),"\n",(0,a.jsxs)(n.p,{children:["需要在 webpack-config.js 中加入 ",(0,a.jsx)(n.code,{children:"target:'node',"})," 这个配置，否则node部分本地打包报错。"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://stackoverflow.com/questions/51946848/webpack-nodejs-module-not-found-error-cant-resolve-fs",target:"_blank",rel:"noopener noreferrer",children:"https://stackoverflow.com/questions/51946848/webpack-nodejs-module-not-found-error-cant-resolve-fs"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://jlongster.com/Backend-Apps-with-Webpack--Part-I",target:"_blank",rel:"noopener noreferrer",children:"https://jlongster.com/Backend-Apps-with-Webpack--Part-I"})})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,c.ah)(),e.components);return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}let d=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["webpack%2Fwebpack04-01README.md"]={toc:[{text:"1. webpack 环境搭建（版本6）",id:"1-webpack-环境搭建版本6",depth:3},{text:"2. 相关的依赖库",id:"2-相关的依赖库",depth:3},{text:"3. webpack 配置",id:"3-webpack-配置",depth:3},{text:"4. 运行 webpack",id:"4-运行-webpack",depth:3},{text:"5. 高级配置",id:"5-高级配置",depth:3}],title:"说明",frontmatter:{}}}}]);