"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["8071"],{6954:function(e,n,a){a.r(n),a.d(n,{default:function(){return c}});var s=a(6469),r=a(8809);function d(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",h3:"h3",pre:"pre",code:"code",h4:"h4"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"package",children:["package",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#package",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"统计信息：字数 3848  阅读8分钟"}),"\n",(0,s.jsx)(n.p,{children:"webpack babel package.json 配置"}),"\n",(0,s.jsxs)(n.h2,{id:"packagejson",children:["package.json",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#packagejson",children:"#"})]}),"\n",(0,s.jsxs)(n.h3,{id:"1创建-packagejson",children:["1、创建 package.json",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1创建-packagejson",children:"#"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm init\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"2设置包",children:["2、设置包",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2设置包",children:"#"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"script": {\n  "dev": "",\n  "dist": "",\n  "pub": "npm run dist",\n  "start": "cross-env NODE_ENV=development node ./tools/script.js",\n  "test": "node ./test",\n  "test": "jest --env=node --colors --coverage"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"在一个字段中可以运行另一个字段"}),"\n",(0,s.jsx)(n.p,{children:"bin: 用于存放内部命令对应的可执行文件的位置。如果一部分包是全局设置，那么需要找到全局的文件位置。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"bin": {\n  "myCommand": "./bin/index.js"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"myCommand 对应着可执行文件是./bin/index.js。"}),"\n",(0,s.jsx)(n.p,{children:"安装包时，会在node_modules/.bin 下面建立链接。"}),"\n",(0,s.jsx)(n.p,{children:"bin字段在项目中使用不是很多"}),"\n",(0,s.jsx)(n.p,{children:"Main: 指定入口文件，默认是根目录下的index.js"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'  "main": "dist/editor/index.js"\n'})}),"\n",(0,s.jsx)(n.p,{children:"入口文件设置成 index.js"}),"\n",(0,s.jsx)(n.p,{children:"config 设置环境变量"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"config": {\n  "port": "8080"\n}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"// index.js\nhttp.createServer(...).listen(process.env.npm_package_config_port)\n"})}),"\n",(0,s.jsx)(n.p,{children:"dependencies 项目运行依赖的包（run）"}),"\n",(0,s.jsx)(n.p,{children:"devDependencies 项目开发依赖的包（build）"}),"\n",(0,s.jsxs)(n.h2,{id:"webpack",children:["webpack",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#webpack",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"常见的webpack配置"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"var path = require('path');\nvar webpack = require('webpack');\nvar HtmlWebpackPlugin = require('html-webpack-plugin')\n\nmodule.exports = {\n  mode: 'development',\n  entry: {\n    main: path.join(__dirname, './src/pages/Main/index'),\n    article: path.join(__dirname, './src/pages/Article/index')\n  },\n  output: {\n    path: path.join(__dirname, './dist'),\n    filename: '[name].min.js'\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.jsx?$/,\n        exclude: /node_modules/,\n        loader: 'babel-loader'\n      },\n      {\n        test: /\\.less$/,\n        loader: 'style-loader!css-loader!less-loader'\n      },\n      {\n        test: /\\.(png|jpg|gif)$/,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {}\n          }\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      filename: 'index.html',\n      template: path.join(__dirname, './index.html'),\n      chunks: ['main']\n    }),\n    new HtmlWebpackPlugin({\n      filename: 'article.html',\n      template: path.join(__dirname, './index.html'),\n      chunks: ['article']\n    })\n  ],\n  resolve: {\n    extensions: ['.js', '.jsx'],\n  },\n  externals: {\n    \"react\": 'React',\n    'react-dom': 'ReactDOM'\n  }\n}\n\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"入口函数-entry",children:["入口函数 entry",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#入口函数-entry",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"webpack 应该使用什么模块；进入入口起点后，webpack 会找出依赖的模块或者库。通常使用对象写法配置 entry。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"entry: {\n  main: path.join(_dirname, './src/pages/main/index'),\n  article: path.join(_dirname, './src/pages/hello/index')\n} \n"})}),"\n",(0,s.jsxs)(n.h4,{id:"出口函数-output",children:["出口函数 output",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#出口函数-output",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"告诉 webpack 输出包的位置（bundles）以及输出文件的命名；默认路径是 ./dist 。这里表示在 ./dist 下生成 main.min.js."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"output: {\n  path: path.join(_dirname, './dist'),\n  filename: '[name].min.js'\n}\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"模块-module",children:["模块 module",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#模块-module",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"webpack 通过loader支持各种语言和预处理器的编写模块。配置loader来支持其他文件（例如css/image，支持 jsx或者 vue文件）。"}),"\n",(0,s.jsx)(n.p,{children:"使用 react jsx babel less 等需要配置不同的插件。"}),"\n",(0,s.jsx)(n.p,{children:"例如 ES6 babel"}),"\n",(0,s.jsx)(n.p,{children:"Babel-preset-react 对应react中的ES6"}),"\n",(0,s.jsx)(n.p,{children:"babel 在不同浏览器支持不同，需要转义， babel-preset-react"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install babel-preset-env babel-preset-react --save-dev\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:"{\n  \"presents\": ['env', 'react']\n}\n"})}),"\n",(0,s.jsxs)(n.h4,{id:"插件-plugins",children:["插件 plugins",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#插件-plugins",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"插件是webpack的核心功能，可以设置各种高级配置。"}),"\n",(0,s.jsx)(n.p,{children:"Html-webpack-plugin 插件：在 webpack构建中，在对应的目录下生成 html 文件，可以正确的引入 webpack 生成的文件。"}),"\n",(0,s.jsxs)(n.h4,{id:"外部扩展-externals",children:["外部扩展 externals",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#外部扩展-externals",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"React  react-dom 这部分内容不需要包含在项目中。"})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}let c=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["webpack%2F09-webpack%E4%B8%BB%E8%A6%81%E6%A6%82%E5%BF%B5.md"]={toc:[{text:"package.json",id:"packagejson",depth:2},{text:"1、创建 package.json",id:"1创建-packagejson",depth:3},{text:"2、设置包",id:"2设置包",depth:3},{text:"webpack",id:"webpack",depth:2},{text:"入口函数 entry",id:"入口函数-entry",depth:4},{text:"出口函数 output",id:"出口函数-output",depth:4},{text:"模块 module",id:"模块-module",depth:4},{text:"插件 plugins",id:"插件-plugins",depth:4},{text:"外部扩展 externals",id:"外部扩展-externals",depth:4}],title:"package",frontmatter:{}}}}]);