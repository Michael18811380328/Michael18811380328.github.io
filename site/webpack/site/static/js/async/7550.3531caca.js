"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["7550"],{5218:function(n,e,r){r.r(e),r.d(e,{default:function(){return a}});var s=r(6469),i=r(8809);function l(n){let e=Object.assign({h1:"h1",a:"a",p:"p",blockquote:"blockquote",h2:"h2",ul:"ul",li:"li",pre:"pre",code:"code"},(0,i.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(e.h1,{id:"为你揭秘webpack的高级技巧",children:["为你揭秘webpack的高级技巧",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#为你揭秘webpack的高级技巧",children:"#"})]}),"\n",(0,s.jsx)(e.p,{children:"统计信息：字数 2938  阅读6分钟"}),"\n",(0,s.jsx)(e.p,{children:"create time 2020-01-01"}),"\n",(0,s.jsx)(e.p,{children:"last modify time 2024-04-15"}),"\n",(0,s.jsxs)(e.blockquote,{children:["\n",(0,s.jsx)(e.p,{children:"与之前课程重复，所以简单记录不同点。"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"Webpack 不同等级的使用者："}),"\n",(0,s.jsx)(e.p,{children:"初级：可以通过CLI搭建基本的webpack并打包项目"}),"\n",(0,s.jsx)(e.p,{children:"中级：可以更改一部分配置文件（loader plugin）"}),"\n",(0,s.jsx)(e.p,{children:"高级：使用webpack解决项目的问题"}),"\n",(0,s.jsxs)(e.h2,{id:"环境和目录",children:["环境和目录",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#环境和目录",children:"#"})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"开发环境（dev）webpack.dev.conf.js"}),"\n",(0,s.jsx)(e.li,{children:"测试环境（test）Test.js 打包测试文件，而不是打包业务代码"}),"\n",(0,s.jsx)(e.li,{children:"生产环境（prod）"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"对应不同的配置文件"}),"\n",(0,s.jsx)(e.p,{children:"基本配置文件："}),"\n",(0,s.jsx)(e.p,{children:"webpack.base.conf.js (主要是loaders)"}),"\n",(0,s.jsx)(e.p,{children:"vue-loader"}),"\n",(0,s.jsx)(e.p,{children:"babel-loader"}),"\n",(0,s.jsx)(e.p,{children:"url-loader(handle image file jpg)"}),"\n",(0,s.jsx)(e.p,{children:"url-loader(handle meida file mp4)"}),"\n",(0,s.jsx)(e.p,{children:"在不同环境中，把基本配置和特定环境的配置项目 merge 成一个配置文件。"}),"\n",(0,s.jsx)(e.p,{children:"例如：生产环境下执行下面的操作"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"node build.js\n"})}),"\n",(0,s.jsx)(e.p,{children:"JS内部使用 webpack.base.conf.js and webpack.prod.conf.js 合并文件，从 config 中拿出  index.js and pro.env 中的环境变量，然后进行生产环境下面的打包。"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"const ora = require('ora');\nconst rm = require('rimraf');\nconst path = require('path');\nconst chalk = require('chalk');\nconst webpack = require('webpack');\nconst config = require('../config');\nconst webpackConfig = require('./webpack.prod.conf.js');\n\nconst spinner = ora('building starting');\nspinner.start();\n\n// delete dist dir\nrm(path.join(config.build.assetsRoot, config.build.assetsSubDirectory), err => {\n    if (err) {\n        throw err;\n    }\n    // start webpack \n    webpack(webpackConfig, (err, stats) => {\n        spinner.stop();\n        if (err) {\n            throw err;\n        }\n        process.stdout.write(stats.toString({\n            colors: true,\n            modules: false,\n            children: false, // ts-loader set it true\n            chunks: false,\n            chunkModules: false\n        }) + '\\n\\n');\n        if (stats.hasErrors()) {\n            console.log(chalk.red('build with error.\\n'));\n            process.exit(1);\n        }\n        console.log(chalk.cyan('build complete.\\n'));\n    });\n});\n"})}),"\n",(0,s.jsxs)(e.h2,{id:"常用-loader-和-plugin",children:["常用 loader 和 plugin",(0,s.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#常用-loader-和-plugin",children:"#"})]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"webpack.DefinePlugin 在打包阶段定义全局变量"}),"\n",(0,s.jsx)(e.li,{children:"webpack.HashedMouduleIdsPlugin 保持 module.id 稳定，第三方库避免重复打包"}),"\n",(0,s.jsx)(e.li,{children:"webpack.NoEmitOnErrorsPlugin 屏蔽打包时的错误，浏览器可以显示界面"}),"\n",(0,s.jsx)(e.li,{children:"webpack.ProvidePlugin 提供库"}),"\n",(0,s.jsx)(e.li,{children:"copy-webpack-plugin 帮助手动拷贝内容（未打包的字体图标或者图片）"}),"\n"]}),"\n",(0,s.jsx)(e.p,{children:"这些在前面的课程中介绍过，这里简单说一下第一个"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-js",children:"plugins: [\n    new webpack.DefinePlugin({\n        'process.env': env\n    }),\n    new UglifyJsPlugin({\n        uglifyOptions: {\n            compress: {\n                warnings: false\n            }\n        },\n        sourceMap: config.build.productionSourceMap,\n        parallel: true\n    }),\n]\n"})}),"\n",(0,s.jsx)(e.p,{children:"插件都放在 plugins 数组中，创建一个插件的实例"})]})}function c(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,i.ah)(),n.components);return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}let a=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["webpack%2F05-%E7%BD%91%E6%98%93webpack%E7%9A%84%E9%AB%98%E7%BA%A7%E6%8A%80%E5%B7%A7.md"]={toc:[{text:"环境和目录",id:"环境和目录",depth:2},{text:"常用 loader 和 plugin",id:"常用-loader-和-plugin",depth:2}],title:"为你揭秘webpack的高级技巧",frontmatter:{}}}}]);