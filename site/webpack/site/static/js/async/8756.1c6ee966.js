"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["8756"],{9441:function(n,e,s){s.r(e),s.d(e,{default:function(){return t}});var r=s(6469),c=s(8809);function a(n){let e=Object.assign({h3:"h3",a:"a",p:"p",strong:"strong",pre:"pre",code:"code"},(0,c.ah)(),n.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.h3,{id:"webpackconfigjs配置文件",children:["webpack.config.js配置文件",(0,r.jsx)(e.a,{className:"header-anchor","aria-hidden":"true",href:"#webpackconfigjs配置文件",children:"#"})]}),"\n",(0,r.jsx)(e.p,{children:"统计信息：字数 4708  阅读10分钟"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"1、基本配置"})}),"\n",(0,r.jsx)(e.p,{children:"webpack在执行时，除在命令行传入参数，还可以通过指定的配置文件来执行。"}),"\n",(0,r.jsx)(e.p,{children:"默认会搜索当前目录下webpack.config.js。"}),"\n",(0,r.jsx)(e.p,{children:"这个文件是一个node.js模块，返回一个json格式的配置对象，或者通过--config选项来指定配置文件。"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:"//创建webpack.config.js\n\nvar webpack = require('webpack');\n\nmodule.exports = {\n entry:'./entry.js', //入口文件\n output:{\n   //node.js中__dirname变量获取当前模块文件所在目录的完整绝对路径 \n   path:__dirname, //输出位置\n   filename:'build.js' //输入文件\n },\n module:{\n   loaders:[\n     {\n       test:/\\.css$/,//支持正则\n       loader:'style-loader!css-loader' \n     }\n   ]\n },\n //其他解决方案配置\n resolve: {\n   extensions: ['', '.js', '.json', '.css', '.scss']//添加在此的后缀所对应的文件可以省略后缀\n },\n //插件\n plugins:[\n   new webpack.BannerPlugin('This file is created by ly')\n ]\n}\n\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",children:"//entry.js中引入css模块：\nrequire('./style.css');\n"})}),"\n",(0,r.jsx)(e.p,{children:"运行"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"webpack\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"2、plugins 插件"})}),"\n",(0,r.jsx)(e.p,{children:"可以通过npm安装第三方插件，如：BannerPlugin的作用是给输出的文件头部添加注释信息。"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"3、开发环境"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"::编译输出内容带进度和颜色\n\nwebpack --progress --colors\n\n \n\n::启动监听模式（没有变化的模块会在编译后缓存大内存中，不会每次都被重新编译）\n\nwebpack --watch\n\nwebpack -w\n\n \n\n::使用开发服务（它将在localhost:8080启动一个express静态资源web服务器。并启动监听模式自动webpack，在浏览器打开http://localhost:8080/，就可以浏览项目页面，并通过一个socket.io服务实时监听变化并自动刷新页面）\n\nnpm install webpack-dev-server -g\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"4、启动webpack-dev-server"})}),"\n",(0,r.jsx)(e.p,{children:"注意：在启动了webpack-dev-server后，编译后的文件并没有输出到webpack.config.js中配置的output输出目标文件夹中，而是将实时编译后的文件保存在内存中。"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"例子："})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-js",children:'//目录结构\n\nmyapp\n\n    |__dist\n\n    |   |__styles\n\n    |   |__js\n\n    |       |__bundle.js\n\n    |   |__index.html\n\n    |__src\n\n    |   |__component\n\n    |   |__index.js\n\n    |__node_modules\n\n    |__package.json\n\n    |__webpack.config.js\n\n \n\n//webpack.config.js\n\nvar webpack = require(\'webpack\');\n\nvar path = require(\'path\');\n\nmodule.exports = {\n\n    entry:\'./src/index.js\',\n\n    output:{\n\n        path:path.resolve(__dirname, \'./dist/\'),\n\n        filename:\'build.js\'\n\n    },\n\n    //设置开发者工具的端口号,不设置则默认为8080端口\n\n    devServer: {\n\n        inline: true,\n\n        port: 8181\n\n    },\n\n    module:{\n\n        loaders:[\n\n            {\n\n                test:/\\.js?$/,\n\n                exclude:/node_modules/,\n\n                loader:\'babel-loader\',\n\n                query:{\n\n                    presets:[\'es2015\',\'react\']\n\n                }\n\n            },\n\n            {\n\n                test:/\\.css$/,\n\n                loader:\'style-loader!css-loader\'\n\n            }\n\n        ]\n\n    }\n\n};\n\n \n\n//package.json\n\n{\n\n  "name": "myapp",\n\n  "version": "1.0.0",\n\n  "description": "",\n\n  "main": "build.js",\n\n  "scripts": {\n\n    "test": "echo \\"Error: no test specified\\" && exit 1",\n\n    "dev": "webpack-dev-server --devtool eval-source-map --progress --colors --hot --inline --content-base ./dist",\n\n    "build": "webpack --progress --colors"\n\n  },\n\n  "author": "",\n\n  "license": "ISC",\n\n  "devDependencies": {\n\n    "babel-core": "^6.23.1",\n\n    "babel-loader": "^6.4.0",\n\n    "babel-preset-es2015": "^6.22.0",\n\n    "jsx-loader": "^0.13.2",\n\n    "react": "^15.4.2",\n\n    "react-dom": "^15.4.2",\n\n    "webpack": "^2.2.1",\n\n    "webpack-dev-server": "^2.4.1"\n\n  },\n\n  "dependencies": {\n\n    "jquery": "^3.1.1"\n\n  }\n\n}\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",children:'\x3c!--index.html--\x3e\n\n<!DOCTYPE html>\n\n<html lang="en">\n\n<head>\n\n    <meta charset="UTF-8">\n\n    <title>首页</title>\n\n</head>\n\n<body>\n\n<div id="app"></div>\n\n<script src="build.js"><\/script>\n\n</body>\n\n</html>\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"::安装所有依赖\n\nnpm install\n\n::运行\n\nnpm run dev\n"})}),"\n",(0,r.jsxs)(e.p,{children:["最后在浏览器中打开：",(0,r.jsx)(e.a,{href:"http://localhost:8181/index.html",target:"_blank",rel:"noopener noreferrer",children:"http://localhost:8181/index.html"})]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"详解package.json中命令："})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"webpack-dev-server   //启动webpack-dev-server\n\n--progress --colors    //打包进行显示颜色\n\n--hot  //开启模块热修复功能\n\n--content-base ./dist   //设置webpack-dev-server运行的根目录是 ./dist\n\n--inline  //使用inline的方式进行页面自动刷新\n\n--quiet  //控制台中不输出打包信息\n\n--compress  //开启gzip压缩 \n"})}),"\n",(0,r.jsxs)(e.p,{children:["参考文献：\n",(0,r.jsx)(e.a,{href:"http://www.tuicool.com/articles/BZrQ3mv",target:"_blank",rel:"noopener noreferrer",children:"http://www.tuicool.com/articles/BZrQ3mv"}),"\n",(0,r.jsx)(e.a,{href:"https://segmentfault.com/a/1190000006964335",target:"_blank",rel:"noopener noreferrer",children:"https://segmentfault.com/a/1190000006964335"})]})]})}function l(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,c.ah)(),n.components);return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(a,{...n})}):a(n)}let t=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["webpack%2F47-webpack%20%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE%E5%AD%A6%E4%B9%A02.md"]={toc:[{text:"webpack.config.js配置文件",id:"webpackconfigjs配置文件",depth:3}],title:"",frontmatter:{}}}}]);