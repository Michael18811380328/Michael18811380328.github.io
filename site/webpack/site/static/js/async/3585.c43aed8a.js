"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["3585"],{754:function(e,n,r){r.r(n),r.d(n,{default:function(){return d}});var s=r(6469),a=r(8809);function c(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",pre:"pre",code:"code",h3:"h3"},(0,a.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"starting-the-development-server-报错和解决",children:["Starting the development server 报错和解决",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#starting-the-development-server-报错和解决",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"统计信息：字数 4573  阅读10分钟"}),"\n",(0,s.jsx)(n.p,{children:"create time 2024-04-12"}),"\n",(0,s.jsx)(n.p,{children:"last modify time 2024-04-12"}),"\n",(0,s.jsxs)(n.h2,{id:"问题描述",children:["问题描述",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#问题描述",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"最近某个项目开发环境升级后，运行 npm start 后无法启动项目，终端始终显示 Starting the development server...，浏览器 localhost: 3000 界面显示空白。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"> node scripts/start.js\nStarting the development server...\n"})}),"\n",(0,s.jsx)(n.p,{children:"错误截图"}),"\n",(0,s.jsxs)(n.h2,{id:"问题分析",children:["问题分析",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#问题分析",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"因为近期升级了环境，那么大概率是 webpack 或者 webpack-dev-server 的问题，具体升级的开发环境是 webpack4 升级到 webpack5，版本号为："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'"webpack"*: "^5.64.4",\n"webpack-dev-server"*: "^4.6.0",\n'})}),"\n",(0,s.jsx)(n.p,{children:"查阅各种资料，有下面几个问题需要注意："}),"\n",(0,s.jsxs)(n.h3,{id:"问题1-3000-端口占用",children:["问题1 3000 端口占用",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#问题1-3000-端口占用",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"Webpack-dev-server 默认在 3000 端口开启服务，如果其他服务已经在 3000 端口启动，那么会出现端口冲突，造成这个项目的 dev-server 无法启动。"}),"\n",(0,s.jsx)(n.p,{children:"此时需要先查看 3000 端口是否占用，可以使用 lsof 命令查看："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"lsof -i:3000\n"})}),"\n",(0,s.jsx)(n.p,{children:"如果有其他服务占用端口，会显示具体的服务和信息，如下。调试时可以关闭这个服务。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"COMMAND   PID    USER   FD   TYPE DEVICE                 SIZE/OFF NODE   NAME\nnode    63036 michael   26u  IPv4 0xji89182a14fd8b3      0t0      TCP    *:hbci (LISTEN)\n"})}),"\n",(0,s.jsx)(n.p,{children:"我本地没有其他服务占用 3000 端口，应该是其他问题。"}),"\n",(0,s.jsxs)(n.h3,{id:"问题2-环境变量-sourcemap-配置",children:["问题2 环境变量 sourcemap 配置",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#问题2-环境变量-sourcemap-配置",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"项目升级后，没有设置 GENERATE_SOURCEMAP 属性"}),"\n",(0,s.jsx)(n.p,{children:"可以添加一个 .env 文件，配置环境变量，或者在 npm 脚本中设置环境变量"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"GENERATE_SOURCEMAP=false\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"问题3-项目的入口函数",children:["问题3 项目的入口函数",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#问题3-项目的入口函数",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"更改后，我的终端 webpack-dev-server 可以正常启动了，但是浏览器中还是空白的。"}),"\n",(0,s.jsx)(n.p,{children:"查看控制台，HTML 渲染正常，但是 JS 没有挂载到 root 根节点，问题定位到入口函数。"}),"\n",(0,s.jsx)(n.p,{children:"这个项目是一个 UI 组件库。生产环境下是一个入口（index.js），开发环境是另一个入口（index2.js），所以需要配置两个入口文件，然后根据环境不同，使用不同的入口函数。"}),"\n",(0,s.jsx)(n.p,{children:"路径文件中增加配置项 path.js"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"appIndexJs: resolveModule(resolveApp, 'src/index'),\napplocalIndexJs: resolveModule(resolveApp, 'src/index2'),\n"})}),"\n",(0,s.jsx)(n.p,{children:"webpack 根据环境设置入口"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"entry: [\n  isEnvDevelopment ? paths.applocalIndexJs : paths.appIndexJs,\n]\n"})}),"\n",(0,s.jsx)(n.p,{children:"此时 entry 就正常了"}),"\n",(0,s.jsxs)(n.h3,{id:"问题4-模块循环引用",children:["问题4 模块循环引用",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#问题4-模块循环引用",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"早期代码存在存在循环引用，其中两个模块对外暴露很多函数，不同函数互相引用，造成循环引用。"}),"\n",(0,s.jsx)(n.p,{children:"从代码层面，我先解决了循环引用的问题，这样也便于后面单元测试和模块的维护。"}),"\n",(0,s.jsx)(n.p,{children:"从 webpack 打包构建层面，可以使用 CircularDependencyPlugin 避免循环引用的问题，配置如下。"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const CircularDependencyPlugin = require('circular-dependency-plugin');\n\nplugins: [\n  new CircularDependencyPlugin({\n    exclude: /node_modules/,\n    include: /src/,\n    failOnError: false,\n    allowAsyncCycles: false,\n    cwd: process.cwd(),\n  }),\n],\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"问题5-模块-splitchunk-问题",children:["问题5 模块 splitChunk 问题",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#问题5-模块-splitchunk-问题",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"早期项目是一个 UI 项目，为了使用方便，使用了按需加载的语法实现，避免将全部 UI 项目引入到项目中。所以早期的代码如下："}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"optimization: {\n  splitChunks: {\n    chunks: 'all',\n    name: false,\n  },\n  runtimeChunk: {\n    name: entrypoint => `runtime-${entrypoint.name}`,\n  },\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"根据实际情况，在开发环境下不需要按需加载，在生产环境下需要按需加载，那么加入判断"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"optimization: {\n  splitChunks: isEnvProduction ? {\n    chunks: 'all',\n    name: false,\n  } : false,\n  runtimeChunk: isEnvProduction ? {\n    name: entrypoint => `runtime-${entrypoint.name}`,\n  } : false,\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"修改后，再次运行 npm start，终端显示正常，浏览器中打开 localhost: 3000 项目可以正常启动。"}),"\n",(0,s.jsxs)(n.h2,{id:"反思",children:["反思",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#反思",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"1、webpack 注意版本号，网上很多博客可能是 3.x 或者 4.x 的版本，这样造成配置文件不合适。"}),"\n",(0,s.jsx)(n.p,{children:"2、webpack 插件很多很多，后续还是要多学习。"}),"\n",(0,s.jsx)(n.p,{children:"3、几年前刚开始学习计算机，自己看到 webpack 配置一头雾水，现在大概知道主要配置，能解决一些常见问题了，确实需要不断积累和应用。"}),"\n",(0,s.jsxs)(n.h2,{id:"参考链接",children:["参考链接",(0,s.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#参考链接",children:"#"})]}),"\n",(0,s.jsx)(n.p,{children:"webpack 官方的插件文档"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://webpack.docschina.org/plugins/",target:"_blank",rel:"noopener noreferrer",children:"https://webpack.docschina.org/plugins/"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://webpack.docschina.org/awesome-webpack/#Webpack-Plugins",target:"_blank",rel:"noopener noreferrer",children:"https://webpack.docschina.org/awesome-webpack/#Webpack-Plugins"})}),"\n",(0,s.jsx)(n.p,{children:"splitTrunk 配置和功能"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://juejin.cn/post/6844903680307625997",target:"_blank",rel:"noopener noreferrer",children:"https://juejin.cn/post/6844903680307625997"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://juejin.cn/post/6844904195737255943",target:"_blank",rel:"noopener noreferrer",children:"https://juejin.cn/post/6844904195737255943"})})]})}function i(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}let d=i;i.__RSPRESS_PAGE_META={},i.__RSPRESS_PAGE_META["webpack%2F41-webpack%E6%9B%B4%E6%96%B0%E7%89%88%E6%9C%AC%E5%90%8E%E6%8A%A5%E9%94%99Starting%20the%20development%20server.md"]={toc:[{text:"问题描述",id:"问题描述",depth:2},{text:"问题分析",id:"问题分析",depth:2},{text:"问题1 3000 端口占用",id:"问题1-3000-端口占用",depth:3},{text:"问题2 环境变量 sourcemap 配置",id:"问题2-环境变量-sourcemap-配置",depth:3},{text:"问题3 项目的入口函数",id:"问题3-项目的入口函数",depth:3},{text:"问题4 模块循环引用",id:"问题4-模块循环引用",depth:3},{text:"问题5 模块 splitChunk 问题",id:"问题5-模块-splitchunk-问题",depth:3},{text:"反思",id:"反思",depth:2},{text:"参考链接",id:"参考链接",depth:2}],title:"Starting the development server 报错和解决",frontmatter:{}}}}]);