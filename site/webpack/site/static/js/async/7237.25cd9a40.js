"use strict";(self.webpackChunk=self.webpackChunk||[]).push([["7237"],{9243:function(e,n,s){s.r(n),s.d(n,{default:function(){return l}});var a=s(6469),d=s(8809);function r(e){let n=Object.assign({h2:"h2",a:"a",h3:"h3",h4:"h4",p:"p",pre:"pre",code:"code"},(0,d.ah)(),e.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.h2,{id:"webpack",children:["webpack",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#webpack",children:"#"})]}),"\n",(0,a.jsxs)(n.h3,{id:"1菜鸟教程",children:["1、菜鸟教程",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#1菜鸟教程",children:"#"})]}),"\n",(0,a.jsxs)(n.h4,{id:"入门",children:["入门",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#入门",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"http://www.runoob.com/w3cnote/webpack-tutorial.html",target:"_blank",rel:"noopener noreferrer",children:"http://www.runoob.com/w3cnote/webpack-tutorial.html"})}),"\n",(0,a.jsx)(n.p,{children:"webpack 作用：将多个静态资源转化成一个静态文件。将多个less/css转化成一个css文件，减少页面的请求。"}),"\n",(0,a.jsx)(n.p,{children:"安装(可以全局安装)可以单文件安装"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"sudo npm install webpack -g\nsudo npm install webpack-cli -g\n"})}),"\n",(0,a.jsx)(n.p,{children:"注意：在webpack3 版本(3.8.1)中 webpack-cli 在 webpack 内部。在 webpack 4版本中，这两个包分开存放。"}),"\n",(0,a.jsx)(n.p,{children:"目前，在全局下安装4.29.0 版本的webpack and webpack-cli"}),"\n",(0,a.jsxs)(n.h4,{id:"测试一-简单js",children:["测试一 简单JS",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测试一-简单js",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'mkdir folder\ncd folder\ntouch index.html\n# write index.html and use src="./dist/main.min.js"\n\ntouch index.js\nvim index.js (document.write("hello");)\n\nnpm init\n'})}),"\n",(0,a.jsx)(n.p,{children:"在 package.json 中配置输入输出文件"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'{\n  "name": "test-webpack",\n  "version": "1.0.0",\n  "description": "learn-webpack",\n  "main": "main.min.js",\n  "mode": "development",\n  "author": "Michael An",\n  "license": "ISC",\n  "devDependencies": {\n    "webpack": "^3.8.1",\n    "webpack-cli": "^3.2.1"\n  }\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"现在改成全局只安装 webpack 3.8.1"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"webpack index.js ./dist/index.min.js\n"})}),"\n",(0,a.jsx)(n.p,{children:"入口文件是 index.js 输出文件是 ./dist/index.min.js 即可编译"}),"\n",(0,a.jsx)(n.p,{children:"下面是成功的信息"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"Hash: 51b7993012df7526eade\nVersion: webpack 3.8.1\nTime: 41ms\n       Asset    Size  Chunks             Chunk Names\nindex.min.js  2.5 kB       0  [emitted]  main\n   [0] ./index.js 30 bytes {0} [built]\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"测试二-复杂js",children:["测试二 复杂JS",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测试二-复杂js",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"// sum.js\nmodule.exports('IT work');\n\n// index.js\ndocument.write(require('./sum.js'));\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"webapck ./test-2/index.js ./test-2/index.min.js\n"})}),"\n",(0,a.jsx)(n.p,{children:"webpack 根据每一个模块的关系进行静态分析，给每一个模块一个唯一的ID，并通过这个id索引和访问模块。首先启动index.js 然后其他模块会在运行 require 的时候运行。"}),"\n",(0,a.jsxs)(n.h4,{id:"测试三-loader",children:["测试三 loader",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测试三-loader",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"loader 目的：webpack只能处理JS代码，loader进行转换，可以处理 css and jsx 文件。"}),"\n",(0,a.jsx)(n.p,{children:"css文件需要 css-loader 和 style-loader。css-loader 会遍历css文件，然后找到URL() 表达式然后处理。style-loader 会把原来的CSS代码插入到页面中的 style 标签中。"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install css-loader style-loader\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-css",children:"/* style.css */\nbody {\n  background: skyblue;\n}\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"// index.js\nrequire(\"!style-loader!css-loader!./style.css\");\ndocument.write('./sum.js');\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'// sum.js\nmodule.exports = "hello skyblue";\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"webpack index.js index.min.js\n"})}),"\n",(0,a.jsx)(n.p,{children:"信息"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Hash: e729b0347abc5817557e\nVersion: webpack 3.8.1\nTime: 342ms\n       Asset     Size  Chunks             Chunk Names\nindex.min.js  19.8 kB       0  [emitted]  main\n   [0] ./test-3/index.js 78 bytes {0} [built]\n   [1] ./node_modules/style-loader!./node_modules/css-loader/dist/cjs.js!./test-3/style.css 1.08 kB {0} [built]\n   [2] ./node_modules/css-loader/dist/cjs.js!./test-3/style.css 174 bytes {0} [built]\n    + 3 hidden modules\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"测试4-配置文件",children:["测试4 配置文件",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测试4-配置文件",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"我们可以将编译的选项放在设置文件中，直接运行 webpack 即可编译。"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:'// webpack.config.js\nmodule.exports = {\n  entry: "./index.js",\n  output: {\n    path: __dirname,\n    filename: "index.min.js"\n  },\n  module: {\n    loaders: [\n      { test: /\\.css$/, loader:"style-loader!css-loader" }\n    ]\n  }\n};\n'})}),"\n",(0,a.jsxs)(n.h4,{id:"测试5-插件",children:["测试5 插件",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测试5-插件",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:"配置 plugins 用于完成其他功能（文件头部输出一些注释信息）"}),"\n",(0,a.jsx)(n.p,{children:"使用内置插件需要"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install webpack --save-dev\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"// webpack.config.js\nvar webpack = require('webpack');\nmodule.exports = {\n  entry: '',\n  output: {},\n  module: {},\n  plugins: [\n    new webpack.BannerPlugin(\"hello test\")\n  ]\n}\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"测试6-开发环境",children:["测试6 开发环境",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#测试6-开发环境",children:"#"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"webpack --progress --colors --watch\n"})}),"\n",(0,a.jsx)(n.p,{children:"编译输出内容具有进度和颜色（大项目）"}),"\n",(0,a.jsx)(n.p,{children:"watch表示监听模式。没有变化的模块会缓存到内存中，不需要每次重新编译。"}),"\n",(0,a.jsx)(n.p,{children:"Webpack-dev-server 开发服务，可以通过 localhost:8080 启动一个静态资源 express web 服务器，会以监听模式自动运行 webpack。可以打开浏览器中的 8080查看。并且通过一个 socker.io 服务实时监听项目变化，并自动刷新界面。"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install webpack-dev-server -g\nwebpack-dev-server --progress --colors\n"})}),"\n",(0,a.jsx)(n.p,{children:"现在提示 webpack-cli 没有安装"}),"\n",(0,a.jsxs)(n.h3,{id:"2官方教程",children:["2、官方教程",(0,a.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#2官方教程",children:"#"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://www.webpackjs.com/concepts/",target:"_blank",rel:"noopener noreferrer",children:"https://www.webpackjs.com/concepts/"})}),"\n",(0,a.jsx)(n.p,{children:"4.0.0 版本后可能不需要配置文件"})]})}function c(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,d.ah)(),e.components);return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(r,{...e})}):r(e)}let l=c;c.__RSPRESS_PAGE_META={},c.__RSPRESS_PAGE_META["webpack%2Fwebpack3-readme.md"]={toc:[{text:"webpack",id:"webpack",depth:2},{text:"1、菜鸟教程",id:"1菜鸟教程",depth:3},{text:"入门",id:"入门",depth:4},{text:"测试一 简单JS",id:"测试一-简单js",depth:4},{text:"测试二 复杂JS",id:"测试二-复杂js",depth:4},{text:"测试三 loader",id:"测试三-loader",depth:4},{text:"测试4 配置文件",id:"测试4-配置文件",depth:4},{text:"测试5 插件",id:"测试5-插件",depth:4},{text:"测试6 开发环境",id:"测试6-开发环境",depth:4},{text:"2、官方教程",id:"2官方教程",depth:3}],title:"",frontmatter:{}}}}]);