{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u8fd9\u662f Python \u5b66\u4e60\u6587\u6863","title":"index"},{"location":"00-introduction/log/","text":"Learning Python log \u00b6 2014 \u00b6 Python is a special programming language.I found this language in a book and learned the basic grammar. But at that time I didn't have sufficient time to learn it. I knew python was a glue language. It could combine C and C++ language. Most of my friends learned java at that time. I chose another direction(webpage and front-end). 2018 \u00b6 I learn python in my free time. Because some of website and server codes in my project are written by python. If you want to know Django you must know basic python. And the core code was written by C. I found python can run directly without build, just like javascript running in browser. You can just use 'python test.py' to run a python code. Isn't that convenient? And python can also build then run. The second way is more useful in development software. The main target for learning python is that I could read some codes written by python rather than write them by myself. Some grammars in python are similar with C. And we can import some useful functions outside. 2019 \u00b6 Try to use python to create html. Change different parameters can generate different pages.Learn some useful component, os. os.system('mkdir test') can write bash directly. Learn turtle to draw a snack. just like a canvas in JS. Learn time component. we can use time.sleep(5) or os.system('pause') to break python run. Learn complex data in python. List, Tiple, Dict are three main data structure in python. List is similar to Array in JS, and have same APIs, pop and insert. Tiple is similar to complex array in JS, but it use (1,2,3,[1,2]) rather than {1, 2, 3} . It can contain other data stucture inside. The last one is Dict. It is similar to JOSN in js. Use for key in data can get different value. Relearn some basic linux operation system knowledge. The basic file tree is different with windowsOS. And use termnal to create, delete, update, find some files and folters. The basic database knowledge shoule relearn soon. And django frontend page need to learn soon. Time is fast and I learn something about spider. If you want to run a python file without a project, you should install some dependences in your python menu, such as requests. So that you can use import requests in your python single file. If you use a project, you can put your dependences into a requirement.txt file and python can install them automatically. A friend told me, programm language is not important. The most important thing is coding thoughts. And reading much related books is also helpful. Using recommand method calculates similarity between differnent things. And in different dimensions, recommand method can cause incorrect result. Use Persion colleration coefficient to balance deviation in high dimensions. The basic method is multivariate statistical analysis. Start to learn Flask, it is a simple network framework. It is small and we can use it to build some SPAs.These days I review basic JS ES5 and ES6. It is more important than basic python for me. Data structure is same in every language, I should learn it well first, then learn different language in several aspects. Learning python is suspended because there are so much work in JS and leetcode during there monthes. 2020 \u00b6 I want to build a local network with frontend, backend and database. First I try to use Django and mysql as my backend structure. I found Django is complexible and I could not install python-mysql correctly. Django is large but I can't use it well. Then I find Flask is small and python3 give us SQlite, so I can use python3 to generate a database based on sqlite. Next several days I will try my best to build this webpage, just use local codes. Just for my own joy. In th future, I will build a whole webpage and put it into web (maybe use nginx as server in linux). Basic flask and mysql! I learn a little net spider and data analysis(pandas and janda) .It is amazing. Spider: I use requests to send HTML request and use BeautifulSoup to generate useful DOM. The demo is finding ranks in a real webpage.Data analysis: I use jieba and pandas to analysis csv files and get comments numbers to export into excel files. Todo: learn some detail about spider and data analysis. 2024 \u00b6 Recently, while refactoring this project, I discovered an abundance of content but question how much of it I've actually mastered. I've been reflecting on why I started learning Python and what I've actually learned. Python boasts numerous third-party libraries with diverse functions, which I cannot possibly learn all. If I were to attempt to learn everything, it would be a waste of time and there simply aren't any practical scenarios for it. In my daily work, I use Python as the backend framework for our projects, primarily Django but also Flask. During my free time, I employ Python spiders to gather information from web pages or convert file types. Additionally, I use Python to tackle some Leetcode issues. Therefore, now I need to focus on three areas: Mastering the basic syntax of Python3 to tackle Leetcode issues. Understanding the Django and Flask backend frameworks to grasp the logic in my work. Learning additional tools like bs4 to extract information from web pages. For now, I will not prioritize learning other non-essential third-party libraries. I will focus on the aforementioned areas first.","title":"log"},{"location":"00-introduction/log/#learning-python-log","text":"","title":"Learning Python log"},{"location":"00-introduction/log/#2014","text":"Python is a special programming language.I found this language in a book and learned the basic grammar. But at that time I didn't have sufficient time to learn it. I knew python was a glue language. It could combine C and C++ language. Most of my friends learned java at that time. I chose another direction(webpage and front-end).","title":"2014"},{"location":"00-introduction/log/#2018","text":"I learn python in my free time. Because some of website and server codes in my project are written by python. If you want to know Django you must know basic python. And the core code was written by C. I found python can run directly without build, just like javascript running in browser. You can just use 'python test.py' to run a python code. Isn't that convenient? And python can also build then run. The second way is more useful in development software. The main target for learning python is that I could read some codes written by python rather than write them by myself. Some grammars in python are similar with C. And we can import some useful functions outside.","title":"2018"},{"location":"00-introduction/log/#2019","text":"Try to use python to create html. Change different parameters can generate different pages.Learn some useful component, os. os.system('mkdir test') can write bash directly. Learn turtle to draw a snack. just like a canvas in JS. Learn time component. we can use time.sleep(5) or os.system('pause') to break python run. Learn complex data in python. List, Tiple, Dict are three main data structure in python. List is similar to Array in JS, and have same APIs, pop and insert. Tiple is similar to complex array in JS, but it use (1,2,3,[1,2]) rather than {1, 2, 3} . It can contain other data stucture inside. The last one is Dict. It is similar to JOSN in js. Use for key in data can get different value. Relearn some basic linux operation system knowledge. The basic file tree is different with windowsOS. And use termnal to create, delete, update, find some files and folters. The basic database knowledge shoule relearn soon. And django frontend page need to learn soon. Time is fast and I learn something about spider. If you want to run a python file without a project, you should install some dependences in your python menu, such as requests. So that you can use import requests in your python single file. If you use a project, you can put your dependences into a requirement.txt file and python can install them automatically. A friend told me, programm language is not important. The most important thing is coding thoughts. And reading much related books is also helpful. Using recommand method calculates similarity between differnent things. And in different dimensions, recommand method can cause incorrect result. Use Persion colleration coefficient to balance deviation in high dimensions. The basic method is multivariate statistical analysis. Start to learn Flask, it is a simple network framework. It is small and we can use it to build some SPAs.These days I review basic JS ES5 and ES6. It is more important than basic python for me. Data structure is same in every language, I should learn it well first, then learn different language in several aspects. Learning python is suspended because there are so much work in JS and leetcode during there monthes.","title":"2019"},{"location":"00-introduction/log/#2020","text":"I want to build a local network with frontend, backend and database. First I try to use Django and mysql as my backend structure. I found Django is complexible and I could not install python-mysql correctly. Django is large but I can't use it well. Then I find Flask is small and python3 give us SQlite, so I can use python3 to generate a database based on sqlite. Next several days I will try my best to build this webpage, just use local codes. Just for my own joy. In th future, I will build a whole webpage and put it into web (maybe use nginx as server in linux). Basic flask and mysql! I learn a little net spider and data analysis(pandas and janda) .It is amazing. Spider: I use requests to send HTML request and use BeautifulSoup to generate useful DOM. The demo is finding ranks in a real webpage.Data analysis: I use jieba and pandas to analysis csv files and get comments numbers to export into excel files. Todo: learn some detail about spider and data analysis.","title":"2020"},{"location":"00-introduction/log/#2024","text":"Recently, while refactoring this project, I discovered an abundance of content but question how much of it I've actually mastered. I've been reflecting on why I started learning Python and what I've actually learned. Python boasts numerous third-party libraries with diverse functions, which I cannot possibly learn all. If I were to attempt to learn everything, it would be a waste of time and there simply aren't any practical scenarios for it. In my daily work, I use Python as the backend framework for our projects, primarily Django but also Flask. During my free time, I employ Python spiders to gather information from web pages or convert file types. Additionally, I use Python to tackle some Leetcode issues. Therefore, now I need to focus on three areas: Mastering the basic syntax of Python3 to tackle Leetcode issues. Understanding the Django and Flask backend frameworks to grasp the logic in my work. Learning additional tools like bs4 to extract information from web pages. For now, I will not prioritize learning other non-essential third-party libraries. I will focus on the aforementioned areas first.","title":"2024"},{"location":"00-introduction/structure/","text":"\u6587\u6863\u7ed3\u6784\u53ca\u8bf4\u660e \u00b6 \u7cfb\u7edf\u6027\u5b66\u4e60\uff1a\u907f\u514d\u788e\u7247\u5316\u77e5\u8bc6\uff1b\u76ee\u6807\u5bfc\u5411\u5b66\u4e60\uff1a\u9700\u8981\u4ec0\u4e48\u5c31\u5b66\u4e60\u4ec0\u4e48 \u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a basic: python3 \u57fa\u672c\u8bed\u6cd5 database: \u57fa\u672c\u6570\u636e\u5e93\uff08SQL\u3001mysql\u3001sqlite\uff09 docker: \u57fa\u672c\u5f00\u53d1\u73af\u5883 Django: \u91cd\u91cf\u7ea7 web \u540e\u7aef\u6846\u67b6 flask: \u8f7b\u91cf\u7ea7 web \u540e\u7aef\u6846\u67b6 third-part-lib: \u5176\u4ed6\u7b2c\u4e09\u65b9\u5e93","title":"structure"},{"location":"00-introduction/structure/#_1","text":"\u7cfb\u7edf\u6027\u5b66\u4e60\uff1a\u907f\u514d\u788e\u7247\u5316\u77e5\u8bc6\uff1b\u76ee\u6807\u5bfc\u5411\u5b66\u4e60\uff1a\u9700\u8981\u4ec0\u4e48\u5c31\u5b66\u4e60\u4ec0\u4e48 \u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a basic: python3 \u57fa\u672c\u8bed\u6cd5 database: \u57fa\u672c\u6570\u636e\u5e93\uff08SQL\u3001mysql\u3001sqlite\uff09 docker: \u57fa\u672c\u5f00\u53d1\u73af\u5883 Django: \u91cd\u91cf\u7ea7 web \u540e\u7aef\u6846\u67b6 flask: \u8f7b\u91cf\u7ea7 web \u540e\u7aef\u6846\u67b6 third-part-lib: \u5176\u4ed6\u7b2c\u4e09\u65b9\u5e93","title":"\u6587\u6863\u7ed3\u6784\u53ca\u8bf4\u660e"},{"location":"01-basic/01-%E6%90%AD%E5%BB%BApython3%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/","text":"Mac \u642d\u5efa python3 \u5f00\u53d1\u73af\u5883 \u00b6 ctime: 2021-08-30 mtime: 2024-03-25 \u95ee\u9898\u63cf\u8ff0 \u00b6 \u6211\u672c\u5730\u9700\u8981\u8fd0\u884c\u4e00\u4e2a Django3 \u7684\u9879\u76ee\uff0cDjango3 \u9700\u8981 python3 \u7684\u5f00\u53d1\u73af\u5883\uff0c\u6211\u7684 MAC \u4e0a\u9ed8\u8ba4\u5b89\u88c5 python 2.7.10 \u7248\u672c\uff0c\u6240\u4ee5\u9700\u8981\u65b0\u5efa\u4e00\u4e2a python3 \u7684\u5f00\u53d1\u73af\u5883\u3002 \u56e0\u4e3a\u5176\u4ed6\u9879\u76ee\u4f1a\u4f7f\u7528 python2 \u7684\u5f00\u53d1\u73af\u5883\u3002\u4e3a\u4e86\u907f\u514d\u9879\u76ee\u4e92\u76f8\u5e72\u6270\uff0c\u6211\u4f7f\u7528 virtualenv \u5206\u522b\u642d\u5efa py2 \u548c py3 \u7684\u5f00\u53d1\u73af\u5883\u3002 \u5b89\u88c5 python3 \u00b6 \u5982\u679c\u7535\u8111\u4e0a\u6ca1\u6709 python3\uff0c\u9700\u8981\u4e0b\u8f7d\u5b89\u88c5\uff1b\u5982\u679c\u5df2\u7ecf\u6709 python3\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u7ae0\uff1a \u5b89\u88c5\u811a\u672c\u5982\u4e0b\uff1a wget https://www.python.org/ftp/python/3.4.3/Python-3.4.3.tgz tar zxvf Python-3.4.3.tgz cd Python-3.4.3 ./configure --enable-shared --prefix = /usr/local make && make altinstall \u5b89\u88c5\u5176\u5b83\u7248\u672c\u7684 python \u53ef\u4ece\u5b98\u7f51\u4e0b\u8f7d\uff1a https://www.python.org/ \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u8f93\u5165 python3 \u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6210\u529f\uff08\u6211\u672c\u5730\u5b89\u88c5\u7684 3.7.0 \u7248\u672c\uff09 \u642d\u5efa python3 \u5f00\u53d1\u73af\u5883 \u00b6 1\u3001\u5b89\u88c5 virtualenv\uff0c\u53ef\u4ee5\u901a\u8fc7 pip \u8fdb\u884c\u5b89\u88c5\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a pip install virtualenv 2\u3001\u521b\u5efa\u865a\u62df\u73af\u5883\uff1a \u6ce8\u610f\uff1a\u8fd9\u91cc python3.7 \u5bf9\u5e94\u4f60\u5b89\u88c5\u7684\u7248\u672c\uff083.4 \u6216\u8005 3.7\uff09 virtualenv -p /usr/local/bin/python3.7 # \u4f60\u7684\u865a\u62df\u73af\u5883\u7684\u540d\u79f0\uff08\u4f8b\u5982\uff0cpy37-michael-blog-env\uff09 \u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u540e\uff0c\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efa\u865a\u62df\u73af\u5883\u6587\u4ef6\u5939\uff08py37-michael-blog-env\uff09\u3002 3\u3001\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff1a source py37-michael-blog-env/bin/activate pip install -r requirements.txt \u8fdb\u884c\u76f8\u5173\u5f00\u53d1 4\u3001\u9000\u51fa\u865a\u62df\u73af\u5883 deactivate \u3000\u3000\u3000\u3000\u3000\u3000 \u518d\u6b21\u8fdb\u5165\u9879\u76ee\u65f6\uff0c\u53ea\u9700\u8981\u6267\u884c 3-4 \u6b65\u9aa4\u5373\u53ef\uff08\u6fc0\u6d3b-\u5f00\u53d1-\u9000\u51fa\u865a\u62df\u73af\u5883\uff09","title":"01-\u642d\u5efapython3\u5f00\u53d1\u73af\u5883"},{"location":"01-basic/01-%E6%90%AD%E5%BB%BApython3%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#mac-python3","text":"ctime: 2021-08-30 mtime: 2024-03-25","title":"Mac \u642d\u5efa python3 \u5f00\u53d1\u73af\u5883"},{"location":"01-basic/01-%E6%90%AD%E5%BB%BApython3%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#_1","text":"\u6211\u672c\u5730\u9700\u8981\u8fd0\u884c\u4e00\u4e2a Django3 \u7684\u9879\u76ee\uff0cDjango3 \u9700\u8981 python3 \u7684\u5f00\u53d1\u73af\u5883\uff0c\u6211\u7684 MAC \u4e0a\u9ed8\u8ba4\u5b89\u88c5 python 2.7.10 \u7248\u672c\uff0c\u6240\u4ee5\u9700\u8981\u65b0\u5efa\u4e00\u4e2a python3 \u7684\u5f00\u53d1\u73af\u5883\u3002 \u56e0\u4e3a\u5176\u4ed6\u9879\u76ee\u4f1a\u4f7f\u7528 python2 \u7684\u5f00\u53d1\u73af\u5883\u3002\u4e3a\u4e86\u907f\u514d\u9879\u76ee\u4e92\u76f8\u5e72\u6270\uff0c\u6211\u4f7f\u7528 virtualenv \u5206\u522b\u642d\u5efa py2 \u548c py3 \u7684\u5f00\u53d1\u73af\u5883\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"01-basic/01-%E6%90%AD%E5%BB%BApython3%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#python3","text":"\u5982\u679c\u7535\u8111\u4e0a\u6ca1\u6709 python3\uff0c\u9700\u8981\u4e0b\u8f7d\u5b89\u88c5\uff1b\u5982\u679c\u5df2\u7ecf\u6709 python3\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u7ae0\uff1a \u5b89\u88c5\u811a\u672c\u5982\u4e0b\uff1a wget https://www.python.org/ftp/python/3.4.3/Python-3.4.3.tgz tar zxvf Python-3.4.3.tgz cd Python-3.4.3 ./configure --enable-shared --prefix = /usr/local make && make altinstall \u5b89\u88c5\u5176\u5b83\u7248\u672c\u7684 python \u53ef\u4ece\u5b98\u7f51\u4e0b\u8f7d\uff1a https://www.python.org/ \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u8f93\u5165 python3 \u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6210\u529f\uff08\u6211\u672c\u5730\u5b89\u88c5\u7684 3.7.0 \u7248\u672c\uff09","title":"\u5b89\u88c5 python3"},{"location":"01-basic/01-%E6%90%AD%E5%BB%BApython3%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#python3_1","text":"1\u3001\u5b89\u88c5 virtualenv\uff0c\u53ef\u4ee5\u901a\u8fc7 pip \u8fdb\u884c\u5b89\u88c5\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a pip install virtualenv 2\u3001\u521b\u5efa\u865a\u62df\u73af\u5883\uff1a \u6ce8\u610f\uff1a\u8fd9\u91cc python3.7 \u5bf9\u5e94\u4f60\u5b89\u88c5\u7684\u7248\u672c\uff083.4 \u6216\u8005 3.7\uff09 virtualenv -p /usr/local/bin/python3.7 # \u4f60\u7684\u865a\u62df\u73af\u5883\u7684\u540d\u79f0\uff08\u4f8b\u5982\uff0cpy37-michael-blog-env\uff09 \u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u540e\uff0c\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efa\u865a\u62df\u73af\u5883\u6587\u4ef6\u5939\uff08py37-michael-blog-env\uff09\u3002 3\u3001\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff1a source py37-michael-blog-env/bin/activate pip install -r requirements.txt \u8fdb\u884c\u76f8\u5173\u5f00\u53d1 4\u3001\u9000\u51fa\u865a\u62df\u73af\u5883 deactivate \u3000\u3000\u3000\u3000\u3000\u3000 \u518d\u6b21\u8fdb\u5165\u9879\u76ee\u65f6\uff0c\u53ea\u9700\u8981\u6267\u884c 3-4 \u6b65\u9aa4\u5373\u53ef\uff08\u6fc0\u6d3b-\u5f00\u53d1-\u9000\u51fa\u865a\u62df\u73af\u5883\uff09","title":"\u642d\u5efa python3 \u5f00\u53d1\u73af\u5883"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/","text":"\u9ed1\u9a6c\u7a0b\u5e8f\u5458 \u00b6 ctime: 2021-08-30 mtime: 2024-03-25 \u7b2c\u4e00\u5929 Linux \u57fa\u672c\u5165\u95e8 \u00b6 \u64cd\u4f5c\u7cfb\u7edf\uff1aOS operation system\u3002\u64cd\u4f5c\u7cfb\u7edf\u5c31\u662f\u5e94\u7528\u8f6f\u4ef6\u548c\u5e95\u5c42\u786c\u4ef6\u6c9f\u901a\u7684\u6865\u6881\u3002\u5e94\u7528\u8f6f\u4ef6\u4e0d\u80fd\u76f4\u63a5\u5728\u786c\u4ef6\u4e0a\u8fd0\u884c\u3002\u64cd\u4f5c\u7cfb\u7edf\u5141\u8bb8\u591a\u4e2a\u5e94\u7528\u540c\u65f6\u8fd0\u884c\u3002\u5728 Java \u865a\u62df\u673a\u4e0a\u53ef\u4ee5\u8fd0\u884c\u5355\u72ec\u7684\u7a0b\u5e8f\uff0c\u4e0d\u80fd\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff08\u5d4c\u5165\u5f0f\u5f00\u53d1\uff09\u3002 Unix \u7cfb\u7edf\u76ee\u5f55\u7ed3\u6784\uff1a\u6811\u72b6\u7ed3\u6784\u3002\u6839\u76ee\u5f55\u662f/\u3002 /user/local/home \u5e38\u7528\u6307\u4ee4 \u00b6 \u8f93\u51fa\u6587\u4ef6 # > >> \u8868\u793a\u628a\u7ed3\u679c\u8f93\u51fa\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d # \u7b2c\u4e00\u4e2a\u662f\u8986\u76d6\u539f\u59cb\u6587\u4ef6\uff0c\u7b2c\u4e8c\u4e2a\u662f\u6dfb\u52a0\u5728\u539f\u59cb\u6587\u4ef6\u540e\u9762 ls -al > readme.txt ls -al >> warning.md \u524d\u540e\u7ffb\u9875 # \u6309\u4f4fF\u6216\u8005B\u524d\u7ffb\u9875\u6216\u8005\u540e\u7ffb\u9875\uff0cforward-back f b \u67e5\u770b\u7f16\u8f91\u6587\u4ef6 cat a.md more a.md vi a.md vim a.md \u8fde\u63a5\u6587\u4ef6\uff1acat \u6253\u5f00\u540e\uff0c\u5c06\u6587\u672c\u7ed3\u679c\u8f93\u51fa\u5230 TXT \u6587\u4ef6\u4e2d cat 1 .txt 2 .txt > xxx.txt \u7ba1\u9053\u7b26 \u7ba1\u9053\u7b26 \u5c06\u524d\u4e00\u4e2a\u547d\u4ee4\u7684\u7ed3\u679c\u5b58\u653e\u5728\u7ba1\u9053\u4e2d\uff0c\u7136\u540e\u4f7f\u7528\u540e\u4e00\u4e2a\u547d\u4ee4\u5904\u7406\u3002\u5e76\u4e0d\u662f\u6240\u6709\u7684\u547d\u4ee4\u90fd\u53ef\u4ee5\u4f7f\u7528\u7ba1\u9053\u7b26\u3002\u7ba1\u9053\u7b26\u901a\u5e38\u548c\u67e5\u627e\u8fc7\u6ee4 grep \u7ec4\u5408\uff0c\u5c06\u4e00\u4e2a\u7ed3\u679c\u901a\u8fc7\u7ba1\u9053\u8fc7\u6ee4\u5e76\u627e\u5230\u53e6\u4e00\u4e2a\u6307\u5b9a\u7684\u547d\u4ee4\u3002 \u4e00\u884c\u4e4b\u5185\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2a\u7ba1\u9053\u7b26\u3002\u5982\u679c\u60f3\u8981\u540c\u65f6\u8f93\u5165\u4e24\u4e2a\u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528\u5206\u53f7\u9694\u5f00\uff08\u5f88\u5c11\u8fd9\u6837\u5199\uff09\u3002 ls -alh | cat # \u5c06 list \u5185\u5bb9\u653e\u5230\u7ba1\u9053\u4e2d\uff0c\u4f7f\u7528 cat \u8fdb\u884c\u9605\u8bfb\uff08\u66f4\u65b9\u4fbf\uff0c\u4e0d\u9700\u8981\u53e6\u5b58\u4e3a\u6587\u4ef6\uff09\u3002 tree \u5217\u51fa\u6587\u4ef6\uff08\u663e\u793a\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u6863\u7ed3\u6784\uff09 -N \u8868\u793a\u8f93\u51fa\u4e2d\u6587 tree -N -a \u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84 \u00b6 \u5199\u8def\u5f84\u65f6\uff0c\u5982\u679c\u4e0d\u77e5\u9053\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u70b9\u51fb\u4e24\u6b21 TAB \u5c31\u4f1a\u663e\u793a\u5168\u90e8\u7684\u6587\u4ef6\u3002 cd - # \u56de\u5230\u4e0a\u4e00\u6b21\u7684\u76ee\u5f55\u4e2d\uff08\u53ea\u6709\u4e00\u6b21\uff09 cd ~ # \u56de\u5230home\u76ee\u5f55\u4e2d cd / # \u56de\u5230\u6839\u76ee\u5f55\u4e2d mkdir a # create a folder mkdir a/b/c -p # \u5982\u679c\u6ca1\u6709a-b\u6587\u4ef6\u5939\uff0c\u76f4\u63a5\u76f4\u63a5\u521b\u5efa\u591a\u4e2a\u5c42\u7ea7\u4e0b\u9762\u7684\u6587\u4ef6\u5939\u3002 grep \u67e5\u627e\u6587\u4ef6\u5185\u5bb9 \u00b6 \u67e5\u627e\u5b57\u7b26\u4e32\uff0c\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f # \u5728xxx.txt \u6587\u4ef6\u5185\u90e8\u67e5\u627e test \u5b57\u7b26\u4e32 grep 'test' xxx.txt grep '^ntfs$' 1 .txt # \u67e5\u8be2\u4ee5\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5185\u5bb9 find \u67e5\u627e\u6587\u4ef6\u540d \u00b6 \u641c\u7d22\u6587\u4ef6\uff1agrep \u662f\u4ece\u6587\u4ef6\u5185\u90e8\u8fdb\u884c\u68c0\u7d22\uff1bfind \u662f\u68c0\u7d22\u6587\u4ef6\u540d find ./ -name '*vim*' # \u67e5\u627e \u5728./\u76ee\u5f55\u4e0b \u67e5\u627e\u6587\u4ef6\u540d \u6587\u4ef6\u540d\u4e2d\u5305\u542b vim find ./ -size +10M -size -100M # \u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\u67e5\u627e\u6587\u4ef6\u5927\u4e8e10M\uff0c\u5c0f\u4e8e100MB\u7684\u6587\u4ef6 tar \u00b6 \u6253\u5305\u89e3\u5305 tar -cvf test.tar *.py # \u5c06\u5f53\u524d\u7684py\u6587\u4ef6\u6253\u5305\u6210\u4e3a test.tar tar -xvf test.tar # \u5c06 test.tar \u89e3\u538b\u7f29\u5728\u5f53\u524d\u8def\u5f84\u4e2d gz \u538b\u7f29\u89e3\u538b\u7f29 \u91cd\u70b9 \u00b6 tar -zcvf test.tar.gz *.py tar -zxvf test.tar.gz tar -jcvf test.tar.bz2 *.py tar -jxvf test.tar.bz2 zip test.zip *.py unzip test.zip # zip file is largest, so we use gz instead. which \u00b6 which ls \u67e5\u770b\u547d\u4ee4\u6240\u5728\u7684\u539f\u59cb\u8def\u5f84\uff08\u6bcf\u4e00\u4e2a\u547d\u4ee4\u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6\uff09 \u65e5\u671f \u00b6 cal \u65e5\u5386\uff1acalender \u663e\u793a\u65e5\u5386 cal -y 2018 > data.txt data \u65e5\u671f\uff1a\u663e\u793a\u5f53\u524d\u7684\u65f6\u95f4 \u7cfb\u7edf\u76f8\u5173\u547d\u4ee4 \u00b6 ps \u00b6 process \u67e5\u770b\u8fdb\u7a0b\u4fe1\u606f \u628a\u8fdb\u7a0b\u663e\u793a\u4e00\u6b21 ps -aux # all process top \u00b6 \u5c06\u8fdb\u7a0b\u5b9e\u65f6\u663e\u793a\u5728\u7f16\u8f91\u5668\u4e2d htop \u00b6 top \u52a0\u5f3a\u7248\u672c kill \u00b6 \u6d88\u706d\u8fdb\u7a0b kiss -9 9822(PIN) \u5f3a\u5236\u6740\u6b7b shutdown \u5173\u673a shutdown -h now \u7acb\u523b\u5173\u673a reboot \u91cd\u542f df -h \u6574\u4e2a\u786c\u76d8\u7684\u4f7f\u7528\u60c5\u51b5 du -h \u5f53\u524d\u6587\u4ef6\u5939\u5927\u5c0f ifconfig \u67e5\u770b\u5f53\u524d\u7f51\u7edc\u4fe1\u606f ifconfig ens33 192.16.7.139 \u6539\u7f51\u5361\u7684 ip \u5730\u5740 ping \u53ef\u4ee5\u67e5\u770b\u5c40\u57df\u7f51\u662f\u5426\u901a\u7545 \u67e5\u770b\u7535\u8111\u7684\u7cfb\u7edf\u548c\u865a\u62df\u673a\u7684\u7f51\u7edc\u662f\u5426\u8fde\u901a ifconfig | grep 172 \u548c\u7528\u6237\u76f8\u5173\u7684\u547d\u4ee4\uff1b\u591a\u7528\u6237\uff0c\u591a\u4efb\u52a1\u64cd\u4f5c\u7cfb\u7edf Ubuntu SSH \u00b6 ssh username@172.16.7.139 \u8fdc\u7a0b\u767b\u5f55\u53e6\u4e00\u53f0\u7535\u8111:\u7528\u6237\u540d@ip \u5730\u5740 \u8fd9\u6837\u53ef\u4ee5\u5728\u5bbf\u4e3b\u673a\u4e0a\u64cd\u4f5c\u865a\u62df\u673a\u7684\u5185\u5bb9 \u4e4b\u540e\u8f93\u5165\u53e6\u4e00\u53f0\u7535\u8111\u7684\u5bc6\u7801\u5c31\u884c\u3002\u5982\u679c\u516c\u53f8\u7684\u670d\u52a1\u5668\u574f\u4e86\uff0c\u53ef\u4ee5\u8fdc\u7a0b\u8fde\u63a5\u670d\u52a1\u5668\u8fdb\u884c\u4fee\u7406\u3002 sudo useradd newadmin -m \u521b\u5efa\u4e00\u4e2a\u8d26\u6237\u548c\u5bf9\u5e94\u7684\u4e00\u4e2a\u6587\u4ef6\u5939\uff08\u7528\u6237\u540d\u548c\u6587\u4ef6\u540d\u76f8\u540c\uff09 sudo passwd newadmin \u66f4\u6539/\u8bbe\u7f6e\u67d0\u4e2a\u7528\u6237\u7684\u5bc6\u7801 sudo -s \u4ee5\u8d85\u7ea7\u7ba1\u7406\u5458\u6743\u9650\u767b\u5f55 sudo ifconfig ... \u5728\u539f\u59cb\u8d26\u6237\u4e2d\u4f7f\u7528\u8d85\u7ea7\u7ba1\u7406\u5458\u6743\u9650\u767b\u5f55 \u521b\u5efa\u7528\u6237\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u521b\u5efa\u4e00\u4e2a\u7fa4\u7ec4\u3002\u8fd9\u4e2a\u7fa4\u7ec4\u7684\u6587\u4ef6\u5bf9\u4e8e\u5916\u90e8\u7684\u4f7f\u7528\u8005\u6743\u9650\u4e0d\u540c\uff08\u53ea\u8bfb\u3001\u4fee\u6539\u7b49\uff09 sudo groupadd YYY sudo groupdel YYY cat /etc/group \u53ef\u4ee5\u67e5\u770b\u7fa4\u7ec4\uff0c \u6216\u8005 groupmod \u591a\u70b9\u51e0\u6b21 tab \u5c31\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7fa4\u7ec4\u4fe1\u606f\u3002 \u4e0d\u540c\u7528\u6237\u7684\u521b\u5efa\u548c\u5207\u6362\uff0c\u7ba1\u7406\u5458\u7684\u5207\u6362 sudo -s \u3002 \u7ed9\u67d0\u4e2a\u7fa4\u7ec4\u6dfb\u52a0\u7528\u6237\uff08\u4e86\u89e3\uff09 sudo usermod -a -G \u7fa4\u7ec4\u540d \u7528\u6237\u540d (usermodify) \u9ed8\u8ba4\u521b\u5efa\u7684\u6210\u5458\u6ca1\u6709 sudo \u7684\u7fa4\u7ec4\uff0c\u6240\u4ee5\u6ca1\u6709 sudo \u7684\u6743\u9650\u3002\u521b\u5efa\u540e\u9700\u8981\u5c06\u8fd9\u4e2a\u65b0\u7684\u6210\u5458\u6dfb\u52a0\u5230 sudo \u7fa4\u7ec4\u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528 sudo \u7684\u6743\u9650\u53bb\u7ba1\u7406\u6587\u4ef6\u3002 sudo usermod -a -G adm Michael sudo usermod -a -G sudo Michael # \u5c06\u7528\u6237\u6dfb\u52a0\u5230sudo\u548cadm\u7fa4\u7ec4\u4e2d \u4fee\u6539\u6587\u4ef6\u7684\u6743\u9650 \u00b6 ls \u53ef\u4ee5\u67e5\u770b\u6587\u4ef6\u7684\u6743\u9650\uff08\u5341\u4f4d\uff09\uff1a1+3+3+3 \u6587\u4ef6\u548c\u6587\u4ef6\u5939\u5177\u6709\u4e0d\u540c\u7684\u6743\u9650 - rw- rw- r-- # \u6587\u4ef6 \u6587\u4ef6owner\u6743\u9650 \u540c\u7ec4\u6210\u5458\u6743\u9650 \u5176\u4ed6\u7528\u6237\u6743\u9650 d rwx rwx r-- # \u6587\u4ef6\u5939 directiry r \u8bfb w \u5199 x \u53ef\u6267\u884c\uff08\u7a0b\u5e8f\uff09 \u8fd9\u91cc\u7684\u7528\u6237\u5206\u4e3a\u4e09\u7c7b\uff08user group others\uff09 chmod u=rwx 2.py chmod u=r, g=r,o=r 1.py \u4e0d\u540c\u6743\u9650\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u5b57\u8868\u793a chmod 137 2.py \u5c31\u662f\u6539\u53d8\u4e0d\u540c\u6743\u9650\u6210\u5458\u7684\u8bfb\u5199\u6743\u9650\u3002\uff08\u53ef\u6267\u884c x=1\uff0c \u8bfb r=4, \u5199 w=2\uff09\u8868\u793a\u62e5\u6709\u8005\u53ef\u4ee5 1\uff08\u6267\u884c\u6587\u4ef6\uff09\uff0c\u7fa4\u7ec4\u6210\u5458\u53ef\u4ee5 3\uff08\u53ef\u6267\u884c\uff0c\u53ef\u5199\uff09\uff0c\u5176\u4ed6\u4eba\u53ef\u4ee5 7\uff08\u53ef\u8bfb\u53ef\u5199\u53ef\u6267\u884c\uff09\u3002 VIM \u7f16\u8f91\u5668\u5e38\u7528\u547d\u4ee4 \u00b6 \u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b yy \u590d\u5236 4yy \u590d\u5236\u5f53\u524d\u884c\u5230\u4e0b\u9762\u7b2c\u56db\u884c\u7684\u5185\u5bb9 dd \u5220\u9664 2dd \u5220\u9664\u5230\u4e0b\u9762\u4e24\u884c\u7684\u5185\u5bb9\uff08\u526a\u5207 = \u5220\u9664\uff09 d0 \u884c\u9996\u5230\u5f53\u524d\u5149\u6807 D \u526a\u5207\u5149\u6807\u540e\u9762\u8fd9\u4e00\u884c\u7684\u5185\u5bb9 p \u7c98\u8d34 i \u5149\u6807\u524d\u9762\u63d2\u5165\uff08I \u5728\u884c\u9996\u63d2\u5165\uff09 a \u5149\u6807\u540e\u9762\u52a0\u5165\uff08A \u5728\u884c\u672b\u5c3e\u63d2\u5165\uff09 o \u65b0\u5efa\u4e00\u884c \uff08O \u5728\u4e0a\u4e00\u884c\u65b0\u5efa\u4e00\u884c\uff09 hjkl \u8868\u793a\u56db\u4e2a\u65b9\u5411\u952e\uff08\u548c\u4e0a\u4e0b\u5de6\u53f3\u4e00\u6837\uff09\u4e00\u822c\u7528\u6237jk\u4e0a\u4e0b\u7ffb\u9875 HML\uff08head middle last\uff09\u5149\u6807\u8df3\u8f6c\u5230\u5f53\u524d\u7684\u5c4f\u5e55\u7684\u4e0a\u8fb9\uff0c\u4e2d\u95f4\uff0c\u4e0b\u9762 Ctrl + F \u5411\u4e0b\u7ffb1\u9875 front Ctrl + B \u60f3\u4e0a\u7ffb1\u9875 before 20G \u523020\u884c\u4ee3\u7801 1G \u5230\u5f00\u5934 G \u5230\u7ed3\u5c3e u \u64a4\u9500 Ctrl + R \u53cd\u64a4\u9500 ubuntu \u4e0b\u8f7d\u8f6f\u4ef6 \u00b6 \u4fee\u6539\u56fd\u5185\u955c\u50cf\u914d\u7f6e ubuntu \u9ed8\u8ba4\u4e0b\u8f7d\u7684\u662f\u5b98\u7f51\u7684\u4fe1\u606f\uff0c\u4e0d\u662f\u6e05\u534e\u5927\u5b66\u7684\u955c\u50cf\u7ad9\u4e0b\u8f7d\u5730\u5740\uff08\u66f4\u65b0\u6e90\u3001\u955c\u50cf\u6e90\uff09\u3002 \u5148\u5907\u4efd\u4e4b\u524d\u7684\u6587\u4ef6 sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup \u9996\u5148\u8bbe\u7f6e Ubuntu \u7684\u66f4\u65b0\u5730\u5740\uff08\u9ed8\u8ba4\u4ece\u7f8e\u56fd\u4e0b\u8f7d\u8f6f\u4ef6\u6bd4\u8f83\u6162\uff09\uff0c\u963f\u91cc\u7f51\u6613\u6e05\u534e 163 \u90fd\u53ef\u4ee5\u8bbe\u7f6e\u955c\u50cf\u6e90\u3002 vi /etc/apt/sources.list # \u7f16\u8f91\u4e0b\u8f7d\u6e90\u914d\u7f6e sudo apt-get update # \u5f00\u59cb\u66f4\u65b0\u6e90\uff08\u7f51\u901f\uff0c\u5927\u7ea640MB\uff09 sudo apt-get install XXX\u8f6f\u4ef6 # \u5927\u90e8\u5206\u8f6f\u4ef6\u90fd\u53ef\u4ee5\u627e\u5230 # \u5b89\u88c5 sl \u8f6f\u4ef6\uff0c\u5c0f\u706b\u8f66\u8f6f\u4ef6 sudo apt-get install sl sudo apt-get source package sudo apt-get clean && sudo apt-get autoclean # \u6e05\u7406\u4e0d\u7528\u7684\u5b89\u88c5\u5305 \u955c\u50cf\u6e90\u9700\u8981\u5bf9\u5e94\u7248\u672c 16.04 LTS \u6e05\u534e\u5927\u5b66\u955c\u50cf\u6e90 https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/ Ubuntu \u7684\u8f6f\u4ef6\u6e90\u914d\u7f6e\u6587\u4ef6\u662f /etc/apt/sources.list \u3002\u5c06\u7cfb\u7edf\u81ea\u5e26\u7684\u8be5\u6587\u4ef6\u505a\u4e2a\u5907\u4efd\uff0c\u5c06\u8be5\u6587\u4ef6\u66ff\u6362\u4e3a\u4e0b\u9762\u5185\u5bb9\uff0c\u5373\u53ef\u4f7f\u7528 TUNA \u7684\u8f6f\u4ef6\u6e90\u955c\u50cf \u67e5\u770b /proc/version \u67e5\u770b Ubuntu \u7248\u672c\u53f7\uff0c\u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u53f7\u8fdb\u884c\u66f4\u6539 # \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse \u5e38\u89c1\u670d\u52a1\u5668 \u00b6 ftp \u6587\u4ef6\u4f20\u8f93\u534f\u8bae\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u4fbf\u6377\u7684\u4ece\u672c\u673a\u5411\u865a\u62df\u673a\u4f20\u8f93\u6587\u4ef6\u3002\u5b89\u88c5 file-zilla \u8f6f\u4ef6\u3002 Samba \u6587\u4ef6\u4e0b\u8f7d\u534f\u540c\u7f16\u8f91 \u5728 Linux \u7f16\u8bd1\u8fd0\u884c C \u8bed\u8a00 \u7f16\u5199 c \u8bed\u8a00\u6587\u4ef6\uff0cgcc \u7f16\u8bd1 C \u8bed\u8a00\uff0c\u6267\u884c out \u6587\u4ef6\uff0c\u5373\u53ef\u5728\u7ec8\u7aef\u4e2d\u6267\u884c C \u7a0b\u5e8f\u3002","title":"02-linux\u57fa\u7840"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#_1","text":"ctime: 2021-08-30 mtime: 2024-03-25","title":"\u9ed1\u9a6c\u7a0b\u5e8f\u5458"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#linux","text":"\u64cd\u4f5c\u7cfb\u7edf\uff1aOS operation system\u3002\u64cd\u4f5c\u7cfb\u7edf\u5c31\u662f\u5e94\u7528\u8f6f\u4ef6\u548c\u5e95\u5c42\u786c\u4ef6\u6c9f\u901a\u7684\u6865\u6881\u3002\u5e94\u7528\u8f6f\u4ef6\u4e0d\u80fd\u76f4\u63a5\u5728\u786c\u4ef6\u4e0a\u8fd0\u884c\u3002\u64cd\u4f5c\u7cfb\u7edf\u5141\u8bb8\u591a\u4e2a\u5e94\u7528\u540c\u65f6\u8fd0\u884c\u3002\u5728 Java \u865a\u62df\u673a\u4e0a\u53ef\u4ee5\u8fd0\u884c\u5355\u72ec\u7684\u7a0b\u5e8f\uff0c\u4e0d\u80fd\u8fd0\u884c\u591a\u4e2a\u7a0b\u5e8f\uff08\u5d4c\u5165\u5f0f\u5f00\u53d1\uff09\u3002 Unix \u7cfb\u7edf\u76ee\u5f55\u7ed3\u6784\uff1a\u6811\u72b6\u7ed3\u6784\u3002\u6839\u76ee\u5f55\u662f/\u3002 /user/local/home","title":"\u7b2c\u4e00\u5929 Linux \u57fa\u672c\u5165\u95e8"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#_2","text":"\u8f93\u51fa\u6587\u4ef6 # > >> \u8868\u793a\u628a\u7ed3\u679c\u8f93\u51fa\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d # \u7b2c\u4e00\u4e2a\u662f\u8986\u76d6\u539f\u59cb\u6587\u4ef6\uff0c\u7b2c\u4e8c\u4e2a\u662f\u6dfb\u52a0\u5728\u539f\u59cb\u6587\u4ef6\u540e\u9762 ls -al > readme.txt ls -al >> warning.md \u524d\u540e\u7ffb\u9875 # \u6309\u4f4fF\u6216\u8005B\u524d\u7ffb\u9875\u6216\u8005\u540e\u7ffb\u9875\uff0cforward-back f b \u67e5\u770b\u7f16\u8f91\u6587\u4ef6 cat a.md more a.md vi a.md vim a.md \u8fde\u63a5\u6587\u4ef6\uff1acat \u6253\u5f00\u540e\uff0c\u5c06\u6587\u672c\u7ed3\u679c\u8f93\u51fa\u5230 TXT \u6587\u4ef6\u4e2d cat 1 .txt 2 .txt > xxx.txt \u7ba1\u9053\u7b26 \u7ba1\u9053\u7b26 \u5c06\u524d\u4e00\u4e2a\u547d\u4ee4\u7684\u7ed3\u679c\u5b58\u653e\u5728\u7ba1\u9053\u4e2d\uff0c\u7136\u540e\u4f7f\u7528\u540e\u4e00\u4e2a\u547d\u4ee4\u5904\u7406\u3002\u5e76\u4e0d\u662f\u6240\u6709\u7684\u547d\u4ee4\u90fd\u53ef\u4ee5\u4f7f\u7528\u7ba1\u9053\u7b26\u3002\u7ba1\u9053\u7b26\u901a\u5e38\u548c\u67e5\u627e\u8fc7\u6ee4 grep \u7ec4\u5408\uff0c\u5c06\u4e00\u4e2a\u7ed3\u679c\u901a\u8fc7\u7ba1\u9053\u8fc7\u6ee4\u5e76\u627e\u5230\u53e6\u4e00\u4e2a\u6307\u5b9a\u7684\u547d\u4ee4\u3002 \u4e00\u884c\u4e4b\u5185\u53ea\u80fd\u4f7f\u7528\u4e00\u4e2a\u7ba1\u9053\u7b26\u3002\u5982\u679c\u60f3\u8981\u540c\u65f6\u8f93\u5165\u4e24\u4e2a\u547d\u4ee4\uff0c\u53ef\u4ee5\u4f7f\u7528\u5206\u53f7\u9694\u5f00\uff08\u5f88\u5c11\u8fd9\u6837\u5199\uff09\u3002 ls -alh | cat # \u5c06 list \u5185\u5bb9\u653e\u5230\u7ba1\u9053\u4e2d\uff0c\u4f7f\u7528 cat \u8fdb\u884c\u9605\u8bfb\uff08\u66f4\u65b9\u4fbf\uff0c\u4e0d\u9700\u8981\u53e6\u5b58\u4e3a\u6587\u4ef6\uff09\u3002 tree \u5217\u51fa\u6587\u4ef6\uff08\u663e\u793a\u5f53\u524d\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u6863\u7ed3\u6784\uff09 -N \u8868\u793a\u8f93\u51fa\u4e2d\u6587 tree -N -a","title":"\u5e38\u7528\u6307\u4ee4"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#_3","text":"\u5199\u8def\u5f84\u65f6\uff0c\u5982\u679c\u4e0d\u77e5\u9053\u6587\u4ef6\u5939\u4e0b\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u70b9\u51fb\u4e24\u6b21 TAB \u5c31\u4f1a\u663e\u793a\u5168\u90e8\u7684\u6587\u4ef6\u3002 cd - # \u56de\u5230\u4e0a\u4e00\u6b21\u7684\u76ee\u5f55\u4e2d\uff08\u53ea\u6709\u4e00\u6b21\uff09 cd ~ # \u56de\u5230home\u76ee\u5f55\u4e2d cd / # \u56de\u5230\u6839\u76ee\u5f55\u4e2d mkdir a # create a folder mkdir a/b/c -p # \u5982\u679c\u6ca1\u6709a-b\u6587\u4ef6\u5939\uff0c\u76f4\u63a5\u76f4\u63a5\u521b\u5efa\u591a\u4e2a\u5c42\u7ea7\u4e0b\u9762\u7684\u6587\u4ef6\u5939\u3002","title":"\u76f8\u5bf9\u8def\u5f84\u548c\u7edd\u5bf9\u8def\u5f84"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#grep","text":"\u67e5\u627e\u5b57\u7b26\u4e32\uff0c\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f # \u5728xxx.txt \u6587\u4ef6\u5185\u90e8\u67e5\u627e test \u5b57\u7b26\u4e32 grep 'test' xxx.txt grep '^ntfs$' 1 .txt # \u67e5\u8be2\u4ee5\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5f00\u5934\u548c\u7ed3\u5c3e\u7684\u5185\u5bb9","title":"grep \u67e5\u627e\u6587\u4ef6\u5185\u5bb9"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#find","text":"\u641c\u7d22\u6587\u4ef6\uff1agrep \u662f\u4ece\u6587\u4ef6\u5185\u90e8\u8fdb\u884c\u68c0\u7d22\uff1bfind \u662f\u68c0\u7d22\u6587\u4ef6\u540d find ./ -name '*vim*' # \u67e5\u627e \u5728./\u76ee\u5f55\u4e0b \u67e5\u627e\u6587\u4ef6\u540d \u6587\u4ef6\u540d\u4e2d\u5305\u542b vim find ./ -size +10M -size -100M # \u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u9762\u67e5\u627e\u6587\u4ef6\u5927\u4e8e10M\uff0c\u5c0f\u4e8e100MB\u7684\u6587\u4ef6","title":"find \u67e5\u627e\u6587\u4ef6\u540d"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#tar","text":"\u6253\u5305\u89e3\u5305 tar -cvf test.tar *.py # \u5c06\u5f53\u524d\u7684py\u6587\u4ef6\u6253\u5305\u6210\u4e3a test.tar tar -xvf test.tar # \u5c06 test.tar \u89e3\u538b\u7f29\u5728\u5f53\u524d\u8def\u5f84\u4e2d","title":"tar"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#gz","text":"tar -zcvf test.tar.gz *.py tar -zxvf test.tar.gz tar -jcvf test.tar.bz2 *.py tar -jxvf test.tar.bz2 zip test.zip *.py unzip test.zip # zip file is largest, so we use gz instead.","title":"gz \u538b\u7f29\u89e3\u538b\u7f29 \u91cd\u70b9"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#which","text":"which ls \u67e5\u770b\u547d\u4ee4\u6240\u5728\u7684\u539f\u59cb\u8def\u5f84\uff08\u6bcf\u4e00\u4e2a\u547d\u4ee4\u5bf9\u5e94\u4e00\u4e2a\u6587\u4ef6\uff09","title":"which"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#_4","text":"cal \u65e5\u5386\uff1acalender \u663e\u793a\u65e5\u5386 cal -y 2018 > data.txt data \u65e5\u671f\uff1a\u663e\u793a\u5f53\u524d\u7684\u65f6\u95f4","title":"\u65e5\u671f"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#_5","text":"","title":"\u7cfb\u7edf\u76f8\u5173\u547d\u4ee4"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#ps","text":"process \u67e5\u770b\u8fdb\u7a0b\u4fe1\u606f \u628a\u8fdb\u7a0b\u663e\u793a\u4e00\u6b21 ps -aux # all process","title":"ps"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#top","text":"\u5c06\u8fdb\u7a0b\u5b9e\u65f6\u663e\u793a\u5728\u7f16\u8f91\u5668\u4e2d","title":"top"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#htop","text":"top \u52a0\u5f3a\u7248\u672c","title":"htop"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#kill","text":"\u6d88\u706d\u8fdb\u7a0b kiss -9 9822(PIN) \u5f3a\u5236\u6740\u6b7b shutdown \u5173\u673a shutdown -h now \u7acb\u523b\u5173\u673a reboot \u91cd\u542f df -h \u6574\u4e2a\u786c\u76d8\u7684\u4f7f\u7528\u60c5\u51b5 du -h \u5f53\u524d\u6587\u4ef6\u5939\u5927\u5c0f ifconfig \u67e5\u770b\u5f53\u524d\u7f51\u7edc\u4fe1\u606f ifconfig ens33 192.16.7.139 \u6539\u7f51\u5361\u7684 ip \u5730\u5740 ping \u53ef\u4ee5\u67e5\u770b\u5c40\u57df\u7f51\u662f\u5426\u901a\u7545 \u67e5\u770b\u7535\u8111\u7684\u7cfb\u7edf\u548c\u865a\u62df\u673a\u7684\u7f51\u7edc\u662f\u5426\u8fde\u901a ifconfig | grep 172 \u548c\u7528\u6237\u76f8\u5173\u7684\u547d\u4ee4\uff1b\u591a\u7528\u6237\uff0c\u591a\u4efb\u52a1\u64cd\u4f5c\u7cfb\u7edf Ubuntu","title":"kill"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#ssh","text":"ssh username@172.16.7.139 \u8fdc\u7a0b\u767b\u5f55\u53e6\u4e00\u53f0\u7535\u8111:\u7528\u6237\u540d@ip \u5730\u5740 \u8fd9\u6837\u53ef\u4ee5\u5728\u5bbf\u4e3b\u673a\u4e0a\u64cd\u4f5c\u865a\u62df\u673a\u7684\u5185\u5bb9 \u4e4b\u540e\u8f93\u5165\u53e6\u4e00\u53f0\u7535\u8111\u7684\u5bc6\u7801\u5c31\u884c\u3002\u5982\u679c\u516c\u53f8\u7684\u670d\u52a1\u5668\u574f\u4e86\uff0c\u53ef\u4ee5\u8fdc\u7a0b\u8fde\u63a5\u670d\u52a1\u5668\u8fdb\u884c\u4fee\u7406\u3002 sudo useradd newadmin -m \u521b\u5efa\u4e00\u4e2a\u8d26\u6237\u548c\u5bf9\u5e94\u7684\u4e00\u4e2a\u6587\u4ef6\u5939\uff08\u7528\u6237\u540d\u548c\u6587\u4ef6\u540d\u76f8\u540c\uff09 sudo passwd newadmin \u66f4\u6539/\u8bbe\u7f6e\u67d0\u4e2a\u7528\u6237\u7684\u5bc6\u7801 sudo -s \u4ee5\u8d85\u7ea7\u7ba1\u7406\u5458\u6743\u9650\u767b\u5f55 sudo ifconfig ... \u5728\u539f\u59cb\u8d26\u6237\u4e2d\u4f7f\u7528\u8d85\u7ea7\u7ba1\u7406\u5458\u6743\u9650\u767b\u5f55 \u521b\u5efa\u7528\u6237\u65f6\uff0c\u9ed8\u8ba4\u4f1a\u521b\u5efa\u4e00\u4e2a\u7fa4\u7ec4\u3002\u8fd9\u4e2a\u7fa4\u7ec4\u7684\u6587\u4ef6\u5bf9\u4e8e\u5916\u90e8\u7684\u4f7f\u7528\u8005\u6743\u9650\u4e0d\u540c\uff08\u53ea\u8bfb\u3001\u4fee\u6539\u7b49\uff09 sudo groupadd YYY sudo groupdel YYY cat /etc/group \u53ef\u4ee5\u67e5\u770b\u7fa4\u7ec4\uff0c \u6216\u8005 groupmod \u591a\u70b9\u51e0\u6b21 tab \u5c31\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u7fa4\u7ec4\u4fe1\u606f\u3002 \u4e0d\u540c\u7528\u6237\u7684\u521b\u5efa\u548c\u5207\u6362\uff0c\u7ba1\u7406\u5458\u7684\u5207\u6362 sudo -s \u3002 \u7ed9\u67d0\u4e2a\u7fa4\u7ec4\u6dfb\u52a0\u7528\u6237\uff08\u4e86\u89e3\uff09 sudo usermod -a -G \u7fa4\u7ec4\u540d \u7528\u6237\u540d (usermodify) \u9ed8\u8ba4\u521b\u5efa\u7684\u6210\u5458\u6ca1\u6709 sudo \u7684\u7fa4\u7ec4\uff0c\u6240\u4ee5\u6ca1\u6709 sudo \u7684\u6743\u9650\u3002\u521b\u5efa\u540e\u9700\u8981\u5c06\u8fd9\u4e2a\u65b0\u7684\u6210\u5458\u6dfb\u52a0\u5230 sudo \u7fa4\u7ec4\u4e2d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528 sudo \u7684\u6743\u9650\u53bb\u7ba1\u7406\u6587\u4ef6\u3002 sudo usermod -a -G adm Michael sudo usermod -a -G sudo Michael # \u5c06\u7528\u6237\u6dfb\u52a0\u5230sudo\u548cadm\u7fa4\u7ec4\u4e2d","title":"SSH"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#_6","text":"ls \u53ef\u4ee5\u67e5\u770b\u6587\u4ef6\u7684\u6743\u9650\uff08\u5341\u4f4d\uff09\uff1a1+3+3+3 \u6587\u4ef6\u548c\u6587\u4ef6\u5939\u5177\u6709\u4e0d\u540c\u7684\u6743\u9650 - rw- rw- r-- # \u6587\u4ef6 \u6587\u4ef6owner\u6743\u9650 \u540c\u7ec4\u6210\u5458\u6743\u9650 \u5176\u4ed6\u7528\u6237\u6743\u9650 d rwx rwx r-- # \u6587\u4ef6\u5939 directiry r \u8bfb w \u5199 x \u53ef\u6267\u884c\uff08\u7a0b\u5e8f\uff09 \u8fd9\u91cc\u7684\u7528\u6237\u5206\u4e3a\u4e09\u7c7b\uff08user group others\uff09 chmod u=rwx 2.py chmod u=r, g=r,o=r 1.py \u4e0d\u540c\u6743\u9650\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u5b57\u8868\u793a chmod 137 2.py \u5c31\u662f\u6539\u53d8\u4e0d\u540c\u6743\u9650\u6210\u5458\u7684\u8bfb\u5199\u6743\u9650\u3002\uff08\u53ef\u6267\u884c x=1\uff0c \u8bfb r=4, \u5199 w=2\uff09\u8868\u793a\u62e5\u6709\u8005\u53ef\u4ee5 1\uff08\u6267\u884c\u6587\u4ef6\uff09\uff0c\u7fa4\u7ec4\u6210\u5458\u53ef\u4ee5 3\uff08\u53ef\u6267\u884c\uff0c\u53ef\u5199\uff09\uff0c\u5176\u4ed6\u4eba\u53ef\u4ee5 7\uff08\u53ef\u8bfb\u53ef\u5199\u53ef\u6267\u884c\uff09\u3002","title":"\u4fee\u6539\u6587\u4ef6\u7684\u6743\u9650"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#vim","text":"\u5728\u547d\u4ee4\u6a21\u5f0f\u4e0b yy \u590d\u5236 4yy \u590d\u5236\u5f53\u524d\u884c\u5230\u4e0b\u9762\u7b2c\u56db\u884c\u7684\u5185\u5bb9 dd \u5220\u9664 2dd \u5220\u9664\u5230\u4e0b\u9762\u4e24\u884c\u7684\u5185\u5bb9\uff08\u526a\u5207 = \u5220\u9664\uff09 d0 \u884c\u9996\u5230\u5f53\u524d\u5149\u6807 D \u526a\u5207\u5149\u6807\u540e\u9762\u8fd9\u4e00\u884c\u7684\u5185\u5bb9 p \u7c98\u8d34 i \u5149\u6807\u524d\u9762\u63d2\u5165\uff08I \u5728\u884c\u9996\u63d2\u5165\uff09 a \u5149\u6807\u540e\u9762\u52a0\u5165\uff08A \u5728\u884c\u672b\u5c3e\u63d2\u5165\uff09 o \u65b0\u5efa\u4e00\u884c \uff08O \u5728\u4e0a\u4e00\u884c\u65b0\u5efa\u4e00\u884c\uff09 hjkl \u8868\u793a\u56db\u4e2a\u65b9\u5411\u952e\uff08\u548c\u4e0a\u4e0b\u5de6\u53f3\u4e00\u6837\uff09\u4e00\u822c\u7528\u6237jk\u4e0a\u4e0b\u7ffb\u9875 HML\uff08head middle last\uff09\u5149\u6807\u8df3\u8f6c\u5230\u5f53\u524d\u7684\u5c4f\u5e55\u7684\u4e0a\u8fb9\uff0c\u4e2d\u95f4\uff0c\u4e0b\u9762 Ctrl + F \u5411\u4e0b\u7ffb1\u9875 front Ctrl + B \u60f3\u4e0a\u7ffb1\u9875 before 20G \u523020\u884c\u4ee3\u7801 1G \u5230\u5f00\u5934 G \u5230\u7ed3\u5c3e u \u64a4\u9500 Ctrl + R \u53cd\u64a4\u9500","title":"VIM \u7f16\u8f91\u5668\u5e38\u7528\u547d\u4ee4"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#ubuntu","text":"\u4fee\u6539\u56fd\u5185\u955c\u50cf\u914d\u7f6e ubuntu \u9ed8\u8ba4\u4e0b\u8f7d\u7684\u662f\u5b98\u7f51\u7684\u4fe1\u606f\uff0c\u4e0d\u662f\u6e05\u534e\u5927\u5b66\u7684\u955c\u50cf\u7ad9\u4e0b\u8f7d\u5730\u5740\uff08\u66f4\u65b0\u6e90\u3001\u955c\u50cf\u6e90\uff09\u3002 \u5148\u5907\u4efd\u4e4b\u524d\u7684\u6587\u4ef6 sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup \u9996\u5148\u8bbe\u7f6e Ubuntu \u7684\u66f4\u65b0\u5730\u5740\uff08\u9ed8\u8ba4\u4ece\u7f8e\u56fd\u4e0b\u8f7d\u8f6f\u4ef6\u6bd4\u8f83\u6162\uff09\uff0c\u963f\u91cc\u7f51\u6613\u6e05\u534e 163 \u90fd\u53ef\u4ee5\u8bbe\u7f6e\u955c\u50cf\u6e90\u3002 vi /etc/apt/sources.list # \u7f16\u8f91\u4e0b\u8f7d\u6e90\u914d\u7f6e sudo apt-get update # \u5f00\u59cb\u66f4\u65b0\u6e90\uff08\u7f51\u901f\uff0c\u5927\u7ea640MB\uff09 sudo apt-get install XXX\u8f6f\u4ef6 # \u5927\u90e8\u5206\u8f6f\u4ef6\u90fd\u53ef\u4ee5\u627e\u5230 # \u5b89\u88c5 sl \u8f6f\u4ef6\uff0c\u5c0f\u706b\u8f66\u8f6f\u4ef6 sudo apt-get install sl sudo apt-get source package sudo apt-get clean && sudo apt-get autoclean # \u6e05\u7406\u4e0d\u7528\u7684\u5b89\u88c5\u5305 \u955c\u50cf\u6e90\u9700\u8981\u5bf9\u5e94\u7248\u672c 16.04 LTS \u6e05\u534e\u5927\u5b66\u955c\u50cf\u6e90 https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/ Ubuntu \u7684\u8f6f\u4ef6\u6e90\u914d\u7f6e\u6587\u4ef6\u662f /etc/apt/sources.list \u3002\u5c06\u7cfb\u7edf\u81ea\u5e26\u7684\u8be5\u6587\u4ef6\u505a\u4e2a\u5907\u4efd\uff0c\u5c06\u8be5\u6587\u4ef6\u66ff\u6362\u4e3a\u4e0b\u9762\u5185\u5bb9\uff0c\u5373\u53ef\u4f7f\u7528 TUNA \u7684\u8f6f\u4ef6\u6e90\u955c\u50cf \u67e5\u770b /proc/version \u67e5\u770b Ubuntu \u7248\u672c\u53f7\uff0c\u9009\u62e9\u5408\u9002\u7684\u7248\u672c\u53f7\u8fdb\u884c\u66f4\u6539 # \u9ed8\u8ba4\u6ce8\u91ca\u4e86\u6e90\u7801\u955c\u50cf\u4ee5\u63d0\u9ad8 apt update \u901f\u5ea6\uff0c\u5982\u6709\u9700\u8981\u53ef\u81ea\u884c\u53d6\u6d88\u6ce8\u91ca deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse # deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse","title":"ubuntu \u4e0b\u8f7d\u8f6f\u4ef6"},{"location":"01-basic/02-linux%E5%9F%BA%E7%A1%80/#_7","text":"ftp \u6587\u4ef6\u4f20\u8f93\u534f\u8bae\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u4fbf\u6377\u7684\u4ece\u672c\u673a\u5411\u865a\u62df\u673a\u4f20\u8f93\u6587\u4ef6\u3002\u5b89\u88c5 file-zilla \u8f6f\u4ef6\u3002 Samba \u6587\u4ef6\u4e0b\u8f7d\u534f\u540c\u7f16\u8f91 \u5728 Linux \u7f16\u8bd1\u8fd0\u884c C \u8bed\u8a00 \u7f16\u5199 c \u8bed\u8a00\u6587\u4ef6\uff0cgcc \u7f16\u8bd1 C \u8bed\u8a00\uff0c\u6267\u884c out \u6587\u4ef6\uff0c\u5373\u53ef\u5728\u7ec8\u7aef\u4e2d\u6267\u884c C \u7a0b\u5e8f\u3002","title":"\u5e38\u89c1\u670d\u52a1\u5668"},{"location":"01-basic/03-python%E5%9F%BA%E7%A1%80/","text":"Python \u57fa\u7840 \u00b6 2021-08-31 \u6240\u6709\u4ee3\u7801\u6309\u7167 python3 \u7684\u8bed\u6cd5 \u8f93\u5165\u8f93\u51fa \u00b6 input \u00b6 \u5728 Python3 \u4e2d\uff0c\u76f4\u63a5\u8f93\u5165\u7684\u5185\u5bb9\u5c31\u662f\u7ed9\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u4f46\u662f\u5728 python2 \u4e2d\uff0cinput \u540e\u9762\u7684\u5185\u5bb9\u4f5c\u4e3a\u4e00\u4e2a\u8bed\u53e5\u6267\u884c\u4e86\u3002\u6240\u4ee5\u4f7f\u7528 raw_input \u8868\u793a\u8f93\u5165\u7684\u5185\u5bb9\u3002\u8f93\u5165\u7684\u5185\u5bb9\u5982\u679c\u662f\u6570\u5b57\uff0c\u4f46\u662f\u8fd9\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6570\u5b57\uff0c\u9700\u8981\u8f6c\u5316\u6210\u6570\u503c\u8fdb\u884c\u5904\u7406\u3002 python3 \u4e2d\u6ca1\u6709 raw_input \u51fd\u6570\uff0cinput \u51fd\u6570\u76f8\u5f53\u4e8e raw_input \u51fd\u6570\u3002 age = \"test\" ; print ( \" %s \" % age ) tall = 100 print ( \" %d \" % tall ) \u8fd9\u91cc\u7c7b\u4f3c\u4e8e C \u8bed\u8a00\uff0c\u4f7f\u7528\u540e\u9762\u7684\u53d8\u91cf\u53d6\u4ee3\u5b57\u7b26\u4e32\u4e2d\u7684\u53d8\u91cf\u3002C \u8bed\u8a00\u4e2d\u6709\u9017\u53f7\uff0cPython \u4e2d\u6ca1\u6709\u9017\u53f7\u3002 \u5b57\u7b26\u4e32\u4e58\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u662f\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u91cd\u590d\u591a\u5c11\u6b21\u3002 print ( \"test \" * 10 ) \\a \u6362\u884c \\t tab \u7f29\u8fdb \u5b57\u7b26\u4e32 \u00b6 \u5b57\u7b26\u4e32\u5b58\u50a8\u7684\u5360\u4f4d\uff1a\u6570\u503c\u548c\u5b57\u7b26\u4e32\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u4e0d\u540c\uff1b\u5b57\u7b26\u4e32\u548c\u6570\u503c\u578b\u53d8\u91cf\u7684\u7c7b\u578b\u8f6c\u6362\uff1b\u8f93\u5165\u7684\u4fe1\u606f\u90fd\u662f\u5b57\u7b26\u4e32\uff1b \u5217\u8868 \u00b6 \u5217\u8868\u7c7b\u4f3c JS \u4e2d\u7684\u6570\u7ec4\u3002C \u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u53ea\u80fd\u5b58\u50a8\u56fa\u5b9a\u7c7b\u578b\u7684\u6570\u636e\uff0cPython \u548c JS \u4e2d\u7684\u5217\u8868\u6570\u7ec4\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002\u5217\u8868\u7684\u589e\u5220\u6539\u67e5\u529f\u80fd\u5bf9\u5e94\u7684\u4e0d\u540c\u7684\u65b9\u6cd5\uff08\u53c2\u8003\u6570\u7ec4\u7684\u65b9\u6cd5\uff09\u3002\u6570\u7ec4\u7684\u65b9\u6cd5 append \u5bf9\u5e94\u7684\u589e\u5220\u6539\u67e5\u3002 python \u4e2d\u5217\u8868\u957f\u5ea6\u4e0d\u80fd\u81ea\u52a8\u6269\u5c55\uff0c\u6ce8\u610f\uff01\u58f0\u660e\u662f\u9700\u8981\u8003\u8651\u957f\u5ea6 #\u589e\u52a0 append () insert () extend () #\u5220\u9664 pop () \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20 remove () \u6839\u636e\u5185\u5bb9\u5220\u9664 del array [ 0 ] \u6839\u636e\u4e0b\u6807\u5220\u9664 #\u4fee\u6539 array [ 1 ] = 10 #\u67e5\u8be2 in not in \u5217\u8868 API \u00b6 # coding=utf-8 # append extend \u90fd\u662f\u7ed9\u4e00\u4e2a\u5217\u8868\u589e\u52a0\u5143\u7d20 # append \u7684\u53c2\u6570\u662f\u5355\u4e2a\u5143\u7d20 # extend \u53c2\u6570\u662f\u53e6\u4e00\u4e2a\u5217\u8868\uff0c\u4f1a\u628a\u53e6\u4e00\u4e2a\u5217\u8868\u7684\u6bcf\u4e00\u9879\u83b7\u53d6\u5e76\u52a0\u5165\u5230\u7b2c\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u53e6\u4e00\u4e2a\u5217\u8868\u5185\u5bb9\u4e0d\u6539\u53d8 nums1 = [ 1 , 2 , 3 ] nums2 = [ 4 , 5 ] nums1 . extend ( nums2 ) print ( nums1 , nums2 ) # nums1.extend(4); \u62a5\u9519\uff1aTypeError: 'int' object is not iterable # print(nums1); # append \u53ea\u80fd\u589e\u52a0\u4e00\u4e2a\u5143\u7d20\uff0c\u591a\u4e2a\u53c2\u6570\u4f1a\u62a5\u9519 # nums1.append(6, 7) TypeError: append() takes exactly one argument (2 given) nums1 . append ( 6 ) # \u6ce8\u610f append \u4f1a\u6539\u53d8\u539f\u5217\u8868\uff0c\u8fd4\u56de\u503c\u662f None b = nums1 . append ( 2 ) # print(b) None \u5143\u7ec4 \u00b6 a = ( 1 , 2 , 3 ) # \u5143\u7ec4\u662f\u53ea\u8bfb\u7684\uff0c\u53ef\u4ee5\u67e5\u8be2\uff0c\u4e0d\u53ef\u4ee5\u66f4\u6539 # \u65e5\u5e38\u4f7f\u7528\u4e0d\u591a \u5b57\u5178\u5c31\u662f\u5bf9\u8c61\uff0c\u662f\u952e\u503c\u5bf9\u7684\u96c6\u5408\u3002\u540c\u7406\u53ef\u4ee5\u5bf9\u5bf9\u8c61\u589e\u5220\u6539\u67e5\u64cd\u4f5c\uff0c\u5bf9\u5e94\u7684\u65b9\u6cd5\u3002 \u5faa\u73af \u00b6 1\u3001if \u5224\u65ad\u7684\u5d4c\u5957\u548c\u591a\u5143\u9009\u62e9 2\u3001while \u5faa\u73af \u5e38\u89c1\u7684\u5faa\u73af\u6848\u4f8b\uff1a\u4e09\u89d2\u5f62\u3001\u4e5d\u4e5d\u4e58\u6cd5\u8868\uff0c\u8f93\u51fa\u5076\u6570\u5305\u542b\u56fa\u5b9a\u7684\u90e8\u5206 \u6ce8\u610f\u4e8b\u9879\uff1aPython \u4e2d\u5b57\u7b26\u4e32\u4e2d\u5d4c\u5957\u53d8\u91cf\u8fdb\u884c\u8f93\u51fa\uff0c\u9700\u8981\u4e0d\u540c\u53d8\u91cf\u548c\u540e\u9762\u7684\u53c2\u6570\u914d\u5408\uff0c\u4e0d\u80fd\u76f4\u63a5\u6a21\u677f\u5b57\u7b26\u4e32\u8f93\u51fa\u3002 while \u5faa\u73af\u8bed\u53e5 \u00b6 # coding=utf-8 # while \u5faa\u73af\u9700\u8981\u5224\u65ad\u8fb9\u754c\u6761\u4ef6\uff0c\u53ef\u4ee5\u5faa\u73af\u4e00\u90e8\u5206\u5143\u7d20 # for \u5faa\u73af\u9002\u5408\u5faa\u73af\u5168\u90e8\u7684\u5143\u7d20 nums = [ 1 , 2 , 3 , 4 , 5 ] i = 0 while i < 5 : print ( nums [ i ]) i += 1 nums2 = [ 1 , 2 , 3 , 4 , 5 ] nums2_len = len ( nums2 ) i = 0 while i < nums2_len : print ( nums [ i ]) i += 1 nums3 = [ 1 , 2 , 3 , 4 , 5 ] for num in nums : print ( num ) for \u5faa\u73af\u8bed\u53e5 \u00b6 # coding=utf-8 # python \u548c\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\uff0c\u652f\u6301 if else \u7ed3\u6784 nums = [ 1 , 2 , 3 , 4 ] for num in nums : print ( num ) else : print ( 'for-else end' ) # \u5148\u904d\u5386\u5217\u8868\uff0c\u7136\u540e\u6253\u5370else\u7ed3\u679c nums2 = [] for num in nums2 : print ( num ) else : print ( 'for-else end' ) # \u904d\u5386\u5217\u8868\uff08\u7a7a\uff09\uff0c\u7136\u540e\u6253\u5370\u7ed3\u679c nums3 = [ 1 , 2 , 3 ] for num in nums3 : print ( num ) break ; else : print ( 'for-else end' ) # \u5faa\u73af\u7b2c\u4e00\u6b21\uff0c\u6253\u53701\uff0c\u7136\u540e\u8df3\u51fa\u5faa\u73af\uff08\u4e0d\u6267\u884celse\u90e8\u5206\uff09 infos = [ { 'name' : 'Mike' , 'age' : 10 }, { 'name' : 'Tom' , 'age' : 25 }, ] target = input ( 'please input query name' ) for info in infos : if info [ 'name' ] == target : print ( info [ 'age' ]) break ; else : print ( 'this person not fount' )","title":"03-python\u57fa\u7840"},{"location":"01-basic/03-python%E5%9F%BA%E7%A1%80/#python","text":"2021-08-31 \u6240\u6709\u4ee3\u7801\u6309\u7167 python3 \u7684\u8bed\u6cd5","title":"Python \u57fa\u7840"},{"location":"01-basic/03-python%E5%9F%BA%E7%A1%80/#_1","text":"","title":"\u8f93\u5165\u8f93\u51fa"},{"location":"01-basic/03-python%E5%9F%BA%E7%A1%80/#input","text":"\u5728 Python3 \u4e2d\uff0c\u76f4\u63a5\u8f93\u5165\u7684\u5185\u5bb9\u5c31\u662f\u7ed9\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u4f46\u662f\u5728 python2 \u4e2d\uff0cinput \u540e\u9762\u7684\u5185\u5bb9\u4f5c\u4e3a\u4e00\u4e2a\u8bed\u53e5\u6267\u884c\u4e86\u3002\u6240\u4ee5\u4f7f\u7528 raw_input \u8868\u793a\u8f93\u5165\u7684\u5185\u5bb9\u3002\u8f93\u5165\u7684\u5185\u5bb9\u5982\u679c\u662f\u6570\u5b57\uff0c\u4f46\u662f\u8fd9\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u6570\u5b57\uff0c\u9700\u8981\u8f6c\u5316\u6210\u6570\u503c\u8fdb\u884c\u5904\u7406\u3002 python3 \u4e2d\u6ca1\u6709 raw_input \u51fd\u6570\uff0cinput \u51fd\u6570\u76f8\u5f53\u4e8e raw_input \u51fd\u6570\u3002 age = \"test\" ; print ( \" %s \" % age ) tall = 100 print ( \" %d \" % tall ) \u8fd9\u91cc\u7c7b\u4f3c\u4e8e C \u8bed\u8a00\uff0c\u4f7f\u7528\u540e\u9762\u7684\u53d8\u91cf\u53d6\u4ee3\u5b57\u7b26\u4e32\u4e2d\u7684\u53d8\u91cf\u3002C \u8bed\u8a00\u4e2d\u6709\u9017\u53f7\uff0cPython \u4e2d\u6ca1\u6709\u9017\u53f7\u3002 \u5b57\u7b26\u4e32\u4e58\u4e00\u4e2a\u6570\u5b57\uff0c\u5c31\u662f\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u91cd\u590d\u591a\u5c11\u6b21\u3002 print ( \"test \" * 10 ) \\a \u6362\u884c \\t tab \u7f29\u8fdb","title":"input"},{"location":"01-basic/03-python%E5%9F%BA%E7%A1%80/#_2","text":"\u5b57\u7b26\u4e32\u5b58\u50a8\u7684\u5360\u4f4d\uff1a\u6570\u503c\u548c\u5b57\u7b26\u4e32\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u4e0d\u540c\uff1b\u5b57\u7b26\u4e32\u548c\u6570\u503c\u578b\u53d8\u91cf\u7684\u7c7b\u578b\u8f6c\u6362\uff1b\u8f93\u5165\u7684\u4fe1\u606f\u90fd\u662f\u5b57\u7b26\u4e32\uff1b","title":"\u5b57\u7b26\u4e32"},{"location":"01-basic/03-python%E5%9F%BA%E7%A1%80/#_3","text":"\u5217\u8868\u7c7b\u4f3c JS \u4e2d\u7684\u6570\u7ec4\u3002C \u8bed\u8a00\u4e2d\u7684\u6570\u7ec4\u53ea\u80fd\u5b58\u50a8\u56fa\u5b9a\u7c7b\u578b\u7684\u6570\u636e\uff0cPython \u548c JS \u4e2d\u7684\u5217\u8868\u6570\u7ec4\u53ef\u4ee5\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u3002\u5217\u8868\u7684\u589e\u5220\u6539\u67e5\u529f\u80fd\u5bf9\u5e94\u7684\u4e0d\u540c\u7684\u65b9\u6cd5\uff08\u53c2\u8003\u6570\u7ec4\u7684\u65b9\u6cd5\uff09\u3002\u6570\u7ec4\u7684\u65b9\u6cd5 append \u5bf9\u5e94\u7684\u589e\u5220\u6539\u67e5\u3002 python \u4e2d\u5217\u8868\u957f\u5ea6\u4e0d\u80fd\u81ea\u52a8\u6269\u5c55\uff0c\u6ce8\u610f\uff01\u58f0\u660e\u662f\u9700\u8981\u8003\u8651\u957f\u5ea6 #\u589e\u52a0 append () insert () extend () #\u5220\u9664 pop () \u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20 remove () \u6839\u636e\u5185\u5bb9\u5220\u9664 del array [ 0 ] \u6839\u636e\u4e0b\u6807\u5220\u9664 #\u4fee\u6539 array [ 1 ] = 10 #\u67e5\u8be2 in not in","title":"\u5217\u8868"},{"location":"01-basic/03-python%E5%9F%BA%E7%A1%80/#api","text":"# coding=utf-8 # append extend \u90fd\u662f\u7ed9\u4e00\u4e2a\u5217\u8868\u589e\u52a0\u5143\u7d20 # append \u7684\u53c2\u6570\u662f\u5355\u4e2a\u5143\u7d20 # extend \u53c2\u6570\u662f\u53e6\u4e00\u4e2a\u5217\u8868\uff0c\u4f1a\u628a\u53e6\u4e00\u4e2a\u5217\u8868\u7684\u6bcf\u4e00\u9879\u83b7\u53d6\u5e76\u52a0\u5165\u5230\u7b2c\u4e00\u4e2a\u5217\u8868\u4e2d\uff0c\u53e6\u4e00\u4e2a\u5217\u8868\u5185\u5bb9\u4e0d\u6539\u53d8 nums1 = [ 1 , 2 , 3 ] nums2 = [ 4 , 5 ] nums1 . extend ( nums2 ) print ( nums1 , nums2 ) # nums1.extend(4); \u62a5\u9519\uff1aTypeError: 'int' object is not iterable # print(nums1); # append \u53ea\u80fd\u589e\u52a0\u4e00\u4e2a\u5143\u7d20\uff0c\u591a\u4e2a\u53c2\u6570\u4f1a\u62a5\u9519 # nums1.append(6, 7) TypeError: append() takes exactly one argument (2 given) nums1 . append ( 6 ) # \u6ce8\u610f append \u4f1a\u6539\u53d8\u539f\u5217\u8868\uff0c\u8fd4\u56de\u503c\u662f None b = nums1 . append ( 2 ) # print(b) None","title":"\u5217\u8868 API"},{"location":"01-basic/03-python%E5%9F%BA%E7%A1%80/#_4","text":"a = ( 1 , 2 , 3 ) # \u5143\u7ec4\u662f\u53ea\u8bfb\u7684\uff0c\u53ef\u4ee5\u67e5\u8be2\uff0c\u4e0d\u53ef\u4ee5\u66f4\u6539 # \u65e5\u5e38\u4f7f\u7528\u4e0d\u591a \u5b57\u5178\u5c31\u662f\u5bf9\u8c61\uff0c\u662f\u952e\u503c\u5bf9\u7684\u96c6\u5408\u3002\u540c\u7406\u53ef\u4ee5\u5bf9\u5bf9\u8c61\u589e\u5220\u6539\u67e5\u64cd\u4f5c\uff0c\u5bf9\u5e94\u7684\u65b9\u6cd5\u3002","title":"\u5143\u7ec4"},{"location":"01-basic/03-python%E5%9F%BA%E7%A1%80/#_5","text":"1\u3001if \u5224\u65ad\u7684\u5d4c\u5957\u548c\u591a\u5143\u9009\u62e9 2\u3001while \u5faa\u73af \u5e38\u89c1\u7684\u5faa\u73af\u6848\u4f8b\uff1a\u4e09\u89d2\u5f62\u3001\u4e5d\u4e5d\u4e58\u6cd5\u8868\uff0c\u8f93\u51fa\u5076\u6570\u5305\u542b\u56fa\u5b9a\u7684\u90e8\u5206 \u6ce8\u610f\u4e8b\u9879\uff1aPython \u4e2d\u5b57\u7b26\u4e32\u4e2d\u5d4c\u5957\u53d8\u91cf\u8fdb\u884c\u8f93\u51fa\uff0c\u9700\u8981\u4e0d\u540c\u53d8\u91cf\u548c\u540e\u9762\u7684\u53c2\u6570\u914d\u5408\uff0c\u4e0d\u80fd\u76f4\u63a5\u6a21\u677f\u5b57\u7b26\u4e32\u8f93\u51fa\u3002","title":"\u5faa\u73af"},{"location":"01-basic/03-python%E5%9F%BA%E7%A1%80/#while","text":"# coding=utf-8 # while \u5faa\u73af\u9700\u8981\u5224\u65ad\u8fb9\u754c\u6761\u4ef6\uff0c\u53ef\u4ee5\u5faa\u73af\u4e00\u90e8\u5206\u5143\u7d20 # for \u5faa\u73af\u9002\u5408\u5faa\u73af\u5168\u90e8\u7684\u5143\u7d20 nums = [ 1 , 2 , 3 , 4 , 5 ] i = 0 while i < 5 : print ( nums [ i ]) i += 1 nums2 = [ 1 , 2 , 3 , 4 , 5 ] nums2_len = len ( nums2 ) i = 0 while i < nums2_len : print ( nums [ i ]) i += 1 nums3 = [ 1 , 2 , 3 , 4 , 5 ] for num in nums : print ( num )","title":"while \u5faa\u73af\u8bed\u53e5"},{"location":"01-basic/03-python%E5%9F%BA%E7%A1%80/#for","text":"# coding=utf-8 # python \u548c\u5176\u4ed6\u8bed\u8a00\u4e0d\u540c\uff0c\u652f\u6301 if else \u7ed3\u6784 nums = [ 1 , 2 , 3 , 4 ] for num in nums : print ( num ) else : print ( 'for-else end' ) # \u5148\u904d\u5386\u5217\u8868\uff0c\u7136\u540e\u6253\u5370else\u7ed3\u679c nums2 = [] for num in nums2 : print ( num ) else : print ( 'for-else end' ) # \u904d\u5386\u5217\u8868\uff08\u7a7a\uff09\uff0c\u7136\u540e\u6253\u5370\u7ed3\u679c nums3 = [ 1 , 2 , 3 ] for num in nums3 : print ( num ) break ; else : print ( 'for-else end' ) # \u5faa\u73af\u7b2c\u4e00\u6b21\uff0c\u6253\u53701\uff0c\u7136\u540e\u8df3\u51fa\u5faa\u73af\uff08\u4e0d\u6267\u884celse\u90e8\u5206\uff09 infos = [ { 'name' : 'Mike' , 'age' : 10 }, { 'name' : 'Tom' , 'age' : 25 }, ] target = input ( 'please input query name' ) for info in infos : if info [ 'name' ] == target : print ( info [ 'age' ]) break ; else : print ( 'this person not fount' )","title":"for \u5faa\u73af\u8bed\u53e5"},{"location":"01-basic/12-Python3%20%E5%BA%8F%E5%88%97%E8%A7%A3%E5%8C%85/","text":"Python3 \u5e8f\u5217\u89e3\u5305 \u00b6 ctime: 2021-08-30 mtime: 2024-03-25 Python \u4e2d\u6709\u5f88\u591a\u5f88\u5b9e\u7528\u7684\u8bed\u6cd5\u7cd6\uff0c\u8fd9\u4e9b\u8bed\u6cd5\u7cd6\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7b80\u5316\u4ee3\u7801\u3001\u66f4\u6613\u7406\u89e3\u7b49\u4f18\u70b9\uff0c\u63a5\u4e0b\u91cc\u518d\u770b\u4e00\u4e2a Python3 \u4e2d\u7279\u522b\u5b9e\u7528\u7684\u8bed\u6cd5\u5e8f\u5217\u89e3\u5305\uff08\u5e8f\u5217\u89e3\u5305\u662f Python 3.0 \u4e4b\u540e\u624d\u6709\u7684\u8bed\u6cd5\uff09\u3002 \u90a3\u4ec0\u4e48\u662f\u5e8f\u5217\u89e3\u5305\u5462\uff1f\u5148\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a a , b , c = 1 , 2 , 3 a 1 b 2 c 3 \u8fd9\u79cd\u65b9\u6cd5\u5e76\u4e0d\u9650\u4e8e\u5217\u8868\u548c\u5143\u7ec4\uff0c\u800c\u662f\u9002\u7528\u4e8e\u4efb\u610f\u5e8f\u5217\u7c7b\u578b\uff08\u751a\u81f3\u5305\u62ec\u5b57\u7b26\u4e32\u548c\u5b57\u8282\u5e8f\u5217\uff09\u3002\u53ea\u8981\u8d4b\u503c\u8fd0\u7b97\u7b26\u5de6\u8fb9\u7684\u53d8\u91cf\u6570\u76ee\u4e0e\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u6570\u76ee\u76f8\u7b49\uff0c\u4f60\u90fd\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u5c06\u5143\u7d20\u5e8f\u5217\u89e3\u5305\u5230\u53e6\u4e00\u7ec4\u53d8\u91cf\u4e2d\u3002 \u89e3\u5305\u7684\u4f7f\u7528\u8fd8\u53ef\u4ee5\u66f4\u6709\u903c\u683c\uff0c\u53ef\u4ee5\u5229\u7528 * \u8868\u8fbe\u5f0f\u83b7\u53d6\u5355\u4e2a\u53d8\u91cf\u4e2d\u7684\u591a\u4e2a\u5143\u7d20\uff0c\u53ea\u8981\u5b83\u7684\u89e3\u91ca\u6ca1\u6709\u6b67\u4e49\u5373\u53ef\u3002 \u83b7\u53d6\u7684\u503c\u9ed8\u8ba4\u4e3a list \u83b7\u53d6\u5269\u4f59\u90e8\u5206\uff1a \u00b6 a , b , * c = 0 , 1 , 2 , 3 a 0 b 1 c [ 2 , 3 ] \u83b7\u53d6\u4e2d\u95f4\u90e8\u5206\uff1a \u00b6 a , * b , c = 0 , 1 , 2 , 3 a 0 b [ 1 , 2 ] c 3 \u5982\u679c\u5de6\u503c\u6bd4\u53f3\u503c\u8981\u591a\uff0c\u90a3\u4e48\u5e26 * \u7684\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u7a7a \u00b6 a , b , * c = 0 , 1 a 0 b 1 c [] a , * b , c = 0 , 1 a 0 b [] c 1 \u5d4c\u5957\u89e3\u5305 \u00b6 ( a , b ), ( c , d ) = ( 1 , 2 ), ( 3 , 4 ) a 1 b 2 c 3 d 4 a , b , c , d ( 1 , 2 , 3 , 4 ) # \u63a5\u4e0b\u6765\u5b9e\u6218\u4e00\u4e0b\uff0c\u5047\u5982\u4e00\u4e2a\u5b57\u7b26\u4e32 'ABCDEFGH'\uff0c\u8981\u8f93\u51fa\u4e0b\u5217\u683c\u5f0f: A [ 'B' , 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] B [ 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] C [ 'D' , 'E' , 'F' , 'G' , 'H' ] D [ 'E' , 'F' , 'G' , 'H' ] E [ 'F' , 'G' , 'H' ] F [ 'G' , 'H' ] G [ 'H' ] H [] \u5373\u6bcf\u6b21\u53d6\u51fa\u7b2c\u4e00\u4e2a\u4f5c\u4e3a\u9996\uff0c\u7136\u540e\u7684\u5b57\u7b26\u4e32\u62c6\u6210\u5217\u8868\uff0c\u653e\u7f6e\u5728\u540e\u9762 \u4e00\u822c\u7684\u5904\u7406\u8fc7\u7a0b\u662f: \u5c06\u5207\u7247\u4e2d\u7d22\u5f15\u4e3a 0 \u7684\u5b57\u7b26\u8d4b\u503c\u7ed9 a \u5c06\u5207\u7247\u4e2d\u7d22\u5f15\u4e3a 1 \u4e4b\u540e\u5b57\u7b26\u518d\u8d4b\u503c\u7ed9 s \u7528 list \u51fd\u6570\u5c06\u5b57\u7b26\u4e32\u8f6c\u53d8\u4e3a\u5217\u8868 \u7528 while \u5faa\u73af\u6765 s \u6765\u5224\u65ad\uff0c\u4e3a\u7a7a\uff0c\u5219\u9000\u51fa\u5faa\u73af s = 'ABCDEFGH' while s : ... x , s = s [ 0 ], list ( s [ 1 :]) ... print ( x , s ) ... A [ 'B' , 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] B [ 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] C [ 'D' , 'E' , 'F' , 'G' , 'H' ] D [ 'E' , 'F' , 'G' , 'H' ] E [ 'F' , 'G' , 'H' ] F [ 'G' , 'H' ] G [ 'H' ] H [] \u4e0a\u9762\u7684\u5904\u7406\uff0c\u53ef\u4ee5\u7528\u5e8f\u5217\u89e3\u5305\u7684\u65b9\u6cd5\u4f1a\u6765\u5904\u7406\u3002\u5e8f\u5217\u89e3\u5305\uff0c\u5728\u8d4b\u503c\u65f6\u65e0\u7591\u66f4\u65b9\u4fbf\u3001\u66f4\u7b80\u6d01\u3001\u66f4\u597d\u7406\u89e3\u3001\u9002\u7528\u6027\u66f4\u5f3a\uff01 \u8fd0\u7528\u5e8f\u5217\u89e3\u5305\u7684\u529f\u80fd\u91cd\u5199\u4e0a\u9762\u7684\u4ee3\u7801\uff1a s = 'ABCDEFGH' while s : ... x , * s = s ... print ( x , s ) ... A [ 'B' , 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] B [ 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] C [ 'D' , 'E' , 'F' , 'G' , 'H' ] D [ 'E' , 'F' , 'G' , 'H' ] E [ 'F' , 'G' , 'H' ] F [ 'G' , 'H' ] G [ 'H' ] H [] \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/yilovexing/article/details/80576788","title":"12-Python3 \u5e8f\u5217\u89e3\u5305"},{"location":"01-basic/12-Python3%20%E5%BA%8F%E5%88%97%E8%A7%A3%E5%8C%85/#python3","text":"ctime: 2021-08-30 mtime: 2024-03-25 Python \u4e2d\u6709\u5f88\u591a\u5f88\u5b9e\u7528\u7684\u8bed\u6cd5\u7cd6\uff0c\u8fd9\u4e9b\u8bed\u6cd5\u7cd6\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u7b80\u5316\u4ee3\u7801\u3001\u66f4\u6613\u7406\u89e3\u7b49\u4f18\u70b9\uff0c\u63a5\u4e0b\u91cc\u518d\u770b\u4e00\u4e2a Python3 \u4e2d\u7279\u522b\u5b9e\u7528\u7684\u8bed\u6cd5\u5e8f\u5217\u89e3\u5305\uff08\u5e8f\u5217\u89e3\u5305\u662f Python 3.0 \u4e4b\u540e\u624d\u6709\u7684\u8bed\u6cd5\uff09\u3002 \u90a3\u4ec0\u4e48\u662f\u5e8f\u5217\u89e3\u5305\u5462\uff1f\u5148\u770b\u4e00\u4e2a\u4f8b\u5b50\uff1a a , b , c = 1 , 2 , 3 a 1 b 2 c 3 \u8fd9\u79cd\u65b9\u6cd5\u5e76\u4e0d\u9650\u4e8e\u5217\u8868\u548c\u5143\u7ec4\uff0c\u800c\u662f\u9002\u7528\u4e8e\u4efb\u610f\u5e8f\u5217\u7c7b\u578b\uff08\u751a\u81f3\u5305\u62ec\u5b57\u7b26\u4e32\u548c\u5b57\u8282\u5e8f\u5217\uff09\u3002\u53ea\u8981\u8d4b\u503c\u8fd0\u7b97\u7b26\u5de6\u8fb9\u7684\u53d8\u91cf\u6570\u76ee\u4e0e\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u6570\u76ee\u76f8\u7b49\uff0c\u4f60\u90fd\u53ef\u4ee5\u7528\u8fd9\u79cd\u65b9\u6cd5\u5c06\u5143\u7d20\u5e8f\u5217\u89e3\u5305\u5230\u53e6\u4e00\u7ec4\u53d8\u91cf\u4e2d\u3002 \u89e3\u5305\u7684\u4f7f\u7528\u8fd8\u53ef\u4ee5\u66f4\u6709\u903c\u683c\uff0c\u53ef\u4ee5\u5229\u7528 * \u8868\u8fbe\u5f0f\u83b7\u53d6\u5355\u4e2a\u53d8\u91cf\u4e2d\u7684\u591a\u4e2a\u5143\u7d20\uff0c\u53ea\u8981\u5b83\u7684\u89e3\u91ca\u6ca1\u6709\u6b67\u4e49\u5373\u53ef\u3002 \u83b7\u53d6\u7684\u503c\u9ed8\u8ba4\u4e3a list","title":"Python3 \u5e8f\u5217\u89e3\u5305"},{"location":"01-basic/12-Python3%20%E5%BA%8F%E5%88%97%E8%A7%A3%E5%8C%85/#_1","text":"a , b , * c = 0 , 1 , 2 , 3 a 0 b 1 c [ 2 , 3 ]","title":"\u83b7\u53d6\u5269\u4f59\u90e8\u5206\uff1a"},{"location":"01-basic/12-Python3%20%E5%BA%8F%E5%88%97%E8%A7%A3%E5%8C%85/#_2","text":"a , * b , c = 0 , 1 , 2 , 3 a 0 b [ 1 , 2 ] c 3","title":"\u83b7\u53d6\u4e2d\u95f4\u90e8\u5206\uff1a"},{"location":"01-basic/12-Python3%20%E5%BA%8F%E5%88%97%E8%A7%A3%E5%8C%85/#_3","text":"a , b , * c = 0 , 1 a 0 b 1 c [] a , * b , c = 0 , 1 a 0 b [] c 1","title":"\u5982\u679c\u5de6\u503c\u6bd4\u53f3\u503c\u8981\u591a\uff0c\u90a3\u4e48\u5e26 * \u7684\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u7a7a"},{"location":"01-basic/12-Python3%20%E5%BA%8F%E5%88%97%E8%A7%A3%E5%8C%85/#_4","text":"( a , b ), ( c , d ) = ( 1 , 2 ), ( 3 , 4 ) a 1 b 2 c 3 d 4 a , b , c , d ( 1 , 2 , 3 , 4 ) # \u63a5\u4e0b\u6765\u5b9e\u6218\u4e00\u4e0b\uff0c\u5047\u5982\u4e00\u4e2a\u5b57\u7b26\u4e32 'ABCDEFGH'\uff0c\u8981\u8f93\u51fa\u4e0b\u5217\u683c\u5f0f: A [ 'B' , 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] B [ 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] C [ 'D' , 'E' , 'F' , 'G' , 'H' ] D [ 'E' , 'F' , 'G' , 'H' ] E [ 'F' , 'G' , 'H' ] F [ 'G' , 'H' ] G [ 'H' ] H [] \u5373\u6bcf\u6b21\u53d6\u51fa\u7b2c\u4e00\u4e2a\u4f5c\u4e3a\u9996\uff0c\u7136\u540e\u7684\u5b57\u7b26\u4e32\u62c6\u6210\u5217\u8868\uff0c\u653e\u7f6e\u5728\u540e\u9762 \u4e00\u822c\u7684\u5904\u7406\u8fc7\u7a0b\u662f: \u5c06\u5207\u7247\u4e2d\u7d22\u5f15\u4e3a 0 \u7684\u5b57\u7b26\u8d4b\u503c\u7ed9 a \u5c06\u5207\u7247\u4e2d\u7d22\u5f15\u4e3a 1 \u4e4b\u540e\u5b57\u7b26\u518d\u8d4b\u503c\u7ed9 s \u7528 list \u51fd\u6570\u5c06\u5b57\u7b26\u4e32\u8f6c\u53d8\u4e3a\u5217\u8868 \u7528 while \u5faa\u73af\u6765 s \u6765\u5224\u65ad\uff0c\u4e3a\u7a7a\uff0c\u5219\u9000\u51fa\u5faa\u73af s = 'ABCDEFGH' while s : ... x , s = s [ 0 ], list ( s [ 1 :]) ... print ( x , s ) ... A [ 'B' , 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] B [ 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] C [ 'D' , 'E' , 'F' , 'G' , 'H' ] D [ 'E' , 'F' , 'G' , 'H' ] E [ 'F' , 'G' , 'H' ] F [ 'G' , 'H' ] G [ 'H' ] H [] \u4e0a\u9762\u7684\u5904\u7406\uff0c\u53ef\u4ee5\u7528\u5e8f\u5217\u89e3\u5305\u7684\u65b9\u6cd5\u4f1a\u6765\u5904\u7406\u3002\u5e8f\u5217\u89e3\u5305\uff0c\u5728\u8d4b\u503c\u65f6\u65e0\u7591\u66f4\u65b9\u4fbf\u3001\u66f4\u7b80\u6d01\u3001\u66f4\u597d\u7406\u89e3\u3001\u9002\u7528\u6027\u66f4\u5f3a\uff01 \u8fd0\u7528\u5e8f\u5217\u89e3\u5305\u7684\u529f\u80fd\u91cd\u5199\u4e0a\u9762\u7684\u4ee3\u7801\uff1a s = 'ABCDEFGH' while s : ... x , * s = s ... print ( x , s ) ... A [ 'B' , 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] B [ 'C' , 'D' , 'E' , 'F' , 'G' , 'H' ] C [ 'D' , 'E' , 'F' , 'G' , 'H' ] D [ 'E' , 'F' , 'G' , 'H' ] E [ 'F' , 'G' , 'H' ] F [ 'G' , 'H' ] G [ 'H' ] H [] \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/yilovexing/article/details/80576788","title":"\u5d4c\u5957\u89e3\u5305"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/","text":"\u57fa\u7840\u7ec3\u4e60 \u00b6 26-\u4e5d\u4e5d\u4e58\u6cd5\u8868 \u00b6 for i in range ( 1 , 10 ): for j in range ( 1 , i + 1 ): print ( ' %s * %s = %s ' % ( j , i , i * j ), end = ' ' ) print () # i=1 ->j: [1] # i=2 ->j: [1,2] # i=3 ->j: [1,2,3] # \u7531\u7528\u6237\u6307\u5b9a\u76f8\u4e58\u5230\u591a\u5c11 n = int ( input ( 'number: ' )) for i in range ( 1 , n + 1 ): for j in range ( 1 , i + 1 ): print ( ' %s * %s = %s ' % ( j , i , i * j ), end = ' ' ) print () 27-\u9010\u6b65\u5b9e\u73b0\u5217\u8868\u89e3\u6790 \u00b6 # 10+5\u7684\u7ed3\u679c\u653e\u5230\u5217\u8868\u4e2d [ 10 + 5 ] # 10+5\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u8ba1\u7b9710\u6b21 [ 10 + 5 for i in range ( 10 )] # 10+i\u7684i\u6765\u81ea\u4e8e\u5faa\u73af [ 10 + i for i in range ( 10 )] [ 10 + i for i in range ( 1 , 11 )] # \u901a\u8fc7if\u8fc7\u6ee4\uff0c\u6ee1\u8db3if\u6761\u4ef6\u7684\u624d\u53c2\u4e0e10+i\u7684\u8fd0\u7b97 [ 10 + i for i in range ( 1 , 11 ) if i % 2 == 1 ] [ 10 + i for i in range ( 1 , 11 ) if i % 2 ] # \u751f\u6210IP\u5730\u5740\u5217\u8868 [ '192.168.1. %s ' % i for i in range ( 1 , 255 )] 28-\u4e09\u5c40\u4e24\u80dc\u7684\u77f3\u5934\u526a\u5200\u5e03 \u00b6 import random all_choices = [ '\u77f3\u5934' , '\u526a\u5200' , '\u5e03' ] win_list = [[ '\u77f3\u5934' , '\u526a\u5200' ], [ '\u526a\u5200' , '\u5e03' ], [ '\u5e03' , '\u77f3\u5934' ]] prompt = \"\"\"(0) \u77f3\u5934 (1) \u526a\u5200 (2) \u5e03 \u8bf7\u9009\u62e9(0/1/2): \"\"\" cwin = 0 pwin = 0 while cwin < 2 and pwin < 2 : computer = random . choice ( all_choices ) ind = int ( input ( prompt )) player = all_choices [ ind ] print ( \"Your choice: %s , Computer's choice: %s \" % ( player , computer )) if player == computer : print ( ' \\033 [32;1m\u5e73\u5c40 \\033 [0m' ) elif [ player , computer ] in win_list : pwin += 1 print ( ' \\033 [31;1mYou WIN!!! \\033 [0m' ) else : cwin += 1 print ( ' \\033 [31;1mYou LOSE!!! \\033 [0m' ) 29-\u6587\u4ef6\u5bf9\u8c61\u57fa\u7840\u64cd\u4f5c \u00b6 # \u6587\u4ef6\u64cd\u4f5c\u7684\u4e09\u4e2a\u6b65\u9aa4\uff1a\u6253\u5f00\u3001\u8bfb\u5199\u3001\u5173\u95ed # cp /etc/passwd /tmp f = open ( '/tmp/passwd' ) # \u9ed8\u8ba4\u4ee5r\u7684\u65b9\u5f0f\u6253\u5f00\u7eaf\u6587\u672c\u6587\u4ef6 data = f . read () # read()\u628a\u6240\u6709\u5185\u5bb9\u8bfb\u53d6\u51fa\u6765 print ( data ) data = f . read () # \u968f\u7740\u8bfb\u5199\u7684\u8fdb\u884c\uff0c\u6587\u4ef6\u6307\u9488\u5411\u540e\u79fb\u52a8\u3002 # \u56e0\u4e3a\u7b2c\u4e00\u4e2af.read()\u5df2\u7ecf\u628a\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u7ed3\u5c3e\u4e86\uff0c\u6240\u4ee5\u518d\u8bfb\u5c31\u6ca1\u6709\u6570\u636e\u4e86 # \u6240\u4ee5data\u662f\u7a7a\u5b57\u7b26\u4e32 f . close () f = open ( '/tmp/passwd' ) data = f . read ( 4 ) # \u8bfb4\u5b57\u8282 f . readline () # \u8bfb\u5230\u6362\u884c\u7b26\\n\u7ed3\u675f f . readlines () # \u628a\u6bcf\u4e00\u884c\u6570\u636e\u8bfb\u51fa\u6765\u653e\u5230\u5217\u8868\u4e2d f . close () ################################ f = open ( '/tmp/passwd' ) for line in f : print ( line , end = '' ) f . close () ############################## f = open ( '\u56fe\u7247\u5730\u5740' , 'rb' ) # \u6253\u5f00\u975e\u6587\u672c\u6587\u4ef6\u8981\u52a0\u53c2\u6570b f . read ( 4096 ) f . close () ################################## f = open ( '/tmp/myfile' , 'w' ) # 'w'\u6253\u5f00\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa f . write ( 'hello world! \\n ' ) f . flush () # \u7acb\u5373\u5c06\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u540c\u6b65\u5230\u78c1\u76d8 f . writelines ([ '2nd line. \\n ' , 'new line. \\n ' ]) f . close () # \u5173\u95ed\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u6570\u636e\u4fdd\u5b58\u5230\u78c1\u76d8 ############################## with open ( '/tmp/passwd' ) as f : print ( f . readline ()) ######################### f = open ( '/tmp/passwd' ) f . tell () # \u67e5\u770b\u6587\u4ef6\u6307\u9488\u7684\u4f4d\u7f6e f . readline () f . tell () f . seek ( 0 , 0 ) # \u7b2c\u4e00\u4e2a\u6570\u5b57\u662f\u504f\u79fb\u91cf\uff0c\u7b2c2\u4f4d\u662f\u6570\u5b57\u662f\u76f8\u5bf9\u4f4d\u7f6e\u3002 # \u76f8\u5bf9\u4f4d\u7f6e0\u8868\u793a\u5f00\u5934\uff0c1\u8868\u793a\u5f53\u524d\uff0c2\u8868\u793a\u7ed3\u5c3e f . tell () f . close () 30-\u62f7\u8d1d\u6587\u4ef6 \u00b6 \u62f7\u8d1d\u6587\u4ef6\u5c31\u662f\u4ee5r\u7684\u65b9\u5f0f\u6253\u5f00\u6e90\u6587\u4ef6\uff0c\u4ee5w\u7684\u65b9\u5f0f\u6253\u5f00\u76ee\u6807\u6587\u4ef6\uff0c\u5c06\u6e90\u6587\u4ef6\u6570\u636e\u8bfb\u51fa\u540e\uff0c\u5199\u5230\u76ee\u6807\u6587\u4ef6\u3002 \u4ee5\u4e0b\u662f\u3010\u4e0d\u63a8\u8350\u3011\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u53ef\u4ee5\u5de5\u4f5c\uff1a f1 = open ( '/bin/ls' , 'rb' ) f2 = open ( '/root/ls' , 'wb' ) data = f1 . read () f2 . write ( data ) f1 . close () f2 . close () 31-\u62f7\u8d1d\u6587\u4ef6 \u00b6 \u6bcf\u6b21\u8bfb\u53d64K\uff0c\u8bfb\u5b8c\u4e3a\u6b62\uff1a src_fname = '/bin/ls' dst_fname = '/root/ls' src_fobj = open ( src_fname , 'rb' ) dst_fobj = open ( dst_fname , 'wb' ) while True : data = src_fobj . read ( 4096 ) if not data : break dst_fobj . write ( data ) src_fobj . close () dst_fobj . close () 32-\u4f4d\u7f6e\u53c2\u6570 \u00b6 \u6ce8\u610f\uff1a\u4f4d\u7f6e\u53c2\u6570\u4e2d\u7684\u6570\u5b57\u662f\u5b57\u7b26\u5f62\u5f0f\u7684 import sys print ( sys . argv ) # sys.argv\u662fsys\u6a21\u5757\u91cc\u7684argv\u5217\u8868 # python3 position_args.py # python3 position_args.py 10 # python3 position_args.py 10 bob 33-\u51fd\u6570\u5e94\u7528-\u6590\u6ce2\u90a3\u5951\u6570\u5217 \u00b6 def gen_fib ( l ): fib = [ 0 , 1 ] for i in range ( l - len ( fib )): fib . append ( fib [ - 1 ] + fib [ - 2 ]) return fib # \u8fd4\u56de\u5217\u8868\uff0c\u4e0d\u8fd4\u56de\u53d8\u91cffib a = gen_fib ( 10 ) print ( a ) print ( '-' * 50 ) n = int ( input ( \"length: \" )) print ( gen_fib ( n )) # \u4e0d\u4f1a\u628a\u53d8\u91cfn\u4f20\u5165\uff0c\u662f\u628an\u4ee3\u8868\u7684\u503c\u8d4b\u503c\u7ed9\u5f62\u53c2 34-\u51fd\u6570-\u62f7\u8d1d\u6587\u4ef6 \u00b6 import sys def copy ( src_fname , dst_fname ): src_fobj = open ( src_fname , 'rb' ) dst_fobj = open ( dst_fname , 'wb' ) while True : data = src_fobj . read ( 4096 ) if not data : break dst_fobj . write ( data ) src_fobj . close () dst_fobj . close () copy ( sys . argv [ 1 ], sys . argv [ 2 ]) # \u6267\u884c\u65b9\u5f0f # cp_func.py /etc/hosts /tmp/zhuji.txt 35-\u51fd\u6570-\u4e5d\u4e5d\u4e58\u6cd5\u8868 \u00b6 def mtable ( n ): for i in range ( 1 , n + 1 ): for j in range ( 1 , i + 1 ): print ( ' %s * %s = %s ' % ( j , i , i * j ), end = ' ' ) print () mtable ( 6 ) mtable ( 9 ) 36-\u6a21\u5757\u57fa\u7840 \u00b6 \u6bcf\u4e00\u4e2a\u4ee5py\u4f5c\u4e3a\u6269\u5c55\u540d\u7684\u6587\u4ef6\u90fd\u662f\u4e00\u4e2a\u6a21\u5757\u3002 star . py \uff1a hi = 'hello world!' def pstar ( n = 50 ): print ( '*' * n ) if __name__ == '__main__' : pstar () pstar ( 30 ) \u5728call_star . py\u4e2d\u8c03\u7528star\u6a21\u5757 \uff1a import star print ( star . hi ) star . pstar () star . pstar ( 30 ) 37-\u751f\u6210\u5bc6\u7801/\u9a8c\u8bc1\u7801 \u00b6 \u6b64\u6587\u4ef6\u540d\u4e3a\uff1a randpass.py \u601d\u8def\uff1a 1\u3001\u8bbe\u7f6e\u4e00\u4e2a\u7528\u4e8e\u968f\u673a\u53d6\u51fa\u5b57\u7b26\u7684\u57fa\u7840\u5b57\u7b26\u4e32\uff0c\u672c\u4f8b\u4f7f\u7528\u5927\u5c0f\u5199\u5b57\u6bcd\u52a0\u6570\u5b57 2\u3001\u5faa\u73afn\u6b21\uff0c\u6bcf\u6b21\u968f\u673a\u53d6\u51fa\u4e00\u4e2a\u5b57\u7b26 3\u3001\u5c06\u5404\u4e2a\u5b57\u7b26\u62fc\u63a5\u8d77\u6765\uff0c\u4fdd\u5b58\u5230\u53d8\u91cfresult\u4e2d from random import choice import string all_chs = string . ascii_letters + string . digits # \u5927\u5c0f\u5199\u5b57\u6bcd\u52a0\u6570\u5b57 def gen_pass ( n = 8 ): result = '' for i in range ( n ): ch = choice ( all_chs ) result += ch return result if __name__ == '__main__' : print ( gen_pass ()) print ( gen_pass ( 4 )) print ( gen_pass ( 10 )) 38-\u5e8f\u5217\u5bf9\u8c61\u65b9\u6cd5 \u00b6 from random import randint alist = list () # [] list ( 'hello' ) # ['h', 'e', 'l', 'l', 'o'] list (( 10 , 20 , 30 )) # [10, 20, 30] \u5143\u7ec4\u8f6c\u5217\u8868 astr = str () # '' str ( 10 ) # '10' str ([ 'h' , 'e' , 'l' , 'l' , 'o' ]) # \u5c06\u5217\u8868\u8f6c\u6210\u5b57\u7b26\u4e32 atuple = tuple () # () tuple ( 'hello' ) # ('h', 'e', 'l', 'l', 'o') num_list = [ randint ( 1 , 100 ) for i in range ( 10 )] max ( num_list ) min ( num_list ) 39-\u5e8f\u5217\u5bf9\u8c61\u65b9\u6cd52 \u00b6 alist = [ 10 , 'john' ] # list(enumerate(alist)) # [(0, 10), (1, 'john')] # a, b = 0, 10 # a->0 ->10 for ind in range ( len ( alist )): print ( ' %s : %s ' % ( ind , alist [ ind ])) for item in enumerate ( alist ): print ( ' %s : %s ' % ( item [ 0 ], item [ 1 ])) for ind , val in enumerate ( alist ): print ( ' %s : %s ' % ( ind , val )) atuple = ( 96 , 97 , 40 , 75 , 58 , 34 , 69 , 29 , 66 , 90 ) sorted ( atuple ) sorted ( 'hello' ) for i in reversed ( atuple ): print ( i , end = ',' ) 40-\u5b57\u7b26\u4e32\u65b9\u6cd5 \u00b6 py_str = 'hello world!' py_str . capitalize () py_str . title () py_str . center ( 50 ) py_str . center ( 50 , '#' ) py_str . ljust ( 50 , '*' ) py_str . rjust ( 50 , '*' ) py_str . count ( 'l' ) # \u7edf\u8ba1l\u51fa\u73b0\u7684\u6b21\u6570 py_str . count ( 'lo' ) py_str . endswith ( '!' ) # \u4ee5!\u7ed3\u5c3e\u5417\uff1f py_str . endswith ( 'd!' ) py_str . startswith ( 'a' ) # \u4ee5a\u5f00\u5934\u5417\uff1f py_str . islower () # \u5b57\u6bcd\u90fd\u662f\u5c0f\u5199\u7684\uff1f\u5176\u4ed6\u5b57\u7b26\u4e0d\u8003\u8651 py_str . isupper () # \u5b57\u6bcd\u90fd\u662f\u5927\u5199\u7684\uff1f\u5176\u4ed6\u5b57\u7b26\u4e0d\u8003\u8651 'Hao123' . isdigit () # \u6240\u6709\u5b57\u7b26\u90fd\u662f\u6570\u5b57\u5417\uff1f 'Hao123' . isalnum () # \u6240\u6709\u5b57\u7b26\u90fd\u662f\u5b57\u6bcd\u6570\u5b57\uff1f ' hello \\t ' . strip () # \u53bb\u9664\u4e24\u7aef\u7a7a\u767d\u5b57\u7b26\uff0c\u5e38\u7528 ' hello \\t ' . lstrip () ' hello \\t ' . rstrip () 'how are you?' . split () 'hello.tar.gz' . split ( '.' ) '.' . join ([ 'hello' , 'tar' , 'gz' ]) '-' . join ([ 'hello' , 'tar' , 'gz' ]) \u8fd9\u91cc\u6709python\u5165\u95e8\u7684120\u4e2a\u57fa\u7840\u7ec3\u4e60\uff081~40\uff09\uff0c\u5e0c\u671b\u5bf9\u4f60\u6709\u7528\u3002 41-\u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u00b6 \" %s is %s years old\" % ( 'bob' , 23 ) # \u5e38\u7528 \" %s is %d years old\" % ( 'bob' , 23 ) # \u5e38\u7528 \" %s is %d years old\" % ( 'bob' , 23.5 ) # %d\u662f\u6574\u6570 \u5e38\u7528 \" %s is %f years old\" % ( 'bob' , 23.5 ) \" %s is %5.2f years old\" % ( 'bob' , 23.5 ) # %5.2f\u662f\u5bbd\u5ea6\u4e3a5\uff0c2\u4f4d\u5c0f\u6570 \"97 is %c \" % 97 \"11 is %#o \" % 11 # %#o\u8868\u793a\u6709\u524d\u7f00\u76848\u8fdb\u5236 \"11 is %#x \" % 11 \" %10s%5s \" % ( 'name' , 'age' ) # %10s\u8868\u793a\u603b\u5bbd\u5ea6\u4e3a10\uff0c\u53f3\u5bf9\u9f50, \u5e38\u7528 \" %10s%5s \" % ( 'bob' , 25 ) \" %10s%5s \" % ( 'alice' , 23 ) \" %-10s%-5s \" % ( 'name' , 'age' ) # %-10s\u8868\u793a\u5de6\u5bf9\u9f50, \u5e38\u7528 \" %-10s%-5s \" % ( 'bob' , 25 ) \" %10d \" % 123 \" %010d \" % 123 \" {} is {} years old\" . format ( 'bob' , 25 ) \" {1} is {0} years old\" . format ( 25 , 'bob' ) \" {:<10}{:<8} \" . format ( 'name' , 'age' ) 42-shutil\u6a21\u5757\u5e38\u7528\u65b9\u6cd5 \u00b6 import shutil with open ( '/etc/passwd' , 'rb' ) as sfobj : with open ( '/tmp/mima.txt' , 'wb' ) as dfobj : shutil . copyfileobj ( sfobj , dfobj ) # \u62f7\u8d1d\u6587\u4ef6\u5bf9\u8c61 shutil . copyfile ( '/etc/passwd' , '/tmp/mima2.txt' ) shutil . copy ( '/etc/shadow' , '/tmp/' ) # cp /etc/shadow /tmp/ shutil . copy2 ( '/etc/shadow' , '/tmp/' ) # cp -p /etc/shadow /tmp/ shutil . move ( '/tmp/mima.txt' , '/var/tmp/' ) # mv /tmp/mima.txt /var/tmp/ shutil . copytree ( '/etc/security' , '/tmp/anquan' ) # cp -r /etc/security /tmp/anquan shutil . rmtree ( '/tmp/anquan' ) # rm -rf /tmp/anquan # \u5c06mima2.txt\u7684\u6743\u9650\u8bbe\u7f6e\u6210\u4e0e/etc/shadow\u4e00\u6837 shutil . copymode ( '/etc/shadow' , '/tmp/mima2.txt' ) # \u5c06mima2.txt\u7684\u5143\u6570\u636e\u8bbe\u7f6e\u6210\u4e0e/etc/shadow\u4e00\u6837 # \u5143\u6570\u636e\u4f7f\u7528stat /etc/shadow\u67e5\u770b shutil . copystat ( '/etc/shadow' , '/tmp/mima2.txt' ) shutil . chown ( '/tmp/mima2.txt' , user = 'zhangsan' , group = 'zhangsan' ) 43-\u7ec3\u4e60\uff1a\u751f\u6210\u6587\u672c\u6587\u4ef6 \u00b6 import os def get_fname (): while True : fname = input ( 'filename: ' ) if not os . path . exists ( fname ): break print ( ' %s already exists. Try again' % fname ) return fname def get_content (): content = [] print ( '\u8f93\u5165\u6570\u636e\uff0c\u8f93\u5165end\u7ed3\u675f' ) while True : line = input ( '> ' ) if line == 'end' : break content . append ( line ) return content def wfile ( fname , content ): with open ( fname , 'w' ) as fobj : fobj . writelines ( content ) if __name__ == '__main__' : fname = get_fname () content = get_content () content = [ ' %s \\n ' % line for line in content ] wfile ( fname , content ) 44-\u5217\u8868\u65b9\u6cd5 \u00b6 alist = [ 1 , 2 , 3 , 'bob' , 'alice' ] alist [ 0 ] = 10 alist [ 1 : 3 ] = [ 20 , 30 ] alist [ 2 : 2 ] = [ 22 , 24 , 26 , 28 ] alist . append ( 100 ) alist . remove ( 24 ) # \u5220\u9664\u7b2c\u4e00\u4e2a24 alist . index ( 'bob' ) # \u8fd4\u56de\u4e0b\u6807 blist = alist . copy () # \u76f8\u5f53\u4e8eblist = alist[:] alist . insert ( 1 , 15 ) # \u5411\u4e0b\u6807\u4e3a1\u7684\u4f4d\u7f6e\u63d2\u5165\u6570\u5b5715 alist . pop () # \u9ed8\u8ba4\u5f39\u51fa\u6700\u540e\u4e00\u9879 alist . pop ( 2 ) # \u5f39\u51fa\u4e0b\u6807\u4e3a2\u7684\u9879\u76ee alist . pop ( alist . index ( 'bob' )) alist . sort () alist . reverse () alist . count ( 20 ) # \u7edf\u8ba120\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 alist . clear () # \u6e05\u7a7a alist . append ( 'new' ) alist . extend ( 'new' ) alist . extend ([ 'hello' , 'world' , 'hehe' ]) 45-\u68c0\u67e5\u5408\u6cd5\u6807\u8bc6\u7b26 \u00b6 import sys import keyword import string first_chs = string . ascii_letters + '_' all_chs = first_chs + string . digits def check_id ( idt ): if keyword . iskeyword ( idt ): return \" %s is keyword\" % idt if idt [ 0 ] not in first_chs : return \"1st invalid\" for ind , ch in enumerate ( idt [ 1 :]): if ch not in all_chs : return \"char in postion # %s invalid\" % ( ind + 2 ) return \" %s is valid\" % idt if __name__ == '__main__' : print ( check_id ( sys . argv [ 1 ])) # python3 checkid.py abc@123 46-\u521b\u5efa\u7528\u6237\uff0c\u8bbe\u7f6e\u968f\u673a\u5bc6\u7801 \u00b6 randpass\u6a21\u5757\u53c2\u89c1\u300a37-\u751f\u6210\u5bc6\u7801/\u9a8c\u8bc1\u7801\u300b import subprocess import sys from randpass import gen_pass def adduser ( username , password , fname ): data = \"\"\"user information: %s : %s \"\"\" subprocess . call ( 'useradd %s ' % username , shell = True ) subprocess . call ( 'echo %s | passwd --stdin %s ' % ( password , username ), shell = True ) with open ( fname , 'a' ) as fobj : fobj . write ( data % ( username , password )) if __name__ == '__main__' : username = sys . argv [ 1 ] password = gen_pass () adduser ( username , password , '/tmp/user.txt' ) # python3 adduser.py john 47-\u5217\u8868\u7ec3\u4e60\uff1a\u6a21\u62df\u6808\u64cd\u4f5c \u00b6 stack = [] def push_it (): item = input ( 'item to push: ' ) stack . append ( item ) def pop_it (): if stack : print ( \"from stack popped %s \" % stack . pop ()) def view_it (): print ( stack ) def show_menu (): cmds = { '0' : push_it , '1' : pop_it , '2' : view_it } # \u5c06\u51fd\u6570\u5b58\u5165\u5b57\u5178 prompt = \"\"\"(0) push it (1) pop it (2) view it (3) exit Please input your choice(0/1/2/3): \"\"\" while True : # input()\u5f97\u5230\u5b57\u7b26\u4e32\uff0c\u7528strip()\u53bb\u9664\u4e24\u7aef\u7a7a\u767d\uff0c\u518d\u53d6\u4e0b\u6807\u4e3a0\u7684\u5b57\u7b26 choice = input ( prompt ) . strip ()[ 0 ] if choice not in '0123' : print ( 'Invalid input. Try again.' ) continue if choice == '3' : break cmds [ choice ]() if __name__ == '__main__' : show_menu () 48-\u5b9e\u73b0Linux\u7cfb\u7edf\u4e2dunix2dos\u529f\u80fd \u00b6 import sys def unix2dos ( fname ): dst_fname = fname + '.txt' with open ( fname ) as src_fobj : with open ( dst_fname , 'w' ) as dst_fobj : for line in src_fobj : line = line . rstrip () + ' \\r\\n ' dst_fobj . write ( line ) if __name__ == '__main__' : unix2dos ( sys . argv [ 1 ]) 49-\u52a8\u753b\u7a0b\u5e8f\uff1a@\u4ece\u4e00\u884c#\u4e2d\u7a7f\u8fc7 \u00b6 \\r\u662f\u56de\u8f66\u4e0d\u6362\u884c import time length = 19 count = 0 while True : print ( ' \\r %s @ %s ' % ( '#' * count , '#' * ( length - count )), end = '' ) try : time . sleep ( 0.3 ) except KeyboardInterrupt : print ( ' \\n Bye-bye' ) break if count == length : count = 0 count += 1 50-\u5b57\u5178\u57fa\u7840\u7528\u6cd5 \u00b6 adict = dict () # {} dict ([ 'ab' , 'cd' ]) bdict = dict ([( 'name' , 'bob' ),( 'age' , 25 )]) {} . fromkeys ([ 'zhangsan' , 'lisi' , 'wangwu' ], 11 ) for key in bdict : print ( ' %s : %s ' % ( key , bdict [ key ])) print ( \" %(name)s : %(age)s \" % bdict ) bdict [ 'name' ] = 'tom' bdict [ 'email' ] = 'tom@tedu.cn' del bdict [ 'email' ] bdict . pop ( 'age' ) bdict . clear () 51-\u5b57\u5178\u5e38\u7528\u65b9\u6cd5 \u00b6 adict = dict ([( 'name' , 'bob' ),( 'age' , 25 )]) len ( adict ) hash ( 10 ) # \u5224\u65ad\u7ed9\u5b9a\u7684\u6570\u636e\u662f\u4e0d\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u4e0d\u53ef\u53d8\u6570\u636e\u624d\u80fd\u4f5c\u4e3akey adict . keys () adict . values () adict . items () # get\u65b9\u6cd5\u5e38\u7528\uff0c\u91cd\u8981 adict . get ( 'name' ) # \u53d6\u51fa\u5b57\u5178\u4e2dname\u5bf9\u5e94\u7684value\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56deNone print ( adict . get ( 'qq' )) # None print ( adict . get ( 'qq' , 'not found' )) # \u6ca1\u6709qq\uff0c\u8fd4\u56de\u6307\u5b9a\u5185\u5bb9 print ( adict . get ( 'age' , 'not found' )) adict . update ({ 'phone' : '13455667788' }) 52-\u96c6\u5408\u5e38\u7528\u65b9\u6cd5 \u00b6 # \u96c6\u5408\u76f8\u5f53\u4e8e\u662f\u65e0\u503c\u7684\u5b57\u5178\uff0c\u6240\u4ee5\u4e5f\u7528{}\u8868\u793a myset = set ( 'hello' ) len ( myset ) for ch in myset : print ( ch ) aset = set ( 'abc' ) bset = set ( 'cde' ) aset & bset # \u4ea4\u96c6 aset . intersection ( bset ) # \u4ea4\u96c6 aset | bset # \u5e76\u96c6 aset . union ( bset ) # \u5e76\u96c6 aset - bset # \u5dee\u8865 aset . difference ( bset ) # \u5dee\u8865 aset . add ( 'new' ) aset . update ([ 'aaa' , 'bbb' ]) aset . remove ( 'bbb' ) cset = set ( 'abcde' ) dset = set ( 'bcd' ) cset . issuperset ( dset ) # cset\u662fdset\u7684\u8d85\u96c6\u4e48\uff1f cset . issubset ( dset ) # cset\u662fdset\u7684\u5b50\u96c6\u4e48\uff1f 53-\u96c6\u5408\u5b9e\u4f8b\uff1a\u53d6\u51fa\u7b2c\u4e8c\u4e2a\u6587\u4ef6\u6709\uff0c\u7b2c\u4e00\u4e2a\u6587\u4ef6\u6ca1\u6709\u7684\u884c \u00b6 # cp /etc/passwd . # cp /etc/passwd mima # vim mima -> \u4fee\u6539\uff0c\u4e0epasswd\u6709\u4e9b\u533a\u522b with open ( 'passwd' ) as fobj : aset = set ( fobj ) with open ( 'mima' ) as fobj : bset = set ( fobj ) with open ( 'diff.txt' , 'w' ) as fobj : fobj . writelines ( bset - aset ) 54-\u5b57\u5178\u7ec3\u4e60\uff1a\u6a21\u62df\u6ce8\u518c/\u767b\u9646 \u00b6 import getpass userdb = {} def register (): username = input ( 'username: ' ) if username in userdb : print ( ' %s already exists.' % username ) else : password = input ( 'password: ' ) userdb [ username ] = password def login (): username = input ( 'username: ' ) password = getpass . getpass ( \"password: \" ) if userdb . get ( username ) != password : print ( 'login failed' ) else : print ( 'login successful' ) def show_menu (): cmds = { '0' : register , '1' : login } prompt = \"\"\"(0) register (1) login (2) exit Please input your choice(0/1/2): \"\"\" while True : choice = input ( prompt ) . strip ()[ 0 ] if choice not in '012' : print ( 'Invalid inupt. Try again.' ) continue if choice == '2' : break cmds [ choice ]() if __name__ == '__main__' : show_menu () 55-\u8ba1\u7b97\u5343\u4e07\u6b21\u52a0\u6cd5\u8fd0\u7b97\u65f6\u95f4 \u00b6 import time result = 0 start = time . time () # \u8fd4\u56de\u8fd0\u7b97\u524d\u65f6\u95f4\u6233 for i in range ( 10000000 ): result += i end = time . time () # \u8fd4\u56de\u8fd0\u7b97\u540e\u65f6\u95f4\u6233 print ( result ) print ( end - start ) 56-\u65f6\u95f4\u76f8\u5173\u6a21\u5757\u5e38\u7528\u65b9\u6cd5 \u00b6 import time t = time . localtime () # \u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u7684\u4e5d\u5143\u7ec4 time . gmtime () # \u8fd4\u56de\u683c\u6797\u5a01\u6cbb0\u65f6\u533a\u5f53\u524d\u65f6\u95f4\u7684\u4e5d\u5143\u7ec4 time . time () # \u5e38\u7528\uff0c\u4e0e1970-1-1 8:00\u4e4b\u95f4\u7684\u79d2\u6570\uff0c\u65f6\u95f4\u6233 time . mktime ( t ) # \u628a\u4e5d\u5143\u7ec4\u65f6\u95f4\u8f6c\u6210\u65f6\u95f4\u6233 time . sleep ( 1 ) time . asctime () # \u5982\u679c\u6709\u53c2\u6570\uff0c\u662f\u4e5d\u5143\u7ec4\u5f62\u5f0f time . ctime () # \u8fd4\u56de\u5f53\u524d\u65f6\u95f4\uff0c\u53c2\u6570\u662f\u65f6\u95f4\u6233\uff0c\u5e38\u7528 time . strftime ( \"%Y-%m- %d \" ) # \u5e38\u7528 time . strptime ( '2018-07-20' , \"%Y-%m- %d \" ) # \u8fd4\u56de\u4e5d\u5143\u7ec4\u65f6\u95f4\u683c\u5f0f time . strftime ( '%H:%M:%S' ) ########################################### from datetime import datetime from datetime import timedelta datetime . today () # \u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u7684datetime\u5bf9\u8c61 datetime . now () # \u540c\u4e0a\uff0c\u53ef\u4ee5\u7528\u65f6\u533a\u4f5c\u53c2\u6570 datetime . strptime ( '2018/06/30' , '%Y/%m/ %d ' ) # \u8fd4\u56dedatetime\u5bf9\u8c61 dt = datetime . today () datetime . ctime ( dt ) datetime . strftime ( dt , \"%Y%m %d \" ) days = timedelta ( days = 90 , hours = 3 ) # \u5e38\u7528 dt2 = dt + days dt2 . year dt2 . month dt2 . day dt2 . hour 57-os\u6a21\u5757\u5e38\u7528\u65b9\u6cd5 \u00b6 import os os . getcwd () # \u663e\u793a\u5f53\u524d\u8def\u5f84 os . listdir () # ls -a os . listdir ( '/tmp' ) # ls -a /tmp os . mkdir ( '/tmp/mydemo' ) # mkdir /tmp/mydemo os . chdir ( '/tmp/mydemo' ) # cd /tmp/mydemo os . listdir () os . mknod ( 'test.txt' ) # touch test.txt os . symlink ( '/etc/hosts' , 'zhuji' ) # ln -s /etc/hosts zhuji os . path . isfile ( 'test.txt' ) # \u5224\u65adtest.txt\u662f\u4e0d\u662f\u6587\u4ef6 os . path . islink ( 'zhuji' ) # \u5224\u65adzhuji\u662f\u4e0d\u662f\u8f6f\u94fe\u63a5 os . path . isdir ( '/etc' ) os . path . exists ( '/tmp' ) # \u5224\u65ad\u662f\u5426\u5b58\u5728 os . path . basename ( '/tmp/abc/aaa.txt' ) os . path . dirname ( '/tmp/abc/aaa.txt' ) os . path . split ( '/tmp/abc/aaa.txt' ) os . path . join ( '/home/tom' , 'xyz.txt' ) os . path . abspath ( 'test.txt' ) # \u8fd4\u56de\u5f53\u524d\u76ee\u5f55test.txt\u7684\u7edd\u5bf9\u8def\u5f84 58-pickle\u5b58\u50a8\u5668 \u00b6 import pickle \"\"\"\u4ee5\u524d\u7684\u6587\u4ef6\u5199\u5165\uff0c\u53ea\u80fd\u5199\u5165\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5e0c\u671b\u628a\u4efb\u610f\u6570\u636e\u5bf9\u8c61(\u6570\u5b57\u3001\u5217\u8868\u7b49)\u5199\u5165\u6587\u4ef6\uff0c \u53d6\u51fa\u6765\u7684\u65f6\u5019\u6570\u636e\u7c7b\u578b\u4e0d\u53d8\uff0c\u5c31\u7528\u5230pickle\u4e86 \"\"\" # shop_list = [\"eggs\", \"apple\", \"peach\"] # with open('/tmp/shop.data', 'wb') as fobj: # pickle.dump(shop_list, fobj) with open ( '/tmp/shop.data' , 'rb' ) as fobj : mylist = pickle . load ( fobj ) print ( mylist [ 0 ], mylist [ 1 ], mylist [ 2 ]) 59-\u5f02\u5e38\u5904\u7406\u57fa\u7840 \u00b6 try : # \u628a\u6709\u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u8bed\u53e5\u653e\u5230try\u91cc\u6267\u884c n = int ( input ( \"number: \" )) result = 100 / n print ( result ) except ValueError : print ( 'invalid number' ) except ZeroDivisionError : print ( '0 not allowed' ) except KeyboardInterrupt : print ( 'Bye-bye' ) except EOFError : print ( 'Bye-bye' ) print ( 'Done' ) 60-\u5f02\u5e38\u5904\u7406\u5b8c\u6574\u8bed\u6cd5 \u00b6 try : n = int ( input ( \"number: \" )) result = 100 / n except ( ValueError , ZeroDivisionError ): print ( 'invalid number' ) except ( KeyboardInterrupt , EOFError ): print ( ' \\n Bye-bye' ) else : print ( result ) # \u5f02\u5e38\u4e0d\u53d1\u751f\u65f6\u624d\u6267\u884celse\u5b50\u53e5 finally : print ( 'Done' ) # \u4e0d\u7ba1\u5f02\u5e38\u662f\u5426\u53d1\u751f\u90fd\u5fc5\u987b\u6267\u884c\u7684\u8bed\u53e5 # \u5e38\u7528\u5f62\u5f0f\u6709try-except\u548ctry-finally","title":"22-\u57fa\u7840\u7ec3\u4e60"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#_1","text":"","title":"\u57fa\u7840\u7ec3\u4e60"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#26-","text":"for i in range ( 1 , 10 ): for j in range ( 1 , i + 1 ): print ( ' %s * %s = %s ' % ( j , i , i * j ), end = ' ' ) print () # i=1 ->j: [1] # i=2 ->j: [1,2] # i=3 ->j: [1,2,3] # \u7531\u7528\u6237\u6307\u5b9a\u76f8\u4e58\u5230\u591a\u5c11 n = int ( input ( 'number: ' )) for i in range ( 1 , n + 1 ): for j in range ( 1 , i + 1 ): print ( ' %s * %s = %s ' % ( j , i , i * j ), end = ' ' ) print ()","title":"26-\u4e5d\u4e5d\u4e58\u6cd5\u8868"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#27-","text":"# 10+5\u7684\u7ed3\u679c\u653e\u5230\u5217\u8868\u4e2d [ 10 + 5 ] # 10+5\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u8ba1\u7b9710\u6b21 [ 10 + 5 for i in range ( 10 )] # 10+i\u7684i\u6765\u81ea\u4e8e\u5faa\u73af [ 10 + i for i in range ( 10 )] [ 10 + i for i in range ( 1 , 11 )] # \u901a\u8fc7if\u8fc7\u6ee4\uff0c\u6ee1\u8db3if\u6761\u4ef6\u7684\u624d\u53c2\u4e0e10+i\u7684\u8fd0\u7b97 [ 10 + i for i in range ( 1 , 11 ) if i % 2 == 1 ] [ 10 + i for i in range ( 1 , 11 ) if i % 2 ] # \u751f\u6210IP\u5730\u5740\u5217\u8868 [ '192.168.1. %s ' % i for i in range ( 1 , 255 )]","title":"27-\u9010\u6b65\u5b9e\u73b0\u5217\u8868\u89e3\u6790"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#28-","text":"import random all_choices = [ '\u77f3\u5934' , '\u526a\u5200' , '\u5e03' ] win_list = [[ '\u77f3\u5934' , '\u526a\u5200' ], [ '\u526a\u5200' , '\u5e03' ], [ '\u5e03' , '\u77f3\u5934' ]] prompt = \"\"\"(0) \u77f3\u5934 (1) \u526a\u5200 (2) \u5e03 \u8bf7\u9009\u62e9(0/1/2): \"\"\" cwin = 0 pwin = 0 while cwin < 2 and pwin < 2 : computer = random . choice ( all_choices ) ind = int ( input ( prompt )) player = all_choices [ ind ] print ( \"Your choice: %s , Computer's choice: %s \" % ( player , computer )) if player == computer : print ( ' \\033 [32;1m\u5e73\u5c40 \\033 [0m' ) elif [ player , computer ] in win_list : pwin += 1 print ( ' \\033 [31;1mYou WIN!!! \\033 [0m' ) else : cwin += 1 print ( ' \\033 [31;1mYou LOSE!!! \\033 [0m' )","title":"28-\u4e09\u5c40\u4e24\u80dc\u7684\u77f3\u5934\u526a\u5200\u5e03"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#29-","text":"# \u6587\u4ef6\u64cd\u4f5c\u7684\u4e09\u4e2a\u6b65\u9aa4\uff1a\u6253\u5f00\u3001\u8bfb\u5199\u3001\u5173\u95ed # cp /etc/passwd /tmp f = open ( '/tmp/passwd' ) # \u9ed8\u8ba4\u4ee5r\u7684\u65b9\u5f0f\u6253\u5f00\u7eaf\u6587\u672c\u6587\u4ef6 data = f . read () # read()\u628a\u6240\u6709\u5185\u5bb9\u8bfb\u53d6\u51fa\u6765 print ( data ) data = f . read () # \u968f\u7740\u8bfb\u5199\u7684\u8fdb\u884c\uff0c\u6587\u4ef6\u6307\u9488\u5411\u540e\u79fb\u52a8\u3002 # \u56e0\u4e3a\u7b2c\u4e00\u4e2af.read()\u5df2\u7ecf\u628a\u6587\u4ef6\u6307\u9488\u79fb\u52a8\u5230\u7ed3\u5c3e\u4e86\uff0c\u6240\u4ee5\u518d\u8bfb\u5c31\u6ca1\u6709\u6570\u636e\u4e86 # \u6240\u4ee5data\u662f\u7a7a\u5b57\u7b26\u4e32 f . close () f = open ( '/tmp/passwd' ) data = f . read ( 4 ) # \u8bfb4\u5b57\u8282 f . readline () # \u8bfb\u5230\u6362\u884c\u7b26\\n\u7ed3\u675f f . readlines () # \u628a\u6bcf\u4e00\u884c\u6570\u636e\u8bfb\u51fa\u6765\u653e\u5230\u5217\u8868\u4e2d f . close () ################################ f = open ( '/tmp/passwd' ) for line in f : print ( line , end = '' ) f . close () ############################## f = open ( '\u56fe\u7247\u5730\u5740' , 'rb' ) # \u6253\u5f00\u975e\u6587\u672c\u6587\u4ef6\u8981\u52a0\u53c2\u6570b f . read ( 4096 ) f . close () ################################## f = open ( '/tmp/myfile' , 'w' ) # 'w'\u6253\u5f00\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa f . write ( 'hello world! \\n ' ) f . flush () # \u7acb\u5373\u5c06\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u540c\u6b65\u5230\u78c1\u76d8 f . writelines ([ '2nd line. \\n ' , 'new line. \\n ' ]) f . close () # \u5173\u95ed\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u6570\u636e\u4fdd\u5b58\u5230\u78c1\u76d8 ############################## with open ( '/tmp/passwd' ) as f : print ( f . readline ()) ######################### f = open ( '/tmp/passwd' ) f . tell () # \u67e5\u770b\u6587\u4ef6\u6307\u9488\u7684\u4f4d\u7f6e f . readline () f . tell () f . seek ( 0 , 0 ) # \u7b2c\u4e00\u4e2a\u6570\u5b57\u662f\u504f\u79fb\u91cf\uff0c\u7b2c2\u4f4d\u662f\u6570\u5b57\u662f\u76f8\u5bf9\u4f4d\u7f6e\u3002 # \u76f8\u5bf9\u4f4d\u7f6e0\u8868\u793a\u5f00\u5934\uff0c1\u8868\u793a\u5f53\u524d\uff0c2\u8868\u793a\u7ed3\u5c3e f . tell () f . close ()","title":"29-\u6587\u4ef6\u5bf9\u8c61\u57fa\u7840\u64cd\u4f5c"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#30-","text":"\u62f7\u8d1d\u6587\u4ef6\u5c31\u662f\u4ee5r\u7684\u65b9\u5f0f\u6253\u5f00\u6e90\u6587\u4ef6\uff0c\u4ee5w\u7684\u65b9\u5f0f\u6253\u5f00\u76ee\u6807\u6587\u4ef6\uff0c\u5c06\u6e90\u6587\u4ef6\u6570\u636e\u8bfb\u51fa\u540e\uff0c\u5199\u5230\u76ee\u6807\u6587\u4ef6\u3002 \u4ee5\u4e0b\u662f\u3010\u4e0d\u63a8\u8350\u3011\u7684\u65b9\u5f0f\uff0c\u4f46\u662f\u53ef\u4ee5\u5de5\u4f5c\uff1a f1 = open ( '/bin/ls' , 'rb' ) f2 = open ( '/root/ls' , 'wb' ) data = f1 . read () f2 . write ( data ) f1 . close () f2 . close ()","title":"30-\u62f7\u8d1d\u6587\u4ef6"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#31-","text":"\u6bcf\u6b21\u8bfb\u53d64K\uff0c\u8bfb\u5b8c\u4e3a\u6b62\uff1a src_fname = '/bin/ls' dst_fname = '/root/ls' src_fobj = open ( src_fname , 'rb' ) dst_fobj = open ( dst_fname , 'wb' ) while True : data = src_fobj . read ( 4096 ) if not data : break dst_fobj . write ( data ) src_fobj . close () dst_fobj . close ()","title":"31-\u62f7\u8d1d\u6587\u4ef6"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#32-","text":"\u6ce8\u610f\uff1a\u4f4d\u7f6e\u53c2\u6570\u4e2d\u7684\u6570\u5b57\u662f\u5b57\u7b26\u5f62\u5f0f\u7684 import sys print ( sys . argv ) # sys.argv\u662fsys\u6a21\u5757\u91cc\u7684argv\u5217\u8868 # python3 position_args.py # python3 position_args.py 10 # python3 position_args.py 10 bob","title":"32-\u4f4d\u7f6e\u53c2\u6570"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#33-","text":"def gen_fib ( l ): fib = [ 0 , 1 ] for i in range ( l - len ( fib )): fib . append ( fib [ - 1 ] + fib [ - 2 ]) return fib # \u8fd4\u56de\u5217\u8868\uff0c\u4e0d\u8fd4\u56de\u53d8\u91cffib a = gen_fib ( 10 ) print ( a ) print ( '-' * 50 ) n = int ( input ( \"length: \" )) print ( gen_fib ( n )) # \u4e0d\u4f1a\u628a\u53d8\u91cfn\u4f20\u5165\uff0c\u662f\u628an\u4ee3\u8868\u7684\u503c\u8d4b\u503c\u7ed9\u5f62\u53c2","title":"33-\u51fd\u6570\u5e94\u7528-\u6590\u6ce2\u90a3\u5951\u6570\u5217"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#34-","text":"import sys def copy ( src_fname , dst_fname ): src_fobj = open ( src_fname , 'rb' ) dst_fobj = open ( dst_fname , 'wb' ) while True : data = src_fobj . read ( 4096 ) if not data : break dst_fobj . write ( data ) src_fobj . close () dst_fobj . close () copy ( sys . argv [ 1 ], sys . argv [ 2 ]) # \u6267\u884c\u65b9\u5f0f # cp_func.py /etc/hosts /tmp/zhuji.txt","title":"34-\u51fd\u6570-\u62f7\u8d1d\u6587\u4ef6"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#35-","text":"def mtable ( n ): for i in range ( 1 , n + 1 ): for j in range ( 1 , i + 1 ): print ( ' %s * %s = %s ' % ( j , i , i * j ), end = ' ' ) print () mtable ( 6 ) mtable ( 9 )","title":"35-\u51fd\u6570-\u4e5d\u4e5d\u4e58\u6cd5\u8868"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#36-","text":"\u6bcf\u4e00\u4e2a\u4ee5py\u4f5c\u4e3a\u6269\u5c55\u540d\u7684\u6587\u4ef6\u90fd\u662f\u4e00\u4e2a\u6a21\u5757\u3002 star . py \uff1a hi = 'hello world!' def pstar ( n = 50 ): print ( '*' * n ) if __name__ == '__main__' : pstar () pstar ( 30 ) \u5728call_star . py\u4e2d\u8c03\u7528star\u6a21\u5757 \uff1a import star print ( star . hi ) star . pstar () star . pstar ( 30 )","title":"36-\u6a21\u5757\u57fa\u7840"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#37-","text":"\u6b64\u6587\u4ef6\u540d\u4e3a\uff1a randpass.py \u601d\u8def\uff1a 1\u3001\u8bbe\u7f6e\u4e00\u4e2a\u7528\u4e8e\u968f\u673a\u53d6\u51fa\u5b57\u7b26\u7684\u57fa\u7840\u5b57\u7b26\u4e32\uff0c\u672c\u4f8b\u4f7f\u7528\u5927\u5c0f\u5199\u5b57\u6bcd\u52a0\u6570\u5b57 2\u3001\u5faa\u73afn\u6b21\uff0c\u6bcf\u6b21\u968f\u673a\u53d6\u51fa\u4e00\u4e2a\u5b57\u7b26 3\u3001\u5c06\u5404\u4e2a\u5b57\u7b26\u62fc\u63a5\u8d77\u6765\uff0c\u4fdd\u5b58\u5230\u53d8\u91cfresult\u4e2d from random import choice import string all_chs = string . ascii_letters + string . digits # \u5927\u5c0f\u5199\u5b57\u6bcd\u52a0\u6570\u5b57 def gen_pass ( n = 8 ): result = '' for i in range ( n ): ch = choice ( all_chs ) result += ch return result if __name__ == '__main__' : print ( gen_pass ()) print ( gen_pass ( 4 )) print ( gen_pass ( 10 ))","title":"37-\u751f\u6210\u5bc6\u7801/\u9a8c\u8bc1\u7801"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#38-","text":"from random import randint alist = list () # [] list ( 'hello' ) # ['h', 'e', 'l', 'l', 'o'] list (( 10 , 20 , 30 )) # [10, 20, 30] \u5143\u7ec4\u8f6c\u5217\u8868 astr = str () # '' str ( 10 ) # '10' str ([ 'h' , 'e' , 'l' , 'l' , 'o' ]) # \u5c06\u5217\u8868\u8f6c\u6210\u5b57\u7b26\u4e32 atuple = tuple () # () tuple ( 'hello' ) # ('h', 'e', 'l', 'l', 'o') num_list = [ randint ( 1 , 100 ) for i in range ( 10 )] max ( num_list ) min ( num_list )","title":"38-\u5e8f\u5217\u5bf9\u8c61\u65b9\u6cd5"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#39-2","text":"alist = [ 10 , 'john' ] # list(enumerate(alist)) # [(0, 10), (1, 'john')] # a, b = 0, 10 # a->0 ->10 for ind in range ( len ( alist )): print ( ' %s : %s ' % ( ind , alist [ ind ])) for item in enumerate ( alist ): print ( ' %s : %s ' % ( item [ 0 ], item [ 1 ])) for ind , val in enumerate ( alist ): print ( ' %s : %s ' % ( ind , val )) atuple = ( 96 , 97 , 40 , 75 , 58 , 34 , 69 , 29 , 66 , 90 ) sorted ( atuple ) sorted ( 'hello' ) for i in reversed ( atuple ): print ( i , end = ',' )","title":"39-\u5e8f\u5217\u5bf9\u8c61\u65b9\u6cd52"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#40-","text":"py_str = 'hello world!' py_str . capitalize () py_str . title () py_str . center ( 50 ) py_str . center ( 50 , '#' ) py_str . ljust ( 50 , '*' ) py_str . rjust ( 50 , '*' ) py_str . count ( 'l' ) # \u7edf\u8ba1l\u51fa\u73b0\u7684\u6b21\u6570 py_str . count ( 'lo' ) py_str . endswith ( '!' ) # \u4ee5!\u7ed3\u5c3e\u5417\uff1f py_str . endswith ( 'd!' ) py_str . startswith ( 'a' ) # \u4ee5a\u5f00\u5934\u5417\uff1f py_str . islower () # \u5b57\u6bcd\u90fd\u662f\u5c0f\u5199\u7684\uff1f\u5176\u4ed6\u5b57\u7b26\u4e0d\u8003\u8651 py_str . isupper () # \u5b57\u6bcd\u90fd\u662f\u5927\u5199\u7684\uff1f\u5176\u4ed6\u5b57\u7b26\u4e0d\u8003\u8651 'Hao123' . isdigit () # \u6240\u6709\u5b57\u7b26\u90fd\u662f\u6570\u5b57\u5417\uff1f 'Hao123' . isalnum () # \u6240\u6709\u5b57\u7b26\u90fd\u662f\u5b57\u6bcd\u6570\u5b57\uff1f ' hello \\t ' . strip () # \u53bb\u9664\u4e24\u7aef\u7a7a\u767d\u5b57\u7b26\uff0c\u5e38\u7528 ' hello \\t ' . lstrip () ' hello \\t ' . rstrip () 'how are you?' . split () 'hello.tar.gz' . split ( '.' ) '.' . join ([ 'hello' , 'tar' , 'gz' ]) '-' . join ([ 'hello' , 'tar' , 'gz' ]) \u8fd9\u91cc\u6709python\u5165\u95e8\u7684120\u4e2a\u57fa\u7840\u7ec3\u4e60\uff081~40\uff09\uff0c\u5e0c\u671b\u5bf9\u4f60\u6709\u7528\u3002","title":"40-\u5b57\u7b26\u4e32\u65b9\u6cd5"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#41-","text":"\" %s is %s years old\" % ( 'bob' , 23 ) # \u5e38\u7528 \" %s is %d years old\" % ( 'bob' , 23 ) # \u5e38\u7528 \" %s is %d years old\" % ( 'bob' , 23.5 ) # %d\u662f\u6574\u6570 \u5e38\u7528 \" %s is %f years old\" % ( 'bob' , 23.5 ) \" %s is %5.2f years old\" % ( 'bob' , 23.5 ) # %5.2f\u662f\u5bbd\u5ea6\u4e3a5\uff0c2\u4f4d\u5c0f\u6570 \"97 is %c \" % 97 \"11 is %#o \" % 11 # %#o\u8868\u793a\u6709\u524d\u7f00\u76848\u8fdb\u5236 \"11 is %#x \" % 11 \" %10s%5s \" % ( 'name' , 'age' ) # %10s\u8868\u793a\u603b\u5bbd\u5ea6\u4e3a10\uff0c\u53f3\u5bf9\u9f50, \u5e38\u7528 \" %10s%5s \" % ( 'bob' , 25 ) \" %10s%5s \" % ( 'alice' , 23 ) \" %-10s%-5s \" % ( 'name' , 'age' ) # %-10s\u8868\u793a\u5de6\u5bf9\u9f50, \u5e38\u7528 \" %-10s%-5s \" % ( 'bob' , 25 ) \" %10d \" % 123 \" %010d \" % 123 \" {} is {} years old\" . format ( 'bob' , 25 ) \" {1} is {0} years old\" . format ( 25 , 'bob' ) \" {:<10}{:<8} \" . format ( 'name' , 'age' )","title":"41-\u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#42-shutil","text":"import shutil with open ( '/etc/passwd' , 'rb' ) as sfobj : with open ( '/tmp/mima.txt' , 'wb' ) as dfobj : shutil . copyfileobj ( sfobj , dfobj ) # \u62f7\u8d1d\u6587\u4ef6\u5bf9\u8c61 shutil . copyfile ( '/etc/passwd' , '/tmp/mima2.txt' ) shutil . copy ( '/etc/shadow' , '/tmp/' ) # cp /etc/shadow /tmp/ shutil . copy2 ( '/etc/shadow' , '/tmp/' ) # cp -p /etc/shadow /tmp/ shutil . move ( '/tmp/mima.txt' , '/var/tmp/' ) # mv /tmp/mima.txt /var/tmp/ shutil . copytree ( '/etc/security' , '/tmp/anquan' ) # cp -r /etc/security /tmp/anquan shutil . rmtree ( '/tmp/anquan' ) # rm -rf /tmp/anquan # \u5c06mima2.txt\u7684\u6743\u9650\u8bbe\u7f6e\u6210\u4e0e/etc/shadow\u4e00\u6837 shutil . copymode ( '/etc/shadow' , '/tmp/mima2.txt' ) # \u5c06mima2.txt\u7684\u5143\u6570\u636e\u8bbe\u7f6e\u6210\u4e0e/etc/shadow\u4e00\u6837 # \u5143\u6570\u636e\u4f7f\u7528stat /etc/shadow\u67e5\u770b shutil . copystat ( '/etc/shadow' , '/tmp/mima2.txt' ) shutil . chown ( '/tmp/mima2.txt' , user = 'zhangsan' , group = 'zhangsan' )","title":"42-shutil\u6a21\u5757\u5e38\u7528\u65b9\u6cd5"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#43-","text":"import os def get_fname (): while True : fname = input ( 'filename: ' ) if not os . path . exists ( fname ): break print ( ' %s already exists. Try again' % fname ) return fname def get_content (): content = [] print ( '\u8f93\u5165\u6570\u636e\uff0c\u8f93\u5165end\u7ed3\u675f' ) while True : line = input ( '> ' ) if line == 'end' : break content . append ( line ) return content def wfile ( fname , content ): with open ( fname , 'w' ) as fobj : fobj . writelines ( content ) if __name__ == '__main__' : fname = get_fname () content = get_content () content = [ ' %s \\n ' % line for line in content ] wfile ( fname , content )","title":"43-\u7ec3\u4e60\uff1a\u751f\u6210\u6587\u672c\u6587\u4ef6"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#44-","text":"alist = [ 1 , 2 , 3 , 'bob' , 'alice' ] alist [ 0 ] = 10 alist [ 1 : 3 ] = [ 20 , 30 ] alist [ 2 : 2 ] = [ 22 , 24 , 26 , 28 ] alist . append ( 100 ) alist . remove ( 24 ) # \u5220\u9664\u7b2c\u4e00\u4e2a24 alist . index ( 'bob' ) # \u8fd4\u56de\u4e0b\u6807 blist = alist . copy () # \u76f8\u5f53\u4e8eblist = alist[:] alist . insert ( 1 , 15 ) # \u5411\u4e0b\u6807\u4e3a1\u7684\u4f4d\u7f6e\u63d2\u5165\u6570\u5b5715 alist . pop () # \u9ed8\u8ba4\u5f39\u51fa\u6700\u540e\u4e00\u9879 alist . pop ( 2 ) # \u5f39\u51fa\u4e0b\u6807\u4e3a2\u7684\u9879\u76ee alist . pop ( alist . index ( 'bob' )) alist . sort () alist . reverse () alist . count ( 20 ) # \u7edf\u8ba120\u5728\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 alist . clear () # \u6e05\u7a7a alist . append ( 'new' ) alist . extend ( 'new' ) alist . extend ([ 'hello' , 'world' , 'hehe' ])","title":"44-\u5217\u8868\u65b9\u6cd5"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#45-","text":"import sys import keyword import string first_chs = string . ascii_letters + '_' all_chs = first_chs + string . digits def check_id ( idt ): if keyword . iskeyword ( idt ): return \" %s is keyword\" % idt if idt [ 0 ] not in first_chs : return \"1st invalid\" for ind , ch in enumerate ( idt [ 1 :]): if ch not in all_chs : return \"char in postion # %s invalid\" % ( ind + 2 ) return \" %s is valid\" % idt if __name__ == '__main__' : print ( check_id ( sys . argv [ 1 ])) # python3 checkid.py abc@123","title":"45-\u68c0\u67e5\u5408\u6cd5\u6807\u8bc6\u7b26"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#46-","text":"randpass\u6a21\u5757\u53c2\u89c1\u300a37-\u751f\u6210\u5bc6\u7801/\u9a8c\u8bc1\u7801\u300b import subprocess import sys from randpass import gen_pass def adduser ( username , password , fname ): data = \"\"\"user information: %s : %s \"\"\" subprocess . call ( 'useradd %s ' % username , shell = True ) subprocess . call ( 'echo %s | passwd --stdin %s ' % ( password , username ), shell = True ) with open ( fname , 'a' ) as fobj : fobj . write ( data % ( username , password )) if __name__ == '__main__' : username = sys . argv [ 1 ] password = gen_pass () adduser ( username , password , '/tmp/user.txt' ) # python3 adduser.py john","title":"46-\u521b\u5efa\u7528\u6237\uff0c\u8bbe\u7f6e\u968f\u673a\u5bc6\u7801"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#47-","text":"stack = [] def push_it (): item = input ( 'item to push: ' ) stack . append ( item ) def pop_it (): if stack : print ( \"from stack popped %s \" % stack . pop ()) def view_it (): print ( stack ) def show_menu (): cmds = { '0' : push_it , '1' : pop_it , '2' : view_it } # \u5c06\u51fd\u6570\u5b58\u5165\u5b57\u5178 prompt = \"\"\"(0) push it (1) pop it (2) view it (3) exit Please input your choice(0/1/2/3): \"\"\" while True : # input()\u5f97\u5230\u5b57\u7b26\u4e32\uff0c\u7528strip()\u53bb\u9664\u4e24\u7aef\u7a7a\u767d\uff0c\u518d\u53d6\u4e0b\u6807\u4e3a0\u7684\u5b57\u7b26 choice = input ( prompt ) . strip ()[ 0 ] if choice not in '0123' : print ( 'Invalid input. Try again.' ) continue if choice == '3' : break cmds [ choice ]() if __name__ == '__main__' : show_menu ()","title":"47-\u5217\u8868\u7ec3\u4e60\uff1a\u6a21\u62df\u6808\u64cd\u4f5c"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#48-linuxunix2dos","text":"import sys def unix2dos ( fname ): dst_fname = fname + '.txt' with open ( fname ) as src_fobj : with open ( dst_fname , 'w' ) as dst_fobj : for line in src_fobj : line = line . rstrip () + ' \\r\\n ' dst_fobj . write ( line ) if __name__ == '__main__' : unix2dos ( sys . argv [ 1 ])","title":"48-\u5b9e\u73b0Linux\u7cfb\u7edf\u4e2dunix2dos\u529f\u80fd"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#49-","text":"\\r\u662f\u56de\u8f66\u4e0d\u6362\u884c import time length = 19 count = 0 while True : print ( ' \\r %s @ %s ' % ( '#' * count , '#' * ( length - count )), end = '' ) try : time . sleep ( 0.3 ) except KeyboardInterrupt : print ( ' \\n Bye-bye' ) break if count == length : count = 0 count += 1","title":"49-\u52a8\u753b\u7a0b\u5e8f\uff1a@\u4ece\u4e00\u884c#\u4e2d\u7a7f\u8fc7"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#50-","text":"adict = dict () # {} dict ([ 'ab' , 'cd' ]) bdict = dict ([( 'name' , 'bob' ),( 'age' , 25 )]) {} . fromkeys ([ 'zhangsan' , 'lisi' , 'wangwu' ], 11 ) for key in bdict : print ( ' %s : %s ' % ( key , bdict [ key ])) print ( \" %(name)s : %(age)s \" % bdict ) bdict [ 'name' ] = 'tom' bdict [ 'email' ] = 'tom@tedu.cn' del bdict [ 'email' ] bdict . pop ( 'age' ) bdict . clear ()","title":"50-\u5b57\u5178\u57fa\u7840\u7528\u6cd5"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#51-","text":"adict = dict ([( 'name' , 'bob' ),( 'age' , 25 )]) len ( adict ) hash ( 10 ) # \u5224\u65ad\u7ed9\u5b9a\u7684\u6570\u636e\u662f\u4e0d\u662f\u4e0d\u53ef\u53d8\u7684\uff0c\u4e0d\u53ef\u53d8\u6570\u636e\u624d\u80fd\u4f5c\u4e3akey adict . keys () adict . values () adict . items () # get\u65b9\u6cd5\u5e38\u7528\uff0c\u91cd\u8981 adict . get ( 'name' ) # \u53d6\u51fa\u5b57\u5178\u4e2dname\u5bf9\u5e94\u7684value\uff0c\u5982\u679c\u6ca1\u6709\u8fd4\u56deNone print ( adict . get ( 'qq' )) # None print ( adict . get ( 'qq' , 'not found' )) # \u6ca1\u6709qq\uff0c\u8fd4\u56de\u6307\u5b9a\u5185\u5bb9 print ( adict . get ( 'age' , 'not found' )) adict . update ({ 'phone' : '13455667788' })","title":"51-\u5b57\u5178\u5e38\u7528\u65b9\u6cd5"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#52-","text":"# \u96c6\u5408\u76f8\u5f53\u4e8e\u662f\u65e0\u503c\u7684\u5b57\u5178\uff0c\u6240\u4ee5\u4e5f\u7528{}\u8868\u793a myset = set ( 'hello' ) len ( myset ) for ch in myset : print ( ch ) aset = set ( 'abc' ) bset = set ( 'cde' ) aset & bset # \u4ea4\u96c6 aset . intersection ( bset ) # \u4ea4\u96c6 aset | bset # \u5e76\u96c6 aset . union ( bset ) # \u5e76\u96c6 aset - bset # \u5dee\u8865 aset . difference ( bset ) # \u5dee\u8865 aset . add ( 'new' ) aset . update ([ 'aaa' , 'bbb' ]) aset . remove ( 'bbb' ) cset = set ( 'abcde' ) dset = set ( 'bcd' ) cset . issuperset ( dset ) # cset\u662fdset\u7684\u8d85\u96c6\u4e48\uff1f cset . issubset ( dset ) # cset\u662fdset\u7684\u5b50\u96c6\u4e48\uff1f","title":"52-\u96c6\u5408\u5e38\u7528\u65b9\u6cd5"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#53-","text":"# cp /etc/passwd . # cp /etc/passwd mima # vim mima -> \u4fee\u6539\uff0c\u4e0epasswd\u6709\u4e9b\u533a\u522b with open ( 'passwd' ) as fobj : aset = set ( fobj ) with open ( 'mima' ) as fobj : bset = set ( fobj ) with open ( 'diff.txt' , 'w' ) as fobj : fobj . writelines ( bset - aset )","title":"53-\u96c6\u5408\u5b9e\u4f8b\uff1a\u53d6\u51fa\u7b2c\u4e8c\u4e2a\u6587\u4ef6\u6709\uff0c\u7b2c\u4e00\u4e2a\u6587\u4ef6\u6ca1\u6709\u7684\u884c"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#54-","text":"import getpass userdb = {} def register (): username = input ( 'username: ' ) if username in userdb : print ( ' %s already exists.' % username ) else : password = input ( 'password: ' ) userdb [ username ] = password def login (): username = input ( 'username: ' ) password = getpass . getpass ( \"password: \" ) if userdb . get ( username ) != password : print ( 'login failed' ) else : print ( 'login successful' ) def show_menu (): cmds = { '0' : register , '1' : login } prompt = \"\"\"(0) register (1) login (2) exit Please input your choice(0/1/2): \"\"\" while True : choice = input ( prompt ) . strip ()[ 0 ] if choice not in '012' : print ( 'Invalid inupt. Try again.' ) continue if choice == '2' : break cmds [ choice ]() if __name__ == '__main__' : show_menu ()","title":"54-\u5b57\u5178\u7ec3\u4e60\uff1a\u6a21\u62df\u6ce8\u518c/\u767b\u9646"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#55-","text":"import time result = 0 start = time . time () # \u8fd4\u56de\u8fd0\u7b97\u524d\u65f6\u95f4\u6233 for i in range ( 10000000 ): result += i end = time . time () # \u8fd4\u56de\u8fd0\u7b97\u540e\u65f6\u95f4\u6233 print ( result ) print ( end - start )","title":"55-\u8ba1\u7b97\u5343\u4e07\u6b21\u52a0\u6cd5\u8fd0\u7b97\u65f6\u95f4"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#56-","text":"import time t = time . localtime () # \u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u7684\u4e5d\u5143\u7ec4 time . gmtime () # \u8fd4\u56de\u683c\u6797\u5a01\u6cbb0\u65f6\u533a\u5f53\u524d\u65f6\u95f4\u7684\u4e5d\u5143\u7ec4 time . time () # \u5e38\u7528\uff0c\u4e0e1970-1-1 8:00\u4e4b\u95f4\u7684\u79d2\u6570\uff0c\u65f6\u95f4\u6233 time . mktime ( t ) # \u628a\u4e5d\u5143\u7ec4\u65f6\u95f4\u8f6c\u6210\u65f6\u95f4\u6233 time . sleep ( 1 ) time . asctime () # \u5982\u679c\u6709\u53c2\u6570\uff0c\u662f\u4e5d\u5143\u7ec4\u5f62\u5f0f time . ctime () # \u8fd4\u56de\u5f53\u524d\u65f6\u95f4\uff0c\u53c2\u6570\u662f\u65f6\u95f4\u6233\uff0c\u5e38\u7528 time . strftime ( \"%Y-%m- %d \" ) # \u5e38\u7528 time . strptime ( '2018-07-20' , \"%Y-%m- %d \" ) # \u8fd4\u56de\u4e5d\u5143\u7ec4\u65f6\u95f4\u683c\u5f0f time . strftime ( '%H:%M:%S' ) ########################################### from datetime import datetime from datetime import timedelta datetime . today () # \u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u7684datetime\u5bf9\u8c61 datetime . now () # \u540c\u4e0a\uff0c\u53ef\u4ee5\u7528\u65f6\u533a\u4f5c\u53c2\u6570 datetime . strptime ( '2018/06/30' , '%Y/%m/ %d ' ) # \u8fd4\u56dedatetime\u5bf9\u8c61 dt = datetime . today () datetime . ctime ( dt ) datetime . strftime ( dt , \"%Y%m %d \" ) days = timedelta ( days = 90 , hours = 3 ) # \u5e38\u7528 dt2 = dt + days dt2 . year dt2 . month dt2 . day dt2 . hour","title":"56-\u65f6\u95f4\u76f8\u5173\u6a21\u5757\u5e38\u7528\u65b9\u6cd5"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#57-os","text":"import os os . getcwd () # \u663e\u793a\u5f53\u524d\u8def\u5f84 os . listdir () # ls -a os . listdir ( '/tmp' ) # ls -a /tmp os . mkdir ( '/tmp/mydemo' ) # mkdir /tmp/mydemo os . chdir ( '/tmp/mydemo' ) # cd /tmp/mydemo os . listdir () os . mknod ( 'test.txt' ) # touch test.txt os . symlink ( '/etc/hosts' , 'zhuji' ) # ln -s /etc/hosts zhuji os . path . isfile ( 'test.txt' ) # \u5224\u65adtest.txt\u662f\u4e0d\u662f\u6587\u4ef6 os . path . islink ( 'zhuji' ) # \u5224\u65adzhuji\u662f\u4e0d\u662f\u8f6f\u94fe\u63a5 os . path . isdir ( '/etc' ) os . path . exists ( '/tmp' ) # \u5224\u65ad\u662f\u5426\u5b58\u5728 os . path . basename ( '/tmp/abc/aaa.txt' ) os . path . dirname ( '/tmp/abc/aaa.txt' ) os . path . split ( '/tmp/abc/aaa.txt' ) os . path . join ( '/home/tom' , 'xyz.txt' ) os . path . abspath ( 'test.txt' ) # \u8fd4\u56de\u5f53\u524d\u76ee\u5f55test.txt\u7684\u7edd\u5bf9\u8def\u5f84","title":"57-os\u6a21\u5757\u5e38\u7528\u65b9\u6cd5"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#58-pickle","text":"import pickle \"\"\"\u4ee5\u524d\u7684\u6587\u4ef6\u5199\u5165\uff0c\u53ea\u80fd\u5199\u5165\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5e0c\u671b\u628a\u4efb\u610f\u6570\u636e\u5bf9\u8c61(\u6570\u5b57\u3001\u5217\u8868\u7b49)\u5199\u5165\u6587\u4ef6\uff0c \u53d6\u51fa\u6765\u7684\u65f6\u5019\u6570\u636e\u7c7b\u578b\u4e0d\u53d8\uff0c\u5c31\u7528\u5230pickle\u4e86 \"\"\" # shop_list = [\"eggs\", \"apple\", \"peach\"] # with open('/tmp/shop.data', 'wb') as fobj: # pickle.dump(shop_list, fobj) with open ( '/tmp/shop.data' , 'rb' ) as fobj : mylist = pickle . load ( fobj ) print ( mylist [ 0 ], mylist [ 1 ], mylist [ 2 ])","title":"58-pickle\u5b58\u50a8\u5668"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#59-","text":"try : # \u628a\u6709\u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u8bed\u53e5\u653e\u5230try\u91cc\u6267\u884c n = int ( input ( \"number: \" )) result = 100 / n print ( result ) except ValueError : print ( 'invalid number' ) except ZeroDivisionError : print ( '0 not allowed' ) except KeyboardInterrupt : print ( 'Bye-bye' ) except EOFError : print ( 'Bye-bye' ) print ( 'Done' )","title":"59-\u5f02\u5e38\u5904\u7406\u57fa\u7840"},{"location":"01-basic/22-%E5%9F%BA%E7%A1%80%E7%BB%83%E4%B9%A0/#60-","text":"try : n = int ( input ( \"number: \" )) result = 100 / n except ( ValueError , ZeroDivisionError ): print ( 'invalid number' ) except ( KeyboardInterrupt , EOFError ): print ( ' \\n Bye-bye' ) else : print ( result ) # \u5f02\u5e38\u4e0d\u53d1\u751f\u65f6\u624d\u6267\u884celse\u5b50\u53e5 finally : print ( 'Done' ) # \u4e0d\u7ba1\u5f02\u5e38\u662f\u5426\u53d1\u751f\u90fd\u5fc5\u987b\u6267\u884c\u7684\u8bed\u53e5 # \u5e38\u7528\u5f62\u5f0f\u6709try-except\u548ctry-finally","title":"60-\u5f02\u5e38\u5904\u7406\u5b8c\u6574\u8bed\u6cd5"},{"location":"01-basic/50-python3-subporcess%20%E5%AD%90%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97/","text":"python3. subporcess \u5b50\u8fdb\u7a0b\u7ba1\u7406\u6a21\u5757 \u00b6 \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/weixin_42547344/article/details/80894760 \u7b80\u8981\u8bf4\u660e: \u6709\u9700\u8981\u7528\u5230 python \u8c03\u7528\u5916\u90e8\u7a0b\u5e8f\u547d\u4ee4\u7684\u540c\u5b66\u4eec, \u90a3\u4e48\u4f60\u4eec\u8bf7\u4e00\u5b9a\u9009\u62e9 subprocess \u5e93,\u5b83\u7ed9\u6211\u4eec\u5de5\u4f5c\u5e26\u6765\u6781\u5927\u7684\u65b9\u4fbf\u4e5f\u8bb8\u6211\u8fd9\u4e48\u89e3\u91ca\u4e0d\u6b63\u786e, \u8fd8\u662f\u7528\u5b98\u65b9\u7684\u8bdd\u6765\u8bf4\u5427 <subporcess \u6a21\u5757\u5141\u8bb8\u4f60\u4ea7\u751f\u65b0\u7684\u8fdb\u7a0b\uff0c\u5e76\u4e14\u53ef\u4ee5\u628a\u8f93\u5165\uff0c\u8f93\u51fa\uff0c \u9519\u8bef \u76f4\u63a5\u8fde\u63a5\u5230\u7ba1\u9053\uff0c\u6700\u540e\u83b7\u53d6\u7ed3\u679c\uff0cpython \u4e5f\u6709\u4fe9\u4e2a\u6bd4\u8f83\u529f\u80fd\u4e0d\u662f\u90a3\u4e48\u592a\u5168\u7684\u5185\u7f6e\u6a21\u5757 `\u7b49\u8fd9\u4e9b\uff0c\u603b\u4e4b\u8fd9\u5bb6\u4f19\u7684\u51fa\u73b0\u5c31\u662f\u4ee3\u66ff\u90a3\u4e9b\u7684\uff0c\u8fd9\u4fe9\u5929\u6b63\u7528\u5b83\u5199\u4e86\u4e00\u4e2a\u5c0f\u4e1c\u897f\uff0c 18.1.0 \u00b6 \u7528\u6cd5\u4ecb\u7ecd: \u5728 python2.x \u7684\u7528\u6cd5\u548c python3.x \u6709\u6240\u4e0d\u4e00\u6837\uff0c\u672c\u6587\u5c06\u4ecb\u7ecd\u57fa\u4e8e python3.x \u7248 subprocess \u7b80\u8981\u7528\u6cd5\uff0c3x \u4e2d\u589e\u52a0\u4e86\u4e00\u4e9b\u65b0\u7684\u7279\u6027\uff0c\u5982\u679c\u4fdd\u7559\u4e0e\u65e7\u7248\u672c\u517c\u5bb9\uff0c\u770b\u7ba1\u8fd8\u662f\u53c2\u9605\u65e7\u7248 API. 3x.\u4e2d\u589e\u52a0\u4e86\u65b0\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982 subprocess.run()\u65b9\u6cd5. \u6b64\u65b9\u6cd5\u4f5c\u7528: \u4f7f\u7528\u53c2\u6570\u8fd0\u884c\u547d\u4ee4\u5e76\u8fd4\u56de\u5b8c\u6574\u7684\u8fdb\u7a0b\u5b9e\u4f8b subprocess.run(*popenargs, input=None, timeout=None, check=False, **kwargs) \u6b64\u8c03\u7528\u65b9\u5f0f\u8fd4\u56de CompletedProcess \u5b9e\u4f8b\uff0c\u548c\u76f4\u63a5 Popen \u5dee\u4e0d\u591a\uff0c\u5b9e\u73b0\u662f\u4e00\u6837\u7684\uff0c\u5b9e\u9645\u4e5f\u662f\u8c03\u7528 Popen\uff0c\u4e0e Popen \u6784\u9020\u51fd\u6570\u5927\u81f4\u76f8\u540c\uff0c\u4f8b\u5982: In : subprocess . run ([ \"ls\" , \"-l\" , \"/dev/null\" ] #\u6267\u884cls -l /dev/null \u547d\u4ee4 Out : CompletedProcess ( args = [ 'ls' , '-l' , '/dev/null' ], returncode = 0 ) #ponpenargs: \u547d\u4ee4\u884c\u53c2\u6570\uff0c\u7c7b\u578b\u4e3alist \u6216 str\uff0c\u8fd4\u56deCompletedProcess\u5b9e\u4f8b #returncode: \u6267\u884c\u5b8c\u5b50\u8fdb\u7a0b\u72b6\u6001\uff0c\u901a\u5e38\u8fd4\u56de\u72b6\u6001\u4e3a0\u5219\u8868\u660e\u5b83\u5df2\u7ecf\u8fd0\u884c\u5b8c\u6bd5,\u5f31\u503c\u4e3a\u8d1f\u503c\"-N\",\u8868\u660e\u5b50\u8fdb\u7a0b\u88ab\u7ec8\u6b62. ponpenargs : \u547d\u4ee4\u884c\u53c2\u6570 \uff0c \u7c7b\u578b\u4e3alist \u6216 str \uff0c \u8fd4\u56deCompletedProcess\u5b9e\u4f8b #returncode: \u6267\u884c\u5b8c\u5b50\u8fdb\u7a0b\u72b6\u6001\uff0c\u901a\u5e38\u8fd4\u56de\u72b6\u6001\u4e3a0\u5219\u8868\u660e\u5b83\u5df2\u7ecf\u8fd0\u884c\u5b8c\u6bd5,\u5f31\u503c\u4e3a\u8d1f\u503c\"-N\",\u8868\u660e\u5b50\u8fdb\u7a0b\u88ab\u7ec8\u6b62. Out : subprocess . run ([ \"ls\" , \"-l\" , \"/dev/null\" ], stdout = subprocess . PIPE , stderr = subprocess . PIPE \u4e0a\u8ff0\u4ecb\u7ecd\u65b0\u7248\u672c\u7279\u6027\uff0c\u518d\u770b\u4e0b\u901a\u5e38\u7684\u4e00\u4e9b\u7528\u6cd5\uff1a \u5217\u4e3e\u4e00\u4e9b\u57fa\u672c\u7528\u6cd5: subprocess.call(): \u65b9\u6cd5 call \u7236\u8fdb\u7a0b\u7b49\u5f85\u5b50\u8fdb\u7a0b\u5b8c\u6210\uff0c\u8fd4\u56de\u9000\u51fa\u4fe1\u606f\u3002 subprocess.check_call(): \u65b9\u6cd5 check_call \u7236\u8fdb\u7a0b\u7b49\u5f85\u5b50\u8fdb\u7a0b\u5b8c\u6210\uff0c\u8fd4\u56de 0\uff0c\u552f\u4e00\u4e0d\u540c\u533a\u522b\uff0c\u5b83\u4f1a\u68c0\u67e5\u9000\u51fa\u4fe1\u606f\uff0c\u5982\u679c returncode \u4e0d\u4e3a 0\uff0c\u5219\u5f15\u53d1 subprocess.CallProcessError\u3002 subprocess.check_output(): \u65b9\u6cd5 check_output \u7236\u8fdb\u7a0b\u7b49\u5f85\u5b50\u8fdb\u7a0b\u5b8c\u6210\uff0c\u8fd4\u56de\u5b50\u8fdb\u7a0b\u5411\u6807\u51c6\u8f93\u51fa\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u5b83\u548c check_call \u540c\u6837\u4f1a\u68c0\u67e5\u9000\u51fa\u4fe1\u606f\uff0c\u5982 returncode \u4e0d\u4e3a 0\uff0c\u5219\u5f15\u53d1 subprocess.CallProcessError\u3002 \u6700\u4e3b\u8981\u8fd8\u662f\u8bb2 subprocess.Popen() \u9644\u4e0a\u6e90\u7801\uff0cPopen \u7684\u6784\u9020\u51fd\u6570 def __init__ ( self , args , bufsize =- 1 , executable = None , stdin = None , stdout = None , stderr = None , preexec_fn = None , close_fds = _PLATFORM_DEFAULT_CLOSE_FDS , shell = False , cwd = None , env = None , universal_newlines = False , startupinfo = None , creationflags = 0 , restore_signals = True , start_new_session = False , pass_fds = (), * , encoding = None , errors = None ): \u4e3e\u4e2a\u5c0f\u4f8b\u5b50\uff1a In [ 31 ]: import shlex In [ 32 ]: command_line Out [ 32 ]: '/bin/vikings -input eggs.txt -output \"spam spam.txt\" -cmd \"echo \\' $MONEY \\' \"' In [ 33 ]: args = shlex . split ( command_line ) In [ 34 ]: print ( args ) [ '/bin/vikings' , '-input' , 'eggs.txt' , '-output' , 'spam spam.txt' , '-cmd' , \"echo '$MONEY'\" ] p = subprocess . Popen ( args = args ) shlex: POSIX\u6a21\u5f0f\u4e0b\u7684\u4e00\u4e2a\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\u6a21\u5757 \u7279\u522b\u6ce8\u610f\u4e00\u70b9\uff0cshell \u4e2d\u662f\u7531\u7a7a\u767d\u5206\u5272\uff0c\u4f8b\u5982\u8fd9\u91cc\u7684-input \u548c \u53c2\u6570 eggs.txt \u5c06\u5355\u72ec\u653e\u5230\u5217\u8868\u5143\u7d20\u91cc\uff0c\u800c\u5728 shel \u4e2d\u4f7f\u7528\u65f6\u9700\u8981\u5f15\u7528\u6216\u8005\u53cd\u659c\u6760\u8f6c\u4e49\u53c2\u6570\u3002 \u5728 POSIX \u6a21\u5f0f\u4e0a shell=True\uff0cshell \u9ed8\u8ba4\u4e3a/bin/sh\uff0c\u5982\u679c args \u9ed8\u8ba4\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u8be5\u5b57\u7b26\u4e32\u6307\u5b9a\u901a\u8fc7 shell \u65b9\u5f0f\u6267\u884c\u547d\u4ee4\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u5fc5\u987b\u4e0e shell \u4e0b\u8f93\u5165\u7684\u683c\u5f0f\u4e00\u81f4\u3002 \u5728 3.x \u4e2d \u63d0\u4f9b\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0c\u901a\u8fc7 with \u8bed\u53e5\u652f\u6301 Popen \u5bf9\u8c61\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0c\u5728\u9000\u51fa\u65f6\uff0c\u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5e76\u7b49\u5f85\u8fdb\u7a0b\u3002 In [35]: with subprocess.Popen(['ifconfig'], stdout=subprocess.PIPE) as proc: ...: log.write(proc.stdout.read()) \u5728 python3.6 \u4e2d\u66f4\u6539: ResourceWarning \u5982\u679c\u5b50\u8fdb\u7a0b\u4ecd\u5728\u8fd0\u884c\uff0cPopen \u6790\u591f\u51fd\u6570\u4f1a\u53d1\u51fa\u8b66\u544a. 18.1.1 \u00b6 \u5f02\u5e38\u60c5\u51b5\uff1a\u7a0b\u5e8f\u5728\u6267\u884c\u4e2d\uff0c\u5b50\u8fdb\u7a0b\u4e2d\u5f15\u53d1\u5f02\u5e38\u5c06\u5728\u7236\u8fdb\u7a0b\u4e2d\u63d0\u793a\uff0c\u5e76\u4e14\u5f02\u5e38\u5bf9\u8c61\u4f1a\u6709\u4e00\u4e2a\u989d\u5916\u5c5e\u6027\u8c03\u7528\uff0cchild_traceback() \uff0c\u6b64\u65b9\u6cd5\u6765\u81ea\u5b50\u8fdb\u7a0b\u56de\u6714\u4fe1\u606f\u3002 \u6700\u5e38\u89c1\u7684\u5f02\u5e38: OSError: \u5c1d\u8bd5\u6267\u884c\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u547d\u4ee4\u6216\u8005\u6587\u4ef6\u5f15\u53d1\u6b64\u5f02\u5e38 ValueError: Popen \u4e2d\u4f7f\u7528\u65e0\u6548\u7684\u53c2\u6570\u8c03\u7528\uff0c\u5f15\u53d1\u5f02\u5e38 CalledProcessError: \u5982\u679c\u5b50\u8fdb\u7a0b\u8fd4\u56de\u975e 0 \u7684\u72b6\u6001\u7801\uff0c\u4f1a\u5f15\u53d1\u6b64\u5f02\u5e38 <check_all\uff0ccheck_output> TimeoutExpired: \u4f5c\u7528\u4e8e\u8d85\u65f6\u53c2\u6570\u5f15\u53d1\uff0c\u4f8b\u5982: \u5982\u679c\u5728\u9000\u51fa\u4e4b\u524d\u8d85\u65f6\uff0cPopen.communicate() \u5219\u5f15\u53d1\u5f02\u5e38 \u6240\u6709\u5f02\u5e38\u5747\u7ee7\u627f\u81ea SubprocessError \u57fa\u7c7b. 18.1.1 \u00b6 Popen \u5bf9\u8c61\u8be6\u89e3 Popen \u7c7b\u7684\u5b9e\u4f8b\u5177\u6709\u4e00\u4e0b\u65b9\u6cd5: Popen.poll (): \u68c0\u67e5\u5b50\u8fdb\u7a0b\u662f\u5426\u5df2\u7ec8\u6b62\uff0c\u8bbe\u7f6e\u5e76\u8fd4\u56de returncode \u5c5e\u6027\uff0c\u5426\u5219\u8fd4\u56de None Popen.wait (timeout=None): \u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ec8\u6b62\uff0c\u8bbe\u7f6e\u5e76\u8fd4\u56de returncode \u5c5e\u6027\uff0c\u5982\u679c\u8fdb\u7a0b\u5728\u8d85\u65f6\u95f4\u9694\u5185\u6ca1\u6709\u7ec8\u6b62\uff0c\u5219\u5f15\u53d1 TimeoutExpried \u5f02\u5e38\uff0c\u53ef\u6355\u83b7\u6b21\u5f02\u5e38\u91cd\u65b0\u7b49\u5f85\u3002<\u6ce8\u610f: \u8fd9\u5c06\u4f7f\u7528\u65f6\u6b7b\u9501 stdout=PIPE \u6216\u8005 stderr=PIPE \u548c\u5b50\u8fdb\u7a0b\u7ed3\u679c\u8f93\u51fa\u5230\u7ba1\u9053\uff0c\u4f7f\u5b83\u963b\u6b62\u7b49\u5f85 os \u7f13\u51b2\u5668\u63a5\u53d7\u66f4\u591a\u6570\u636e\uff0c\u4f7f\u7528\uff1aPopen.communicate() \u53ef\u907f\u514d\u8fd9\u79cd\u60c5\u51b5 Popen.communicate(input=None, timeout=None): \u4e0e\u5b50\u8fdb\u7a0b\u4ea4\u4e92\uff0c\u5c06\u6570\u636e\u53d1\u9001\u5230\"\u7ba1\u9053\"stdin\uff0c\u7136\u540e\u4ece stdout \u6216\u8005 stderr \u4e2d\u8bfb\u53d6\u5168\u90e8\u6570\u636e\uff0c\u518d\u7136\u540e\u7b49\u5f85\u8fdb\u7a0b\u7ec8\u6b62\uff0ccommunicate()\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\u6253\u5f00\u6d41\uff0c\u5219\u6570\u636e\u662f\u5219\u6570\u636e\u662f str\uff0c\u5426\u5219\u662f Bytes ****PS \u8fd4\u56de\u5f62\u5f0f:(stdout_data, stderr_date) \u6211\u4eec\u5982\u679c\u60f3\u8981\u5c06\u6570\u636e\u53d1\u9001\u5230 sitdin\uff0c\u8fd9\u4e48\u53ef\u4ee5\u5e72\uff0c\u5728\u521b\u5efa Popen \u5bf9\u8c61\u65f6\u5019\uff0c\u4f20\u5165 stdin=subprocess.PIPE | stdout=subprocess.PIPE | stderr=subprocess.PIPE \u8f93\u5165 | \u8f93\u51fa | \u9519\u8bef\u4fe1\u606f \u8fd9\u91cc\u518d\u8bf4\u4e00\u4e2a\u91cd\u70b9\uff0c\u82e5\u8fdb\u7a0b\u8d85\u65f6\u6ca1\u6709\u7ec8\u6b62\uff0c\u6355\u83b7 TimeoutExpired \u5f02\u5e38\u91cd\u65b0\u901a\u4fe1\u4e0d\u4f1a\u4e22\u5931\u4efb\u4f55\u8f93\u51fa\u7ed3\u679c \u5982\u8d85\u65f6\uff0c\u5b50\u8fdb\u7a0b\u4e0d\u4f1a\u81ea\u52a8\u7ec8\u6b62\uff0c\u56e0\u6b64\u4e3a\u4e86\u6e05\u7406\u6b8b\u7559\u5b50\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u8fd9\u4e48\u505a proc = subprocess . Popen ( ... ) try : outs , errs = proc . communicate ( timeout = 15 ) except TimeoutExpired : proc . kill () outs , errs = proc . communicate () \u53c8\u8981\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u79cd\u65b9\u5f0f\uff0c\u8bfb\u53d6\u7684\u6570\u636e\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5982\u679c\u6570\u636e\u91cf\u5f88\u5927\uff0c\u5efa\u8bae\u4e0d\u8981\u4f7f\u7528\u8fd9\u79cd\u8fd9\u79cd\u65b9\u5f0f\uff0c\u8fd8\u597d\u5728 3.x \u7248\u4e2d\u589e\u52a0\u4e86\u8d85\u65f6\u9009\u9879 Popen.send_signal (signal): \u5411\u5b50\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\uff0c<\u6ce8\u610f\uff1a windows \u4e0a\u7684\u4e3a terminate()> Popen.terminate (): \u505c\u6b62\u5b50\u8fdb\u7a0b\uff0c<\u6ce8\u610f\uff1a windows \u4e0a\u8c03\u7528 Win32 API TerminateProcess()> Popen.kill (): \u6740\u6b7b\u5b50\u8fdb\u7a0b Popen.args (): \u4f20\u9012\u7ed9 Popen \u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u662f\u5217\u8868 \u6216\u8005 \u5b57\u7b26\u4e32 Popen.stdin(): \u5982\u679c stdin \u53c2\u6570\u662f PIPE\uff0c\u8fd4\u56de\u53ef\u5199\u6d41\u5bf9\u8c61\uff0c\u5982\u679c\u6307\u5b9a encoding \u7b49\u53c2\u6570\u4e3a True\uff0c\u600e\u662f\u6587\u672c\u6d41\uff0c\u5426\u5219\u5b57\u8282\u6d41\uff0c\u5982\u679c stdin \u7684\u53c2\u6570\u4e0d\u662f PIPE\uff0c\u8fd4\u56de None Popen.stdout (): \u5982\u679c stdin \u53c2\u6570\u662f PIPE\uff0c\u4ece\u6d41\u4e2d\u8bfb\u53d6\u5b50\u8fdb\u7a0b\u6807\u51c6\u8f93\u51fa\uff0c\u5982\u679c\u6307\u5b9a encoding \u7b49\u53c2\u6570\u4e3a True\uff0c\u600e\u662f\u6587\u672c\u6d41\uff0c\u5426\u5219\u5b57\u8282\u6d41\uff0c\u5982\u679c stdin \u7684\u53c2\u6570\u4e0d\u662f PIPE\uff0c\u8fd4\u56de None Popen.stdout (): \u5982\u679c stdin \u53c2\u6570\u662f PIPE\uff0c\u4ece\u6d41\u4e2d\u8bfb\u51fa\u5b50\u8fdb\u7a0b\u9519\u8bef\u8f93\u51fa\uff0c\u5982\u679c\u6307\u5b9a encoding \u7b49\u53c2\u6570\u4e3a True\uff0c\u600e\u662f\u6587\u672c\u6d41\uff0c\u5426\u5219\u5b57\u8282\u6d41\uff0c\u5982\u679c stdin \u7684\u53c2\u6570\u4e0d\u662f PIPE\uff0c\u8fd4\u56de None Popen.pid (): \u8fd4\u56de\u5b50\u8fdb\u7a0b ID \uff0cPS: (\u5982\u679c\u5c06 shell=True\uff0c\u5219\u662f\u751f\u6210 shell \u7684\u8fdb\u7a0b ID) Popen.returncode (): \u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684\u72b6\u6001\u7801. \u5176\u4ed6\u7528\u6cd5\u66f4\u5177\u81ea\u5df1\u9700\u6c42\u53ef\u81ea\u884c\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff0c\u8fb9\u770b\u8fb9\u8bd5.. \u81f3\u6b64\uff0c\u81ea\u5df1\u7528\u5230 subprocess \u57fa\u672c\u7528\u6cd5\u603b\u7ed3\u5b8c\u4e86\uff0c\u8bb0\u5f55\u4e00\u4e0b\uff0c\u8bb0\u5fc6\u72b9\u65b0\uff0c\u5f88\u597d\u7528\u7684\u4e00\u4e2a\u6a21\u5757\uff0ccome on .. \u5bf9\uff0c\u7528\u5230\u8fd9\u4e2a\u7ae5\u978b\uff0c\u53ef\u4ee5\u5728\u770b\u770b shlex \u6a21\u5757\uff0c\u5f88\u7b80\u5355\u7684\u4e00\u4e2a\u547d\u4ee4\u884c\u89e3\u6790\u6a21\u5757\uff0c\u914d\u5408\u4f7f\u7528\u66f4\u4fbf\u6377\u3002","title":"50-python3-subporcess \u5b50\u8fdb\u7a0b\u7ba1\u7406\u6a21\u5757"},{"location":"01-basic/50-python3-subporcess%20%E5%AD%90%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97/#python3-subporcess","text":"\u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/weixin_42547344/article/details/80894760 \u7b80\u8981\u8bf4\u660e: \u6709\u9700\u8981\u7528\u5230 python \u8c03\u7528\u5916\u90e8\u7a0b\u5e8f\u547d\u4ee4\u7684\u540c\u5b66\u4eec, \u90a3\u4e48\u4f60\u4eec\u8bf7\u4e00\u5b9a\u9009\u62e9 subprocess \u5e93,\u5b83\u7ed9\u6211\u4eec\u5de5\u4f5c\u5e26\u6765\u6781\u5927\u7684\u65b9\u4fbf\u4e5f\u8bb8\u6211\u8fd9\u4e48\u89e3\u91ca\u4e0d\u6b63\u786e, \u8fd8\u662f\u7528\u5b98\u65b9\u7684\u8bdd\u6765\u8bf4\u5427 <subporcess \u6a21\u5757\u5141\u8bb8\u4f60\u4ea7\u751f\u65b0\u7684\u8fdb\u7a0b\uff0c\u5e76\u4e14\u53ef\u4ee5\u628a\u8f93\u5165\uff0c\u8f93\u51fa\uff0c \u9519\u8bef \u76f4\u63a5\u8fde\u63a5\u5230\u7ba1\u9053\uff0c\u6700\u540e\u83b7\u53d6\u7ed3\u679c\uff0cpython \u4e5f\u6709\u4fe9\u4e2a\u6bd4\u8f83\u529f\u80fd\u4e0d\u662f\u90a3\u4e48\u592a\u5168\u7684\u5185\u7f6e\u6a21\u5757 `\u7b49\u8fd9\u4e9b\uff0c\u603b\u4e4b\u8fd9\u5bb6\u4f19\u7684\u51fa\u73b0\u5c31\u662f\u4ee3\u66ff\u90a3\u4e9b\u7684\uff0c\u8fd9\u4fe9\u5929\u6b63\u7528\u5b83\u5199\u4e86\u4e00\u4e2a\u5c0f\u4e1c\u897f\uff0c","title":"python3. subporcess \u5b50\u8fdb\u7a0b\u7ba1\u7406\u6a21\u5757"},{"location":"01-basic/50-python3-subporcess%20%E5%AD%90%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97/#1810","text":"\u7528\u6cd5\u4ecb\u7ecd: \u5728 python2.x \u7684\u7528\u6cd5\u548c python3.x \u6709\u6240\u4e0d\u4e00\u6837\uff0c\u672c\u6587\u5c06\u4ecb\u7ecd\u57fa\u4e8e python3.x \u7248 subprocess \u7b80\u8981\u7528\u6cd5\uff0c3x \u4e2d\u589e\u52a0\u4e86\u4e00\u4e9b\u65b0\u7684\u7279\u6027\uff0c\u5982\u679c\u4fdd\u7559\u4e0e\u65e7\u7248\u672c\u517c\u5bb9\uff0c\u770b\u7ba1\u8fd8\u662f\u53c2\u9605\u65e7\u7248 API. 3x.\u4e2d\u589e\u52a0\u4e86\u65b0\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982 subprocess.run()\u65b9\u6cd5. \u6b64\u65b9\u6cd5\u4f5c\u7528: \u4f7f\u7528\u53c2\u6570\u8fd0\u884c\u547d\u4ee4\u5e76\u8fd4\u56de\u5b8c\u6574\u7684\u8fdb\u7a0b\u5b9e\u4f8b subprocess.run(*popenargs, input=None, timeout=None, check=False, **kwargs) \u6b64\u8c03\u7528\u65b9\u5f0f\u8fd4\u56de CompletedProcess \u5b9e\u4f8b\uff0c\u548c\u76f4\u63a5 Popen \u5dee\u4e0d\u591a\uff0c\u5b9e\u73b0\u662f\u4e00\u6837\u7684\uff0c\u5b9e\u9645\u4e5f\u662f\u8c03\u7528 Popen\uff0c\u4e0e Popen \u6784\u9020\u51fd\u6570\u5927\u81f4\u76f8\u540c\uff0c\u4f8b\u5982: In : subprocess . run ([ \"ls\" , \"-l\" , \"/dev/null\" ] #\u6267\u884cls -l /dev/null \u547d\u4ee4 Out : CompletedProcess ( args = [ 'ls' , '-l' , '/dev/null' ], returncode = 0 ) #ponpenargs: \u547d\u4ee4\u884c\u53c2\u6570\uff0c\u7c7b\u578b\u4e3alist \u6216 str\uff0c\u8fd4\u56deCompletedProcess\u5b9e\u4f8b #returncode: \u6267\u884c\u5b8c\u5b50\u8fdb\u7a0b\u72b6\u6001\uff0c\u901a\u5e38\u8fd4\u56de\u72b6\u6001\u4e3a0\u5219\u8868\u660e\u5b83\u5df2\u7ecf\u8fd0\u884c\u5b8c\u6bd5,\u5f31\u503c\u4e3a\u8d1f\u503c\"-N\",\u8868\u660e\u5b50\u8fdb\u7a0b\u88ab\u7ec8\u6b62. ponpenargs : \u547d\u4ee4\u884c\u53c2\u6570 \uff0c \u7c7b\u578b\u4e3alist \u6216 str \uff0c \u8fd4\u56deCompletedProcess\u5b9e\u4f8b #returncode: \u6267\u884c\u5b8c\u5b50\u8fdb\u7a0b\u72b6\u6001\uff0c\u901a\u5e38\u8fd4\u56de\u72b6\u6001\u4e3a0\u5219\u8868\u660e\u5b83\u5df2\u7ecf\u8fd0\u884c\u5b8c\u6bd5,\u5f31\u503c\u4e3a\u8d1f\u503c\"-N\",\u8868\u660e\u5b50\u8fdb\u7a0b\u88ab\u7ec8\u6b62. Out : subprocess . run ([ \"ls\" , \"-l\" , \"/dev/null\" ], stdout = subprocess . PIPE , stderr = subprocess . PIPE \u4e0a\u8ff0\u4ecb\u7ecd\u65b0\u7248\u672c\u7279\u6027\uff0c\u518d\u770b\u4e0b\u901a\u5e38\u7684\u4e00\u4e9b\u7528\u6cd5\uff1a \u5217\u4e3e\u4e00\u4e9b\u57fa\u672c\u7528\u6cd5: subprocess.call(): \u65b9\u6cd5 call \u7236\u8fdb\u7a0b\u7b49\u5f85\u5b50\u8fdb\u7a0b\u5b8c\u6210\uff0c\u8fd4\u56de\u9000\u51fa\u4fe1\u606f\u3002 subprocess.check_call(): \u65b9\u6cd5 check_call \u7236\u8fdb\u7a0b\u7b49\u5f85\u5b50\u8fdb\u7a0b\u5b8c\u6210\uff0c\u8fd4\u56de 0\uff0c\u552f\u4e00\u4e0d\u540c\u533a\u522b\uff0c\u5b83\u4f1a\u68c0\u67e5\u9000\u51fa\u4fe1\u606f\uff0c\u5982\u679c returncode \u4e0d\u4e3a 0\uff0c\u5219\u5f15\u53d1 subprocess.CallProcessError\u3002 subprocess.check_output(): \u65b9\u6cd5 check_output \u7236\u8fdb\u7a0b\u7b49\u5f85\u5b50\u8fdb\u7a0b\u5b8c\u6210\uff0c\u8fd4\u56de\u5b50\u8fdb\u7a0b\u5411\u6807\u51c6\u8f93\u51fa\u7684\u8f93\u51fa\u7ed3\u679c\uff0c\u5b83\u548c check_call \u540c\u6837\u4f1a\u68c0\u67e5\u9000\u51fa\u4fe1\u606f\uff0c\u5982 returncode \u4e0d\u4e3a 0\uff0c\u5219\u5f15\u53d1 subprocess.CallProcessError\u3002 \u6700\u4e3b\u8981\u8fd8\u662f\u8bb2 subprocess.Popen() \u9644\u4e0a\u6e90\u7801\uff0cPopen \u7684\u6784\u9020\u51fd\u6570 def __init__ ( self , args , bufsize =- 1 , executable = None , stdin = None , stdout = None , stderr = None , preexec_fn = None , close_fds = _PLATFORM_DEFAULT_CLOSE_FDS , shell = False , cwd = None , env = None , universal_newlines = False , startupinfo = None , creationflags = 0 , restore_signals = True , start_new_session = False , pass_fds = (), * , encoding = None , errors = None ): \u4e3e\u4e2a\u5c0f\u4f8b\u5b50\uff1a In [ 31 ]: import shlex In [ 32 ]: command_line Out [ 32 ]: '/bin/vikings -input eggs.txt -output \"spam spam.txt\" -cmd \"echo \\' $MONEY \\' \"' In [ 33 ]: args = shlex . split ( command_line ) In [ 34 ]: print ( args ) [ '/bin/vikings' , '-input' , 'eggs.txt' , '-output' , 'spam spam.txt' , '-cmd' , \"echo '$MONEY'\" ] p = subprocess . Popen ( args = args ) shlex: POSIX\u6a21\u5f0f\u4e0b\u7684\u4e00\u4e2a\u89e3\u6790\u547d\u4ee4\u884c\u53c2\u6570\u6a21\u5757 \u7279\u522b\u6ce8\u610f\u4e00\u70b9\uff0cshell \u4e2d\u662f\u7531\u7a7a\u767d\u5206\u5272\uff0c\u4f8b\u5982\u8fd9\u91cc\u7684-input \u548c \u53c2\u6570 eggs.txt \u5c06\u5355\u72ec\u653e\u5230\u5217\u8868\u5143\u7d20\u91cc\uff0c\u800c\u5728 shel \u4e2d\u4f7f\u7528\u65f6\u9700\u8981\u5f15\u7528\u6216\u8005\u53cd\u659c\u6760\u8f6c\u4e49\u53c2\u6570\u3002 \u5728 POSIX \u6a21\u5f0f\u4e0a shell=True\uff0cshell \u9ed8\u8ba4\u4e3a/bin/sh\uff0c\u5982\u679c args \u9ed8\u8ba4\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u8be5\u5b57\u7b26\u4e32\u6307\u5b9a\u901a\u8fc7 shell \u65b9\u5f0f\u6267\u884c\u547d\u4ee4\uff0c\u8fd9\u610f\u5473\u7740\u8be5\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\u5fc5\u987b\u4e0e shell \u4e0b\u8f93\u5165\u7684\u683c\u5f0f\u4e00\u81f4\u3002 \u5728 3.x \u4e2d \u63d0\u4f9b\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0c\u901a\u8fc7 with \u8bed\u53e5\u652f\u6301 Popen \u5bf9\u8c61\u4f5c\u4e3a\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0c\u5728\u9000\u51fa\u65f6\uff0c\u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u5e76\u7b49\u5f85\u8fdb\u7a0b\u3002 In [35]: with subprocess.Popen(['ifconfig'], stdout=subprocess.PIPE) as proc: ...: log.write(proc.stdout.read()) \u5728 python3.6 \u4e2d\u66f4\u6539: ResourceWarning \u5982\u679c\u5b50\u8fdb\u7a0b\u4ecd\u5728\u8fd0\u884c\uff0cPopen \u6790\u591f\u51fd\u6570\u4f1a\u53d1\u51fa\u8b66\u544a.","title":"18.1.0"},{"location":"01-basic/50-python3-subporcess%20%E5%AD%90%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97/#1811","text":"\u5f02\u5e38\u60c5\u51b5\uff1a\u7a0b\u5e8f\u5728\u6267\u884c\u4e2d\uff0c\u5b50\u8fdb\u7a0b\u4e2d\u5f15\u53d1\u5f02\u5e38\u5c06\u5728\u7236\u8fdb\u7a0b\u4e2d\u63d0\u793a\uff0c\u5e76\u4e14\u5f02\u5e38\u5bf9\u8c61\u4f1a\u6709\u4e00\u4e2a\u989d\u5916\u5c5e\u6027\u8c03\u7528\uff0cchild_traceback() \uff0c\u6b64\u65b9\u6cd5\u6765\u81ea\u5b50\u8fdb\u7a0b\u56de\u6714\u4fe1\u606f\u3002 \u6700\u5e38\u89c1\u7684\u5f02\u5e38: OSError: \u5c1d\u8bd5\u6267\u884c\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u547d\u4ee4\u6216\u8005\u6587\u4ef6\u5f15\u53d1\u6b64\u5f02\u5e38 ValueError: Popen \u4e2d\u4f7f\u7528\u65e0\u6548\u7684\u53c2\u6570\u8c03\u7528\uff0c\u5f15\u53d1\u5f02\u5e38 CalledProcessError: \u5982\u679c\u5b50\u8fdb\u7a0b\u8fd4\u56de\u975e 0 \u7684\u72b6\u6001\u7801\uff0c\u4f1a\u5f15\u53d1\u6b64\u5f02\u5e38 <check_all\uff0ccheck_output> TimeoutExpired: \u4f5c\u7528\u4e8e\u8d85\u65f6\u53c2\u6570\u5f15\u53d1\uff0c\u4f8b\u5982: \u5982\u679c\u5728\u9000\u51fa\u4e4b\u524d\u8d85\u65f6\uff0cPopen.communicate() \u5219\u5f15\u53d1\u5f02\u5e38 \u6240\u6709\u5f02\u5e38\u5747\u7ee7\u627f\u81ea SubprocessError \u57fa\u7c7b.","title":"18.1.1"},{"location":"01-basic/50-python3-subporcess%20%E5%AD%90%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E6%A8%A1%E5%9D%97/#1811_1","text":"Popen \u5bf9\u8c61\u8be6\u89e3 Popen \u7c7b\u7684\u5b9e\u4f8b\u5177\u6709\u4e00\u4e0b\u65b9\u6cd5: Popen.poll (): \u68c0\u67e5\u5b50\u8fdb\u7a0b\u662f\u5426\u5df2\u7ec8\u6b62\uff0c\u8bbe\u7f6e\u5e76\u8fd4\u56de returncode \u5c5e\u6027\uff0c\u5426\u5219\u8fd4\u56de None Popen.wait (timeout=None): \u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ec8\u6b62\uff0c\u8bbe\u7f6e\u5e76\u8fd4\u56de returncode \u5c5e\u6027\uff0c\u5982\u679c\u8fdb\u7a0b\u5728\u8d85\u65f6\u95f4\u9694\u5185\u6ca1\u6709\u7ec8\u6b62\uff0c\u5219\u5f15\u53d1 TimeoutExpried \u5f02\u5e38\uff0c\u53ef\u6355\u83b7\u6b21\u5f02\u5e38\u91cd\u65b0\u7b49\u5f85\u3002<\u6ce8\u610f: \u8fd9\u5c06\u4f7f\u7528\u65f6\u6b7b\u9501 stdout=PIPE \u6216\u8005 stderr=PIPE \u548c\u5b50\u8fdb\u7a0b\u7ed3\u679c\u8f93\u51fa\u5230\u7ba1\u9053\uff0c\u4f7f\u5b83\u963b\u6b62\u7b49\u5f85 os \u7f13\u51b2\u5668\u63a5\u53d7\u66f4\u591a\u6570\u636e\uff0c\u4f7f\u7528\uff1aPopen.communicate() \u53ef\u907f\u514d\u8fd9\u79cd\u60c5\u51b5 Popen.communicate(input=None, timeout=None): \u4e0e\u5b50\u8fdb\u7a0b\u4ea4\u4e92\uff0c\u5c06\u6570\u636e\u53d1\u9001\u5230\"\u7ba1\u9053\"stdin\uff0c\u7136\u540e\u4ece stdout \u6216\u8005 stderr \u4e2d\u8bfb\u53d6\u5168\u90e8\u6570\u636e\uff0c\u518d\u7136\u540e\u7b49\u5f85\u8fdb\u7a0b\u7ec8\u6b62\uff0ccommunicate()\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u5728\u6587\u672c\u6a21\u5f0f\u4e0b\u6253\u5f00\u6d41\uff0c\u5219\u6570\u636e\u662f\u5219\u6570\u636e\u662f str\uff0c\u5426\u5219\u662f Bytes ****PS \u8fd4\u56de\u5f62\u5f0f:(stdout_data, stderr_date) \u6211\u4eec\u5982\u679c\u60f3\u8981\u5c06\u6570\u636e\u53d1\u9001\u5230 sitdin\uff0c\u8fd9\u4e48\u53ef\u4ee5\u5e72\uff0c\u5728\u521b\u5efa Popen \u5bf9\u8c61\u65f6\u5019\uff0c\u4f20\u5165 stdin=subprocess.PIPE | stdout=subprocess.PIPE | stderr=subprocess.PIPE \u8f93\u5165 | \u8f93\u51fa | \u9519\u8bef\u4fe1\u606f \u8fd9\u91cc\u518d\u8bf4\u4e00\u4e2a\u91cd\u70b9\uff0c\u82e5\u8fdb\u7a0b\u8d85\u65f6\u6ca1\u6709\u7ec8\u6b62\uff0c\u6355\u83b7 TimeoutExpired \u5f02\u5e38\u91cd\u65b0\u901a\u4fe1\u4e0d\u4f1a\u4e22\u5931\u4efb\u4f55\u8f93\u51fa\u7ed3\u679c \u5982\u8d85\u65f6\uff0c\u5b50\u8fdb\u7a0b\u4e0d\u4f1a\u81ea\u52a8\u7ec8\u6b62\uff0c\u56e0\u6b64\u4e3a\u4e86\u6e05\u7406\u6b8b\u7559\u5b50\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u8fd9\u4e48\u505a proc = subprocess . Popen ( ... ) try : outs , errs = proc . communicate ( timeout = 15 ) except TimeoutExpired : proc . kill () outs , errs = proc . communicate () \u53c8\u8981\u8bf4\u4e00\u4e0b\uff0c\u8fd9\u79cd\u65b9\u5f0f\uff0c\u8bfb\u53d6\u7684\u6570\u636e\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5982\u679c\u6570\u636e\u91cf\u5f88\u5927\uff0c\u5efa\u8bae\u4e0d\u8981\u4f7f\u7528\u8fd9\u79cd\u8fd9\u79cd\u65b9\u5f0f\uff0c\u8fd8\u597d\u5728 3.x \u7248\u4e2d\u589e\u52a0\u4e86\u8d85\u65f6\u9009\u9879 Popen.send_signal (signal): \u5411\u5b50\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\uff0c<\u6ce8\u610f\uff1a windows \u4e0a\u7684\u4e3a terminate()> Popen.terminate (): \u505c\u6b62\u5b50\u8fdb\u7a0b\uff0c<\u6ce8\u610f\uff1a windows \u4e0a\u8c03\u7528 Win32 API TerminateProcess()> Popen.kill (): \u6740\u6b7b\u5b50\u8fdb\u7a0b Popen.args (): \u4f20\u9012\u7ed9 Popen \u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u662f\u5217\u8868 \u6216\u8005 \u5b57\u7b26\u4e32 Popen.stdin(): \u5982\u679c stdin \u53c2\u6570\u662f PIPE\uff0c\u8fd4\u56de\u53ef\u5199\u6d41\u5bf9\u8c61\uff0c\u5982\u679c\u6307\u5b9a encoding \u7b49\u53c2\u6570\u4e3a True\uff0c\u600e\u662f\u6587\u672c\u6d41\uff0c\u5426\u5219\u5b57\u8282\u6d41\uff0c\u5982\u679c stdin \u7684\u53c2\u6570\u4e0d\u662f PIPE\uff0c\u8fd4\u56de None Popen.stdout (): \u5982\u679c stdin \u53c2\u6570\u662f PIPE\uff0c\u4ece\u6d41\u4e2d\u8bfb\u53d6\u5b50\u8fdb\u7a0b\u6807\u51c6\u8f93\u51fa\uff0c\u5982\u679c\u6307\u5b9a encoding \u7b49\u53c2\u6570\u4e3a True\uff0c\u600e\u662f\u6587\u672c\u6d41\uff0c\u5426\u5219\u5b57\u8282\u6d41\uff0c\u5982\u679c stdin \u7684\u53c2\u6570\u4e0d\u662f PIPE\uff0c\u8fd4\u56de None Popen.stdout (): \u5982\u679c stdin \u53c2\u6570\u662f PIPE\uff0c\u4ece\u6d41\u4e2d\u8bfb\u51fa\u5b50\u8fdb\u7a0b\u9519\u8bef\u8f93\u51fa\uff0c\u5982\u679c\u6307\u5b9a encoding \u7b49\u53c2\u6570\u4e3a True\uff0c\u600e\u662f\u6587\u672c\u6d41\uff0c\u5426\u5219\u5b57\u8282\u6d41\uff0c\u5982\u679c stdin \u7684\u53c2\u6570\u4e0d\u662f PIPE\uff0c\u8fd4\u56de None Popen.pid (): \u8fd4\u56de\u5b50\u8fdb\u7a0b ID \uff0cPS: (\u5982\u679c\u5c06 shell=True\uff0c\u5219\u662f\u751f\u6210 shell \u7684\u8fdb\u7a0b ID) Popen.returncode (): \u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684\u72b6\u6001\u7801. \u5176\u4ed6\u7528\u6cd5\u66f4\u5177\u81ea\u5df1\u9700\u6c42\u53ef\u81ea\u884c\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff0c\u8fb9\u770b\u8fb9\u8bd5.. \u81f3\u6b64\uff0c\u81ea\u5df1\u7528\u5230 subprocess \u57fa\u672c\u7528\u6cd5\u603b\u7ed3\u5b8c\u4e86\uff0c\u8bb0\u5f55\u4e00\u4e0b\uff0c\u8bb0\u5fc6\u72b9\u65b0\uff0c\u5f88\u597d\u7528\u7684\u4e00\u4e2a\u6a21\u5757\uff0ccome on .. \u5bf9\uff0c\u7528\u5230\u8fd9\u4e2a\u7ae5\u978b\uff0c\u53ef\u4ee5\u5728\u770b\u770b shlex \u6a21\u5757\uff0c\u5f88\u7b80\u5355\u7684\u4e00\u4e2a\u547d\u4ee4\u884c\u89e3\u6790\u6a21\u5757\uff0c\u914d\u5408\u4f7f\u7528\u66f4\u4fbf\u6377\u3002","title":"18.1.1"},{"location":"01-basic/Python3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B/","text":"Python3 \u591a\u7ebf\u7a0b \u00b6 \u591a\u7ebf\u7a0b\u7c7b\u4f3c\u4e8e\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4e0d\u540c\u7a0b\u5e8f\uff0c\u591a\u7ebf\u7a0b\u8fd0\u884c\u6709\u5982\u4e0b\u4f18\u70b9\uff1a \u4f7f\u7528\u7ebf\u7a0b\u53ef\u4ee5\u628a\u5360\u636e\u957f\u65f6\u95f4\u7684\u7a0b\u5e8f\u4e2d\u7684\u4efb\u52a1\u653e\u5230\u540e\u53f0\u53bb\u5904\u7406\u3002 \u7528\u6237\u754c\u9762\u53ef\u4ee5\u66f4\u52a0\u5438\u5f15\u4eba\uff0c\u6bd4\u5982\u7528\u6237\u70b9\u51fb\u4e86\u4e00\u4e2a\u6309\u94ae\u53bb\u89e6\u53d1\u67d0\u4e9b\u4e8b\u4ef6\u7684\u5904\u7406\uff0c\u53ef\u4ee5\u5f39\u51fa\u4e00\u4e2a\u8fdb\u5ea6\u6761\u6765\u663e\u793a\u5904\u7406\u7684\u8fdb\u5ea6\u3002 \u7a0b\u5e8f\u7684\u8fd0\u884c\u901f\u5ea6\u53ef\u80fd\u52a0\u5feb\u3002 \u5728\u4e00\u4e9b\u7b49\u5f85\u7684\u4efb\u52a1\u5b9e\u73b0\u4e0a\u5982\u7528\u6237\u8f93\u5165\u3001\u6587\u4ef6\u8bfb\u5199\u548c\u7f51\u7edc\u6536\u53d1\u6570\u636e\u7b49\uff0c\u7ebf\u7a0b\u5c31\u6bd4\u8f83\u6709\u7528\u4e86\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u53ef\u4ee5\u91ca\u653e\u4e00\u4e9b\u73cd\u8d35\u7684\u8d44\u6e90\u5982\u5185\u5b58\u5360\u7528\u7b49\u7b49\u3002 \u6bcf\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0b\u6709\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u7684\u5165\u53e3\u3001\u987a\u5e8f\u6267\u884c\u5e8f\u5217\u548c\u7a0b\u5e8f\u7684\u51fa\u53e3\u3002\u4f46\u662f\u7ebf\u7a0b\u4e0d\u80fd\u591f\u72ec\u7acb\u6267\u884c\uff0c\u5fc5\u987b\u4f9d\u5b58\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u7531\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u591a\u4e2a\u7ebf\u7a0b\u6267\u884c\u63a7\u5236\u3002 \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4ed6\u81ea\u5df1\u7684\u4e00\u7ec4 CPU \u5bc4\u5b58\u5668\uff0c\u79f0\u4e3a\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\uff0c\u8be5\u4e0a\u4e0b\u6587\u53cd\u6620\u4e86\u7ebf\u7a0b\u4e0a\u6b21\u8fd0\u884c\u8be5\u7ebf\u7a0b\u7684 CPU \u5bc4\u5b58\u5668\u7684\u72b6\u6001\u3002 \u6307\u4ee4\u6307\u9488\u548c\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\u662f\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u4e2d\u4e24\u4e2a\u6700\u91cd\u8981\u7684\u5bc4\u5b58\u5668\uff0c\u7ebf\u7a0b\u603b\u662f\u5728\u8fdb\u7a0b\u5f97\u5230\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\u7684\uff0c\u8fd9\u4e9b\u5730\u5740\u90fd\u7528\u4e8e\u6807\u5fd7\u62e5\u6709\u7ebf\u7a0b\u7684\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u5185\u5b58\u3002 \u7ebf\u7a0b\u53ef\u4ee5\u88ab\u62a2\u5360\uff08\u4e2d\u65ad\uff09\u3002 \u5728\u5176\u4ed6\u7ebf\u7a0b\u6b63\u5728\u8fd0\u884c\u65f6\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u6682\u65f6\u6401\u7f6e\uff08\u4e5f\u79f0\u4e3a\u7761\u7720\uff09 -- \u8fd9\u5c31\u662f\u7ebf\u7a0b\u7684\u9000\u8ba9\u3002 \u7ebf\u7a0b\u53ef\u4ee5\u5206\u4e3a: \u5185\u6838\u7ebf\u7a0b\uff1a\u7531\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u521b\u5efa\u548c\u64a4\u9500\u3002 \u7528\u6237\u7ebf\u7a0b\uff1a\u4e0d\u9700\u8981\u5185\u6838\u652f\u6301\u800c\u5728\u7528\u6237\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\u7684\u7ebf\u7a0b\u3002 Python3 \u7ebf\u7a0b\u4e2d\u5e38\u7528\u7684\u4e24\u4e2a\u6a21\u5757\u4e3a\uff1a _thread threading(\u63a8\u8350\u4f7f\u7528) thread \u6a21\u5757\u5df2\u88ab\u5e9f\u5f03\u3002\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 threading \u6a21\u5757\u4ee3\u66ff\u3002\u6240\u4ee5\uff0c\u5728 Python3 \u4e2d\u4e0d\u80fd\u518d\u4f7f\u7528\"thread\" \u6a21\u5757\u3002\u4e3a\u4e86\u517c\u5bb9\u6027\uff0cPython3 \u5c06 thread \u91cd\u547d\u540d\u4e3a \"_thread\"\u3002 \u5f00\u59cb\u5b66\u4e60 Python \u7ebf\u7a0b \u00b6 Python \u4e2d\u4f7f\u7528\u7ebf\u7a0b\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u51fd\u6570\u6216\u8005\u7528\u7c7b\u6765\u5305\u88c5\u7ebf\u7a0b\u5bf9\u8c61\u3002 \u51fd\u6570\u5f0f\uff1a\u8c03\u7528 _thread \u6a21\u5757\u4e2d\u7684 start_new_thread()\u51fd\u6570\u6765\u4ea7\u751f\u65b0\u7ebf\u7a0b\u3002\u8bed\u6cd5\u5982\u4e0b: _thread . start_new_thread ( function , args [, kwargs ] ) \u53c2\u6570\u8bf4\u660e: function - \u7ebf\u7a0b\u51fd\u6570\u3002 args - \u4f20\u9012\u7ed9\u7ebf\u7a0b\u51fd\u6570\u7684\u53c2\u6570,\u4ed6\u5fc5\u987b\u662f\u4e2a tuple \u7c7b\u578b\u3002 kwargs - \u53ef\u9009\u53c2\u6570\u3002 \u5b9e\u4f8b \u00b6 #!/usr/bin/python3 import _thread import time # \u4e3a\u7ebf\u7a0b\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 def print_time ( threadName , delay ): count = 0 while count < 5 : time . sleep ( delay ) count += 1 print ( \" %s : %s \" % ( threadName , time . ctime ( time . time ()) )) # \u521b\u5efa\u4e24\u4e2a\u7ebf\u7a0b try : _thread . start_new_thread ( print_time , ( \"Thread-1\" , 2 , ) ) _thread . start_new_thread ( print_time , ( \"Thread-2\" , 4 , ) ) except : print ( \"Error: \u65e0\u6cd5\u542f\u52a8\u7ebf\u7a0b\" ) while 1 : pass \u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Thread-1: Wed Apr 6 11:36:31 2016 Thread-1: Wed Apr 6 11:36:33 2016 Thread-2: Wed Apr 6 11:36:33 2016 Thread-1: Wed Apr 6 11:36:35 2016 Thread-1: Wed Apr 6 11:36:37 2016 Thread-2: Wed Apr 6 11:36:37 2016 Thread-1: Wed Apr 6 11:36:39 2016 Thread-2: Wed Apr 6 11:36:41 2016 Thread-2: Wed Apr 6 11:36:45 2016 Thread-2: Wed Apr 6 11:36:49 2016 \u6267\u884c\u4ee5\u4e0a\u7a0b\u540e\u53ef\u4ee5\u6309\u4e0b ctrl-c \u9000\u51fa\u3002 \u7ebf\u7a0b\u6a21\u5757 \u00b6 Python3 \u901a\u8fc7\u4e24\u4e2a\u6807\u51c6\u5e93 _thread \u548c threading \u63d0\u4f9b\u5bf9\u7ebf\u7a0b\u7684\u652f\u6301\u3002 _thread \u63d0\u4f9b\u4e86\u4f4e\u7ea7\u522b\u7684\u3001\u539f\u59cb\u7684\u7ebf\u7a0b\u4ee5\u53ca\u4e00\u4e2a\u7b80\u5355\u7684\u9501\uff0c\u5b83\u76f8\u6bd4\u4e8e threading \u6a21\u5757\u7684\u529f\u80fd\u8fd8\u662f\u6bd4\u8f83\u6709\u9650\u7684\u3002 threading \u6a21\u5757\u9664\u4e86\u5305\u542b _thread \u6a21\u5757\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u5916\uff0c\u8fd8\u63d0\u4f9b\u7684\u5176\u4ed6\u65b9\u6cd5\uff1a threading.currentThread(): \u8fd4\u56de\u5f53\u524d\u7684\u7ebf\u7a0b\u53d8\u91cf\u3002 threading.enumerate(): \u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u7684 list\u3002\u6b63\u5728\u8fd0\u884c\u6307\u7ebf\u7a0b\u542f\u52a8\u540e\u3001\u7ed3\u675f\u524d\uff0c\u4e0d\u5305\u62ec\u542f\u52a8\u524d\u548c\u7ec8\u6b62\u540e\u7684\u7ebf\u7a0b\u3002 threading.activeCount(): \u8fd4\u56de\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u91cf\uff0c\u4e0e len(threading.enumerate())\u6709\u76f8\u540c\u7684\u7ed3\u679c\u3002 \u9664\u4e86\u4f7f\u7528\u65b9\u6cd5\u5916\uff0c\u7ebf\u7a0b\u6a21\u5757\u540c\u6837\u63d0\u4f9b\u4e86 Thread \u7c7b\u6765\u5904\u7406\u7ebf\u7a0b\uff0cThread \u7c7b\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u65b9\u6cd5: run(): \u7528\u4ee5\u8868\u793a\u7ebf\u7a0b\u6d3b\u52a8\u7684\u65b9\u6cd5\u3002 start(): \u542f\u52a8\u7ebf\u7a0b\u6d3b\u52a8\u3002 join([time]): \u7b49\u5f85\u81f3\u7ebf\u7a0b\u4e2d\u6b62\u3002\u8fd9\u963b\u585e\u8c03\u7528\u7ebf\u7a0b\u76f4\u81f3\u7ebf\u7a0b\u7684 join() \u65b9\u6cd5\u88ab\u8c03\u7528\u4e2d\u6b62-\u6b63\u5e38\u9000\u51fa\u6216\u8005\u629b\u51fa\u672a\u5904\u7406\u7684\u5f02\u5e38-\u6216\u8005\u662f\u53ef\u9009\u7684\u8d85\u65f6\u53d1\u751f\u3002 isAlive(): \u8fd4\u56de\u7ebf\u7a0b\u662f\u5426\u6d3b\u52a8\u7684\u3002 getName(): \u8fd4\u56de\u7ebf\u7a0b\u540d\u3002 setName(): \u8bbe\u7f6e\u7ebf\u7a0b\u540d\u3002 \u4f7f\u7528 threading \u6a21\u5757\u521b\u5efa\u7ebf\u7a0b \u00b6 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u4ece threading.Thread \u7ee7\u627f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b50\u7c7b\uff0c\u5e76\u5b9e\u4f8b\u5316\u540e\u8c03\u7528 start() \u65b9\u6cd5\u542f\u52a8\u65b0\u7ebf\u7a0b\uff0c\u5373\u5b83\u8c03\u7528\u4e86\u7ebf\u7a0b\u7684 run() \u65b9\u6cd5\uff1a \u5b9e\u4f8b \u00b6 #!/usr/bin/python3 import threading import time exitFlag = 0 class myThread ( threading . Thread ): def __init__ ( self , threadID , name , counter ): threading . Thread . __init__ ( self ) self . threadID = threadID self . name = name self . counter = counter def run ( self ): print ( \"\u5f00\u59cb\u7ebf\u7a0b\uff1a\" + self . name ) print_time ( self . name , self . counter , 5 ) print ( \"\u9000\u51fa\u7ebf\u7a0b\uff1a\" + self . name ) def print_time ( threadName , delay , counter ): while counter : if exitFlag : threadName . exit () time . sleep ( delay ) print ( \" %s : %s \" % ( threadName , time . ctime ( time . time ()))) counter -= 1 # \u521b\u5efa\u65b0\u7ebf\u7a0b thread1 = myThread ( 1 , \"Thread-1\" , 1 ) thread2 = myThread ( 2 , \"Thread-2\" , 2 ) # \u5f00\u542f\u65b0\u7ebf\u7a0b thread1 . start () thread2 . start () thread1 . join () thread2 . join () print ( \"\u9000\u51fa\u4e3b\u7ebf\u7a0b\" ) \u4ee5\u4e0a\u7a0b\u5e8f\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1b \u5f00\u59cb\u7ebf\u7a0b\uff1aThread-1 \u5f00\u59cb\u7ebf\u7a0b\uff1aThread-2 Thread-1: Wed Apr 6 11:46:46 2016 Thread-1: Wed Apr 6 11:46:47 2016 Thread-2: Wed Apr 6 11:46:47 2016 Thread-1: Wed Apr 6 11:46:48 2016 Thread-1: Wed Apr 6 11:46:49 2016 Thread-2: Wed Apr 6 11:46:49 2016 Thread-1: Wed Apr 6 11:46:50 2016 \u9000\u51fa\u7ebf\u7a0b\uff1aThread-1 Thread-2: Wed Apr 6 11:46:51 2016 Thread-2: Wed Apr 6 11:46:53 2016 Thread-2: Wed Apr 6 11:46:55 2016 \u9000\u51fa\u7ebf\u7a0b\uff1aThread-2 \u9000\u51fa\u4e3b\u7ebf\u7a0b \u7ebf\u7a0b\u540c\u6b65 \u00b6 \u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u5171\u540c\u5bf9\u67d0\u4e2a\u6570\u636e\u4fee\u6539\uff0c\u5219\u53ef\u80fd\u51fa\u73b0\u4e0d\u53ef\u9884\u6599\u7684\u7ed3\u679c\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u6b63\u786e\u6027\uff0c\u9700\u8981\u5bf9\u591a\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u540c\u6b65\u3002 \u4f7f\u7528 Thread \u5bf9\u8c61\u7684 Lock \u548c Rlock \u53ef\u4ee5\u5b9e\u73b0\u7b80\u5355\u7684\u7ebf\u7a0b\u540c\u6b65\uff0c\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u90fd\u6709 acquire \u65b9\u6cd5\u548c release \u65b9\u6cd5\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u9700\u8981\u6bcf\u6b21\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u5c06\u5176\u64cd\u4f5c\u653e\u5230 acquire \u548c release \u65b9\u6cd5\u4e4b\u95f4\u3002\u5982\u4e0b\uff1a \u591a\u7ebf\u7a0b\u7684\u4f18\u52bf\u5728\u4e8e\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\uff08\u81f3\u5c11\u611f\u89c9\u8d77\u6765\u662f\u8fd9\u6837\uff09\u3002\u4f46\u662f\u5f53\u7ebf\u7a0b\u9700\u8981\u5171\u4eab\u6570\u636e\u65f6\uff0c\u53ef\u80fd\u5b58\u5728\u6570\u636e\u4e0d\u540c\u6b65\u7684\u95ee\u9898\u3002 \u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a\u4e00\u4e2a\u5217\u8868\u91cc\u6240\u6709\u5143\u7d20\u90fd\u662f 0\uff0c\u7ebf\u7a0b\"set\"\u4ece\u540e\u5411\u524d\u628a\u6240\u6709\u5143\u7d20\u6539\u6210 1\uff0c\u800c\u7ebf\u7a0b\"print\"\u8d1f\u8d23\u4ece\u524d\u5f80\u540e\u8bfb\u53d6\u5217\u8868\u5e76\u6253\u5370\u3002 \u90a3\u4e48\uff0c\u53ef\u80fd\u7ebf\u7a0b\"set\"\u5f00\u59cb\u6539\u7684\u65f6\u5019\uff0c\u7ebf\u7a0b\"print\"\u4fbf\u6765\u6253\u5370\u5217\u8868\u4e86\uff0c\u8f93\u51fa\u5c31\u6210\u4e86\u4e00\u534a 0 \u4e00\u534a 1\uff0c\u8fd9\u5c31\u662f\u6570\u636e\u7684\u4e0d\u540c\u6b65\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u5f15\u5165\u4e86\u9501\u7684\u6982\u5ff5\u3002 \u9501\u6709\u4e24\u79cd\u72b6\u6001\u2014\u2014\u9501\u5b9a\u548c\u672a\u9501\u5b9a\u3002\u6bcf\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u6bd4\u5982\"set\"\u8981\u8bbf\u95ee\u5171\u4eab\u6570\u636e\u65f6\uff0c\u5fc5\u987b\u5148\u83b7\u5f97\u9501\u5b9a\uff1b\u5982\u679c\u5df2\u7ecf\u6709\u522b\u7684\u7ebf\u7a0b\u6bd4\u5982\"print\"\u83b7\u5f97\u9501\u5b9a\u4e86\uff0c\u90a3\u4e48\u5c31\u8ba9\u7ebf\u7a0b\"set\"\u6682\u505c\uff0c\u4e5f\u5c31\u662f\u540c\u6b65\u963b\u585e\uff1b\u7b49\u5230\u7ebf\u7a0b\"print\"\u8bbf\u95ee\u5b8c\u6bd5\uff0c\u91ca\u653e\u9501\u4ee5\u540e\uff0c\u518d\u8ba9\u7ebf\u7a0b\"set\"\u7ee7\u7eed\u3002 \u7ecf\u8fc7\u8fd9\u6837\u7684\u5904\u7406\uff0c\u6253\u5370\u5217\u8868\u65f6\u8981\u4e48\u5168\u90e8\u8f93\u51fa 0\uff0c\u8981\u4e48\u5168\u90e8\u8f93\u51fa 1\uff0c\u4e0d\u4f1a\u518d\u51fa\u73b0\u4e00\u534a 0 \u4e00\u534a 1 \u7684\u5c34\u5c2c\u573a\u9762\u3002 \u5b9e\u4f8b \u00b6 #!/usr/bin/python3 import threading import time class myThread ( threading . Thread ): def __init__ ( self , threadID , name , counter ): threading . Thread . __init__ ( self ) self . threadID = threadID self . name = name self . counter = counter def run ( self ): print ( \"\u5f00\u542f\u7ebf\u7a0b\uff1a \" + self . name ) # \u83b7\u53d6\u9501\uff0c\u7528\u4e8e\u7ebf\u7a0b\u540c\u6b65 threadLock . acquire () print_time ( self . name , self . counter , 3 ) # \u91ca\u653e\u9501\uff0c\u5f00\u542f\u4e0b\u4e00\u4e2a\u7ebf\u7a0b threadLock . release () def print_time ( threadName , delay , counter ): while counter : time . sleep ( delay ) print ( \" %s : %s \" % ( threadName , time . ctime ( time . time ()))) counter -= 1 threadLock = threading . Lock () threads = [] # \u521b\u5efa\u65b0\u7ebf\u7a0b thread1 = myThread ( 1 , \"Thread-1\" , 1 ) thread2 = myThread ( 2 , \"Thread-2\" , 2 ) # \u5f00\u542f\u65b0\u7ebf\u7a0b thread1 . start () thread2 . start () # \u6dfb\u52a0\u7ebf\u7a0b\u5230\u7ebf\u7a0b\u5217\u8868 threads . append ( thread1 ) threads . append ( thread2 ) # \u7b49\u5f85\u6240\u6709\u7ebf\u7a0b\u5b8c\u6210 for t in threads : t . join () print ( \"\u9000\u51fa\u4e3b\u7ebf\u7a0b\" ) \u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u5f00\u542f\u7ebf\u7a0b\uff1a Thread-1 \u5f00\u542f\u7ebf\u7a0b\uff1a Thread-2 Thread-1: Wed Apr 6 11:52:57 2016 Thread-1: Wed Apr 6 11:52:58 2016 Thread-1: Wed Apr 6 11:52:59 2016 Thread-2: Wed Apr 6 11:53:01 2016 Thread-2: Wed Apr 6 11:53:03 2016 Thread-2: Wed Apr 6 11:53:05 2016 \u9000\u51fa\u4e3b\u7ebf\u7a0b \u7ebf\u7a0b\u4f18\u5148\u7ea7\u961f\u5217\uff08 Queue\uff09 \u00b6 Python \u7684 Queue \u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u540c\u6b65\u7684\u3001\u7ebf\u7a0b\u5b89\u5168\u7684\u961f\u5217\u7c7b\uff0c\u5305\u62ec FIFO\uff08\u5148\u5165\u5148\u51fa)\u961f\u5217 Queue\uff0cLIFO\uff08\u540e\u5165\u5148\u51fa\uff09\u961f\u5217 LifoQueue\uff0c\u548c\u4f18\u5148\u7ea7\u961f\u5217 PriorityQueue\u3002 \u8fd9\u4e9b\u961f\u5217\u90fd\u5b9e\u73b0\u4e86\u9501\u539f\u8bed\uff0c\u80fd\u591f\u5728\u591a\u7ebf\u7a0b\u4e2d\u76f4\u63a5\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528\u961f\u5217\u6765\u5b9e\u73b0\u7ebf\u7a0b\u95f4\u7684\u540c\u6b65\u3002 Queue \u6a21\u5757\u4e2d\u7684\u5e38\u7528\u65b9\u6cd5: - Queue . qsize () \u8fd4\u56de\u961f\u5217\u7684\u5927\u5c0f - Queue . empty () \u5982\u679c\u961f\u5217\u4e3a\u7a7a \uff0c \u8fd4\u56deTrue , \u53cd\u4e4bFalse - Queue . full () \u5982\u679c\u961f\u5217\u6ee1\u4e86 \uff0c \u8fd4\u56deTrue , \u53cd\u4e4bFalse - Queue . full \u4e0e maxsize \u5927\u5c0f\u5bf9\u5e94 - Queue . get ([ block [, timeout ]]) \u83b7\u53d6\u961f\u5217 \uff0c timeout\u7b49\u5f85\u65f6\u95f4 - Queue . get_nowait () \u76f8\u5f53Queue . get ( False ) - Queue . put ( item ) \u5199\u5165\u961f\u5217 \uff0c timeout\u7b49\u5f85\u65f6\u95f4 - Queue . put_nowait ( item ) \u76f8\u5f53Queue . put ( item , False ) - Queue . task_done () \u5728\u5b8c\u6210\u4e00\u9879\u5de5\u4f5c\u4e4b\u540e \uff0c Queue . task_done () \u51fd\u6570\u5411\u4efb\u52a1\u5df2\u7ecf\u5b8c\u6210\u7684\u961f\u5217\u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7 - Queue . join () \u5b9e\u9645\u4e0a\u610f\u5473\u7740\u7b49\u5230\u961f\u5217\u4e3a\u7a7a \uff0c \u518d\u6267\u884c\u522b\u7684\u64cd\u4f5c \u5b9e\u4f8b \u00b6 #!/usr/bin/python3 import queue import threading import time exitFlag = 0 class myThread ( threading . Thread ): def __init__ ( self , threadID , name , q ): threading . Thread . __init__ ( self ) self . threadID = threadID self . name = name self . q = q def run ( self ): print ( \"\u5f00\u542f\u7ebf\u7a0b\uff1a\" + self . name ) process_data ( self . name , self . q ) print ( \"\u9000\u51fa\u7ebf\u7a0b\uff1a\" + self . name ) def process_data ( threadName , q ): while not exitFlag : queueLock . acquire () if not workQueue . empty (): data = q . get () queueLock . release () print ( \" %s processing %s \" % ( threadName , data )) else : queueLock . release () time . sleep ( 1 ) threadList = [ \"Thread-1\" , \"Thread-2\" , \"Thread-3\" ] nameList = [ \"One\" , \"Two\" , \"Three\" , \"Four\" , \"Five\" ] queueLock = threading . Lock () workQueue = queue . Queue ( 10 ) threads = [] threadID = 1 # \u521b\u5efa\u65b0\u7ebf\u7a0b for tName in threadList : thread = myThread ( threadID , tName , workQueue ) thread . start () threads . append ( thread ) threadID += 1 # \u586b\u5145\u961f\u5217 queueLock . acquire () for word in nameList : workQueue . put ( word ) queueLock . release () # \u7b49\u5f85\u961f\u5217\u6e05\u7a7a while not workQueue . empty (): pass # \u901a\u77e5\u7ebf\u7a0b\u662f\u65f6\u5019\u9000\u51fa exitFlag = 1 # \u7b49\u5f85\u6240\u6709\u7ebf\u7a0b\u5b8c\u6210 for t in threads : t . join () print ( \"\u9000\u51fa\u4e3b\u7ebf\u7a0b\" ) \u4ee5\u4e0a\u7a0b\u5e8f\u6267\u884c\u7ed3\u679c\uff1a \u5f00\u542f\u7ebf\u7a0b\uff1aThread-1 \u5f00\u542f\u7ebf\u7a0b\uff1aThread-2 \u5f00\u542f\u7ebf\u7a0b\uff1aThread-3 Thread-3 processing One Thread-1 processing Two Thread-2 processing Three Thread-3 processing Four Thread-1 processing Five \u9000\u51fa\u7ebf\u7a0b\uff1aThread-3 \u9000\u51fa\u7ebf\u7a0b\uff1aThread-2 \u9000\u51fa\u7ebf\u7a0b\uff1aThread-1 \u9000\u51fa\u4e3b\u7ebf\u7a0b","title":"Python3 \u591a\u7ebf\u7a0b"},{"location":"01-basic/Python3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B/#python3","text":"\u591a\u7ebf\u7a0b\u7c7b\u4f3c\u4e8e\u540c\u65f6\u6267\u884c\u591a\u4e2a\u4e0d\u540c\u7a0b\u5e8f\uff0c\u591a\u7ebf\u7a0b\u8fd0\u884c\u6709\u5982\u4e0b\u4f18\u70b9\uff1a \u4f7f\u7528\u7ebf\u7a0b\u53ef\u4ee5\u628a\u5360\u636e\u957f\u65f6\u95f4\u7684\u7a0b\u5e8f\u4e2d\u7684\u4efb\u52a1\u653e\u5230\u540e\u53f0\u53bb\u5904\u7406\u3002 \u7528\u6237\u754c\u9762\u53ef\u4ee5\u66f4\u52a0\u5438\u5f15\u4eba\uff0c\u6bd4\u5982\u7528\u6237\u70b9\u51fb\u4e86\u4e00\u4e2a\u6309\u94ae\u53bb\u89e6\u53d1\u67d0\u4e9b\u4e8b\u4ef6\u7684\u5904\u7406\uff0c\u53ef\u4ee5\u5f39\u51fa\u4e00\u4e2a\u8fdb\u5ea6\u6761\u6765\u663e\u793a\u5904\u7406\u7684\u8fdb\u5ea6\u3002 \u7a0b\u5e8f\u7684\u8fd0\u884c\u901f\u5ea6\u53ef\u80fd\u52a0\u5feb\u3002 \u5728\u4e00\u4e9b\u7b49\u5f85\u7684\u4efb\u52a1\u5b9e\u73b0\u4e0a\u5982\u7528\u6237\u8f93\u5165\u3001\u6587\u4ef6\u8bfb\u5199\u548c\u7f51\u7edc\u6536\u53d1\u6570\u636e\u7b49\uff0c\u7ebf\u7a0b\u5c31\u6bd4\u8f83\u6709\u7528\u4e86\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u53ef\u4ee5\u91ca\u653e\u4e00\u4e9b\u73cd\u8d35\u7684\u8d44\u6e90\u5982\u5185\u5b58\u5360\u7528\u7b49\u7b49\u3002 \u6bcf\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0b\u6709\u4e00\u4e2a\u7a0b\u5e8f\u8fd0\u884c\u7684\u5165\u53e3\u3001\u987a\u5e8f\u6267\u884c\u5e8f\u5217\u548c\u7a0b\u5e8f\u7684\u51fa\u53e3\u3002\u4f46\u662f\u7ebf\u7a0b\u4e0d\u80fd\u591f\u72ec\u7acb\u6267\u884c\uff0c\u5fc5\u987b\u4f9d\u5b58\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u7531\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u591a\u4e2a\u7ebf\u7a0b\u6267\u884c\u63a7\u5236\u3002 \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4ed6\u81ea\u5df1\u7684\u4e00\u7ec4 CPU \u5bc4\u5b58\u5668\uff0c\u79f0\u4e3a\u7ebf\u7a0b\u7684\u4e0a\u4e0b\u6587\uff0c\u8be5\u4e0a\u4e0b\u6587\u53cd\u6620\u4e86\u7ebf\u7a0b\u4e0a\u6b21\u8fd0\u884c\u8be5\u7ebf\u7a0b\u7684 CPU \u5bc4\u5b58\u5668\u7684\u72b6\u6001\u3002 \u6307\u4ee4\u6307\u9488\u548c\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\u662f\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u4e2d\u4e24\u4e2a\u6700\u91cd\u8981\u7684\u5bc4\u5b58\u5668\uff0c\u7ebf\u7a0b\u603b\u662f\u5728\u8fdb\u7a0b\u5f97\u5230\u4e0a\u4e0b\u6587\u4e2d\u8fd0\u884c\u7684\uff0c\u8fd9\u4e9b\u5730\u5740\u90fd\u7528\u4e8e\u6807\u5fd7\u62e5\u6709\u7ebf\u7a0b\u7684\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u5185\u5b58\u3002 \u7ebf\u7a0b\u53ef\u4ee5\u88ab\u62a2\u5360\uff08\u4e2d\u65ad\uff09\u3002 \u5728\u5176\u4ed6\u7ebf\u7a0b\u6b63\u5728\u8fd0\u884c\u65f6\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u6682\u65f6\u6401\u7f6e\uff08\u4e5f\u79f0\u4e3a\u7761\u7720\uff09 -- \u8fd9\u5c31\u662f\u7ebf\u7a0b\u7684\u9000\u8ba9\u3002 \u7ebf\u7a0b\u53ef\u4ee5\u5206\u4e3a: \u5185\u6838\u7ebf\u7a0b\uff1a\u7531\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u521b\u5efa\u548c\u64a4\u9500\u3002 \u7528\u6237\u7ebf\u7a0b\uff1a\u4e0d\u9700\u8981\u5185\u6838\u652f\u6301\u800c\u5728\u7528\u6237\u7a0b\u5e8f\u4e2d\u5b9e\u73b0\u7684\u7ebf\u7a0b\u3002 Python3 \u7ebf\u7a0b\u4e2d\u5e38\u7528\u7684\u4e24\u4e2a\u6a21\u5757\u4e3a\uff1a _thread threading(\u63a8\u8350\u4f7f\u7528) thread \u6a21\u5757\u5df2\u88ab\u5e9f\u5f03\u3002\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 threading \u6a21\u5757\u4ee3\u66ff\u3002\u6240\u4ee5\uff0c\u5728 Python3 \u4e2d\u4e0d\u80fd\u518d\u4f7f\u7528\"thread\" \u6a21\u5757\u3002\u4e3a\u4e86\u517c\u5bb9\u6027\uff0cPython3 \u5c06 thread \u91cd\u547d\u540d\u4e3a \"_thread\"\u3002","title":"Python3 \u591a\u7ebf\u7a0b"},{"location":"01-basic/Python3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B/#python","text":"Python \u4e2d\u4f7f\u7528\u7ebf\u7a0b\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u51fd\u6570\u6216\u8005\u7528\u7c7b\u6765\u5305\u88c5\u7ebf\u7a0b\u5bf9\u8c61\u3002 \u51fd\u6570\u5f0f\uff1a\u8c03\u7528 _thread \u6a21\u5757\u4e2d\u7684 start_new_thread()\u51fd\u6570\u6765\u4ea7\u751f\u65b0\u7ebf\u7a0b\u3002\u8bed\u6cd5\u5982\u4e0b: _thread . start_new_thread ( function , args [, kwargs ] ) \u53c2\u6570\u8bf4\u660e: function - \u7ebf\u7a0b\u51fd\u6570\u3002 args - \u4f20\u9012\u7ed9\u7ebf\u7a0b\u51fd\u6570\u7684\u53c2\u6570,\u4ed6\u5fc5\u987b\u662f\u4e2a tuple \u7c7b\u578b\u3002 kwargs - \u53ef\u9009\u53c2\u6570\u3002","title":"\u5f00\u59cb\u5b66\u4e60 Python \u7ebf\u7a0b"},{"location":"01-basic/Python3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B/#_1","text":"#!/usr/bin/python3 import _thread import time # \u4e3a\u7ebf\u7a0b\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570 def print_time ( threadName , delay ): count = 0 while count < 5 : time . sleep ( delay ) count += 1 print ( \" %s : %s \" % ( threadName , time . ctime ( time . time ()) )) # \u521b\u5efa\u4e24\u4e2a\u7ebf\u7a0b try : _thread . start_new_thread ( print_time , ( \"Thread-1\" , 2 , ) ) _thread . start_new_thread ( print_time , ( \"Thread-2\" , 4 , ) ) except : print ( \"Error: \u65e0\u6cd5\u542f\u52a8\u7ebf\u7a0b\" ) while 1 : pass \u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Thread-1: Wed Apr 6 11:36:31 2016 Thread-1: Wed Apr 6 11:36:33 2016 Thread-2: Wed Apr 6 11:36:33 2016 Thread-1: Wed Apr 6 11:36:35 2016 Thread-1: Wed Apr 6 11:36:37 2016 Thread-2: Wed Apr 6 11:36:37 2016 Thread-1: Wed Apr 6 11:36:39 2016 Thread-2: Wed Apr 6 11:36:41 2016 Thread-2: Wed Apr 6 11:36:45 2016 Thread-2: Wed Apr 6 11:36:49 2016 \u6267\u884c\u4ee5\u4e0a\u7a0b\u540e\u53ef\u4ee5\u6309\u4e0b ctrl-c \u9000\u51fa\u3002","title":"\u5b9e\u4f8b"},{"location":"01-basic/Python3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B/#_2","text":"Python3 \u901a\u8fc7\u4e24\u4e2a\u6807\u51c6\u5e93 _thread \u548c threading \u63d0\u4f9b\u5bf9\u7ebf\u7a0b\u7684\u652f\u6301\u3002 _thread \u63d0\u4f9b\u4e86\u4f4e\u7ea7\u522b\u7684\u3001\u539f\u59cb\u7684\u7ebf\u7a0b\u4ee5\u53ca\u4e00\u4e2a\u7b80\u5355\u7684\u9501\uff0c\u5b83\u76f8\u6bd4\u4e8e threading \u6a21\u5757\u7684\u529f\u80fd\u8fd8\u662f\u6bd4\u8f83\u6709\u9650\u7684\u3002 threading \u6a21\u5757\u9664\u4e86\u5305\u542b _thread \u6a21\u5757\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u5916\uff0c\u8fd8\u63d0\u4f9b\u7684\u5176\u4ed6\u65b9\u6cd5\uff1a threading.currentThread(): \u8fd4\u56de\u5f53\u524d\u7684\u7ebf\u7a0b\u53d8\u91cf\u3002 threading.enumerate(): \u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u7684 list\u3002\u6b63\u5728\u8fd0\u884c\u6307\u7ebf\u7a0b\u542f\u52a8\u540e\u3001\u7ed3\u675f\u524d\uff0c\u4e0d\u5305\u62ec\u542f\u52a8\u524d\u548c\u7ec8\u6b62\u540e\u7684\u7ebf\u7a0b\u3002 threading.activeCount(): \u8fd4\u56de\u6b63\u5728\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u91cf\uff0c\u4e0e len(threading.enumerate())\u6709\u76f8\u540c\u7684\u7ed3\u679c\u3002 \u9664\u4e86\u4f7f\u7528\u65b9\u6cd5\u5916\uff0c\u7ebf\u7a0b\u6a21\u5757\u540c\u6837\u63d0\u4f9b\u4e86 Thread \u7c7b\u6765\u5904\u7406\u7ebf\u7a0b\uff0cThread \u7c7b\u63d0\u4f9b\u4e86\u4ee5\u4e0b\u65b9\u6cd5: run(): \u7528\u4ee5\u8868\u793a\u7ebf\u7a0b\u6d3b\u52a8\u7684\u65b9\u6cd5\u3002 start(): \u542f\u52a8\u7ebf\u7a0b\u6d3b\u52a8\u3002 join([time]): \u7b49\u5f85\u81f3\u7ebf\u7a0b\u4e2d\u6b62\u3002\u8fd9\u963b\u585e\u8c03\u7528\u7ebf\u7a0b\u76f4\u81f3\u7ebf\u7a0b\u7684 join() \u65b9\u6cd5\u88ab\u8c03\u7528\u4e2d\u6b62-\u6b63\u5e38\u9000\u51fa\u6216\u8005\u629b\u51fa\u672a\u5904\u7406\u7684\u5f02\u5e38-\u6216\u8005\u662f\u53ef\u9009\u7684\u8d85\u65f6\u53d1\u751f\u3002 isAlive(): \u8fd4\u56de\u7ebf\u7a0b\u662f\u5426\u6d3b\u52a8\u7684\u3002 getName(): \u8fd4\u56de\u7ebf\u7a0b\u540d\u3002 setName(): \u8bbe\u7f6e\u7ebf\u7a0b\u540d\u3002","title":"\u7ebf\u7a0b\u6a21\u5757"},{"location":"01-basic/Python3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B/#threading","text":"\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u4ece threading.Thread \u7ee7\u627f\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b50\u7c7b\uff0c\u5e76\u5b9e\u4f8b\u5316\u540e\u8c03\u7528 start() \u65b9\u6cd5\u542f\u52a8\u65b0\u7ebf\u7a0b\uff0c\u5373\u5b83\u8c03\u7528\u4e86\u7ebf\u7a0b\u7684 run() \u65b9\u6cd5\uff1a","title":"\u4f7f\u7528 threading \u6a21\u5757\u521b\u5efa\u7ebf\u7a0b"},{"location":"01-basic/Python3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B/#_3","text":"#!/usr/bin/python3 import threading import time exitFlag = 0 class myThread ( threading . Thread ): def __init__ ( self , threadID , name , counter ): threading . Thread . __init__ ( self ) self . threadID = threadID self . name = name self . counter = counter def run ( self ): print ( \"\u5f00\u59cb\u7ebf\u7a0b\uff1a\" + self . name ) print_time ( self . name , self . counter , 5 ) print ( \"\u9000\u51fa\u7ebf\u7a0b\uff1a\" + self . name ) def print_time ( threadName , delay , counter ): while counter : if exitFlag : threadName . exit () time . sleep ( delay ) print ( \" %s : %s \" % ( threadName , time . ctime ( time . time ()))) counter -= 1 # \u521b\u5efa\u65b0\u7ebf\u7a0b thread1 = myThread ( 1 , \"Thread-1\" , 1 ) thread2 = myThread ( 2 , \"Thread-2\" , 2 ) # \u5f00\u542f\u65b0\u7ebf\u7a0b thread1 . start () thread2 . start () thread1 . join () thread2 . join () print ( \"\u9000\u51fa\u4e3b\u7ebf\u7a0b\" ) \u4ee5\u4e0a\u7a0b\u5e8f\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1b \u5f00\u59cb\u7ebf\u7a0b\uff1aThread-1 \u5f00\u59cb\u7ebf\u7a0b\uff1aThread-2 Thread-1: Wed Apr 6 11:46:46 2016 Thread-1: Wed Apr 6 11:46:47 2016 Thread-2: Wed Apr 6 11:46:47 2016 Thread-1: Wed Apr 6 11:46:48 2016 Thread-1: Wed Apr 6 11:46:49 2016 Thread-2: Wed Apr 6 11:46:49 2016 Thread-1: Wed Apr 6 11:46:50 2016 \u9000\u51fa\u7ebf\u7a0b\uff1aThread-1 Thread-2: Wed Apr 6 11:46:51 2016 Thread-2: Wed Apr 6 11:46:53 2016 Thread-2: Wed Apr 6 11:46:55 2016 \u9000\u51fa\u7ebf\u7a0b\uff1aThread-2 \u9000\u51fa\u4e3b\u7ebf\u7a0b","title":"\u5b9e\u4f8b"},{"location":"01-basic/Python3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B/#_4","text":"\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u5171\u540c\u5bf9\u67d0\u4e2a\u6570\u636e\u4fee\u6539\uff0c\u5219\u53ef\u80fd\u51fa\u73b0\u4e0d\u53ef\u9884\u6599\u7684\u7ed3\u679c\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u6b63\u786e\u6027\uff0c\u9700\u8981\u5bf9\u591a\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u540c\u6b65\u3002 \u4f7f\u7528 Thread \u5bf9\u8c61\u7684 Lock \u548c Rlock \u53ef\u4ee5\u5b9e\u73b0\u7b80\u5355\u7684\u7ebf\u7a0b\u540c\u6b65\uff0c\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u90fd\u6709 acquire \u65b9\u6cd5\u548c release \u65b9\u6cd5\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u9700\u8981\u6bcf\u6b21\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u64cd\u4f5c\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u5c06\u5176\u64cd\u4f5c\u653e\u5230 acquire \u548c release \u65b9\u6cd5\u4e4b\u95f4\u3002\u5982\u4e0b\uff1a \u591a\u7ebf\u7a0b\u7684\u4f18\u52bf\u5728\u4e8e\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u4efb\u52a1\uff08\u81f3\u5c11\u611f\u89c9\u8d77\u6765\u662f\u8fd9\u6837\uff09\u3002\u4f46\u662f\u5f53\u7ebf\u7a0b\u9700\u8981\u5171\u4eab\u6570\u636e\u65f6\uff0c\u53ef\u80fd\u5b58\u5728\u6570\u636e\u4e0d\u540c\u6b65\u7684\u95ee\u9898\u3002 \u8003\u8651\u8fd9\u6837\u4e00\u79cd\u60c5\u51b5\uff1a\u4e00\u4e2a\u5217\u8868\u91cc\u6240\u6709\u5143\u7d20\u90fd\u662f 0\uff0c\u7ebf\u7a0b\"set\"\u4ece\u540e\u5411\u524d\u628a\u6240\u6709\u5143\u7d20\u6539\u6210 1\uff0c\u800c\u7ebf\u7a0b\"print\"\u8d1f\u8d23\u4ece\u524d\u5f80\u540e\u8bfb\u53d6\u5217\u8868\u5e76\u6253\u5370\u3002 \u90a3\u4e48\uff0c\u53ef\u80fd\u7ebf\u7a0b\"set\"\u5f00\u59cb\u6539\u7684\u65f6\u5019\uff0c\u7ebf\u7a0b\"print\"\u4fbf\u6765\u6253\u5370\u5217\u8868\u4e86\uff0c\u8f93\u51fa\u5c31\u6210\u4e86\u4e00\u534a 0 \u4e00\u534a 1\uff0c\u8fd9\u5c31\u662f\u6570\u636e\u7684\u4e0d\u540c\u6b65\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\uff0c\u5f15\u5165\u4e86\u9501\u7684\u6982\u5ff5\u3002 \u9501\u6709\u4e24\u79cd\u72b6\u6001\u2014\u2014\u9501\u5b9a\u548c\u672a\u9501\u5b9a\u3002\u6bcf\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u6bd4\u5982\"set\"\u8981\u8bbf\u95ee\u5171\u4eab\u6570\u636e\u65f6\uff0c\u5fc5\u987b\u5148\u83b7\u5f97\u9501\u5b9a\uff1b\u5982\u679c\u5df2\u7ecf\u6709\u522b\u7684\u7ebf\u7a0b\u6bd4\u5982\"print\"\u83b7\u5f97\u9501\u5b9a\u4e86\uff0c\u90a3\u4e48\u5c31\u8ba9\u7ebf\u7a0b\"set\"\u6682\u505c\uff0c\u4e5f\u5c31\u662f\u540c\u6b65\u963b\u585e\uff1b\u7b49\u5230\u7ebf\u7a0b\"print\"\u8bbf\u95ee\u5b8c\u6bd5\uff0c\u91ca\u653e\u9501\u4ee5\u540e\uff0c\u518d\u8ba9\u7ebf\u7a0b\"set\"\u7ee7\u7eed\u3002 \u7ecf\u8fc7\u8fd9\u6837\u7684\u5904\u7406\uff0c\u6253\u5370\u5217\u8868\u65f6\u8981\u4e48\u5168\u90e8\u8f93\u51fa 0\uff0c\u8981\u4e48\u5168\u90e8\u8f93\u51fa 1\uff0c\u4e0d\u4f1a\u518d\u51fa\u73b0\u4e00\u534a 0 \u4e00\u534a 1 \u7684\u5c34\u5c2c\u573a\u9762\u3002","title":"\u7ebf\u7a0b\u540c\u6b65"},{"location":"01-basic/Python3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B/#_5","text":"#!/usr/bin/python3 import threading import time class myThread ( threading . Thread ): def __init__ ( self , threadID , name , counter ): threading . Thread . __init__ ( self ) self . threadID = threadID self . name = name self . counter = counter def run ( self ): print ( \"\u5f00\u542f\u7ebf\u7a0b\uff1a \" + self . name ) # \u83b7\u53d6\u9501\uff0c\u7528\u4e8e\u7ebf\u7a0b\u540c\u6b65 threadLock . acquire () print_time ( self . name , self . counter , 3 ) # \u91ca\u653e\u9501\uff0c\u5f00\u542f\u4e0b\u4e00\u4e2a\u7ebf\u7a0b threadLock . release () def print_time ( threadName , delay , counter ): while counter : time . sleep ( delay ) print ( \" %s : %s \" % ( threadName , time . ctime ( time . time ()))) counter -= 1 threadLock = threading . Lock () threads = [] # \u521b\u5efa\u65b0\u7ebf\u7a0b thread1 = myThread ( 1 , \"Thread-1\" , 1 ) thread2 = myThread ( 2 , \"Thread-2\" , 2 ) # \u5f00\u542f\u65b0\u7ebf\u7a0b thread1 . start () thread2 . start () # \u6dfb\u52a0\u7ebf\u7a0b\u5230\u7ebf\u7a0b\u5217\u8868 threads . append ( thread1 ) threads . append ( thread2 ) # \u7b49\u5f85\u6240\u6709\u7ebf\u7a0b\u5b8c\u6210 for t in threads : t . join () print ( \"\u9000\u51fa\u4e3b\u7ebf\u7a0b\" ) \u6267\u884c\u4ee5\u4e0a\u7a0b\u5e8f\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a \u5f00\u542f\u7ebf\u7a0b\uff1a Thread-1 \u5f00\u542f\u7ebf\u7a0b\uff1a Thread-2 Thread-1: Wed Apr 6 11:52:57 2016 Thread-1: Wed Apr 6 11:52:58 2016 Thread-1: Wed Apr 6 11:52:59 2016 Thread-2: Wed Apr 6 11:53:01 2016 Thread-2: Wed Apr 6 11:53:03 2016 Thread-2: Wed Apr 6 11:53:05 2016 \u9000\u51fa\u4e3b\u7ebf\u7a0b","title":"\u5b9e\u4f8b"},{"location":"01-basic/Python3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B/#queue","text":"Python \u7684 Queue \u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u540c\u6b65\u7684\u3001\u7ebf\u7a0b\u5b89\u5168\u7684\u961f\u5217\u7c7b\uff0c\u5305\u62ec FIFO\uff08\u5148\u5165\u5148\u51fa)\u961f\u5217 Queue\uff0cLIFO\uff08\u540e\u5165\u5148\u51fa\uff09\u961f\u5217 LifoQueue\uff0c\u548c\u4f18\u5148\u7ea7\u961f\u5217 PriorityQueue\u3002 \u8fd9\u4e9b\u961f\u5217\u90fd\u5b9e\u73b0\u4e86\u9501\u539f\u8bed\uff0c\u80fd\u591f\u5728\u591a\u7ebf\u7a0b\u4e2d\u76f4\u63a5\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528\u961f\u5217\u6765\u5b9e\u73b0\u7ebf\u7a0b\u95f4\u7684\u540c\u6b65\u3002 Queue \u6a21\u5757\u4e2d\u7684\u5e38\u7528\u65b9\u6cd5: - Queue . qsize () \u8fd4\u56de\u961f\u5217\u7684\u5927\u5c0f - Queue . empty () \u5982\u679c\u961f\u5217\u4e3a\u7a7a \uff0c \u8fd4\u56deTrue , \u53cd\u4e4bFalse - Queue . full () \u5982\u679c\u961f\u5217\u6ee1\u4e86 \uff0c \u8fd4\u56deTrue , \u53cd\u4e4bFalse - Queue . full \u4e0e maxsize \u5927\u5c0f\u5bf9\u5e94 - Queue . get ([ block [, timeout ]]) \u83b7\u53d6\u961f\u5217 \uff0c timeout\u7b49\u5f85\u65f6\u95f4 - Queue . get_nowait () \u76f8\u5f53Queue . get ( False ) - Queue . put ( item ) \u5199\u5165\u961f\u5217 \uff0c timeout\u7b49\u5f85\u65f6\u95f4 - Queue . put_nowait ( item ) \u76f8\u5f53Queue . put ( item , False ) - Queue . task_done () \u5728\u5b8c\u6210\u4e00\u9879\u5de5\u4f5c\u4e4b\u540e \uff0c Queue . task_done () \u51fd\u6570\u5411\u4efb\u52a1\u5df2\u7ecf\u5b8c\u6210\u7684\u961f\u5217\u53d1\u9001\u4e00\u4e2a\u4fe1\u53f7 - Queue . join () \u5b9e\u9645\u4e0a\u610f\u5473\u7740\u7b49\u5230\u961f\u5217\u4e3a\u7a7a \uff0c \u518d\u6267\u884c\u522b\u7684\u64cd\u4f5c","title":"\u7ebf\u7a0b\u4f18\u5148\u7ea7\u961f\u5217\uff08 Queue\uff09"},{"location":"01-basic/Python3%20%E5%A4%9A%E7%BA%BF%E7%A8%8B/#_6","text":"#!/usr/bin/python3 import queue import threading import time exitFlag = 0 class myThread ( threading . Thread ): def __init__ ( self , threadID , name , q ): threading . Thread . __init__ ( self ) self . threadID = threadID self . name = name self . q = q def run ( self ): print ( \"\u5f00\u542f\u7ebf\u7a0b\uff1a\" + self . name ) process_data ( self . name , self . q ) print ( \"\u9000\u51fa\u7ebf\u7a0b\uff1a\" + self . name ) def process_data ( threadName , q ): while not exitFlag : queueLock . acquire () if not workQueue . empty (): data = q . get () queueLock . release () print ( \" %s processing %s \" % ( threadName , data )) else : queueLock . release () time . sleep ( 1 ) threadList = [ \"Thread-1\" , \"Thread-2\" , \"Thread-3\" ] nameList = [ \"One\" , \"Two\" , \"Three\" , \"Four\" , \"Five\" ] queueLock = threading . Lock () workQueue = queue . Queue ( 10 ) threads = [] threadID = 1 # \u521b\u5efa\u65b0\u7ebf\u7a0b for tName in threadList : thread = myThread ( threadID , tName , workQueue ) thread . start () threads . append ( thread ) threadID += 1 # \u586b\u5145\u961f\u5217 queueLock . acquire () for word in nameList : workQueue . put ( word ) queueLock . release () # \u7b49\u5f85\u961f\u5217\u6e05\u7a7a while not workQueue . empty (): pass # \u901a\u77e5\u7ebf\u7a0b\u662f\u65f6\u5019\u9000\u51fa exitFlag = 1 # \u7b49\u5f85\u6240\u6709\u7ebf\u7a0b\u5b8c\u6210 for t in threads : t . join () print ( \"\u9000\u51fa\u4e3b\u7ebf\u7a0b\" ) \u4ee5\u4e0a\u7a0b\u5e8f\u6267\u884c\u7ed3\u679c\uff1a \u5f00\u542f\u7ebf\u7a0b\uff1aThread-1 \u5f00\u542f\u7ebf\u7a0b\uff1aThread-2 \u5f00\u542f\u7ebf\u7a0b\uff1aThread-3 Thread-3 processing One Thread-1 processing Two Thread-2 processing Three Thread-3 processing Four Thread-1 processing Five \u9000\u51fa\u7ebf\u7a0b\uff1aThread-3 \u9000\u51fa\u7ebf\u7a0b\uff1aThread-2 \u9000\u51fa\u7ebf\u7a0b\uff1aThread-1 \u9000\u51fa\u4e3b\u7ebf\u7a0b","title":"\u5b9e\u4f8b"},{"location":"01-basic/curl/","text":"curl \u00b6 curl \u547d\u4ee4\u5728 linux \u7cfb\u7edf\u4e2d\u5e38\u7528\uff0c\u652f\u6301\u6587\u4ef6\u4e0a\u4f20\u4e0b\u8f7d\u7b49\u591a\u79cd\u547d\u4ee4 curl [options] [url] curl http://www.baidu.com \u7cfb\u7edf\u53d1\u9001 get \u8bf7\u6c42\u83b7\u53d6\u9875\u9762\u7684\u94fe\u63a5\u5185\u5bb9\u5230\u6807\u51c6\u8f93\u51fa curl -I http://baidu.com \u663e\u793a http \u8bf7\u6c42\u5934\uff0c\u4e0d\u663e\u793a\u5185\u90e8\u5185\u5bb9 curl -i [url] \u663e\u793a\u8bf7\u6c42\u5934\u548c\u9875\u9762\u5185\u5bb9(html) curl [URL]>index.html \u5c06\u9875\u9762\u4fdd\u5b58\u5230\u672c\u5730\u6587\u4ef6 curl -o [url] -o [url] \u540c\u65f6\u4e0b\u8f7d\u591a\u4e2a\u6587\u4ef6 curl -L url \u83b7\u5f97\u91cd\u5b9a\u5411\u7684\u7f51\u9875(\u5982\u679c\u6d4f\u89c8\u5668\u6253\u5f00\u53ef\u4ee5\u8df3\u8f6c\uff0c\u76f4\u63a5\u4f7f\u7528 curl \u547d\u4ee4\u4e0d\u4f1a\u8df3\u8f6c) curl -A \"MOzilla/5.0(Android ;Monile; rv:35.0)\" URL \u4f2a\u88c5\u6210\u5b89\u5353\u706b\u72d0\u6d4f\u89c8\u5668\u81ea\u5b9a\u4e49\u7528\u6237\u4ee3\u7406 curl -H \"Referer: www.baidu.com \" -H \"User-Agent:Custom-User-Agent\" URL \u4f20\u9012\u8bf7\u6c42\u5934 curl -H \"Cookie: 1234567890=dfghjkl\" URL \u7684\u5f62\u5f0f\u4f20\u9012 Cookies curl -c \"cookie-example\" URL \u4fdd\u5b58 cookies curl -b \"cookies\" URL \u81ea\u5b9a\u4e49 cookies(\u52a0\u5165 cookies \u5b57\u7b26\u4e32\u6216\u8005\u5df2\u7ecf\u4fdd\u5b58\u7684 cookies \u6587\u4ef6\u540d) curl -d \"username=tom&password=1234567\" -X POST url \u4f7f\u7528 post \u65b9\u6cd5\u53d1\u9001\u6570\u636e -X \u540e\u9762\u662f\u53d1\u9001\u6570\u636e\u7684\u65b9\u6cd5 \u5f3a\u5236\u4f7f\u7528 get \u65b9\u6cd5 curl -d \"somedata\" -X GET URL ***\u5e94\u7528\uff1a\u5e26 cookies \u767b\u5f55 *** curl -c \"cookie-login\" -d \"username=asd&password=1234\" -X POST URL curl -b \"cookie-login\" URL \u7b2c\u4e00\u6b21\u901a\u8fc7 POST \u53d1\u9001\u7528\u6237\u4fe1\u606f\u5e76\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5b58\u50a8 cookies\uff0c\u4ee5\u540e\u76f4\u63a5\u4e0a\u4f20 cookies \u5373\u53ef\u514d\u7528\u6237\u767b\u5f55\u3002 curl -v \u663e\u793a\u8bf7\u6c42\u8be6\u7ec6\u4fe1\u606f curl -f \u5411\u670d\u52a1\u5668 post \u8868\u5355 curl -F \"web=@index.html;type=text/html\" url","title":"curl"},{"location":"01-basic/curl/#curl","text":"curl \u547d\u4ee4\u5728 linux \u7cfb\u7edf\u4e2d\u5e38\u7528\uff0c\u652f\u6301\u6587\u4ef6\u4e0a\u4f20\u4e0b\u8f7d\u7b49\u591a\u79cd\u547d\u4ee4 curl [options] [url] curl http://www.baidu.com \u7cfb\u7edf\u53d1\u9001 get \u8bf7\u6c42\u83b7\u53d6\u9875\u9762\u7684\u94fe\u63a5\u5185\u5bb9\u5230\u6807\u51c6\u8f93\u51fa curl -I http://baidu.com \u663e\u793a http \u8bf7\u6c42\u5934\uff0c\u4e0d\u663e\u793a\u5185\u90e8\u5185\u5bb9 curl -i [url] \u663e\u793a\u8bf7\u6c42\u5934\u548c\u9875\u9762\u5185\u5bb9(html) curl [URL]>index.html \u5c06\u9875\u9762\u4fdd\u5b58\u5230\u672c\u5730\u6587\u4ef6 curl -o [url] -o [url] \u540c\u65f6\u4e0b\u8f7d\u591a\u4e2a\u6587\u4ef6 curl -L url \u83b7\u5f97\u91cd\u5b9a\u5411\u7684\u7f51\u9875(\u5982\u679c\u6d4f\u89c8\u5668\u6253\u5f00\u53ef\u4ee5\u8df3\u8f6c\uff0c\u76f4\u63a5\u4f7f\u7528 curl \u547d\u4ee4\u4e0d\u4f1a\u8df3\u8f6c) curl -A \"MOzilla/5.0(Android ;Monile; rv:35.0)\" URL \u4f2a\u88c5\u6210\u5b89\u5353\u706b\u72d0\u6d4f\u89c8\u5668\u81ea\u5b9a\u4e49\u7528\u6237\u4ee3\u7406 curl -H \"Referer: www.baidu.com \" -H \"User-Agent:Custom-User-Agent\" URL \u4f20\u9012\u8bf7\u6c42\u5934 curl -H \"Cookie: 1234567890=dfghjkl\" URL \u7684\u5f62\u5f0f\u4f20\u9012 Cookies curl -c \"cookie-example\" URL \u4fdd\u5b58 cookies curl -b \"cookies\" URL \u81ea\u5b9a\u4e49 cookies(\u52a0\u5165 cookies \u5b57\u7b26\u4e32\u6216\u8005\u5df2\u7ecf\u4fdd\u5b58\u7684 cookies \u6587\u4ef6\u540d) curl -d \"username=tom&password=1234567\" -X POST url \u4f7f\u7528 post \u65b9\u6cd5\u53d1\u9001\u6570\u636e -X \u540e\u9762\u662f\u53d1\u9001\u6570\u636e\u7684\u65b9\u6cd5 \u5f3a\u5236\u4f7f\u7528 get \u65b9\u6cd5 curl -d \"somedata\" -X GET URL ***\u5e94\u7528\uff1a\u5e26 cookies \u767b\u5f55 *** curl -c \"cookie-login\" -d \"username=asd&password=1234\" -X POST URL curl -b \"cookie-login\" URL \u7b2c\u4e00\u6b21\u901a\u8fc7 POST \u53d1\u9001\u7528\u6237\u4fe1\u606f\u5e76\u8fdb\u884c\u9a8c\u8bc1\uff0c\u5b58\u50a8 cookies\uff0c\u4ee5\u540e\u76f4\u63a5\u4e0a\u4f20 cookies \u5373\u53ef\u514d\u7528\u6237\u767b\u5f55\u3002 curl -v \u663e\u793a\u8bf7\u6c42\u8be6\u7ec6\u4fe1\u606f curl -f \u5411\u670d\u52a1\u5668 post \u8868\u5355 curl -F \"web=@index.html;type=text/html\" url","title":"curl"},{"location":"01-basic/linux-basic/","text":"linux \u5e38\u7528\u6982\u5ff5 \u00b6 \u4e00\u3001Linux \u6743\u9650 \u00b6 Linux \u7528\u6237\u7ba1\u7406 \u00b6 Linux \u4e0b\u6709\u4e24\u79cd\u7528\u6237\uff1a\u666e\u901a\u7528\u6237\u548c\u8d85\u7ea7\u7528\u6237\u3002 \u666e\u901a\u7528\u6237\uff1a\u5728 linux \u4e0b\u505a\u6709\u9650\u7684\u4e8b\u60c5\uff1b\u63d0\u793a\u7b26\u662f\u201c$\u201d \u8d85\u7ea7\u7528\u6237\uff1a\u53ef\u4ee5\u5728 linux \u7cfb\u7edf\u4e0b\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u4e0d\u53d7\u9650\u5236\uff0c\u63d0\u793a\u7b26\u662f\u201c#\u201d\u3002 \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u5207\u6362\u7528\u6237\uff1asu [\u7528\u6237\u540d] su \u2013 substitute user identity \u66f4\u6362\u7528\u6237\u8eab\u4efd \u89e3\u91ca\uff1aThe su utility requests appropriate user credentials via PAM and switches to that user ID (the default user is the superuser). A shell is then executed. su\u5b9e\u7528\u7a0b\u5e8f\u901a\u8fc7PAM\u8bf7\u6c42\u9002\u5f53\u7684\u7528\u6237\u51ed\u636e\uff0c\u5e76\u5207\u6362\u5230\u8be5\u7528\u6237ID\uff08\u9ed8\u8ba4\u7528\u6237\u662f\u8d85\u7ea7\u7528\u6237\uff09\u3002\u7136\u540e\u6267\u884c\u4e00\u4e2ashell\u3002 Linux \u6743\u9650\u7ba1\u7406 \u00b6 1.\u6587\u4ef6\u8bbf\u95ee\u8005\u7684\u5206\u7c7b\uff08\u4eba\uff09 \u6587\u4ef6\u548c\u6587\u4ef6\u76ee\u5f55\u7684\u6240\u6709\u8005\uff1au\u2014User \u6587\u4ef6\u548c\u6587\u4ef6\u76ee\u5f55\u7684\u6240\u6709\u8005\u6240\u5728\u7684\u7ec4\u7684\u7528\u6237\uff1ag\u2014Group \u5176\u4ed6\u7528\u6237\uff1ao\u2014Others 2.\u6587\u4ef6\u8bbf\u95ee\u6743\u9650\u7684\u79cd\u7c7b \u57fa\u672c\u6743\u9650\uff1a read \u5bf9\u6587\u4ef6\u800c\u8a00\uff0c\u5177\u6709\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u7684\u6743\u9650\uff1b\u5bf9\u76ee\u5f55\u6765\u8bf4\uff0c\u5177\u6709\u6d4f\u89c8\u76ee\u5f55\u4fe1\u606f\u7684\u6743\u9650\u3002 write \u5bf9\u6587\u4ef6\u800c\u8a00\uff0c\u5177\u6709\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\u7684\u6743\u9650\uff1b\u5bf9\u76ee\u5f55\u6765\u8bf4\uff0c\u5177\u6709\u5220\u9664\u79fb\u52a8\u76ee\u5f55\u5185\u6587\u4ef6\u7684\u6743\u9650\u3002 execute \u5bf9\u6587\u4ef6\u800c\u8a00\uff0c\u5177\u6709\u6267\u884c\u6587\u4ef6\u7684\u6743\u9650\uff1b\u5bf9\u76ee\u5f55\u6765\u8bf4\uff0c\u5177\u6709\u8fdb\u5165\u76ee\u5f55\u7684\u6743\u9650\u3002 - \u8868\u793a\u4e0d\u5177\u6709\u8be5\u6743\u9650\u3002 3.\u6587\u4ef6\u6743\u9650\u503c\u5f97\u8868\u793a\u65b9\u6cd5 r\u2013 \u53ea\u8bfb -w- \u4ec5\u53ef\u5199 \u2013x \u4ec5\u53ef\u6267\u884c rw- \u53ef\u8bfb\u53ef\u5199 -wx \u53ef\u5199\u53ef\u6267\u884c r-x \u53ef\u8bfb\u53ef\u6267\u884c rwx \u53ef\u8bfb\u53ef\u5199\u53ef\u6267\u884c \u2014 \u65e0\u6743\u9650 \u4e8c\u3001Linux \u4e0b\u57fa\u672c\u547d\u4ee4 \u00b6 1.ls \u547d\u4ee4\uff1a \u00b6 \u683c\u5f0f\uff1a ls [\u9009\u9879] [\u76ee\u5f55\u6216\u6587\u4ef6] \u529f\u80fd\uff1a\u5bf9\u4e8e\u76ee\u5f55\uff0c\u5217\u51fa\u8be5\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5b50\u76ee\u5f55\u4e0e\u6587\u4ef6\uff1b\u5bf9\u4e8e\u6587\u4ef6\uff0c\u5217\u51fa\u6587\u4ef6\u540d\u4ee5\u53ca\u5176\u4ed6\u4fe1\u606f\u3002 \u5e38\u7528\u9009\u9879\uff1a -a \uff1a\u5217\u51fa\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u5305\u62ec\u4ee5 . \u5f00\u5934\u7684\u9690\u542b\u6587\u4ef6\u3002 -d \uff1a\u5c06\u76ee\u5f55\u50cf\u6587\u4ef6\u4e00\u6837\u663e\u793a\uff0c\u800c\u4e0d\u662f\u663e\u793a\u5176\u4ed6\u6587\u4ef6\u3002 -i \uff1a\u8f93\u51fa\u6587\u4ef6\u7684 i \u8282\u70b9\u7684\u7d22\u5f15\u4fe1\u606f\u3002 -k \uff1a\u4ee5 k \u5b57\u8282\u7684\u5f62\u5f0f\u8868\u793a\u6587\u4ef6\u7684\u5927\u5c0f\u3002 -l \uff1a\u5217\u51fa\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 -n \uff1a\u7528\u6570\u5b57\u7684 UID,GID \u4ee3\u66ff\u540d\u79f0\u3002 -F : \u5728\u6bcf\u4e2a\u6587\u4ef6\u540d\u540e\u9762\u9644\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4ee5\u8bf4\u660e\u8be5\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u201c*\u201d\u8868\u793a\u53ef\u6267\u884c\u7684\u666e\u901a\u6587 \u4ef6\uff1b\u201c/\u201d\u8868\u793a\u76ee\u5f55\uff1b\u201c@\u201d\u8868\u793a\u7b26\u53f7\u94fe\u63a5\uff1b\u201cl\u201d\u8868\u793a FIFOS\uff1b\u201c=\u201d\u8868\u793a\u5957\u63a5\u5b57\u3002 2.cd \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1acd [\u76ee\u5f55\u540d\u79f0] \u5e38\u7528\u9009\u9879\uff1a cd .. \u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55\u3002 cd ../.. \u5c06\u5f53\u524d\u76ee\u5f55\u5411\u4e0a\u79fb\u52a8\u4e24\u7ea7\u3002 cd - \u8fd4\u56de\u6700\u8fd1\u8bbf\u95ee\u76ee\u5f55\u3002 3.pwd \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1a pwd \u529f\u80fd\uff1a\u663e\u793a\u51fa\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\u3002 4.touch \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1atouch[\u9009\u9879] \u6587\u4ef6\u540d\u2026 \u529f\u80fd\uff1atouch \u547d\u4ee4\u53c2\u6570\u53ef\u4ee5\u66f4\u6539\u6587\u6863\u6216\u76ee\u5f55\u7684\u65e5\u671f\u65f6\u95f4\uff0c\u5305\u62ec\u5b58\u53d6\u65f6\u95f4\u548c\u66f4\u6539\u65f6\u95f4\uff0c\u6216\u8005\u65b0\u5efa\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u3002 \u5e38\u7528\u9009\u9879\uff1a -a \u4ec5\u6539\u53d8\u6307\u5b9a\u6587\u4ef6\u7684\u5b58\u53d6\u65f6\u95f4\u3002 -c \u6216\u2013no-creat \u4e0d\u521b\u5efa\u4efb\u4f55\u6587\u4ef6\u3002 -m \u4ec5\u6539\u53d8\u6307\u5b9a\u6587\u4ef6\u7684\u4fee\u6539\u65f6\u95f4\u3002 -d \u4f7f\u7528\u6307\u5b9a\u7684\u65e5\u671f\u65f6\u95f4\uff0c\u800c\u975e\u73b0\u5728\u7684\u65f6\u95f4\u3002 -f \u6b64\u53c2\u6570\u5c06\u5ffd\u7565\u4e0d\u4e88\u5904\u7406\uff0c\u4ec5\u8d1f\u8d23\u89e3\u51b3 BSD \u7248\u672c touch \u6307\u4ee4\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002 5.mkdir \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1amkdir [\u9009\u9879] dirname\u2026 \u529f\u80fd\uff1amkdir \u547d\u4ee4\u7528\u6765\u521b\u5efa\u76ee\u5f55\u3002 \u5e38\u7528\u9009\u9879\uff1a -p \u2013parents \u53ef\u4ee5\u662f\u4e00\u4e2a\u8def\u5f84\u540d\u79f0\u3002\u6b64\u65f6\u82e5\u8def\u7ade\u4e89\u7684\u67d0\u4e9b\u76ee\u5f55\u5c1a\u4e0d\u5b58\u5728\uff0c\u52a0\u4e0a\u6b64\u9009\u9879\u540e\uff0c\u7cfb\u7edf\u5c06\u81ea\u52a8\u5efa\u7acb\u597d\u90a3\u4e9b\u5c1a\u4e0d\u5b58\u5728\u7684\u76ee\u5f55\uff0c\u5373\u4e00\u6b21\u53ef\u4ee5\u5efa\u7acb\u591a\u4e2a\u76ee\u5f55\u3002 -m \u2013mode=MODE \u5c06\u65b0\u5efa\u76ee\u5f55\u7684\u5b58\u53d6\u6743\u9650\u8bbe\u7f6e\u4e3a MODE\uff0c\u5b58\u53d6\u6743\u9650\u7528\u7ed9\u5b9a\u7684\u516b\u8fdb\u5236\u6570\u5b57\u8868\u793a\u3002 6.rm \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1arm [\u9009\u9879] \u6587\u4ef6\u5217\u8868 \u529f\u80fd\uff1arm \u547d\u4ee4\u5220\u9664\u6587\u4ef6\u6216\u76ee\u5f55\u3002 \u5e38\u7528\u9009\u9879\uff1a -f \u2013force \u5ffd\u7565\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u4e0d\u7ed9\u51fa\u63d0\u793a\u4fe1\u606f\u3002 -r -R\uff0c\u2013recursive \u9012\u5f52\u5730\u5220\u9664\u6307\u5b9a\u76ee\u5f55\u53ca\u5176\u4e0b\u5c5e\u7684\u5404\u7ea7\u5b50\u76ee\u5f55\u548c\u76f8\u5e94\u7684\u6587\u4ef6\u3002 -i \u4ea4\u4e92\u5f0f\u5220\u9664\u6587\u4ef6\u3002 \u8bf4\u660e\uff1arm \u547d\u4ee4\u5220\u9664\u6307\u5b9a\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4e0d\u80fd\u5220\u9664\u76ee\u5f55\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u53ef\u5199\uff0c\u5219\u6807\u51c6\u8f93\u5165\u662f tty\uff08\u7ec8\u7aef\u8bbe\u5907\uff09\u3002\u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u9009\u9879-f \u6216\u8005\u2013force\uff0crm \u547d\u4ee4\u5220\u9664\u4e4b\u524d\u4f1a\u63d0\u793a\u7528\u6237\u662f\u5426\u5220\u9664\u8be5\u6587\u4ef6\uff1b\u5982\u679c\u7528\u6237\u6ca1\u6709\u56de\u7b54 y \u6216\u8005 Y\uff0c\u5219\u4e0d\u5220\u9664\u8be5\u6587\u4ef6\u3002 7.rmdir \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1armdir [\u9009\u9879] dirname \u529f\u80fd\uff1a\u5220\u9664\u76ee\u5f55\u3002 \u5e38\u7528\u9009\u9879\uff1a -p \u2013parents \u9012\u5f52\u5220\u9664\u76ee\u5f55 dirname\uff0c\u5f53\u5b50\u76ee\u5f55\u5220\u9664\u540e\u5176\u7236\u76ee\u5f55\u4e3a\u7a7a\u65f6\uff0c\u4e5f\u4e00\u540c\u88ab\u5220\u9664\u3002\u5982\u679c\u6709\u975e\u7a7a\u7684\u76ee\u5f55\uff0c\u5219\u8be5\u76ee\u5f55\u4fdd\u7559\u4e0b\u6765\u3002 8.man \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1aman [\u9009\u9879] \u547d\u4ee4 \u529f\u80fd\uff1aman \u547d\u4ee4\u683c\u5f0f\u5316\u5e76\u663e\u793a\u67d0\u4e00\u547d\u4ee4\u7684\u8054\u673a\u5e2e\u52a9\u624b\u518c\u9875\u3002 \u5e38\u7528\u9009\u9879\uff1a -k \u6839\u636e\u5173\u952e\u5b57\u641c\u7d22\u8054\u673a\u5e2e\u52a9\u3002 num \u53ea\u5728\u7b2c num \u7ae0\u8282\u627e\u3002 -a \u5c06\u6240\u6709\u7ae0\u8282\u7684\u90fd\u663e\u793a\u51fa\u6765\u3002 \u8bf4\u660e\uff1aman \u624b\u518c\u5206\u4e3a 8 \u7ae0\uff1a \u4e00\u822c\u7528\u6237\u7684\u547d\u4ee4\uff1b \u7cfb\u7edf\u8c03\u7528\uff1b C \u8bed\u8a00\u51fd\u6570\u5e93\uff1b \u6709\u5173\u9a71\u52a8\u7a0b\u5e8f\u548c\u7cfb\u7edf\u8bbe\u5907\u7684\u89e3\u91ca\uff1b \u914d\u7f6e\u6587\u4ef6\u7684\u89e3\u91ca\uff1b \u7a0b\u5e8f\u7684\u547d\u4ee4\uff1b \u6709\u7528\u7684\u6742\u7c7b\u547d\u4ee4\uff0c\u5982\u5b8f\u547d\u4ee4\u5305\u7b49\uff1b \u6709\u5173\u7cfb\u7edf\u7ef4\u62a4\u548c\u7ba1\u7406\u7684\u547d\u4ee4\u3002 9.cp \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1acp [\u9009\u9879] \u6e90\u6587\u4ef6\u6216\u76ee\u5f55 \u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55 \u529f\u80fd\uff1a\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55\u3002 \u5e38\u7528\u9009\u9879\uff1a -f \u2013force \u5f3a\u884c\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u4e0d\u8bba\u6587\u4ef6\u6216\u76ee\u5f55\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u3002 -d \u590d\u5236\u65f6\u4fdd\u7559\u6587\u4ef6\u94fe\u63a5\u3002 -i \u2013interactive \u8986\u76d6\u6587\u4ef6\u4e4b\u524d\u5148\u8be2\u95ee\u7528\u6237\u3002 -r \u9012\u5f52\u5904\u7406\uff0c\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u4e0e\u5b50\u76ee\u5f55\u4e00\u5e76\u5904\u7406\u3002\u82e5\u6e90\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u5f62\u6001\uff0c\u4e0d\u5c5e\u4e8e\u76ee\u5f55\u6216\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u4e00\u5f8b\u89c6\u4e3a\u666e\u901a\u6587\u4ef6\u5904\u7406\u3002 -R \u6216\u2013recursive \u9012\u5f52\u5904\u7406\uff0c\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u53ca\u5b50\u76ee\u5f55\u4e00\u5e76\u5904\u7406\u3002 10.mv \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1amv [\u9009\u9879] \u6e90\u6587\u4ef6\u6216\u76ee\u5f55 \u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55 \u529f\u80fd\uff1amv \u547d\u4ee4\u5bf9\u6587\u4ef6\u6216\u76ee\u5f55\u91cd\u65b0\u547d\u540d\uff0c\u6216\u8005\u5c06\u6587\u4ef6\u4ece\u4e00\u4e2a\u76ee\u5f55\u79fb\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55\u4e2d\u3002 \u5e38\u7528\u9009\u9879\uff1a -f force \u5f3a\u5236\u7684\u610f\u601d\uff0c\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u4e0d\u4f1a\u8be2\u95ee\u800c\u76f4\u63a5\u8986\u76d6\u3002 -i \u82e5\u76ee\u6807\u6587\u4ef6\uff08destination\uff09\u5df2\u7ecf\u5b58\u5728\u65f6\uff0c\u5c31\u4f1a\u8be2\u95ee\u662f\u5426\u8986\u76d6\u3002 11.cat/tac \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1acat [\u9009\u9879] [\u6587\u4ef6] \u529f\u80fd\uff1a\u67e5\u770b\u76ee\u6807\u6587\u4ef6\u7684\u5185\u5bb9\u3002 -b \u5bf9\u975e\u7a7a\u8f93\u51fa\u884c\u7f16\u53f7\u3002 -n \u5bf9\u8f93\u51fa\u7684\u6240\u6709\u884c\u7f16\u53f7\u3002 -s \u4e0d\u8f93\u51fa\u591a\u884c\u7a7a\u884c\u3002 12.more \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1amore [\u9009\u9879] [\u6587\u4ef6] \u529f\u80fd\uff1amore \u547d\u4ee4\u663e\u793a\u6587\u4ef6\u5185\u5bb9\uff0c\u6bcf\u6b21\u663e\u793a\u4e00\u5c4f\u3002 \u5e38\u7528\u9009\u9879\uff1a -n \u5bf9\u8f93\u51fa\u7684\u6240\u6709\u884c\u7f16\u53f7\u3002 -s \u5c06\u6587\u4ef6\u4e2d\u8fde\u7eed\u7684\u7a7a\u767d\u884c\u538b\u7f29\u6210\u4e00\u4e2a\u7a7a\u767d\u884c\u663e\u793a\u3002 -num \u8fd9\u4e2a\u9009\u9879\u5236\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4e00\u5c4f\u663e\u793a\u591a\u5c11\u884c\u3002 13.less \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1aless [\u53c2\u6570] \u6587\u4ef6 \u529f\u80fd\uff1aless \u547d\u4ee4\u4e0e more \u547d\u4ee4\u7c7b\u4f3c\uff0c\u4f46\u4e8c\u8005\u5b58\u5728\u5dee\u522b\uff0cless \u547d\u4ee4\u5141\u8bb8\u7528\u6237\u5411\u524d\u6216\u5411\u540e\u6d4f\u89c8\u6587\u4ef6\uff0c\u800c more \u547d\u4ee4\u53ea\u80fd\u5411\u524d\u6d4f\u89c8\u3002 \u5e38\u7528\u9009\u9879\uff1a -i \u5ffd\u7565\u641c\u7d22\u65f6\u7684\u5927\u5c0f\u5199\u3002 -N \u663e\u793a\u6bcf\u884c\u7684\u884c\u53f7\u3002 14.head \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1ahead [\u9009\u9879] [\u6587\u4ef6] \u529f\u80fd\uff1ahead \u547d\u4ee4\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u6307\u5b9a\u6587\u4ef6\u7684\u5f00\u5934\u82e5\u5e72\u884c\u3002 \u5e38\u7528\u9009\u9879\uff1a -c \u2013bytes=[-]N \u663e\u793a\u6bcf\u4e2a\u6587\u4ef6\u524d\u9762 N \u5b57\u8282\u3002 -n \u2013lines=[-]N \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u7684\u524d\u9762 N \u884c\u3002 15.tail \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1atail [\u9009\u9879] [\u6587\u4ef6] \u529f\u80fd\uff1a\u7528\u4e8e\u663e\u793a\u6307\u5b9a\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u4e0d\u6307\u5b9a\u6587\u4ef6\u65f6\uff0c\u4f5c\u4e3a\u8f93\u5165\u4fe1\u606f\u8fdb\u884c\u5904\u7406\u3002\u5e38\u7528\u67e5\u770b\u65e5\u5fd7\u6587\u4ef6\u3002 \u8bf4\u660e\uff1atail \u547d\u4ee4\u4ece\u6307\u5b9a\u70b9\u5f00\u59cb\u5c06\u6587\u4ef6\u5199\u5230\u6807\u6ce8\u8f93\u51fa\u3002\u4f7f\u7528 tail \u547d\u4ee4\u7684-f \u9009\u9879\u53ef\u4ee5\u65b9\u4fbf\u7684\u67e5\u9605\u6b63\u5728\u6539\u53d8\u7684\u65e5\u5fd7\u6587\u4ef6\uff0ctail -f filename \u4f1a\u628a filename \u91cc\u6700\u5c3e\u90e8\u7684\u5185\u5bb9\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\uff0c\u5e76\u4e14\u4e0d\u65ad\u5237\u65b0\uff0c\u4f7f\u4f60\u770b\u5230\u6700\u65b0\u7684\u6587\u4ef6\u5185\u5bb9\u3002 \u5e38\u7528\u9009\u9879\uff1a -f \u5faa\u73af\u8bfb\u53d6\u3002 -n <\u884c\u6570> \u663e\u793a\u884c\u6570\u3002 16.\u65f6\u95f4\u76f8\u5173\u7684\u547d\u4ee4 date \u663e\u793a date \u6307\u5b9a\u683c\u5f0f\u663e\u793a\u65f6\u95f4\uff1adate+%Y\uff1a%m\uff1a%d date \u7528\u6cd5\uff1adate\uff1adate[OPTION]\u2026 [+FORMAT] %H \u5c0f\u65f6\uff0800..23\uff09 %M \u5206\u949f\uff0800..59\uff09 %S \u79d2\uff0800..61\uff09 %X \u76f8\u5f53\u4e8e%H\uff1a%M\uff1a%S %d \u65e5\uff0801..31\uff09 %m \u6708\u4efd\uff0801..12\uff09 %Y \u5b8c\u6574\u5e74\u4efd\uff080000..9999\uff09 %F \u76f8\u5f53\u4e8e%Y-%m-%d \u65f6\u95f4\u6233 \u65f6\u95f4->\u65f6\u95f4\u6233\uff1adate+%s \u65f6\u95f4\u6233->\u65f6\u95f4\uff1aUnix \u65f6\u95f4\u6233\u662f\u4ece 1970 \u5e74 1 \u6708 1 \u65e5\u5f00\u59cb\u6240\u7ecf\u8fc7\u7684\u79d2\u6570\uff0c\u4e0d\u8003\u8651\u95f0\u79d2\u3002 17.cal \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1acal [\u53c2\u6570] [\u6708\u4efd] [\u5e74\u4efd] \u529f\u80fd\uff1a\u7528\u4e8e\u67e5\u8be2\u65e5\u5386\u7b49\u65f6\u95f4\u4fe1\u606f\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5219\u8868\u793a\u5e74\u4efd\uff081-9999\uff09\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u5219\u8868\u793a\u6708\u4efd\u548c\u5e74\u4efd\u3002 \u5e38\u7528\u9009\u9879\uff1a -3 \u663e\u793a\u7cfb\u7edf\u524d\u4e00\u4e2a\u6708\uff0c\u5f53\u524d\u6708\uff0c\u4e0b\u4e00\u4e2a\u6708\u7684\u6708\u5386\u3002 -j \u663e\u793a\u5728\u5f53\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929\uff08\u4e00\u5e74\u65e5\u671f\u6309\u5929\u7b97\uff0c\u4ece 1 \u6708 1 \u65e5\u7b97\u8d77\uff0c\u9ed8\u8ba4\u663e\u793a\u5f53\u524d\u6708\u5728\u4e00\u5e74\u4e2d\u7684\u5929\u6570\uff09\u3002 -y \u663e\u793a\u5f53\u524d\u5e74\u4efd\u7684\u65e5\u5386\u3002 18.find \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1afind pathname -options \u529f\u80fd\uff1a\u7528\u4e8e\u5728\u6587\u4ef6\u6811\u79cd\u67e5\u627e\u6587\u4ef6\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u5904\u7406\uff08\u53ef\u80fd\u8bbf\u95ee\u78c1\u76d8\uff09\u3002 \u5e38\u7528\u9009\u9879\uff1a -name \u6309\u7167\u6587\u4ef6\u540d\u67e5\u627e\u6587\u4ef6\u3002 19.grep \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1agrep [\u9009\u9879] \u641c\u5bfb\u5b57\u7b26\u4e32\u6587\u4ef6 \u529f\u80fd\uff1a\u5728\u6587\u4ef6\u4e2d\u641c\u7d22\u5b57\u7b26\u4e32\uff0c\u5c06\u627e\u5230\u7684\u884c\u6253\u5370\u51fa\u6765\u3002 \u5e38\u7528\u9009\u9879\uff1a -i \u5ffd\u7565\u5927\u5c0f\u5199\u7684\u4e0d\u540c\uff0c\u6240\u4ee5\u5927\u5c0f\u5199\u89c6\u4e3a\u76f8\u540c\u3002 -n \u987a\u4fbf\u8f93\u51fa\u884c\u53f7\u3002 -v \u53cd\u5411\u9009\u62e9\uff0c\u4ea6\u5373\u663e\u51fa\u6ca1\u6709\u2018\u641c\u5bfb\u5b57\u7b26\u4e32\u2019\u5185\u5bb9\u7684\u90a3\u4e00\u884c\u3002 20.zip/unzip \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1azip \u538b\u7f29\u6587\u4ef6.zip \u76ee\u5f55\u6216\u6587\u4ef6 \u529f\u80fd\uff1a\u5c06\u76ee\u5f55\u6216\u6587\u4ef6\u538b\u7f29\u6210 zip \u683c\u5f0f\u3002 \u5e38\u7528\u9009\u9879\uff1a -r \u9012\u5f52\u5904\u7406\uff0c\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u4e00\u5e76\u5904\u7406\u3002 21.tar \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1atar [-cxtzjvf] \u6587\u4ef6\u4e0e\u76ee\u5f55\u2026 \u53c2\u6570 \u529f\u80fd\uff1a\u6253\u5305/\u89e3\u5305\uff0c\u4e0d\u6253\u5f00\u5b83\uff0c\u76f4\u63a5\u770b\u5185\u5bb9\u3002 -c \u5efa\u7acb\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\u7684\u53c2\u6570\u6307\u4ee4\uff08create \u7684\u610f\u601d\uff09\u3002 -x \u89e3\u5f00\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\u7684\u53c2\u6570\u6307\u4ee4\u3002 -t \u67e5\u770b tarfile \u91cc\u9762\u7684\u6587\u4ef6\u3002 -z \u662f\u5426\u540c\u65f6\u5177\u6709 gzip \u7684\u5c5e\u6027\uff1f\u4ea6\u5373\u662f\u5426\u9700\u8981\u7528 gzip \u538b\u7f29\uff1f -j \u662f\u5426\u540c\u65f6\u5177\u6709 bzip \u7684\u5c5e\u6027\uff1f\u4ea6\u5373\u662f\u5426\u9700\u8981\u7528 bzip \u538b\u7f29\uff1f -v \u538b\u7f29\u7684\u8fc7\u7a0b\u4e2d\u663e\u793a\u6587\u4ef6\u3002\u8fd9\u4e2a\u5e38\u7528\uff0c\u4e0d\u5efa\u8bae\u7528\u5728\u80cc\u666f\u6267\u884c\u8fc7\u7a0b\u3002 -f \u4f7f\u7528\u6863\u540d\uff0c\u8bf7\u7559\u610f\uff0c\u5728 f \u4e4b\u540e\u8981\u7acb\u5373\u63a5\u6863\u540d\uff0c\u4e0d\u8981\u518d\u52a0\u53c2\u6570\u3002 -C \u89e3\u538b\u5230\u6307\u5b9a\u76ee\u5f55\u3002 22.bc \u547d\u4ee4 \u00b6 bc \u547d\u4ee4\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8fdb\u884c\u6d6e\u70b9\u8fd0\u7b97\u3002 23.uname -r \u547d\u4ee4 \u00b6 \u683c\u5f0f\uff1auname [\u9009\u9879] \u529f\u80fd\uff1auname \u7528\u6765\u83b7\u53d6\u7535\u8111\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u76f8\u5173\u4fe1\u606f\u3002 \u5e38\u7528\u9009\u9879\uff1a -a \u6216-all \u8be6\u7ec6\u8f93\u51fa\u6240\u6709\u4fe1\u606f\uff0c\u4f9d\u6b21\u4e3a\u5185\u6838\u540d\u79f0\uff0c\u4e3b\u673a\u540d\uff0c\u5185\u6838\u7248\u672c\u53f7\uff0c\u5185\u6838\u7248\u672c\uff0c\u786c\u4ef6\u540d\uff0c\u5904\u7406\u5668\u7c7b\u578b\uff0c\u786c\u4ef6\u5e73\u53f0\u7c7b\u578b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u540d\u79f0\u3002 \u4e09\u3001Linux \u7cfb\u7edf\u6839\u76ee\u5f55\u4e0b\u5404\u4e2a\u76ee\u5f55\u7684\u4f5c\u7528 \u00b6 /bin \u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u547d\u4ee4\u3002\u8be5\u76ee\u5f55\u4e0b\u5b58\u653e\u7740\u666e\u901a\u7528\u6237\u7684\u547d\u4ee4 /dev \u7cfb\u7edf\u7684\u8bbe\u5907\u6587\u4ef6\uff0c\u5373\u8bbe\u5907\u7684\u9a71\u52a8\u7a0b\u5e8f /home \u5b58\u653e\u7528\u6237\u6587\u4ef6\u7684\u4e3b\u76ee\u5f55\uff0c\u7528\u6237\u6570\u636e /lib \u5b58\u653e\u7740\u548c\u7cfb\u7edf\u8fd0\u884c\u76f8\u5173\u7684\u5e93\u6587\u4ef6 /mnt \u5b58\u653e\u4e34\u65f6\u7684\u6620\u5c04\u6587\u4ef6\uff0c\u901a\u5e38\u662f\u4e00\u4e9b\u7528\u6765\u5b89\u88c5\u5176\u4ed6\u8bbe\u5907\u7684\u5b50\u76ee\u5f55 /boot \u5b58\u653e\u542f\u52a8 linux \u7684\u6838\u5fc3\u6587\u4ef6 /media \u5b58\u653e\u7740\u53ef\u79fb\u9664\u7684\u8bbe\u5907\uff0c\u6bd4\u5982\u8f6f\u76d8\uff0c\u5149\u76d8 /misc \u50a8\u5b58\u7740\u4e00\u4e9b\u7279\u6b8a\u7684\u5b57\u7b26\u7684\u5b9a\u4e49 /net \u5b58\u653e\u7740\u548c\u7f51\u7edc\u76f8\u5173\u7684\u4e00\u4e9b\u6587\u4ef6 /proc \u5b58\u653e\u7740\u7528\u6237\u4e0e\u5185\u6838\u7684\u4ea4\u4e92\u4fe1\u606f /sbin \u7cfb\u7edf\u7684\u7ba1\u7406\u547d\u4ee4\uff0c\u8fd9\u91cc\u5b58\u653e\u7684\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u7a0b\u5e8f /srv \u7cfb\u7edf\u542f\u52a8\u670d\u52a1\u65f6\u53ef\u4ee5\u8bbf\u95ee\u7684\u6570\u636e\u5e93\u76ee\u5f55 /tmp \u4e34\u65f6\u6587\u4ef6\uff0c\u91cd\u542f\u540e\u81ea\u52a8\u6e05\u7a7a /var \u5b58\u653e\u7cfb\u7edf\u4ea7\u751f\u7684\u7ecf\u5e38\u53d8\u5316\u7684\u6587\u4ef6 /etc \u7cfb\u7edf\u6240\u6709\u7684\u914d\u7f6e\u6587\u4ef6\u90fd\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e2d /opt (option : \u81ea\u7531\u9009\u62e9)\u4e3b\u8981\u7ed9\u6e90\u7801\u5b89\u88c5\u8f6f\u4ef6\u65f6\u9009\u62e9\u7684\u5b89\u88c5\u76ee\u5f55\u4f4d\u7f6e /root \u8d85\u7ea7\u7528\u6237\u7684\u76ee\u5f55 /selinux \u4e3b\u8981\u7528\u6765\u52a0\u56fa\u64cd\u4f5c\u7cfb\u7edf\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7684\u5b89\u5168\u6027 /sys \u7ba1\u7406\u8bbe\u5907\u6587\u4ef6 /usr \u6700\u5927\u7684\u76ee\u5f55\uff0c\u5b58\u653e\u7740\u5e94\u7528\u7a0b\u5e8f\u548c\u6587\u4ef6 /lost-found \u8fd9\u4e2a\u76ee\u5f55\u5e73\u65f6\u662f\u7a7a\u7684\uff0c\u5f53\u7cfb\u7edf\u975e\u6b63\u5e38\u5173\u673a\u800c\u7559\u4e0b\u7684\u201c\u65e0\u5bb6\u53ef\u5f52\u201d\u7684\u6587\u4ef6\u4fbf\u4f1a\u50a8\u5b58\u5728\u8fd9\u91cc","title":"linux-basic"},{"location":"01-basic/linux-basic/#linux","text":"","title":"linux \u5e38\u7528\u6982\u5ff5"},{"location":"01-basic/linux-basic/#linux_1","text":"","title":"\u4e00\u3001Linux \u6743\u9650"},{"location":"01-basic/linux-basic/#linux_2","text":"Linux \u4e0b\u6709\u4e24\u79cd\u7528\u6237\uff1a\u666e\u901a\u7528\u6237\u548c\u8d85\u7ea7\u7528\u6237\u3002 \u666e\u901a\u7528\u6237\uff1a\u5728 linux \u4e0b\u505a\u6709\u9650\u7684\u4e8b\u60c5\uff1b\u63d0\u793a\u7b26\u662f\u201c$\u201d \u8d85\u7ea7\u7528\u6237\uff1a\u53ef\u4ee5\u5728 linux \u7cfb\u7edf\u4e0b\u505a\u4efb\u4f55\u4e8b\u60c5\uff0c\u4e0d\u53d7\u9650\u5236\uff0c\u63d0\u793a\u7b26\u662f\u201c#\u201d\u3002 \u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u5207\u6362\u7528\u6237\uff1asu [\u7528\u6237\u540d] su \u2013 substitute user identity \u66f4\u6362\u7528\u6237\u8eab\u4efd \u89e3\u91ca\uff1aThe su utility requests appropriate user credentials via PAM and switches to that user ID (the default user is the superuser). A shell is then executed. su\u5b9e\u7528\u7a0b\u5e8f\u901a\u8fc7PAM\u8bf7\u6c42\u9002\u5f53\u7684\u7528\u6237\u51ed\u636e\uff0c\u5e76\u5207\u6362\u5230\u8be5\u7528\u6237ID\uff08\u9ed8\u8ba4\u7528\u6237\u662f\u8d85\u7ea7\u7528\u6237\uff09\u3002\u7136\u540e\u6267\u884c\u4e00\u4e2ashell\u3002","title":"Linux \u7528\u6237\u7ba1\u7406"},{"location":"01-basic/linux-basic/#linux_3","text":"1.\u6587\u4ef6\u8bbf\u95ee\u8005\u7684\u5206\u7c7b\uff08\u4eba\uff09 \u6587\u4ef6\u548c\u6587\u4ef6\u76ee\u5f55\u7684\u6240\u6709\u8005\uff1au\u2014User \u6587\u4ef6\u548c\u6587\u4ef6\u76ee\u5f55\u7684\u6240\u6709\u8005\u6240\u5728\u7684\u7ec4\u7684\u7528\u6237\uff1ag\u2014Group \u5176\u4ed6\u7528\u6237\uff1ao\u2014Others 2.\u6587\u4ef6\u8bbf\u95ee\u6743\u9650\u7684\u79cd\u7c7b \u57fa\u672c\u6743\u9650\uff1a read \u5bf9\u6587\u4ef6\u800c\u8a00\uff0c\u5177\u6709\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u7684\u6743\u9650\uff1b\u5bf9\u76ee\u5f55\u6765\u8bf4\uff0c\u5177\u6709\u6d4f\u89c8\u76ee\u5f55\u4fe1\u606f\u7684\u6743\u9650\u3002 write \u5bf9\u6587\u4ef6\u800c\u8a00\uff0c\u5177\u6709\u4fee\u6539\u6587\u4ef6\u5185\u5bb9\u7684\u6743\u9650\uff1b\u5bf9\u76ee\u5f55\u6765\u8bf4\uff0c\u5177\u6709\u5220\u9664\u79fb\u52a8\u76ee\u5f55\u5185\u6587\u4ef6\u7684\u6743\u9650\u3002 execute \u5bf9\u6587\u4ef6\u800c\u8a00\uff0c\u5177\u6709\u6267\u884c\u6587\u4ef6\u7684\u6743\u9650\uff1b\u5bf9\u76ee\u5f55\u6765\u8bf4\uff0c\u5177\u6709\u8fdb\u5165\u76ee\u5f55\u7684\u6743\u9650\u3002 - \u8868\u793a\u4e0d\u5177\u6709\u8be5\u6743\u9650\u3002 3.\u6587\u4ef6\u6743\u9650\u503c\u5f97\u8868\u793a\u65b9\u6cd5 r\u2013 \u53ea\u8bfb -w- \u4ec5\u53ef\u5199 \u2013x \u4ec5\u53ef\u6267\u884c rw- \u53ef\u8bfb\u53ef\u5199 -wx \u53ef\u5199\u53ef\u6267\u884c r-x \u53ef\u8bfb\u53ef\u6267\u884c rwx \u53ef\u8bfb\u53ef\u5199\u53ef\u6267\u884c \u2014 \u65e0\u6743\u9650","title":"Linux \u6743\u9650\u7ba1\u7406"},{"location":"01-basic/linux-basic/#linux_4","text":"","title":"\u4e8c\u3001Linux \u4e0b\u57fa\u672c\u547d\u4ee4"},{"location":"01-basic/linux-basic/#1ls","text":"\u683c\u5f0f\uff1a ls [\u9009\u9879] [\u76ee\u5f55\u6216\u6587\u4ef6] \u529f\u80fd\uff1a\u5bf9\u4e8e\u76ee\u5f55\uff0c\u5217\u51fa\u8be5\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u5b50\u76ee\u5f55\u4e0e\u6587\u4ef6\uff1b\u5bf9\u4e8e\u6587\u4ef6\uff0c\u5217\u51fa\u6587\u4ef6\u540d\u4ee5\u53ca\u5176\u4ed6\u4fe1\u606f\u3002 \u5e38\u7528\u9009\u9879\uff1a -a \uff1a\u5217\u51fa\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u5305\u62ec\u4ee5 . \u5f00\u5934\u7684\u9690\u542b\u6587\u4ef6\u3002 -d \uff1a\u5c06\u76ee\u5f55\u50cf\u6587\u4ef6\u4e00\u6837\u663e\u793a\uff0c\u800c\u4e0d\u662f\u663e\u793a\u5176\u4ed6\u6587\u4ef6\u3002 -i \uff1a\u8f93\u51fa\u6587\u4ef6\u7684 i \u8282\u70b9\u7684\u7d22\u5f15\u4fe1\u606f\u3002 -k \uff1a\u4ee5 k \u5b57\u8282\u7684\u5f62\u5f0f\u8868\u793a\u6587\u4ef6\u7684\u5927\u5c0f\u3002 -l \uff1a\u5217\u51fa\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f\u3002 -n \uff1a\u7528\u6570\u5b57\u7684 UID,GID \u4ee3\u66ff\u540d\u79f0\u3002 -F : \u5728\u6bcf\u4e2a\u6587\u4ef6\u540d\u540e\u9762\u9644\u4e0a\u4e00\u4e2a\u5b57\u7b26\u4ee5\u8bf4\u660e\u8be5\u6587\u4ef6\u7684\u7c7b\u578b\uff0c\u201c*\u201d\u8868\u793a\u53ef\u6267\u884c\u7684\u666e\u901a\u6587 \u4ef6\uff1b\u201c/\u201d\u8868\u793a\u76ee\u5f55\uff1b\u201c@\u201d\u8868\u793a\u7b26\u53f7\u94fe\u63a5\uff1b\u201cl\u201d\u8868\u793a FIFOS\uff1b\u201c=\u201d\u8868\u793a\u5957\u63a5\u5b57\u3002","title":"1.ls \u547d\u4ee4\uff1a"},{"location":"01-basic/linux-basic/#2cd","text":"\u683c\u5f0f\uff1acd [\u76ee\u5f55\u540d\u79f0] \u5e38\u7528\u9009\u9879\uff1a cd .. \u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55\u3002 cd ../.. \u5c06\u5f53\u524d\u76ee\u5f55\u5411\u4e0a\u79fb\u52a8\u4e24\u7ea7\u3002 cd - \u8fd4\u56de\u6700\u8fd1\u8bbf\u95ee\u76ee\u5f55\u3002","title":"2.cd \u547d\u4ee4"},{"location":"01-basic/linux-basic/#3pwd","text":"\u683c\u5f0f\uff1a pwd \u529f\u80fd\uff1a\u663e\u793a\u51fa\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\u3002","title":"3.pwd \u547d\u4ee4"},{"location":"01-basic/linux-basic/#4touch","text":"\u683c\u5f0f\uff1atouch[\u9009\u9879] \u6587\u4ef6\u540d\u2026 \u529f\u80fd\uff1atouch \u547d\u4ee4\u53c2\u6570\u53ef\u4ee5\u66f4\u6539\u6587\u6863\u6216\u76ee\u5f55\u7684\u65e5\u671f\u65f6\u95f4\uff0c\u5305\u62ec\u5b58\u53d6\u65f6\u95f4\u548c\u66f4\u6539\u65f6\u95f4\uff0c\u6216\u8005\u65b0\u5efa\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\u3002 \u5e38\u7528\u9009\u9879\uff1a -a \u4ec5\u6539\u53d8\u6307\u5b9a\u6587\u4ef6\u7684\u5b58\u53d6\u65f6\u95f4\u3002 -c \u6216\u2013no-creat \u4e0d\u521b\u5efa\u4efb\u4f55\u6587\u4ef6\u3002 -m \u4ec5\u6539\u53d8\u6307\u5b9a\u6587\u4ef6\u7684\u4fee\u6539\u65f6\u95f4\u3002 -d \u4f7f\u7528\u6307\u5b9a\u7684\u65e5\u671f\u65f6\u95f4\uff0c\u800c\u975e\u73b0\u5728\u7684\u65f6\u95f4\u3002 -f \u6b64\u53c2\u6570\u5c06\u5ffd\u7565\u4e0d\u4e88\u5904\u7406\uff0c\u4ec5\u8d1f\u8d23\u89e3\u51b3 BSD \u7248\u672c touch \u6307\u4ee4\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002","title":"4.touch \u547d\u4ee4"},{"location":"01-basic/linux-basic/#5mkdir","text":"\u683c\u5f0f\uff1amkdir [\u9009\u9879] dirname\u2026 \u529f\u80fd\uff1amkdir \u547d\u4ee4\u7528\u6765\u521b\u5efa\u76ee\u5f55\u3002 \u5e38\u7528\u9009\u9879\uff1a -p \u2013parents \u53ef\u4ee5\u662f\u4e00\u4e2a\u8def\u5f84\u540d\u79f0\u3002\u6b64\u65f6\u82e5\u8def\u7ade\u4e89\u7684\u67d0\u4e9b\u76ee\u5f55\u5c1a\u4e0d\u5b58\u5728\uff0c\u52a0\u4e0a\u6b64\u9009\u9879\u540e\uff0c\u7cfb\u7edf\u5c06\u81ea\u52a8\u5efa\u7acb\u597d\u90a3\u4e9b\u5c1a\u4e0d\u5b58\u5728\u7684\u76ee\u5f55\uff0c\u5373\u4e00\u6b21\u53ef\u4ee5\u5efa\u7acb\u591a\u4e2a\u76ee\u5f55\u3002 -m \u2013mode=MODE \u5c06\u65b0\u5efa\u76ee\u5f55\u7684\u5b58\u53d6\u6743\u9650\u8bbe\u7f6e\u4e3a MODE\uff0c\u5b58\u53d6\u6743\u9650\u7528\u7ed9\u5b9a\u7684\u516b\u8fdb\u5236\u6570\u5b57\u8868\u793a\u3002","title":"5.mkdir \u547d\u4ee4"},{"location":"01-basic/linux-basic/#6rm","text":"\u683c\u5f0f\uff1arm [\u9009\u9879] \u6587\u4ef6\u5217\u8868 \u529f\u80fd\uff1arm \u547d\u4ee4\u5220\u9664\u6587\u4ef6\u6216\u76ee\u5f55\u3002 \u5e38\u7528\u9009\u9879\uff1a -f \u2013force \u5ffd\u7565\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u4e0d\u7ed9\u51fa\u63d0\u793a\u4fe1\u606f\u3002 -r -R\uff0c\u2013recursive \u9012\u5f52\u5730\u5220\u9664\u6307\u5b9a\u76ee\u5f55\u53ca\u5176\u4e0b\u5c5e\u7684\u5404\u7ea7\u5b50\u76ee\u5f55\u548c\u76f8\u5e94\u7684\u6587\u4ef6\u3002 -i \u4ea4\u4e92\u5f0f\u5220\u9664\u6587\u4ef6\u3002 \u8bf4\u660e\uff1arm \u547d\u4ee4\u5220\u9664\u6307\u5b9a\u7684\u6587\u4ef6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b83\u4e0d\u80fd\u5220\u9664\u76ee\u5f55\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u53ef\u5199\uff0c\u5219\u6807\u51c6\u8f93\u5165\u662f tty\uff08\u7ec8\u7aef\u8bbe\u5907\uff09\u3002\u5982\u679c\u6ca1\u6709\u7ed9\u51fa\u9009\u9879-f \u6216\u8005\u2013force\uff0crm \u547d\u4ee4\u5220\u9664\u4e4b\u524d\u4f1a\u63d0\u793a\u7528\u6237\u662f\u5426\u5220\u9664\u8be5\u6587\u4ef6\uff1b\u5982\u679c\u7528\u6237\u6ca1\u6709\u56de\u7b54 y \u6216\u8005 Y\uff0c\u5219\u4e0d\u5220\u9664\u8be5\u6587\u4ef6\u3002","title":"6.rm \u547d\u4ee4"},{"location":"01-basic/linux-basic/#7rmdir","text":"\u683c\u5f0f\uff1armdir [\u9009\u9879] dirname \u529f\u80fd\uff1a\u5220\u9664\u76ee\u5f55\u3002 \u5e38\u7528\u9009\u9879\uff1a -p \u2013parents \u9012\u5f52\u5220\u9664\u76ee\u5f55 dirname\uff0c\u5f53\u5b50\u76ee\u5f55\u5220\u9664\u540e\u5176\u7236\u76ee\u5f55\u4e3a\u7a7a\u65f6\uff0c\u4e5f\u4e00\u540c\u88ab\u5220\u9664\u3002\u5982\u679c\u6709\u975e\u7a7a\u7684\u76ee\u5f55\uff0c\u5219\u8be5\u76ee\u5f55\u4fdd\u7559\u4e0b\u6765\u3002","title":"7.rmdir \u547d\u4ee4"},{"location":"01-basic/linux-basic/#8man","text":"\u683c\u5f0f\uff1aman [\u9009\u9879] \u547d\u4ee4 \u529f\u80fd\uff1aman \u547d\u4ee4\u683c\u5f0f\u5316\u5e76\u663e\u793a\u67d0\u4e00\u547d\u4ee4\u7684\u8054\u673a\u5e2e\u52a9\u624b\u518c\u9875\u3002 \u5e38\u7528\u9009\u9879\uff1a -k \u6839\u636e\u5173\u952e\u5b57\u641c\u7d22\u8054\u673a\u5e2e\u52a9\u3002 num \u53ea\u5728\u7b2c num \u7ae0\u8282\u627e\u3002 -a \u5c06\u6240\u6709\u7ae0\u8282\u7684\u90fd\u663e\u793a\u51fa\u6765\u3002 \u8bf4\u660e\uff1aman \u624b\u518c\u5206\u4e3a 8 \u7ae0\uff1a \u4e00\u822c\u7528\u6237\u7684\u547d\u4ee4\uff1b \u7cfb\u7edf\u8c03\u7528\uff1b C \u8bed\u8a00\u51fd\u6570\u5e93\uff1b \u6709\u5173\u9a71\u52a8\u7a0b\u5e8f\u548c\u7cfb\u7edf\u8bbe\u5907\u7684\u89e3\u91ca\uff1b \u914d\u7f6e\u6587\u4ef6\u7684\u89e3\u91ca\uff1b \u7a0b\u5e8f\u7684\u547d\u4ee4\uff1b \u6709\u7528\u7684\u6742\u7c7b\u547d\u4ee4\uff0c\u5982\u5b8f\u547d\u4ee4\u5305\u7b49\uff1b \u6709\u5173\u7cfb\u7edf\u7ef4\u62a4\u548c\u7ba1\u7406\u7684\u547d\u4ee4\u3002","title":"8.man \u547d\u4ee4"},{"location":"01-basic/linux-basic/#9cp","text":"\u683c\u5f0f\uff1acp [\u9009\u9879] \u6e90\u6587\u4ef6\u6216\u76ee\u5f55 \u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55 \u529f\u80fd\uff1a\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55\u3002 \u5e38\u7528\u9009\u9879\uff1a -f \u2013force \u5f3a\u884c\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u4e0d\u8bba\u6587\u4ef6\u6216\u76ee\u5f55\u662f\u5426\u5df2\u7ecf\u5b58\u5728\u3002 -d \u590d\u5236\u65f6\u4fdd\u7559\u6587\u4ef6\u94fe\u63a5\u3002 -i \u2013interactive \u8986\u76d6\u6587\u4ef6\u4e4b\u524d\u5148\u8be2\u95ee\u7528\u6237\u3002 -r \u9012\u5f52\u5904\u7406\uff0c\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u4e0e\u5b50\u76ee\u5f55\u4e00\u5e76\u5904\u7406\u3002\u82e5\u6e90\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u5f62\u6001\uff0c\u4e0d\u5c5e\u4e8e\u76ee\u5f55\u6216\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u4e00\u5f8b\u89c6\u4e3a\u666e\u901a\u6587\u4ef6\u5904\u7406\u3002 -R \u6216\u2013recursive \u9012\u5f52\u5904\u7406\uff0c\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u53ca\u5b50\u76ee\u5f55\u4e00\u5e76\u5904\u7406\u3002","title":"9.cp \u547d\u4ee4"},{"location":"01-basic/linux-basic/#10mv","text":"\u683c\u5f0f\uff1amv [\u9009\u9879] \u6e90\u6587\u4ef6\u6216\u76ee\u5f55 \u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55 \u529f\u80fd\uff1amv \u547d\u4ee4\u5bf9\u6587\u4ef6\u6216\u76ee\u5f55\u91cd\u65b0\u547d\u540d\uff0c\u6216\u8005\u5c06\u6587\u4ef6\u4ece\u4e00\u4e2a\u76ee\u5f55\u79fb\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55\u4e2d\u3002 \u5e38\u7528\u9009\u9879\uff1a -f force \u5f3a\u5236\u7684\u610f\u601d\uff0c\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u5b58\u5728\uff0c\u4e0d\u4f1a\u8be2\u95ee\u800c\u76f4\u63a5\u8986\u76d6\u3002 -i \u82e5\u76ee\u6807\u6587\u4ef6\uff08destination\uff09\u5df2\u7ecf\u5b58\u5728\u65f6\uff0c\u5c31\u4f1a\u8be2\u95ee\u662f\u5426\u8986\u76d6\u3002","title":"10.mv \u547d\u4ee4"},{"location":"01-basic/linux-basic/#11cattac","text":"\u683c\u5f0f\uff1acat [\u9009\u9879] [\u6587\u4ef6] \u529f\u80fd\uff1a\u67e5\u770b\u76ee\u6807\u6587\u4ef6\u7684\u5185\u5bb9\u3002 -b \u5bf9\u975e\u7a7a\u8f93\u51fa\u884c\u7f16\u53f7\u3002 -n \u5bf9\u8f93\u51fa\u7684\u6240\u6709\u884c\u7f16\u53f7\u3002 -s \u4e0d\u8f93\u51fa\u591a\u884c\u7a7a\u884c\u3002","title":"11.cat/tac \u547d\u4ee4"},{"location":"01-basic/linux-basic/#12more","text":"\u683c\u5f0f\uff1amore [\u9009\u9879] [\u6587\u4ef6] \u529f\u80fd\uff1amore \u547d\u4ee4\u663e\u793a\u6587\u4ef6\u5185\u5bb9\uff0c\u6bcf\u6b21\u663e\u793a\u4e00\u5c4f\u3002 \u5e38\u7528\u9009\u9879\uff1a -n \u5bf9\u8f93\u51fa\u7684\u6240\u6709\u884c\u7f16\u53f7\u3002 -s \u5c06\u6587\u4ef6\u4e2d\u8fde\u7eed\u7684\u7a7a\u767d\u884c\u538b\u7f29\u6210\u4e00\u4e2a\u7a7a\u767d\u884c\u663e\u793a\u3002 -num \u8fd9\u4e2a\u9009\u9879\u5236\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u4e00\u5c4f\u663e\u793a\u591a\u5c11\u884c\u3002","title":"12.more \u547d\u4ee4"},{"location":"01-basic/linux-basic/#13less","text":"\u683c\u5f0f\uff1aless [\u53c2\u6570] \u6587\u4ef6 \u529f\u80fd\uff1aless \u547d\u4ee4\u4e0e more \u547d\u4ee4\u7c7b\u4f3c\uff0c\u4f46\u4e8c\u8005\u5b58\u5728\u5dee\u522b\uff0cless \u547d\u4ee4\u5141\u8bb8\u7528\u6237\u5411\u524d\u6216\u5411\u540e\u6d4f\u89c8\u6587\u4ef6\uff0c\u800c more \u547d\u4ee4\u53ea\u80fd\u5411\u524d\u6d4f\u89c8\u3002 \u5e38\u7528\u9009\u9879\uff1a -i \u5ffd\u7565\u641c\u7d22\u65f6\u7684\u5927\u5c0f\u5199\u3002 -N \u663e\u793a\u6bcf\u884c\u7684\u884c\u53f7\u3002","title":"13.less \u547d\u4ee4"},{"location":"01-basic/linux-basic/#14head","text":"\u683c\u5f0f\uff1ahead [\u9009\u9879] [\u6587\u4ef6] \u529f\u80fd\uff1ahead \u547d\u4ee4\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u6307\u5b9a\u6587\u4ef6\u7684\u5f00\u5934\u82e5\u5e72\u884c\u3002 \u5e38\u7528\u9009\u9879\uff1a -c \u2013bytes=[-]N \u663e\u793a\u6bcf\u4e2a\u6587\u4ef6\u524d\u9762 N \u5b57\u8282\u3002 -n \u2013lines=[-]N \u663e\u793a\u6307\u5b9a\u6587\u4ef6\u7684\u524d\u9762 N \u884c\u3002","title":"14.head \u547d\u4ee4"},{"location":"01-basic/linux-basic/#15tail","text":"\u683c\u5f0f\uff1atail [\u9009\u9879] [\u6587\u4ef6] \u529f\u80fd\uff1a\u7528\u4e8e\u663e\u793a\u6307\u5b9a\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u4e0d\u6307\u5b9a\u6587\u4ef6\u65f6\uff0c\u4f5c\u4e3a\u8f93\u5165\u4fe1\u606f\u8fdb\u884c\u5904\u7406\u3002\u5e38\u7528\u67e5\u770b\u65e5\u5fd7\u6587\u4ef6\u3002 \u8bf4\u660e\uff1atail \u547d\u4ee4\u4ece\u6307\u5b9a\u70b9\u5f00\u59cb\u5c06\u6587\u4ef6\u5199\u5230\u6807\u6ce8\u8f93\u51fa\u3002\u4f7f\u7528 tail \u547d\u4ee4\u7684-f \u9009\u9879\u53ef\u4ee5\u65b9\u4fbf\u7684\u67e5\u9605\u6b63\u5728\u6539\u53d8\u7684\u65e5\u5fd7\u6587\u4ef6\uff0ctail -f filename \u4f1a\u628a filename \u91cc\u6700\u5c3e\u90e8\u7684\u5185\u5bb9\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\uff0c\u5e76\u4e14\u4e0d\u65ad\u5237\u65b0\uff0c\u4f7f\u4f60\u770b\u5230\u6700\u65b0\u7684\u6587\u4ef6\u5185\u5bb9\u3002 \u5e38\u7528\u9009\u9879\uff1a -f \u5faa\u73af\u8bfb\u53d6\u3002 -n <\u884c\u6570> \u663e\u793a\u884c\u6570\u3002 16.\u65f6\u95f4\u76f8\u5173\u7684\u547d\u4ee4 date \u663e\u793a date \u6307\u5b9a\u683c\u5f0f\u663e\u793a\u65f6\u95f4\uff1adate+%Y\uff1a%m\uff1a%d date \u7528\u6cd5\uff1adate\uff1adate[OPTION]\u2026 [+FORMAT] %H \u5c0f\u65f6\uff0800..23\uff09 %M \u5206\u949f\uff0800..59\uff09 %S \u79d2\uff0800..61\uff09 %X \u76f8\u5f53\u4e8e%H\uff1a%M\uff1a%S %d \u65e5\uff0801..31\uff09 %m \u6708\u4efd\uff0801..12\uff09 %Y \u5b8c\u6574\u5e74\u4efd\uff080000..9999\uff09 %F \u76f8\u5f53\u4e8e%Y-%m-%d \u65f6\u95f4\u6233 \u65f6\u95f4->\u65f6\u95f4\u6233\uff1adate+%s \u65f6\u95f4\u6233->\u65f6\u95f4\uff1aUnix \u65f6\u95f4\u6233\u662f\u4ece 1970 \u5e74 1 \u6708 1 \u65e5\u5f00\u59cb\u6240\u7ecf\u8fc7\u7684\u79d2\u6570\uff0c\u4e0d\u8003\u8651\u95f0\u79d2\u3002","title":"15.tail \u547d\u4ee4"},{"location":"01-basic/linux-basic/#17cal","text":"\u683c\u5f0f\uff1acal [\u53c2\u6570] [\u6708\u4efd] [\u5e74\u4efd] \u529f\u80fd\uff1a\u7528\u4e8e\u67e5\u8be2\u65e5\u5386\u7b49\u65f6\u95f4\u4fe1\u606f\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5219\u8868\u793a\u5e74\u4efd\uff081-9999\uff09\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u5219\u8868\u793a\u6708\u4efd\u548c\u5e74\u4efd\u3002 \u5e38\u7528\u9009\u9879\uff1a -3 \u663e\u793a\u7cfb\u7edf\u524d\u4e00\u4e2a\u6708\uff0c\u5f53\u524d\u6708\uff0c\u4e0b\u4e00\u4e2a\u6708\u7684\u6708\u5386\u3002 -j \u663e\u793a\u5728\u5f53\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929\uff08\u4e00\u5e74\u65e5\u671f\u6309\u5929\u7b97\uff0c\u4ece 1 \u6708 1 \u65e5\u7b97\u8d77\uff0c\u9ed8\u8ba4\u663e\u793a\u5f53\u524d\u6708\u5728\u4e00\u5e74\u4e2d\u7684\u5929\u6570\uff09\u3002 -y \u663e\u793a\u5f53\u524d\u5e74\u4efd\u7684\u65e5\u5386\u3002","title":"17.cal \u547d\u4ee4"},{"location":"01-basic/linux-basic/#18find","text":"\u683c\u5f0f\uff1afind pathname -options \u529f\u80fd\uff1a\u7528\u4e8e\u5728\u6587\u4ef6\u6811\u79cd\u67e5\u627e\u6587\u4ef6\uff0c\u5e76\u4f5c\u51fa\u76f8\u5e94\u7684\u5904\u7406\uff08\u53ef\u80fd\u8bbf\u95ee\u78c1\u76d8\uff09\u3002 \u5e38\u7528\u9009\u9879\uff1a -name \u6309\u7167\u6587\u4ef6\u540d\u67e5\u627e\u6587\u4ef6\u3002","title":"18.find \u547d\u4ee4"},{"location":"01-basic/linux-basic/#19grep","text":"\u683c\u5f0f\uff1agrep [\u9009\u9879] \u641c\u5bfb\u5b57\u7b26\u4e32\u6587\u4ef6 \u529f\u80fd\uff1a\u5728\u6587\u4ef6\u4e2d\u641c\u7d22\u5b57\u7b26\u4e32\uff0c\u5c06\u627e\u5230\u7684\u884c\u6253\u5370\u51fa\u6765\u3002 \u5e38\u7528\u9009\u9879\uff1a -i \u5ffd\u7565\u5927\u5c0f\u5199\u7684\u4e0d\u540c\uff0c\u6240\u4ee5\u5927\u5c0f\u5199\u89c6\u4e3a\u76f8\u540c\u3002 -n \u987a\u4fbf\u8f93\u51fa\u884c\u53f7\u3002 -v \u53cd\u5411\u9009\u62e9\uff0c\u4ea6\u5373\u663e\u51fa\u6ca1\u6709\u2018\u641c\u5bfb\u5b57\u7b26\u4e32\u2019\u5185\u5bb9\u7684\u90a3\u4e00\u884c\u3002","title":"19.grep \u547d\u4ee4"},{"location":"01-basic/linux-basic/#20zipunzip","text":"\u683c\u5f0f\uff1azip \u538b\u7f29\u6587\u4ef6.zip \u76ee\u5f55\u6216\u6587\u4ef6 \u529f\u80fd\uff1a\u5c06\u76ee\u5f55\u6216\u6587\u4ef6\u538b\u7f29\u6210 zip \u683c\u5f0f\u3002 \u5e38\u7528\u9009\u9879\uff1a -r \u9012\u5f52\u5904\u7406\uff0c\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u4e00\u5e76\u5904\u7406\u3002","title":"20.zip/unzip \u547d\u4ee4"},{"location":"01-basic/linux-basic/#21tar","text":"\u683c\u5f0f\uff1atar [-cxtzjvf] \u6587\u4ef6\u4e0e\u76ee\u5f55\u2026 \u53c2\u6570 \u529f\u80fd\uff1a\u6253\u5305/\u89e3\u5305\uff0c\u4e0d\u6253\u5f00\u5b83\uff0c\u76f4\u63a5\u770b\u5185\u5bb9\u3002 -c \u5efa\u7acb\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\u7684\u53c2\u6570\u6307\u4ee4\uff08create \u7684\u610f\u601d\uff09\u3002 -x \u89e3\u5f00\u4e00\u4e2a\u538b\u7f29\u6587\u4ef6\u7684\u53c2\u6570\u6307\u4ee4\u3002 -t \u67e5\u770b tarfile \u91cc\u9762\u7684\u6587\u4ef6\u3002 -z \u662f\u5426\u540c\u65f6\u5177\u6709 gzip \u7684\u5c5e\u6027\uff1f\u4ea6\u5373\u662f\u5426\u9700\u8981\u7528 gzip \u538b\u7f29\uff1f -j \u662f\u5426\u540c\u65f6\u5177\u6709 bzip \u7684\u5c5e\u6027\uff1f\u4ea6\u5373\u662f\u5426\u9700\u8981\u7528 bzip \u538b\u7f29\uff1f -v \u538b\u7f29\u7684\u8fc7\u7a0b\u4e2d\u663e\u793a\u6587\u4ef6\u3002\u8fd9\u4e2a\u5e38\u7528\uff0c\u4e0d\u5efa\u8bae\u7528\u5728\u80cc\u666f\u6267\u884c\u8fc7\u7a0b\u3002 -f \u4f7f\u7528\u6863\u540d\uff0c\u8bf7\u7559\u610f\uff0c\u5728 f \u4e4b\u540e\u8981\u7acb\u5373\u63a5\u6863\u540d\uff0c\u4e0d\u8981\u518d\u52a0\u53c2\u6570\u3002 -C \u89e3\u538b\u5230\u6307\u5b9a\u76ee\u5f55\u3002","title":"21.tar \u547d\u4ee4"},{"location":"01-basic/linux-basic/#22bc","text":"bc \u547d\u4ee4\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8fdb\u884c\u6d6e\u70b9\u8fd0\u7b97\u3002","title":"22.bc \u547d\u4ee4"},{"location":"01-basic/linux-basic/#23uname-r","text":"\u683c\u5f0f\uff1auname [\u9009\u9879] \u529f\u80fd\uff1auname \u7528\u6765\u83b7\u53d6\u7535\u8111\u548c\u64cd\u4f5c\u7cfb\u7edf\u7684\u76f8\u5173\u4fe1\u606f\u3002 \u5e38\u7528\u9009\u9879\uff1a -a \u6216-all \u8be6\u7ec6\u8f93\u51fa\u6240\u6709\u4fe1\u606f\uff0c\u4f9d\u6b21\u4e3a\u5185\u6838\u540d\u79f0\uff0c\u4e3b\u673a\u540d\uff0c\u5185\u6838\u7248\u672c\u53f7\uff0c\u5185\u6838\u7248\u672c\uff0c\u786c\u4ef6\u540d\uff0c\u5904\u7406\u5668\u7c7b\u578b\uff0c\u786c\u4ef6\u5e73\u53f0\u7c7b\u578b\uff0c\u64cd\u4f5c\u7cfb\u7edf\u540d\u79f0\u3002","title":"23.uname -r \u547d\u4ee4"},{"location":"01-basic/linux-basic/#linux_5","text":"/bin \u4e8c\u8fdb\u5236\u53ef\u6267\u884c\u547d\u4ee4\u3002\u8be5\u76ee\u5f55\u4e0b\u5b58\u653e\u7740\u666e\u901a\u7528\u6237\u7684\u547d\u4ee4 /dev \u7cfb\u7edf\u7684\u8bbe\u5907\u6587\u4ef6\uff0c\u5373\u8bbe\u5907\u7684\u9a71\u52a8\u7a0b\u5e8f /home \u5b58\u653e\u7528\u6237\u6587\u4ef6\u7684\u4e3b\u76ee\u5f55\uff0c\u7528\u6237\u6570\u636e /lib \u5b58\u653e\u7740\u548c\u7cfb\u7edf\u8fd0\u884c\u76f8\u5173\u7684\u5e93\u6587\u4ef6 /mnt \u5b58\u653e\u4e34\u65f6\u7684\u6620\u5c04\u6587\u4ef6\uff0c\u901a\u5e38\u662f\u4e00\u4e9b\u7528\u6765\u5b89\u88c5\u5176\u4ed6\u8bbe\u5907\u7684\u5b50\u76ee\u5f55 /boot \u5b58\u653e\u542f\u52a8 linux \u7684\u6838\u5fc3\u6587\u4ef6 /media \u5b58\u653e\u7740\u53ef\u79fb\u9664\u7684\u8bbe\u5907\uff0c\u6bd4\u5982\u8f6f\u76d8\uff0c\u5149\u76d8 /misc \u50a8\u5b58\u7740\u4e00\u4e9b\u7279\u6b8a\u7684\u5b57\u7b26\u7684\u5b9a\u4e49 /net \u5b58\u653e\u7740\u548c\u7f51\u7edc\u76f8\u5173\u7684\u4e00\u4e9b\u6587\u4ef6 /proc \u5b58\u653e\u7740\u7528\u6237\u4e0e\u5185\u6838\u7684\u4ea4\u4e92\u4fe1\u606f /sbin \u7cfb\u7edf\u7684\u7ba1\u7406\u547d\u4ee4\uff0c\u8fd9\u91cc\u5b58\u653e\u7684\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u7a0b\u5e8f /srv \u7cfb\u7edf\u542f\u52a8\u670d\u52a1\u65f6\u53ef\u4ee5\u8bbf\u95ee\u7684\u6570\u636e\u5e93\u76ee\u5f55 /tmp \u4e34\u65f6\u6587\u4ef6\uff0c\u91cd\u542f\u540e\u81ea\u52a8\u6e05\u7a7a /var \u5b58\u653e\u7cfb\u7edf\u4ea7\u751f\u7684\u7ecf\u5e38\u53d8\u5316\u7684\u6587\u4ef6 /etc \u7cfb\u7edf\u6240\u6709\u7684\u914d\u7f6e\u6587\u4ef6\u90fd\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e2d /opt (option : \u81ea\u7531\u9009\u62e9)\u4e3b\u8981\u7ed9\u6e90\u7801\u5b89\u88c5\u8f6f\u4ef6\u65f6\u9009\u62e9\u7684\u5b89\u88c5\u76ee\u5f55\u4f4d\u7f6e /root \u8d85\u7ea7\u7528\u6237\u7684\u76ee\u5f55 /selinux \u4e3b\u8981\u7528\u6765\u52a0\u56fa\u64cd\u4f5c\u7cfb\u7edf\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7684\u5b89\u5168\u6027 /sys \u7ba1\u7406\u8bbe\u5907\u6587\u4ef6 /usr \u6700\u5927\u7684\u76ee\u5f55\uff0c\u5b58\u653e\u7740\u5e94\u7528\u7a0b\u5e8f\u548c\u6587\u4ef6 /lost-found \u8fd9\u4e2a\u76ee\u5f55\u5e73\u65f6\u662f\u7a7a\u7684\uff0c\u5f53\u7cfb\u7edf\u975e\u6b63\u5e38\u5173\u673a\u800c\u7559\u4e0b\u7684\u201c\u65e0\u5bb6\u53ef\u5f52\u201d\u7684\u6587\u4ef6\u4fbf\u4f1a\u50a8\u5b58\u5728\u8fd9\u91cc","title":"\u4e09\u3001Linux \u7cfb\u7edf\u6839\u76ee\u5f55\u4e0b\u5404\u4e2a\u76ee\u5f55\u7684\u4f5c\u7528"},{"location":"02-database/00-readme/","text":"\u6570\u636e\u5e93\u5b66\u4e60 \u00b6 \u4f5c\u4e3a\u524d\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08\uff0c\u4e0d\u662f\u6210\u4e3a\u4e13\u4e1a\u7684DBA\uff0c\u65e5\u5e38\u63a5\u89e6\u6570\u636e\u5e93\u4e0d\u591a\uff0c\u6240\u4ee5\u5b66\u4e60\u6570\u636e\u5e93\u7684\u76ee\u7684\u5982\u4e0b \u76ee\u7684 \u5b66\u4e60\u6570\u636e\u5e93\u7684\u57fa\u672c\u539f\u7406\u548c\u601d\u60f3\uff0c\u589e\u5220\u6539\u67e5\uff0c \u548c\u540e\u7aef\u540c\u4e8b\u4ea4\u6d41\u65b9\u4fbf \u3002 \u5982\u679c\u540e\u7aef\u62a5\u9519\uff08\u6570\u636e\u5e93\u7684\u62a5\u9519\uff09\uff0c\u53ef\u4ee5\u770b\u61c2\u624b\u5199\u7b80\u5355\u7684SQL\u8bed\u53e5\uff0c \u81ea\u5df1\u53ef\u4ee5\u5904\u7406\u7b80\u5355\u95ee\u9898 \uff1b \u8fdb\u9636\uff1a\u6709\u52a9\u4e8e\u5b66\u4e60**\u6d4f\u89c8\u5668\u5185\u90e8\u7684\u6570\u636e\u5e93**\uff0c \u6709\u52a9\u4e8e\u524d\u7aef\u5904\u7406\u590d\u6742\u6570\u636e \u76ee\u6807 \u5b66\u4e60\u57fa\u672c\u539f\u7406\uff08MYSQL\uff09 \u53ef\u4ee5\u4f7f\u7528SQL\u8bed\u8a00\u8fdb\u884c\u7b80\u5355\u6570\u636e\u64cd\u4f5c\uff08show tables;\uff09 \u53ef\u4ee5\u770b\u61c2\u9879\u76ee\u4e2d\u7684SQL\u8bed\u53e5","title":"00-readme"},{"location":"02-database/00-readme/#_1","text":"\u4f5c\u4e3a\u524d\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08\uff0c\u4e0d\u662f\u6210\u4e3a\u4e13\u4e1a\u7684DBA\uff0c\u65e5\u5e38\u63a5\u89e6\u6570\u636e\u5e93\u4e0d\u591a\uff0c\u6240\u4ee5\u5b66\u4e60\u6570\u636e\u5e93\u7684\u76ee\u7684\u5982\u4e0b \u76ee\u7684 \u5b66\u4e60\u6570\u636e\u5e93\u7684\u57fa\u672c\u539f\u7406\u548c\u601d\u60f3\uff0c\u589e\u5220\u6539\u67e5\uff0c \u548c\u540e\u7aef\u540c\u4e8b\u4ea4\u6d41\u65b9\u4fbf \u3002 \u5982\u679c\u540e\u7aef\u62a5\u9519\uff08\u6570\u636e\u5e93\u7684\u62a5\u9519\uff09\uff0c\u53ef\u4ee5\u770b\u61c2\u624b\u5199\u7b80\u5355\u7684SQL\u8bed\u53e5\uff0c \u81ea\u5df1\u53ef\u4ee5\u5904\u7406\u7b80\u5355\u95ee\u9898 \uff1b \u8fdb\u9636\uff1a\u6709\u52a9\u4e8e\u5b66\u4e60**\u6d4f\u89c8\u5668\u5185\u90e8\u7684\u6570\u636e\u5e93**\uff0c \u6709\u52a9\u4e8e\u524d\u7aef\u5904\u7406\u590d\u6742\u6570\u636e \u76ee\u6807 \u5b66\u4e60\u57fa\u672c\u539f\u7406\uff08MYSQL\uff09 \u53ef\u4ee5\u4f7f\u7528SQL\u8bed\u8a00\u8fdb\u884c\u7b80\u5355\u6570\u636e\u64cd\u4f5c\uff08show tables;\uff09 \u53ef\u4ee5\u770b\u61c2\u9879\u76ee\u4e2d\u7684SQL\u8bed\u53e5","title":"\u6570\u636e\u5e93\u5b66\u4e60"},{"location":"02-database/Mac%20pip%20install%20mysql-python%20unsuccessful/","text":"Mac pip install mysql-python \u00b6 Mac pip install mysql-python unsuccessfulI nstalled MySQL and Workbench from website. I have a django project whose requirements.txt: Django==1.11.12 djangorestframework==3.8.2 django-cors-headers==2.2.0 drfdocs==0.0.11 mysql-python==1.2.5 django-rest-auth==0.9.3 django-allauth==0.35.0 nltk==3.2.5 django-extensions==2.0.7 pyparsing==2.2.0 pydot==1.2.4 When I run pip install -r requirements.txt I got an error mysql_config not found . To solve this I ran PATH=$PATH:/usr/local/mysql/bin It now throws _mysql.c:44:10: fatal error: 'my_config.h' file not found #include \"my_config.h\" ^~~~~~~~~~~~~ 1 error generated. error: command 'cc' failed with exit status 1 ---------------------------------------- Command \"\"/Users/nitish/gitProjects/Vision Backlog/vb_env/bin/python\" -u -c \"import setuptools, tokenize;__file__='/private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-M4ue9E/mysql-python/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-record-7OCzf1/install-record.txt --single-version-externally-managed --compile --install-headers \"/Users/nitish/gitProjects/Vision Backlog/vb_env/include/site/python2.7/mysql-python\"\" failed with error code 1 in /private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-M4ue9E/mysql-python/ Why is this happening? UPDATE: following bellow solution threw: Collecting MySQL-python Using cached https://files.pythonhosted.org/packages/a5/e9/51b544da85a36a68debe7a7091f068d802fc515a3a202652828c73453cad/MySQL-python-1.2.5.zip Complete output from command python setup.py egg_info: Traceback (most recent call last): File \"<string>\", line 1, in <module> File \"/private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-X6b4rU/MySQL-python/setup.py\", line 17, in <module> metadata, options = get_config() File \"setup_posix.py\", line 53, in get_config libraries = [ dequote(i[2:]) for i in libs if i.startswith(compiler_flag(\"l\")) ] File \"setup_posix.py\", line 8, in dequote if s[0] in \"\\\"'\" and s[0] == s[-1]: IndexError: string index out of range \u7b2c\u4e00\u79cd Please, try: CFLAGS=-Qunused-arguments CPPFLAGS=-Qunused-arguments pip install -r requirements.txt If it does not work: First install mysql-connector-c brew install mysql-connector-c pip install MySQL-python If you are using Windows: https://dev.mysql.com/downloads/connector/c/ You can also check what happend when you try install it with pip3. UPDATE: If you have Linux: Please open the /usr/local/bin/mysql_config . And then: #Create options Libs = \"-L $ pkglibdir \" Libs = \" $ libs -l\" replace with: #Create options Libs = \"- L $ pkglibdir\" Libs = \"$ libs -lmysqlclient -lssl -lcrypto\" Save it and reinstall mysql-python . pip uninstall mysql-python pip install mysql-python For Mac: LDFLAGS=-L/usr/local/opt/openssl/lib pip install mysql-python should be helpful. \u7b2c\u4e8c\u79cd 26 Installing of an older version of the MySQL worked for me: brew remove mysql brew install mysql@5.7 brew link --force mysql@5.7 pip install mysql-python See: issue on the MySQLdb1 Github and this sof answer","title":"Mac pip install mysql-python unsuccessful"},{"location":"02-database/Mac%20pip%20install%20mysql-python%20unsuccessful/#mac-pip-install-mysql-python","text":"Mac pip install mysql-python unsuccessfulI nstalled MySQL and Workbench from website. I have a django project whose requirements.txt: Django==1.11.12 djangorestframework==3.8.2 django-cors-headers==2.2.0 drfdocs==0.0.11 mysql-python==1.2.5 django-rest-auth==0.9.3 django-allauth==0.35.0 nltk==3.2.5 django-extensions==2.0.7 pyparsing==2.2.0 pydot==1.2.4 When I run pip install -r requirements.txt I got an error mysql_config not found . To solve this I ran PATH=$PATH:/usr/local/mysql/bin It now throws _mysql.c:44:10: fatal error: 'my_config.h' file not found #include \"my_config.h\" ^~~~~~~~~~~~~ 1 error generated. error: command 'cc' failed with exit status 1 ---------------------------------------- Command \"\"/Users/nitish/gitProjects/Vision Backlog/vb_env/bin/python\" -u -c \"import setuptools, tokenize;__file__='/private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-M4ue9E/mysql-python/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-record-7OCzf1/install-record.txt --single-version-externally-managed --compile --install-headers \"/Users/nitish/gitProjects/Vision Backlog/vb_env/include/site/python2.7/mysql-python\"\" failed with error code 1 in /private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-M4ue9E/mysql-python/ Why is this happening? UPDATE: following bellow solution threw: Collecting MySQL-python Using cached https://files.pythonhosted.org/packages/a5/e9/51b544da85a36a68debe7a7091f068d802fc515a3a202652828c73453cad/MySQL-python-1.2.5.zip Complete output from command python setup.py egg_info: Traceback (most recent call last): File \"<string>\", line 1, in <module> File \"/private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-X6b4rU/MySQL-python/setup.py\", line 17, in <module> metadata, options = get_config() File \"setup_posix.py\", line 53, in get_config libraries = [ dequote(i[2:]) for i in libs if i.startswith(compiler_flag(\"l\")) ] File \"setup_posix.py\", line 8, in dequote if s[0] in \"\\\"'\" and s[0] == s[-1]: IndexError: string index out of range \u7b2c\u4e00\u79cd Please, try: CFLAGS=-Qunused-arguments CPPFLAGS=-Qunused-arguments pip install -r requirements.txt If it does not work: First install mysql-connector-c brew install mysql-connector-c pip install MySQL-python If you are using Windows: https://dev.mysql.com/downloads/connector/c/ You can also check what happend when you try install it with pip3. UPDATE: If you have Linux: Please open the /usr/local/bin/mysql_config . And then: #Create options Libs = \"-L $ pkglibdir \" Libs = \" $ libs -l\" replace with: #Create options Libs = \"- L $ pkglibdir\" Libs = \"$ libs -lmysqlclient -lssl -lcrypto\" Save it and reinstall mysql-python . pip uninstall mysql-python pip install mysql-python For Mac: LDFLAGS=-L/usr/local/opt/openssl/lib pip install mysql-python should be helpful. \u7b2c\u4e8c\u79cd 26 Installing of an older version of the MySQL worked for me: brew remove mysql brew install mysql@5.7 brew link --force mysql@5.7 pip install mysql-python See: issue on the MySQLdb1 Github and this sof answer","title":"Mac pip install mysql-python"},{"location":"02-database/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/","text":"Mac\u5b89\u88c5MySQLdb\uff08python-mysql\uff09\u6a21\u5757 \u00b6 \u524d\u9762 \u00b6 Python\u5199\u7684\u9879\u76ee\u9700\u8981\u8fde\u63a5MySQL\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u672c\u5730\u9700\u8981\u5b89\u88c5MySQLdb\u6a21\u5757\uff0c\u4f46\u662f\u5728\u5b89\u88c5\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u662f\u9047\u5230\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u5728\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e0b\uff0c\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u7b80\u4e66\u7684Markdown\u7f16\u8f91\u5668\u7528\u7740\u592a\u723d\u4e86\uff0c\u7528\u4e86\u5f88\u4e45\uff0c\u8fd8\u662f\u559c\u6b22\u8fd9\u79cd\u7b80\u6d01\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u8ba9\u4f60\u66f4\u5173\u6ce8\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5176\u5b83\u3002 \u64cd\u4f5c\u7cfb\u7edf\uff1aMacOS 10.12.5 Python\u7248\u672c\uff1a2.7.10 pip\uff1a 9.0.1 \u5f00\u59cb\u5427 \u00b6 \u4e00\u822c\u7684\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u8fde\u63a5MySQL\u7684\u4ee3\u7801\uff0c\u6216\u8005\u4f9d\u8d56\u4e8eMySQLdb\u7c7b\u5e93\u7684\u7c7b\u5e93\uff0c\u5c31\u4f1a\u770b\u5230\u8fd9\u4e2a\uff1a ImportError: No module named MySQLdb \uff0c\u63d0\u793a\u627e\u4e0d\u5230\u6a21\u5757\u3002 \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u5b89\u88c5\u5bf9\u5e94\u7684 MySQL for Python \u4e86\uff0c\u4e5f\u5c31\u662f MySQL-python \uff0c\u5728\u7ec8\u7aef\u6267\u884c pip install MySQL-python \uff0c\u989d~\u524d\u63d0\u662f\u4f60\u5df2\u7ecf\u5b89\u88c5pip\u4e86\u554a\u3002 \u9047\u5230\u9519\u8bef \u00b6 \u5f53\u4f60\u6309\u4e0b\u56de\u8f66\u952e\u7684\u90a3\u4e00\u5239\u90a3\uff0c\u5c4f\u5e55\u4e0a\uff0c\u5c31\u51fa\u73b0\u4e86\u9519\u8bef\uff1a EnvironmentError: mysql_config not found \uff0c\u55ef\uff0c\u8fd9\u662f\u548b\u56de\u4e8b\uff0c\u7f51\u4e0a\u67e5\u67e5\u53bb\u3002\u3002\u3002 \u7c97\u7565\u770b\u4e86\u4e00\u4e0b\uff0c\u5927\u6982\u610f\u601d\u5c31\u662f\uff0c\u4f60\u8fd8\u9700\u8981\u5b89\u88c5\u4e00\u4e2aMySQL\uff0cWhat\uff1f\u6211\u5c31\u662f\u60f3\u8fde\u63a5\u4e00\u4e0b\u6570\u636e\u5e93\uff0c\u4e0d\u81f3\u4e8e\u8fd8\u8981\u4e0b\u4e00\u4e2a\u6570\u636e\u5e93\u5427\u3002\u4ed4\u7ec6\u770b\u4e86\u770b\u53c8\uff0c\u539f\u6765\u662f\u9700\u8981\u5b89\u88c5\u4e00\u4e2amysql\u5f00\u53d1\u5305\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u672c\u5730\u5b89\u88c5\u4e00\u4e2aMySQL\uff09\uff0c\u597d\u5427\uff0c\u6ca1\u529e\u6cd5\uff0c\u90a3\u518d\u6765\u3002 \u5728\u5b98\u7f51\u770b\u4e86\u4e0b\uff0c\u5e94\u8be5\u5c31\u662f\u8fd9\u4e2a\u8d27 \u624b\u52a8\u4e0b\u8f7d\u4e86dmg\u7248\u672c\u7684\uff0c\u6839\u636e\u63d0\u793a\u5b89\u88c5\u5b8c\u6bd5\uff0c\u7ec8\u7aef\u8fd0\u884c pip install MySQL-python \u53d1\u4e0b\u8fd8\u662f\u539f\u6765\u7684\u9519\u8bef\uff0c\u53c8\u53bb\u67e5\u4e86\u67e5\u8d44\u6599\uff0c\u5e94\u8be5\u662f\u5b89\u88c5\u7684mysql\u5e93\u6ca1\u6709\u52a0\u5165\u73af\u5883\u53d8\u91cf\uff0c\u73b0\u5728\u5c31\u662f\u8981\u627e\u5230\u6211\u521a\u624d\u5b89\u88c5\u7684mysql\u5230\u54ea\u4e2a\u76ee\u5f55\u4e86\u3002\u7ec8\u7aef\u7a97\u53e3\u6267\u884c find / -name mysql_config \uff0c\u7ed3\u679c\u4e2d\u6709\u4e00\u4e2a\uff1a/usr/local/mysql-connector-c-6.1.10-macos10.12-x86_64/bin/mysql_config \uff0c\u5e94\u8be5\u5c31\u662f\u5b83\u4e86\uff0c\u901a\u8fc7\uff1a export PATH=$PATH:/usr/local/mysql-connector-c-6.1.10-macos10.12-x86_64/bin/ \u52a0\u5165\u73af\u5883\u53d8\u91cf\u3002 \u518d\u6b21\u9519\u8bef \u00b6 \u518d\u6b21\u6267\u884c pip install MySQL-python \uff0c\u770b\u5230\u8f93\u51fa\u7684\u9519\u8bef\uff0c\u6211\u7b80\u76f4\u5d29\u6e83\u4e86\u3002 Collecting MySQL - python Using cached MySQL - python - 1 . 2 . 5 . zip Complete output from command python setup . py egg_info : Traceback ( most recent call last ): File \"<string>\" , line 1 , in < module > File \"/private/var/folders/d1/1lnf846x6p119488dvhnqj740000gn/T/pip-build-b16vZo/MySQL-python/setup.py\" , line 17 , in < module > metadata , options = get_config () File \"setup_posix.py\" , line 53 , in get_config libraries = [ dequote ( i [ 2 : ] ) for i in libs if i . startswith ( compiler_flag ( \"l\" )) ] File \"setup_posix.py\" , line 8 , in dequote if s [ 0 ] in \" \\\" '\" and s [ 0 ] == s [- 1 ] : IndexError : string index out of range ---------------------------------------- \u6362\u4e00\u79cd\u65b9\u5f0f \u00b6 \u8fd8\u80fd\u4e0d\u80fd\u6109\u5feb\u7684\u73a9\u800d\u4e86~ Google\u4e86\u4e00\u4e0b\uff0c\u6ca1\u6709\u89e3\u51b3\uff0c\u6211\u60f3\u6211\u8981\u6362\u4e00\u79cd\u65b9\u5f0f\u4e86\u3002 \u628a\u521a\u624d\u5b89\u88c5\u7684mysql\u5f00\u53d1\u5305\u5220\u6389\u3002 \u901a\u8fc7brew\u91cd\u65b0\u5b89\u88c5\u8bd5\u8bd5\u3002 # install brew ruby -e \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install ) \" \u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u53bbbrew\u5b98\u7f51\u770b\u770b\uff0c\u5c45\u7136\u6709\u4e2d\u6587\uff0c\u539a\u9053\uff1a https://brew.sh/index_zh-cn.html \u6000\u7591\u4eba\u751f/\u80dc\u5229\u5728\u671b \u00b6 \u8fd9\u4e00\u6b21\u76f4\u63a5 brew install mysql \uff0c\u7b49\u5f85\u5b89\u88c5\u5b8c\u6bd5\uff0c\u518d\u518d\u518d\u6267\u884c pip install MySQL-python \uff0c\u55ef~\u679c\u7136\u8fd8\u662f\u9519\u8bef\uff0c\u8fd9\u5c31\u662f\u4eba\u751f\u554a\u3002 3 warnings generated. cc -bundle -undefined dynamic_lookup -arch x86_64 -arch i386 -Wl,-F. build/temp.macosx-10.12-intel-2.7/_mysql.o -L/usr/local/Cellar/mysql/5.7.18_1/lib -lmysqlclient -lssl -lcrypto -o build/lib.macosx-10.12-intel-2.7/_mysql.so ld: library not found for -lssl clang: error: linker command failed with exit code 1 ( use -v to see invocation ) error: command 'cc' failed with exit status 1 \u5c31\u662f\u4e0a\u9762\u8fd9\u4e2a\u9519\u8bef\uff0c\u4e8e\u662f\u4e4e\uff0c\u6211\u53c8Google\uff0c\u53d1\u73b0\u4e86\uff1a https://stackoverflow.com/questions/22697440/cc-failed-with-exit-status-1-error-when-install-python-library \u5c31\u662f\u8fd9\u4e2a\u4eba\u89e3\u7b54\u7684\uff0c\u548c\u6211\u9047\u5230\u7684\u95ee\u9898\u4e00\u6837 \u7136\u540e\u6211\u901a\u8fc7\u5927\u795e\u7684\u6307\u793a\uff1a xcode-select --install \uff0c\u4f1a\u5f39\u51faxcode\u7684\u8f6f\u4ef6\u5b89\u88c5\u7a97\u53e3\uff0c\u7b49\u5f85\u51e0\u5206\u949f\uff0c\u5b89\u88c5\u5b8c\u6bd5\uff0c\u518d\u6b21\u6267\u884c\uff1a pip install MySQL-python \u3002 \u547c~\u6210\u529f\u4e86\u4f60\u76f8\u4fe1\u5417\uff1f Collecting MySQL-python Downloading MySQL-python-1.2.5.zip ( 108kB ) 100 % | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112kB 127kB/s Installing collected packages: MySQL-python Running setup.py install for MySQL-python ... done Successfully installed MySQL-python-1.2.5","title":"Mac\u5b89\u88c5MySQLdb\uff08python-mysql\uff09\u6a21\u5757"},{"location":"02-database/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#macmysqldbpython-mysql","text":"","title":"Mac\u5b89\u88c5MySQLdb\uff08python-mysql\uff09\u6a21\u5757"},{"location":"02-database/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_1","text":"Python\u5199\u7684\u9879\u76ee\u9700\u8981\u8fde\u63a5MySQL\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u672c\u5730\u9700\u8981\u5b89\u88c5MySQLdb\u6a21\u5757\uff0c\u4f46\u662f\u5728\u5b89\u88c5\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u662f\u9047\u5230\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u5728\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e0b\uff0c\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u7b80\u4e66\u7684Markdown\u7f16\u8f91\u5668\u7528\u7740\u592a\u723d\u4e86\uff0c\u7528\u4e86\u5f88\u4e45\uff0c\u8fd8\u662f\u559c\u6b22\u8fd9\u79cd\u7b80\u6d01\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u8ba9\u4f60\u66f4\u5173\u6ce8\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5176\u5b83\u3002 \u64cd\u4f5c\u7cfb\u7edf\uff1aMacOS 10.12.5 Python\u7248\u672c\uff1a2.7.10 pip\uff1a 9.0.1","title":"\u524d\u9762"},{"location":"02-database/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_2","text":"\u4e00\u822c\u7684\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u8fde\u63a5MySQL\u7684\u4ee3\u7801\uff0c\u6216\u8005\u4f9d\u8d56\u4e8eMySQLdb\u7c7b\u5e93\u7684\u7c7b\u5e93\uff0c\u5c31\u4f1a\u770b\u5230\u8fd9\u4e2a\uff1a ImportError: No module named MySQLdb \uff0c\u63d0\u793a\u627e\u4e0d\u5230\u6a21\u5757\u3002 \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u5b89\u88c5\u5bf9\u5e94\u7684 MySQL for Python \u4e86\uff0c\u4e5f\u5c31\u662f MySQL-python \uff0c\u5728\u7ec8\u7aef\u6267\u884c pip install MySQL-python \uff0c\u989d~\u524d\u63d0\u662f\u4f60\u5df2\u7ecf\u5b89\u88c5pip\u4e86\u554a\u3002","title":"\u5f00\u59cb\u5427"},{"location":"02-database/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_3","text":"\u5f53\u4f60\u6309\u4e0b\u56de\u8f66\u952e\u7684\u90a3\u4e00\u5239\u90a3\uff0c\u5c4f\u5e55\u4e0a\uff0c\u5c31\u51fa\u73b0\u4e86\u9519\u8bef\uff1a EnvironmentError: mysql_config not found \uff0c\u55ef\uff0c\u8fd9\u662f\u548b\u56de\u4e8b\uff0c\u7f51\u4e0a\u67e5\u67e5\u53bb\u3002\u3002\u3002 \u7c97\u7565\u770b\u4e86\u4e00\u4e0b\uff0c\u5927\u6982\u610f\u601d\u5c31\u662f\uff0c\u4f60\u8fd8\u9700\u8981\u5b89\u88c5\u4e00\u4e2aMySQL\uff0cWhat\uff1f\u6211\u5c31\u662f\u60f3\u8fde\u63a5\u4e00\u4e0b\u6570\u636e\u5e93\uff0c\u4e0d\u81f3\u4e8e\u8fd8\u8981\u4e0b\u4e00\u4e2a\u6570\u636e\u5e93\u5427\u3002\u4ed4\u7ec6\u770b\u4e86\u770b\u53c8\uff0c\u539f\u6765\u662f\u9700\u8981\u5b89\u88c5\u4e00\u4e2amysql\u5f00\u53d1\u5305\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u672c\u5730\u5b89\u88c5\u4e00\u4e2aMySQL\uff09\uff0c\u597d\u5427\uff0c\u6ca1\u529e\u6cd5\uff0c\u90a3\u518d\u6765\u3002 \u5728\u5b98\u7f51\u770b\u4e86\u4e0b\uff0c\u5e94\u8be5\u5c31\u662f\u8fd9\u4e2a\u8d27 \u624b\u52a8\u4e0b\u8f7d\u4e86dmg\u7248\u672c\u7684\uff0c\u6839\u636e\u63d0\u793a\u5b89\u88c5\u5b8c\u6bd5\uff0c\u7ec8\u7aef\u8fd0\u884c pip install MySQL-python \u53d1\u4e0b\u8fd8\u662f\u539f\u6765\u7684\u9519\u8bef\uff0c\u53c8\u53bb\u67e5\u4e86\u67e5\u8d44\u6599\uff0c\u5e94\u8be5\u662f\u5b89\u88c5\u7684mysql\u5e93\u6ca1\u6709\u52a0\u5165\u73af\u5883\u53d8\u91cf\uff0c\u73b0\u5728\u5c31\u662f\u8981\u627e\u5230\u6211\u521a\u624d\u5b89\u88c5\u7684mysql\u5230\u54ea\u4e2a\u76ee\u5f55\u4e86\u3002\u7ec8\u7aef\u7a97\u53e3\u6267\u884c find / -name mysql_config \uff0c\u7ed3\u679c\u4e2d\u6709\u4e00\u4e2a\uff1a/usr/local/mysql-connector-c-6.1.10-macos10.12-x86_64/bin/mysql_config \uff0c\u5e94\u8be5\u5c31\u662f\u5b83\u4e86\uff0c\u901a\u8fc7\uff1a export PATH=$PATH:/usr/local/mysql-connector-c-6.1.10-macos10.12-x86_64/bin/ \u52a0\u5165\u73af\u5883\u53d8\u91cf\u3002","title":"\u9047\u5230\u9519\u8bef"},{"location":"02-database/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_4","text":"\u518d\u6b21\u6267\u884c pip install MySQL-python \uff0c\u770b\u5230\u8f93\u51fa\u7684\u9519\u8bef\uff0c\u6211\u7b80\u76f4\u5d29\u6e83\u4e86\u3002 Collecting MySQL - python Using cached MySQL - python - 1 . 2 . 5 . zip Complete output from command python setup . py egg_info : Traceback ( most recent call last ): File \"<string>\" , line 1 , in < module > File \"/private/var/folders/d1/1lnf846x6p119488dvhnqj740000gn/T/pip-build-b16vZo/MySQL-python/setup.py\" , line 17 , in < module > metadata , options = get_config () File \"setup_posix.py\" , line 53 , in get_config libraries = [ dequote ( i [ 2 : ] ) for i in libs if i . startswith ( compiler_flag ( \"l\" )) ] File \"setup_posix.py\" , line 8 , in dequote if s [ 0 ] in \" \\\" '\" and s [ 0 ] == s [- 1 ] : IndexError : string index out of range ----------------------------------------","title":"\u518d\u6b21\u9519\u8bef"},{"location":"02-database/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_5","text":"\u8fd8\u80fd\u4e0d\u80fd\u6109\u5feb\u7684\u73a9\u800d\u4e86~ Google\u4e86\u4e00\u4e0b\uff0c\u6ca1\u6709\u89e3\u51b3\uff0c\u6211\u60f3\u6211\u8981\u6362\u4e00\u79cd\u65b9\u5f0f\u4e86\u3002 \u628a\u521a\u624d\u5b89\u88c5\u7684mysql\u5f00\u53d1\u5305\u5220\u6389\u3002 \u901a\u8fc7brew\u91cd\u65b0\u5b89\u88c5\u8bd5\u8bd5\u3002 # install brew ruby -e \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install ) \" \u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u53bbbrew\u5b98\u7f51\u770b\u770b\uff0c\u5c45\u7136\u6709\u4e2d\u6587\uff0c\u539a\u9053\uff1a https://brew.sh/index_zh-cn.html","title":"\u6362\u4e00\u79cd\u65b9\u5f0f"},{"location":"02-database/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_6","text":"\u8fd9\u4e00\u6b21\u76f4\u63a5 brew install mysql \uff0c\u7b49\u5f85\u5b89\u88c5\u5b8c\u6bd5\uff0c\u518d\u518d\u518d\u6267\u884c pip install MySQL-python \uff0c\u55ef~\u679c\u7136\u8fd8\u662f\u9519\u8bef\uff0c\u8fd9\u5c31\u662f\u4eba\u751f\u554a\u3002 3 warnings generated. cc -bundle -undefined dynamic_lookup -arch x86_64 -arch i386 -Wl,-F. build/temp.macosx-10.12-intel-2.7/_mysql.o -L/usr/local/Cellar/mysql/5.7.18_1/lib -lmysqlclient -lssl -lcrypto -o build/lib.macosx-10.12-intel-2.7/_mysql.so ld: library not found for -lssl clang: error: linker command failed with exit code 1 ( use -v to see invocation ) error: command 'cc' failed with exit status 1 \u5c31\u662f\u4e0a\u9762\u8fd9\u4e2a\u9519\u8bef\uff0c\u4e8e\u662f\u4e4e\uff0c\u6211\u53c8Google\uff0c\u53d1\u73b0\u4e86\uff1a https://stackoverflow.com/questions/22697440/cc-failed-with-exit-status-1-error-when-install-python-library \u5c31\u662f\u8fd9\u4e2a\u4eba\u89e3\u7b54\u7684\uff0c\u548c\u6211\u9047\u5230\u7684\u95ee\u9898\u4e00\u6837 \u7136\u540e\u6211\u901a\u8fc7\u5927\u795e\u7684\u6307\u793a\uff1a xcode-select --install \uff0c\u4f1a\u5f39\u51faxcode\u7684\u8f6f\u4ef6\u5b89\u88c5\u7a97\u53e3\uff0c\u7b49\u5f85\u51e0\u5206\u949f\uff0c\u5b89\u88c5\u5b8c\u6bd5\uff0c\u518d\u6b21\u6267\u884c\uff1a pip install MySQL-python \u3002 \u547c~\u6210\u529f\u4e86\u4f60\u76f8\u4fe1\u5417\uff1f Collecting MySQL-python Downloading MySQL-python-1.2.5.zip ( 108kB ) 100 % | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112kB 127kB/s Installing collected packages: MySQL-python Running setup.py install for MySQL-python ... done Successfully installed MySQL-python-1.2.5","title":"\u6000\u7591\u4eba\u751f/\u80dc\u5229\u5728\u671b"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/","text":"Python \u64cd\u4f5c MySQL \u6570\u636e\u5e93 \u00b6 Python \u6807\u51c6\u6570\u636e\u5e93\u63a5\u53e3\u4e3a Python DB-API\uff0cPython DB-API\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u6570\u636e\u5e93\u5e94\u7528\u7f16\u7a0b\u63a5\u53e3\u3002 \u4e0d\u540c\u7684\u6570\u636e\u5e93\u4f60\u9700\u8981\u4e0b\u8f7d\u4e0d\u540c\u7684DB API\u6a21\u5757\uff0c\u4f8b\u5982\u4f60\u9700\u8981\u8bbf\u95eeOracle\u6570\u636e\u5e93\u548cMysql\u6570\u636e\uff0c\u4f60\u9700\u8981\u4e0b\u8f7dOracle\u548cMySQL\u6570\u636e\u5e93\u6a21\u5757\u3002DB-API \u662f\u4e00\u4e2a\u89c4\u8303. \u5b83\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u5fc5\u987b\u7684\u5bf9\u8c61\u548c\u6570\u636e\u5e93\u5b58\u53d6\u65b9\u5f0f, \u4ee5\u4fbf\u4e3a\u5404\u79cd\u5404\u6837\u7684\u5e95\u5c42\u6570\u636e\u5e93\u7cfb\u7edf\u548c\u591a\u79cd\u591a\u6837\u7684\u6570\u636e\u5e93\u63a5\u53e3\u7a0b\u5e8f\u63d0\u4f9b\u4e00\u81f4\u7684\u8bbf\u95ee\u63a5\u53e3 \u3002Python\u7684DB-API\uff0c\u4e3a\u5927\u591a\u6570\u7684\u6570\u636e\u5e93\u5b9e\u73b0\u4e86\u63a5\u53e3\uff0c\u4f7f\u7528\u5b83\u8fde\u63a5\u5404\u6570\u636e\u5e93\u540e\uff0c\u5c31\u53ef\u4ee5\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u64cd\u4f5c\u5404\u6570\u636e\u5e93\u3002 Python DB-API\u4f7f\u7528\u6d41\u7a0b\uff1a \u5f15\u5165 API \u6a21\u5757\u3002 \u83b7\u53d6\u4e0e\u6570\u636e\u5e93\u7684\u8fde\u63a5\u3002 \u6267\u884cSQL\u8bed\u53e5\u548c\u5b58\u50a8\u8fc7\u7a0b\u3002 \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\u3002 \u4ec0\u4e48\u662fMySQLdb? \u00b6 MySQLdb \u662f\u7528\u4e8ePython\u94fe\u63a5Mysql\u6570\u636e\u5e93\u7684\u63a5\u53e3\uff0c\u5b83\u5b9e\u73b0\u4e86 Python \u6570\u636e\u5e93 API \u89c4\u8303 V2.0\uff0c\u57fa\u4e8e MySQL C API \u4e0a\u5efa\u7acb\u7684\u3002 \u5982\u4f55\u5b89\u88c5MySQLdb? \u00b6 \u4e3a\u4e86\u7528DB-API\u7f16\u5199MySQL\u811a\u672c\uff0c\u5fc5\u987b\u786e\u4fdd\u5df2\u7ecf\u5b89\u88c5\u4e86MySQL\u3002\u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5e76\u6267\u884c\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb \u5982\u679c\u6267\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff0c\u610f\u5473\u7740\u4f60\u6ca1\u6709\u5b89\u88c5 MySQLdb \u6a21\u5757\uff1a ```python Traceback (most recent call last): File \"test.py\", line 3, in import MySQLdb ImportError: No module named MySQLdb \u5b89\u88c5MySQLdb\uff0c\u8bf7\u8bbf\u95ee http://sourceforge.net/projects/mysql-python \uff0c(Linux\u5e73\u53f0\u53ef\u4ee5\u8bbf\u95ee\uff1ahttps://pypi.python.org/pypi/MySQL-python)\u4ece\u8fd9\u91cc\u53ef\u9009\u62e9\u9002\u5408\u60a8\u7684\u5e73\u53f0\u7684\u5b89\u88c5\u5305\uff0c\u5206\u4e3a\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6e90\u4ee3\u7801\u5b89\u88c5\u5305\u3002 \u5982\u679c\u60a8\u9009\u62e9\u4e8c\u8fdb\u5236\u6587\u4ef6\u53d1\u884c\u7248\u672c\u7684\u8bdd\uff0c\u5b89\u88c5\u8fc7\u7a0b\u57fa\u672c\u5b89\u88c5\u63d0\u793a\u5373\u53ef\u5b8c\u6210\u3002\u5982\u679c\u4ece\u6e90\u4ee3\u7801\u8fdb\u884c\u5b89\u88c5\u7684\u8bdd\uff0c\u5219\u9700\u8981\u5207\u6362\u5230MySQLdb\u53d1\u884c\u7248\u672c\u7684\u9876\u7ea7\u76ee\u5f55\uff0c\u5e76\u952e\u5165\u4e0b\u5217\u547d\u4ee4: ```bash $ gunzip MySQL-python-1.2.2.tar.gz $ tar -xvf MySQL-python-1.2.2.tar $ cd MySQL-python-1.2.2 $ python setup.py build $ python setup.py install **\u6ce8\u610f\uff1a**\u8bf7\u786e\u4fdd\u60a8\u6709root\u6743\u9650\u6765\u5b89\u88c5\u4e0a\u8ff0\u6a21\u5757\u3002 \u5b89\u88c5\u62a5\u95191: \u6267\u884c sudo python setup.py build \u51fa\u73b0\u95ee\u9898(SSL\u6743\u9650) AAAtest:MySQL-python-1.2.4b4 $ sudo python setup.py build Downloading http://pypi.python.org/packages/source/d/distribute/distribute-0.6.28.tar.gz urllib2.HTTPError: HTTP Error 403 : SSL is required \u53ef\u4ee5\u53c2\u8003 https://blog.csdn.net/bin642264643/article/details/91972480 \u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee\u8fd9\u4e2a\u94fe\u63a5\u8fdb\u884c\u4e0b\u8f7d\u3002\u4e0b\u8f7d\u7ed3\u675f\uff0c\u5e76\u653e\u5728\u8def\u5f84\u4e0b\uff0c\u7136\u540e\u6267\u884c python setup.py build \u5b89\u88c5\u62a5\u9519\uff1a\u51fa\u73b0\u4e0b\u9762\u7684\u95ee\u9898 running build running build_py copying MySQLdb/release.py -> build/lib.macosx-10.13-intel-2.7/MySQLdb running build_ext building '_mysql' extension cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch x86_64 -pipe -Dversion_info =( 1 ,2,4, 'beta' ,4 ) -D__version__ = 1 .2.4b4 -I/usr/local/mysql/include -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c _mysql.c -o build/temp.macosx-10.13-intel-2.7/_mysql.o _mysql.c:44:10: fatal error: 'my_config.h' file not found #include \"my_config.h\" ^~~~~~~~~~~~~ 1 error generated. error: command 'cc' failed with exit status 1 \u89e3\u51b3\u65b9\u6cd51\uff1a https://stackoverflow.com/questions/21638444/error-command-cc-failed-with-exit-status-1-mysqldb-installation-on-mac The problem is unused arguments passed to compiler. Try this before running your build code: export CFLAGS = -Qunused-arguments export CPPFLAGS = -Qunused-arguments \u4f7f\u7528\u4e0a\u9762\u7684\u7f16\u8bd1\u4e0d\u5904\u7406\u554a\u554a\uff01\u770b\u4e00\u4e0b\u6700\u65b0\u7684\u6559\u7a0b\u2018 \u53ef\u80fd\u662fpython2.7.10 \u6216\u80053\u7248\u672c\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u672c\u5730\u73b0\u5728\u4e24\u4e2a\u7248\u672c\u90fd\u5b89\u88c5 \u53ef\u80fd\u662f\u7248\u672c\u4e0d\u5bf9\u5e94\uff0cMySQL_python-1.2.5-cp27-none-win_amd64.whl \u652f\u6301windows\u7248\u672c\u6216\u8005linux\u7cfb\u7edf\uff0c\u4e0d\u652f\u6301Mac\u7cfb\u7edf\u3002 \u89e3\u51b3\u65b9\u6cd52\uff1a https://stackoverflow.com/questions/50864438/mac-pip-install-mysql-python-unsuccessful Installing of an older version of the MySQL worked for me: brew remove mysql brew install mysql@5.7 brew link --force mysql@5.7 pip install mysql-python \u6570\u636e\u5e93\u8fde\u63a5 \u00b6 \u8fde\u63a5\u6570\u636e\u5e93\u524d\uff0c\u8bf7\u5148\u786e\u8ba4\u4ee5\u4e0b\u4e8b\u9879\uff1a \u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u6570\u636e\u5e93 TESTDB. \u5728TESTDB\u6570\u636e\u5e93\u4e2d\u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u8868 EMPLOYEE EMPLOYEE\u8868\u5b57\u6bb5\u4e3a FIRST_NAME, LAST_NAME, AGE, SEX \u548c INCOME\u3002 \u8fde\u63a5\u6570\u636e\u5e93TESTDB\u4f7f\u7528\u7684\u7528\u6237\u540d\u4e3a \"testuser\" \uff0c\u5bc6\u7801\u4e3a \"test123\",\u4f60\u53ef\u4ee5\u53ef\u4ee5\u81ea\u5df1\u8bbe\u5b9a\u6216\u8005\u76f4\u63a5\u4f7f\u7528root\u7528\u6237\u540d\u53ca\u5176\u5bc6\u7801\uff0cMysql\u6570\u636e\u5e93\u7528\u6237\u6388\u6743\u8bf7\u4f7f\u7528Grant\u547d\u4ee4\u3002 \u5728\u4f60\u7684\u673a\u5b50\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 Python MySQLdb \u6a21\u5757\u3002 \u5982\u679c\u60a8\u5bf9sql\u8bed\u53e5\u4e0d\u719f\u6089\uff0c\u53ef\u4ee5\u8bbf\u95ee\u6211\u4eec\u7684 SQL\u57fa\u7840\u6559\u7a0b \u5b9e\u4f8b\uff1a \u00b6 \u4ee5\u4e0b\u5b9e\u4f8b\u94fe\u63a5Mysql\u7684TESTDB\u6570\u636e\u5e93\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # \u4f7f\u7528execute\u65b9\u6cd5\u6267\u884cSQL\u8bed\u53e5 cursor . execute ( \"SELECT VERSION()\" ) # \u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u4e00\u6761\u6570\u636e data = cursor . fetchone () print \"Database version : %s \" % data # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db . close () \u6267\u884c\u4ee5\u4e0a\u811a\u672c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Database version : 5.0.45 \u521b\u5efa\u6570\u636e\u5e93\u8868 \u00b6 \u5982\u679c\u6570\u636e\u5e93\u8fde\u63a5\u5b58\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528execute()\u65b9\u6cd5\u6765\u4e3a\u6570\u636e\u5e93\u521b\u5efa\u8868\uff0c\u5982\u4e0b\u6240\u793a\u521b\u5efa\u8868EMPLOYEE\uff1a ```python !/usr/bin/python \u00b6 - - coding: UTF-8 - - \u00b6 import MySQLdb \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 \u00b6 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 \u00b6 cursor = db.cursor() \u5982\u679c\u6570\u636e\u8868\u5df2\u7ecf\u5b58\u5728\u4f7f\u7528 execute() \u65b9\u6cd5\u5220\u9664\u8868\u3002 \u00b6 cursor.execute(\"DROP TABLE IF EXISTS EMPLOYEE\") \u521b\u5efa\u6570\u636e\u8868SQL\u8bed\u53e5 \u00b6 sql = \"\"\"CREATE TABLE EMPLOYEE ( FIRST_NAME CHAR(20) NOT NULL, LAST_NAME CHAR(20), AGE INT, SEX CHAR(1), INCOME FLOAT )\"\"\" cursor.execute(sql) \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 \u00b6 db.close() ------ ## \u6570\u636e\u5e93\u63d2\u5165\u64cd\u4f5c \u4ee5\u4e0b\u5b9e\u4f8b\u4f7f\u7528\u6267\u884c SQL INSERT \u8bed\u53e5\u5411\u8868 EMPLOYEE \u63d2\u5165\u8bb0\u5f55\uff1a ```python #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db.cursor() # SQL \u63d2\u5165\u8bed\u53e5 sql = \"\"\"INSERT INTO EMPLOYEE(FIRST_NAME, LAST_NAME, AGE, SEX, INCOME) VALUES ('Mac', 'Mohan', 20, 'M', 2000)\"\"\" try: # \u6267\u884csql\u8bed\u53e5 cursor.execute(sql) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db.commit() except: # Rollback in case there is any error db.rollback() # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db.close() \u4ee5\u4e0a\u4f8b\u5b50\u4e5f\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # SQL \u63d2\u5165\u8bed\u53e5 sql = \"INSERT INTO EMPLOYEE(FIRST_NAME, \\ LAST_NAME, AGE, SEX, INCOME) \\ VALUES ( %s , %s , %s , %s , %s )\" % \\ ( 'Mac' , 'Mohan' , 20 , 'M' , 2000 ) try : # \u6267\u884csql\u8bed\u53e5 cursor . execute ( sql ) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db . close () \u5b9e\u4f8b\uff1a \u00b6 \u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528\u53d8\u91cf\u5411SQL\u8bed\u53e5\u4e2d\u4f20\u9012\u53c2\u6570: .................................. user_id = \"test123\" password = \"password\" con.execute('insert into Login values(%s, %s)' % \\ (user_id, password)) .................................. \u6570\u636e\u5e93\u67e5\u8be2\u64cd\u4f5c \u00b6 Python\u67e5\u8be2Mysql\u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u5355\u6761\u6570\u636e, \u4f7f\u7528fetchall() \u65b9\u6cd5\u83b7\u53d6\u591a\u6761\u6570\u636e\u3002 fetchone(): \u8be5\u65b9\u6cd5\u83b7\u53d6\u4e0b\u4e00\u4e2a\u67e5\u8be2\u7ed3\u679c\u96c6\u3002\u7ed3\u679c\u96c6\u662f\u4e00\u4e2a\u5bf9\u8c61 **fetchall():**\u63a5\u6536\u5168\u90e8\u7684\u8fd4\u56de\u7ed3\u679c\u884c. rowcount: \u8fd9\u662f\u4e00\u4e2a\u53ea\u8bfb\u5c5e\u6027\uff0c\u5e76\u8fd4\u56de\u6267\u884cexecute()\u65b9\u6cd5\u540e\u5f71\u54cd\u7684\u884c\u6570\u3002 \u5b9e\u4f8b\uff1a \u00b6 \u67e5\u8be2EMPLOYEE\u8868\u4e2dsalary\uff08\u5de5\u8d44\uff09\u5b57\u6bb5\u5927\u4e8e1000\u7684\u6240\u6709\u6570\u636e\uff1a ```python !/usr/bin/python \u00b6 - - coding: UTF-8 - - \u00b6 import MySQLdb \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 \u00b6 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 \u00b6 cursor = db.cursor() SQL \u67e5\u8be2\u8bed\u53e5 \u00b6 sql = \"SELECT * FROM EMPLOYEE \\ WHERE INCOME > %s\" % (1000) try: # \u6267\u884cSQL\u8bed\u53e5 cursor.execute(sql) # \u83b7\u53d6\u6240\u6709\u8bb0\u5f55\u5217\u8868 results = cursor.fetchall() for row in results: fname = row[0] lname = row[1] age = row[2] sex = row[3] income = row[4] # \u6253\u5370\u7ed3\u679c print \"fname=%s,lname=%s,age=%s,sex=%s,income=%s\" % \\ (fname, lname, age, sex, income ) except: print \"Error: unable to fecth data\" \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 \u00b6 db.close() \u4ee5\u4e0a\u811a\u672c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a fname=Mac, lname=Mohan, age=20, sex=M, income=2000 ------ ## \u6570\u636e\u5e93\u66f4\u65b0\u64cd\u4f5c \u66f4\u65b0\u64cd\u4f5c\u7528\u4e8e\u66f4\u65b0\u6570\u636e\u8868\u7684\u7684\u6570\u636e\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u5c06 EMPLOYEE \u8868\u4e2d\u7684 SEX \u5b57\u6bb5\u4e3a 'M' \u7684 AGE \u5b57\u6bb5\u9012\u589e 1\uff1a ```python #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db.cursor() # SQL \u66f4\u65b0\u8bed\u53e5 sql = \"UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = '%c'\" % ('M') try: # \u6267\u884cSQL\u8bed\u53e5 cursor.execute(sql) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db.commit() except: # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db.rollback() # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db.close() \u5220\u9664\u64cd\u4f5c \u00b6 \u5220\u9664\u64cd\u4f5c\u7528\u4e8e\u5220\u9664\u6570\u636e\u8868\u4e2d\u7684\u6570\u636e\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86\u5220\u9664\u6570\u636e\u8868 EMPLOYEE \u4e2d AGE \u5927\u4e8e 20 \u7684\u6240\u6709\u6570\u636e\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # SQL \u5220\u9664\u8bed\u53e5 sql = \"DELETE FROM EMPLOYEE WHERE AGE > %s \" % ( 20 ) try : # \u6267\u884cSQL\u8bed\u53e5 cursor . execute ( sql ) # \u63d0\u4ea4\u4fee\u6539 db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () # \u5173\u95ed\u8fde\u63a5 db.close() \u6267\u884c\u4e8b\u52a1 \u00b6 \u4e8b\u52a1\u673a\u5236\u53ef\u4ee5\u786e\u4fdd\u6570\u636e\u4e00\u81f4\u6027\u3002 \u4e8b\u52a1\u5e94\u8be5\u5177\u67094\u4e2a\u5c5e\u6027\uff1a\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u3001\u6301\u4e45\u6027\u3002\u8fd9\u56db\u4e2a\u5c5e\u6027\u901a\u5e38\u79f0\u4e3aACID\u7279\u6027\u3002 \u539f\u5b50\u6027\uff08atomicity\uff09\u3002\u4e00\u4e2a\u4e8b\u52a1\u662f\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\uff0c\u4e8b\u52a1\u4e2d\u5305\u62ec\u7684\u8bf8\u64cd\u4f5c\u8981\u4e48\u90fd\u505a\uff0c\u8981\u4e48\u90fd\u4e0d\u505a\u3002 \u4e00\u81f4\u6027\uff08consistency\uff09\u3002\u4e8b\u52a1\u5fc5\u987b\u662f\u4f7f\u6570\u636e\u5e93\u4ece\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u53d8\u5230\u53e6\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u3002\u4e00\u81f4\u6027\u4e0e\u539f\u5b50\u6027\u662f\u5bc6\u5207\u76f8\u5173\u7684\u3002 \u9694\u79bb\u6027\uff08isolation\uff09\u3002\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u80fd\u88ab\u5176\u4ed6\u4e8b\u52a1\u5e72\u6270\u3002\u5373\u4e00\u4e2a\u4e8b\u52a1\u5185\u90e8\u7684\u64cd\u4f5c\u53ca\u4f7f\u7528\u7684\u6570\u636e\u5bf9\u5e76\u53d1\u7684\u5176\u4ed6\u4e8b\u52a1\u662f\u9694\u79bb\u7684\uff0c\u5e76\u53d1\u6267\u884c\u7684\u5404\u4e2a\u4e8b\u52a1\u4e4b\u95f4\u4e0d\u80fd\u4e92\u76f8\u5e72\u6270\u3002 \u6301\u4e45\u6027\uff08durability\uff09\u3002\u6301\u7eed\u6027\u4e5f\u79f0\u6c38\u4e45\u6027\uff08permanence\uff09\uff0c\u6307\u4e00\u4e2a\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u5b83\u5bf9\u6570\u636e\u5e93\u4e2d\u6570\u636e\u7684\u6539\u53d8\u5c31\u5e94\u8be5\u662f\u6c38\u4e45\u6027\u7684\u3002\u63a5\u4e0b\u6765\u7684\u5176\u4ed6\u64cd\u4f5c\u6216\u6545\u969c\u4e0d\u5e94\u8be5\u5bf9\u5176\u6709\u4efb\u4f55\u5f71\u54cd\u3002 Python DB API 2.0 \u7684\u4e8b\u52a1\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u6cd5 commit \u6216 rollback\u3002 \u5b9e\u4f8b\uff1a \u00b6 # SQL\u5220\u9664\u8bb0\u5f55\u8bed\u53e5 sql = \"DELETE FROM EMPLOYEE WHERE AGE > %s\" % ( 20 ) try : # \u6267\u884c SQL\u8bed\u53e5 cursor . execute ( sql ) # \u5411\u6570\u636e\u5e93\u63d0\u4ea4 db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () \u5bf9\u4e8e\u652f\u6301\u4e8b\u52a1\u7684\u6570\u636e\u5e93\uff0c \u5728Python\u6570\u636e\u5e93\u7f16\u7a0b\u4e2d\uff0c\u5f53\u6e38\u6807\u5efa\u7acb\u4e4b\u65f6\uff0c\u5c31\u81ea\u52a8\u5f00\u59cb\u4e86\u4e00\u4e2a\u9690\u5f62\u7684\u6570\u636e\u5e93\u4e8b\u52a1\u3002 commit()\u65b9\u6cd5\u6e38\u6807\u7684\u6240\u6709\u66f4\u65b0\u64cd\u4f5c\uff0crollback\uff08\uff09\u65b9\u6cd5\u56de\u6eda\u5f53\u524d\u6e38\u6807\u7684\u6240\u6709\u64cd\u4f5c\u3002\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u90fd\u5f00\u59cb\u4e86\u4e00\u4e2a\u65b0\u7684\u4e8b\u52a1\u3002 \u9519\u8bef\u5904\u7406 \u00b6 DB API\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u9519\u8bef\u53ca\u5f02\u5e38\uff0c\u4e0b\u8868\u5217\u51fa\u4e86\u8fd9\u4e9b\u9519\u8bef\u548c\u5f02\u5e38: \u5f02\u5e38 \u63cf\u8ff0 Warning \u5f53\u6709\u4e25\u91cd\u8b66\u544a\u65f6\u89e6\u53d1\uff0c\u4f8b\u5982\u63d2\u5165\u6570\u636e\u662f\u88ab\u622a\u65ad\u7b49\u7b49\u3002\u5fc5\u987b\u662f StandardError \u7684\u5b50\u7c7b\u3002 Error \u8b66\u544a\u4ee5\u5916\u6240\u6709\u5176\u4ed6\u9519\u8bef\u7c7b\u3002\u5fc5\u987b\u662f StandardError \u7684\u5b50\u7c7b\u3002 InterfaceError \u5f53\u6709\u6570\u636e\u5e93\u63a5\u53e3\u6a21\u5757\u672c\u8eab\u7684\u9519\u8bef\uff08\u800c\u4e0d\u662f\u6570\u636e\u5e93\u7684\u9519\u8bef\uff09\u53d1\u751f\u65f6\u89e6\u53d1\u3002 \u5fc5\u987b\u662fError\u7684\u5b50\u7c7b\u3002 DatabaseError \u548c\u6570\u636e\u5e93\u6709\u5173\u7684\u9519\u8bef\u53d1\u751f\u65f6\u89e6\u53d1\u3002 \u5fc5\u987b\u662fError\u7684\u5b50\u7c7b\u3002 DataError \u5f53\u6709\u6570\u636e\u5904\u7406\u65f6\u7684\u9519\u8bef\u53d1\u751f\u65f6\u89e6\u53d1\uff0c\u4f8b\u5982\uff1a\u9664\u96f6\u9519\u8bef\uff0c\u6570\u636e\u8d85\u8303\u56f4\u7b49\u7b49\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 OperationalError \u6307\u975e\u7528\u6237\u63a7\u5236\u7684\uff0c\u800c\u662f\u64cd\u4f5c\u6570\u636e\u5e93\u65f6\u53d1\u751f\u7684\u9519\u8bef\u3002\u4f8b\u5982\uff1a\u8fde\u63a5\u610f\u5916\u65ad\u5f00\u3001 \u6570\u636e\u5e93\u540d\u672a\u627e\u5230\u3001\u4e8b\u52a1\u5904\u7406\u5931\u8d25\u3001\u5185\u5b58\u5206\u914d\u9519\u8bef\u7b49\u7b49\u64cd\u4f5c\u6570\u636e\u5e93\u662f\u53d1\u751f\u7684\u9519\u8bef\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 IntegrityError \u5b8c\u6574\u6027\u76f8\u5173\u7684\u9519\u8bef\uff0c\u4f8b\u5982\u5916\u952e\u68c0\u67e5\u5931\u8d25\u7b49\u3002\u5fc5\u987b\u662fDatabaseError\u5b50\u7c7b\u3002 InternalError \u6570\u636e\u5e93\u7684\u5185\u90e8\u9519\u8bef\uff0c\u4f8b\u5982\u6e38\u6807\uff08cursor\uff09\u5931\u6548\u4e86\u3001\u4e8b\u52a1\u540c\u6b65\u5931\u8d25\u7b49\u7b49\u3002 \u5fc5\u987b\u662fDatabaseError\u5b50\u7c7b\u3002 ProgrammingError \u7a0b\u5e8f\u9519\u8bef\uff0c\u4f8b\u5982\u6570\u636e\u8868\uff08table\uff09\u6ca1\u627e\u5230\u6216\u5df2\u5b58\u5728\u3001SQL\u8bed\u53e5\u8bed\u6cd5\u9519\u8bef\u3001 \u53c2\u6570\u6570\u91cf\u9519\u8bef\u7b49\u7b49\u3002\u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 NotSupportedError \u4e0d\u652f\u6301\u9519\u8bef\uff0c\u6307\u4f7f\u7528\u4e86\u6570\u636e\u5e93\u4e0d\u652f\u6301\u7684\u51fd\u6570\u6216API\u7b49\u3002\u4f8b\u5982\u5728\u8fde\u63a5\u5bf9\u8c61\u4e0a \u4f7f\u7528.rollback()\u51fd\u6570\uff0c\u7136\u800c\u6570\u636e\u5e93\u5e76\u4e0d\u652f\u6301\u4e8b\u52a1\u6216\u8005\u4e8b\u52a1\u5df2\u5173\u95ed\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 \u8bf4\u660e \u00b6 \u5173\u4e8eMysql\u7684\u8fde\u63a5\uff0c\u7ecf\u8fc7\u6478\u7d22\uff0c\u5efa\u8bae\u6b63\u6587\u4fee\u6539\u4e00\u4e0b\uff0c\u4f7f\u7528mysql\u5b98\u65b9\u63d0\u4f9b\u7684\u8fde\u63a5\u5668\uff0c\u6211\u76ee\u524d\u5b89\u88c5\u7684mysql\u662f8.0.12\u7248\u672c\uff0c\u6570\u636e\u5e93\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5b89\u88c5\u201cmysql-connector-python-8.0.12-py2.7-windows-x86-64bit\u201d\uff0c\u5f53\u7136\u4e86\uff0c\u8981\u6839\u636e\u81ea\u5df1\u7684\u64cd\u4f5c\u7cfb\u7edf\u548cpython\u7248\u672c\u4ee5\u53ca\u4f4d\u6570\u8fdb\u884c\u9009\u62e9\uff0c\u6211\u662fwin10\u768464\u4f4d\uff0cpython2.7\u768464\u4f4d\uff0c\u6545\u9009\u62e9\u7684\u4e0a\u8ff0\u63d2\u4ef6\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u76f4\u63a5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u8fdb\u884c\u6d4b\u8bd5\uff1a # -*- coding:utf-8 -*- import mysql.connector # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u7684\u7528\u6237\u540d\u3001\u5bc6\u7801\u53ca\u6570\u636e\u5e93\u540d\u79f0\u8fdb\u884c\u4fee\u6539\uff09 cnn = mysql . connector . connect ( user = 'root' , passwd = 'root' , database = 'testdb' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = cnn . cursor () # \u4f7f\u7528execute\u65b9\u6cd5\u6267\u884cSQL\u8bed\u53e5 cursor . execute ( \"SELECT VERSION()\" ) # \u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u4e00\u6761\u6570\u636e data = cursor . fetchone () print \"Database version : %s \" % data # \u6267\u884csql\u8bed\u53e5 cnn . close () \u663e\u793a\u7684\u7ed3\u679c\u5e94\u8be5\u5982\u4e0b \uff1a Database version : 8.0.12 \u663e\u793a\u7684\u7ed3\u679c\u5e94\u8be5\u5982\u4e0b\uff1a Database version : 8.0.12 \u76f8\u5173\u8d44\u6e90\u4e0b\u8f7d\u94fe\u63a5\u5982\u4e0b\uff1a Python2.7\uff08\u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u7248\u672c\u8bed\u53e5\u517c\u5bb9\u6027\u9ad8\uff0c\u9002\u5408\u5165\u95e8\uff09\uff1a https://blog.python.org/2018/05/python-2715-released.html Mysql8.0.12\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u9700\u8981\u9009\u62e9\u7248\u672c\uff09\uff1a https://dev.mysql.com/downloads/installer/ Mysql\u5b98\u65b9\u6570\u636e\u5e93\u8fde\u63a5\u5668\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u9700\u8981\u9009\u62e9\uff09\uff1a https://dev.mysql.com/downloads/connector/python/ \u5907\u6ce8\uff1a\u6709\u4e9b\u9875\u9762\u6253\u5f00\u4f1a\u5f88\u56f0\u96be\uff0c\u539f\u56e0\u4e0d\u89e3\u91ca\uff0c\u5982\u679c\u5b9e\u5728\u6253\u4e0d\u5f00\uff0c\u90a3\u5c31\u81ea\u5df1\u641c\u4e00\u4e0b\u5427\u3002","title":"Python\u64cd\u4f5c MySQL\u6570\u636e\u5e93"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#python-mysql","text":"Python \u6807\u51c6\u6570\u636e\u5e93\u63a5\u53e3\u4e3a Python DB-API\uff0cPython DB-API\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u6570\u636e\u5e93\u5e94\u7528\u7f16\u7a0b\u63a5\u53e3\u3002 \u4e0d\u540c\u7684\u6570\u636e\u5e93\u4f60\u9700\u8981\u4e0b\u8f7d\u4e0d\u540c\u7684DB API\u6a21\u5757\uff0c\u4f8b\u5982\u4f60\u9700\u8981\u8bbf\u95eeOracle\u6570\u636e\u5e93\u548cMysql\u6570\u636e\uff0c\u4f60\u9700\u8981\u4e0b\u8f7dOracle\u548cMySQL\u6570\u636e\u5e93\u6a21\u5757\u3002DB-API \u662f\u4e00\u4e2a\u89c4\u8303. \u5b83\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u5fc5\u987b\u7684\u5bf9\u8c61\u548c\u6570\u636e\u5e93\u5b58\u53d6\u65b9\u5f0f, \u4ee5\u4fbf\u4e3a\u5404\u79cd\u5404\u6837\u7684\u5e95\u5c42\u6570\u636e\u5e93\u7cfb\u7edf\u548c\u591a\u79cd\u591a\u6837\u7684\u6570\u636e\u5e93\u63a5\u53e3\u7a0b\u5e8f\u63d0\u4f9b\u4e00\u81f4\u7684\u8bbf\u95ee\u63a5\u53e3 \u3002Python\u7684DB-API\uff0c\u4e3a\u5927\u591a\u6570\u7684\u6570\u636e\u5e93\u5b9e\u73b0\u4e86\u63a5\u53e3\uff0c\u4f7f\u7528\u5b83\u8fde\u63a5\u5404\u6570\u636e\u5e93\u540e\uff0c\u5c31\u53ef\u4ee5\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u64cd\u4f5c\u5404\u6570\u636e\u5e93\u3002 Python DB-API\u4f7f\u7528\u6d41\u7a0b\uff1a \u5f15\u5165 API \u6a21\u5757\u3002 \u83b7\u53d6\u4e0e\u6570\u636e\u5e93\u7684\u8fde\u63a5\u3002 \u6267\u884cSQL\u8bed\u53e5\u548c\u5b58\u50a8\u8fc7\u7a0b\u3002 \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\u3002","title":"Python \u64cd\u4f5c MySQL \u6570\u636e\u5e93"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysqldb","text":"MySQLdb \u662f\u7528\u4e8ePython\u94fe\u63a5Mysql\u6570\u636e\u5e93\u7684\u63a5\u53e3\uff0c\u5b83\u5b9e\u73b0\u4e86 Python \u6570\u636e\u5e93 API \u89c4\u8303 V2.0\uff0c\u57fa\u4e8e MySQL C API \u4e0a\u5efa\u7acb\u7684\u3002","title":"\u4ec0\u4e48\u662fMySQLdb?"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysqldb_1","text":"\u4e3a\u4e86\u7528DB-API\u7f16\u5199MySQL\u811a\u672c\uff0c\u5fc5\u987b\u786e\u4fdd\u5df2\u7ecf\u5b89\u88c5\u4e86MySQL\u3002\u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5e76\u6267\u884c\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb \u5982\u679c\u6267\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff0c\u610f\u5473\u7740\u4f60\u6ca1\u6709\u5b89\u88c5 MySQLdb \u6a21\u5757\uff1a ```python Traceback (most recent call last): File \"test.py\", line 3, in import MySQLdb ImportError: No module named MySQLdb \u5b89\u88c5MySQLdb\uff0c\u8bf7\u8bbf\u95ee http://sourceforge.net/projects/mysql-python \uff0c(Linux\u5e73\u53f0\u53ef\u4ee5\u8bbf\u95ee\uff1ahttps://pypi.python.org/pypi/MySQL-python)\u4ece\u8fd9\u91cc\u53ef\u9009\u62e9\u9002\u5408\u60a8\u7684\u5e73\u53f0\u7684\u5b89\u88c5\u5305\uff0c\u5206\u4e3a\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6e90\u4ee3\u7801\u5b89\u88c5\u5305\u3002 \u5982\u679c\u60a8\u9009\u62e9\u4e8c\u8fdb\u5236\u6587\u4ef6\u53d1\u884c\u7248\u672c\u7684\u8bdd\uff0c\u5b89\u88c5\u8fc7\u7a0b\u57fa\u672c\u5b89\u88c5\u63d0\u793a\u5373\u53ef\u5b8c\u6210\u3002\u5982\u679c\u4ece\u6e90\u4ee3\u7801\u8fdb\u884c\u5b89\u88c5\u7684\u8bdd\uff0c\u5219\u9700\u8981\u5207\u6362\u5230MySQLdb\u53d1\u884c\u7248\u672c\u7684\u9876\u7ea7\u76ee\u5f55\uff0c\u5e76\u952e\u5165\u4e0b\u5217\u547d\u4ee4: ```bash $ gunzip MySQL-python-1.2.2.tar.gz $ tar -xvf MySQL-python-1.2.2.tar $ cd MySQL-python-1.2.2 $ python setup.py build $ python setup.py install **\u6ce8\u610f\uff1a**\u8bf7\u786e\u4fdd\u60a8\u6709root\u6743\u9650\u6765\u5b89\u88c5\u4e0a\u8ff0\u6a21\u5757\u3002 \u5b89\u88c5\u62a5\u95191: \u6267\u884c sudo python setup.py build \u51fa\u73b0\u95ee\u9898(SSL\u6743\u9650) AAAtest:MySQL-python-1.2.4b4 $ sudo python setup.py build Downloading http://pypi.python.org/packages/source/d/distribute/distribute-0.6.28.tar.gz urllib2.HTTPError: HTTP Error 403 : SSL is required \u53ef\u4ee5\u53c2\u8003 https://blog.csdn.net/bin642264643/article/details/91972480 \u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee\u8fd9\u4e2a\u94fe\u63a5\u8fdb\u884c\u4e0b\u8f7d\u3002\u4e0b\u8f7d\u7ed3\u675f\uff0c\u5e76\u653e\u5728\u8def\u5f84\u4e0b\uff0c\u7136\u540e\u6267\u884c python setup.py build \u5b89\u88c5\u62a5\u9519\uff1a\u51fa\u73b0\u4e0b\u9762\u7684\u95ee\u9898 running build running build_py copying MySQLdb/release.py -> build/lib.macosx-10.13-intel-2.7/MySQLdb running build_ext building '_mysql' extension cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch x86_64 -pipe -Dversion_info =( 1 ,2,4, 'beta' ,4 ) -D__version__ = 1 .2.4b4 -I/usr/local/mysql/include -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c _mysql.c -o build/temp.macosx-10.13-intel-2.7/_mysql.o _mysql.c:44:10: fatal error: 'my_config.h' file not found #include \"my_config.h\" ^~~~~~~~~~~~~ 1 error generated. error: command 'cc' failed with exit status 1 \u89e3\u51b3\u65b9\u6cd51\uff1a https://stackoverflow.com/questions/21638444/error-command-cc-failed-with-exit-status-1-mysqldb-installation-on-mac The problem is unused arguments passed to compiler. Try this before running your build code: export CFLAGS = -Qunused-arguments export CPPFLAGS = -Qunused-arguments \u4f7f\u7528\u4e0a\u9762\u7684\u7f16\u8bd1\u4e0d\u5904\u7406\u554a\u554a\uff01\u770b\u4e00\u4e0b\u6700\u65b0\u7684\u6559\u7a0b\u2018 \u53ef\u80fd\u662fpython2.7.10 \u6216\u80053\u7248\u672c\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u672c\u5730\u73b0\u5728\u4e24\u4e2a\u7248\u672c\u90fd\u5b89\u88c5 \u53ef\u80fd\u662f\u7248\u672c\u4e0d\u5bf9\u5e94\uff0cMySQL_python-1.2.5-cp27-none-win_amd64.whl \u652f\u6301windows\u7248\u672c\u6216\u8005linux\u7cfb\u7edf\uff0c\u4e0d\u652f\u6301Mac\u7cfb\u7edf\u3002 \u89e3\u51b3\u65b9\u6cd52\uff1a https://stackoverflow.com/questions/50864438/mac-pip-install-mysql-python-unsuccessful Installing of an older version of the MySQL worked for me: brew remove mysql brew install mysql@5.7 brew link --force mysql@5.7 pip install mysql-python","title":"\u5982\u4f55\u5b89\u88c5MySQLdb?"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_1","text":"\u8fde\u63a5\u6570\u636e\u5e93\u524d\uff0c\u8bf7\u5148\u786e\u8ba4\u4ee5\u4e0b\u4e8b\u9879\uff1a \u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u6570\u636e\u5e93 TESTDB. \u5728TESTDB\u6570\u636e\u5e93\u4e2d\u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u8868 EMPLOYEE EMPLOYEE\u8868\u5b57\u6bb5\u4e3a FIRST_NAME, LAST_NAME, AGE, SEX \u548c INCOME\u3002 \u8fde\u63a5\u6570\u636e\u5e93TESTDB\u4f7f\u7528\u7684\u7528\u6237\u540d\u4e3a \"testuser\" \uff0c\u5bc6\u7801\u4e3a \"test123\",\u4f60\u53ef\u4ee5\u53ef\u4ee5\u81ea\u5df1\u8bbe\u5b9a\u6216\u8005\u76f4\u63a5\u4f7f\u7528root\u7528\u6237\u540d\u53ca\u5176\u5bc6\u7801\uff0cMysql\u6570\u636e\u5e93\u7528\u6237\u6388\u6743\u8bf7\u4f7f\u7528Grant\u547d\u4ee4\u3002 \u5728\u4f60\u7684\u673a\u5b50\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 Python MySQLdb \u6a21\u5757\u3002 \u5982\u679c\u60a8\u5bf9sql\u8bed\u53e5\u4e0d\u719f\u6089\uff0c\u53ef\u4ee5\u8bbf\u95ee\u6211\u4eec\u7684 SQL\u57fa\u7840\u6559\u7a0b","title":"\u6570\u636e\u5e93\u8fde\u63a5"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_2","text":"\u4ee5\u4e0b\u5b9e\u4f8b\u94fe\u63a5Mysql\u7684TESTDB\u6570\u636e\u5e93\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # \u4f7f\u7528execute\u65b9\u6cd5\u6267\u884cSQL\u8bed\u53e5 cursor . execute ( \"SELECT VERSION()\" ) # \u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u4e00\u6761\u6570\u636e data = cursor . fetchone () print \"Database version : %s \" % data # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db . close () \u6267\u884c\u4ee5\u4e0a\u811a\u672c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Database version : 5.0.45","title":"\u5b9e\u4f8b\uff1a"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_3","text":"\u5982\u679c\u6570\u636e\u5e93\u8fde\u63a5\u5b58\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528execute()\u65b9\u6cd5\u6765\u4e3a\u6570\u636e\u5e93\u521b\u5efa\u8868\uff0c\u5982\u4e0b\u6240\u793a\u521b\u5efa\u8868EMPLOYEE\uff1a ```python","title":"\u521b\u5efa\u6570\u636e\u5e93\u8868"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#usrbinpython","text":"","title":"!/usr/bin/python"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#-coding-utf-8-","text":"import MySQLdb","title":"-- coding: UTF-8 --"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_4","text":"db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' )","title":"\u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#cursor","text":"cursor = db.cursor()","title":"\u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#execute","text":"cursor.execute(\"DROP TABLE IF EXISTS EMPLOYEE\")","title":"\u5982\u679c\u6570\u636e\u8868\u5df2\u7ecf\u5b58\u5728\u4f7f\u7528 execute() \u65b9\u6cd5\u5220\u9664\u8868\u3002"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#sql","text":"sql = \"\"\"CREATE TABLE EMPLOYEE ( FIRST_NAME CHAR(20) NOT NULL, LAST_NAME CHAR(20), AGE INT, SEX CHAR(1), INCOME FLOAT )\"\"\" cursor.execute(sql)","title":"\u521b\u5efa\u6570\u636e\u8868SQL\u8bed\u53e5"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_5","text":"db.close() ------ ## \u6570\u636e\u5e93\u63d2\u5165\u64cd\u4f5c \u4ee5\u4e0b\u5b9e\u4f8b\u4f7f\u7528\u6267\u884c SQL INSERT \u8bed\u53e5\u5411\u8868 EMPLOYEE \u63d2\u5165\u8bb0\u5f55\uff1a ```python #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db.cursor() # SQL \u63d2\u5165\u8bed\u53e5 sql = \"\"\"INSERT INTO EMPLOYEE(FIRST_NAME, LAST_NAME, AGE, SEX, INCOME) VALUES ('Mac', 'Mohan', 20, 'M', 2000)\"\"\" try: # \u6267\u884csql\u8bed\u53e5 cursor.execute(sql) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db.commit() except: # Rollback in case there is any error db.rollback() # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db.close() \u4ee5\u4e0a\u4f8b\u5b50\u4e5f\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # SQL \u63d2\u5165\u8bed\u53e5 sql = \"INSERT INTO EMPLOYEE(FIRST_NAME, \\ LAST_NAME, AGE, SEX, INCOME) \\ VALUES ( %s , %s , %s , %s , %s )\" % \\ ( 'Mac' , 'Mohan' , 20 , 'M' , 2000 ) try : # \u6267\u884csql\u8bed\u53e5 cursor . execute ( sql ) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db . close ()","title":"\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_6","text":"\u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528\u53d8\u91cf\u5411SQL\u8bed\u53e5\u4e2d\u4f20\u9012\u53c2\u6570: .................................. user_id = \"test123\" password = \"password\" con.execute('insert into Login values(%s, %s)' % \\ (user_id, password)) ..................................","title":"\u5b9e\u4f8b\uff1a"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_7","text":"Python\u67e5\u8be2Mysql\u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u5355\u6761\u6570\u636e, \u4f7f\u7528fetchall() \u65b9\u6cd5\u83b7\u53d6\u591a\u6761\u6570\u636e\u3002 fetchone(): \u8be5\u65b9\u6cd5\u83b7\u53d6\u4e0b\u4e00\u4e2a\u67e5\u8be2\u7ed3\u679c\u96c6\u3002\u7ed3\u679c\u96c6\u662f\u4e00\u4e2a\u5bf9\u8c61 **fetchall():**\u63a5\u6536\u5168\u90e8\u7684\u8fd4\u56de\u7ed3\u679c\u884c. rowcount: \u8fd9\u662f\u4e00\u4e2a\u53ea\u8bfb\u5c5e\u6027\uff0c\u5e76\u8fd4\u56de\u6267\u884cexecute()\u65b9\u6cd5\u540e\u5f71\u54cd\u7684\u884c\u6570\u3002","title":"\u6570\u636e\u5e93\u67e5\u8be2\u64cd\u4f5c"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_8","text":"\u67e5\u8be2EMPLOYEE\u8868\u4e2dsalary\uff08\u5de5\u8d44\uff09\u5b57\u6bb5\u5927\u4e8e1000\u7684\u6240\u6709\u6570\u636e\uff1a ```python","title":"\u5b9e\u4f8b\uff1a"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#usrbinpython_1","text":"","title":"!/usr/bin/python"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#-coding-utf-8-_1","text":"import MySQLdb","title":"-- coding: UTF-8 --"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_9","text":"db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' )","title":"\u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#cursor_1","text":"cursor = db.cursor()","title":"\u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#sql_1","text":"sql = \"SELECT * FROM EMPLOYEE \\ WHERE INCOME > %s\" % (1000) try: # \u6267\u884cSQL\u8bed\u53e5 cursor.execute(sql) # \u83b7\u53d6\u6240\u6709\u8bb0\u5f55\u5217\u8868 results = cursor.fetchall() for row in results: fname = row[0] lname = row[1] age = row[2] sex = row[3] income = row[4] # \u6253\u5370\u7ed3\u679c print \"fname=%s,lname=%s,age=%s,sex=%s,income=%s\" % \\ (fname, lname, age, sex, income ) except: print \"Error: unable to fecth data\"","title":"SQL \u67e5\u8be2\u8bed\u53e5"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_10","text":"db.close() \u4ee5\u4e0a\u811a\u672c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a fname=Mac, lname=Mohan, age=20, sex=M, income=2000 ------ ## \u6570\u636e\u5e93\u66f4\u65b0\u64cd\u4f5c \u66f4\u65b0\u64cd\u4f5c\u7528\u4e8e\u66f4\u65b0\u6570\u636e\u8868\u7684\u7684\u6570\u636e\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u5c06 EMPLOYEE \u8868\u4e2d\u7684 SEX \u5b57\u6bb5\u4e3a 'M' \u7684 AGE \u5b57\u6bb5\u9012\u589e 1\uff1a ```python #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db.cursor() # SQL \u66f4\u65b0\u8bed\u53e5 sql = \"UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = '%c'\" % ('M') try: # \u6267\u884cSQL\u8bed\u53e5 cursor.execute(sql) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db.commit() except: # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db.rollback() # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db.close()","title":"\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_11","text":"\u5220\u9664\u64cd\u4f5c\u7528\u4e8e\u5220\u9664\u6570\u636e\u8868\u4e2d\u7684\u6570\u636e\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86\u5220\u9664\u6570\u636e\u8868 EMPLOYEE \u4e2d AGE \u5927\u4e8e 20 \u7684\u6240\u6709\u6570\u636e\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # SQL \u5220\u9664\u8bed\u53e5 sql = \"DELETE FROM EMPLOYEE WHERE AGE > %s \" % ( 20 ) try : # \u6267\u884cSQL\u8bed\u53e5 cursor . execute ( sql ) # \u63d0\u4ea4\u4fee\u6539 db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () # \u5173\u95ed\u8fde\u63a5 db.close()","title":"\u5220\u9664\u64cd\u4f5c"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_12","text":"\u4e8b\u52a1\u673a\u5236\u53ef\u4ee5\u786e\u4fdd\u6570\u636e\u4e00\u81f4\u6027\u3002 \u4e8b\u52a1\u5e94\u8be5\u5177\u67094\u4e2a\u5c5e\u6027\uff1a\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u3001\u6301\u4e45\u6027\u3002\u8fd9\u56db\u4e2a\u5c5e\u6027\u901a\u5e38\u79f0\u4e3aACID\u7279\u6027\u3002 \u539f\u5b50\u6027\uff08atomicity\uff09\u3002\u4e00\u4e2a\u4e8b\u52a1\u662f\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\uff0c\u4e8b\u52a1\u4e2d\u5305\u62ec\u7684\u8bf8\u64cd\u4f5c\u8981\u4e48\u90fd\u505a\uff0c\u8981\u4e48\u90fd\u4e0d\u505a\u3002 \u4e00\u81f4\u6027\uff08consistency\uff09\u3002\u4e8b\u52a1\u5fc5\u987b\u662f\u4f7f\u6570\u636e\u5e93\u4ece\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u53d8\u5230\u53e6\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u3002\u4e00\u81f4\u6027\u4e0e\u539f\u5b50\u6027\u662f\u5bc6\u5207\u76f8\u5173\u7684\u3002 \u9694\u79bb\u6027\uff08isolation\uff09\u3002\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u80fd\u88ab\u5176\u4ed6\u4e8b\u52a1\u5e72\u6270\u3002\u5373\u4e00\u4e2a\u4e8b\u52a1\u5185\u90e8\u7684\u64cd\u4f5c\u53ca\u4f7f\u7528\u7684\u6570\u636e\u5bf9\u5e76\u53d1\u7684\u5176\u4ed6\u4e8b\u52a1\u662f\u9694\u79bb\u7684\uff0c\u5e76\u53d1\u6267\u884c\u7684\u5404\u4e2a\u4e8b\u52a1\u4e4b\u95f4\u4e0d\u80fd\u4e92\u76f8\u5e72\u6270\u3002 \u6301\u4e45\u6027\uff08durability\uff09\u3002\u6301\u7eed\u6027\u4e5f\u79f0\u6c38\u4e45\u6027\uff08permanence\uff09\uff0c\u6307\u4e00\u4e2a\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u5b83\u5bf9\u6570\u636e\u5e93\u4e2d\u6570\u636e\u7684\u6539\u53d8\u5c31\u5e94\u8be5\u662f\u6c38\u4e45\u6027\u7684\u3002\u63a5\u4e0b\u6765\u7684\u5176\u4ed6\u64cd\u4f5c\u6216\u6545\u969c\u4e0d\u5e94\u8be5\u5bf9\u5176\u6709\u4efb\u4f55\u5f71\u54cd\u3002 Python DB API 2.0 \u7684\u4e8b\u52a1\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u6cd5 commit \u6216 rollback\u3002","title":"\u6267\u884c\u4e8b\u52a1"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_13","text":"# SQL\u5220\u9664\u8bb0\u5f55\u8bed\u53e5 sql = \"DELETE FROM EMPLOYEE WHERE AGE > %s\" % ( 20 ) try : # \u6267\u884c SQL\u8bed\u53e5 cursor . execute ( sql ) # \u5411\u6570\u636e\u5e93\u63d0\u4ea4 db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () \u5bf9\u4e8e\u652f\u6301\u4e8b\u52a1\u7684\u6570\u636e\u5e93\uff0c \u5728Python\u6570\u636e\u5e93\u7f16\u7a0b\u4e2d\uff0c\u5f53\u6e38\u6807\u5efa\u7acb\u4e4b\u65f6\uff0c\u5c31\u81ea\u52a8\u5f00\u59cb\u4e86\u4e00\u4e2a\u9690\u5f62\u7684\u6570\u636e\u5e93\u4e8b\u52a1\u3002 commit()\u65b9\u6cd5\u6e38\u6807\u7684\u6240\u6709\u66f4\u65b0\u64cd\u4f5c\uff0crollback\uff08\uff09\u65b9\u6cd5\u56de\u6eda\u5f53\u524d\u6e38\u6807\u7684\u6240\u6709\u64cd\u4f5c\u3002\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u90fd\u5f00\u59cb\u4e86\u4e00\u4e2a\u65b0\u7684\u4e8b\u52a1\u3002","title":"\u5b9e\u4f8b\uff1a"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_14","text":"DB API\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u9519\u8bef\u53ca\u5f02\u5e38\uff0c\u4e0b\u8868\u5217\u51fa\u4e86\u8fd9\u4e9b\u9519\u8bef\u548c\u5f02\u5e38: \u5f02\u5e38 \u63cf\u8ff0 Warning \u5f53\u6709\u4e25\u91cd\u8b66\u544a\u65f6\u89e6\u53d1\uff0c\u4f8b\u5982\u63d2\u5165\u6570\u636e\u662f\u88ab\u622a\u65ad\u7b49\u7b49\u3002\u5fc5\u987b\u662f StandardError \u7684\u5b50\u7c7b\u3002 Error \u8b66\u544a\u4ee5\u5916\u6240\u6709\u5176\u4ed6\u9519\u8bef\u7c7b\u3002\u5fc5\u987b\u662f StandardError \u7684\u5b50\u7c7b\u3002 InterfaceError \u5f53\u6709\u6570\u636e\u5e93\u63a5\u53e3\u6a21\u5757\u672c\u8eab\u7684\u9519\u8bef\uff08\u800c\u4e0d\u662f\u6570\u636e\u5e93\u7684\u9519\u8bef\uff09\u53d1\u751f\u65f6\u89e6\u53d1\u3002 \u5fc5\u987b\u662fError\u7684\u5b50\u7c7b\u3002 DatabaseError \u548c\u6570\u636e\u5e93\u6709\u5173\u7684\u9519\u8bef\u53d1\u751f\u65f6\u89e6\u53d1\u3002 \u5fc5\u987b\u662fError\u7684\u5b50\u7c7b\u3002 DataError \u5f53\u6709\u6570\u636e\u5904\u7406\u65f6\u7684\u9519\u8bef\u53d1\u751f\u65f6\u89e6\u53d1\uff0c\u4f8b\u5982\uff1a\u9664\u96f6\u9519\u8bef\uff0c\u6570\u636e\u8d85\u8303\u56f4\u7b49\u7b49\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 OperationalError \u6307\u975e\u7528\u6237\u63a7\u5236\u7684\uff0c\u800c\u662f\u64cd\u4f5c\u6570\u636e\u5e93\u65f6\u53d1\u751f\u7684\u9519\u8bef\u3002\u4f8b\u5982\uff1a\u8fde\u63a5\u610f\u5916\u65ad\u5f00\u3001 \u6570\u636e\u5e93\u540d\u672a\u627e\u5230\u3001\u4e8b\u52a1\u5904\u7406\u5931\u8d25\u3001\u5185\u5b58\u5206\u914d\u9519\u8bef\u7b49\u7b49\u64cd\u4f5c\u6570\u636e\u5e93\u662f\u53d1\u751f\u7684\u9519\u8bef\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 IntegrityError \u5b8c\u6574\u6027\u76f8\u5173\u7684\u9519\u8bef\uff0c\u4f8b\u5982\u5916\u952e\u68c0\u67e5\u5931\u8d25\u7b49\u3002\u5fc5\u987b\u662fDatabaseError\u5b50\u7c7b\u3002 InternalError \u6570\u636e\u5e93\u7684\u5185\u90e8\u9519\u8bef\uff0c\u4f8b\u5982\u6e38\u6807\uff08cursor\uff09\u5931\u6548\u4e86\u3001\u4e8b\u52a1\u540c\u6b65\u5931\u8d25\u7b49\u7b49\u3002 \u5fc5\u987b\u662fDatabaseError\u5b50\u7c7b\u3002 ProgrammingError \u7a0b\u5e8f\u9519\u8bef\uff0c\u4f8b\u5982\u6570\u636e\u8868\uff08table\uff09\u6ca1\u627e\u5230\u6216\u5df2\u5b58\u5728\u3001SQL\u8bed\u53e5\u8bed\u6cd5\u9519\u8bef\u3001 \u53c2\u6570\u6570\u91cf\u9519\u8bef\u7b49\u7b49\u3002\u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 NotSupportedError \u4e0d\u652f\u6301\u9519\u8bef\uff0c\u6307\u4f7f\u7528\u4e86\u6570\u636e\u5e93\u4e0d\u652f\u6301\u7684\u51fd\u6570\u6216API\u7b49\u3002\u4f8b\u5982\u5728\u8fde\u63a5\u5bf9\u8c61\u4e0a \u4f7f\u7528.rollback()\u51fd\u6570\uff0c\u7136\u800c\u6570\u636e\u5e93\u5e76\u4e0d\u652f\u6301\u4e8b\u52a1\u6216\u8005\u4e8b\u52a1\u5df2\u5173\u95ed\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002","title":"\u9519\u8bef\u5904\u7406"},{"location":"02-database/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_15","text":"\u5173\u4e8eMysql\u7684\u8fde\u63a5\uff0c\u7ecf\u8fc7\u6478\u7d22\uff0c\u5efa\u8bae\u6b63\u6587\u4fee\u6539\u4e00\u4e0b\uff0c\u4f7f\u7528mysql\u5b98\u65b9\u63d0\u4f9b\u7684\u8fde\u63a5\u5668\uff0c\u6211\u76ee\u524d\u5b89\u88c5\u7684mysql\u662f8.0.12\u7248\u672c\uff0c\u6570\u636e\u5e93\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5b89\u88c5\u201cmysql-connector-python-8.0.12-py2.7-windows-x86-64bit\u201d\uff0c\u5f53\u7136\u4e86\uff0c\u8981\u6839\u636e\u81ea\u5df1\u7684\u64cd\u4f5c\u7cfb\u7edf\u548cpython\u7248\u672c\u4ee5\u53ca\u4f4d\u6570\u8fdb\u884c\u9009\u62e9\uff0c\u6211\u662fwin10\u768464\u4f4d\uff0cpython2.7\u768464\u4f4d\uff0c\u6545\u9009\u62e9\u7684\u4e0a\u8ff0\u63d2\u4ef6\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u76f4\u63a5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u8fdb\u884c\u6d4b\u8bd5\uff1a # -*- coding:utf-8 -*- import mysql.connector # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u7684\u7528\u6237\u540d\u3001\u5bc6\u7801\u53ca\u6570\u636e\u5e93\u540d\u79f0\u8fdb\u884c\u4fee\u6539\uff09 cnn = mysql . connector . connect ( user = 'root' , passwd = 'root' , database = 'testdb' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = cnn . cursor () # \u4f7f\u7528execute\u65b9\u6cd5\u6267\u884cSQL\u8bed\u53e5 cursor . execute ( \"SELECT VERSION()\" ) # \u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u4e00\u6761\u6570\u636e data = cursor . fetchone () print \"Database version : %s \" % data # \u6267\u884csql\u8bed\u53e5 cnn . close () \u663e\u793a\u7684\u7ed3\u679c\u5e94\u8be5\u5982\u4e0b \uff1a Database version : 8.0.12 \u663e\u793a\u7684\u7ed3\u679c\u5e94\u8be5\u5982\u4e0b\uff1a Database version : 8.0.12 \u76f8\u5173\u8d44\u6e90\u4e0b\u8f7d\u94fe\u63a5\u5982\u4e0b\uff1a Python2.7\uff08\u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u7248\u672c\u8bed\u53e5\u517c\u5bb9\u6027\u9ad8\uff0c\u9002\u5408\u5165\u95e8\uff09\uff1a https://blog.python.org/2018/05/python-2715-released.html Mysql8.0.12\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u9700\u8981\u9009\u62e9\u7248\u672c\uff09\uff1a https://dev.mysql.com/downloads/installer/ Mysql\u5b98\u65b9\u6570\u636e\u5e93\u8fde\u63a5\u5668\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u9700\u8981\u9009\u62e9\uff09\uff1a https://dev.mysql.com/downloads/connector/python/ \u5907\u6ce8\uff1a\u6709\u4e9b\u9875\u9762\u6253\u5f00\u4f1a\u5f88\u56f0\u96be\uff0c\u539f\u56e0\u4e0d\u89e3\u91ca\uff0c\u5982\u679c\u5b9e\u5728\u6253\u4e0d\u5f00\uff0c\u90a3\u5c31\u81ea\u5df1\u641c\u4e00\u4e0b\u5427\u3002","title":"\u8bf4\u660e"},{"location":"02-database/SQLite-API-Python/","text":"SQLite - Python \u00b6 \u4e3b\u8981\u7684\u76ee\u7684\u662f\u5b66\u4e60\u7b80\u5355\u7684 SQLite \u64cd\u4f5c\u547d\u4ee4 python 3 \u5185\u7f6e SQLite, \u8fd9\u91cc\u53ef\u4ee5\u65b9\u4fbf\u7684\u4f7f\u7528 Flask + SQLite \u7b80\u5355\u64cd\u4f5c\u8f7b\u91cf\u7ea7\u6570\u636e\u5e93 \u53ef\u4ee5\u4f7f\u7528 mysql \u548c sqlite \u5bf9\u6bd4\u5b66\u4e60 \u5b89\u88c5 \u00b6 SQLite3 \u53ef\u4f7f\u7528 sqlite3 \u6a21\u5757\u4e0e Python \u8fdb\u884c\u96c6\u6210\u3002sqlite3 \u6a21\u5757\u662f\u7531 Gerhard Haring \u7f16\u5199\u7684\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0e PEP 249 \u63cf\u8ff0\u7684 DB-API 2.0 \u89c4\u8303\u517c\u5bb9\u7684 SQL \u63a5\u53e3\u3002\u60a8\u4e0d\u9700\u8981\u5355\u72ec\u5b89\u88c5\u8be5\u6a21\u5757\uff0c\u56e0\u4e3a Python 2.5.x \u4ee5\u4e0a\u7248\u672c\u9ed8\u8ba4\u81ea\u5e26\u4e86\u8be5\u6a21\u5757\u3002 \u4e3a\u4e86\u4f7f\u7528 sqlite3 \u6a21\u5757\uff0c\u60a8\u9996\u5148\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u8868\u793a\u6570\u636e\u5e93\u7684\u8fde\u63a5\u5bf9\u8c61\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u521b\u5efa\u5149\u6807\u5bf9\u8c61\uff0c\u8fd9\u5c06\u5e2e\u52a9\u60a8\u6267\u884c\u6240\u6709\u7684 SQL \u8bed\u53e5\u3002 Python sqlite3 \u6a21\u5757 API \u00b6 \u4ee5\u4e0b\u662f\u91cd\u8981\u7684 sqlite3 \u6a21\u5757\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u6ee1\u8db3\u60a8\u5728 Python \u7a0b\u5e8f\u4e2d\u4f7f\u7528 SQLite \u6570\u636e\u5e93\u7684\u9700\u6c42\u3002\u5982\u679c\u60a8\u9700\u8981\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u67e5\u770b Python sqlite3 \u6a21\u5757\u7684\u5b98\u65b9\u6587\u6863\u3002 \u5e8f\u53f7 API & \u63cf\u8ff0 1 sqlite3.connect(database [,timeout ,other optional arguments]) \u8be5 API \u6253\u5f00\u4e00\u4e2a\u5230 SQLite \u6570\u636e\u5e93\u6587\u4ef6 database \u7684\u94fe\u63a5\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 \":memory:\" \u6765\u5728 RAM \u4e2d\u6253\u5f00\u4e00\u4e2a\u5230 database \u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u800c\u4e0d\u662f\u5728\u78c1\u76d8\u4e0a\u6253\u5f00\u3002\u5982\u679c\u6570\u636e\u5e93\u6210\u529f\u6253\u5f00\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u8fde\u63a5\u5bf9\u8c61\u3002\u5f53\u4e00\u4e2a\u6570\u636e\u5e93\u88ab\u591a\u4e2a\u8fde\u63a5\u8bbf\u95ee\uff0c\u4e14\u5176\u4e2d\u4e00\u4e2a\u4fee\u6539\u4e86\u6570\u636e\u5e93\uff0c\u6b64\u65f6 SQLite \u6570\u636e\u5e93\u88ab\u9501\u5b9a\uff0c\u76f4\u5230\u4e8b\u52a1\u63d0\u4ea4\u3002timeout \u53c2\u6570\u8868\u793a\u8fde\u63a5\u7b49\u5f85\u9501\u5b9a\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u76f4\u5230\u53d1\u751f\u5f02\u5e38\u65ad\u5f00\u8fde\u63a5\u3002timeout \u53c2\u6570\u9ed8\u8ba4\u662f 5.0\uff085 \u79d2\uff09\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u6570\u636e\u5e93\u540d\u79f0 filename \u4e0d\u5b58\u5728\uff0c\u5219\u8be5\u8c03\u7528\u5c06\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u5982\u679c\u60a8\u4e0d\u60f3\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u521b\u5efa\u6570\u636e\u5e93\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u6307\u5b9a\u5e26\u6709\u8def\u5f84\u7684\u6587\u4ef6\u540d\uff0c\u8fd9\u6837\u60a8\u5c31\u80fd\u5728\u4efb\u610f\u5730\u65b9\u521b\u5efa\u6570\u636e\u5e93\u3002 2 connection.cursor([cursorClass]) \u8be5\u4f8b\u7a0b\u521b\u5efa\u4e00\u4e2a cursor \uff0c\u5c06\u5728 Python \u6570\u636e\u5e93\u7f16\u7a0b\u4e2d\u7528\u5230\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u5355\u4e00\u7684\u53ef\u9009\u7684\u53c2\u6570 cursorClass\u3002\u5982\u679c\u63d0\u4f9b\u4e86\u8be5\u53c2\u6570\uff0c\u5219\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u6269\u5c55\u81ea sqlite3.Cursor \u7684\u81ea\u5b9a\u4e49\u7684 cursor \u7c7b\u3002 3 cursor.execute(sql [, optional parameters]) \u8be5\u4f8b\u7a0b\u6267\u884c\u4e00\u4e2a SQL \u8bed\u53e5\u3002\u8be5 SQL \u8bed\u53e5\u53ef\u4ee5\u88ab\u53c2\u6570\u5316\uff08\u5373\u4f7f\u7528\u5360\u4f4d\u7b26\u4ee3\u66ff SQL \u6587\u672c\uff09\u3002sqlite3 \u6a21\u5757\u652f\u6301\u4e24\u79cd\u7c7b\u578b\u7684\u5360\u4f4d\u7b26\uff1a\u95ee\u53f7\u548c\u547d\u540d\u5360\u4f4d\u7b26\uff08\u547d\u540d\u6837\u5f0f\uff09\u3002\u4f8b\u5982\uff1acursor.execute(\"insert into people values (?, ?)\", (who, age)) 4 connection.execute(sql [, optional parameters]) \u8be5\u4f8b\u7a0b\u662f\u4e0a\u9762\u6267\u884c\u7684\u7531\u5149\u6807\uff08cursor\uff09\u5bf9\u8c61\u63d0\u4f9b\u7684\u65b9\u6cd5\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u5b83\u901a\u8fc7\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u4e86\u4e00\u4e2a\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 execute \u65b9\u6cd5\u3002 5 cursor.executemany(sql, seq_of_parameters) \u8be5\u4f8b\u7a0b\u5bf9 seq_of_parameters \u4e2d\u7684\u6240\u6709\u53c2\u6570\u6216\u6620\u5c04\u6267\u884c\u4e00\u4e2a SQL \u547d\u4ee4\u3002 6 connection.executemany(sql[, parameters]) \u8be5\u4f8b\u7a0b\u662f\u4e00\u4e2a\u7531\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u7684\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 executemany \u65b9\u6cd5\u3002 7 cursor.executescript(sql_script) \u8be5\u4f8b\u7a0b\u4e00\u65e6\u63a5\u6536\u5230\u811a\u672c\uff0c\u4f1a\u6267\u884c\u591a\u4e2a SQL \u8bed\u53e5\u3002\u5b83\u9996\u5148\u6267\u884c COMMIT \u8bed\u53e5\uff0c\u7136\u540e\u6267\u884c\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u7684 SQL \u811a\u672c\u3002\u6240\u6709\u7684 SQL \u8bed\u53e5\u5e94\u8be5\u7528\u5206\u53f7\uff08;\uff09\u5206\u9694\u3002 8 connection.executescript(sql_script) \u8be5\u4f8b\u7a0b\u662f\u4e00\u4e2a\u7531\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u7684\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 executescript \u65b9\u6cd5\u3002 9 connection.total_changes() \u8be5\u4f8b\u7a0b\u8fd4\u56de\u81ea\u6570\u636e\u5e93\u8fde\u63a5\u6253\u5f00\u4ee5\u6765\u88ab\u4fee\u6539\u3001\u63d2\u5165\u6216\u5220\u9664\u7684\u6570\u636e\u5e93\u603b\u884c\u6570\u3002 10 connection.commit() \u8be5\u65b9\u6cd5\u63d0\u4ea4\u5f53\u524d\u7684\u4e8b\u52a1\u3002\u5982\u679c\u60a8\u672a\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u90a3\u4e48\u81ea\u60a8\u4e0a\u4e00\u6b21\u8c03\u7528 commit() \u4ee5\u6765\u6240\u505a\u7684\u4efb\u4f55\u52a8\u4f5c\u5bf9\u5176\u4ed6\u6570\u636e\u5e93\u8fde\u63a5\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 11 connection.rollback() \u8be5\u65b9\u6cd5\u56de\u6eda\u81ea\u4e0a\u4e00\u6b21\u8c03\u7528 commit() \u4ee5\u6765\u5bf9\u6570\u636e\u5e93\u6240\u505a\u7684\u66f4\u6539\u3002 12 connection.close() \u8be5\u65b9\u6cd5\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u4f1a\u81ea\u52a8\u8c03\u7528 commit()\u3002\u5982\u679c\u60a8\u4e4b\u524d\u672a\u8c03\u7528 commit() \u65b9\u6cd5\uff0c\u5c31\u76f4\u63a5\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u60a8\u6240\u505a\u7684\u6240\u6709\u66f4\u6539\u5c06\u5168\u90e8\u4e22\u5931\uff01 13 cursor.fetchone() \u8be5\u65b9\u6cd5\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u7684\u4e0b\u4e00\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5355\u4e00\u7684\u5e8f\u5217\uff0c\u5f53\u6ca1\u6709\u66f4\u591a\u53ef\u7528\u7684\u6570\u636e\u65f6\uff0c\u5219\u8fd4\u56de None\u3002 14 cursor.fetchmany([size=cursor.arraysize]) \u8be5\u65b9\u6cd5\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u7684\u4e0b\u4e00\u884c\u7ec4\uff0c\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u3002\u5f53\u6ca1\u6709\u66f4\u591a\u7684\u53ef\u7528\u7684\u884c\u65f6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u5217\u8868\u3002\u8be5\u65b9\u6cd5\u5c1d\u8bd5\u83b7\u53d6\u7531 size \u53c2\u6570\u6307\u5b9a\u7684\u5c3d\u53ef\u80fd\u591a\u7684\u884c\u3002 15 cursor.fetchall() \u8be5\u4f8b\u7a0b\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u6240\u6709\uff08\u5269\u4f59\uff09\u7684\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u3002\u5f53\u6ca1\u6709\u53ef\u7528\u7684\u884c\u65f6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u5217\u8868\u3002 \u8fde\u63a5\u6570\u636e\u5e93 \u00b6 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u8fde\u63a5\u5230\u4e00\u4e2a\u73b0\u6709\u7684\u6570\u636e\u5e93\u3002\u5982\u679c\u6570\u636e\u5e93\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u88ab\u521b\u5efa\uff0c\u6700\u540e\u5c06\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u5e93\u5bf9\u8c61\u3002 #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) print \"Opened database successfully\" ; # import sqlite3 conn = sqlite3 . connect ( 'michael.db' ) print \"open database successfully\" \u5728\u8fd9\u91cc\uff0c\u60a8\u4e5f\u53ef\u4ee5\u628a\u6570\u636e\u5e93\u540d\u79f0\u590d\u5236\u4e3a\u7279\u5b9a\u7684\u540d\u79f0 :memory: \uff0c\u8fd9\u6837\u5c31\u4f1a\u5728 RAM \u4e2d\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u6765\u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u521b\u5efa\u6211\u4eec\u7684\u6570\u636e\u5e93 test.db \u3002\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6539\u53d8\u8def\u5f84\u3002\u4fdd\u5b58\u4e0a\u9762\u4ee3\u7801\u5230 sqlite.py \u6587\u4ef6\u4e2d\uff0c\u5e76\u6309\u5982\u4e0b\u6240\u793a\u6267\u884c\u3002\u5982\u679c\u6570\u636e\u5e93\u6210\u529f\u521b\u5efa\uff0c\u90a3\u4e48\u4f1a\u663e\u793a\u4e0b\u9762\u6240\u793a\u7684\u6d88\u606f\uff1a $chmod +x sqlite.py $./sqlite.py Open database successfully \u521b\u5efa\u8868 \u00b6 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u6bb5\u5c06\u7528\u4e8e\u5728\u5148\u524d\u521b\u5efa\u7684\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a\u8868\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) print \"Opened database successfully\" ; c = conn . cursor () c . execute ( '''CREATE TABLE COMPANY (ID INT PRIMARY KEY NOT NULL, NAME TEXT NOT NULL, AGE INT NOT NULL, ADDRESS CHAR(50), SALARY REAL);''' ) print \"Table created successfully\" ; conn . commit () conn . close () import sqlite3 conn = sqlite3 . connect ( 'michael.db' ) print \"OPEN database successfully\" c = conn . cursor () c . execute ( '''CREATE TABLE ACCOUNT (ID INT PRIMARY KEY NOT NULL, NAME TEXT NOT NULL, AGE INT NOT NULL, ADDRESS CHAR(50), SALARY REAL);''' ) print \"create table successfully\" conn . commit () conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u5728 test.db \u4e2d\u521b\u5efa COMPANY \u8868\uff0c\u5e76\u663e\u793a\u4e0b\u9762\u6240\u793a\u7684\u6d88\u606f\uff1a Opened database successfully Table created successfully INSERT \u64cd\u4f5c \u00b6 \u4e0b\u9762\u7684 Python \u7a0b\u5e8f\u663e\u793a\u4e86\u5982\u4f55\u5728\u4e0a\u9762\u521b\u5efa\u7684 COMPANY \u8868\u4e2d\u521b\u5efa\u8bb0\u5f55\uff1a ```python !/usr/bin/python \u00b6 import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() print \"Opened database successfully\" c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (1, 'Paul', 32, 'California', 20000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (2, 'Allen', 25, 'Texas', 15000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (3, 'Teddy', 23, 'Norway', 20000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (4, 'Mark', 25, 'Rich-Mond ', 65000.00 )\") conn.commit() print \"Records created successfully\"; conn.close() import sqlite3 conn = sqlite3.connect('michael.db') c = conn.cursor() print 'Open successfully' c.execute(\"INSERT INTO ACCOUNT (ID,NAME,AGE,ADDRESS,SALARY) VALUES(1, 'Mike', 32, NULL, 10000)\") conn.commit() conn.close() \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u5728 COMPANY \u8868\u4e2d\u521b\u5efa\u7ed9\u5b9a\u8bb0\u5f55\uff0c\u5e76\u4f1a\u663e\u793a\u4ee5\u4e0b\u4e24\u884c\uff1a Opened database successfully Records created successfully ## SELECT \u64cd\u4f5c \u4e0b\u9762\u7684 Python \u7a0b\u5e8f\u663e\u793a\u4e86\u5982\u4f55\u4ece\u524d\u9762\u521b\u5efa\u7684 COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u8bb0\u5f55\uff1a ```python #!/usr/bin/python import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() cursor = c.execute(\"SELECT id, name, address, salary from COMPANY\") for row in cursor: print \"ID = \", row[0] print \"NAME = \", row[1] print \"ADDRESS = \", row[2] print \"SALARY = \", row[3], \"\\n\" conn.close() import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() cursor = c.execute(\"SELECT id, name, address, salary from ACCOUNT\") for row in cursor: print row[0] print row[1] print row[2] print row[3] conn.close() \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully ID = 1 NAME = Paul ADDRESS = California SALARY = 20000 .0 ID = 2 NAME = Allen ADDRESS = Texas SALARY = 15000 .0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000 .0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000 .0 Operation done successfully UPDATE \u64cd\u4f5c \u00b6 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528 UPDATE \u8bed\u53e5\u6765\u66f4\u65b0\u4efb\u4f55\u8bb0\u5f55\uff0c\u7136\u540e\u4ece COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u66f4\u65b0\u7684\u8bb0\u5f55\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) c = conn . cursor () c . execute ( \"UPDATE COMPANY set SALARY = 25000.00 where ID=1\" ) conn . commit () cursor = conn . execute ( \"SELECT id, name, address, salary from COMPANY\" ) for row in cursor : print \"ID = \" , row [ 0 ] print \"NAME = \" , row [ 1 ] print \"ADDRESS = \" , row [ 2 ] print \"SALARY = \" , row [ 3 ], \" \\n \" conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully Total number of rows updated : 1 ID = 1 NAME = Paul ADDRESS = California SALARY = 25000.0 ID = 2 NAME = Allen ADDRESS = Texas SALARY = 15000.0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000.0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000.0 Operation done successfully DELETE \u64cd\u4f5c \u00b6 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528 DELETE \u8bed\u53e5\u5220\u9664\u4efb\u4f55\u8bb0\u5f55\uff0c\u7136\u540e\u4ece COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u5269\u4f59\u7684\u8bb0\u5f55\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) c = conn . cursor () c . execute ( \"DELETE from COMPANY where ID=2;\" ) conn . commit () print \"Total number of rows deleted :\" , conn . total_changes cursor = conn . execute ( \"SELECT id, name, address, salary from COMPANY\" ) for row in cursor : print \"ID = \" , row [ 0 ] print \"NAME = \" , row [ 1 ] print \"ADDRESS = \" , row [ 2 ] print \"SALARY = \" , row [ 3 ], \" \\n \" conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully Total number of rows deleted : 1 ID = 1 NAME = Paul ADDRESS = California SALARY = 20000.0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000.0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000.0 Operation done successfully","title":"SQLite-API-Python"},{"location":"02-database/SQLite-API-Python/#sqlite-python","text":"\u4e3b\u8981\u7684\u76ee\u7684\u662f\u5b66\u4e60\u7b80\u5355\u7684 SQLite \u64cd\u4f5c\u547d\u4ee4 python 3 \u5185\u7f6e SQLite, \u8fd9\u91cc\u53ef\u4ee5\u65b9\u4fbf\u7684\u4f7f\u7528 Flask + SQLite \u7b80\u5355\u64cd\u4f5c\u8f7b\u91cf\u7ea7\u6570\u636e\u5e93 \u53ef\u4ee5\u4f7f\u7528 mysql \u548c sqlite \u5bf9\u6bd4\u5b66\u4e60","title":"SQLite - Python"},{"location":"02-database/SQLite-API-Python/#_1","text":"SQLite3 \u53ef\u4f7f\u7528 sqlite3 \u6a21\u5757\u4e0e Python \u8fdb\u884c\u96c6\u6210\u3002sqlite3 \u6a21\u5757\u662f\u7531 Gerhard Haring \u7f16\u5199\u7684\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0e PEP 249 \u63cf\u8ff0\u7684 DB-API 2.0 \u89c4\u8303\u517c\u5bb9\u7684 SQL \u63a5\u53e3\u3002\u60a8\u4e0d\u9700\u8981\u5355\u72ec\u5b89\u88c5\u8be5\u6a21\u5757\uff0c\u56e0\u4e3a Python 2.5.x \u4ee5\u4e0a\u7248\u672c\u9ed8\u8ba4\u81ea\u5e26\u4e86\u8be5\u6a21\u5757\u3002 \u4e3a\u4e86\u4f7f\u7528 sqlite3 \u6a21\u5757\uff0c\u60a8\u9996\u5148\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u8868\u793a\u6570\u636e\u5e93\u7684\u8fde\u63a5\u5bf9\u8c61\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u521b\u5efa\u5149\u6807\u5bf9\u8c61\uff0c\u8fd9\u5c06\u5e2e\u52a9\u60a8\u6267\u884c\u6240\u6709\u7684 SQL \u8bed\u53e5\u3002","title":"\u5b89\u88c5"},{"location":"02-database/SQLite-API-Python/#python-sqlite3-api","text":"\u4ee5\u4e0b\u662f\u91cd\u8981\u7684 sqlite3 \u6a21\u5757\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u6ee1\u8db3\u60a8\u5728 Python \u7a0b\u5e8f\u4e2d\u4f7f\u7528 SQLite \u6570\u636e\u5e93\u7684\u9700\u6c42\u3002\u5982\u679c\u60a8\u9700\u8981\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u67e5\u770b Python sqlite3 \u6a21\u5757\u7684\u5b98\u65b9\u6587\u6863\u3002 \u5e8f\u53f7 API & \u63cf\u8ff0 1 sqlite3.connect(database [,timeout ,other optional arguments]) \u8be5 API \u6253\u5f00\u4e00\u4e2a\u5230 SQLite \u6570\u636e\u5e93\u6587\u4ef6 database \u7684\u94fe\u63a5\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 \":memory:\" \u6765\u5728 RAM \u4e2d\u6253\u5f00\u4e00\u4e2a\u5230 database \u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u800c\u4e0d\u662f\u5728\u78c1\u76d8\u4e0a\u6253\u5f00\u3002\u5982\u679c\u6570\u636e\u5e93\u6210\u529f\u6253\u5f00\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u8fde\u63a5\u5bf9\u8c61\u3002\u5f53\u4e00\u4e2a\u6570\u636e\u5e93\u88ab\u591a\u4e2a\u8fde\u63a5\u8bbf\u95ee\uff0c\u4e14\u5176\u4e2d\u4e00\u4e2a\u4fee\u6539\u4e86\u6570\u636e\u5e93\uff0c\u6b64\u65f6 SQLite \u6570\u636e\u5e93\u88ab\u9501\u5b9a\uff0c\u76f4\u5230\u4e8b\u52a1\u63d0\u4ea4\u3002timeout \u53c2\u6570\u8868\u793a\u8fde\u63a5\u7b49\u5f85\u9501\u5b9a\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u76f4\u5230\u53d1\u751f\u5f02\u5e38\u65ad\u5f00\u8fde\u63a5\u3002timeout \u53c2\u6570\u9ed8\u8ba4\u662f 5.0\uff085 \u79d2\uff09\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u6570\u636e\u5e93\u540d\u79f0 filename \u4e0d\u5b58\u5728\uff0c\u5219\u8be5\u8c03\u7528\u5c06\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u5982\u679c\u60a8\u4e0d\u60f3\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u521b\u5efa\u6570\u636e\u5e93\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u6307\u5b9a\u5e26\u6709\u8def\u5f84\u7684\u6587\u4ef6\u540d\uff0c\u8fd9\u6837\u60a8\u5c31\u80fd\u5728\u4efb\u610f\u5730\u65b9\u521b\u5efa\u6570\u636e\u5e93\u3002 2 connection.cursor([cursorClass]) \u8be5\u4f8b\u7a0b\u521b\u5efa\u4e00\u4e2a cursor \uff0c\u5c06\u5728 Python \u6570\u636e\u5e93\u7f16\u7a0b\u4e2d\u7528\u5230\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u5355\u4e00\u7684\u53ef\u9009\u7684\u53c2\u6570 cursorClass\u3002\u5982\u679c\u63d0\u4f9b\u4e86\u8be5\u53c2\u6570\uff0c\u5219\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u6269\u5c55\u81ea sqlite3.Cursor \u7684\u81ea\u5b9a\u4e49\u7684 cursor \u7c7b\u3002 3 cursor.execute(sql [, optional parameters]) \u8be5\u4f8b\u7a0b\u6267\u884c\u4e00\u4e2a SQL \u8bed\u53e5\u3002\u8be5 SQL \u8bed\u53e5\u53ef\u4ee5\u88ab\u53c2\u6570\u5316\uff08\u5373\u4f7f\u7528\u5360\u4f4d\u7b26\u4ee3\u66ff SQL \u6587\u672c\uff09\u3002sqlite3 \u6a21\u5757\u652f\u6301\u4e24\u79cd\u7c7b\u578b\u7684\u5360\u4f4d\u7b26\uff1a\u95ee\u53f7\u548c\u547d\u540d\u5360\u4f4d\u7b26\uff08\u547d\u540d\u6837\u5f0f\uff09\u3002\u4f8b\u5982\uff1acursor.execute(\"insert into people values (?, ?)\", (who, age)) 4 connection.execute(sql [, optional parameters]) \u8be5\u4f8b\u7a0b\u662f\u4e0a\u9762\u6267\u884c\u7684\u7531\u5149\u6807\uff08cursor\uff09\u5bf9\u8c61\u63d0\u4f9b\u7684\u65b9\u6cd5\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u5b83\u901a\u8fc7\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u4e86\u4e00\u4e2a\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 execute \u65b9\u6cd5\u3002 5 cursor.executemany(sql, seq_of_parameters) \u8be5\u4f8b\u7a0b\u5bf9 seq_of_parameters \u4e2d\u7684\u6240\u6709\u53c2\u6570\u6216\u6620\u5c04\u6267\u884c\u4e00\u4e2a SQL \u547d\u4ee4\u3002 6 connection.executemany(sql[, parameters]) \u8be5\u4f8b\u7a0b\u662f\u4e00\u4e2a\u7531\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u7684\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 executemany \u65b9\u6cd5\u3002 7 cursor.executescript(sql_script) \u8be5\u4f8b\u7a0b\u4e00\u65e6\u63a5\u6536\u5230\u811a\u672c\uff0c\u4f1a\u6267\u884c\u591a\u4e2a SQL \u8bed\u53e5\u3002\u5b83\u9996\u5148\u6267\u884c COMMIT \u8bed\u53e5\uff0c\u7136\u540e\u6267\u884c\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u7684 SQL \u811a\u672c\u3002\u6240\u6709\u7684 SQL \u8bed\u53e5\u5e94\u8be5\u7528\u5206\u53f7\uff08;\uff09\u5206\u9694\u3002 8 connection.executescript(sql_script) \u8be5\u4f8b\u7a0b\u662f\u4e00\u4e2a\u7531\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u7684\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 executescript \u65b9\u6cd5\u3002 9 connection.total_changes() \u8be5\u4f8b\u7a0b\u8fd4\u56de\u81ea\u6570\u636e\u5e93\u8fde\u63a5\u6253\u5f00\u4ee5\u6765\u88ab\u4fee\u6539\u3001\u63d2\u5165\u6216\u5220\u9664\u7684\u6570\u636e\u5e93\u603b\u884c\u6570\u3002 10 connection.commit() \u8be5\u65b9\u6cd5\u63d0\u4ea4\u5f53\u524d\u7684\u4e8b\u52a1\u3002\u5982\u679c\u60a8\u672a\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u90a3\u4e48\u81ea\u60a8\u4e0a\u4e00\u6b21\u8c03\u7528 commit() \u4ee5\u6765\u6240\u505a\u7684\u4efb\u4f55\u52a8\u4f5c\u5bf9\u5176\u4ed6\u6570\u636e\u5e93\u8fde\u63a5\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 11 connection.rollback() \u8be5\u65b9\u6cd5\u56de\u6eda\u81ea\u4e0a\u4e00\u6b21\u8c03\u7528 commit() \u4ee5\u6765\u5bf9\u6570\u636e\u5e93\u6240\u505a\u7684\u66f4\u6539\u3002 12 connection.close() \u8be5\u65b9\u6cd5\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u4f1a\u81ea\u52a8\u8c03\u7528 commit()\u3002\u5982\u679c\u60a8\u4e4b\u524d\u672a\u8c03\u7528 commit() \u65b9\u6cd5\uff0c\u5c31\u76f4\u63a5\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u60a8\u6240\u505a\u7684\u6240\u6709\u66f4\u6539\u5c06\u5168\u90e8\u4e22\u5931\uff01 13 cursor.fetchone() \u8be5\u65b9\u6cd5\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u7684\u4e0b\u4e00\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5355\u4e00\u7684\u5e8f\u5217\uff0c\u5f53\u6ca1\u6709\u66f4\u591a\u53ef\u7528\u7684\u6570\u636e\u65f6\uff0c\u5219\u8fd4\u56de None\u3002 14 cursor.fetchmany([size=cursor.arraysize]) \u8be5\u65b9\u6cd5\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u7684\u4e0b\u4e00\u884c\u7ec4\uff0c\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u3002\u5f53\u6ca1\u6709\u66f4\u591a\u7684\u53ef\u7528\u7684\u884c\u65f6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u5217\u8868\u3002\u8be5\u65b9\u6cd5\u5c1d\u8bd5\u83b7\u53d6\u7531 size \u53c2\u6570\u6307\u5b9a\u7684\u5c3d\u53ef\u80fd\u591a\u7684\u884c\u3002 15 cursor.fetchall() \u8be5\u4f8b\u7a0b\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u6240\u6709\uff08\u5269\u4f59\uff09\u7684\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u3002\u5f53\u6ca1\u6709\u53ef\u7528\u7684\u884c\u65f6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u5217\u8868\u3002","title":"Python sqlite3 \u6a21\u5757 API"},{"location":"02-database/SQLite-API-Python/#_2","text":"\u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u8fde\u63a5\u5230\u4e00\u4e2a\u73b0\u6709\u7684\u6570\u636e\u5e93\u3002\u5982\u679c\u6570\u636e\u5e93\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u88ab\u521b\u5efa\uff0c\u6700\u540e\u5c06\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u5e93\u5bf9\u8c61\u3002 #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) print \"Opened database successfully\" ; # import sqlite3 conn = sqlite3 . connect ( 'michael.db' ) print \"open database successfully\" \u5728\u8fd9\u91cc\uff0c\u60a8\u4e5f\u53ef\u4ee5\u628a\u6570\u636e\u5e93\u540d\u79f0\u590d\u5236\u4e3a\u7279\u5b9a\u7684\u540d\u79f0 :memory: \uff0c\u8fd9\u6837\u5c31\u4f1a\u5728 RAM \u4e2d\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u6765\u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u521b\u5efa\u6211\u4eec\u7684\u6570\u636e\u5e93 test.db \u3002\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6539\u53d8\u8def\u5f84\u3002\u4fdd\u5b58\u4e0a\u9762\u4ee3\u7801\u5230 sqlite.py \u6587\u4ef6\u4e2d\uff0c\u5e76\u6309\u5982\u4e0b\u6240\u793a\u6267\u884c\u3002\u5982\u679c\u6570\u636e\u5e93\u6210\u529f\u521b\u5efa\uff0c\u90a3\u4e48\u4f1a\u663e\u793a\u4e0b\u9762\u6240\u793a\u7684\u6d88\u606f\uff1a $chmod +x sqlite.py $./sqlite.py Open database successfully","title":"\u8fde\u63a5\u6570\u636e\u5e93"},{"location":"02-database/SQLite-API-Python/#_3","text":"\u4e0b\u9762\u7684 Python \u4ee3\u7801\u6bb5\u5c06\u7528\u4e8e\u5728\u5148\u524d\u521b\u5efa\u7684\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a\u8868\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) print \"Opened database successfully\" ; c = conn . cursor () c . execute ( '''CREATE TABLE COMPANY (ID INT PRIMARY KEY NOT NULL, NAME TEXT NOT NULL, AGE INT NOT NULL, ADDRESS CHAR(50), SALARY REAL);''' ) print \"Table created successfully\" ; conn . commit () conn . close () import sqlite3 conn = sqlite3 . connect ( 'michael.db' ) print \"OPEN database successfully\" c = conn . cursor () c . execute ( '''CREATE TABLE ACCOUNT (ID INT PRIMARY KEY NOT NULL, NAME TEXT NOT NULL, AGE INT NOT NULL, ADDRESS CHAR(50), SALARY REAL);''' ) print \"create table successfully\" conn . commit () conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u5728 test.db \u4e2d\u521b\u5efa COMPANY \u8868\uff0c\u5e76\u663e\u793a\u4e0b\u9762\u6240\u793a\u7684\u6d88\u606f\uff1a Opened database successfully Table created successfully","title":"\u521b\u5efa\u8868"},{"location":"02-database/SQLite-API-Python/#insert","text":"\u4e0b\u9762\u7684 Python \u7a0b\u5e8f\u663e\u793a\u4e86\u5982\u4f55\u5728\u4e0a\u9762\u521b\u5efa\u7684 COMPANY \u8868\u4e2d\u521b\u5efa\u8bb0\u5f55\uff1a ```python","title":"INSERT \u64cd\u4f5c"},{"location":"02-database/SQLite-API-Python/#usrbinpython","text":"import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() print \"Opened database successfully\" c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (1, 'Paul', 32, 'California', 20000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (2, 'Allen', 25, 'Texas', 15000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (3, 'Teddy', 23, 'Norway', 20000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (4, 'Mark', 25, 'Rich-Mond ', 65000.00 )\") conn.commit() print \"Records created successfully\"; conn.close() import sqlite3 conn = sqlite3.connect('michael.db') c = conn.cursor() print 'Open successfully' c.execute(\"INSERT INTO ACCOUNT (ID,NAME,AGE,ADDRESS,SALARY) VALUES(1, 'Mike', 32, NULL, 10000)\") conn.commit() conn.close() \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u5728 COMPANY \u8868\u4e2d\u521b\u5efa\u7ed9\u5b9a\u8bb0\u5f55\uff0c\u5e76\u4f1a\u663e\u793a\u4ee5\u4e0b\u4e24\u884c\uff1a Opened database successfully Records created successfully ## SELECT \u64cd\u4f5c \u4e0b\u9762\u7684 Python \u7a0b\u5e8f\u663e\u793a\u4e86\u5982\u4f55\u4ece\u524d\u9762\u521b\u5efa\u7684 COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u8bb0\u5f55\uff1a ```python #!/usr/bin/python import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() cursor = c.execute(\"SELECT id, name, address, salary from COMPANY\") for row in cursor: print \"ID = \", row[0] print \"NAME = \", row[1] print \"ADDRESS = \", row[2] print \"SALARY = \", row[3], \"\\n\" conn.close() import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() cursor = c.execute(\"SELECT id, name, address, salary from ACCOUNT\") for row in cursor: print row[0] print row[1] print row[2] print row[3] conn.close() \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully ID = 1 NAME = Paul ADDRESS = California SALARY = 20000 .0 ID = 2 NAME = Allen ADDRESS = Texas SALARY = 15000 .0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000 .0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000 .0 Operation done successfully","title":"!/usr/bin/python"},{"location":"02-database/SQLite-API-Python/#update","text":"\u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528 UPDATE \u8bed\u53e5\u6765\u66f4\u65b0\u4efb\u4f55\u8bb0\u5f55\uff0c\u7136\u540e\u4ece COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u66f4\u65b0\u7684\u8bb0\u5f55\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) c = conn . cursor () c . execute ( \"UPDATE COMPANY set SALARY = 25000.00 where ID=1\" ) conn . commit () cursor = conn . execute ( \"SELECT id, name, address, salary from COMPANY\" ) for row in cursor : print \"ID = \" , row [ 0 ] print \"NAME = \" , row [ 1 ] print \"ADDRESS = \" , row [ 2 ] print \"SALARY = \" , row [ 3 ], \" \\n \" conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully Total number of rows updated : 1 ID = 1 NAME = Paul ADDRESS = California SALARY = 25000.0 ID = 2 NAME = Allen ADDRESS = Texas SALARY = 15000.0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000.0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000.0 Operation done successfully","title":"UPDATE \u64cd\u4f5c"},{"location":"02-database/SQLite-API-Python/#delete","text":"\u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528 DELETE \u8bed\u53e5\u5220\u9664\u4efb\u4f55\u8bb0\u5f55\uff0c\u7136\u540e\u4ece COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u5269\u4f59\u7684\u8bb0\u5f55\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) c = conn . cursor () c . execute ( \"DELETE from COMPANY where ID=2;\" ) conn . commit () print \"Total number of rows deleted :\" , conn . total_changes cursor = conn . execute ( \"SELECT id, name, address, salary from COMPANY\" ) for row in cursor : print \"ID = \" , row [ 0 ] print \"NAME = \" , row [ 1 ] print \"ADDRESS = \" , row [ 2 ] print \"SALARY = \" , row [ 3 ], \" \\n \" conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully Total number of rows deleted : 1 ID = 1 NAME = Paul ADDRESS = California SALARY = 20000.0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000.0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000.0 Operation done successfully","title":"DELETE \u64cd\u4f5c"},{"location":"02-database/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E5%BF%B5/","text":"\u6570\u636e\u5e93\u6982\u5ff5\u5165\u95e8 \u00b6 \u6570\u636e\u5e93 \u00b6 \u4ece\u73b0\u5b9e\u95ee\u9898\u4e2d\u62bd\u8c61\u603b\u7ed3\u51fa\u7684\u6570\u636e\u5e93\u3002 1\u3001\u73b0\u5b9e\u95ee\u9898\u4e2d\u7684\u6570\u636e\u5173\u7cfb 2\u3001\u73b0\u5b9e\u95ee\u9898\u4e2d\u7684\u6570\u636e\u5173\u7cfb\u8f6c\u5316\u6210\u6570\u636e\u5e93\uff08\u91cd\u70b9\uff09 3\u3001\u6570\u636e\u5e93\uff1a\u6309\u7167\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\uff0c\u5b58\u50a8\u548c\u7ba1\u7406\u6570\u636e\u7684\u4ed3\u5e93\uff1b\u5b58\u50a8\u5728\u672c\u5730\u6216\u8005\u7f51\u7edc\u7684\u7ed3\u6784\u5316\u7684\u8868\u683c\u3002 4\u3001\u6570\u636e\u5e93\u8f6c\u5316\uff08\u589e\u5220\u6539\u67e5\uff09\u589e\u52a0create\u3001\u5220\u9664delete\u3001\u6539\u53d8update\u3001\u67e5\u627eretrieve search 5\u3001\u6570\u636e\u5e93\u6570\u636e\u89e3\u51b3\u73b0\u5b9e\u95ee\u9898 \u7ed3\u6784\u5316\u6570\u636e\u5e93\u5206\u4e3a\u4e09\u90e8\u5206\uff08\u7c7b\u4f3c\u4e8eexcel\u8868\u683c\uff09\uff1a\u8868\u540d\u3001\u5b57\u6bb5\uff08\u8868\u5934\uff09\u3001\u7d22\u5f15\uff08\u53d8\u91cf\uff09\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u636e\u8868\u662f\u4e00\u4e2a\u4e8c\u7ef4\u8868\u683c\u3002 \u73b0\u5b9e\u95ee\u9898\u5bf9\u5e94\u5173\u7cfb\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\uff1a 1\u3001\u4e00\u5bf9\u4e00\uff1a\u67d0\u7528\u6237\u5bf9\u5e94\u67d0\u4e00\u4e2a\u8d2d\u7269\u8f66\uff1b 2\u3001\u4e00\u5bf9\u591a\uff1a\uff08\u67d0\u5546\u54c1\u5177\u6709\u591a\u79cd\u5c5e\u6027\uff1a\u4ef7\u683c\u3001\u5e93\u5b58\uff09\u4e00\u4e2a\u5de5\u5382\u5177\u6709\u591a\u4e2a\u5458\u5de5\uff1b \u5de5\u5382\u8868 \u7f16\u53f7-\u4e3b\u952e \u5de5\u5382\u540d 1 \u767e\u5ea6 2 \u65b0\u6d6a \u804c\u5de5\u8868 \u59d3\u540d \u5f15\u7528-\u5916\u952e \u674e\u654f 1 \u5f20\u534e 1 3\u3001\u591a\u5bf9\u591a\uff1a\u4e0d\u540c\u5e97\u94fa\u5177\u6709\u4e0d\u540c\u7684\u5546\u54c1\uff1b \u804c\u5de5\u8868 \u4e3b\u952e \u59d3\u540d 1 \u5f20\u4e09 2 \u674e\u56db 3 \u738b\u4e94 \u4ea7\u54c1\u8868 \u4e3b\u952e \u578b\u53f7 1 \u534e\u4e3a6 2 \u534e\u4e3a8 \u751f\u4ea7\u8bb0\u5f55\u8868 \u4e3b\u952e\uff08\u751f\u4ea7\u8bb0\u5f55\u8868\uff09 \u5916\u952e1\uff08=>\u804c\u5de5\u8868\uff09 \u5916\u952e3\uff08=>\u4ea7\u54c1\u8868\uff09 \u751f\u4ea7\u65e5\u671f 1 1 1 1.1 2 2 1 1.2 3 3 2 1.3 \u5f20\u4e09\u548c\u674e\u56db\u751f\u4ea7\u4e86\u534e\u4e3a6\uff1b\u738b\u4e94\u751f\u4ea7\u4e86\u534e\u4e3a8\uff1b\u751f\u4ea7\u65e5\u671f\u662f\u8fd9\u4e2a\u8868\u7684\u5c5e\u6027\uff1b \u4ece\u5b9e\u9645\u590d\u6742\u95ee\u9898=>\u5b9e\u9645\u7b80\u5355\u95ee\u9898=>\u6d41\u7a0b\u56fe=>\u6570\u636e\u5e93\uff08\u5b57\u6bb5\uff09 \u4e0a\u9762\u7684\u6570\u636e\u5e93\u5c31\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08\u4e09\u79cd\u5bf9\u5e94\u7c7b\u578b\uff09 \u8bbe\u8ba1\u539f\u578b-\u6570\u636e\u5e93\u5efa\u6a21-\u7f16\u5199\u540e\u53f0\u7a0b\u5e8f \u5728\u6570\u636e\u5e93\u4e2d\uff0c\u4e0d\u540c\u7684\u5bf9\u8c61\u5b58\u5728\u5173\u7cfb\uff1a\u4e00\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u8868\u53ef\u4ee5\u8868\u793a\uff08\u4e00\u5bf9\u591a\u589e\u52a0\u4e3b\u952e\uff09\uff1b\u591a\u5bf9\u591a\u7684\u60c5\u51b5\uff0c\u9700\u8981\u901a\u8fc7\u4e2d\u95f4\u5173\u7cfb\u8868\u8fdb\u884c\u94fe\u63a5\uff1a\u4e00\u4e2a\u4e3b\u952e\u5bf9\u5e94\u4e0d\u540c\u7684\u5916\u952e\uff1b\u9ed8\u8ba4\u4e24\u4e2a\u5b58\u5728\u591a\u5bf9\u591a\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u53d8\u91cf\uff0c\u8f6c\u5316\u6210\u82e5\u5e72\u4e2a\u4e00\u5bf9\u4e00\u7684\u5bf9\u5e94\u5173\u7cfb\uff1b \u6570\u636e\u5e93\u7684\u67e5\u8be2\u65b9\u6cd5\uff1a\u8f6c\u5316\u6210\u6570\u636e\u5e93\u7684\u6392\u5e8f\uff1b\u5bf9\u4e8e\u67d0\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u8fdb\u884c\u6392\u5e8f\uff1b\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u5c31\u662f\u53ef\u4ee5\u8fdb\u884c\u67e5\u8be2\uff1b\u6392\u5e8f\u7684\u591a\u79cd\u65b9\u6cd5\uff1b \u6848\u4f8b \u00b6 \u4e00\u4e2a\u7b80\u5355\u8d2d\u7269\u7f51\u7ad9\u7684\u6570\u636e\u5e93\u8bbe\u8ba1 1\u3001\u754c\u9762\u8bbe\u8ba1\uff1a \u4e70\u5bb6\u754c\u9762\uff1a\u7528\u6237\u6ce8\u518c\uff08\u5f39\u7a97\uff09\u3001\u7528\u6237\u767b\u5f55\uff08\u5f39\u7a97\uff09\u3001\u5546\u54c1\u5c55\u793a\u754c\u9762\uff08\u4e3b\u9875\uff09\u3001\u8d2d\u7269\u8f66\u754c\u9762\uff08\u4e3b\u9875\uff09\u3001\u8d2d\u4e70\u754c\u9762\uff08\u6b21\u7ea7\u4e3b\u9875\uff09\u3001\u8ba2\u5355\u754c\u9762\uff08\u6b21\u7ea7\u4e3b\u9875\uff09\u3001\u652f\u4ed8\u754c\u9762\uff08\u7b2c\u4e09\u65b9\u8df3\u8f6c\uff09\u3002 \u5356\u5bb6\u754c\u9762\uff1a\u5356\u5bb6\u6ce8\u518c\u3001\u5356\u5bb6\u767b\u5f55\u3001\u5546\u54c1\u4e0a\u67b6\u754c\u9762\u3001\u5546\u54c1\u5e93\u5b58\u72b6\u6001\u3001\u5546\u5e97\u5e03\u7f6e\u3001\u7edf\u8ba1\u754c\u9762\u3002 2\u3001\u6570\u636e\u5206\u6790 \u4e70\u5bb6\u7aef\uff1a\u4e70\u5bb6\uff08\u59d3\u540d\u7535\u8bdd\uff09\u5546\u54c1\uff08\u4ef7\u683c\u540d\u79f0\uff09\u8d2d\u7269\u8f66\u3001\u8ba2\u5355\u7b49\u8868 \u5356\u5bb6\u7aef\uff1a\u5356\u5bb6\u4fe1\u606f\u3001\u5546\u54c1\u4e0a\u67b6\u4fe1\u606f\uff1b \u6700\u590d\u6742\u7684\u8868\uff08\u8d2d\u7269\u8f66\u8868\u548c\u5546\u54c1\u8868\u7684\u5173\u7cfb\uff09 1.\u4e70\u5bb6\u8868 \u4e3b\u952e \u59d3\u540d \u5bc6\u7801 \u5730\u5740 \u7535\u8bdd 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 2.\u5356\u5bb6\u8868 \u4e3b\u952e \u59d3\u540d \u5bc6\u7801 \u5730\u5740 \u7535\u8bdd 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 3.\u5546\u54c1\u8868 \u4e3b\u952e \u5546\u54c1\u540d\u79f0 \u4ef7\u683c \u5e93\u5b58 \u5356\u5bb6\u4e3b\u952e\uff082\uff09 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 4.\u8ba2\u5355\u8868 \u4e3b\u952e \u5546\u54c1\u4e3b\u952e\uff083\uff09 \u5355\u4ef7 \u6570\u91cf \u4e70\u5bb6\u4e3b\u952e\uff081\uff09 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 5.\u8d2d\u7269\u8f66\u8868 \u4e3b\u952e \u4e70\u5bb6\u4e3b\u952e\uff081\uff09 \u5546\u54c1\u4e3b\u952e\uff083\uff09 \u6570\u91cf \u603b\u4ef7 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u603b\u7ed3\uff1a\u6570\u636e\u53ef\u662f\u5b58\u50a8\u7ed3\u6784\u5316\u8868\u683c\u6570\u636e\u7684\u4ed3\u5e93\uff0c\u7531\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884cCURD\u64cd\u4f5c\uff0c\u4ece\u800c\u5b9e\u73b0\u8bb0\u5f55\u7684\u76ee\u7684\uff0c\u5b8c\u6210\u6570\u636e\u63d0\u53d6\u548c\u5206\u6790\u7684\u4efb\u52a1\u3002","title":"\u6570\u636e\u5e93\u6982\u5ff5"},{"location":"02-database/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E5%BF%B5/#_1","text":"","title":"\u6570\u636e\u5e93\u6982\u5ff5\u5165\u95e8"},{"location":"02-database/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E5%BF%B5/#_2","text":"\u4ece\u73b0\u5b9e\u95ee\u9898\u4e2d\u62bd\u8c61\u603b\u7ed3\u51fa\u7684\u6570\u636e\u5e93\u3002 1\u3001\u73b0\u5b9e\u95ee\u9898\u4e2d\u7684\u6570\u636e\u5173\u7cfb 2\u3001\u73b0\u5b9e\u95ee\u9898\u4e2d\u7684\u6570\u636e\u5173\u7cfb\u8f6c\u5316\u6210\u6570\u636e\u5e93\uff08\u91cd\u70b9\uff09 3\u3001\u6570\u636e\u5e93\uff1a\u6309\u7167\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\uff0c\u5b58\u50a8\u548c\u7ba1\u7406\u6570\u636e\u7684\u4ed3\u5e93\uff1b\u5b58\u50a8\u5728\u672c\u5730\u6216\u8005\u7f51\u7edc\u7684\u7ed3\u6784\u5316\u7684\u8868\u683c\u3002 4\u3001\u6570\u636e\u5e93\u8f6c\u5316\uff08\u589e\u5220\u6539\u67e5\uff09\u589e\u52a0create\u3001\u5220\u9664delete\u3001\u6539\u53d8update\u3001\u67e5\u627eretrieve search 5\u3001\u6570\u636e\u5e93\u6570\u636e\u89e3\u51b3\u73b0\u5b9e\u95ee\u9898 \u7ed3\u6784\u5316\u6570\u636e\u5e93\u5206\u4e3a\u4e09\u90e8\u5206\uff08\u7c7b\u4f3c\u4e8eexcel\u8868\u683c\uff09\uff1a\u8868\u540d\u3001\u5b57\u6bb5\uff08\u8868\u5934\uff09\u3001\u7d22\u5f15\uff08\u53d8\u91cf\uff09\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u636e\u8868\u662f\u4e00\u4e2a\u4e8c\u7ef4\u8868\u683c\u3002 \u73b0\u5b9e\u95ee\u9898\u5bf9\u5e94\u5173\u7cfb\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\uff1a 1\u3001\u4e00\u5bf9\u4e00\uff1a\u67d0\u7528\u6237\u5bf9\u5e94\u67d0\u4e00\u4e2a\u8d2d\u7269\u8f66\uff1b 2\u3001\u4e00\u5bf9\u591a\uff1a\uff08\u67d0\u5546\u54c1\u5177\u6709\u591a\u79cd\u5c5e\u6027\uff1a\u4ef7\u683c\u3001\u5e93\u5b58\uff09\u4e00\u4e2a\u5de5\u5382\u5177\u6709\u591a\u4e2a\u5458\u5de5\uff1b \u5de5\u5382\u8868 \u7f16\u53f7-\u4e3b\u952e \u5de5\u5382\u540d 1 \u767e\u5ea6 2 \u65b0\u6d6a \u804c\u5de5\u8868 \u59d3\u540d \u5f15\u7528-\u5916\u952e \u674e\u654f 1 \u5f20\u534e 1 3\u3001\u591a\u5bf9\u591a\uff1a\u4e0d\u540c\u5e97\u94fa\u5177\u6709\u4e0d\u540c\u7684\u5546\u54c1\uff1b \u804c\u5de5\u8868 \u4e3b\u952e \u59d3\u540d 1 \u5f20\u4e09 2 \u674e\u56db 3 \u738b\u4e94 \u4ea7\u54c1\u8868 \u4e3b\u952e \u578b\u53f7 1 \u534e\u4e3a6 2 \u534e\u4e3a8 \u751f\u4ea7\u8bb0\u5f55\u8868 \u4e3b\u952e\uff08\u751f\u4ea7\u8bb0\u5f55\u8868\uff09 \u5916\u952e1\uff08=>\u804c\u5de5\u8868\uff09 \u5916\u952e3\uff08=>\u4ea7\u54c1\u8868\uff09 \u751f\u4ea7\u65e5\u671f 1 1 1 1.1 2 2 1 1.2 3 3 2 1.3 \u5f20\u4e09\u548c\u674e\u56db\u751f\u4ea7\u4e86\u534e\u4e3a6\uff1b\u738b\u4e94\u751f\u4ea7\u4e86\u534e\u4e3a8\uff1b\u751f\u4ea7\u65e5\u671f\u662f\u8fd9\u4e2a\u8868\u7684\u5c5e\u6027\uff1b \u4ece\u5b9e\u9645\u590d\u6742\u95ee\u9898=>\u5b9e\u9645\u7b80\u5355\u95ee\u9898=>\u6d41\u7a0b\u56fe=>\u6570\u636e\u5e93\uff08\u5b57\u6bb5\uff09 \u4e0a\u9762\u7684\u6570\u636e\u5e93\u5c31\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08\u4e09\u79cd\u5bf9\u5e94\u7c7b\u578b\uff09 \u8bbe\u8ba1\u539f\u578b-\u6570\u636e\u5e93\u5efa\u6a21-\u7f16\u5199\u540e\u53f0\u7a0b\u5e8f \u5728\u6570\u636e\u5e93\u4e2d\uff0c\u4e0d\u540c\u7684\u5bf9\u8c61\u5b58\u5728\u5173\u7cfb\uff1a\u4e00\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u8868\u53ef\u4ee5\u8868\u793a\uff08\u4e00\u5bf9\u591a\u589e\u52a0\u4e3b\u952e\uff09\uff1b\u591a\u5bf9\u591a\u7684\u60c5\u51b5\uff0c\u9700\u8981\u901a\u8fc7\u4e2d\u95f4\u5173\u7cfb\u8868\u8fdb\u884c\u94fe\u63a5\uff1a\u4e00\u4e2a\u4e3b\u952e\u5bf9\u5e94\u4e0d\u540c\u7684\u5916\u952e\uff1b\u9ed8\u8ba4\u4e24\u4e2a\u5b58\u5728\u591a\u5bf9\u591a\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u53d8\u91cf\uff0c\u8f6c\u5316\u6210\u82e5\u5e72\u4e2a\u4e00\u5bf9\u4e00\u7684\u5bf9\u5e94\u5173\u7cfb\uff1b \u6570\u636e\u5e93\u7684\u67e5\u8be2\u65b9\u6cd5\uff1a\u8f6c\u5316\u6210\u6570\u636e\u5e93\u7684\u6392\u5e8f\uff1b\u5bf9\u4e8e\u67d0\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u8fdb\u884c\u6392\u5e8f\uff1b\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u5c31\u662f\u53ef\u4ee5\u8fdb\u884c\u67e5\u8be2\uff1b\u6392\u5e8f\u7684\u591a\u79cd\u65b9\u6cd5\uff1b","title":"\u6570\u636e\u5e93"},{"location":"02-database/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E5%BF%B5/#_3","text":"\u4e00\u4e2a\u7b80\u5355\u8d2d\u7269\u7f51\u7ad9\u7684\u6570\u636e\u5e93\u8bbe\u8ba1 1\u3001\u754c\u9762\u8bbe\u8ba1\uff1a \u4e70\u5bb6\u754c\u9762\uff1a\u7528\u6237\u6ce8\u518c\uff08\u5f39\u7a97\uff09\u3001\u7528\u6237\u767b\u5f55\uff08\u5f39\u7a97\uff09\u3001\u5546\u54c1\u5c55\u793a\u754c\u9762\uff08\u4e3b\u9875\uff09\u3001\u8d2d\u7269\u8f66\u754c\u9762\uff08\u4e3b\u9875\uff09\u3001\u8d2d\u4e70\u754c\u9762\uff08\u6b21\u7ea7\u4e3b\u9875\uff09\u3001\u8ba2\u5355\u754c\u9762\uff08\u6b21\u7ea7\u4e3b\u9875\uff09\u3001\u652f\u4ed8\u754c\u9762\uff08\u7b2c\u4e09\u65b9\u8df3\u8f6c\uff09\u3002 \u5356\u5bb6\u754c\u9762\uff1a\u5356\u5bb6\u6ce8\u518c\u3001\u5356\u5bb6\u767b\u5f55\u3001\u5546\u54c1\u4e0a\u67b6\u754c\u9762\u3001\u5546\u54c1\u5e93\u5b58\u72b6\u6001\u3001\u5546\u5e97\u5e03\u7f6e\u3001\u7edf\u8ba1\u754c\u9762\u3002 2\u3001\u6570\u636e\u5206\u6790 \u4e70\u5bb6\u7aef\uff1a\u4e70\u5bb6\uff08\u59d3\u540d\u7535\u8bdd\uff09\u5546\u54c1\uff08\u4ef7\u683c\u540d\u79f0\uff09\u8d2d\u7269\u8f66\u3001\u8ba2\u5355\u7b49\u8868 \u5356\u5bb6\u7aef\uff1a\u5356\u5bb6\u4fe1\u606f\u3001\u5546\u54c1\u4e0a\u67b6\u4fe1\u606f\uff1b \u6700\u590d\u6742\u7684\u8868\uff08\u8d2d\u7269\u8f66\u8868\u548c\u5546\u54c1\u8868\u7684\u5173\u7cfb\uff09 1.\u4e70\u5bb6\u8868 \u4e3b\u952e \u59d3\u540d \u5bc6\u7801 \u5730\u5740 \u7535\u8bdd 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 2.\u5356\u5bb6\u8868 \u4e3b\u952e \u59d3\u540d \u5bc6\u7801 \u5730\u5740 \u7535\u8bdd 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 3.\u5546\u54c1\u8868 \u4e3b\u952e \u5546\u54c1\u540d\u79f0 \u4ef7\u683c \u5e93\u5b58 \u5356\u5bb6\u4e3b\u952e\uff082\uff09 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 4.\u8ba2\u5355\u8868 \u4e3b\u952e \u5546\u54c1\u4e3b\u952e\uff083\uff09 \u5355\u4ef7 \u6570\u91cf \u4e70\u5bb6\u4e3b\u952e\uff081\uff09 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 5.\u8d2d\u7269\u8f66\u8868 \u4e3b\u952e \u4e70\u5bb6\u4e3b\u952e\uff081\uff09 \u5546\u54c1\u4e3b\u952e\uff083\uff09 \u6570\u91cf \u603b\u4ef7 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u603b\u7ed3\uff1a\u6570\u636e\u53ef\u662f\u5b58\u50a8\u7ed3\u6784\u5316\u8868\u683c\u6570\u636e\u7684\u4ed3\u5e93\uff0c\u7531\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884cCURD\u64cd\u4f5c\uff0c\u4ece\u800c\u5b9e\u73b0\u8bb0\u5f55\u7684\u76ee\u7684\uff0c\u5b8c\u6210\u6570\u636e\u63d0\u53d6\u548c\u5206\u6790\u7684\u4efb\u52a1\u3002","title":"\u6848\u4f8b"},{"location":"02-database/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/","text":"\u5982\u4f55\u81ea\u5b66MySQL\u6570\u636e\u5e93 \u00b6 MySQL\u77e5\u8bc6\u4f53\u7cfb \u00b6 \u57fa\u7840\uff1a sql\u8bed\u53e5 \u8868\u7ed3\u6784\u8bbe\u8ba1 \u8c03\u4f18\uff1a \u7d22\u5f15\u3001\u6162\u67e5\u8be2\u4f18\u5316 \u914d\u7f6e\u53c2\u6570\u8c03\u4f18 \u6838\u5fc3\u539f\u7406\uff1a InnoDb\u5b58\u50a8\u5f15\u64ce \uff08\u5305\u62ec\u9694\u79bb\u7ea7\u522b\u3001\u4e8b\u52a1\u3001\u9501\u3001\u7f13\u5b58\u6c60\u3001\u56de\u6eda\u65e5\u5fd7\u7b49\u7b49\uff09 Mysqld (\u5305\u62ec\u8fde\u63a5\u7ba1\u7406\u3001\u8fdb\u7a0b\u7ba1\u7406\u3001\u67e5\u8be2\u7f13\u5b58\u3001\u67e5\u8be2\u4f18\u5316\u3001\u65e5\u5fd7\u7b49\u7b49) \u67b6\u6784\u4e0e\u8fd0\u7ef4\uff1a \u7528\u6237\u4e0e\u6743\u9650\u3001\u5b89\u5168 \u5907\u4efd\u4e0e\u6062\u590d \u65e5\u5fd7 \u5206\u5e03\u5f0f\u4e0e\u9ad8\u53ef\u7528 MySQL\u96f6\u57fa\u7840\u56fe\u89e3 \u00b6 \u9996\u5148\uff0c\u5b66\u4e60\u57fa\u672c\u7684SQL\u8bed\u6cd5\u3002\u4f60\u5c31\u53ef\u4ee5\u7f16\u5199SQL\u8bed\u53e5\u4e86\u3002\u63a8\u8350\uff1aW3Schools\u7684 SQL \u6559\u7a0b \u3002 \u5176\u6b21\uff0c\u5b66\u4e60\u6570\u636e\u5e93\u7684\u4e3b\u8981\u529f\u80fd\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u6bd4\u5982\u7528\u6237\u76f8\u5173\u6216\u8005\u6743\u9650\u76f8\u5173\u7b49\u7b49\u3002 \u6211\u63a8\u8350\u4e24\u672c\u4e66\uff1a \u4e00\u3001\u300aMySQL\u5fc5\u77e5\u5fc5\u4f1a\u300b \u8fd9\u672c\u4e66\u8bb2\u7684\u975e\u5e38\u5168\uff0c\u4ece\u57fa\u672c\u6982\u5ff5\uff0c\u5230\u67e5\u8be2\u5230\u63d2\u5165\u65b0\u5efa\u8868\uff0c\u7528\u6237\u7684\u7ba1\u7406\uff0c\u90fd\u6709\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u975e\u5e38\u9002\u5408\u6ca1\u6709\u4efb\u4f55\u57fa\u7840\u7684\u540c\u5b66\u6765\u5b66\u4e60Mysql\uff0c\u603b\u4e4b\u8fd9\u672c\u4e66\u5b66\u4e60\u7684\u65b9\u6cd5\u5c31\u662f\uff1a1\u3001\u5341\u5206\u949f\u4e86\u89e3\u4e0b\u6570\u636e\u5e93\u7684\u57fa\u672c\u6982\u5ff5 2\u3001\u627e\u5230\u7ec3\u624b\u7684\u6570\u636e\u5e93 3\u3001\u5bf9\u7167\u7740\u4e0a\u9762\u7684\u5185\u5bb9\u53bb\u6572\u3002\u672c\u4e66\u91cc\u4e5f\u6709\u5927\u91cf\u7684\u5185\u5bb9\u662f\u8bb2sql\u7684\uff0c\u53ef\u4ee5\u7ed3\u5408w3c\u7684sql\u6559\u7a0b\u4e00\u8d77\uff0c\u6709\u53d6\u820d\u5730\u770b\u3002 \u4e8c\u3001\u300a\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\u300b\u8fd9\u672c\u4e66\u662fdba\u5fc5\u770b\u7684\u3002 \u770b\u5b8c\u8fd9\u4e9b\u5e76\u4e14\u5b9e\u8df5+\u601d\u8003\u4e4b\u540e\uff0c\u53ef\u4ee5\u7b97\u5165\u95e8\u4e86\u3002 MySQL\u6df1\u5165\u5b66\u4e60 \u00b6 \u6211\u63a8\u8350\u51e0\u672c\u4e66\uff08\u5f88\u591a\u5927\u795e\u90fd\u8fd9\u4e48\u63a8\u8350\uff09\uff0c\u300a\u9ad8\u6027\u80fdMySQL(\u7b2c3\u7248)\u300b\u3001 \u300aMySQL\u6280\u672f\u5185\u5e55(\u7b2c4\u7248)\u300b\uff0c\u300aMySQL\u6280\u672f\u5185\u5e55 InnoDB\u5b58\u50a8\u5f15\u64ce\u300b\uff0c\u300a\u6df1\u5165\u7406\u89e3MySQL\u300b\u8fd8\u6709Mysql\u7684\u5b98\u7f51\u3002\u8bfb\u5b8c\u8fd9\u4e9b\u4e1c\u897f\uff0c\u518d\u52a0\u4e9b\u4e30\u5bcc\u7684\u7ecf\u9a8c\uff0c\u7406\u8bba\u4e0a\u6765\u8bb2\u5c31\u5177\u5907DBA\u7684\u6c34\u5e73\u4e86\u3002 \u5341\u5206\u63a8\u8350\u9605\u8bfb Planet MySQL \u4e0a\u6c47\u603b\u7684\u535a\u5ba2\uff0c\u7279\u522b\u662f Percona's MySQL & InnoDB performance and scalability blog . \u6211\u95ee\u4f60\uff0c\u9762\u5bf9\u4e00\u4e2a\u5e76\u53d1\u91cf\u6bd4\u8f83\u9ad8\u7684\u573a\u666f\uff0c\u5982\u4f55\u914d\u7f6emysql\u7684\u8fde\u63a5\u6570\uff1f \u4f60\u53ef\u80fd\u4f1a\u56de\u7b54\uff1a\u201c\u54e6\uff0c\u5c31\u662f\u8c03\u9ad8max_connection\u7684\u6570\u503c\u5427\u3002\u201d \u90a3\uff0c\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\u8c03\u5230\u591a\u5c11\u662f\u6700\u5408\u9002\u7684\u5462\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bbe\u7f6e\u5c31\u6700\u5408\u9002\u5462\uff1f \u4e5f\u8bb8\u4f60\u4f1a\u56de\u7b54\uff1a\u201c\u6069\u6211\u77e5\u9053\uff0c\u53ef\u4ee5\u770b\u7cfb\u7edf\u4e4b\u524d\u7684max_ used _connection\u7684\u6570\u503c\uff0c\u7136\u540e\u6765\u8bbe\u7f6e\u3002\u4e5f\u53ef\u4ee5\u8c03\u9ad8back_log\u7684\u503c\u3002\u201d \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0cmax_connection\u8fde\u63a5\u6570\u592a\u9ad8\u4f1a\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\u5f71\u54cd\u5462\uff1fback_log\u8bbe\u7f6e\u7684\u592a\u9ad8\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\u5730\u65b9\u5462\uff1fmax_connect\u7684\u4e0a\u9650\u5176\u5b9e\u662f\u53d6\u51b3\u4e8emysql\u80fd\u83b7\u5f97\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u5c31\u7b97\u8bbe\u7f6e\u621010000\uff0c\u6700\u540e\u4e5f\u662f\u6ca1\u7528\u7684\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e\u673a\u5668\u7684\u60c5\u51b5\u81ea\u52a8\u8c03\u4f4e\u3002 \u4e5f\u8bb8\u4f60\u4f1a\u56de\u7b54\uff1a\u201c\u6069\u6211\u77e5\u9053\uff0c\u8bbe\u7f6e\u592a\u9ad8\uff0c\u4f1a\u6709\u7cfb\u7edf\u5f00\u9500...\u201d \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0c\u8fd9\u4e9b\u5f00\u9500\u5177\u4f53\u662f\u4ec0\u4e48\u5462\uff1f\u662f\u4ec0\u4e48\u5de5\u4f5c\u5bfc\u81f4\u4e86\u9700\u8981\u8fd9\u4e9b\u5185\u5b58\u5f00\u9500\uff1f \u4e5f\u8bb8\u4f60\u8fd8\u4f1a\u56de\u7b54\uff0c\u5728\u8fde\u63a5\u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u7acb\u523b\u4e3a\u5b83\u5206\u914d\u8fde\u63a5\u7f13\u51b2\u533a\u4ee5\u53ca\u67e5\u8be2\u7f13\u51b2\u533a\uff0c\u8fd9\u4e9b\u90fd\u4f1a\u5403\u5185\u5b58\u3002 \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0c\u5360\u636e\u7684\u8d44\u6e90\u5177\u4f53\u662f\u591a\u5c11\u5462\uff1f\u53d6\u51b3\u4e8e\u54ea\u4e9b\u56e0\u7d20\u5462\uff1f \u5982\u4f55\u81ea\u5b66mysql? \u4f60\u5fc5\u987b\u4e0d\u65ad\u601d\u8003\uff0c\u624d\u80fd\u5728\u5de5\u4f5c\u4e2d\u9762\u5bf9\u5177\u4f53\u573a\u666f\u7684\u65f6\u5019\uff0c\u975e\u5e38\u6de1\u5b9a\u5730\u63a8\u65ad\uff1a\u201c\u54e6\uff0c\u4e00\u5b9a\u662f\u8fd9\u91cc\u51fa\u4e86\u95ee\u9898\u3002\u5e94\u8be5\u600e\u4e48\u600e\u4e48\u505a\u3002\u201d \u9762\u5bf9\u95ee\u9898\uff0c\u62ff\u51fa\u6253\u7834\u7802\u9505\u95ee\u5230\u5e95\u7684\u7cbe\u795e\uff0c\u5148\u601d\u8003\u4e00\u756a\uff0c\u7ed9\u51fa\u81ea\u5df1\u7684\u5047\u8bbe\uff0c\u4e0d\u8981\u7740\u6025\u5730\u53bb\u627e\u5ea6\u5a18\uff0c\u8c37\u6b4c\u3002\u601d\u8003\u8fc7\u540e\uff0c\u5e26\u7740\u4f60\u7684\u63a8\u65ad\u6216\u8005\u7b54\u6848\uff0c\u5927\u80c6\u5730\u53bb\u641c\u7d22\u5427\uff01\u53bb\u770b\u770b\u522b\u4eba\u7684\u89c1\u89e3\uff0c\u53bb\u770b\u770b\u5b98\u65b9\u7684\u63cf\u8ff0\uff01 \u8fd9\u624d\u662f\u4e00\u4e2a\u5de5\u7a0b\u5e08\u5e94\u6709\u7684\u6001\u5ea6\u3002 \u6700\u540e\u6211\u60f3\u7ed9\u51fa\u4e00\u4e9b\u6709\u4ef7\u503c\u7684\u5b66\u4e60\u8d44\u6599\u3002\u53ef\u4ee5\u7701\u53bb\u4e00\u4e9b\u65f6\u95f4\u3002 \u5b66\u4e60\u8d44\u6599 \u00b6 \u7535\u5b50\u4e66 \u00b6 \u6211\u8ba4\u4e3a\u591a\u770b\u4e66\u8fd8\u662f\u6709\u597d\u5904\u7684\u3002\u6709\u4e9b\u4e66\u503c\u5f97\u53cd\u590d\u770b\u8bb8\u591a\u904d\uff0c\u6709\u65f6\u5019\u53ea\u770b\u4e00\u904d\u65e0\u6cd5\u6df1\u523b\u7406\u89e3\u5438\u6536\uff0c\u601d\u8003\u4e5f\u4e0d\u591f\u5145\u5206\u3002 \u7535\u5b50\u4e66\u4e0b\u8f7d\u4f20\u9001\u95e8 \u300amysql\u5fc5\u77e5\u5fc5\u4f1a\u300b \u300a\u9ad8\u6027\u80fdmysql\u7b2c\u4e09\u7248\u300b \u300a\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\u300b \u300a\u6df1\u5165\u7406\u89e3MySQL\u300b \u300aMySQL\u6027\u80fd\u8c03\u4f18\u4e0e\u67b6\u6784\u8bbe\u8ba1--\u5168\u518c\u300b\u300aSQL Antipatterns\u300b \u300aMySQL\u6280\u672f\u5185\u5e55 InnoDB\u5b58\u50a8\u5f15\u64ce\u300b \u5b66\u4e60\u7f51\u7ad9 \u00b6 MySQL Tutorial - Learn MySQL Fast, Easy and Fun. \u53ef\u4ee5\u5feb\u901f\uff0c\u7b80\u5355\u548c\u6709\u8da3\u7684\u5b66\u4e60MySQL\u3002\u4ee5\u7b80\u5355\u6613\u61c2\u7684\u65b9\u5f0f\u4e3a\u60a8\u63d0\u4f9b\u5b8c\u6574\u7684MySQL\u6559\u7a0b\u3002\u6bcf\u4e2a\u6559\u7a0b\u90fd\u6709SQL\u811a\u672c\u548c\u53ef\u7528\u5c4f\u5e55\u622a\u56fe\u7684\u5b9e\u9645\u793a\u4f8b\u3002 mysql\u5b66\u4e60\u8d44\u6599 | mysql\u6df1\u5165\u5b66\u4e60\u7b14\u8bb0 \u6df1\u5ea6\u7b14\u8bb0 \u6709\u5f88\u591amysql\u7684\u8d44\u6599\u53ef\u4ee5\u770b\uff0c\u8fd8\u53ef\u4ee5\u770b\u7f51\u53cb\u505a\u7684\u5b66\u4e60\u7b14\u8bb0\u3002 W3Schools SQL \u6559\u7a0b \u53ef\u4ee5\u5b66\u4e60\u57fa\u7840\u7684sql\u8bed\u53e5 \u5b98\u65b9\u624b\u518c \u00b6 \u65e0\u8bba\u82f1\u6587\u597d\u4e0d\u597d\uff0c\u770b\u82f1\u6587\u624b\u518c\u7684\u80fd\u529b\u662f\u4e00\u5b9a\u8981\u6709\uff0c\u4e5f\u4e00\u5b9a\u8981\u57f9\u517b\u7684\u3002 mysql\u5b98\u65b9\u624b\u518c\uff1a14 The InnoDB Storage Engine \u5927\u725b\u535a\u5ba2 \u00b6 \u9886\u57df\u4e13\u5bb6\u7684\u535a\u5ba2\u662f\u5341\u5206\u5177\u6709\u5b66\u4e60\u4ef7\u503c\u7684\uff0c\u4e0b\u9762\u5217\u4e3e\u51e0\u4e2a\u6bd4\u8f83\u597d\u7684\uff1a \u4f55\u767b\u6210\u7684\u6280\u672f\u535a\u5ba2 \u4f55\u767b\u6210\u7684\u6280\u672f\u535a\u5ba2 \u6dd8\u5b9d\u4e01\u5947 \u8ffd\u98ce\u5200\u00b7\u4e01\u5947 - ITeye\u6280\u672f\u7f51\u7ad9 \u5468\u632f\u5174@\u6dd8\u5b9d \u82b1\u540d\uff1a\u82cf\u666e \u4e00\u4e2a\u6545\u4e8b@MySQL DBA \u963f\u91cc\u4e91\u6570\u636e\u5e93\u9ad8\u7ea7\u4e13\u5bb6\u5f6d\u7acb\u52cb\u4e3a MariaDB Foundation \u6b63\u5f0f\u6210\u5458\uff0c\u8d1f\u8d23\u5168\u7403Replication\u6a21\u5757\u76f8\u5173\u8865\u4e01\u7684Review\u3002\u5f6d\u7acb\u52cb\u4e5f\u6210\u4e3a\u9996\u4f4d\u88abMariaDB\u57fa\u91d1\u4f1a\u5f15\u5165\u7684\u4e2d\u56fd\u7a0b\u5e8f\u5458\u3002 P.Linux Laboratory Planet MySQL \u8f6c\u884c\u81ea\u5b66MySQL\u6570\u636e\u5e93 \u00b6 \u672c\u4eba\u662f\u4e2a\u6d3b\u751f\u751f\u7684\u4f8b\u5b50\uff0c\u5927\u5b66\u5b66\u7684\u4eea\u5668\u4eea\u8868\u4e13\u4e1a\uff0c\u6bd5\u4e1a\u524d\u7b2c\u4e00\u4efd\u5b9e\u4e60\u5de5\u4f5c\u662f\u7535\u8def\u677f\u6d4b\u8bd5\u30020\u57fa\u7840\u81ea\u5b66mysql\u548clinux\uff0c\u73b0\u4efb\u56fd\u5185\u67d0\u516c\u6709\u4e91mysql &&mongodb dba\u3002 \u5bf9\u4e8e\u975e\u8ba1\u7b97\u673a\u51fa\u8eab\u7684\u6211\uff0c\u5927\u5b66\u53ea\u4f1ahello word\u548c\u8dd1\u9a6c\u706f\uff0c\u671f\u95f4\u8fc7\u7a0b\u786e\u5b9e\u975e\u5e38\u66f2\u6298\uff0c\u5206\u4eab\u4e0b\u6211\u7684\u81ea\u5b66\u8fc7\u7a0b\uff1a 1\u3001 \u81ea\u5df1\u5728windows\u548clinux\u4e0a\u5b89\u88c5\u4e86mysql\uff0c\u81ea\u5b66linux\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5b66\u4e60mysql\u7684\u6700\u57fa\u7840\u7684\u77e5\u8bc6\uff0c\u5373**\u600e\u4e48\u5199sql\uff0c\u5b58\u50a8\u8fc7\u7a0b\uff0c\u8868\u7684\u8bbe\u8ba1**\u7b49\uff0c\u4ece0\u5230\u719f\u6089\u5927\u6982\u82b1\u4e863\u4e2a\u6708 \uff0c\u63a8\u8350**\u300amysql\u5165\u95e8\u5f88\u7b80\u5355\u300b**\u3002 2\u3001\u7cfb\u7edf\u5730\u8f83\u4e3a\u6df1\u5165\u5730\u5b66\u4e60**mysql\u7684sql\u4f18\u5316\uff0c\u5907\u4efd\u548c\u6062\u590d\uff0c\u53c2\u6570\u4f18\u5316\uff0c\u67b6\u6784\u4f18\u5316\uff0c\u786c\u4ef6\u5c42\u9762\u7684\u4f18\u5316\uff0c\u9ad8\u53ef\u7528\u65b9\u6848\uff0c\u590d\u5236\u6280\u672f**\u7b49\u7b49\uff0c\u8fd9\u6bb5\u65f6\u95f4\u4f60\u4e0d\u4e00\u5b9a\u80fd\u5b9e\u9645\u63a5\u89e6\u5230\u8fd9\u4e9b\uff0c\u5c31\u50cf\u6211\u5f53\u521d\u90a3\u6837\uff0c\u80af\u5b9a\u6ca1\u4ec0\u4e48\u516c\u53f8\u62db\u4e00\u4e2a\u5c0f\u767d\u3002 \u6211\u9009\u62e9\u81ea\u5df1\u770b\u4e66\uff0c\u63a8\u8350**\u300a\u9ad8\u6027\u80fdmysql\u300b**\uff0c\u91cc\u9762\u6240\u6709\u7684\u7ae0\u8282\u90fd\u9700\u8981\u770b\u4e00\u904d\uff0c\u4ee5\u73b0\u5728\u7684\u6c34\u5e73\u80af\u5b9a\u770b\u4e0d\u61c2\uff0c\u4f46\u9700\u8981\u77e5\u9053\u5927\u6982\u600e\u4e48\u56de\u4e8b\uff0c\u4e3a\u540e\u7eed\u7684\u627emysql\u521d\u7ea7dba\u7684\u5de5\u4f5c\u6253\u4e00\u4e2a\u94fa\u57ab\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5927\u6982\u4e5f\u9700\u89813\u4e2a\u6708\u3002 3\u3001 \u7eb8\u4e0a\u5f97\u6765\u7ec8\u89c9\u6d45\uff0c\u5b8c\u6210\u4ee5\u4e0a\u4e24\u6b65\uff0c\u6211\u5f00\u59cb\u51c6\u5907**\u627e\u4e00\u4efdmysql\u76f8\u5173\u7684\u5de5\u4f5c**\uff0c\u800c\u4e0d\u662f\u5929\u5929\u7528\u7740excel\u8868\u683c\u505a\u7740select * from table_sb\u8fd9\u6837\u7684\u5de5\u4f5c\u3002 \u5f53\u7136\u6211\u8fd9\u4e48\u7325\u7410\u7684\u4eba\u80af\u5b9a\u4e0d\u4f1a\u88f8\u8f9e\uff0c\u8be5\u753b\u7684\u7535\u8def\u677f\u4e5f\u4e00\u6837\u753b\uff0c\u4e1a\u4f59\u65f6\u95f4\u5f00\u59cb\u6295\u521d\u7ea7mysql dba\u7684\u5de5\u4f5c\uff0c\u5e76\u4e14\u4e0d\u95f4\u65ad\u5730\u5b66\u4e60\uff0c\u7f51\u4e0a\u5404\u79cd\u627emysql\u9762\u8bd5\u7684\u76f8\u5173\u9898\u76ee\uff08\u5b9e\u9645\u4e0a\u6211\u5f53\u65f6\u5b8c\u5168\u6ca1\u6709\u4efb\u4f55\u5b9e\u6218\u7ecf\u9a8c\uff09\uff0c\u9646\u7eed\u6536\u5230\u4e00\u4e9b\u9762\u8bd5\uff0c\u51ed\u501f\u4e4b\u524d\u81ea\u5b66\u7684mysql\u77e5\u8bc6\uff0c\u5f00\u59cb\u80e1\u4e71\u5439\u725b\u903c\uff0c\u5148\u6df7\u8fdb\u53bb\u518d\u8bf4\u3002 \u4f60\u4e0d\u505amysql\u5b9e\u9645\u76f8\u5173\u7684\u5de5\u4f5c\uff0c\u6c38\u8fdc\u4e5f\u4e0d\u77e5\u9053\u81ea\u5df1\u4e4b\u524d\u8ba4\u77e5\u7684db\u77e5\u8bc6\u6709\u591a\u5e7c\u7a1a\u3002 \u53cb\u60c5\u63d0\u793a\u4e00\u70b9\uff0c\u4e00\u822c\u516c\u53f8\u90fd\u6ca1\u6709\u4e13\u804cdba\u7684\uff0c\u6240\u4ee5\u9762\u8bd5\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u81ea\u4fe1\uff0c\u5176\u5b9e\u4f60\u5b66\u4e86\u8fd9\u4e48\u591a\uff0c\u867d\u7136\u6beb\u65e0\u5b9e\u6218\u7ecf\u9a8c\uff0c\u7406\u8bba\u77e5\u8bc6\u5f88\u5927\u6982\u7387\u6bd4\u9762\u8bd5\u4f60\u7684\u4eba\u725b\u903c\uff0c\u6240\u4ee5\u5404\u79cd\u5439\uff0c\u6211\u5c31\u8fd9\u6837\u771f\u6b63\u8fdb\u5165\u521d\u7ea7dba\u7684\u5708\u5b50\uff08\u7531\u4e8e\u8fd9\u65f6\u5bf9linux\u8fd8\u5904\u4e8ecd ls\u7684\u6c34\u5e73\uff0c\u6240\u4ee5\u4e4b\u524d\u4e5f\u6839\u672c\u6ca1\u505a\u8fc7\u8fd0\u7ef4\uff09\uff0c\u8fd9\u4e2a\u8fb9\u5de5\u4f5c\u8fb9\u627e\u5de5\u4f5c\u7684\u8fc7\u7a0b\u53c8\u6301\u7eed\u4e862\u4e2a\u6708\u3002 4\u3001\u771f\u6b63\u8fdb\u5165\u4e92\u8054\u7f51\uff0c\u63a5\u89e6\u751f\u4ea7\u73af\u5883\u540e\uff0c\u8fd9\u662f\u6211\u8fdb\u6b65\u6700\u5927\u7684\u65f6\u5019\u3002 \u7b2c\u4e00\u6b65\u9700\u8981**\u5c06\u4e4b\u524d\u6240\u5b66\u771f\u6b63\u5730\u5e94\u7528\u8d77\u6765**\uff0c\u5e76\u4e14\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u518d\u56de\u5934\u770b\u4e4b\u524d\u7684\u4e66\u7c4d\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u771f\u6b63\u53bb\u7406\u89e3\uff0c\u800c\u4e0d\u662f\u4f3c\u662f\u800c\u975e\uff0c\u4e00\u77e5\u534a\u89e3\u3002 \u8fd9\u65f6\u518d\u63a8\u8350**\u300a\u9ad8\u6027\u80fdmysql \u7b2c\u4e09\u7248\u300b \uff0c\u5168\u672c\u518d\u770b\u4e00\u904d\uff0c\u8fd9\u65f6\u9700\u8981\u5168\u90e8\u770b\u61c2\uff0c\u53e6\u5916\u8fd8\u6709 \u300amysql\u6280\u672f\u5185\u5e55\uff1ainnodb\u5b58\u50a8\u5f15\u64ce\u300b \u7b49\u7b49\u3002 \u603b\u4e4b\u8fd9\u6bb5\u65f6\u95f4\u5c31\u9700\u8981**\u5f00\u59cb\u5173\u6ce8mysql\u4e00\u4e9b\u7ec6\u8282**\u4e86\uff0c\u6bd4\u5982**db\u6545\u969c\u5904\u7406\uff0c\u9ad8\u53ef\u7528\uff0c\u8d1f\u8f7d\u5747\u8861**\u7b49\u7b49\u7684\u5177\u4f53\u5b9e\u73b0\u4e86\u3002 \u53e6\u5916\uff0c**linux\u7684\u77e5\u8bc6\u540c\u6b65\u4e5f\u8981\u6df1\u5165\u53bb\u5b66\u4e60 \uff0c\u81f3\u5c11\u4f1a\u5199shell\u811a\u672c\uff0c\u5e38\u89c1\u7684linux\u77e5\u8bc6\u7b49\uff0c\u6211\u5728\u8fd9\u82b1\u4e861\u5e74\u591a\uff1b 5\u3001 dba\u7684\u5de5\u4f5c\u4e00\u822c\u662f\u975e\u5e38\u8f7b\u95f2\u7684\uff0c\u6bd5\u7adf\u4e0d\u662f\u5927\u516c\u53f8\uff0c\u6280\u672f\u80fd\u529b\u6709\u9650\uff0c\u8be5\u5b66\u7684\u4e5f\u5b66\u5f97\u5dee\u4e0d\u591a\u4e86\uff0c\u63a5\u89e6\u4e0d\u5230**\u6d77\u91cf\u6570\u636e\uff0c\u9ad8\u5e76\u53d1**\u7b49\u6bd4\u8f83\u953b\u70bc\u4eba\u7684\u573a\u5408\uff0c\u4e8e\u662f\u6211\u53c8\u51c6\u5907\u8df3\u4e86\u3002 \u4e8e\u662f\u6765\u4e86\u516c\u6709\u4e91\uff0c\u73b0\u5728\u6bcf\u5929\u8fd0\u7ef4\u4e07\u591a\u4e2adb\u5b9e\u4f8b\uff0c\u5e73\u5747\u6bcf\u5929\u5904\u74065+\u4e2a\u7d27\u6025db\u6545\u969c\uff0c\u51e0\u4e4emysql\u4f1a\u9047\u5230\u7684\u95ee\u9898\uff0c\u611f\u89c9\u90fd\u9047\u5230\u4e86\uff0c\u80fd\u611f\u89c9\u5230\u6280\u672f\u5b9e\u529b\u548c\u7ecf\u9a8c\u4e5f\u5728\u6bcf\u5929\u90fd\u5728\u79ef\u7d2f\uff0c\u5728\u8fdb\u6b65\u3002 \u4f46\u662f\u611f\u89c9\u8fd8\u662f\u6b20\u7f3a\u4e86\u5f88\u591a\uff0c**\u4e0b\u4e00\u6b65\u5c31\u770b\u4f60\u9009\u62e9**\u4e86\uff0c\u662f\u518d\u53bb\u7814\u7a76\u6e90\u4ee3\u7801\uff0c\u5e95\u5c42\u539f\u7406\u7684\u4e1c\u897f\u591a\u70b9\uff0c\u8fd8\u662f\u6570\u636e\u5e93\u8fd0\u7ef4\u548c\u5e94\u7528\u591a\u4e00\u70b9\uff0c\u5c31\u6bd4\u5982\u4e1a\u754c\u59dc\u627f\u5c27\uff0c\u4f55\u767b\u6210\u4e0e\u53f6\u91d1\u8363\u7684\u533a\u522b\u3002 \u7531\u4e8e\u6211\u7684\u5386\u53f2\u539f\u56e0\uff0c\u5bf9c++\u7b49\u51e0\u4e4e\u4e0d\u61c2\uff0c\u5e73\u65f6\u4e5f\u7528\u4e0d\u5230\uff0c\u6240\u4ee5\u770b\u4ee3\u7801\u7b49\u4e8b\u5b9e\u9645\u592a\u7d2f\uff0c\u4e8e\u662f\u6211\u518d\u53bb\u5b66mongodb\uff0c\u63a5\u4e86\u516c\u53f8mongodb\u8fd0\u7ef4\u7684\u6d3b\uff0c\u7b97\u662f\u5728\u5e7f\u5ea6\u4e0a\u7684\u4e00\u4e2a\u6269\u5c55\uff0c\u4e07\u4e00\u54ea\u5929mysql\u4e0d\u884c\u4e86\u5462 6\u3001 \u603b\u4e4b\uff0c\u5bf9\u4e8edb\u5c0f\u767d\u6765\u8bf4\uff0c\u6700\u91cd\u8981\u7684\u4e00\u70b9\u5c31\u662f\uff0c \u5b66\u4e60\u7684\u8fc7\u7a0b\u4e0d\u80fd\u65ad \u3002","title":"\u6df1\u5165MySQL\u6570\u636e\u5e93"},{"location":"02-database/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysql","text":"","title":"\u5982\u4f55\u81ea\u5b66MySQL\u6570\u636e\u5e93"},{"location":"02-database/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysql_1","text":"\u57fa\u7840\uff1a sql\u8bed\u53e5 \u8868\u7ed3\u6784\u8bbe\u8ba1 \u8c03\u4f18\uff1a \u7d22\u5f15\u3001\u6162\u67e5\u8be2\u4f18\u5316 \u914d\u7f6e\u53c2\u6570\u8c03\u4f18 \u6838\u5fc3\u539f\u7406\uff1a InnoDb\u5b58\u50a8\u5f15\u64ce \uff08\u5305\u62ec\u9694\u79bb\u7ea7\u522b\u3001\u4e8b\u52a1\u3001\u9501\u3001\u7f13\u5b58\u6c60\u3001\u56de\u6eda\u65e5\u5fd7\u7b49\u7b49\uff09 Mysqld (\u5305\u62ec\u8fde\u63a5\u7ba1\u7406\u3001\u8fdb\u7a0b\u7ba1\u7406\u3001\u67e5\u8be2\u7f13\u5b58\u3001\u67e5\u8be2\u4f18\u5316\u3001\u65e5\u5fd7\u7b49\u7b49) \u67b6\u6784\u4e0e\u8fd0\u7ef4\uff1a \u7528\u6237\u4e0e\u6743\u9650\u3001\u5b89\u5168 \u5907\u4efd\u4e0e\u6062\u590d \u65e5\u5fd7 \u5206\u5e03\u5f0f\u4e0e\u9ad8\u53ef\u7528","title":"MySQL\u77e5\u8bc6\u4f53\u7cfb"},{"location":"02-database/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysql_2","text":"\u9996\u5148\uff0c\u5b66\u4e60\u57fa\u672c\u7684SQL\u8bed\u6cd5\u3002\u4f60\u5c31\u53ef\u4ee5\u7f16\u5199SQL\u8bed\u53e5\u4e86\u3002\u63a8\u8350\uff1aW3Schools\u7684 SQL \u6559\u7a0b \u3002 \u5176\u6b21\uff0c\u5b66\u4e60\u6570\u636e\u5e93\u7684\u4e3b\u8981\u529f\u80fd\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u6bd4\u5982\u7528\u6237\u76f8\u5173\u6216\u8005\u6743\u9650\u76f8\u5173\u7b49\u7b49\u3002 \u6211\u63a8\u8350\u4e24\u672c\u4e66\uff1a \u4e00\u3001\u300aMySQL\u5fc5\u77e5\u5fc5\u4f1a\u300b \u8fd9\u672c\u4e66\u8bb2\u7684\u975e\u5e38\u5168\uff0c\u4ece\u57fa\u672c\u6982\u5ff5\uff0c\u5230\u67e5\u8be2\u5230\u63d2\u5165\u65b0\u5efa\u8868\uff0c\u7528\u6237\u7684\u7ba1\u7406\uff0c\u90fd\u6709\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u975e\u5e38\u9002\u5408\u6ca1\u6709\u4efb\u4f55\u57fa\u7840\u7684\u540c\u5b66\u6765\u5b66\u4e60Mysql\uff0c\u603b\u4e4b\u8fd9\u672c\u4e66\u5b66\u4e60\u7684\u65b9\u6cd5\u5c31\u662f\uff1a1\u3001\u5341\u5206\u949f\u4e86\u89e3\u4e0b\u6570\u636e\u5e93\u7684\u57fa\u672c\u6982\u5ff5 2\u3001\u627e\u5230\u7ec3\u624b\u7684\u6570\u636e\u5e93 3\u3001\u5bf9\u7167\u7740\u4e0a\u9762\u7684\u5185\u5bb9\u53bb\u6572\u3002\u672c\u4e66\u91cc\u4e5f\u6709\u5927\u91cf\u7684\u5185\u5bb9\u662f\u8bb2sql\u7684\uff0c\u53ef\u4ee5\u7ed3\u5408w3c\u7684sql\u6559\u7a0b\u4e00\u8d77\uff0c\u6709\u53d6\u820d\u5730\u770b\u3002 \u4e8c\u3001\u300a\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\u300b\u8fd9\u672c\u4e66\u662fdba\u5fc5\u770b\u7684\u3002 \u770b\u5b8c\u8fd9\u4e9b\u5e76\u4e14\u5b9e\u8df5+\u601d\u8003\u4e4b\u540e\uff0c\u53ef\u4ee5\u7b97\u5165\u95e8\u4e86\u3002","title":"MySQL\u96f6\u57fa\u7840\u56fe\u89e3"},{"location":"02-database/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysql_3","text":"\u6211\u63a8\u8350\u51e0\u672c\u4e66\uff08\u5f88\u591a\u5927\u795e\u90fd\u8fd9\u4e48\u63a8\u8350\uff09\uff0c\u300a\u9ad8\u6027\u80fdMySQL(\u7b2c3\u7248)\u300b\u3001 \u300aMySQL\u6280\u672f\u5185\u5e55(\u7b2c4\u7248)\u300b\uff0c\u300aMySQL\u6280\u672f\u5185\u5e55 InnoDB\u5b58\u50a8\u5f15\u64ce\u300b\uff0c\u300a\u6df1\u5165\u7406\u89e3MySQL\u300b\u8fd8\u6709Mysql\u7684\u5b98\u7f51\u3002\u8bfb\u5b8c\u8fd9\u4e9b\u4e1c\u897f\uff0c\u518d\u52a0\u4e9b\u4e30\u5bcc\u7684\u7ecf\u9a8c\uff0c\u7406\u8bba\u4e0a\u6765\u8bb2\u5c31\u5177\u5907DBA\u7684\u6c34\u5e73\u4e86\u3002 \u5341\u5206\u63a8\u8350\u9605\u8bfb Planet MySQL \u4e0a\u6c47\u603b\u7684\u535a\u5ba2\uff0c\u7279\u522b\u662f Percona's MySQL & InnoDB performance and scalability blog . \u6211\u95ee\u4f60\uff0c\u9762\u5bf9\u4e00\u4e2a\u5e76\u53d1\u91cf\u6bd4\u8f83\u9ad8\u7684\u573a\u666f\uff0c\u5982\u4f55\u914d\u7f6emysql\u7684\u8fde\u63a5\u6570\uff1f \u4f60\u53ef\u80fd\u4f1a\u56de\u7b54\uff1a\u201c\u54e6\uff0c\u5c31\u662f\u8c03\u9ad8max_connection\u7684\u6570\u503c\u5427\u3002\u201d \u90a3\uff0c\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\u8c03\u5230\u591a\u5c11\u662f\u6700\u5408\u9002\u7684\u5462\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bbe\u7f6e\u5c31\u6700\u5408\u9002\u5462\uff1f \u4e5f\u8bb8\u4f60\u4f1a\u56de\u7b54\uff1a\u201c\u6069\u6211\u77e5\u9053\uff0c\u53ef\u4ee5\u770b\u7cfb\u7edf\u4e4b\u524d\u7684max_ used _connection\u7684\u6570\u503c\uff0c\u7136\u540e\u6765\u8bbe\u7f6e\u3002\u4e5f\u53ef\u4ee5\u8c03\u9ad8back_log\u7684\u503c\u3002\u201d \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0cmax_connection\u8fde\u63a5\u6570\u592a\u9ad8\u4f1a\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\u5f71\u54cd\u5462\uff1fback_log\u8bbe\u7f6e\u7684\u592a\u9ad8\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\u5730\u65b9\u5462\uff1fmax_connect\u7684\u4e0a\u9650\u5176\u5b9e\u662f\u53d6\u51b3\u4e8emysql\u80fd\u83b7\u5f97\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u5c31\u7b97\u8bbe\u7f6e\u621010000\uff0c\u6700\u540e\u4e5f\u662f\u6ca1\u7528\u7684\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e\u673a\u5668\u7684\u60c5\u51b5\u81ea\u52a8\u8c03\u4f4e\u3002 \u4e5f\u8bb8\u4f60\u4f1a\u56de\u7b54\uff1a\u201c\u6069\u6211\u77e5\u9053\uff0c\u8bbe\u7f6e\u592a\u9ad8\uff0c\u4f1a\u6709\u7cfb\u7edf\u5f00\u9500...\u201d \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0c\u8fd9\u4e9b\u5f00\u9500\u5177\u4f53\u662f\u4ec0\u4e48\u5462\uff1f\u662f\u4ec0\u4e48\u5de5\u4f5c\u5bfc\u81f4\u4e86\u9700\u8981\u8fd9\u4e9b\u5185\u5b58\u5f00\u9500\uff1f \u4e5f\u8bb8\u4f60\u8fd8\u4f1a\u56de\u7b54\uff0c\u5728\u8fde\u63a5\u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u7acb\u523b\u4e3a\u5b83\u5206\u914d\u8fde\u63a5\u7f13\u51b2\u533a\u4ee5\u53ca\u67e5\u8be2\u7f13\u51b2\u533a\uff0c\u8fd9\u4e9b\u90fd\u4f1a\u5403\u5185\u5b58\u3002 \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0c\u5360\u636e\u7684\u8d44\u6e90\u5177\u4f53\u662f\u591a\u5c11\u5462\uff1f\u53d6\u51b3\u4e8e\u54ea\u4e9b\u56e0\u7d20\u5462\uff1f \u5982\u4f55\u81ea\u5b66mysql? \u4f60\u5fc5\u987b\u4e0d\u65ad\u601d\u8003\uff0c\u624d\u80fd\u5728\u5de5\u4f5c\u4e2d\u9762\u5bf9\u5177\u4f53\u573a\u666f\u7684\u65f6\u5019\uff0c\u975e\u5e38\u6de1\u5b9a\u5730\u63a8\u65ad\uff1a\u201c\u54e6\uff0c\u4e00\u5b9a\u662f\u8fd9\u91cc\u51fa\u4e86\u95ee\u9898\u3002\u5e94\u8be5\u600e\u4e48\u600e\u4e48\u505a\u3002\u201d \u9762\u5bf9\u95ee\u9898\uff0c\u62ff\u51fa\u6253\u7834\u7802\u9505\u95ee\u5230\u5e95\u7684\u7cbe\u795e\uff0c\u5148\u601d\u8003\u4e00\u756a\uff0c\u7ed9\u51fa\u81ea\u5df1\u7684\u5047\u8bbe\uff0c\u4e0d\u8981\u7740\u6025\u5730\u53bb\u627e\u5ea6\u5a18\uff0c\u8c37\u6b4c\u3002\u601d\u8003\u8fc7\u540e\uff0c\u5e26\u7740\u4f60\u7684\u63a8\u65ad\u6216\u8005\u7b54\u6848\uff0c\u5927\u80c6\u5730\u53bb\u641c\u7d22\u5427\uff01\u53bb\u770b\u770b\u522b\u4eba\u7684\u89c1\u89e3\uff0c\u53bb\u770b\u770b\u5b98\u65b9\u7684\u63cf\u8ff0\uff01 \u8fd9\u624d\u662f\u4e00\u4e2a\u5de5\u7a0b\u5e08\u5e94\u6709\u7684\u6001\u5ea6\u3002 \u6700\u540e\u6211\u60f3\u7ed9\u51fa\u4e00\u4e9b\u6709\u4ef7\u503c\u7684\u5b66\u4e60\u8d44\u6599\u3002\u53ef\u4ee5\u7701\u53bb\u4e00\u4e9b\u65f6\u95f4\u3002","title":"MySQL\u6df1\u5165\u5b66\u4e60"},{"location":"02-database/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_1","text":"","title":"\u5b66\u4e60\u8d44\u6599"},{"location":"02-database/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_2","text":"\u6211\u8ba4\u4e3a\u591a\u770b\u4e66\u8fd8\u662f\u6709\u597d\u5904\u7684\u3002\u6709\u4e9b\u4e66\u503c\u5f97\u53cd\u590d\u770b\u8bb8\u591a\u904d\uff0c\u6709\u65f6\u5019\u53ea\u770b\u4e00\u904d\u65e0\u6cd5\u6df1\u523b\u7406\u89e3\u5438\u6536\uff0c\u601d\u8003\u4e5f\u4e0d\u591f\u5145\u5206\u3002 \u7535\u5b50\u4e66\u4e0b\u8f7d\u4f20\u9001\u95e8 \u300amysql\u5fc5\u77e5\u5fc5\u4f1a\u300b \u300a\u9ad8\u6027\u80fdmysql\u7b2c\u4e09\u7248\u300b \u300a\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\u300b \u300a\u6df1\u5165\u7406\u89e3MySQL\u300b \u300aMySQL\u6027\u80fd\u8c03\u4f18\u4e0e\u67b6\u6784\u8bbe\u8ba1--\u5168\u518c\u300b\u300aSQL Antipatterns\u300b \u300aMySQL\u6280\u672f\u5185\u5e55 InnoDB\u5b58\u50a8\u5f15\u64ce\u300b","title":"\u7535\u5b50\u4e66"},{"location":"02-database/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_3","text":"MySQL Tutorial - Learn MySQL Fast, Easy and Fun. \u53ef\u4ee5\u5feb\u901f\uff0c\u7b80\u5355\u548c\u6709\u8da3\u7684\u5b66\u4e60MySQL\u3002\u4ee5\u7b80\u5355\u6613\u61c2\u7684\u65b9\u5f0f\u4e3a\u60a8\u63d0\u4f9b\u5b8c\u6574\u7684MySQL\u6559\u7a0b\u3002\u6bcf\u4e2a\u6559\u7a0b\u90fd\u6709SQL\u811a\u672c\u548c\u53ef\u7528\u5c4f\u5e55\u622a\u56fe\u7684\u5b9e\u9645\u793a\u4f8b\u3002 mysql\u5b66\u4e60\u8d44\u6599 | mysql\u6df1\u5165\u5b66\u4e60\u7b14\u8bb0 \u6df1\u5ea6\u7b14\u8bb0 \u6709\u5f88\u591amysql\u7684\u8d44\u6599\u53ef\u4ee5\u770b\uff0c\u8fd8\u53ef\u4ee5\u770b\u7f51\u53cb\u505a\u7684\u5b66\u4e60\u7b14\u8bb0\u3002 W3Schools SQL \u6559\u7a0b \u53ef\u4ee5\u5b66\u4e60\u57fa\u7840\u7684sql\u8bed\u53e5","title":"\u5b66\u4e60\u7f51\u7ad9"},{"location":"02-database/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_4","text":"\u65e0\u8bba\u82f1\u6587\u597d\u4e0d\u597d\uff0c\u770b\u82f1\u6587\u624b\u518c\u7684\u80fd\u529b\u662f\u4e00\u5b9a\u8981\u6709\uff0c\u4e5f\u4e00\u5b9a\u8981\u57f9\u517b\u7684\u3002 mysql\u5b98\u65b9\u624b\u518c\uff1a14 The InnoDB Storage Engine","title":"\u5b98\u65b9\u624b\u518c"},{"location":"02-database/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_5","text":"\u9886\u57df\u4e13\u5bb6\u7684\u535a\u5ba2\u662f\u5341\u5206\u5177\u6709\u5b66\u4e60\u4ef7\u503c\u7684\uff0c\u4e0b\u9762\u5217\u4e3e\u51e0\u4e2a\u6bd4\u8f83\u597d\u7684\uff1a \u4f55\u767b\u6210\u7684\u6280\u672f\u535a\u5ba2 \u4f55\u767b\u6210\u7684\u6280\u672f\u535a\u5ba2 \u6dd8\u5b9d\u4e01\u5947 \u8ffd\u98ce\u5200\u00b7\u4e01\u5947 - ITeye\u6280\u672f\u7f51\u7ad9 \u5468\u632f\u5174@\u6dd8\u5b9d \u82b1\u540d\uff1a\u82cf\u666e \u4e00\u4e2a\u6545\u4e8b@MySQL DBA \u963f\u91cc\u4e91\u6570\u636e\u5e93\u9ad8\u7ea7\u4e13\u5bb6\u5f6d\u7acb\u52cb\u4e3a MariaDB Foundation \u6b63\u5f0f\u6210\u5458\uff0c\u8d1f\u8d23\u5168\u7403Replication\u6a21\u5757\u76f8\u5173\u8865\u4e01\u7684Review\u3002\u5f6d\u7acb\u52cb\u4e5f\u6210\u4e3a\u9996\u4f4d\u88abMariaDB\u57fa\u91d1\u4f1a\u5f15\u5165\u7684\u4e2d\u56fd\u7a0b\u5e8f\u5458\u3002 P.Linux Laboratory Planet MySQL","title":"\u5927\u725b\u535a\u5ba2"},{"location":"02-database/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysql_4","text":"\u672c\u4eba\u662f\u4e2a\u6d3b\u751f\u751f\u7684\u4f8b\u5b50\uff0c\u5927\u5b66\u5b66\u7684\u4eea\u5668\u4eea\u8868\u4e13\u4e1a\uff0c\u6bd5\u4e1a\u524d\u7b2c\u4e00\u4efd\u5b9e\u4e60\u5de5\u4f5c\u662f\u7535\u8def\u677f\u6d4b\u8bd5\u30020\u57fa\u7840\u81ea\u5b66mysql\u548clinux\uff0c\u73b0\u4efb\u56fd\u5185\u67d0\u516c\u6709\u4e91mysql &&mongodb dba\u3002 \u5bf9\u4e8e\u975e\u8ba1\u7b97\u673a\u51fa\u8eab\u7684\u6211\uff0c\u5927\u5b66\u53ea\u4f1ahello word\u548c\u8dd1\u9a6c\u706f\uff0c\u671f\u95f4\u8fc7\u7a0b\u786e\u5b9e\u975e\u5e38\u66f2\u6298\uff0c\u5206\u4eab\u4e0b\u6211\u7684\u81ea\u5b66\u8fc7\u7a0b\uff1a 1\u3001 \u81ea\u5df1\u5728windows\u548clinux\u4e0a\u5b89\u88c5\u4e86mysql\uff0c\u81ea\u5b66linux\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5b66\u4e60mysql\u7684\u6700\u57fa\u7840\u7684\u77e5\u8bc6\uff0c\u5373**\u600e\u4e48\u5199sql\uff0c\u5b58\u50a8\u8fc7\u7a0b\uff0c\u8868\u7684\u8bbe\u8ba1**\u7b49\uff0c\u4ece0\u5230\u719f\u6089\u5927\u6982\u82b1\u4e863\u4e2a\u6708 \uff0c\u63a8\u8350**\u300amysql\u5165\u95e8\u5f88\u7b80\u5355\u300b**\u3002 2\u3001\u7cfb\u7edf\u5730\u8f83\u4e3a\u6df1\u5165\u5730\u5b66\u4e60**mysql\u7684sql\u4f18\u5316\uff0c\u5907\u4efd\u548c\u6062\u590d\uff0c\u53c2\u6570\u4f18\u5316\uff0c\u67b6\u6784\u4f18\u5316\uff0c\u786c\u4ef6\u5c42\u9762\u7684\u4f18\u5316\uff0c\u9ad8\u53ef\u7528\u65b9\u6848\uff0c\u590d\u5236\u6280\u672f**\u7b49\u7b49\uff0c\u8fd9\u6bb5\u65f6\u95f4\u4f60\u4e0d\u4e00\u5b9a\u80fd\u5b9e\u9645\u63a5\u89e6\u5230\u8fd9\u4e9b\uff0c\u5c31\u50cf\u6211\u5f53\u521d\u90a3\u6837\uff0c\u80af\u5b9a\u6ca1\u4ec0\u4e48\u516c\u53f8\u62db\u4e00\u4e2a\u5c0f\u767d\u3002 \u6211\u9009\u62e9\u81ea\u5df1\u770b\u4e66\uff0c\u63a8\u8350**\u300a\u9ad8\u6027\u80fdmysql\u300b**\uff0c\u91cc\u9762\u6240\u6709\u7684\u7ae0\u8282\u90fd\u9700\u8981\u770b\u4e00\u904d\uff0c\u4ee5\u73b0\u5728\u7684\u6c34\u5e73\u80af\u5b9a\u770b\u4e0d\u61c2\uff0c\u4f46\u9700\u8981\u77e5\u9053\u5927\u6982\u600e\u4e48\u56de\u4e8b\uff0c\u4e3a\u540e\u7eed\u7684\u627emysql\u521d\u7ea7dba\u7684\u5de5\u4f5c\u6253\u4e00\u4e2a\u94fa\u57ab\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5927\u6982\u4e5f\u9700\u89813\u4e2a\u6708\u3002 3\u3001 \u7eb8\u4e0a\u5f97\u6765\u7ec8\u89c9\u6d45\uff0c\u5b8c\u6210\u4ee5\u4e0a\u4e24\u6b65\uff0c\u6211\u5f00\u59cb\u51c6\u5907**\u627e\u4e00\u4efdmysql\u76f8\u5173\u7684\u5de5\u4f5c**\uff0c\u800c\u4e0d\u662f\u5929\u5929\u7528\u7740excel\u8868\u683c\u505a\u7740select * from table_sb\u8fd9\u6837\u7684\u5de5\u4f5c\u3002 \u5f53\u7136\u6211\u8fd9\u4e48\u7325\u7410\u7684\u4eba\u80af\u5b9a\u4e0d\u4f1a\u88f8\u8f9e\uff0c\u8be5\u753b\u7684\u7535\u8def\u677f\u4e5f\u4e00\u6837\u753b\uff0c\u4e1a\u4f59\u65f6\u95f4\u5f00\u59cb\u6295\u521d\u7ea7mysql dba\u7684\u5de5\u4f5c\uff0c\u5e76\u4e14\u4e0d\u95f4\u65ad\u5730\u5b66\u4e60\uff0c\u7f51\u4e0a\u5404\u79cd\u627emysql\u9762\u8bd5\u7684\u76f8\u5173\u9898\u76ee\uff08\u5b9e\u9645\u4e0a\u6211\u5f53\u65f6\u5b8c\u5168\u6ca1\u6709\u4efb\u4f55\u5b9e\u6218\u7ecf\u9a8c\uff09\uff0c\u9646\u7eed\u6536\u5230\u4e00\u4e9b\u9762\u8bd5\uff0c\u51ed\u501f\u4e4b\u524d\u81ea\u5b66\u7684mysql\u77e5\u8bc6\uff0c\u5f00\u59cb\u80e1\u4e71\u5439\u725b\u903c\uff0c\u5148\u6df7\u8fdb\u53bb\u518d\u8bf4\u3002 \u4f60\u4e0d\u505amysql\u5b9e\u9645\u76f8\u5173\u7684\u5de5\u4f5c\uff0c\u6c38\u8fdc\u4e5f\u4e0d\u77e5\u9053\u81ea\u5df1\u4e4b\u524d\u8ba4\u77e5\u7684db\u77e5\u8bc6\u6709\u591a\u5e7c\u7a1a\u3002 \u53cb\u60c5\u63d0\u793a\u4e00\u70b9\uff0c\u4e00\u822c\u516c\u53f8\u90fd\u6ca1\u6709\u4e13\u804cdba\u7684\uff0c\u6240\u4ee5\u9762\u8bd5\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u81ea\u4fe1\uff0c\u5176\u5b9e\u4f60\u5b66\u4e86\u8fd9\u4e48\u591a\uff0c\u867d\u7136\u6beb\u65e0\u5b9e\u6218\u7ecf\u9a8c\uff0c\u7406\u8bba\u77e5\u8bc6\u5f88\u5927\u6982\u7387\u6bd4\u9762\u8bd5\u4f60\u7684\u4eba\u725b\u903c\uff0c\u6240\u4ee5\u5404\u79cd\u5439\uff0c\u6211\u5c31\u8fd9\u6837\u771f\u6b63\u8fdb\u5165\u521d\u7ea7dba\u7684\u5708\u5b50\uff08\u7531\u4e8e\u8fd9\u65f6\u5bf9linux\u8fd8\u5904\u4e8ecd ls\u7684\u6c34\u5e73\uff0c\u6240\u4ee5\u4e4b\u524d\u4e5f\u6839\u672c\u6ca1\u505a\u8fc7\u8fd0\u7ef4\uff09\uff0c\u8fd9\u4e2a\u8fb9\u5de5\u4f5c\u8fb9\u627e\u5de5\u4f5c\u7684\u8fc7\u7a0b\u53c8\u6301\u7eed\u4e862\u4e2a\u6708\u3002 4\u3001\u771f\u6b63\u8fdb\u5165\u4e92\u8054\u7f51\uff0c\u63a5\u89e6\u751f\u4ea7\u73af\u5883\u540e\uff0c\u8fd9\u662f\u6211\u8fdb\u6b65\u6700\u5927\u7684\u65f6\u5019\u3002 \u7b2c\u4e00\u6b65\u9700\u8981**\u5c06\u4e4b\u524d\u6240\u5b66\u771f\u6b63\u5730\u5e94\u7528\u8d77\u6765**\uff0c\u5e76\u4e14\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u518d\u56de\u5934\u770b\u4e4b\u524d\u7684\u4e66\u7c4d\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u771f\u6b63\u53bb\u7406\u89e3\uff0c\u800c\u4e0d\u662f\u4f3c\u662f\u800c\u975e\uff0c\u4e00\u77e5\u534a\u89e3\u3002 \u8fd9\u65f6\u518d\u63a8\u8350**\u300a\u9ad8\u6027\u80fdmysql \u7b2c\u4e09\u7248\u300b \uff0c\u5168\u672c\u518d\u770b\u4e00\u904d\uff0c\u8fd9\u65f6\u9700\u8981\u5168\u90e8\u770b\u61c2\uff0c\u53e6\u5916\u8fd8\u6709 \u300amysql\u6280\u672f\u5185\u5e55\uff1ainnodb\u5b58\u50a8\u5f15\u64ce\u300b \u7b49\u7b49\u3002 \u603b\u4e4b\u8fd9\u6bb5\u65f6\u95f4\u5c31\u9700\u8981**\u5f00\u59cb\u5173\u6ce8mysql\u4e00\u4e9b\u7ec6\u8282**\u4e86\uff0c\u6bd4\u5982**db\u6545\u969c\u5904\u7406\uff0c\u9ad8\u53ef\u7528\uff0c\u8d1f\u8f7d\u5747\u8861**\u7b49\u7b49\u7684\u5177\u4f53\u5b9e\u73b0\u4e86\u3002 \u53e6\u5916\uff0c**linux\u7684\u77e5\u8bc6\u540c\u6b65\u4e5f\u8981\u6df1\u5165\u53bb\u5b66\u4e60 \uff0c\u81f3\u5c11\u4f1a\u5199shell\u811a\u672c\uff0c\u5e38\u89c1\u7684linux\u77e5\u8bc6\u7b49\uff0c\u6211\u5728\u8fd9\u82b1\u4e861\u5e74\u591a\uff1b 5\u3001 dba\u7684\u5de5\u4f5c\u4e00\u822c\u662f\u975e\u5e38\u8f7b\u95f2\u7684\uff0c\u6bd5\u7adf\u4e0d\u662f\u5927\u516c\u53f8\uff0c\u6280\u672f\u80fd\u529b\u6709\u9650\uff0c\u8be5\u5b66\u7684\u4e5f\u5b66\u5f97\u5dee\u4e0d\u591a\u4e86\uff0c\u63a5\u89e6\u4e0d\u5230**\u6d77\u91cf\u6570\u636e\uff0c\u9ad8\u5e76\u53d1**\u7b49\u6bd4\u8f83\u953b\u70bc\u4eba\u7684\u573a\u5408\uff0c\u4e8e\u662f\u6211\u53c8\u51c6\u5907\u8df3\u4e86\u3002 \u4e8e\u662f\u6765\u4e86\u516c\u6709\u4e91\uff0c\u73b0\u5728\u6bcf\u5929\u8fd0\u7ef4\u4e07\u591a\u4e2adb\u5b9e\u4f8b\uff0c\u5e73\u5747\u6bcf\u5929\u5904\u74065+\u4e2a\u7d27\u6025db\u6545\u969c\uff0c\u51e0\u4e4emysql\u4f1a\u9047\u5230\u7684\u95ee\u9898\uff0c\u611f\u89c9\u90fd\u9047\u5230\u4e86\uff0c\u80fd\u611f\u89c9\u5230\u6280\u672f\u5b9e\u529b\u548c\u7ecf\u9a8c\u4e5f\u5728\u6bcf\u5929\u90fd\u5728\u79ef\u7d2f\uff0c\u5728\u8fdb\u6b65\u3002 \u4f46\u662f\u611f\u89c9\u8fd8\u662f\u6b20\u7f3a\u4e86\u5f88\u591a\uff0c**\u4e0b\u4e00\u6b65\u5c31\u770b\u4f60\u9009\u62e9**\u4e86\uff0c\u662f\u518d\u53bb\u7814\u7a76\u6e90\u4ee3\u7801\uff0c\u5e95\u5c42\u539f\u7406\u7684\u4e1c\u897f\u591a\u70b9\uff0c\u8fd8\u662f\u6570\u636e\u5e93\u8fd0\u7ef4\u548c\u5e94\u7528\u591a\u4e00\u70b9\uff0c\u5c31\u6bd4\u5982\u4e1a\u754c\u59dc\u627f\u5c27\uff0c\u4f55\u767b\u6210\u4e0e\u53f6\u91d1\u8363\u7684\u533a\u522b\u3002 \u7531\u4e8e\u6211\u7684\u5386\u53f2\u539f\u56e0\uff0c\u5bf9c++\u7b49\u51e0\u4e4e\u4e0d\u61c2\uff0c\u5e73\u65f6\u4e5f\u7528\u4e0d\u5230\uff0c\u6240\u4ee5\u770b\u4ee3\u7801\u7b49\u4e8b\u5b9e\u9645\u592a\u7d2f\uff0c\u4e8e\u662f\u6211\u518d\u53bb\u5b66mongodb\uff0c\u63a5\u4e86\u516c\u53f8mongodb\u8fd0\u7ef4\u7684\u6d3b\uff0c\u7b97\u662f\u5728\u5e7f\u5ea6\u4e0a\u7684\u4e00\u4e2a\u6269\u5c55\uff0c\u4e07\u4e00\u54ea\u5929mysql\u4e0d\u884c\u4e86\u5462 6\u3001 \u603b\u4e4b\uff0c\u5bf9\u4e8edb\u5c0f\u767d\u6765\u8bf4\uff0c\u6700\u91cd\u8981\u7684\u4e00\u70b9\u5c31\u662f\uff0c \u5b66\u4e60\u7684\u8fc7\u7a0b\u4e0d\u80fd\u65ad \u3002","title":"\u8f6c\u884c\u81ea\u5b66MySQL\u6570\u636e\u5e93"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/","text":"MySQL \u6570\u636e\u5e93\u5165\u95e8\u5b66\u4e60 \u00b6 \u963f\u91cc\u4e91\u5927\u5b66 \u94fe\u63a5\u5730\u5740\uff1a https://edu.aliyun.com/course/153/lesson/list mysql \u6570\u636e\u5e93\u7684\u7b80\u5355\u4ecb\u7ecd\uff0c\u5b89\u88c5\u914d\u7f6eMYSQL\uff0c\u57fa\u672c\u7684SQL\u547d\u4ee4\u3002 01 \u7b80\u4ecb \u00b6 SQL\uff1a\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0cstrcutured query language \u7ed3\u6784\u5316\u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u4e3b\u8981\u7528\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u589e\u5220\u6539\u67e5 select * from tb MySQL \u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u662f\u6570\u636e\u5e93\u7684\u4e00\u79cd\uff08\u5176\u4ed6\u7684Oracle\uff09\u3002MYSQL\u662f\u5f00\u6e90\u6570\u636e\u5e93\u3002 02 \u5b89\u88c5 \u00b6 \u5b98\u7f51\uff1adev.mysql.com/downloads/mysql windows \u5b89\u88c5 \u00b6 \u5728\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5305\u540e\uff0c\u9009\u62e9\u9ed8\u8ba4\u7684developer\u5b89\u88c5\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5\uff1b \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u5982\u679c\u68c0\u6d4b\u5230office\u4e2d\u7f3a\u5c11\u63d2\u4ef6\uff0c\u53ef\u4ee5\u4e0d\u7528\u5904\u7406\uff0c\u56e0\u4e3a\u4e3b\u8981\u5728CLI\u6a21\u5f0f\u4e0b\u4f7f\u7528MYSQL \u5b89\u88c5\u4e2d\u9700\u8981\u8bbe\u7f6eroot\u7528\u6237\u7684\u5bc6\u7801\uff0c\u5176\u4ed6\u7c7b\u578b\u7684\u7528\u6237\uff08\u4e0d\u6dfb\u52a0\u5176\u4ed6\u7528\u6237\uff09 \u6309\u7167\u5b89\u88c5\u5305\u7684\u6d41\u7a0b\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u4efb\u52a1\u7ba1\u7406\u5668\u4e0b\u9762\u770b\u5230\u670d\u52a1\u6b63\u5728\u8fd0\u884c\uff0c\u9700\u8981\u5728cmd\u4e0b\u9762\u786e\u8ba4\u5b89\u88c5. mysql -u root -p # -u \u8868\u793a\u7528\u6237 -p \u8868\u793a\u9700\u8981\u5bc6\u7801 linux \u5b89\u88c5 \u00b6 sudo yum install mysql mysql-server sudo apt-get install mysql mysql-server ( ubuntu ) mysqladmin -u root -p password 'root' # \u8bbe\u7f6e\u65b0\u5bc6\u7801\u662froot Mac \u5b89\u88c5 \u00b6 \u5b89\u88c5\u5305\u7684\u683c\u5f0f\u662f dmg \u5b89\u88c5\u5b8c\u6bd5\u540e\u9700\u8981\u8bbe\u7f6eroot\u5bc6\u7801 /usr/local/mysql/bin/mysqladmin -u root -p password root # \u5b89\u88c5\u6d4b\u8bd5\u6210\u529f\uff0c\u5bc6\u7801\u548c\u5f00\u673a\u5bc6\u7801\u4e00\u81f4 /usr/local/mysql/bin/mysql -u root -p # \u6253\u5f00mysql\u7684\u5bc6\u7801\u662f root \u5f00\u542f\u6216\u8005\u5173\u95ed\u670d\u52a1\u6709\u4e24\u79cd\u65b9\u6cd5 CLI sudo /Library/StartupItems/MySQLCOM/MYSQLCOM start | stop | restart GUI \u7cfb\u7edf\u914d\u7f6e - MYSQL - stop |start \u6ce8\u610f \uff1a\u5b89\u88c5\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u9009\u62e9\u5f3a\u5bc6\u7801\u6216\u8005\u662f\u5f31\u5bc6\u7801\u3002\u73b0\u5728\u672c\u5730\u6d4b\u8bd5\u4f7f\u7528\u5f31\u5bc6\u7801\u3002\u5bc6\u7801\u6700\u5c11\u662f8\u4f4d\uff0c\u8fd9\u91cc\u8bbe\u7f6e12345678 \u4f5c\u4e3aroot\u7684\u5bc6\u7801\u3002 \u73b0\u5728\u5bc6\u7801\u662f root \u6ce8\u610f2 \uff1a \u5982\u679cmysql\u5df2\u7ecf\u8fd0\u884c\uff0c\u4f46\u662f\u8f93\u5165 mysql \u663e\u793a\u547d\u4ee4\u4e0d\u5b58\u5728\uff1a\u9047\u4e0a-bash: mysql: command not found\u7684\u60c5\u51b5\u522b\u7740\u6025 \u8fd9\u4e2a\u662f\u56e0\u4e3a/usr/local/bin\u76ee\u5f55\u4e0b\u7f3a\u5931mysql\u5bfc\u81f4\uff0c\u53ea\u9700\u8981\u4e00\u4e0b\u65b9\u6cd5\u5efa\u7acb\u8f6f\u94fe\u63a5\uff0c\u5373\u53ef\u4ee5\u89e3\u51b3\uff1a \u628amysql\u5b89\u88c5\u76ee\u5f55\uff0c\u6bd4\u5982MYSQLPATH/bin/mysql\uff0c\u6620\u5c04\u5230/usr/local/bin\u76ee\u5f55\u4e0b\uff1a # cd /usr/local/bin # ln -fs /MYSQLPATH/bin/mysql mysql \u8fd8\u6709\u5176\u5b83\u5e38\u7528\u547d\u4ee4mysqladmin\u3001mysqldump\u7b49\u4e0d\u53ef\u7528\u65f6\u5019\u90fd\u53ef\u6309\u7528\u6b64\u65b9\u6cd5\u89e3\u51b3\u3002 \u6ce8\uff1a\u5176\u4e2dMYSQLPATH\u662fmysql\u7684\u5b9e\u9645\u5b89\u88c5\u8def\u5f84\uff08MAC \u9ed8\u8ba4\u8def\u5f84 /usr/local/mysql/bin/mysql\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://www.cnblogs.com/yang1314/p/9288767.html 03 \u914d\u7f6e \u00b6 MYSQL \u7684\u914d\u7f6e\u6587\u4ef6\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 my.cof Mac \u7684\u6587\u4ef6\u8def\u5f84\u662f /usr/local/mysql/my.cof \u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u662f\u7a7a\u7684 \u53ef\u4ee5\u914d\u7f6e\u5b57\u7b26\u96c6\uff0c\u7f13\u5b58\u5927\u5c0f\u7b49 [client] default-character-set=utf8 # \u6dfb\u52a0\u5b57\u7b26\u96c6\uff0c\u907f\u514d\u4e71\u7801 [mysqld] character-set-server=utf8 default-storage-engine=INNODB # \u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce INNODB \u4fee\u6539\u914d\u7f6e\u540e\uff0c\u9700\u8981\u91cd\u542f mysql (\u6216\u8005\u5728\u8bbe\u7f6e\u4e2d\u91cd\u542f) sudo /Library/StartupItems/MySQLCOM/MYSQLCOM restart \u81ea\u5df1\u914d\u7f6e\u7684\u95ee\u9898\uff1a\u4f7f\u7528vim\u7f16\u8f91\u5668\u4fdd\u5b58\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u4fdd\u5b58\u914d\u7f6e\uff1b\u4f7f\u7528sudo\u4e5f\u4e0d\u884c \"/usr/local/mysql-8.0.18-macos10.14-x86_64/my.cof\" E212: Can't open file for writing Warning: Changing a readonly file 04 \u6570\u636e\u5e93\u64cd\u4f5c \u00b6 show databases ; create database gc ; drop database gc ; \u4e0d\u540c\u6570\u636e\u5e93\u7684\u6570\u636e\u662f\u4e0d\u4f1a\u5e72\u6270\u7684\u3002\u6570\u636e\u5e93\u662f\u6570\u636e\u5e93\u8f6f\u4ef6\u4e2d\u57fa\u672c\u7684\u5355\u4f4d 05 \u6570\u636e\u7c7b\u578b \u00b6 database \u5305\u62ec tables \u8868\u4e2d\u6bcf\u4e00\u884c\u5c31\u662f\u4e00\u6761\u6570\u636e\uff1b\u5217\u5c31\u662f\u4e0d\u540c\u7684\u5b57\u6bb5\uff0c\u4e0d\u540c\u7684\u5b57\u6bb5\u5bf9\u5e94\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u548c\u6570\u636e\u7ed3\u6784\uff08\u4f8b\u5982ID\u662f\u81ea\u589e\u957f\u7684\u6574\u5f62\uff0cName\u662f\u957f\u5b57\u7b26\u4e32\uff09\uff0c\u662f\u5426\u6709\u9ed8\u8ba4\u503c\u7b49\u3002\u4e0b\u9762\u662f\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u3002\u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u903b\u8f91\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002 \u6587\u672c\u7c7b \u00b6 VARCHAR(size) \u957f\u5ea6\u5c0f\u4e8e255\u7684\u53ef\u53d8\u957f\u5ea6\u5b57\u7b26\u4e32\uff1avarchar \u957f\u5ea6\u5c0f\u4e8e65535\u5b57\u7b26\uff08\u901a\u5e38\u6587\u672c\u8db3\u591f\u4f7f\u7528\uff09\uff0c\u957f\u5ea6\u53ef\u4ee5\u6539\u53d8\uff08mqsql 5.0.3 \u4e4b\u524d\u8868\u793a65535\u5b57\u8282\uff09\uff0c\u67e5\u8be2\u901f\u5ea6\u4e2d\u7b49 TEXT \u957f\u5ea6\u4e2d\u7b49\u7684\u5b57\u7b26\u4e32\uff0ctext \u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u53d7\u9650\u5236\uff0c\u67e5\u8be2\u901f\u5ea6\u6700\u6162\uff0c\u901a\u5e38\u4f18\u5148\u4f7f\u7528varchar LONGTEXT \u957f\u5ea6\u5f88\u957f\u7684\u5b57\u7b26\u4e32 CHAR\uff1achar \u8868\u793a\u4f20\u7edf\u7684\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5c0f\u4e8e255\u5b57\u7b26\uff0c\u957f\u5ea6\u56fa\u5b9a\uff0c\u9002\u7528\u4e8e\u8f83\u77ed\u56fa\u5b9a\u957f\u5ea6\u7684\u6570\u636e\uff08\u8eab\u4efd\u8bc1\u53f7\u548c\u7535\u8bdd\u53f7\uff09\uff0c\u67e5\u8be2\u8868\u901f\u5ea6\u6700\u5feb Foreign key \u5916\u952e primary key \u4e3b\u952e \u5728mysql\u4e2d\uff0c\u5982\u679c\u628a\u8868\u7684\u4e3b\u952e\u8bbe\u4e3aauto_increment\u7c7b\u578b\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u81ea\u52a8\u4e3a\u4e3b\u952e\u8d4b\u503c\u3002 \u65e5\u671f\u7c7b \u00b6 DATETIME \u5e74\u6708\u65e5\u65f6\u5206\u79d2 \u6570\u503c\u7c7b \u00b6 TINYINT -128~127 \u6216\u8005\u5b58\u50a8\u5e03\u5c14\u503c INT \u5c0f\u6570\u5b57 BIGINT \u5927\u6570\u5b57\uff08ID\uff0c\u81ea\u589e\u957f\uff09 DOUBLE \u6d6e\u70b9\u578b\uff08\u4e0d\u4f7f\u7528FLOAT\uff09 06 \u6570\u636e\u8868\u64cd\u4f5c\uff08table\uff09 \u00b6 CREATE TABLE account ( id bigint ( 20 ), createTime datetime , ip varchar ( 255 ), mobile varchar ( 255 ), name varchar ( 255 ), brief text , comments text , location varchar ( 255 ), qq varchar ( 255 ), gender int ( 11 ), city varchar ( 255 ), province varchar ( 255 ) ); drop table account ; describe account ; # \u67e5\u770b\u5f53\u524d\u7684\u8868\u7684\u5185\u90e8\u7ed3\u6784 create database Michael ; use Michael ; show tables ; CREATE TABLE gc (...); describe gc ; drop table gc ; \u8868\u91cd\u547d\u540d alter table \u8868\u540d rename \u65b0\u8868\u540d 07 \u5217\u64cd\u4f5c \u00b6 \u589e\u52a0\u5220\u9664\u8868\u7684\u5217 alter table \u8868\u540d add \u65b0\u5217\u540d \u5217\u6570\u636e\u7c7b\u578b not null default 1 ; # \u540e\u9762\u7684 not null default 1 \u662f\u53ef\u9009\u53c2\u6570 alter table \u8868\u540d drop \u5df2\u6709\u5217\u540d ; \u4fee\u6539\u5217\u540d\u6216\u8005\u6570\u636e\u7c7b\u578b: \u53ef\u4ee5\u5355\u72ec\u4fee\u6539\u5217\u540d\u540e\u8005\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u4e00\u8d77\u4fee\u6539\u5217\u540d\u548c\u6570\u636e\u7c7b\u578b alter table \u8868\u540d change \u65e7\u5217\u540d \u65b0\u5217\u540d \u65b0\u7684\u6570\u636e\u7c7b\u578b 08 \u8868\u6570\u636e\u64cd\u4f5c \u00b6 insert \u63d2\u5165 \u00b6 \u589e\u52a0\uff08\u63d2\u5165\uff09\u8868\u6570\u636e insert into \u8868\u540d values ( key1 , key2 , key3 ...) insert into tableName ( column1 , column2 ) values ( key1 , key2 ) select \u67e5\u8be2 \u00b6 \u67e5\u8be2\u8868\u6570\u636e select * from \u8868\u540d select \u5217\u540d1 , \u5217\u540d2 from \u8868\u540d where \u7b5b\u9009 \u00b6 select * from tableName where title = 't' ; # \u67e5\u8be2\u6761\u4ef6\u53ef\u4ee5\u662f\u5927\u4e8e\u5c0f\u4e8e\u7b49\u4e8e\u4e0d\u7b49\u4e8e\uff0c\u6216\u8005between\u8303\u56f4 # \u53ef\u4ee5\u901a\u8fc7 and or \u8fdb\u884c\u591a\u5143\u9009\u62e9\uff0c\u62ec\u53f7\u589e\u52a0\u4f18\u5148\u7ea7 # \u6ce8\u610f\uff1a\u5224\u65ad\u76f8\u7b49\u662f = \u4e0d\u662f\u4e24\u4e2a\u7b49\u53f7 select * from gc where name = 'Michael' and ( id = 20 or id = 22 ); \u5224\u65ad null \u662f\u7279\u6b8a\u7684\uff0c\u9700\u8981\u901a\u8fc7 is is not \u5224\u65ad\uff0c\u4e0d\u80fd\u901a\u8fc7 = != \u5224\u65ad select * from gc where email is null and name is not null ; distinct \u53bb\u91cd \u00b6 \u5982\u679c\u7b5b\u9009\u8fc7\u7a0b\u4e2d\u6709\u91cd\u590d\u7684\u6570\u636e\uff0c\u90a3\u4e48\u53ef\u4ee5\u52a0\u4e0a\u5173\u952e\u5b57 distinct \u53bb\u9664\u91cd\u590d\u7684\u884c\u3002\u4e0b\u9762\u7684\u67e5\u8be2\u7ed3\u679c\u4e2d\uff0c\u5982\u679cname\u548cage\u76f8\u540c\u7684\u6570\u636e\u6709\u591a\u884c\uff0c\u90a3\u4e48\u7ed3\u679c\u4e2d\u53ea\u663e\u793a\u4e00\u884c select distinct name , age from gc ; order by \u6392\u5e8f \u00b6 \u5347\u5e8f\u6216\u8005\u964d\u5e8f # \u67e5\u8be2\u7ed3\u679c\u6392\u5e8f(\u5347\u5e8f\u6216\u8005\u964d\u5e8f) order by columnName desc/asc select * from gc order by id asc ; # \u5c06\u67e5\u8be2\u7684\u7ed3\u679c\u6309\u7167ID\u5347\u5e8f\u7684\u60c5\u51b5\u8fdb\u884c\u6392\u5e8f select * from gc order by age asc , name desc ; limit \u9650\u5236 \u00b6 \u4f7f\u7528 limit \u622a\u53d6\u67e5\u8be2\u7ed3\u679c\uff08\u7c7b\u4f3c\u4e8esplice\u51fd\u6570\uff09limit \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5f00\u59cb\u7684\u4f4d\u7f6e\uff08\u9ed8\u8ba4\u662f0\uff0c\u53ef\u4ee5\u4e0d\u9009\uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u622a\u53d6\u7684\u6570\u91cf\u3002 select * from gc [ where name is not null ] [ order by id asc ] limit 5 ; select * from gc [ where name is not null ] [ order by id asc ] limit 3 , 5 ; # \u4e2d\u62ec\u53f7\u5185\u90e8\u662f\u53ef\u9009\u53c2\u6570\uff08order\u5fc5\u987b\u5728where\u540e\u9762\uff09 # \u7b2c\u4e00\u53e5\uff1a\u5728\u83b7\u53d6\u7684\u7ed3\u679c\u4e2d\uff0c\u622a\u53d6\u524d\u4e94\u6761\u8bb0\u5f55\uff08index = 0 \u5230 index = 4\uff09 # \u7b2c\u4e8c\u53e5\uff1alimit \u4eceindex=3 \u5f00\u59cb\u622a\u53d6\uff0c\u622a\u53d65\u6761\u8bb0\u5f55 \u7ec4\u5408\u4f7f\u7528 insert select \u00b6 \u53ef\u4ee5\u5728\u4e00\u4e2a\u8868\u4e2d\u67e5\u8be2\u6570\u636e\uff0cselect * from table\uff0c \u7136\u540e\u628a\u67e5\u8be2\u7684\u7ed3\u679c\u63d2\u5165\u5230\u53e6\u4e00\u4e2a\u8868\u4e2d\uff08\u6570\u636e\u8fc1\u79fb\u4f1a\u7528\u5230\uff09 insert into account values ( 10 ); insert into account select name , age from oldAccount ; update \u66f4\u65b0 \u00b6 update tableName set columnName = newValue where XXX \u5982\u679c\u4f7f\u7528where\u6dfb\u52a0\uff0c\u90a3\u4e48\u4fee\u6539\u6ee1\u8db3\u6761\u4ef6\u7684\u90e8\u5206\uff1b\u5426\u5219\u4fee\u6539\u6574\u5217\u7684\u6570\u636e\uff1b update account set name = 'Tom' , email = '123@qq.com' where id = 1 ; where \u9ad8\u7ea7\u7528\u6cd5 \u00b6 in \u5b57\u7b26\u4e32\u8303\u56f4\uff08\u79bb\u6563\u503c\uff09 select * from account where id in ( value1 , value2 ...); select * from account where id in ( select id from oldAccount where id < 10 ); \u4ece\u4e00\u4e2a\u96c6\u5408\u4e2d\u9009\u62e9\u53e6\u4e00\u4e2a\u96c6\u5408\uff08\u9009\u62e9\u7684\u53ef\u4ee5\u4f7f\u5b57\u7b26\u4e32\u8303\u56f4\uff0c\u662f\u6570\u503c\u8303\u56f4\u7684\u6269\u5927\uff09 between \u6570\u503c\u8303\u56f4\uff08\u8fde\u7eed\uff09 select * from account where id between 5 and 10 ; # \u8fd9\u91cc\u7684\u9009\u62e9\u662f[5, 10] select * from account where id not between 5 and 10 ; # Like \u5b57\u7b26\u4e32\u7684\u6a21\u7cca\u5339\u914d select * from account where name like '%ab%' ;","title":"\u963f\u91cc\u4e91MySQL\u5165\u95e8"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#mysql","text":"\u963f\u91cc\u4e91\u5927\u5b66 \u94fe\u63a5\u5730\u5740\uff1a https://edu.aliyun.com/course/153/lesson/list mysql \u6570\u636e\u5e93\u7684\u7b80\u5355\u4ecb\u7ecd\uff0c\u5b89\u88c5\u914d\u7f6eMYSQL\uff0c\u57fa\u672c\u7684SQL\u547d\u4ee4\u3002","title":"MySQL \u6570\u636e\u5e93\u5165\u95e8\u5b66\u4e60"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#01","text":"SQL\uff1a\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0cstrcutured query language \u7ed3\u6784\u5316\u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u4e3b\u8981\u7528\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u589e\u5220\u6539\u67e5 select * from tb MySQL \u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u662f\u6570\u636e\u5e93\u7684\u4e00\u79cd\uff08\u5176\u4ed6\u7684Oracle\uff09\u3002MYSQL\u662f\u5f00\u6e90\u6570\u636e\u5e93\u3002","title":"01 \u7b80\u4ecb"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#02","text":"\u5b98\u7f51\uff1adev.mysql.com/downloads/mysql","title":"02 \u5b89\u88c5"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#windows","text":"\u5728\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5305\u540e\uff0c\u9009\u62e9\u9ed8\u8ba4\u7684developer\u5b89\u88c5\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5\uff1b \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u5982\u679c\u68c0\u6d4b\u5230office\u4e2d\u7f3a\u5c11\u63d2\u4ef6\uff0c\u53ef\u4ee5\u4e0d\u7528\u5904\u7406\uff0c\u56e0\u4e3a\u4e3b\u8981\u5728CLI\u6a21\u5f0f\u4e0b\u4f7f\u7528MYSQL \u5b89\u88c5\u4e2d\u9700\u8981\u8bbe\u7f6eroot\u7528\u6237\u7684\u5bc6\u7801\uff0c\u5176\u4ed6\u7c7b\u578b\u7684\u7528\u6237\uff08\u4e0d\u6dfb\u52a0\u5176\u4ed6\u7528\u6237\uff09 \u6309\u7167\u5b89\u88c5\u5305\u7684\u6d41\u7a0b\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u4efb\u52a1\u7ba1\u7406\u5668\u4e0b\u9762\u770b\u5230\u670d\u52a1\u6b63\u5728\u8fd0\u884c\uff0c\u9700\u8981\u5728cmd\u4e0b\u9762\u786e\u8ba4\u5b89\u88c5. mysql -u root -p # -u \u8868\u793a\u7528\u6237 -p \u8868\u793a\u9700\u8981\u5bc6\u7801","title":"windows \u5b89\u88c5"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#linux","text":"sudo yum install mysql mysql-server sudo apt-get install mysql mysql-server ( ubuntu ) mysqladmin -u root -p password 'root' # \u8bbe\u7f6e\u65b0\u5bc6\u7801\u662froot","title":"linux \u5b89\u88c5"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#mac","text":"\u5b89\u88c5\u5305\u7684\u683c\u5f0f\u662f dmg \u5b89\u88c5\u5b8c\u6bd5\u540e\u9700\u8981\u8bbe\u7f6eroot\u5bc6\u7801 /usr/local/mysql/bin/mysqladmin -u root -p password root # \u5b89\u88c5\u6d4b\u8bd5\u6210\u529f\uff0c\u5bc6\u7801\u548c\u5f00\u673a\u5bc6\u7801\u4e00\u81f4 /usr/local/mysql/bin/mysql -u root -p # \u6253\u5f00mysql\u7684\u5bc6\u7801\u662f root \u5f00\u542f\u6216\u8005\u5173\u95ed\u670d\u52a1\u6709\u4e24\u79cd\u65b9\u6cd5 CLI sudo /Library/StartupItems/MySQLCOM/MYSQLCOM start | stop | restart GUI \u7cfb\u7edf\u914d\u7f6e - MYSQL - stop |start \u6ce8\u610f \uff1a\u5b89\u88c5\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u9009\u62e9\u5f3a\u5bc6\u7801\u6216\u8005\u662f\u5f31\u5bc6\u7801\u3002\u73b0\u5728\u672c\u5730\u6d4b\u8bd5\u4f7f\u7528\u5f31\u5bc6\u7801\u3002\u5bc6\u7801\u6700\u5c11\u662f8\u4f4d\uff0c\u8fd9\u91cc\u8bbe\u7f6e12345678 \u4f5c\u4e3aroot\u7684\u5bc6\u7801\u3002 \u73b0\u5728\u5bc6\u7801\u662f root \u6ce8\u610f2 \uff1a \u5982\u679cmysql\u5df2\u7ecf\u8fd0\u884c\uff0c\u4f46\u662f\u8f93\u5165 mysql \u663e\u793a\u547d\u4ee4\u4e0d\u5b58\u5728\uff1a\u9047\u4e0a-bash: mysql: command not found\u7684\u60c5\u51b5\u522b\u7740\u6025 \u8fd9\u4e2a\u662f\u56e0\u4e3a/usr/local/bin\u76ee\u5f55\u4e0b\u7f3a\u5931mysql\u5bfc\u81f4\uff0c\u53ea\u9700\u8981\u4e00\u4e0b\u65b9\u6cd5\u5efa\u7acb\u8f6f\u94fe\u63a5\uff0c\u5373\u53ef\u4ee5\u89e3\u51b3\uff1a \u628amysql\u5b89\u88c5\u76ee\u5f55\uff0c\u6bd4\u5982MYSQLPATH/bin/mysql\uff0c\u6620\u5c04\u5230/usr/local/bin\u76ee\u5f55\u4e0b\uff1a # cd /usr/local/bin # ln -fs /MYSQLPATH/bin/mysql mysql \u8fd8\u6709\u5176\u5b83\u5e38\u7528\u547d\u4ee4mysqladmin\u3001mysqldump\u7b49\u4e0d\u53ef\u7528\u65f6\u5019\u90fd\u53ef\u6309\u7528\u6b64\u65b9\u6cd5\u89e3\u51b3\u3002 \u6ce8\uff1a\u5176\u4e2dMYSQLPATH\u662fmysql\u7684\u5b9e\u9645\u5b89\u88c5\u8def\u5f84\uff08MAC \u9ed8\u8ba4\u8def\u5f84 /usr/local/mysql/bin/mysql\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://www.cnblogs.com/yang1314/p/9288767.html","title":"Mac \u5b89\u88c5"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#03","text":"MYSQL \u7684\u914d\u7f6e\u6587\u4ef6\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 my.cof Mac \u7684\u6587\u4ef6\u8def\u5f84\u662f /usr/local/mysql/my.cof \u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u662f\u7a7a\u7684 \u53ef\u4ee5\u914d\u7f6e\u5b57\u7b26\u96c6\uff0c\u7f13\u5b58\u5927\u5c0f\u7b49 [client] default-character-set=utf8 # \u6dfb\u52a0\u5b57\u7b26\u96c6\uff0c\u907f\u514d\u4e71\u7801 [mysqld] character-set-server=utf8 default-storage-engine=INNODB # \u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce INNODB \u4fee\u6539\u914d\u7f6e\u540e\uff0c\u9700\u8981\u91cd\u542f mysql (\u6216\u8005\u5728\u8bbe\u7f6e\u4e2d\u91cd\u542f) sudo /Library/StartupItems/MySQLCOM/MYSQLCOM restart \u81ea\u5df1\u914d\u7f6e\u7684\u95ee\u9898\uff1a\u4f7f\u7528vim\u7f16\u8f91\u5668\u4fdd\u5b58\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u4fdd\u5b58\u914d\u7f6e\uff1b\u4f7f\u7528sudo\u4e5f\u4e0d\u884c \"/usr/local/mysql-8.0.18-macos10.14-x86_64/my.cof\" E212: Can't open file for writing Warning: Changing a readonly file","title":"03 \u914d\u7f6e"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#04","text":"show databases ; create database gc ; drop database gc ; \u4e0d\u540c\u6570\u636e\u5e93\u7684\u6570\u636e\u662f\u4e0d\u4f1a\u5e72\u6270\u7684\u3002\u6570\u636e\u5e93\u662f\u6570\u636e\u5e93\u8f6f\u4ef6\u4e2d\u57fa\u672c\u7684\u5355\u4f4d","title":"04 \u6570\u636e\u5e93\u64cd\u4f5c"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#05","text":"database \u5305\u62ec tables \u8868\u4e2d\u6bcf\u4e00\u884c\u5c31\u662f\u4e00\u6761\u6570\u636e\uff1b\u5217\u5c31\u662f\u4e0d\u540c\u7684\u5b57\u6bb5\uff0c\u4e0d\u540c\u7684\u5b57\u6bb5\u5bf9\u5e94\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u548c\u6570\u636e\u7ed3\u6784\uff08\u4f8b\u5982ID\u662f\u81ea\u589e\u957f\u7684\u6574\u5f62\uff0cName\u662f\u957f\u5b57\u7b26\u4e32\uff09\uff0c\u662f\u5426\u6709\u9ed8\u8ba4\u503c\u7b49\u3002\u4e0b\u9762\u662f\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u3002\u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u903b\u8f91\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002","title":"05 \u6570\u636e\u7c7b\u578b"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#_1","text":"VARCHAR(size) \u957f\u5ea6\u5c0f\u4e8e255\u7684\u53ef\u53d8\u957f\u5ea6\u5b57\u7b26\u4e32\uff1avarchar \u957f\u5ea6\u5c0f\u4e8e65535\u5b57\u7b26\uff08\u901a\u5e38\u6587\u672c\u8db3\u591f\u4f7f\u7528\uff09\uff0c\u957f\u5ea6\u53ef\u4ee5\u6539\u53d8\uff08mqsql 5.0.3 \u4e4b\u524d\u8868\u793a65535\u5b57\u8282\uff09\uff0c\u67e5\u8be2\u901f\u5ea6\u4e2d\u7b49 TEXT \u957f\u5ea6\u4e2d\u7b49\u7684\u5b57\u7b26\u4e32\uff0ctext \u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u53d7\u9650\u5236\uff0c\u67e5\u8be2\u901f\u5ea6\u6700\u6162\uff0c\u901a\u5e38\u4f18\u5148\u4f7f\u7528varchar LONGTEXT \u957f\u5ea6\u5f88\u957f\u7684\u5b57\u7b26\u4e32 CHAR\uff1achar \u8868\u793a\u4f20\u7edf\u7684\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5c0f\u4e8e255\u5b57\u7b26\uff0c\u957f\u5ea6\u56fa\u5b9a\uff0c\u9002\u7528\u4e8e\u8f83\u77ed\u56fa\u5b9a\u957f\u5ea6\u7684\u6570\u636e\uff08\u8eab\u4efd\u8bc1\u53f7\u548c\u7535\u8bdd\u53f7\uff09\uff0c\u67e5\u8be2\u8868\u901f\u5ea6\u6700\u5feb Foreign key \u5916\u952e primary key \u4e3b\u952e \u5728mysql\u4e2d\uff0c\u5982\u679c\u628a\u8868\u7684\u4e3b\u952e\u8bbe\u4e3aauto_increment\u7c7b\u578b\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u81ea\u52a8\u4e3a\u4e3b\u952e\u8d4b\u503c\u3002","title":"\u6587\u672c\u7c7b"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#_2","text":"DATETIME \u5e74\u6708\u65e5\u65f6\u5206\u79d2","title":"\u65e5\u671f\u7c7b"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#_3","text":"TINYINT -128~127 \u6216\u8005\u5b58\u50a8\u5e03\u5c14\u503c INT \u5c0f\u6570\u5b57 BIGINT \u5927\u6570\u5b57\uff08ID\uff0c\u81ea\u589e\u957f\uff09 DOUBLE \u6d6e\u70b9\u578b\uff08\u4e0d\u4f7f\u7528FLOAT\uff09","title":"\u6570\u503c\u7c7b"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#06-table","text":"CREATE TABLE account ( id bigint ( 20 ), createTime datetime , ip varchar ( 255 ), mobile varchar ( 255 ), name varchar ( 255 ), brief text , comments text , location varchar ( 255 ), qq varchar ( 255 ), gender int ( 11 ), city varchar ( 255 ), province varchar ( 255 ) ); drop table account ; describe account ; # \u67e5\u770b\u5f53\u524d\u7684\u8868\u7684\u5185\u90e8\u7ed3\u6784 create database Michael ; use Michael ; show tables ; CREATE TABLE gc (...); describe gc ; drop table gc ; \u8868\u91cd\u547d\u540d alter table \u8868\u540d rename \u65b0\u8868\u540d","title":"06 \u6570\u636e\u8868\u64cd\u4f5c\uff08table\uff09"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#07","text":"\u589e\u52a0\u5220\u9664\u8868\u7684\u5217 alter table \u8868\u540d add \u65b0\u5217\u540d \u5217\u6570\u636e\u7c7b\u578b not null default 1 ; # \u540e\u9762\u7684 not null default 1 \u662f\u53ef\u9009\u53c2\u6570 alter table \u8868\u540d drop \u5df2\u6709\u5217\u540d ; \u4fee\u6539\u5217\u540d\u6216\u8005\u6570\u636e\u7c7b\u578b: \u53ef\u4ee5\u5355\u72ec\u4fee\u6539\u5217\u540d\u540e\u8005\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u4e00\u8d77\u4fee\u6539\u5217\u540d\u548c\u6570\u636e\u7c7b\u578b alter table \u8868\u540d change \u65e7\u5217\u540d \u65b0\u5217\u540d \u65b0\u7684\u6570\u636e\u7c7b\u578b","title":"07 \u5217\u64cd\u4f5c"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#08","text":"","title":"08 \u8868\u6570\u636e\u64cd\u4f5c"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#insert","text":"\u589e\u52a0\uff08\u63d2\u5165\uff09\u8868\u6570\u636e insert into \u8868\u540d values ( key1 , key2 , key3 ...) insert into tableName ( column1 , column2 ) values ( key1 , key2 )","title":"insert \u63d2\u5165"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#select","text":"\u67e5\u8be2\u8868\u6570\u636e select * from \u8868\u540d select \u5217\u540d1 , \u5217\u540d2 from \u8868\u540d","title":"select \u67e5\u8be2"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#where","text":"select * from tableName where title = 't' ; # \u67e5\u8be2\u6761\u4ef6\u53ef\u4ee5\u662f\u5927\u4e8e\u5c0f\u4e8e\u7b49\u4e8e\u4e0d\u7b49\u4e8e\uff0c\u6216\u8005between\u8303\u56f4 # \u53ef\u4ee5\u901a\u8fc7 and or \u8fdb\u884c\u591a\u5143\u9009\u62e9\uff0c\u62ec\u53f7\u589e\u52a0\u4f18\u5148\u7ea7 # \u6ce8\u610f\uff1a\u5224\u65ad\u76f8\u7b49\u662f = \u4e0d\u662f\u4e24\u4e2a\u7b49\u53f7 select * from gc where name = 'Michael' and ( id = 20 or id = 22 ); \u5224\u65ad null \u662f\u7279\u6b8a\u7684\uff0c\u9700\u8981\u901a\u8fc7 is is not \u5224\u65ad\uff0c\u4e0d\u80fd\u901a\u8fc7 = != \u5224\u65ad select * from gc where email is null and name is not null ;","title":"where \u7b5b\u9009"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#distinct","text":"\u5982\u679c\u7b5b\u9009\u8fc7\u7a0b\u4e2d\u6709\u91cd\u590d\u7684\u6570\u636e\uff0c\u90a3\u4e48\u53ef\u4ee5\u52a0\u4e0a\u5173\u952e\u5b57 distinct \u53bb\u9664\u91cd\u590d\u7684\u884c\u3002\u4e0b\u9762\u7684\u67e5\u8be2\u7ed3\u679c\u4e2d\uff0c\u5982\u679cname\u548cage\u76f8\u540c\u7684\u6570\u636e\u6709\u591a\u884c\uff0c\u90a3\u4e48\u7ed3\u679c\u4e2d\u53ea\u663e\u793a\u4e00\u884c select distinct name , age from gc ;","title":"distinct \u53bb\u91cd"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#order-by","text":"\u5347\u5e8f\u6216\u8005\u964d\u5e8f # \u67e5\u8be2\u7ed3\u679c\u6392\u5e8f(\u5347\u5e8f\u6216\u8005\u964d\u5e8f) order by columnName desc/asc select * from gc order by id asc ; # \u5c06\u67e5\u8be2\u7684\u7ed3\u679c\u6309\u7167ID\u5347\u5e8f\u7684\u60c5\u51b5\u8fdb\u884c\u6392\u5e8f select * from gc order by age asc , name desc ;","title":"order by \u6392\u5e8f"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#limit","text":"\u4f7f\u7528 limit \u622a\u53d6\u67e5\u8be2\u7ed3\u679c\uff08\u7c7b\u4f3c\u4e8esplice\u51fd\u6570\uff09limit \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5f00\u59cb\u7684\u4f4d\u7f6e\uff08\u9ed8\u8ba4\u662f0\uff0c\u53ef\u4ee5\u4e0d\u9009\uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u622a\u53d6\u7684\u6570\u91cf\u3002 select * from gc [ where name is not null ] [ order by id asc ] limit 5 ; select * from gc [ where name is not null ] [ order by id asc ] limit 3 , 5 ; # \u4e2d\u62ec\u53f7\u5185\u90e8\u662f\u53ef\u9009\u53c2\u6570\uff08order\u5fc5\u987b\u5728where\u540e\u9762\uff09 # \u7b2c\u4e00\u53e5\uff1a\u5728\u83b7\u53d6\u7684\u7ed3\u679c\u4e2d\uff0c\u622a\u53d6\u524d\u4e94\u6761\u8bb0\u5f55\uff08index = 0 \u5230 index = 4\uff09 # \u7b2c\u4e8c\u53e5\uff1alimit \u4eceindex=3 \u5f00\u59cb\u622a\u53d6\uff0c\u622a\u53d65\u6761\u8bb0\u5f55","title":"limit \u9650\u5236"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#insert-select","text":"\u53ef\u4ee5\u5728\u4e00\u4e2a\u8868\u4e2d\u67e5\u8be2\u6570\u636e\uff0cselect * from table\uff0c \u7136\u540e\u628a\u67e5\u8be2\u7684\u7ed3\u679c\u63d2\u5165\u5230\u53e6\u4e00\u4e2a\u8868\u4e2d\uff08\u6570\u636e\u8fc1\u79fb\u4f1a\u7528\u5230\uff09 insert into account values ( 10 ); insert into account select name , age from oldAccount ;","title":"\u7ec4\u5408\u4f7f\u7528 insert select"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#update","text":"update tableName set columnName = newValue where XXX \u5982\u679c\u4f7f\u7528where\u6dfb\u52a0\uff0c\u90a3\u4e48\u4fee\u6539\u6ee1\u8db3\u6761\u4ef6\u7684\u90e8\u5206\uff1b\u5426\u5219\u4fee\u6539\u6574\u5217\u7684\u6570\u636e\uff1b update account set name = 'Tom' , email = '123@qq.com' where id = 1 ;","title":"update \u66f4\u65b0"},{"location":"02-database/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#where_1","text":"in \u5b57\u7b26\u4e32\u8303\u56f4\uff08\u79bb\u6563\u503c\uff09 select * from account where id in ( value1 , value2 ...); select * from account where id in ( select id from oldAccount where id < 10 ); \u4ece\u4e00\u4e2a\u96c6\u5408\u4e2d\u9009\u62e9\u53e6\u4e00\u4e2a\u96c6\u5408\uff08\u9009\u62e9\u7684\u53ef\u4ee5\u4f7f\u5b57\u7b26\u4e32\u8303\u56f4\uff0c\u662f\u6570\u503c\u8303\u56f4\u7684\u6269\u5927\uff09 between \u6570\u503c\u8303\u56f4\uff08\u8fde\u7eed\uff09 select * from account where id between 5 and 10 ; # \u8fd9\u91cc\u7684\u9009\u62e9\u662f[5, 10] select * from account where id not between 5 and 10 ; # Like \u5b57\u7b26\u4e32\u7684\u6a21\u7cca\u5339\u914d select * from account where name like '%ab%' ;","title":"where \u9ad8\u7ea7\u7528\u6cd5"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/","text":"Docker \u5165\u95e8\u6559\u7a0b \u00b6 Michael \u7b14\u8bb0: docker \u65b9\u4fbf\u4f7f\u7528\uff0c\u6027\u80fd\u6d88\u8017\u66f4\u5c0f\uff0c\u5df2\u7ecf\u9010\u6b65\u53d6\u4ee3\u865a\u62df\u673a\uff0c\u662f\u672a\u6765\u53d1\u5c55\u7684\u8d8b\u52bf\u3002\u524d\u7aef\u4e0d\u9700\u8981\u77e5\u9053\u5177\u4f53\u7ec6\u8282\uff0c\u53ef\u4ee5\u5728 docker \u5185\u90e8\u642d\u5efa\u670d\u52a1\uff0c\u4e3a\u524d\u7aef\u5f00\u53d1\u63d0\u4f9b API \u7b49\u3002 \u539f\u4f5c\u8005\uff1a \u962e\u4e00\u5cf0 \u539f\u59cb\u65e5\u671f\uff1a2018 \u5e74 2 \u6708 9 \u65e5 \u66f4\u65b0\u65e5\u671f\uff1a2024 \u5e74 8 \u6708 12 \u65e5 2013 \u5e74\u53d1\u5e03\u81f3\u4eca\uff0c Docker \u4e00\u76f4\u5e7f\u53d7\u77a9\u76ee\uff0c\u88ab\u8ba4\u4e3a\u53ef\u80fd\u4f1a\u6539\u53d8\u8f6f\u4ef6\u884c\u4e1a\u3002 \u4f46\u662f\uff0c\u8bb8\u591a\u4eba\u5e76\u4e0d\u6e05\u695a Docker \u5230\u5e95\u662f\u4ec0\u4e48\uff0c\u8981\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff0c\u597d\u5904\u53c8\u5728\u54ea\u91cc\uff1f\u672c\u6587\u5c31\u6765\u8be6\u7ec6\u89e3\u91ca\uff0c\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3\u5b83\uff0c\u8fd8\u5e26\u6709\u7b80\u5355\u6613\u61c2\u7684\u5b9e\u4f8b\uff0c\u6559\u4f60\u5982\u4f55\u5c06\u5b83\u7528\u4e8e\u65e5\u5e38\u5f00\u53d1\u3002 \u4e00\u3001\u73af\u5883\u914d\u7f6e\u7684\u96be\u9898 \u00b6 \u8f6f\u4ef6\u5f00\u53d1\u6700\u5927\u7684\u9ebb\u70e6\u4e8b\u4e4b\u4e00\uff0c\u5c31\u662f\u73af\u5883\u914d\u7f6e\u3002\u7528\u6237\u8ba1\u7b97\u673a\u7684\u73af\u5883\u90fd\u4e0d\u76f8\u540c\uff0c\u4f60\u600e\u4e48\u77e5\u9053\u81ea\u5bb6\u7684\u8f6f\u4ef6\uff0c\u80fd\u5728\u90a3\u4e9b\u673a\u5668\u8dd1\u8d77\u6765\uff1f \u7528\u6237\u5fc5\u987b\u4fdd\u8bc1\u4e24\u4ef6\u4e8b\uff1a\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u7f6e\uff0c\u5404\u79cd\u5e93\u548c\u7ec4\u4ef6\u7684\u5b89\u88c5\u3002\u53ea\u6709\u5b83\u4eec\u90fd\u6b63\u786e\uff0c\u8f6f\u4ef6\u624d\u80fd\u8fd0\u884c\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5b89\u88c5\u4e00\u4e2a Python \u5e94\u7528\uff0c\u8ba1\u7b97\u673a\u5fc5\u987b\u6709 Python \u5f15\u64ce\uff0c\u8fd8\u5fc5\u987b\u6709\u5404\u79cd\u4f9d\u8d56\uff0c\u53ef\u80fd\u8fd8\u8981\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u3002 \u5982\u679c\u67d0\u4e9b\u8001\u65e7\u7684\u6a21\u5757\u4e0e\u5f53\u524d\u73af\u5883\u4e0d\u517c\u5bb9\uff0c\u90a3\u5c31\u9ebb\u70e6\u4e86\u3002\u5f00\u53d1\u8005\u5e38\u5e38\u4f1a\u8bf4\uff1a\"\u5b83\u5728\u6211\u7684\u673a\u5668\u53ef\u4ee5\u8dd1\u4e86\"\uff08It works on my machine\uff09\uff0c\u8a00\u4e0b\u4e4b\u610f\u5c31\u662f\uff0c\u5176\u4ed6\u673a\u5668\u5f88\u53ef\u80fd\u8dd1\u4e0d\u4e86\u3002 \u73af\u5883\u914d\u7f6e\u5982\u6b64\u9ebb\u70e6\uff0c\u6362\u4e00\u53f0\u673a\u5668\uff0c\u5c31\u8981\u91cd\u6765\u4e00\u6b21\uff0c\u65f7\u65e5\u8d39\u65f6\u3002\u5f88\u591a\u4eba\u60f3\u5230\uff0c\u80fd\u4e0d\u80fd\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\u95ee\u9898\uff0c\u8f6f\u4ef6\u53ef\u4ee5\u5e26\u73af\u5883\u5b89\u88c5\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b89\u88c5\u7684\u65f6\u5019\uff0c\u628a\u539f\u59cb\u73af\u5883\u4e00\u6a21\u4e00\u6837\u5730\u590d\u5236\u8fc7\u6765\u3002 \u4e8c\u3001\u865a\u62df\u673a \u00b6 \u865a\u62df\u673a\uff08virtual machine\uff09\u5c31\u662f\u5e26\u73af\u5883\u5b89\u88c5\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u53ef\u4ee5\u5728\u4e00\u79cd\u64cd\u4f5c\u7cfb\u7edf\u91cc\u9762\uff0c\u8fd0\u884c\u53e6\u4e00\u79cd\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6bd4\u5982\u5728 Windows \u7cfb\u7edf\u91cc\u9762\u8fd0\u884c Linux \u7cfb\u7edf\u3002\u5e94\u7528\u7a0b\u5e8f\u5bf9\u6b64\u6beb\u65e0\u611f\u77e5\uff0c\u56e0\u4e3a\u865a\u62df\u673a\u770b\u4e0a\u53bb\u8ddf\u771f\u5b9e\u7cfb\u7edf\u4e00\u6a21\u4e00\u6837\uff0c\u800c\u5bf9\u4e8e\u5e95\u5c42\u7cfb\u7edf\u6765\u8bf4\uff0c\u865a\u62df\u673a\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u6587\u4ef6\uff0c\u4e0d\u9700\u8981\u4e86\u5c31\u5220\u6389\uff0c\u5bf9\u5176\u4ed6\u90e8\u5206\u6beb\u65e0\u5f71\u54cd\u3002 \u867d\u7136\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u865a\u62df\u673a\u8fd8\u539f\u8f6f\u4ef6\u7684\u539f\u59cb\u73af\u5883\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a\u65b9\u6848\u6709\u51e0\u4e2a\u7f3a\u70b9\u3002 \uff081\uff09\u8d44\u6e90\u5360\u7528\u591a \u865a\u62df\u673a\u4f1a\u72ec\u5360\u4e00\u90e8\u5206\u5185\u5b58\u548c\u786c\u76d8\u7a7a\u95f4\u3002\u5b83\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5176\u4ed6\u7a0b\u5e8f\u5c31\u4e0d\u80fd\u4f7f\u7528\u8fd9\u4e9b\u8d44\u6e90\u4e86\u3002\u54ea\u6015\u865a\u62df\u673a\u91cc\u9762\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u771f\u6b63\u4f7f\u7528\u7684\u5185\u5b58\u53ea\u6709 1MB\uff0c\u865a\u62df\u673a\u4f9d\u7136\u9700\u8981\u51e0\u767e MB \u7684\u5185\u5b58\u624d\u80fd\u8fd0\u884c\u3002 \uff082\uff09\u5197\u4f59\u6b65\u9aa4\u591a \u865a\u62df\u673a\u662f\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e00\u4e9b\u7cfb\u7edf\u7ea7\u522b\u7684\u64cd\u4f5c\u6b65\u9aa4\uff0c\u5f80\u5f80\u65e0\u6cd5\u8df3\u8fc7\uff0c\u6bd4\u5982\u7528\u6237\u767b\u5f55\u3002 \uff083\uff09\u542f\u52a8\u6162 \u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u591a\u4e45\uff0c\u542f\u52a8\u865a\u62df\u673a\u5c31\u9700\u8981\u591a\u4e45\u3002\u53ef\u80fd\u8981\u7b49\u51e0\u5206\u949f\uff0c\u5e94\u7528\u7a0b\u5e8f\u624d\u80fd\u771f\u6b63\u8fd0\u884c\u3002 \u4e09\u3001Linux \u5bb9\u5668 \u00b6 \u7531\u4e8e\u865a\u62df\u673a\u5b58\u5728\u8fd9\u4e9b\u7f3a\u70b9\uff0cLinux \u53d1\u5c55\u51fa\u4e86\u53e6\u4e00\u79cd\u865a\u62df\u5316\u6280\u672f\uff1aLinux \u5bb9\u5668\uff08Linux Containers\uff0c\u7f29\u5199\u4e3a LXC\uff09\u3002 **Linux \u5bb9\u5668\u4e0d\u662f\u6a21\u62df\u4e00\u4e2a\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u800c\u662f\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u9694\u79bb\u3002**\u6216\u8005\u8bf4\uff0c\u5728\u6b63\u5e38\u8fdb\u7a0b\u7684\u5916\u9762\u5957\u4e86\u4e00\u4e2a \u4fdd\u62a4\u5c42 \u3002\u5bf9\u4e8e\u5bb9\u5668\u91cc\u9762\u7684\u8fdb\u7a0b\u6765\u8bf4\uff0c\u5b83\u63a5\u89e6\u5230\u7684\u5404\u79cd\u8d44\u6e90\u90fd\u662f\u865a\u62df\u7684\uff0c\u4ece\u800c\u5b9e\u73b0\u4e0e\u5e95\u5c42\u7cfb\u7edf\u7684\u9694\u79bb\u3002 \u7531\u4e8e\u5bb9\u5668\u662f\u8fdb\u7a0b\u7ea7\u522b\u7684\uff0c\u76f8\u6bd4\u865a\u62df\u673a\u6709\u5f88\u591a\u4f18\u52bf\u3002 \uff081\uff09\u542f\u52a8\u5feb \u5bb9\u5668\u91cc\u9762\u7684\u5e94\u7528\uff0c\u76f4\u63a5\u5c31\u662f\u5e95\u5c42\u7cfb\u7edf\u7684\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u800c\u4e0d\u662f\u865a\u62df\u673a\u5185\u90e8\u7684\u8fdb\u7a0b\u3002\u6240\u4ee5\uff0c\u542f\u52a8\u5bb9\u5668\u76f8\u5f53\u4e8e\u542f\u52a8\u672c\u673a\u7684\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u800c\u4e0d\u662f\u542f\u52a8\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u901f\u5ea6\u5c31\u5feb\u5f88\u591a\u3002 \uff082\uff09\u8d44\u6e90\u5360\u7528\u5c11 \u5bb9\u5668\u53ea\u5360\u7528\u9700\u8981\u7684\u8d44\u6e90\uff0c\u4e0d\u5360\u7528\u90a3\u4e9b\u6ca1\u6709\u7528\u5230\u7684\u8d44\u6e90\uff1b\u865a\u62df\u673a\u7531\u4e8e\u662f\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e0d\u53ef\u907f\u514d\u8981\u5360\u7528\u6240\u6709\u8d44\u6e90\u3002\u53e6\u5916\uff0c\u591a\u4e2a\u5bb9\u5668\u53ef\u4ee5\u5171\u4eab\u8d44\u6e90\uff0c\u865a\u62df\u673a\u90fd\u662f\u72ec\u4eab\u8d44\u6e90\u3002 \uff083\uff09\u4f53\u79ef\u5c0f \u5bb9\u5668\u53ea\u8981\u5305\u542b\u7528\u5230\u7684\u7ec4\u4ef6\u5373\u53ef\uff0c\u800c\u865a\u62df\u673a\u662f\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684\u6253\u5305\uff0c\u6240\u4ee5\u5bb9\u5668\u6587\u4ef6\u6bd4\u865a\u62df\u673a\u6587\u4ef6\u8981\u5c0f\u5f88\u591a\u3002 \u603b\u4e4b\uff0c\u5bb9\u5668\u6709\u70b9\u50cf\u8f7b\u91cf\u7ea7\u7684\u865a\u62df\u673a\uff0c\u80fd\u591f\u63d0\u4f9b\u865a\u62df\u5316\u7684\u73af\u5883\uff0c\u4f46\u662f\u6210\u672c\u5f00\u9500\u5c0f\u5f97\u591a\u3002 \u56db\u3001Docker \u662f\u4ec0\u4e48\uff1f \u00b6 **Docker \u5c5e\u4e8e Linux \u5bb9\u5668\u7684\u4e00\u79cd\u5c01\u88c5\uff0c\u63d0\u4f9b\u7b80\u5355\u6613\u7528\u7684\u5bb9\u5668\u4f7f\u7528\u63a5\u53e3\u3002**\u5b83\u662f\u76ee\u524d\u6700\u6d41\u884c\u7684 Linux \u5bb9\u5668\u89e3\u51b3\u65b9\u6848\u3002 Docker \u5c06\u5e94\u7528\u7a0b\u5e8f\u4e0e\u8be5\u7a0b\u5e8f\u7684\u4f9d\u8d56\uff0c\u6253\u5305\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u3002\u8fd0\u884c\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u865a\u62df\u5bb9\u5668\u3002\u7a0b\u5e8f\u5728\u8fd9\u4e2a\u865a\u62df\u5bb9\u5668\u91cc\u8fd0\u884c\uff0c\u5c31\u597d\u50cf\u5728\u771f\u5b9e\u7684\u7269\u7406\u673a\u4e0a\u8fd0\u884c\u4e00\u6837\u3002\u6709\u4e86 Docker\uff0c\u5c31\u4e0d\u7528\u62c5\u5fc3\u73af\u5883\u95ee\u9898\u3002 \u603b\u4f53\u6765\u8bf4\uff0cDocker \u7684\u63a5\u53e3\u76f8\u5f53\u7b80\u5355\uff0c\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u5730\u521b\u5efa\u548c\u4f7f\u7528\u5bb9\u5668\uff0c\u628a\u81ea\u5df1\u7684\u5e94\u7528\u653e\u5165\u5bb9\u5668\u3002\u5bb9\u5668\u8fd8\u53ef\u4ee5\u8fdb\u884c\u7248\u672c\u7ba1\u7406\u3001\u590d\u5236\u3001\u5206\u4eab\u3001\u4fee\u6539\uff0c\u5c31\u50cf\u7ba1\u7406\u666e\u901a\u7684\u4ee3\u7801\u4e00\u6837\u3002 \u4e94\u3001Docker \u7684\u7528\u9014 \u00b6 Docker \u7684\u4e3b\u8981\u7528\u9014\uff0c\u76ee\u524d\u6709\u4e09\u5927\u7c7b\u3002 **\uff081\uff09\u63d0\u4f9b\u4e00\u6b21\u6027\u7684\u73af\u5883\u3002**\u6bd4\u5982\uff0c\u672c\u5730\u6d4b\u8bd5\u4ed6\u4eba\u7684\u8f6f\u4ef6\uff1b\u6301\u7eed\u96c6\u6210\u65f6\uff0c\u63d0\u4f9b\u5355\u5143\u6d4b\u8bd5\u548c\u6784\u5efa\u7684\u73af\u5883\u3002 **\uff082\uff09\u63d0\u4f9b\u5f39\u6027\u7684\u4e91\u670d\u52a1\u3002**\u56e0\u4e3a Docker \u5bb9\u5668\u53ef\u4ee5\u968f\u5f00\u968f\u5173\uff0c\u5f88\u9002\u5408\u52a8\u6001\u6269\u5bb9\u548c\u7f29\u5bb9\u3002 **\uff083\uff09\u7ec4\u5efa\u5fae\u670d\u52a1\u67b6\u6784\u3002**\u901a\u8fc7\u591a\u4e2a\u5bb9\u5668\uff0c\u4e00\u53f0\u673a\u5668\u53ef\u4ee5\u8dd1\u591a\u4e2a\u670d\u52a1\uff0c\u56e0\u6b64\u5728\u672c\u673a\u5c31\u53ef\u4ee5\u6a21\u62df\u51fa\u5fae\u670d\u52a1\u67b6\u6784\u3002 \u516d\u3001Docker \u7684\u5b89\u88c5 \u00b6 Docker \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5546\u4e1a\u4ea7\u54c1\uff0c\u6709\u4e24\u4e2a\u7248\u672c\uff1a\u793e\u533a\u7248\uff08Community Edition\uff0c\u7f29\u5199\u4e3a CE\uff09\u548c\u4f01\u4e1a\u7248\uff08Enterprise Edition\uff0c\u7f29\u5199\u4e3a EE\uff09\u3002\u4f01\u4e1a\u7248\u5305\u542b\u4e86\u4e00\u4e9b\u6536\u8d39\u670d\u52a1\uff0c\u4e2a\u4eba\u5f00\u53d1\u8005\u4e00\u822c\u7528\u4e0d\u5230\u3002\u4e0b\u9762\u7684\u4ecb\u7ecd\u90fd\u9488\u5bf9\u793e\u533a\u7248\u3002 Docker CE \u7684\u5b89\u88c5\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863\u3002 Mac Windows Ubuntu Debian CentOS Fedora \u5176\u4ed6 Linux \u53d1\u884c\u7248 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\u3002 $ docker version # \u6216\u8005 $ docker info Docker \u9700\u8981\u7528\u6237\u5177\u6709 sudo \u6743\u9650\uff0c\u4e3a\u4e86\u907f\u514d\u6bcf\u6b21\u547d\u4ee4\u90fd\u8f93\u5165 sudo \uff0c\u53ef\u4ee5\u628a\u7528\u6237\u52a0\u5165 Docker \u7528\u6237\u7ec4\uff08 \u5b98\u65b9\u6587\u6863 \uff09\u3002 $ sudo usermod -aG docker $USER Docker \u662f\u670d\u52a1\u5668----\u5ba2\u6237\u7aef\u67b6\u6784\u3002\u547d\u4ee4\u884c\u8fd0\u884c docker \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u9700\u8981\u672c\u673a\u6709 Docker \u670d\u52a1\u3002\u5982\u679c\u8fd9\u9879\u670d\u52a1\u6ca1\u6709\u542f\u52a8\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u542f\u52a8\uff08 \u5b98\u65b9\u6587\u6863 \uff09\u3002 # service \u547d\u4ee4\u7684\u7528\u6cd5 $ sudo service docker start # systemctl \u547d\u4ee4\u7684\u7528\u6cd5 $ sudo systemctl start docker \u516d\u3001image \u6587\u4ef6 \u00b6 **Docker \u628a\u5e94\u7528\u7a0b\u5e8f\u53ca\u5176\u4f9d\u8d56\uff0c\u6253\u5305\u5728 image \u6587\u4ef6\u91cc\u9762\u3002**\u53ea\u6709\u901a\u8fc7\u8fd9\u4e2a\u6587\u4ef6\uff0c\u624d\u80fd\u751f\u6210 Docker \u5bb9\u5668\u3002image \u6587\u4ef6\u53ef\u4ee5\u770b\u4f5c\u662f\u5bb9\u5668\u7684\u6a21\u677f\u3002Docker \u6839\u636e image \u6587\u4ef6\u751f\u6210\u5bb9\u5668\u7684\u5b9e\u4f8b\u3002\u540c\u4e00\u4e2a image \u6587\u4ef6\uff0c\u53ef\u4ee5\u751f\u6210\u591a\u4e2a\u540c\u65f6\u8fd0\u884c\u7684\u5bb9\u5668\u5b9e\u4f8b\u3002 image \u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e00\u4e2a image \u6587\u4ef6\u5f80\u5f80\u901a\u8fc7\u7ee7\u627f\u53e6\u4e00\u4e2a image \u6587\u4ef6\uff0c\u52a0\u4e0a\u4e00\u4e9b\u4e2a\u6027\u5316\u8bbe\u7f6e\u800c\u751f\u6210\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5728 Ubuntu \u7684 image \u57fa\u7840\u4e0a\uff0c\u5f80\u91cc\u9762\u52a0\u5165 Apache \u670d\u52a1\u5668\uff0c\u5f62\u6210\u4f60\u7684 image\u3002 # \u5217\u51fa\u672c\u673a\u7684\u6240\u6709 image \u6587\u4ef6\u3002 $ docker image ls # \u5220\u9664 image \u6587\u4ef6 $ docker image rm [ imageName ] image \u6587\u4ef6\u662f\u901a\u7528\u7684\uff0c\u4e00\u53f0\u673a\u5668\u7684 image \u6587\u4ef6\u62f7\u8d1d\u5230\u53e6\u4e00\u53f0\u673a\u5668\uff0c\u7167\u6837\u53ef\u4ee5\u4f7f\u7528\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4e3a\u4e86\u8282\u7701\u65f6\u95f4\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u4f7f\u7528\u522b\u4eba\u5236\u4f5c\u597d\u7684 image \u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u5236\u4f5c\u3002\u5373\u4f7f\u8981\u5b9a\u5236\uff0c\u4e5f\u5e94\u8be5\u57fa\u4e8e\u522b\u4eba\u7684 image \u6587\u4ef6\u8fdb\u884c\u52a0\u5de5\uff0c\u800c\u4e0d\u662f\u4ece\u96f6\u5f00\u59cb\u5236\u4f5c\u3002 \u4e3a\u4e86\u65b9\u4fbf\u5171\u4eab\uff0cimage \u6587\u4ef6\u5236\u4f5c\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u4e0a\u4f20\u5230\u7f51\u4e0a\u7684\u4ed3\u5e93\u3002Docker \u7684\u5b98\u65b9\u4ed3\u5e93 Docker Hub \u662f\u6700\u91cd\u8981\u3001\u6700\u5e38\u7528\u7684 image \u4ed3\u5e93\u3002\u6b64\u5916\uff0c\u51fa\u552e\u81ea\u5df1\u5236\u4f5c\u7684 image \u6587\u4ef6\u4e5f\u662f\u53ef\u4ee5\u7684\u3002 \u4e03\u3001\u5b9e\u4f8b\uff1ahello world \u00b6 \u4e0b\u9762\uff0c\u6211\u4eec\u901a\u8fc7\u6700\u7b80\u5355\u7684 image \u6587\u4ef6\" hello world\" \uff0c\u611f\u53d7\u4e00\u4e0b Docker\u3002 \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u56fd\u5185\u8fde\u63a5 Docker \u7684\u5b98\u65b9\u4ed3\u5e93\u5f88\u6162\uff0c\u8fd8\u4f1a\u65ad\u7ebf\uff0c\u9700\u8981\u5c06\u9ed8\u8ba4\u4ed3\u5e93\u6539\u6210\u56fd\u5185\u7684\u955c\u50cf\u7f51\u7ad9\uff0c\u5177\u4f53\u7684\u4fee\u6539\u65b9\u6cd5\u5728 \u4e0b\u4e00\u7bc7\u6587\u7ae0 \u7684\u7b2c\u4e00\u8282\u3002\u6709\u9700\u8981\u7684\u670b\u53cb\uff0c\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u3002 \u9996\u5148\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u5c06 image \u6587\u4ef6\u4ece\u4ed3\u5e93\u6293\u53d6\u5230\u672c\u5730\u3002 $ docker image pull library/hello-world \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c docker image pull \u662f\u6293\u53d6 image \u6587\u4ef6\u7684\u547d\u4ee4\u3002 library/hello-world \u662f image \u6587\u4ef6\u5728\u4ed3\u5e93\u91cc\u9762\u7684\u4f4d\u7f6e\uff0c\u5176\u4e2d library \u662f image \u6587\u4ef6\u6240\u5728\u7684\u7ec4\uff0c hello-world \u662f image \u6587\u4ef6\u7684\u540d\u5b57\u3002 \u7531\u4e8e Docker \u5b98\u65b9\u63d0\u4f9b\u7684 image \u6587\u4ef6\uff0c\u90fd\u653e\u5728 library \u7ec4\u91cc\u9762\uff0c\u6240\u4ee5\u5b83\u7684\u662f\u9ed8\u8ba4\u7ec4\uff0c\u53ef\u4ee5\u7701\u7565\u3002\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u547d\u4ee4\u53ef\u4ee5\u5199\u6210\u4e0b\u9762\u8fd9\u6837\u3002 $ docker image pull hello-world \u6293\u53d6\u6210\u529f\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u672c\u673a\u770b\u5230\u8fd9\u4e2a image \u6587\u4ef6\u4e86\u3002 $ docker image ls \u73b0\u5728\uff0c\u8fd0\u884c\u8fd9\u4e2a image \u6587\u4ef6\u3002 $ docker container run hello-world docker container run \u547d\u4ee4\u4f1a\u4ece image \u6587\u4ef6\uff0c\u751f\u6210\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u5b9e\u4f8b\u3002 \u6ce8\u610f\uff0c docker container run \u547d\u4ee4\u5177\u6709\u81ea\u52a8\u6293\u53d6 image \u6587\u4ef6\u7684\u529f\u80fd\u3002\u5982\u679c\u53d1\u73b0\u672c\u5730\u6ca1\u6709\u6307\u5b9a\u7684 image \u6587\u4ef6\uff0c\u5c31\u4f1a\u4ece\u4ed3\u5e93\u81ea\u52a8\u6293\u53d6\u3002\u56e0\u6b64\uff0c\u524d\u9762\u7684 docker image pull \u547d\u4ee4\u5e76\u4e0d\u662f\u5fc5\u9700\u7684\u6b65\u9aa4\u3002 \u5982\u679c\u8fd0\u884c\u6210\u529f\uff0c\u4f60\u4f1a\u5728\u5c4f\u5e55\u4e0a\u8bfb\u5230\u4e0b\u9762\u7684\u8f93\u51fa\u3002 $ docker container run hello-world Hello from Docker! This message shows that your installation appears to be working correctly. ... ... \u8f93\u51fa\u8fd9\u6bb5\u63d0\u793a\u4ee5\u540e\uff0c hello world \u5c31\u4f1a\u505c\u6b62\u8fd0\u884c\uff0c\u5bb9\u5668\u81ea\u52a8\u7ec8\u6b62\u3002 \u6709\u4e9b\u5bb9\u5668\u4e0d\u4f1a\u81ea\u52a8\u7ec8\u6b62\uff0c\u56e0\u4e3a\u63d0\u4f9b\u7684\u662f\u670d\u52a1\u3002\u6bd4\u5982\uff0c\u5b89\u88c5\u8fd0\u884c Ubuntu \u7684 image\uff0c\u5c31\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4f53\u9a8c Ubuntu \u7cfb\u7edf\u3002 $ docker container run -it ubuntu bash \u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u4f1a\u81ea\u52a8\u7ec8\u6b62\u7684\u5bb9\u5668\uff0c\u5fc5\u987b\u4f7f\u7528 docker container kill \u547d\u4ee4\u624b\u52a8\u7ec8\u6b62\u3002 $ docker container kill [ containID ] \u516b\u3001\u5bb9\u5668\u6587\u4ef6 \u00b6 **image \u6587\u4ef6\u751f\u6210\u7684\u5bb9\u5668\u5b9e\u4f8b\uff0c\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u79f0\u4e3a\u5bb9\u5668\u6587\u4ef6\u3002**\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6\u5bb9\u5668\u751f\u6210\uff0c\u5c31\u4f1a\u540c\u65f6\u5b58\u5728\u4e24\u4e2a\u6587\u4ef6\uff1a image \u6587\u4ef6\u548c\u5bb9\u5668\u6587\u4ef6\u3002\u800c\u4e14\u5173\u95ed\u5bb9\u5668\u5e76\u4e0d\u4f1a\u5220\u9664\u5bb9\u5668\u6587\u4ef6\uff0c\u53ea\u662f\u5bb9\u5668\u505c\u6b62\u8fd0\u884c\u800c\u5df2\u3002 # \u5217\u51fa\u672c\u673a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668 $ docker container ls # \u5217\u51fa\u672c\u673a\u6240\u6709\u5bb9\u5668\uff0c\u5305\u62ec\u7ec8\u6b62\u8fd0\u884c\u7684\u5bb9\u5668 $ docker container ls --all \u4e0a\u9762\u547d\u4ee4\u7684\u8f93\u51fa\u7ed3\u679c\u4e4b\u4e2d\uff0c\u5305\u62ec\u5bb9\u5668\u7684 ID\u3002\u5f88\u591a\u5730\u65b9\u90fd\u9700\u8981\u63d0\u4f9b\u8fd9\u4e2a ID\uff0c\u6bd4\u5982\u4e0a\u4e00\u8282\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\u7684 docker container kill \u547d\u4ee4\u3002 \u7ec8\u6b62\u8fd0\u884c\u7684\u5bb9\u5668\u6587\u4ef6\uff0c\u4f9d\u7136\u4f1a\u5360\u636e\u786c\u76d8\u7a7a\u95f4\uff0c\u53ef\u4ee5\u4f7f\u7528 docker container rm \u547d\u4ee4\u5220\u9664\u3002 $ docker container rm [ containerID ] \u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u4e4b\u540e\uff0c\u518d\u4f7f\u7528 docker container ls --all \u547d\u4ee4\uff0c\u5c31\u4f1a\u53d1\u73b0\u88ab\u5220\u9664\u7684\u5bb9\u5668\u6587\u4ef6\u5df2\u7ecf\u6d88\u5931\u4e86\u3002 \u4e5d\u3001Dockerfile \u6587\u4ef6 \u00b6 \u5b66\u4f1a\u4f7f\u7528 image \u6587\u4ef6\u4ee5\u540e\uff0c\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\uff0c\u5982\u4f55\u53ef\u4ee5\u751f\u6210 image \u6587\u4ef6\uff1f\u5982\u679c\u4f60\u8981\u63a8\u5e7f\u81ea\u5df1\u7684\u8f6f\u4ef6\uff0c\u52bf\u5fc5\u8981\u81ea\u5df1\u5236\u4f5c image \u6587\u4ef6\u3002 \u8fd9\u5c31\u9700\u8981\u7528\u5230 Dockerfile \u6587\u4ef6\u3002\u5b83\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u7528\u6765\u914d\u7f6e image\u3002Docker \u6839\u636e \u8be5\u6587\u4ef6\u751f\u6210\u4e8c\u8fdb\u5236\u7684 image \u6587\u4ef6\u3002 \u4e0b\u9762\u901a\u8fc7\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u7f16\u5199 Dockerfile \u6587\u4ef6\u3002 \u5341\u3001\u5b9e\u4f8b\uff1a\u5236\u4f5c\u81ea\u5df1\u7684 Docker \u5bb9\u5668 \u00b6 \u4e0b\u9762\u6211\u4ee5 koa-demos \u9879\u76ee\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u600e\u4e48\u5199 Dockerfile \u6587\u4ef6\uff0c\u5b9e\u73b0\u8ba9\u7528\u6237\u5728 Docker \u5bb9\u5668\u91cc\u9762\u8fd0\u884c Koa \u6846\u67b6\u3002 \u4f5c\u4e3a\u51c6\u5907\u5de5\u4f5c\uff0c\u8bf7\u5148 \u4e0b\u8f7d\u6e90\u7801 \u3002 $ git clone https://github.com/ruanyf/koa-demos.git $ cd koa-demos 10.1 \u7f16\u5199 Dockerfile \u6587\u4ef6 \u00b6 \u9996\u5148\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 .dockerignore \uff0c\u5199\u5165\u4e0b\u9762\u7684 \u5185\u5bb9 \u3002 .git node_modules npm-debug.log \u4e0a\u9762\u4ee3\u7801\u8868\u793a\uff0c\u8fd9\u4e09\u4e2a\u8def\u5f84\u8981\u6392\u9664\uff0c\u4e0d\u8981\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\u3002\u5982\u679c\u4f60\u6ca1\u6709\u8def\u5f84\u8981\u6392\u9664\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u4e0d\u65b0\u5efa\u3002 \u7136\u540e\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 Dockerfile\uff0c\u5199\u5165\u4e0b\u9762\u7684 \u5185\u5bb9 \u3002 FROM node:8.4 COPY . /app WORKDIR /app RUN npm install --registry = https://registry.npm.taobao.org EXPOSE 3000 \u4e0a\u9762\u4ee3\u7801\u4e00\u5171\u4e94\u884c\uff0c\u542b\u4e49\u5982\u4e0b\u3002 FROM node:8.4 \uff1a\u8be5 image \u6587\u4ef6\u7ee7\u627f\u5b98\u65b9\u7684 node image\uff0c\u5192\u53f7\u8868\u793a\u6807\u7b7e\uff0c\u8fd9\u91cc\u6807\u7b7e\u662f 8.4 \uff0c\u5373 8.4 \u7248\u672c\u7684 node\u3002 COPY . /app \uff1a\u5c06\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff08\u9664\u4e86 .dockerignore \u6392\u9664\u7684\u8def\u5f84\uff09\uff0c\u90fd\u62f7\u8d1d\u8fdb\u5165 image \u6587\u4ef6\u7684 /app \u76ee\u5f55\u3002 WORKDIR /app \uff1a\u6307\u5b9a\u63a5\u4e0b\u6765\u7684\u5de5\u4f5c\u8def\u5f84\u4e3a /app \u3002 RUN npm install \uff1a\u5728 /app \u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c npm install \u547d\u4ee4\u5b89\u88c5\u4f9d\u8d56\u3002\u6ce8\u610f\uff0c\u5b89\u88c5\u540e\u6240\u6709\u7684\u4f9d\u8d56\uff0c\u90fd\u5c06\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\u3002 EXPOSE 3000 \uff1a\u5c06\u5bb9\u5668 3000 \u7aef\u53e3\u66b4\u9732\u51fa\u6765\uff0c \u5141\u8bb8\u5916\u90e8\u8fde\u63a5\u8fd9\u4e2a\u7aef\u53e3\u3002 10.2 \u521b\u5efa image \u6587\u4ef6 \u00b6 \u6709\u4e86 Dockerfile \u6587\u4ef6\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 docker image build \u547d\u4ee4\u521b\u5efa image \u6587\u4ef6\u4e86\u3002 $ docker image build -t koa-demo . # \u6216\u8005 $ docker image build -t koa-demo:0.0.1 . \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c -t \u53c2\u6570\u7528\u6765\u6307\u5b9a image \u6587\u4ef6\u7684\u540d\u5b57\uff0c\u540e\u9762\u8fd8\u53ef\u4ee5\u7528\u5192\u53f7\u6307\u5b9a\u6807\u7b7e\u3002\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u7684\u6807\u7b7e\u5c31\u662f latest \u3002\u6700\u540e\u7684\u90a3\u4e2a\u70b9\u8868\u793a Dockerfile \u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\uff0c\u4e0a\u4f8b\u662f\u5f53\u524d\u8def\u5f84\uff0c\u6240\u4ee5\u662f\u4e00\u4e2a\u70b9\u3002 \u5982\u679c\u8fd0\u884c\u6210\u529f\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u65b0\u751f\u6210\u7684 image \u6587\u4ef6 koa-demo \u4e86\u3002 $ docker image ls 10.3 \u751f\u6210\u5bb9\u5668 \u00b6 docker container run \u547d\u4ee4\u4f1a\u4ece image \u6587\u4ef6\u751f\u6210\u5bb9\u5668\u3002 $ docker container run -p 8000 :3000 -it koa-demo /bin/bash # \u6216\u8005 $ docker container run -p 8000 :3000 -it koa-demo:0.0.1 /bin/bash \u4e0a\u9762\u547d\u4ee4\u7684\u5404\u4e2a\u53c2\u6570\u542b\u4e49\u5982\u4e0b\uff1a -p \u53c2\u6570\uff1a\u5bb9\u5668\u7684 3000 \u7aef\u53e3\u6620\u5c04\u5230\u672c\u673a\u7684 8000 \u7aef\u53e3\u3002 -it \u53c2\u6570\uff1a\u5bb9\u5668\u7684 Shell \u6620\u5c04\u5230\u5f53\u524d\u7684 Shell\uff0c\u7136\u540e\u4f60\u5728\u672c\u673a\u7a97\u53e3\u8f93\u5165\u7684\u547d\u4ee4\uff0c\u5c31\u4f1a\u4f20\u5165\u5bb9\u5668\u3002 koa-demo:0.0.1 \uff1aimage \u6587\u4ef6\u7684\u540d\u5b57\uff08\u5982\u679c\u6709\u6807\u7b7e\uff0c\u8fd8\u9700\u8981\u63d0\u4f9b\u6807\u7b7e\uff0c\u9ed8\u8ba4\u662f latest \u6807\u7b7e\uff09\u3002 /bin/bash \uff1a\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u5185\u90e8\u7b2c\u4e00\u4e2a\u6267\u884c\u7684\u547d\u4ee4\u3002\u8fd9\u91cc\u662f\u542f\u52a8 Bash\uff0c\u4fdd\u8bc1\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 Shell\u3002 \u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u4ee5\u540e\uff0c\u5c31\u4f1a\u8fd4\u56de\u4e00\u4e2a\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u3002 root@66d80f4aaf1e:/app# \u8fd9\u8868\u793a\u4f60\u5df2\u7ecf\u5728\u5bb9\u5668\u91cc\u9762\u4e86\uff0c\u8fd4\u56de\u7684\u63d0\u793a\u7b26\u5c31\u662f\u5bb9\u5668\u5185\u90e8\u7684 Shell \u63d0\u793a\u7b26\u3002\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 root@66d80f4aaf1e:/app# node demos/01.js \u8fd9\u65f6\uff0cKoa \u6846\u67b6\u5df2\u7ecf\u8fd0\u884c\u8d77\u6765\u4e86\u3002\u6253\u5f00\u672c\u673a\u7684\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee http://127.0.0.1:8000 \uff0c\u7f51\u9875\u663e\u793a\"Not Found\"\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a demo \u6ca1\u6709\u5199\u8def\u7531\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cNode \u8fdb\u7a0b\u8fd0\u884c\u5728 Docker \u5bb9\u5668\u7684\u865a\u62df\u73af\u5883\u91cc\u9762\uff0c\u8fdb\u7a0b\u63a5\u89e6\u5230\u7684\u6587\u4ef6\u7cfb\u7edf\u548c\u7f51\u7edc\u63a5\u53e3\u90fd\u662f\u865a\u62df\u7684\uff0c\u4e0e\u672c\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\u548c\u7f51\u7edc\u63a5\u53e3\u662f\u9694\u79bb\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5b9a\u4e49\u5bb9\u5668\u4e0e\u7269\u7406\u673a\u7684\u7aef\u53e3\u6620\u5c04\uff08map\uff09\u3002 \u73b0\u5728\uff0c\u5728\u5bb9\u5668\u7684\u547d\u4ee4\u884c\uff0c\u6309\u4e0b Ctrl + c \u505c\u6b62 Node \u8fdb\u7a0b\uff0c\u7136\u540e\u6309\u4e0b Ctrl + d \uff08\u6216\u8005\u8f93\u5165 exit\uff09\u9000\u51fa\u5bb9\u5668\u3002\u6b64\u5916\uff0c\u4e5f\u53ef\u4ee5\u7528 docker container kill \u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\u3002 # \u5728\u672c\u673a\u7684\u53e6\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\uff0c\u67e5\u51fa\u5bb9\u5668\u7684 ID $ docker container ls # \u505c\u6b62\u6307\u5b9a\u7684\u5bb9\u5668\u8fd0\u884c $ docker container kill [ containerID ] \u5bb9\u5668\u505c\u6b62\u8fd0\u884c\u4e4b\u540e\uff0c\u5e76\u4e0d\u4f1a\u6d88\u5931\uff0c\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 # \u67e5\u51fa\u5bb9\u5668\u7684 ID $ docker container ls --all # \u5220\u9664\u6307\u5b9a\u7684\u5bb9\u5668\u6587\u4ef6 $ docker container rm [ containerID ] \u4e5f\u53ef\u4ee5\u4f7f\u7528 docker container run \u547d\u4ee4\u7684 --rm \u53c2\u6570\uff0c\u5728\u5bb9\u5668\u7ec8\u6b62\u8fd0\u884c\u540e\u81ea\u52a8\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 $ docker container run --rm -p 8000 :3000 -it koa-demo /bin/bash 10.4 CMD \u547d\u4ee4 \u00b6 \u4e0a\u4e00\u8282\u7684\u4f8b\u5b50\u91cc\u9762\uff0c\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u9700\u8981\u624b\u52a8\u8f93\u5165\u547d\u4ee4 node demos/01.js \u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u547d\u4ee4\u5199\u5728 Dockerfile \u91cc\u9762\uff0c\u8fd9\u6837\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u8fd9\u4e2a\u547d\u4ee4\u5c31\u5df2\u7ecf\u6267\u884c\u4e86\uff0c\u4e0d\u7528\u518d\u624b\u52a8\u8f93\u5165\u4e86\u3002 FROM node:8.4 COPY . /app WORKDIR /app RUN npm install --registry = https://registry.npm.taobao.org EXPOSE 3000 CMD node demos/01.js \u4e0a\u9762\u7684 Dockerfile \u91cc\u9762\uff0c\u591a\u4e86\u6700\u540e\u4e00\u884c CMD node demos/01.js \uff0c\u5b83\u8868\u793a\u5bb9\u5668\u542f\u52a8\u540e\u81ea\u52a8\u6267\u884c node demos/01.js \u3002 \u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c RUN \u547d\u4ee4\u4e0e CMD \u547d\u4ee4\u7684\u533a\u522b\u5728\u54ea\u91cc\uff1f\u7b80\u5355\u8bf4\uff0c RUN \u547d\u4ee4\u5728 image \u6587\u4ef6\u7684\u6784\u5efa\u9636\u6bb5\u6267\u884c\uff0c\u6267\u884c\u7ed3\u679c\u90fd\u4f1a\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\uff1b CMD \u547d\u4ee4\u5219\u662f\u5728\u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u3002\u53e6\u5916\uff0c\u4e00\u4e2a Dockerfile \u53ef\u4ee5\u5305\u542b\u591a\u4e2a RUN \u547d\u4ee4\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e00\u4e2a CMD \u547d\u4ee4\u3002 \u6ce8\u610f\uff0c\u6307\u5b9a\u4e86 CMD \u547d\u4ee4\u4ee5\u540e\uff0c docker container run \u547d\u4ee4\u5c31\u4e0d\u80fd\u9644\u52a0\u547d\u4ee4\u4e86\uff08\u6bd4\u5982\u524d\u9762\u7684 /bin/bash \uff09\uff0c\u5426\u5219\u5b83\u4f1a\u8986\u76d6 CMD \u547d\u4ee4\u3002\u73b0\u5728\uff0c\u542f\u52a8\u5bb9\u5668\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker container run --rm -p 8000 :3000 -it koa-demo:0.0.1 10.5 \u53d1\u5e03 image \u6587\u4ef6 \u00b6 \u5bb9\u5668\u8fd0\u884c\u6210\u529f\u540e\uff0c\u5c31\u786e\u8ba4\u4e86 image \u6587\u4ef6\u7684\u6709\u6548\u6027\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u628a image \u6587\u4ef6\u5206\u4eab\u5230\u7f51\u4e0a\uff0c\u8ba9\u5176\u4ed6\u4eba\u4f7f\u7528\u3002 \u9996\u5148\uff0c\u53bb hub.docker.com \u6216 cloud.docker.com \u6ce8\u518c\u4e00\u4e2a\u8d26\u6237\u3002\u7136\u540e\uff0c\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u767b\u5f55\u3002 $ docker login \u63a5\u7740\uff0c\u4e3a\u672c\u5730\u7684 image \u6807\u6ce8\u7528\u6237\u540d\u548c\u7248\u672c\u3002 $ docker image tag [ imageName ] [ username ] / [ repository ] : [ tag ] # \u5b9e\u4f8b $ docker image tag koa-demos:0.0.1 ruanyf/koa-demos:0.0.1 \u4e5f\u53ef\u4ee5\u4e0d\u6807\u6ce8\u7528\u6237\u540d\uff0c\u91cd\u65b0\u6784\u5efa\u4e00\u4e0b image \u6587\u4ef6\u3002 $ docker image build -t [ username ] / [ repository ] : [ tag ] . \u6700\u540e\uff0c\u53d1\u5e03 image \u6587\u4ef6\u3002 $ docker image push [ username ] / [ repository ] : [ tag ] \u53d1\u5e03\u6210\u529f\u4ee5\u540e\uff0c\u767b\u5f55 hub.docker.com\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u53d1\u5e03\u7684 image \u6587\u4ef6\u3002 \u5341\u4e00\u3001\u5176\u4ed6\u6709\u7528\u7684\u547d\u4ee4 \u00b6 docker \u7684\u4e3b\u8981\u7528\u6cd5\u5c31\u662f\u4e0a\u9762\u8fd9\u4e9b\uff0c\u6b64\u5916\u8fd8\u6709\u51e0\u4e2a\u547d\u4ee4\uff0c\u4e5f\u975e\u5e38\u6709\u7528\u3002 \uff081\uff09docker container start \u524d\u9762\u7684 docker container run \u547d\u4ee4\u662f\u65b0\u5efa\u5bb9\u5668\uff0c\u6bcf\u8fd0\u884c\u4e00\u6b21\uff0c\u5c31\u4f1a\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\u3002\u540c\u6837\u7684\u547d\u4ee4\u8fd0\u884c\u4e24\u6b21\uff0c\u5c31\u4f1a\u751f\u6210\u4e24\u4e2a\u4e00\u6a21\u4e00\u6837\u7684\u5bb9\u5668\u6587\u4ef6\u3002\u5982\u679c\u5e0c\u671b\u91cd\u590d\u4f7f\u7528\u5bb9\u5668\uff0c\u5c31\u8981\u4f7f\u7528 docker container start \u547d\u4ee4\uff0c\u5b83\u7528\u6765\u542f\u52a8\u5df2\u7ecf\u751f\u6210\u3001\u5df2\u7ecf\u505c\u6b62\u8fd0\u884c\u7684\u5bb9\u5668\u6587\u4ef6\u3002 $ docker container start [ containerID ] \uff082\uff09docker container stop \u524d\u9762\u7684 docker container kill \u547d\u4ee4\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\uff0c\u76f8\u5f53\u4e8e\u5411\u5bb9\u5668\u91cc\u9762\u7684\u4e3b\u8fdb\u7a0b\u53d1\u51fa SIGKILL \u4fe1\u53f7\u3002\u800c docker container stop \u547d\u4ee4\u4e5f\u662f\u7528\u6765\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\uff0c\u76f8\u5f53\u4e8e\u5411\u5bb9\u5668\u91cc\u9762\u7684\u4e3b\u8fdb\u7a0b\u53d1\u51fa SIGTERM \u4fe1\u53f7\uff0c\u7136\u540e\u8fc7\u4e00\u6bb5\u65f6\u95f4\u518d\u53d1\u51fa SIGKILL \u4fe1\u53f7\u3002 $ docker container stop [ containerID ] \u8fd9\u4e24\u4e2a\u4fe1\u53f7\u7684\u5dee\u522b\u662f\uff0c\u5e94\u7528\u7a0b\u5e8f\u6536\u5230 SIGTERM \u4fe1\u53f7\u4ee5\u540e\uff0c\u53ef\u4ee5\u81ea\u884c\u8fdb\u884c\u6536\u5c3e\u6e05\u7406\u5de5\u4f5c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4e0d\u7406\u4f1a\u8fd9\u4e2a\u4fe1\u53f7\u3002\u5982\u679c\u6536\u5230 SIGKILL \u4fe1\u53f7\uff0c\u5c31\u4f1a\u5f3a\u884c\u7acb\u5373\u7ec8\u6b62\uff0c\u90a3\u4e9b\u6b63\u5728\u8fdb\u884c\u4e2d\u7684\u64cd\u4f5c\u4f1a\u5168\u90e8\u4e22\u5931\u3002 \uff083\uff09docker container logs docker container logs \u547d\u4ee4\u7528\u6765\u67e5\u770b docker \u5bb9\u5668\u7684\u8f93\u51fa\uff0c\u5373\u5bb9\u5668\u91cc\u9762 Shell \u7684\u6807\u51c6\u8f93\u51fa\u3002\u5982\u679c docker run \u547d\u4ee4\u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4f7f\u7528 -it \u53c2\u6570\uff0c\u5c31\u8981\u7528\u8fd9\u4e2a\u547d\u4ee4\u67e5\u770b\u8f93\u51fa\u3002 $ docker container logs [ containerID ] \uff084\uff09docker container exec docker container exec \u547d\u4ee4\u7528\u4e8e\u8fdb\u5165\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684 docker \u5bb9\u5668\u3002\u5982\u679c docker run \u547d\u4ee4\u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4f7f\u7528 -it \u53c2\u6570\uff0c\u5c31\u8981\u7528\u8fd9\u4e2a\u547d\u4ee4\u8fdb\u5165\u5bb9\u5668\u3002\u4e00\u65e6\u8fdb\u5165\u4e86\u5bb9\u5668\uff0c\u5c31\u53ef\u4ee5\u5728\u5bb9\u5668\u7684 Shell \u6267\u884c\u547d\u4ee4\u4e86\u3002 $ docker container exec -it [ containerID ] /bin/bash \uff085\uff09docker container cp docker container cp \u547d\u4ee4\u7528\u4e8e\u4ece\u6b63\u5728\u8fd0\u884c\u7684 Docker \u5bb9\u5668\u91cc\u9762\uff0c\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230\u672c\u673a\u3002\u4e0b\u9762\u662f\u62f7\u8d1d\u5230\u5f53\u524d\u76ee\u5f55\u7684\u5199\u6cd5\u3002 $ docker container cp [ containID ] : [ /path/to/file ] . \u975e\u5e38\u611f\u8c22\u4f60\u4e00\u76f4\u8bfb\u5230\u4e86\u8fd9\u91cc\uff0c\u8fd9\u4e2a\u7cfb\u5217\u8fd8\u6709 \u4e0b\u4e00\u7bc7 \uff0c\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Docker \u642d\u5efa\u771f\u6b63\u7684\u7f51\u7ad9\uff0c\u6b22\u8fce \u7ee7\u7eed\u9605\u8bfb \u3002 \uff08\u5b8c\uff09","title":"01 Docker \u5165\u95e8\u6559\u7a0b-\u962e\u4e00\u5cf0"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#docker","text":"Michael \u7b14\u8bb0: docker \u65b9\u4fbf\u4f7f\u7528\uff0c\u6027\u80fd\u6d88\u8017\u66f4\u5c0f\uff0c\u5df2\u7ecf\u9010\u6b65\u53d6\u4ee3\u865a\u62df\u673a\uff0c\u662f\u672a\u6765\u53d1\u5c55\u7684\u8d8b\u52bf\u3002\u524d\u7aef\u4e0d\u9700\u8981\u77e5\u9053\u5177\u4f53\u7ec6\u8282\uff0c\u53ef\u4ee5\u5728 docker \u5185\u90e8\u642d\u5efa\u670d\u52a1\uff0c\u4e3a\u524d\u7aef\u5f00\u53d1\u63d0\u4f9b API \u7b49\u3002 \u539f\u4f5c\u8005\uff1a \u962e\u4e00\u5cf0 \u539f\u59cb\u65e5\u671f\uff1a2018 \u5e74 2 \u6708 9 \u65e5 \u66f4\u65b0\u65e5\u671f\uff1a2024 \u5e74 8 \u6708 12 \u65e5 2013 \u5e74\u53d1\u5e03\u81f3\u4eca\uff0c Docker \u4e00\u76f4\u5e7f\u53d7\u77a9\u76ee\uff0c\u88ab\u8ba4\u4e3a\u53ef\u80fd\u4f1a\u6539\u53d8\u8f6f\u4ef6\u884c\u4e1a\u3002 \u4f46\u662f\uff0c\u8bb8\u591a\u4eba\u5e76\u4e0d\u6e05\u695a Docker \u5230\u5e95\u662f\u4ec0\u4e48\uff0c\u8981\u89e3\u51b3\u4ec0\u4e48\u95ee\u9898\uff0c\u597d\u5904\u53c8\u5728\u54ea\u91cc\uff1f\u672c\u6587\u5c31\u6765\u8be6\u7ec6\u89e3\u91ca\uff0c\u5e2e\u52a9\u5927\u5bb6\u7406\u89e3\u5b83\uff0c\u8fd8\u5e26\u6709\u7b80\u5355\u6613\u61c2\u7684\u5b9e\u4f8b\uff0c\u6559\u4f60\u5982\u4f55\u5c06\u5b83\u7528\u4e8e\u65e5\u5e38\u5f00\u53d1\u3002","title":"Docker \u5165\u95e8\u6559\u7a0b"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#_1","text":"\u8f6f\u4ef6\u5f00\u53d1\u6700\u5927\u7684\u9ebb\u70e6\u4e8b\u4e4b\u4e00\uff0c\u5c31\u662f\u73af\u5883\u914d\u7f6e\u3002\u7528\u6237\u8ba1\u7b97\u673a\u7684\u73af\u5883\u90fd\u4e0d\u76f8\u540c\uff0c\u4f60\u600e\u4e48\u77e5\u9053\u81ea\u5bb6\u7684\u8f6f\u4ef6\uff0c\u80fd\u5728\u90a3\u4e9b\u673a\u5668\u8dd1\u8d77\u6765\uff1f \u7528\u6237\u5fc5\u987b\u4fdd\u8bc1\u4e24\u4ef6\u4e8b\uff1a\u64cd\u4f5c\u7cfb\u7edf\u7684\u8bbe\u7f6e\uff0c\u5404\u79cd\u5e93\u548c\u7ec4\u4ef6\u7684\u5b89\u88c5\u3002\u53ea\u6709\u5b83\u4eec\u90fd\u6b63\u786e\uff0c\u8f6f\u4ef6\u624d\u80fd\u8fd0\u884c\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u5b89\u88c5\u4e00\u4e2a Python \u5e94\u7528\uff0c\u8ba1\u7b97\u673a\u5fc5\u987b\u6709 Python \u5f15\u64ce\uff0c\u8fd8\u5fc5\u987b\u6709\u5404\u79cd\u4f9d\u8d56\uff0c\u53ef\u80fd\u8fd8\u8981\u914d\u7f6e\u73af\u5883\u53d8\u91cf\u3002 \u5982\u679c\u67d0\u4e9b\u8001\u65e7\u7684\u6a21\u5757\u4e0e\u5f53\u524d\u73af\u5883\u4e0d\u517c\u5bb9\uff0c\u90a3\u5c31\u9ebb\u70e6\u4e86\u3002\u5f00\u53d1\u8005\u5e38\u5e38\u4f1a\u8bf4\uff1a\"\u5b83\u5728\u6211\u7684\u673a\u5668\u53ef\u4ee5\u8dd1\u4e86\"\uff08It works on my machine\uff09\uff0c\u8a00\u4e0b\u4e4b\u610f\u5c31\u662f\uff0c\u5176\u4ed6\u673a\u5668\u5f88\u53ef\u80fd\u8dd1\u4e0d\u4e86\u3002 \u73af\u5883\u914d\u7f6e\u5982\u6b64\u9ebb\u70e6\uff0c\u6362\u4e00\u53f0\u673a\u5668\uff0c\u5c31\u8981\u91cd\u6765\u4e00\u6b21\uff0c\u65f7\u65e5\u8d39\u65f6\u3002\u5f88\u591a\u4eba\u60f3\u5230\uff0c\u80fd\u4e0d\u80fd\u4ece\u6839\u672c\u4e0a\u89e3\u51b3\u95ee\u9898\uff0c\u8f6f\u4ef6\u53ef\u4ee5\u5e26\u73af\u5883\u5b89\u88c5\uff1f\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b89\u88c5\u7684\u65f6\u5019\uff0c\u628a\u539f\u59cb\u73af\u5883\u4e00\u6a21\u4e00\u6837\u5730\u590d\u5236\u8fc7\u6765\u3002","title":"\u4e00\u3001\u73af\u5883\u914d\u7f6e\u7684\u96be\u9898"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#_2","text":"\u865a\u62df\u673a\uff08virtual machine\uff09\u5c31\u662f\u5e26\u73af\u5883\u5b89\u88c5\u7684\u4e00\u79cd\u89e3\u51b3\u65b9\u6848\u3002\u5b83\u53ef\u4ee5\u5728\u4e00\u79cd\u64cd\u4f5c\u7cfb\u7edf\u91cc\u9762\uff0c\u8fd0\u884c\u53e6\u4e00\u79cd\u64cd\u4f5c\u7cfb\u7edf\uff0c\u6bd4\u5982\u5728 Windows \u7cfb\u7edf\u91cc\u9762\u8fd0\u884c Linux \u7cfb\u7edf\u3002\u5e94\u7528\u7a0b\u5e8f\u5bf9\u6b64\u6beb\u65e0\u611f\u77e5\uff0c\u56e0\u4e3a\u865a\u62df\u673a\u770b\u4e0a\u53bb\u8ddf\u771f\u5b9e\u7cfb\u7edf\u4e00\u6a21\u4e00\u6837\uff0c\u800c\u5bf9\u4e8e\u5e95\u5c42\u7cfb\u7edf\u6765\u8bf4\uff0c\u865a\u62df\u673a\u5c31\u662f\u4e00\u4e2a\u666e\u901a\u6587\u4ef6\uff0c\u4e0d\u9700\u8981\u4e86\u5c31\u5220\u6389\uff0c\u5bf9\u5176\u4ed6\u90e8\u5206\u6beb\u65e0\u5f71\u54cd\u3002 \u867d\u7136\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u865a\u62df\u673a\u8fd8\u539f\u8f6f\u4ef6\u7684\u539f\u59cb\u73af\u5883\u3002\u4f46\u662f\uff0c\u8fd9\u4e2a\u65b9\u6848\u6709\u51e0\u4e2a\u7f3a\u70b9\u3002 \uff081\uff09\u8d44\u6e90\u5360\u7528\u591a \u865a\u62df\u673a\u4f1a\u72ec\u5360\u4e00\u90e8\u5206\u5185\u5b58\u548c\u786c\u76d8\u7a7a\u95f4\u3002\u5b83\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u5176\u4ed6\u7a0b\u5e8f\u5c31\u4e0d\u80fd\u4f7f\u7528\u8fd9\u4e9b\u8d44\u6e90\u4e86\u3002\u54ea\u6015\u865a\u62df\u673a\u91cc\u9762\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u771f\u6b63\u4f7f\u7528\u7684\u5185\u5b58\u53ea\u6709 1MB\uff0c\u865a\u62df\u673a\u4f9d\u7136\u9700\u8981\u51e0\u767e MB \u7684\u5185\u5b58\u624d\u80fd\u8fd0\u884c\u3002 \uff082\uff09\u5197\u4f59\u6b65\u9aa4\u591a \u865a\u62df\u673a\u662f\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e00\u4e9b\u7cfb\u7edf\u7ea7\u522b\u7684\u64cd\u4f5c\u6b65\u9aa4\uff0c\u5f80\u5f80\u65e0\u6cd5\u8df3\u8fc7\uff0c\u6bd4\u5982\u7528\u6237\u767b\u5f55\u3002 \uff083\uff09\u542f\u52a8\u6162 \u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u591a\u4e45\uff0c\u542f\u52a8\u865a\u62df\u673a\u5c31\u9700\u8981\u591a\u4e45\u3002\u53ef\u80fd\u8981\u7b49\u51e0\u5206\u949f\uff0c\u5e94\u7528\u7a0b\u5e8f\u624d\u80fd\u771f\u6b63\u8fd0\u884c\u3002","title":"\u4e8c\u3001\u865a\u62df\u673a"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#linux","text":"\u7531\u4e8e\u865a\u62df\u673a\u5b58\u5728\u8fd9\u4e9b\u7f3a\u70b9\uff0cLinux \u53d1\u5c55\u51fa\u4e86\u53e6\u4e00\u79cd\u865a\u62df\u5316\u6280\u672f\uff1aLinux \u5bb9\u5668\uff08Linux Containers\uff0c\u7f29\u5199\u4e3a LXC\uff09\u3002 **Linux \u5bb9\u5668\u4e0d\u662f\u6a21\u62df\u4e00\u4e2a\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u800c\u662f\u5bf9\u8fdb\u7a0b\u8fdb\u884c\u9694\u79bb\u3002**\u6216\u8005\u8bf4\uff0c\u5728\u6b63\u5e38\u8fdb\u7a0b\u7684\u5916\u9762\u5957\u4e86\u4e00\u4e2a \u4fdd\u62a4\u5c42 \u3002\u5bf9\u4e8e\u5bb9\u5668\u91cc\u9762\u7684\u8fdb\u7a0b\u6765\u8bf4\uff0c\u5b83\u63a5\u89e6\u5230\u7684\u5404\u79cd\u8d44\u6e90\u90fd\u662f\u865a\u62df\u7684\uff0c\u4ece\u800c\u5b9e\u73b0\u4e0e\u5e95\u5c42\u7cfb\u7edf\u7684\u9694\u79bb\u3002 \u7531\u4e8e\u5bb9\u5668\u662f\u8fdb\u7a0b\u7ea7\u522b\u7684\uff0c\u76f8\u6bd4\u865a\u62df\u673a\u6709\u5f88\u591a\u4f18\u52bf\u3002 \uff081\uff09\u542f\u52a8\u5feb \u5bb9\u5668\u91cc\u9762\u7684\u5e94\u7528\uff0c\u76f4\u63a5\u5c31\u662f\u5e95\u5c42\u7cfb\u7edf\u7684\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u800c\u4e0d\u662f\u865a\u62df\u673a\u5185\u90e8\u7684\u8fdb\u7a0b\u3002\u6240\u4ee5\uff0c\u542f\u52a8\u5bb9\u5668\u76f8\u5f53\u4e8e\u542f\u52a8\u672c\u673a\u7684\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u800c\u4e0d\u662f\u542f\u52a8\u4e00\u4e2a\u64cd\u4f5c\u7cfb\u7edf\uff0c\u901f\u5ea6\u5c31\u5feb\u5f88\u591a\u3002 \uff082\uff09\u8d44\u6e90\u5360\u7528\u5c11 \u5bb9\u5668\u53ea\u5360\u7528\u9700\u8981\u7684\u8d44\u6e90\uff0c\u4e0d\u5360\u7528\u90a3\u4e9b\u6ca1\u6709\u7528\u5230\u7684\u8d44\u6e90\uff1b\u865a\u62df\u673a\u7531\u4e8e\u662f\u5b8c\u6574\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e0d\u53ef\u907f\u514d\u8981\u5360\u7528\u6240\u6709\u8d44\u6e90\u3002\u53e6\u5916\uff0c\u591a\u4e2a\u5bb9\u5668\u53ef\u4ee5\u5171\u4eab\u8d44\u6e90\uff0c\u865a\u62df\u673a\u90fd\u662f\u72ec\u4eab\u8d44\u6e90\u3002 \uff083\uff09\u4f53\u79ef\u5c0f \u5bb9\u5668\u53ea\u8981\u5305\u542b\u7528\u5230\u7684\u7ec4\u4ef6\u5373\u53ef\uff0c\u800c\u865a\u62df\u673a\u662f\u6574\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7684\u6253\u5305\uff0c\u6240\u4ee5\u5bb9\u5668\u6587\u4ef6\u6bd4\u865a\u62df\u673a\u6587\u4ef6\u8981\u5c0f\u5f88\u591a\u3002 \u603b\u4e4b\uff0c\u5bb9\u5668\u6709\u70b9\u50cf\u8f7b\u91cf\u7ea7\u7684\u865a\u62df\u673a\uff0c\u80fd\u591f\u63d0\u4f9b\u865a\u62df\u5316\u7684\u73af\u5883\uff0c\u4f46\u662f\u6210\u672c\u5f00\u9500\u5c0f\u5f97\u591a\u3002","title":"\u4e09\u3001Linux \u5bb9\u5668"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#docker_1","text":"**Docker \u5c5e\u4e8e Linux \u5bb9\u5668\u7684\u4e00\u79cd\u5c01\u88c5\uff0c\u63d0\u4f9b\u7b80\u5355\u6613\u7528\u7684\u5bb9\u5668\u4f7f\u7528\u63a5\u53e3\u3002**\u5b83\u662f\u76ee\u524d\u6700\u6d41\u884c\u7684 Linux \u5bb9\u5668\u89e3\u51b3\u65b9\u6848\u3002 Docker \u5c06\u5e94\u7528\u7a0b\u5e8f\u4e0e\u8be5\u7a0b\u5e8f\u7684\u4f9d\u8d56\uff0c\u6253\u5305\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u3002\u8fd0\u884c\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u865a\u62df\u5bb9\u5668\u3002\u7a0b\u5e8f\u5728\u8fd9\u4e2a\u865a\u62df\u5bb9\u5668\u91cc\u8fd0\u884c\uff0c\u5c31\u597d\u50cf\u5728\u771f\u5b9e\u7684\u7269\u7406\u673a\u4e0a\u8fd0\u884c\u4e00\u6837\u3002\u6709\u4e86 Docker\uff0c\u5c31\u4e0d\u7528\u62c5\u5fc3\u73af\u5883\u95ee\u9898\u3002 \u603b\u4f53\u6765\u8bf4\uff0cDocker \u7684\u63a5\u53e3\u76f8\u5f53\u7b80\u5355\uff0c\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u5730\u521b\u5efa\u548c\u4f7f\u7528\u5bb9\u5668\uff0c\u628a\u81ea\u5df1\u7684\u5e94\u7528\u653e\u5165\u5bb9\u5668\u3002\u5bb9\u5668\u8fd8\u53ef\u4ee5\u8fdb\u884c\u7248\u672c\u7ba1\u7406\u3001\u590d\u5236\u3001\u5206\u4eab\u3001\u4fee\u6539\uff0c\u5c31\u50cf\u7ba1\u7406\u666e\u901a\u7684\u4ee3\u7801\u4e00\u6837\u3002","title":"\u56db\u3001Docker \u662f\u4ec0\u4e48\uff1f"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#docker_2","text":"Docker \u7684\u4e3b\u8981\u7528\u9014\uff0c\u76ee\u524d\u6709\u4e09\u5927\u7c7b\u3002 **\uff081\uff09\u63d0\u4f9b\u4e00\u6b21\u6027\u7684\u73af\u5883\u3002**\u6bd4\u5982\uff0c\u672c\u5730\u6d4b\u8bd5\u4ed6\u4eba\u7684\u8f6f\u4ef6\uff1b\u6301\u7eed\u96c6\u6210\u65f6\uff0c\u63d0\u4f9b\u5355\u5143\u6d4b\u8bd5\u548c\u6784\u5efa\u7684\u73af\u5883\u3002 **\uff082\uff09\u63d0\u4f9b\u5f39\u6027\u7684\u4e91\u670d\u52a1\u3002**\u56e0\u4e3a Docker \u5bb9\u5668\u53ef\u4ee5\u968f\u5f00\u968f\u5173\uff0c\u5f88\u9002\u5408\u52a8\u6001\u6269\u5bb9\u548c\u7f29\u5bb9\u3002 **\uff083\uff09\u7ec4\u5efa\u5fae\u670d\u52a1\u67b6\u6784\u3002**\u901a\u8fc7\u591a\u4e2a\u5bb9\u5668\uff0c\u4e00\u53f0\u673a\u5668\u53ef\u4ee5\u8dd1\u591a\u4e2a\u670d\u52a1\uff0c\u56e0\u6b64\u5728\u672c\u673a\u5c31\u53ef\u4ee5\u6a21\u62df\u51fa\u5fae\u670d\u52a1\u67b6\u6784\u3002","title":"\u4e94\u3001Docker \u7684\u7528\u9014"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#docker_3","text":"Docker \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5546\u4e1a\u4ea7\u54c1\uff0c\u6709\u4e24\u4e2a\u7248\u672c\uff1a\u793e\u533a\u7248\uff08Community Edition\uff0c\u7f29\u5199\u4e3a CE\uff09\u548c\u4f01\u4e1a\u7248\uff08Enterprise Edition\uff0c\u7f29\u5199\u4e3a EE\uff09\u3002\u4f01\u4e1a\u7248\u5305\u542b\u4e86\u4e00\u4e9b\u6536\u8d39\u670d\u52a1\uff0c\u4e2a\u4eba\u5f00\u53d1\u8005\u4e00\u822c\u7528\u4e0d\u5230\u3002\u4e0b\u9762\u7684\u4ecb\u7ecd\u90fd\u9488\u5bf9\u793e\u533a\u7248\u3002 Docker CE \u7684\u5b89\u88c5\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863\u3002 Mac Windows Ubuntu Debian CentOS Fedora \u5176\u4ed6 Linux \u53d1\u884c\u7248 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u6210\u529f\u3002 $ docker version # \u6216\u8005 $ docker info Docker \u9700\u8981\u7528\u6237\u5177\u6709 sudo \u6743\u9650\uff0c\u4e3a\u4e86\u907f\u514d\u6bcf\u6b21\u547d\u4ee4\u90fd\u8f93\u5165 sudo \uff0c\u53ef\u4ee5\u628a\u7528\u6237\u52a0\u5165 Docker \u7528\u6237\u7ec4\uff08 \u5b98\u65b9\u6587\u6863 \uff09\u3002 $ sudo usermod -aG docker $USER Docker \u662f\u670d\u52a1\u5668----\u5ba2\u6237\u7aef\u67b6\u6784\u3002\u547d\u4ee4\u884c\u8fd0\u884c docker \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u9700\u8981\u672c\u673a\u6709 Docker \u670d\u52a1\u3002\u5982\u679c\u8fd9\u9879\u670d\u52a1\u6ca1\u6709\u542f\u52a8\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u542f\u52a8\uff08 \u5b98\u65b9\u6587\u6863 \uff09\u3002 # service \u547d\u4ee4\u7684\u7528\u6cd5 $ sudo service docker start # systemctl \u547d\u4ee4\u7684\u7528\u6cd5 $ sudo systemctl start docker","title":"\u516d\u3001Docker \u7684\u5b89\u88c5"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#image","text":"**Docker \u628a\u5e94\u7528\u7a0b\u5e8f\u53ca\u5176\u4f9d\u8d56\uff0c\u6253\u5305\u5728 image \u6587\u4ef6\u91cc\u9762\u3002**\u53ea\u6709\u901a\u8fc7\u8fd9\u4e2a\u6587\u4ef6\uff0c\u624d\u80fd\u751f\u6210 Docker \u5bb9\u5668\u3002image \u6587\u4ef6\u53ef\u4ee5\u770b\u4f5c\u662f\u5bb9\u5668\u7684\u6a21\u677f\u3002Docker \u6839\u636e image \u6587\u4ef6\u751f\u6210\u5bb9\u5668\u7684\u5b9e\u4f8b\u3002\u540c\u4e00\u4e2a image \u6587\u4ef6\uff0c\u53ef\u4ee5\u751f\u6210\u591a\u4e2a\u540c\u65f6\u8fd0\u884c\u7684\u5bb9\u5668\u5b9e\u4f8b\u3002 image \u662f\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u4e00\u4e2a image \u6587\u4ef6\u5f80\u5f80\u901a\u8fc7\u7ee7\u627f\u53e6\u4e00\u4e2a image \u6587\u4ef6\uff0c\u52a0\u4e0a\u4e00\u4e9b\u4e2a\u6027\u5316\u8bbe\u7f6e\u800c\u751f\u6210\u3002\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u5728 Ubuntu \u7684 image \u57fa\u7840\u4e0a\uff0c\u5f80\u91cc\u9762\u52a0\u5165 Apache \u670d\u52a1\u5668\uff0c\u5f62\u6210\u4f60\u7684 image\u3002 # \u5217\u51fa\u672c\u673a\u7684\u6240\u6709 image \u6587\u4ef6\u3002 $ docker image ls # \u5220\u9664 image \u6587\u4ef6 $ docker image rm [ imageName ] image \u6587\u4ef6\u662f\u901a\u7528\u7684\uff0c\u4e00\u53f0\u673a\u5668\u7684 image \u6587\u4ef6\u62f7\u8d1d\u5230\u53e6\u4e00\u53f0\u673a\u5668\uff0c\u7167\u6837\u53ef\u4ee5\u4f7f\u7528\u3002\u4e00\u822c\u6765\u8bf4\uff0c\u4e3a\u4e86\u8282\u7701\u65f6\u95f4\uff0c\u6211\u4eec\u5e94\u8be5\u5c3d\u91cf\u4f7f\u7528\u522b\u4eba\u5236\u4f5c\u597d\u7684 image \u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u81ea\u5df1\u5236\u4f5c\u3002\u5373\u4f7f\u8981\u5b9a\u5236\uff0c\u4e5f\u5e94\u8be5\u57fa\u4e8e\u522b\u4eba\u7684 image \u6587\u4ef6\u8fdb\u884c\u52a0\u5de5\uff0c\u800c\u4e0d\u662f\u4ece\u96f6\u5f00\u59cb\u5236\u4f5c\u3002 \u4e3a\u4e86\u65b9\u4fbf\u5171\u4eab\uff0cimage \u6587\u4ef6\u5236\u4f5c\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u4e0a\u4f20\u5230\u7f51\u4e0a\u7684\u4ed3\u5e93\u3002Docker \u7684\u5b98\u65b9\u4ed3\u5e93 Docker Hub \u662f\u6700\u91cd\u8981\u3001\u6700\u5e38\u7528\u7684 image \u4ed3\u5e93\u3002\u6b64\u5916\uff0c\u51fa\u552e\u81ea\u5df1\u5236\u4f5c\u7684 image \u6587\u4ef6\u4e5f\u662f\u53ef\u4ee5\u7684\u3002","title":"\u516d\u3001image \u6587\u4ef6"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#hello-world","text":"\u4e0b\u9762\uff0c\u6211\u4eec\u901a\u8fc7\u6700\u7b80\u5355\u7684 image \u6587\u4ef6\" hello world\" \uff0c\u611f\u53d7\u4e00\u4e0b Docker\u3002 \u9700\u8981\u8bf4\u660e\u7684\u662f\uff0c\u56fd\u5185\u8fde\u63a5 Docker \u7684\u5b98\u65b9\u4ed3\u5e93\u5f88\u6162\uff0c\u8fd8\u4f1a\u65ad\u7ebf\uff0c\u9700\u8981\u5c06\u9ed8\u8ba4\u4ed3\u5e93\u6539\u6210\u56fd\u5185\u7684\u955c\u50cf\u7f51\u7ad9\uff0c\u5177\u4f53\u7684\u4fee\u6539\u65b9\u6cd5\u5728 \u4e0b\u4e00\u7bc7\u6587\u7ae0 \u7684\u7b2c\u4e00\u8282\u3002\u6709\u9700\u8981\u7684\u670b\u53cb\uff0c\u53ef\u4ee5\u5148\u770b\u4e00\u4e0b\u3002 \u9996\u5148\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u5c06 image \u6587\u4ef6\u4ece\u4ed3\u5e93\u6293\u53d6\u5230\u672c\u5730\u3002 $ docker image pull library/hello-world \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c docker image pull \u662f\u6293\u53d6 image \u6587\u4ef6\u7684\u547d\u4ee4\u3002 library/hello-world \u662f image \u6587\u4ef6\u5728\u4ed3\u5e93\u91cc\u9762\u7684\u4f4d\u7f6e\uff0c\u5176\u4e2d library \u662f image \u6587\u4ef6\u6240\u5728\u7684\u7ec4\uff0c hello-world \u662f image \u6587\u4ef6\u7684\u540d\u5b57\u3002 \u7531\u4e8e Docker \u5b98\u65b9\u63d0\u4f9b\u7684 image \u6587\u4ef6\uff0c\u90fd\u653e\u5728 library \u7ec4\u91cc\u9762\uff0c\u6240\u4ee5\u5b83\u7684\u662f\u9ed8\u8ba4\u7ec4\uff0c\u53ef\u4ee5\u7701\u7565\u3002\u56e0\u6b64\uff0c\u4e0a\u9762\u7684\u547d\u4ee4\u53ef\u4ee5\u5199\u6210\u4e0b\u9762\u8fd9\u6837\u3002 $ docker image pull hello-world \u6293\u53d6\u6210\u529f\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u5728\u672c\u673a\u770b\u5230\u8fd9\u4e2a image \u6587\u4ef6\u4e86\u3002 $ docker image ls \u73b0\u5728\uff0c\u8fd0\u884c\u8fd9\u4e2a image \u6587\u4ef6\u3002 $ docker container run hello-world docker container run \u547d\u4ee4\u4f1a\u4ece image \u6587\u4ef6\uff0c\u751f\u6210\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u5b9e\u4f8b\u3002 \u6ce8\u610f\uff0c docker container run \u547d\u4ee4\u5177\u6709\u81ea\u52a8\u6293\u53d6 image \u6587\u4ef6\u7684\u529f\u80fd\u3002\u5982\u679c\u53d1\u73b0\u672c\u5730\u6ca1\u6709\u6307\u5b9a\u7684 image \u6587\u4ef6\uff0c\u5c31\u4f1a\u4ece\u4ed3\u5e93\u81ea\u52a8\u6293\u53d6\u3002\u56e0\u6b64\uff0c\u524d\u9762\u7684 docker image pull \u547d\u4ee4\u5e76\u4e0d\u662f\u5fc5\u9700\u7684\u6b65\u9aa4\u3002 \u5982\u679c\u8fd0\u884c\u6210\u529f\uff0c\u4f60\u4f1a\u5728\u5c4f\u5e55\u4e0a\u8bfb\u5230\u4e0b\u9762\u7684\u8f93\u51fa\u3002 $ docker container run hello-world Hello from Docker! This message shows that your installation appears to be working correctly. ... ... \u8f93\u51fa\u8fd9\u6bb5\u63d0\u793a\u4ee5\u540e\uff0c hello world \u5c31\u4f1a\u505c\u6b62\u8fd0\u884c\uff0c\u5bb9\u5668\u81ea\u52a8\u7ec8\u6b62\u3002 \u6709\u4e9b\u5bb9\u5668\u4e0d\u4f1a\u81ea\u52a8\u7ec8\u6b62\uff0c\u56e0\u4e3a\u63d0\u4f9b\u7684\u662f\u670d\u52a1\u3002\u6bd4\u5982\uff0c\u5b89\u88c5\u8fd0\u884c Ubuntu \u7684 image\uff0c\u5c31\u53ef\u4ee5\u5728\u547d\u4ee4\u884c\u4f53\u9a8c Ubuntu \u7cfb\u7edf\u3002 $ docker container run -it ubuntu bash \u5bf9\u4e8e\u90a3\u4e9b\u4e0d\u4f1a\u81ea\u52a8\u7ec8\u6b62\u7684\u5bb9\u5668\uff0c\u5fc5\u987b\u4f7f\u7528 docker container kill \u547d\u4ee4\u624b\u52a8\u7ec8\u6b62\u3002 $ docker container kill [ containID ]","title":"\u4e03\u3001\u5b9e\u4f8b\uff1ahello world"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#_3","text":"**image \u6587\u4ef6\u751f\u6210\u7684\u5bb9\u5668\u5b9e\u4f8b\uff0c\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u79f0\u4e3a\u5bb9\u5668\u6587\u4ef6\u3002**\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u65e6\u5bb9\u5668\u751f\u6210\uff0c\u5c31\u4f1a\u540c\u65f6\u5b58\u5728\u4e24\u4e2a\u6587\u4ef6\uff1a image \u6587\u4ef6\u548c\u5bb9\u5668\u6587\u4ef6\u3002\u800c\u4e14\u5173\u95ed\u5bb9\u5668\u5e76\u4e0d\u4f1a\u5220\u9664\u5bb9\u5668\u6587\u4ef6\uff0c\u53ea\u662f\u5bb9\u5668\u505c\u6b62\u8fd0\u884c\u800c\u5df2\u3002 # \u5217\u51fa\u672c\u673a\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668 $ docker container ls # \u5217\u51fa\u672c\u673a\u6240\u6709\u5bb9\u5668\uff0c\u5305\u62ec\u7ec8\u6b62\u8fd0\u884c\u7684\u5bb9\u5668 $ docker container ls --all \u4e0a\u9762\u547d\u4ee4\u7684\u8f93\u51fa\u7ed3\u679c\u4e4b\u4e2d\uff0c\u5305\u62ec\u5bb9\u5668\u7684 ID\u3002\u5f88\u591a\u5730\u65b9\u90fd\u9700\u8981\u63d0\u4f9b\u8fd9\u4e2a ID\uff0c\u6bd4\u5982\u4e0a\u4e00\u8282\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\u7684 docker container kill \u547d\u4ee4\u3002 \u7ec8\u6b62\u8fd0\u884c\u7684\u5bb9\u5668\u6587\u4ef6\uff0c\u4f9d\u7136\u4f1a\u5360\u636e\u786c\u76d8\u7a7a\u95f4\uff0c\u53ef\u4ee5\u4f7f\u7528 docker container rm \u547d\u4ee4\u5220\u9664\u3002 $ docker container rm [ containerID ] \u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u4e4b\u540e\uff0c\u518d\u4f7f\u7528 docker container ls --all \u547d\u4ee4\uff0c\u5c31\u4f1a\u53d1\u73b0\u88ab\u5220\u9664\u7684\u5bb9\u5668\u6587\u4ef6\u5df2\u7ecf\u6d88\u5931\u4e86\u3002","title":"\u516b\u3001\u5bb9\u5668\u6587\u4ef6"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#dockerfile","text":"\u5b66\u4f1a\u4f7f\u7528 image \u6587\u4ef6\u4ee5\u540e\uff0c\u63a5\u4e0b\u6765\u7684\u95ee\u9898\u5c31\u662f\uff0c\u5982\u4f55\u53ef\u4ee5\u751f\u6210 image \u6587\u4ef6\uff1f\u5982\u679c\u4f60\u8981\u63a8\u5e7f\u81ea\u5df1\u7684\u8f6f\u4ef6\uff0c\u52bf\u5fc5\u8981\u81ea\u5df1\u5236\u4f5c image \u6587\u4ef6\u3002 \u8fd9\u5c31\u9700\u8981\u7528\u5230 Dockerfile \u6587\u4ef6\u3002\u5b83\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u7528\u6765\u914d\u7f6e image\u3002Docker \u6839\u636e \u8be5\u6587\u4ef6\u751f\u6210\u4e8c\u8fdb\u5236\u7684 image \u6587\u4ef6\u3002 \u4e0b\u9762\u901a\u8fc7\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u6f14\u793a\u5982\u4f55\u7f16\u5199 Dockerfile \u6587\u4ef6\u3002","title":"\u4e5d\u3001Dockerfile \u6587\u4ef6"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#docker_4","text":"\u4e0b\u9762\u6211\u4ee5 koa-demos \u9879\u76ee\u4e3a\u4f8b\uff0c\u4ecb\u7ecd\u600e\u4e48\u5199 Dockerfile \u6587\u4ef6\uff0c\u5b9e\u73b0\u8ba9\u7528\u6237\u5728 Docker \u5bb9\u5668\u91cc\u9762\u8fd0\u884c Koa \u6846\u67b6\u3002 \u4f5c\u4e3a\u51c6\u5907\u5de5\u4f5c\uff0c\u8bf7\u5148 \u4e0b\u8f7d\u6e90\u7801 \u3002 $ git clone https://github.com/ruanyf/koa-demos.git $ cd koa-demos","title":"\u5341\u3001\u5b9e\u4f8b\uff1a\u5236\u4f5c\u81ea\u5df1\u7684 Docker \u5bb9\u5668"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#101-dockerfile","text":"\u9996\u5148\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 .dockerignore \uff0c\u5199\u5165\u4e0b\u9762\u7684 \u5185\u5bb9 \u3002 .git node_modules npm-debug.log \u4e0a\u9762\u4ee3\u7801\u8868\u793a\uff0c\u8fd9\u4e09\u4e2a\u8def\u5f84\u8981\u6392\u9664\uff0c\u4e0d\u8981\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\u3002\u5982\u679c\u4f60\u6ca1\u6709\u8def\u5f84\u8981\u6392\u9664\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u4e0d\u65b0\u5efa\u3002 \u7136\u540e\uff0c\u5728\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 Dockerfile\uff0c\u5199\u5165\u4e0b\u9762\u7684 \u5185\u5bb9 \u3002 FROM node:8.4 COPY . /app WORKDIR /app RUN npm install --registry = https://registry.npm.taobao.org EXPOSE 3000 \u4e0a\u9762\u4ee3\u7801\u4e00\u5171\u4e94\u884c\uff0c\u542b\u4e49\u5982\u4e0b\u3002 FROM node:8.4 \uff1a\u8be5 image \u6587\u4ef6\u7ee7\u627f\u5b98\u65b9\u7684 node image\uff0c\u5192\u53f7\u8868\u793a\u6807\u7b7e\uff0c\u8fd9\u91cc\u6807\u7b7e\u662f 8.4 \uff0c\u5373 8.4 \u7248\u672c\u7684 node\u3002 COPY . /app \uff1a\u5c06\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff08\u9664\u4e86 .dockerignore \u6392\u9664\u7684\u8def\u5f84\uff09\uff0c\u90fd\u62f7\u8d1d\u8fdb\u5165 image \u6587\u4ef6\u7684 /app \u76ee\u5f55\u3002 WORKDIR /app \uff1a\u6307\u5b9a\u63a5\u4e0b\u6765\u7684\u5de5\u4f5c\u8def\u5f84\u4e3a /app \u3002 RUN npm install \uff1a\u5728 /app \u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c npm install \u547d\u4ee4\u5b89\u88c5\u4f9d\u8d56\u3002\u6ce8\u610f\uff0c\u5b89\u88c5\u540e\u6240\u6709\u7684\u4f9d\u8d56\uff0c\u90fd\u5c06\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\u3002 EXPOSE 3000 \uff1a\u5c06\u5bb9\u5668 3000 \u7aef\u53e3\u66b4\u9732\u51fa\u6765\uff0c \u5141\u8bb8\u5916\u90e8\u8fde\u63a5\u8fd9\u4e2a\u7aef\u53e3\u3002","title":"10.1 \u7f16\u5199 Dockerfile \u6587\u4ef6"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#102-image","text":"\u6709\u4e86 Dockerfile \u6587\u4ef6\u4ee5\u540e\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 docker image build \u547d\u4ee4\u521b\u5efa image \u6587\u4ef6\u4e86\u3002 $ docker image build -t koa-demo . # \u6216\u8005 $ docker image build -t koa-demo:0.0.1 . \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c -t \u53c2\u6570\u7528\u6765\u6307\u5b9a image \u6587\u4ef6\u7684\u540d\u5b57\uff0c\u540e\u9762\u8fd8\u53ef\u4ee5\u7528\u5192\u53f7\u6307\u5b9a\u6807\u7b7e\u3002\u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u9ed8\u8ba4\u7684\u6807\u7b7e\u5c31\u662f latest \u3002\u6700\u540e\u7684\u90a3\u4e2a\u70b9\u8868\u793a Dockerfile \u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84\uff0c\u4e0a\u4f8b\u662f\u5f53\u524d\u8def\u5f84\uff0c\u6240\u4ee5\u662f\u4e00\u4e2a\u70b9\u3002 \u5982\u679c\u8fd0\u884c\u6210\u529f\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u65b0\u751f\u6210\u7684 image \u6587\u4ef6 koa-demo \u4e86\u3002 $ docker image ls","title":"10.2 \u521b\u5efa image \u6587\u4ef6"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#103","text":"docker container run \u547d\u4ee4\u4f1a\u4ece image \u6587\u4ef6\u751f\u6210\u5bb9\u5668\u3002 $ docker container run -p 8000 :3000 -it koa-demo /bin/bash # \u6216\u8005 $ docker container run -p 8000 :3000 -it koa-demo:0.0.1 /bin/bash \u4e0a\u9762\u547d\u4ee4\u7684\u5404\u4e2a\u53c2\u6570\u542b\u4e49\u5982\u4e0b\uff1a -p \u53c2\u6570\uff1a\u5bb9\u5668\u7684 3000 \u7aef\u53e3\u6620\u5c04\u5230\u672c\u673a\u7684 8000 \u7aef\u53e3\u3002 -it \u53c2\u6570\uff1a\u5bb9\u5668\u7684 Shell \u6620\u5c04\u5230\u5f53\u524d\u7684 Shell\uff0c\u7136\u540e\u4f60\u5728\u672c\u673a\u7a97\u53e3\u8f93\u5165\u7684\u547d\u4ee4\uff0c\u5c31\u4f1a\u4f20\u5165\u5bb9\u5668\u3002 koa-demo:0.0.1 \uff1aimage \u6587\u4ef6\u7684\u540d\u5b57\uff08\u5982\u679c\u6709\u6807\u7b7e\uff0c\u8fd8\u9700\u8981\u63d0\u4f9b\u6807\u7b7e\uff0c\u9ed8\u8ba4\u662f latest \u6807\u7b7e\uff09\u3002 /bin/bash \uff1a\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u5185\u90e8\u7b2c\u4e00\u4e2a\u6267\u884c\u7684\u547d\u4ee4\u3002\u8fd9\u91cc\u662f\u542f\u52a8 Bash\uff0c\u4fdd\u8bc1\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 Shell\u3002 \u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u4ee5\u540e\uff0c\u5c31\u4f1a\u8fd4\u56de\u4e00\u4e2a\u547d\u4ee4\u884c\u63d0\u793a\u7b26\u3002 root@66d80f4aaf1e:/app# \u8fd9\u8868\u793a\u4f60\u5df2\u7ecf\u5728\u5bb9\u5668\u91cc\u9762\u4e86\uff0c\u8fd4\u56de\u7684\u63d0\u793a\u7b26\u5c31\u662f\u5bb9\u5668\u5185\u90e8\u7684 Shell \u63d0\u793a\u7b26\u3002\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 root@66d80f4aaf1e:/app# node demos/01.js \u8fd9\u65f6\uff0cKoa \u6846\u67b6\u5df2\u7ecf\u8fd0\u884c\u8d77\u6765\u4e86\u3002\u6253\u5f00\u672c\u673a\u7684\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee http://127.0.0.1:8000 \uff0c\u7f51\u9875\u663e\u793a\"Not Found\"\uff0c\u8fd9\u662f\u56e0\u4e3a\u8fd9\u4e2a demo \u6ca1\u6709\u5199\u8def\u7531\u3002 \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cNode \u8fdb\u7a0b\u8fd0\u884c\u5728 Docker \u5bb9\u5668\u7684\u865a\u62df\u73af\u5883\u91cc\u9762\uff0c\u8fdb\u7a0b\u63a5\u89e6\u5230\u7684\u6587\u4ef6\u7cfb\u7edf\u548c\u7f51\u7edc\u63a5\u53e3\u90fd\u662f\u865a\u62df\u7684\uff0c\u4e0e\u672c\u673a\u7684\u6587\u4ef6\u7cfb\u7edf\u548c\u7f51\u7edc\u63a5\u53e3\u662f\u9694\u79bb\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5b9a\u4e49\u5bb9\u5668\u4e0e\u7269\u7406\u673a\u7684\u7aef\u53e3\u6620\u5c04\uff08map\uff09\u3002 \u73b0\u5728\uff0c\u5728\u5bb9\u5668\u7684\u547d\u4ee4\u884c\uff0c\u6309\u4e0b Ctrl + c \u505c\u6b62 Node \u8fdb\u7a0b\uff0c\u7136\u540e\u6309\u4e0b Ctrl + d \uff08\u6216\u8005\u8f93\u5165 exit\uff09\u9000\u51fa\u5bb9\u5668\u3002\u6b64\u5916\uff0c\u4e5f\u53ef\u4ee5\u7528 docker container kill \u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\u3002 # \u5728\u672c\u673a\u7684\u53e6\u4e00\u4e2a\u7ec8\u7aef\u7a97\u53e3\uff0c\u67e5\u51fa\u5bb9\u5668\u7684 ID $ docker container ls # \u505c\u6b62\u6307\u5b9a\u7684\u5bb9\u5668\u8fd0\u884c $ docker container kill [ containerID ] \u5bb9\u5668\u505c\u6b62\u8fd0\u884c\u4e4b\u540e\uff0c\u5e76\u4e0d\u4f1a\u6d88\u5931\uff0c\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 # \u67e5\u51fa\u5bb9\u5668\u7684 ID $ docker container ls --all # \u5220\u9664\u6307\u5b9a\u7684\u5bb9\u5668\u6587\u4ef6 $ docker container rm [ containerID ] \u4e5f\u53ef\u4ee5\u4f7f\u7528 docker container run \u547d\u4ee4\u7684 --rm \u53c2\u6570\uff0c\u5728\u5bb9\u5668\u7ec8\u6b62\u8fd0\u884c\u540e\u81ea\u52a8\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 $ docker container run --rm -p 8000 :3000 -it koa-demo /bin/bash","title":"10.3 \u751f\u6210\u5bb9\u5668"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#104-cmd","text":"\u4e0a\u4e00\u8282\u7684\u4f8b\u5b50\u91cc\u9762\uff0c\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u9700\u8981\u624b\u52a8\u8f93\u5165\u547d\u4ee4 node demos/01.js \u3002\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e2a\u547d\u4ee4\u5199\u5728 Dockerfile \u91cc\u9762\uff0c\u8fd9\u6837\u5bb9\u5668\u542f\u52a8\u4ee5\u540e\uff0c\u8fd9\u4e2a\u547d\u4ee4\u5c31\u5df2\u7ecf\u6267\u884c\u4e86\uff0c\u4e0d\u7528\u518d\u624b\u52a8\u8f93\u5165\u4e86\u3002 FROM node:8.4 COPY . /app WORKDIR /app RUN npm install --registry = https://registry.npm.taobao.org EXPOSE 3000 CMD node demos/01.js \u4e0a\u9762\u7684 Dockerfile \u91cc\u9762\uff0c\u591a\u4e86\u6700\u540e\u4e00\u884c CMD node demos/01.js \uff0c\u5b83\u8868\u793a\u5bb9\u5668\u542f\u52a8\u540e\u81ea\u52a8\u6267\u884c node demos/01.js \u3002 \u4f60\u53ef\u80fd\u4f1a\u95ee\uff0c RUN \u547d\u4ee4\u4e0e CMD \u547d\u4ee4\u7684\u533a\u522b\u5728\u54ea\u91cc\uff1f\u7b80\u5355\u8bf4\uff0c RUN \u547d\u4ee4\u5728 image \u6587\u4ef6\u7684\u6784\u5efa\u9636\u6bb5\u6267\u884c\uff0c\u6267\u884c\u7ed3\u679c\u90fd\u4f1a\u6253\u5305\u8fdb\u5165 image \u6587\u4ef6\uff1b CMD \u547d\u4ee4\u5219\u662f\u5728\u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u3002\u53e6\u5916\uff0c\u4e00\u4e2a Dockerfile \u53ef\u4ee5\u5305\u542b\u591a\u4e2a RUN \u547d\u4ee4\uff0c\u4f46\u662f\u53ea\u80fd\u6709\u4e00\u4e2a CMD \u547d\u4ee4\u3002 \u6ce8\u610f\uff0c\u6307\u5b9a\u4e86 CMD \u547d\u4ee4\u4ee5\u540e\uff0c docker container run \u547d\u4ee4\u5c31\u4e0d\u80fd\u9644\u52a0\u547d\u4ee4\u4e86\uff08\u6bd4\u5982\u524d\u9762\u7684 /bin/bash \uff09\uff0c\u5426\u5219\u5b83\u4f1a\u8986\u76d6 CMD \u547d\u4ee4\u3002\u73b0\u5728\uff0c\u542f\u52a8\u5bb9\u5668\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker container run --rm -p 8000 :3000 -it koa-demo:0.0.1","title":"10.4 CMD \u547d\u4ee4"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#105-image","text":"\u5bb9\u5668\u8fd0\u884c\u6210\u529f\u540e\uff0c\u5c31\u786e\u8ba4\u4e86 image \u6587\u4ef6\u7684\u6709\u6548\u6027\u3002\u8fd9\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u628a image \u6587\u4ef6\u5206\u4eab\u5230\u7f51\u4e0a\uff0c\u8ba9\u5176\u4ed6\u4eba\u4f7f\u7528\u3002 \u9996\u5148\uff0c\u53bb hub.docker.com \u6216 cloud.docker.com \u6ce8\u518c\u4e00\u4e2a\u8d26\u6237\u3002\u7136\u540e\uff0c\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u767b\u5f55\u3002 $ docker login \u63a5\u7740\uff0c\u4e3a\u672c\u5730\u7684 image \u6807\u6ce8\u7528\u6237\u540d\u548c\u7248\u672c\u3002 $ docker image tag [ imageName ] [ username ] / [ repository ] : [ tag ] # \u5b9e\u4f8b $ docker image tag koa-demos:0.0.1 ruanyf/koa-demos:0.0.1 \u4e5f\u53ef\u4ee5\u4e0d\u6807\u6ce8\u7528\u6237\u540d\uff0c\u91cd\u65b0\u6784\u5efa\u4e00\u4e0b image \u6587\u4ef6\u3002 $ docker image build -t [ username ] / [ repository ] : [ tag ] . \u6700\u540e\uff0c\u53d1\u5e03 image \u6587\u4ef6\u3002 $ docker image push [ username ] / [ repository ] : [ tag ] \u53d1\u5e03\u6210\u529f\u4ee5\u540e\uff0c\u767b\u5f55 hub.docker.com\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u5df2\u7ecf\u53d1\u5e03\u7684 image \u6587\u4ef6\u3002","title":"10.5 \u53d1\u5e03 image \u6587\u4ef6"},{"location":"03-docker/01%20Docker%20%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#_4","text":"docker \u7684\u4e3b\u8981\u7528\u6cd5\u5c31\u662f\u4e0a\u9762\u8fd9\u4e9b\uff0c\u6b64\u5916\u8fd8\u6709\u51e0\u4e2a\u547d\u4ee4\uff0c\u4e5f\u975e\u5e38\u6709\u7528\u3002 \uff081\uff09docker container start \u524d\u9762\u7684 docker container run \u547d\u4ee4\u662f\u65b0\u5efa\u5bb9\u5668\uff0c\u6bcf\u8fd0\u884c\u4e00\u6b21\uff0c\u5c31\u4f1a\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\u3002\u540c\u6837\u7684\u547d\u4ee4\u8fd0\u884c\u4e24\u6b21\uff0c\u5c31\u4f1a\u751f\u6210\u4e24\u4e2a\u4e00\u6a21\u4e00\u6837\u7684\u5bb9\u5668\u6587\u4ef6\u3002\u5982\u679c\u5e0c\u671b\u91cd\u590d\u4f7f\u7528\u5bb9\u5668\uff0c\u5c31\u8981\u4f7f\u7528 docker container start \u547d\u4ee4\uff0c\u5b83\u7528\u6765\u542f\u52a8\u5df2\u7ecf\u751f\u6210\u3001\u5df2\u7ecf\u505c\u6b62\u8fd0\u884c\u7684\u5bb9\u5668\u6587\u4ef6\u3002 $ docker container start [ containerID ] \uff082\uff09docker container stop \u524d\u9762\u7684 docker container kill \u547d\u4ee4\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\uff0c\u76f8\u5f53\u4e8e\u5411\u5bb9\u5668\u91cc\u9762\u7684\u4e3b\u8fdb\u7a0b\u53d1\u51fa SIGKILL \u4fe1\u53f7\u3002\u800c docker container stop \u547d\u4ee4\u4e5f\u662f\u7528\u6765\u7ec8\u6b62\u5bb9\u5668\u8fd0\u884c\uff0c\u76f8\u5f53\u4e8e\u5411\u5bb9\u5668\u91cc\u9762\u7684\u4e3b\u8fdb\u7a0b\u53d1\u51fa SIGTERM \u4fe1\u53f7\uff0c\u7136\u540e\u8fc7\u4e00\u6bb5\u65f6\u95f4\u518d\u53d1\u51fa SIGKILL \u4fe1\u53f7\u3002 $ docker container stop [ containerID ] \u8fd9\u4e24\u4e2a\u4fe1\u53f7\u7684\u5dee\u522b\u662f\uff0c\u5e94\u7528\u7a0b\u5e8f\u6536\u5230 SIGTERM \u4fe1\u53f7\u4ee5\u540e\uff0c\u53ef\u4ee5\u81ea\u884c\u8fdb\u884c\u6536\u5c3e\u6e05\u7406\u5de5\u4f5c\uff0c\u4f46\u4e5f\u53ef\u4ee5\u4e0d\u7406\u4f1a\u8fd9\u4e2a\u4fe1\u53f7\u3002\u5982\u679c\u6536\u5230 SIGKILL \u4fe1\u53f7\uff0c\u5c31\u4f1a\u5f3a\u884c\u7acb\u5373\u7ec8\u6b62\uff0c\u90a3\u4e9b\u6b63\u5728\u8fdb\u884c\u4e2d\u7684\u64cd\u4f5c\u4f1a\u5168\u90e8\u4e22\u5931\u3002 \uff083\uff09docker container logs docker container logs \u547d\u4ee4\u7528\u6765\u67e5\u770b docker \u5bb9\u5668\u7684\u8f93\u51fa\uff0c\u5373\u5bb9\u5668\u91cc\u9762 Shell \u7684\u6807\u51c6\u8f93\u51fa\u3002\u5982\u679c docker run \u547d\u4ee4\u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4f7f\u7528 -it \u53c2\u6570\uff0c\u5c31\u8981\u7528\u8fd9\u4e2a\u547d\u4ee4\u67e5\u770b\u8f93\u51fa\u3002 $ docker container logs [ containerID ] \uff084\uff09docker container exec docker container exec \u547d\u4ee4\u7528\u4e8e\u8fdb\u5165\u4e00\u4e2a\u6b63\u5728\u8fd0\u884c\u7684 docker \u5bb9\u5668\u3002\u5982\u679c docker run \u547d\u4ee4\u8fd0\u884c\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4f7f\u7528 -it \u53c2\u6570\uff0c\u5c31\u8981\u7528\u8fd9\u4e2a\u547d\u4ee4\u8fdb\u5165\u5bb9\u5668\u3002\u4e00\u65e6\u8fdb\u5165\u4e86\u5bb9\u5668\uff0c\u5c31\u53ef\u4ee5\u5728\u5bb9\u5668\u7684 Shell \u6267\u884c\u547d\u4ee4\u4e86\u3002 $ docker container exec -it [ containerID ] /bin/bash \uff085\uff09docker container cp docker container cp \u547d\u4ee4\u7528\u4e8e\u4ece\u6b63\u5728\u8fd0\u884c\u7684 Docker \u5bb9\u5668\u91cc\u9762\uff0c\u5c06\u6587\u4ef6\u62f7\u8d1d\u5230\u672c\u673a\u3002\u4e0b\u9762\u662f\u62f7\u8d1d\u5230\u5f53\u524d\u76ee\u5f55\u7684\u5199\u6cd5\u3002 $ docker container cp [ containID ] : [ /path/to/file ] . \u975e\u5e38\u611f\u8c22\u4f60\u4e00\u76f4\u8bfb\u5230\u4e86\u8fd9\u91cc\uff0c\u8fd9\u4e2a\u7cfb\u5217\u8fd8\u6709 \u4e0b\u4e00\u7bc7 \uff0c\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Docker \u642d\u5efa\u771f\u6b63\u7684\u7f51\u7ad9\uff0c\u6b22\u8fce \u7ee7\u7eed\u9605\u8bfb \u3002 \uff08\u5b8c\uff09","title":"\u5341\u4e00\u3001\u5176\u4ed6\u6709\u7528\u7684\u547d\u4ee4"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/","text":"Docker \u5fae\u670d\u52a1\u6559\u7a0b \u00b6 \u4f5c\u8005\uff1a \u962e\u4e00\u5cf0 \u65e5\u671f\uff1a 2018 \u5e74 2 \u6708 13 \u65e5 Docker \u662f\u4e00\u4e2a\u5bb9\u5668\u5de5\u5177\uff0c\u63d0\u4f9b\u865a\u62df\u73af\u5883\u3002\u5f88\u591a\u4eba\u8ba4\u4e3a\uff0c\u5b83\u6539\u53d8\u4e86\u6211\u4eec\u5bf9\u8f6f\u4ef6\u7684\u8ba4\u8bc6\u3002 \u7ad9\u5728 Docker \u7684\u89d2\u5ea6\uff0c\u8f6f\u4ef6\u5c31\u662f\u5bb9\u5668\u7684\u7ec4\u5408\uff1a\u4e1a\u52a1\u903b\u8f91\u5bb9\u5668\u3001\u6570\u636e\u5e93\u5bb9\u5668\u3001\u50a8\u5b58\u5bb9\u5668\u3001\u961f\u5217\u5bb9\u5668......Docker \u4f7f\u5f97\u8f6f\u4ef6\u53ef\u4ee5\u62c6\u5206\u6210\u82e5\u5e72\u4e2a\u6807\u51c6\u5316\u5bb9\u5668\uff0c\u7136\u540e\u50cf\u642d\u79ef\u6728\u4e00\u6837\u7ec4\u5408\u8d77\u6765\u3002 \u8fd9\u6b63\u662f\u5fae\u670d\u52a1\uff08microservices\uff09\u7684\u601d\u60f3\uff1a\u8f6f\u4ef6\u628a\u4efb\u52a1\u5916\u5305\u51fa\u53bb\uff0c\u8ba9\u5404\u79cd\u5916\u90e8\u670d\u52a1\u5b8c\u6210\u8fd9\u4e9b\u4efb\u52a1\uff0c\u8f6f\u4ef6\u672c\u8eab\u53ea\u662f\u5e95\u5c42\u670d\u52a1\u7684\u8c03\u5ea6\u4e2d\u5fc3\u548c\u7ec4\u88c5\u5c42\u3002 \u5fae\u670d\u52a1\u5f88\u9002\u5408\u7528 Docker \u5bb9\u5668\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u5bb9\u5668\u627f\u8f7d\u4e00\u4e2a\u670d\u52a1\u3002\u4e00\u53f0\u8ba1\u7b97\u673a\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u5bb9\u5668\uff0c\u4ece\u800c\u5c31\u80fd\u5f88\u8f7b\u677e\u5730\u6a21\u62df\u51fa\u590d\u6742\u7684\u5fae\u670d\u52a1\u67b6\u6784\u3002 \u4e0a\u4e00\u7bc7\u6559\u7a0b \u4ecb\u7ecd\u4e86 Docker \u7684\u6982\u5ff5\u548c\u57fa\u672c\u7528\u6cd5\uff0c\u672c\u6587\u63a5\u7740\u5f80\u4e0b\u4ecb\u7ecd\uff0c\u5982\u4f55\u5728\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u5b9e\u73b0\u591a\u4e2a\u670d\u52a1\uff0c\u8ba9\u5b83\u4eec\u4e92\u76f8\u914d\u5408\uff0c\u7ec4\u5408\u51fa\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002 \u6211\u9009\u62e9\u7684\u793a\u4f8b\u8f6f\u4ef6\u662f WordPress \u3002\u5b83\u662f\u4e00\u4e2a\u5e38\u7528\u8f6f\u4ef6\uff0c\u5168\u4e16\u754c\u7528\u6237\u636e\u8bf4\u8d85\u8fc7\u51e0\u5343\u4e07\u3002\u540c\u65f6\u5b83\u53c8\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u8981\u4e24\u4e2a\u5bb9\u5668\u5c31\u591f\u4e86\uff08\u4e1a\u52a1\u5bb9\u5668 + \u6570\u636e\u5e93\u5bb9\u5668\uff09\uff0c\u5f88\u9002\u5408\u6559\u5b66\u3002\u800c\u4e14\uff0c\u8fd9\u79cd\"\u4e1a\u52a1 + \u6570\u636e\u5e93\"\u7684\u5bb9\u5668\u67b6\u6784\uff0c\u5177\u6709\u901a\u7528\u6027\uff0c\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u590d\u7528\u3002 \u4e3a\u4e86\u52a0\u6df1\u8bfb\u8005\u7406\u89e3\uff0c\u672c\u6587\u91c7\u7528\u4e09\u79cd\u65b9\u6cd5\uff0c\u6f14\u793a\u5982\u4f55\u67b6\u8bbe WordPress \u7f51\u7ad9\u3002 \u65b9\u6cd5 A\uff1a\u81ea\u5efa WordPress \u5bb9\u5668 \u65b9\u6cd5 B\uff1a\u91c7\u7528\u5b98\u65b9\u7684 WordPress \u5bb9\u5668 \u65b9\u6cd5 C\uff1a\u91c7\u7528 Docker Compose \u5de5\u5177 \u4e00\u3001\u9884\u5907\u5de5\u4f5c\uff1aimage \u4ed3\u5e93\u7684\u955c\u50cf\u7f51\u5740 \u00b6 \u672c\u6559\u7a0b\u9700\u8981\u4ece\u4ed3\u5e93\u4e0b\u8f7d image \u6587\u4ef6\uff0c\u4f46\u662f\u56fd\u5185\u8bbf\u95ee Docker \u7684\u5b98\u65b9\u4ed3\u5e93\u5f88\u6162\uff0c\u8fd8\u7ecf\u5e38\u65ad\u7ebf\uff0c\u6240\u4ee5\u8981\u628a\u4ed3\u5e93\u7f51\u5740\u6539\u6210\u56fd\u5185\u7684\u955c\u50cf\u7ad9\u3002\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528\u5b98\u65b9\u955c\u50cf registry.docker-cn.com \u3002\u4e0b\u9762\u662f\u6211\u7684 Debian \u7cfb\u7edf\u7684\u9ed8\u8ba4\u4ed3\u5e93\u4fee\u6539\u65b9\u6cd5\uff0c\u5176\u4ed6\u7cfb\u7edf\u7684\u4fee\u6539\u65b9\u6cd5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 \u6253\u5f00 /etc/default/docker \u6587\u4ef6\uff08\u9700\u8981 sudo \u6743\u9650\uff09\uff0c\u5728\u6587\u4ef6\u7684\u5e95\u90e8\u52a0\u4e0a\u4e00\u884c\u3002 DOCKER_OPTS = \"--registry-mirror=https://registry.docker-cn.com\" \u7136\u540e\uff0c\u91cd\u542f Docker \u670d\u52a1\u3002 $ sudo service docker restart \u73b0\u5728\u5c31\u4f1a\u81ea\u52a8\u4ece\u955c\u50cf\u4ed3\u5e93\u4e0b\u8f7d image \u6587\u4ef6\u4e86\u3002 \u4e8c\u3001\u65b9\u6cd5 A\uff1a\u81ea\u5efa WordPress \u5bb9\u5668 \u00b6 \u524d\u9762\u8bf4\u8fc7\uff0c\u672c\u6587\u4f1a\u7528\u4e09\u79cd\u65b9\u6cd5\u6f14\u793a WordPress \u7684\u5b89\u88c5\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u81ea\u5efa WordPress \u5bb9\u5668\u3002 2.1 \u5b98\u65b9 \u7684 PHP image \u00b6 \u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a\u5de5\u4f5c\u76ee\u5f55\uff0c\u5e76\u8fdb\u5165\u8be5\u76ee\u5f55\u3002 $ mkdir docker-demo && cd docker-demo \u7136\u540e\uff0c\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker container run \\ --rm \\ --name wordpress \\ --volume \" $PWD /\" :/var/www/html \\ php:5.6-apache \u4e0a\u9762\u7684\u547d\u4ee4\u57fa\u4e8e php \u7684 image \u6587\u4ef6\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u4e14\u8fd0\u884c\u8be5\u5bb9\u5668\u3002 php \u7684\u6807\u7b7e\u662f 5.6-apache \uff0c\u8bf4\u660e\u88c5\u7684\u662f PHP 5.6\uff0c\u5e76\u4e14\u81ea\u5e26 Apache \u670d\u52a1\u5668\u3002\u8be5\u547d\u4ee4\u7684\u4e09\u4e2a\u53c2\u6570\u542b\u4e49\u5982\u4e0b\u3002 --rm \uff1a\u505c\u6b62\u8fd0\u884c\u540e\uff0c\u81ea\u52a8\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 --name wordpress \uff1a\u5bb9\u5668\u7684\u540d\u5b57\u53eb\u505a wordpress \u3002 --volume \"$PWD/\":/var/www/html \uff1a\u5c06\u5f53\u524d\u76ee\u5f55\uff08 $PWD \uff09\u6620\u5c04\u5230\u5bb9\u5668\u7684 /var/www/html \uff08Apache \u5bf9\u5916\u8bbf\u95ee\u7684\u9ed8\u8ba4\u76ee\u5f55\uff09\u3002\u56e0\u6b64\uff0c\u5f53\u524d\u76ee\u5f55\u7684\u4efb\u4f55\u4fee\u6539\uff0c\u90fd\u4f1a\u53cd\u6620\u5230\u5bb9\u5668\u91cc\u9762\uff0c\u8fdb\u800c\u88ab\u5916\u90e8\u8bbf\u95ee\u5230\u3002 \u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u4ee5\u540e\uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u547d\u4ee4\u884c\u4f1a\u63d0\u793a\u5bb9\u5668\u5bf9\u5916\u7684 IP \u5730\u5740\uff0c\u8bf7\u8bb0\u4e0b\u8fd9\u4e2a\u5730\u5740\uff0c\u6211\u4eec\u8981\u7528\u5b83\u6765\u8bbf\u95ee\u5bb9\u5668\u3002\u6211\u5206\u914d\u5230\u7684 IP \u5730\u5740\u662f 172.17.0.2\u3002 \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee 172.17.0.2\uff0c\u4f60\u4f1a\u770b\u5230\u4e0b\u9762\u7684\u63d0\u793a\u3002 Forbidden You don ' t have permission to access / on this server. \u8fd9\u662f\u56e0\u4e3a\u5bb9\u5668\u7684 /var/www/html \u76ee\u5f55\uff08\u4e5f\u5c31\u662f\u672c\u673a\u7684 docker-demo \u76ee\u5f55\uff09\u4e0b\u9762\u4ec0\u4e48\u4e5f\u6ca1\u6709\uff0c\u65e0\u6cd5\u63d0\u4f9b\u53ef\u4ee5\u8bbf\u95ee\u7684\u5185\u5bb9\u3002 \u8bf7\u5728\u672c\u673a\u7684 docker-demo \u76ee\u5f55\u4e0b\u9762\uff0c\u6dfb\u52a0\u4e00\u4e2a\u6700\u7b80\u5355\u7684 PHP \u6587\u4ef6 index.php \u3002 <?php phpinfo () ; ?> \u4fdd\u5b58\u4ee5\u540e\uff0c\u6d4f\u89c8\u5668\u5237\u65b0 172.17.0.2 \uff0c\u5e94\u8be5\u5c31\u4f1a\u770b\u5230\u719f\u6089\u7684 phpinfo \u9875\u9762\u4e86\u3002 2.2 \u62f7\u8d1d WordPress \u5b89\u88c5\u5305 \u00b6 \u65e2\u7136\u672c\u5730\u7684 docker-demo \u76ee\u5f55\u53ef\u4ee5\u6620\u5c04\u5230\u5bb9\u5668\u91cc\u9762\uff0c\u90a3\u4e48\u628a WordPress \u5b89\u88c5\u5305\u62f7\u8d1d\u5230 docker-demo \u76ee\u5f55\u4e0b\uff0c\u4e0d\u5c31\u53ef\u4ee5\u901a\u8fc7\u5bb9\u5668\u8bbf\u95ee\u5230 WordPress \u7684\u5b89\u88c5\u754c\u9762\u4e86\u5417\uff1f \u9996\u5148\uff0c\u5728 docker-demo \u76ee\u5f55\u4e0b\uff0c\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u6293\u53d6\u5e76\u89e3\u538b WordPress \u5b89\u88c5\u5305\u3002 $ wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz $ tar -xvf wordpress-4.9.4-zh_CN.tar.gz \u89e3\u538b\u4ee5\u540e\uff0cWordPress \u7684\u5b89\u88c5\u6587\u4ef6\u4f1a\u5728 docker-demo/wordpress \u76ee\u5f55\u4e0b\u3002 \u8fd9\u65f6\u6d4f\u89c8\u5668\u8bbf\u95ee http://172.17.0.2/wordpress \uff0c\u5c31\u80fd\u770b\u5230 WordPress \u7684\u5b89\u88c5\u63d0\u793a\u4e86\u3002 2.3 \u5b98\u65b9\u7684 MySQL \u5bb9\u5668 \u00b6 WordPress \u5fc5\u987b\u6709\u6570\u636e\u5e93\u624d\u80fd\u5b89\u88c5\uff0c\u6240\u4ee5\u5fc5\u987b\u65b0\u5efa MySQL \u5bb9\u5668\u3002 \u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u547d\u4ee4\u884c\u7a97\u53e3\uff0c\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker container run \\ -d \\ --rm \\ --name wordpressdb \\ --env MYSQL_ROOT_PASSWORD = 123456 \\ --env MYSQL_DATABASE = wordpress \\ mysql:5.7 \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u57fa\u4e8e MySQL \u7684 image \u6587\u4ef6\uff085.7 \u7248\u672c\uff09\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\u3002\u8be5\u547d\u4ee4\u7684\u4e94\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u542b\u4e49\u5982\u4e0b\u3002 -d \uff1a\u5bb9\u5668\u542f\u52a8\u540e\uff0c\u5728\u540e\u53f0\u8fd0\u884c\u3002 --rm \uff1a\u5bb9\u5668\u7ec8\u6b62\u8fd0\u884c\u540e\uff0c\u81ea\u52a8\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 --name wordpressdb \uff1a\u5bb9\u5668\u7684\u540d\u5b57\u53eb\u505a wordpressdb --env MYSQL_ROOT_PASSWORD=123456 \uff1a\u5411\u5bb9\u5668\u8fdb\u7a0b\u4f20\u5165\u4e00\u4e2a\u73af\u5883\u53d8\u91cf MYSQL_ROOT_PASSWORD \uff0c\u8be5\u53d8\u91cf\u4f1a\u88ab\u7528\u4f5c MySQL \u7684\u6839\u5bc6\u7801\u3002 --env MYSQL_DATABASE=wordpress \uff1a\u5411\u5bb9\u5668\u8fdb\u7a0b\u4f20\u5165\u4e00\u4e2a\u73af\u5883\u53d8\u91cf MYSQL_DATABASE \uff0c\u5bb9\u5668\u91cc\u9762\u7684 MySQL \u4f1a\u6839\u636e\u8be5\u53d8\u91cf\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u6570\u636e\u5e93\uff08\u672c\u4f8b\u662f WordPress \uff09\u3002 \u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u4ee5\u540e\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u547d\u4ee4\u884c\u4f1a\u663e\u793a\u4e00\u884c\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f\u5bb9\u5668\u7684 ID\uff0c\u8868\u793a\u5df2\u7ecf\u65b0\u5efa\u6210\u529f\u4e86\u3002 \u8fd9\u65f6\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u4f60\u5e94\u8be5\u770b\u5230 wordpress \u548c wordpressdb \u4e24\u4e2a\u5bb9\u5668\u6b63\u5728\u8fd0\u884c\u3002 $ docker container ls \u5176\u4e2d\uff0c wordpressdb \u662f\u540e\u53f0\u8fd0\u884c\u7684\uff0c\u524d\u53f0\u770b\u4e0d\u89c1\u5b83\u7684\u8f93\u51fa\uff0c\u5fc5\u987b\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u3002 $ docker container logs wordpressdb 2.4 \u5b9a\u5236 PHP \u5bb9\u5668 \u00b6 \u73b0\u5728 WordPress \u5bb9\u5668\u548c MySQL \u5bb9\u5668\u90fd\u5df2\u7ecf\u6709\u4e86\u3002\u63a5\u4e0b\u6765\uff0c\u8981\u628a WordPress \u5bb9\u5668\u8fde\u63a5\u5230 MySQL \u5bb9\u5668\u4e86\u3002\u4f46\u662f\uff0cPHP \u7684\u5b98\u65b9 image \u4e0d\u5e26\u6709 mysql \u6269\u5c55\uff0c\u5fc5\u987b\u81ea\u5df1\u65b0\u5efa image \u6587\u4ef6\u3002 \u9996\u5148\uff0c\u505c\u6389 WordPress \u5bb9\u5668\u3002 $ docker container stop wordpress \u505c\u6389\u4ee5\u540e\uff0c\u7531\u4e8e --rm \u53c2\u6570\u7684\u4f5c\u7528\uff0c\u8be5\u5bb9\u5668\u6587\u4ef6\u4f1a\u88ab\u81ea\u52a8\u5220\u9664\u3002 \u7136\u540e\uff0c\u5728 docker-demo \u76ee\u5f55\u91cc\u9762\uff0c\u65b0\u5efa\u4e00\u4e2a Dockerfile \u6587\u4ef6\uff0c\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 FROM php:5.6-apache RUN docker-php-ext-install mysqli CMD apache2-foreground \u4e0a\u9762\u4ee3\u7801\u7684\u610f\u601d\uff0c\u5c31\u662f\u5728\u539f\u6765 PHP \u7684 image \u57fa\u7840\u4e0a\uff0c\u5b89\u88c5 mysqli \u7684\u6269\u5c55\u3002\u7136\u540e\uff0c\u542f\u52a8 Apache\u3002 \u57fa\u4e8e\u8fd9\u4e2a Dockerfile \u6587\u4ef6\uff0c\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a phpwithmysql \u7684 image \u6587\u4ef6\u3002 $ docker build -t phpwithmysql . 2.5 Wordpress \u5bb9\u5668\u8fde\u63a5 MySQL \u00b6 \u73b0\u5728\u57fa\u4e8e phpwithmysql image\uff0c\u91cd\u65b0\u65b0\u5efa\u4e00\u4e2a WordPress \u5bb9\u5668\u3002 $ docker container run \\ --rm \\ --name wordpress \\ --volume \" $PWD /\" :/var/www/html \\ --link wordpressdb:mysql \\ phpwithmysql \u8ddf\u4e0a\u4e00\u6b21\u76f8\u6bd4\uff0c\u4e0a\u9762\u7684\u547d\u4ee4\u591a\u4e86\u4e00\u4e2a\u53c2\u6570 --link wordpressdb:mysql \uff0c\u8868\u793a WordPress \u5bb9\u5668\u8981\u8fde\u5230 wordpressdb \u5bb9\u5668\uff0c\u5192\u53f7\u8868\u793a\u8be5\u5bb9\u5668\u7684\u522b\u540d\u662f mysql \u3002 \u8fd9\u65f6\u8fd8\u8981\u6539\u4e00\u4e0b wordpress \u76ee\u5f55\u7684\u6743\u9650\uff0c\u8ba9\u5bb9\u5668\u53ef\u4ee5\u5c06\u914d\u7f6e\u4fe1\u606f\u5199\u5165\u8fd9\u4e2a\u76ee\u5f55\uff08\u5bb9\u5668\u5185\u90e8\u5199\u5165\u7684 /var/www/html \u76ee\u5f55\uff0c\u4f1a\u6620\u5c04\u5230\u8fd9\u4e2a\u76ee\u5f55\uff09\u3002 $ chmod -R 777 wordpress \u63a5\u7740\uff0c\u56de\u5230\u6d4f\u89c8\u5668\u7684 http://172.17.0.2/wordpress \u9875\u9762\uff0c\u70b9\u51fb\"\u73b0\u5728\u5c31\u5f00\u59cb\uff01\"\u6309\u94ae\uff0c\u5f00\u59cb\u5b89\u88c5\u3002 WordPress \u63d0\u793a\u8981\u8f93\u5165\u6570\u636e\u5e93\u53c2\u6570\u3002\u8f93\u5165\u7684\u53c2\u6570\u5982\u4e0b\u3002 \u6570\u636e\u5e93\u540d\uff1a wordpress \u7528\u6237\u540d\uff1a root \u5bc6\u7801\uff1a 123456 \u6570\u636e\u5e93\u4e3b\u673a\uff1a mysql \u8868\u524d\u7f00\uff1a wp_ \uff08\u4e0d\u53d8\uff09 \u70b9\u51fb\"\u4e0b\u4e00\u6b65\"\u6309\u94ae\uff0c\u5982\u679c Wordpress \u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e0b\u9762\u7684\u9875\u9762\uff0c\u8fd9\u5c31\u8868\u793a\u53ef\u4ee5\u5b89\u88c5\u4e86\u3002 \u81f3\u6b64\uff0c\u81ea\u5efa WordPress \u5bb9\u5668\u7684\u6f14\u793a\u5b8c\u6bd5\uff0c\u53ef\u4ee5\u628a\u6b63\u5728\u8fd0\u884c\u7684\u4e24\u4e2a\u5bb9\u5668\u5173\u95ed\u4e86\uff08\u5bb9\u5668\u6587\u4ef6\u4f1a\u81ea\u52a8\u5220\u9664\uff09\u3002 $ docker container stop wordpress wordpressdb \u4e09\u3001\u65b9\u6cd5 B\uff1aWordpress \u5b98\u65b9\u955c\u50cf \u00b6 \u4e0a\u4e00\u90e8\u5206\u7684\u81ea\u5efa WordPress \u5bb9\u5668\uff0c\u8fd8\u662f\u633a\u9ebb\u70e6\u7684\u3002\u5176\u5b9e\u4e0d\u7528\u8fd9\u4e48\u9ebb\u70e6\uff0cDocker \u5df2\u7ecf\u63d0\u4f9b\u4e86\u5b98\u65b9 WordPress image\uff0c\u76f4\u63a5\u7528\u90a3\u4e2a\u5c31\u53ef\u4ee5\u4e86\u3002\u6709\u4e86\u4e0a\u4e00\u90e8\u5206\u7684\u57fa\u7840\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u5c31\u5f88\u5bb9\u6613\u7406\u89e3\u4e86\u3002 3.1 \u57fa\u672c\u7528\u6cd5 \u00b6 \u9996\u5148\uff0c\u65b0\u5efa\u5e76\u542f\u52a8 MySQL \u5bb9\u5668\u3002 $ docker container run \\ -d \\ --rm \\ --name wordpressdb \\ --env MYSQL_ROOT_PASSWORD = 123456 \\ --env MYSQL_DATABASE = wordpress \\ mysql:5.7 \u7136\u540e\uff0c\u57fa\u4e8e\u5b98\u65b9\u7684 WordPress image\uff0c\u65b0\u5efa\u5e76\u542f\u52a8 WordPress \u5bb9\u5668\u3002 $ docker container run \\ -d \\ --rm \\ --name wordpress \\ --env WORDPRESS_DB_PASSWORD = 123456 \\ --link wordpressdb:mysql \\ wordpress \u4e0a\u9762\u547d\u4ee4\u4e2d\uff0c\u5404\u4e2a\u53c2\u6570\u7684\u542b\u4e49\u524d\u9762\u90fd\u89e3\u91ca\u8fc7\u4e86\uff0c\u5176\u4e2d\u73af\u5883\u53d8\u91cf WORDPRESS_DB_PASSWORD \u662f MySQL \u5bb9\u5668\u7684\u6839\u5bc6\u7801\u3002 \u4e0a\u9762\u547d\u4ee4\u6307\u5b9a wordpress \u5bb9\u5668\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5bfc\u81f4\u524d\u53f0\u770b\u4e0d\u89c1\u8f93\u51fa\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u51fa wordpress \u5bb9\u5668\u7684 IP \u5730\u5740\u3002 $ docker container inspect wordpress \u4e0a\u9762\u547d\u4ee4\u8fd0\u884c\u4ee5\u540e\uff0c\u4f1a\u8f93\u51fa\u5f88\u591a\u5185\u5bb9\uff0c\u627e\u5230 IPAddress \u5b57\u6bb5\u5373\u53ef\u3002\u6211\u7684\u673a\u5668\u8fd4\u56de\u7684 IP \u5730\u5740\u662f 172.17.0.3 \u3002 \u6d4f\u89c8\u5668\u8bbf\u95ee 172.17.0.3 \uff0c\u5c31\u4f1a\u770b\u5230 WordPress \u7684\u5b89\u88c5\u63d0\u793a\u3002 3.2 WordPress \u5bb9\u5668\u7684\u5b9a\u5236 \u00b6 \u5230\u4e86\u4e0a\u4e00\u6b65\uff0c\u5b98\u65b9 WordPress \u5bb9\u5668\u7684\u5b89\u88c5\u5c31\u5df2\u7ecf\u6210\u529f\u4e86\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6709\u4e24\u4e2a\u5f88\u4e0d\u65b9\u4fbf\u7684\u5730\u65b9\u3002 \u6bcf\u6b21\u65b0\u5efa\u5bb9\u5668\uff0c\u8fd4\u56de\u7684 IP \u5730\u5740\u4e0d\u80fd\u4fdd\u8bc1\u76f8\u540c\uff0c\u5bfc\u81f4\u8981\u66f4\u6362 IP \u5730\u5740\u8bbf\u95ee WordPress\u3002 WordPress \u5b89\u88c5\u5728\u5bb9\u5668\u91cc\u9762\uff0c\u672c\u5730\u65e0\u6cd5\u4fee\u6539\u6587\u4ef6\u3002 \u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\u5f88\u5bb9\u6613\uff0c\u53ea\u8981\u65b0\u5efa\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u52a0\u4e24\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\u5c31\u53ef\u4ee5\u4e86\u3002 \u5148\u628a\u521a\u624d\u542f\u52a8\u7684 WordPress \u5bb9\u5668\u7ec8\u6b62\uff08\u5bb9\u5668\u6587\u4ef6\u4f1a\u81ea\u52a8\u5220\u9664\uff09\u3002 $ docker container stop wordpress \u7136\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u65b0\u5efa\u5e76\u542f\u52a8 WordPress \u5bb9\u5668\u3002 $ docker container run \\ -d \\ -p 127 .0.0.2:8080:80 \\ --rm \\ --name wordpress \\ --env WORDPRESS_DB_PASSWORD = 123456 \\ --link wordpressdb:mysql \\ --volume \" $PWD /wordpress\" :/var/www/html \\ wordpress \u4e0a\u9762\u7684\u547d\u4ee4\u8ddf\u524d\u9762\u76f8\u6bd4\uff0c\u547d\u4ee4\u884c\u53c2\u6570\u53ea\u591a\u51fa\u4e86\u4e24\u4e2a\u3002 -p 127.0.0.2:8080:80 \uff1a\u5c06\u5bb9\u5668\u7684 80 \u7aef\u53e3\u6620\u5c04\u5230 127.0.0.2 \u7684 8080 \u7aef\u53e3\u3002 --volume \"$PWD/wordpress\":/var/www/html \uff1a\u5c06\u5bb9\u5668\u7684 /var/www/html \u76ee\u5f55\u6620\u5c04\u5230\u5f53\u524d\u76ee\u5f55\u7684 wordpress \u5b50\u76ee\u5f55\u3002 \u6d4f\u89c8\u5668\u8bbf\u95ee 127.0.0.2:8080:80 \u5c31\u80fd\u770b\u5230 WordPress \u7684\u5b89\u88c5\u63d0\u793a\u4e86\u3002\u800c\u4e14\uff0c\u4f60\u5728 wordpress \u5b50\u76ee\u5f55\u4e0b\u7684\u6bcf\u6b21\u4fee\u6539\uff0c\u90fd\u4f1a\u53cd\u6620\u5230\u5bb9\u5668\u91cc\u9762\u3002 \u6700\u540e\uff0c\u7ec8\u6b62\u8fd9\u4e24\u4e2a\u5bb9\u5668\uff08\u5bb9\u5668\u6587\u4ef6\u4f1a\u81ea\u52a8\u5220\u9664\uff09\u3002 $ docker container stop wordpress wordpressdb \u56db\u3001\u65b9\u6cd5 C\uff1aDocker Compose \u5de5\u5177 \u00b6 \u4e0a\u9762\u7684\u65b9\u6cd5 B \u5df2\u7ecf\u633a\u7b80\u5355\u4e86\uff0c\u4f46\u662f\u5fc5\u987b\u81ea\u5df1\u5206\u522b\u542f\u52a8\u4e24\u4e2a\u5bb9\u5668\uff0c\u542f\u52a8\u7684\u65f6\u5019\uff0c\u8fd8\u8981\u5728\u547d\u4ee4\u884c\u63d0\u4f9b\u5bb9\u5668\u4e4b\u95f4\u7684\u8fde\u63a5\u4fe1\u606f\u3002\u56e0\u6b64\uff0cDocker \u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u6765\u7ba1\u7406\u591a\u4e2a\u5bb9\u5668\u7684\u8054\u52a8\u3002 4.1 Docker Compose \u7b80\u4ecb \u00b6 Compose \u662f Docker \u516c\u53f8\u63a8\u51fa\u7684\u4e00\u4e2a\u5de5\u5177\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u7ba1\u7406\u591a\u4e2a Docker \u5bb9\u5668\u7ec4\u6210\u4e00\u4e2a\u5e94\u7528\u3002\u4f60\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a YAML \u683c\u5f0f\u7684\u914d\u7f6e\u6587\u4ef6 docker-compose.yml \uff0c\u5199\u597d\u591a\u4e2a\u5bb9\u5668\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u3002\u7136\u540e\uff0c\u53ea\u8981\u4e00\u4e2a\u547d\u4ee4\uff0c\u5c31\u80fd\u540c\u65f6\u542f\u52a8/\u5173\u95ed\u8fd9\u4e9b\u5bb9\u5668\u3002 # \u542f\u52a8\u6240\u6709\u670d\u52a1 $ docker-compose up # \u5173\u95ed\u6240\u6709\u670d\u52a1 $ docker-compose stop 4.2 Docker Compose \u7684\u5b89\u88c5 \u00b6 Mac \u548c Windows \u5728\u5b89\u88c5 docker \u7684\u65f6\u5019\uff0c\u4f1a\u4e00\u8d77\u5b89\u88c5 docker compose\u3002Linux \u7cfb\u7edf\u4e0b\u7684\u5b89\u88c5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker-compose --version 4.3 WordPress \u793a\u4f8b \u00b6 \u5728 docker-demo \u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa docker-compose.yml \u6587\u4ef6\uff0c\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 mysql: image: mysql:5.7 environment: - MYSQL_ROOT_PASSWORD = 123456 - MYSQL_DATABASE = wordpress web: image: wordpress links: - mysql environment: - WORDPRESS_DB_PASSWORD = 123456 ports: - \"127.0.0.3:8080:80\" working_dir: /var/www/html volumes: - wordpress:/var/www/html \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u4e24\u4e2a\u9876\u5c42\u6807\u7b7e\u8868\u793a\u6709\u4e24\u4e2a\u5bb9\u5668 mysql \u548c web \u3002\u6bcf\u4e2a\u5bb9\u5668\u7684\u5177\u4f53\u8bbe\u7f6e\uff0c\u524d\u9762\u90fd\u5df2\u7ecf\u8bb2\u89e3\u8fc7\u4e86\uff0c\u8fd8\u662f\u633a\u5bb9\u6613\u7406\u89e3\u7684\u3002 \u542f\u52a8\u4e24\u4e2a\u5bb9\u5668\u3002 $ docker-compose up \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.3:8080 \uff0c\u5e94\u8be5\u5c31\u80fd\u770b\u5230 WordPress \u7684\u5b89\u88c5\u754c\u9762\u3002 \u73b0\u5728\u5173\u95ed\u4e24\u4e2a\u5bb9\u5668\u3002 $ docker-compose stop \u5173\u95ed\u4ee5\u540e\uff0c\u8fd9\u4e24\u4e2a\u5bb9\u5668\u6587\u4ef6\u8fd8\u662f\u5b58\u5728\u7684\uff0c\u5199\u5728\u91cc\u9762\u7684\u6570\u636e\u4e0d\u4f1a\u4e22\u5931\u3002\u4e0b\u6b21\u542f\u52a8\u7684\u65f6\u5019\uff0c\u8fd8\u53ef\u4ee5\u590d\u7528\u3002\u4e0b\u9762\u7684\u547d\u4ee4\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u5bb9\u5668\u6587\u4ef6\u5220\u9664\uff08\u5bb9\u5668\u5fc5\u987b\u5df2\u7ecf\u505c\u6b62\u8fd0\u884c\uff09\u3002 $ docker-compose rm \u4e94\u3001\u53c2\u8003\u94fe\u63a5 \u00b6 How to Manually Build Docker Containers for WordPress , by Aleksander Koko How to Use the Official Docker WordPress Image , by Aleksander Koko Deploying WordPress with Docker , by Aleksander Koko \uff08\u5b8c\uff09","title":"02 Docker \u5fae\u670d\u52a1\u6559\u7a0b-\u962e\u4e00\u5cf0"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#docker","text":"\u4f5c\u8005\uff1a \u962e\u4e00\u5cf0 \u65e5\u671f\uff1a 2018 \u5e74 2 \u6708 13 \u65e5 Docker \u662f\u4e00\u4e2a\u5bb9\u5668\u5de5\u5177\uff0c\u63d0\u4f9b\u865a\u62df\u73af\u5883\u3002\u5f88\u591a\u4eba\u8ba4\u4e3a\uff0c\u5b83\u6539\u53d8\u4e86\u6211\u4eec\u5bf9\u8f6f\u4ef6\u7684\u8ba4\u8bc6\u3002 \u7ad9\u5728 Docker \u7684\u89d2\u5ea6\uff0c\u8f6f\u4ef6\u5c31\u662f\u5bb9\u5668\u7684\u7ec4\u5408\uff1a\u4e1a\u52a1\u903b\u8f91\u5bb9\u5668\u3001\u6570\u636e\u5e93\u5bb9\u5668\u3001\u50a8\u5b58\u5bb9\u5668\u3001\u961f\u5217\u5bb9\u5668......Docker \u4f7f\u5f97\u8f6f\u4ef6\u53ef\u4ee5\u62c6\u5206\u6210\u82e5\u5e72\u4e2a\u6807\u51c6\u5316\u5bb9\u5668\uff0c\u7136\u540e\u50cf\u642d\u79ef\u6728\u4e00\u6837\u7ec4\u5408\u8d77\u6765\u3002 \u8fd9\u6b63\u662f\u5fae\u670d\u52a1\uff08microservices\uff09\u7684\u601d\u60f3\uff1a\u8f6f\u4ef6\u628a\u4efb\u52a1\u5916\u5305\u51fa\u53bb\uff0c\u8ba9\u5404\u79cd\u5916\u90e8\u670d\u52a1\u5b8c\u6210\u8fd9\u4e9b\u4efb\u52a1\uff0c\u8f6f\u4ef6\u672c\u8eab\u53ea\u662f\u5e95\u5c42\u670d\u52a1\u7684\u8c03\u5ea6\u4e2d\u5fc3\u548c\u7ec4\u88c5\u5c42\u3002 \u5fae\u670d\u52a1\u5f88\u9002\u5408\u7528 Docker \u5bb9\u5668\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u5bb9\u5668\u627f\u8f7d\u4e00\u4e2a\u670d\u52a1\u3002\u4e00\u53f0\u8ba1\u7b97\u673a\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u5bb9\u5668\uff0c\u4ece\u800c\u5c31\u80fd\u5f88\u8f7b\u677e\u5730\u6a21\u62df\u51fa\u590d\u6742\u7684\u5fae\u670d\u52a1\u67b6\u6784\u3002 \u4e0a\u4e00\u7bc7\u6559\u7a0b \u4ecb\u7ecd\u4e86 Docker \u7684\u6982\u5ff5\u548c\u57fa\u672c\u7528\u6cd5\uff0c\u672c\u6587\u63a5\u7740\u5f80\u4e0b\u4ecb\u7ecd\uff0c\u5982\u4f55\u5728\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u5b9e\u73b0\u591a\u4e2a\u670d\u52a1\uff0c\u8ba9\u5b83\u4eec\u4e92\u76f8\u914d\u5408\uff0c\u7ec4\u5408\u51fa\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u3002 \u6211\u9009\u62e9\u7684\u793a\u4f8b\u8f6f\u4ef6\u662f WordPress \u3002\u5b83\u662f\u4e00\u4e2a\u5e38\u7528\u8f6f\u4ef6\uff0c\u5168\u4e16\u754c\u7528\u6237\u636e\u8bf4\u8d85\u8fc7\u51e0\u5343\u4e07\u3002\u540c\u65f6\u5b83\u53c8\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u8981\u4e24\u4e2a\u5bb9\u5668\u5c31\u591f\u4e86\uff08\u4e1a\u52a1\u5bb9\u5668 + \u6570\u636e\u5e93\u5bb9\u5668\uff09\uff0c\u5f88\u9002\u5408\u6559\u5b66\u3002\u800c\u4e14\uff0c\u8fd9\u79cd\"\u4e1a\u52a1 + \u6570\u636e\u5e93\"\u7684\u5bb9\u5668\u67b6\u6784\uff0c\u5177\u6709\u901a\u7528\u6027\uff0c\u8bb8\u591a\u5e94\u7528\u7a0b\u5e8f\u90fd\u53ef\u4ee5\u590d\u7528\u3002 \u4e3a\u4e86\u52a0\u6df1\u8bfb\u8005\u7406\u89e3\uff0c\u672c\u6587\u91c7\u7528\u4e09\u79cd\u65b9\u6cd5\uff0c\u6f14\u793a\u5982\u4f55\u67b6\u8bbe WordPress \u7f51\u7ad9\u3002 \u65b9\u6cd5 A\uff1a\u81ea\u5efa WordPress \u5bb9\u5668 \u65b9\u6cd5 B\uff1a\u91c7\u7528\u5b98\u65b9\u7684 WordPress \u5bb9\u5668 \u65b9\u6cd5 C\uff1a\u91c7\u7528 Docker Compose \u5de5\u5177","title":"Docker \u5fae\u670d\u52a1\u6559\u7a0b"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#image","text":"\u672c\u6559\u7a0b\u9700\u8981\u4ece\u4ed3\u5e93\u4e0b\u8f7d image \u6587\u4ef6\uff0c\u4f46\u662f\u56fd\u5185\u8bbf\u95ee Docker \u7684\u5b98\u65b9\u4ed3\u5e93\u5f88\u6162\uff0c\u8fd8\u7ecf\u5e38\u65ad\u7ebf\uff0c\u6240\u4ee5\u8981\u628a\u4ed3\u5e93\u7f51\u5740\u6539\u6210\u56fd\u5185\u7684\u955c\u50cf\u7ad9\u3002\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528\u5b98\u65b9\u955c\u50cf registry.docker-cn.com \u3002\u4e0b\u9762\u662f\u6211\u7684 Debian \u7cfb\u7edf\u7684\u9ed8\u8ba4\u4ed3\u5e93\u4fee\u6539\u65b9\u6cd5\uff0c\u5176\u4ed6\u7cfb\u7edf\u7684\u4fee\u6539\u65b9\u6cd5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 \u6253\u5f00 /etc/default/docker \u6587\u4ef6\uff08\u9700\u8981 sudo \u6743\u9650\uff09\uff0c\u5728\u6587\u4ef6\u7684\u5e95\u90e8\u52a0\u4e0a\u4e00\u884c\u3002 DOCKER_OPTS = \"--registry-mirror=https://registry.docker-cn.com\" \u7136\u540e\uff0c\u91cd\u542f Docker \u670d\u52a1\u3002 $ sudo service docker restart \u73b0\u5728\u5c31\u4f1a\u81ea\u52a8\u4ece\u955c\u50cf\u4ed3\u5e93\u4e0b\u8f7d image \u6587\u4ef6\u4e86\u3002","title":"\u4e00\u3001\u9884\u5907\u5de5\u4f5c\uff1aimage \u4ed3\u5e93\u7684\u955c\u50cf\u7f51\u5740"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#a-wordpress","text":"\u524d\u9762\u8bf4\u8fc7\uff0c\u672c\u6587\u4f1a\u7528\u4e09\u79cd\u65b9\u6cd5\u6f14\u793a WordPress \u7684\u5b89\u88c5\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u5c31\u662f\u81ea\u5efa WordPress \u5bb9\u5668\u3002","title":"\u4e8c\u3001\u65b9\u6cd5 A\uff1a\u81ea\u5efa WordPress \u5bb9\u5668"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#21-php-image","text":"\u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a\u5de5\u4f5c\u76ee\u5f55\uff0c\u5e76\u8fdb\u5165\u8be5\u76ee\u5f55\u3002 $ mkdir docker-demo && cd docker-demo \u7136\u540e\uff0c\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker container run \\ --rm \\ --name wordpress \\ --volume \" $PWD /\" :/var/www/html \\ php:5.6-apache \u4e0a\u9762\u7684\u547d\u4ee4\u57fa\u4e8e php \u7684 image \u6587\u4ef6\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\uff0c\u5e76\u4e14\u8fd0\u884c\u8be5\u5bb9\u5668\u3002 php \u7684\u6807\u7b7e\u662f 5.6-apache \uff0c\u8bf4\u660e\u88c5\u7684\u662f PHP 5.6\uff0c\u5e76\u4e14\u81ea\u5e26 Apache \u670d\u52a1\u5668\u3002\u8be5\u547d\u4ee4\u7684\u4e09\u4e2a\u53c2\u6570\u542b\u4e49\u5982\u4e0b\u3002 --rm \uff1a\u505c\u6b62\u8fd0\u884c\u540e\uff0c\u81ea\u52a8\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 --name wordpress \uff1a\u5bb9\u5668\u7684\u540d\u5b57\u53eb\u505a wordpress \u3002 --volume \"$PWD/\":/var/www/html \uff1a\u5c06\u5f53\u524d\u76ee\u5f55\uff08 $PWD \uff09\u6620\u5c04\u5230\u5bb9\u5668\u7684 /var/www/html \uff08Apache \u5bf9\u5916\u8bbf\u95ee\u7684\u9ed8\u8ba4\u76ee\u5f55\uff09\u3002\u56e0\u6b64\uff0c\u5f53\u524d\u76ee\u5f55\u7684\u4efb\u4f55\u4fee\u6539\uff0c\u90fd\u4f1a\u53cd\u6620\u5230\u5bb9\u5668\u91cc\u9762\uff0c\u8fdb\u800c\u88ab\u5916\u90e8\u8bbf\u95ee\u5230\u3002 \u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u4ee5\u540e\uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u547d\u4ee4\u884c\u4f1a\u63d0\u793a\u5bb9\u5668\u5bf9\u5916\u7684 IP \u5730\u5740\uff0c\u8bf7\u8bb0\u4e0b\u8fd9\u4e2a\u5730\u5740\uff0c\u6211\u4eec\u8981\u7528\u5b83\u6765\u8bbf\u95ee\u5bb9\u5668\u3002\u6211\u5206\u914d\u5230\u7684 IP \u5730\u5740\u662f 172.17.0.2\u3002 \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee 172.17.0.2\uff0c\u4f60\u4f1a\u770b\u5230\u4e0b\u9762\u7684\u63d0\u793a\u3002 Forbidden You don ' t have permission to access / on this server. \u8fd9\u662f\u56e0\u4e3a\u5bb9\u5668\u7684 /var/www/html \u76ee\u5f55\uff08\u4e5f\u5c31\u662f\u672c\u673a\u7684 docker-demo \u76ee\u5f55\uff09\u4e0b\u9762\u4ec0\u4e48\u4e5f\u6ca1\u6709\uff0c\u65e0\u6cd5\u63d0\u4f9b\u53ef\u4ee5\u8bbf\u95ee\u7684\u5185\u5bb9\u3002 \u8bf7\u5728\u672c\u673a\u7684 docker-demo \u76ee\u5f55\u4e0b\u9762\uff0c\u6dfb\u52a0\u4e00\u4e2a\u6700\u7b80\u5355\u7684 PHP \u6587\u4ef6 index.php \u3002 <?php phpinfo () ; ?> \u4fdd\u5b58\u4ee5\u540e\uff0c\u6d4f\u89c8\u5668\u5237\u65b0 172.17.0.2 \uff0c\u5e94\u8be5\u5c31\u4f1a\u770b\u5230\u719f\u6089\u7684 phpinfo \u9875\u9762\u4e86\u3002","title":"2.1 \u5b98\u65b9 \u7684 PHP image"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#22-wordpress","text":"\u65e2\u7136\u672c\u5730\u7684 docker-demo \u76ee\u5f55\u53ef\u4ee5\u6620\u5c04\u5230\u5bb9\u5668\u91cc\u9762\uff0c\u90a3\u4e48\u628a WordPress \u5b89\u88c5\u5305\u62f7\u8d1d\u5230 docker-demo \u76ee\u5f55\u4e0b\uff0c\u4e0d\u5c31\u53ef\u4ee5\u901a\u8fc7\u5bb9\u5668\u8bbf\u95ee\u5230 WordPress \u7684\u5b89\u88c5\u754c\u9762\u4e86\u5417\uff1f \u9996\u5148\uff0c\u5728 docker-demo \u76ee\u5f55\u4e0b\uff0c\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c\u6293\u53d6\u5e76\u89e3\u538b WordPress \u5b89\u88c5\u5305\u3002 $ wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz $ tar -xvf wordpress-4.9.4-zh_CN.tar.gz \u89e3\u538b\u4ee5\u540e\uff0cWordPress \u7684\u5b89\u88c5\u6587\u4ef6\u4f1a\u5728 docker-demo/wordpress \u76ee\u5f55\u4e0b\u3002 \u8fd9\u65f6\u6d4f\u89c8\u5668\u8bbf\u95ee http://172.17.0.2/wordpress \uff0c\u5c31\u80fd\u770b\u5230 WordPress \u7684\u5b89\u88c5\u63d0\u793a\u4e86\u3002","title":"2.2 \u62f7\u8d1d WordPress \u5b89\u88c5\u5305"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#23-mysql","text":"WordPress \u5fc5\u987b\u6709\u6570\u636e\u5e93\u624d\u80fd\u5b89\u88c5\uff0c\u6240\u4ee5\u5fc5\u987b\u65b0\u5efa MySQL \u5bb9\u5668\u3002 \u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u547d\u4ee4\u884c\u7a97\u53e3\uff0c\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker container run \\ -d \\ --rm \\ --name wordpressdb \\ --env MYSQL_ROOT_PASSWORD = 123456 \\ --env MYSQL_DATABASE = wordpress \\ mysql:5.7 \u4e0a\u9762\u7684\u547d\u4ee4\u4f1a\u57fa\u4e8e MySQL \u7684 image \u6587\u4ef6\uff085.7 \u7248\u672c\uff09\u65b0\u5efa\u4e00\u4e2a\u5bb9\u5668\u3002\u8be5\u547d\u4ee4\u7684\u4e94\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\u7684\u542b\u4e49\u5982\u4e0b\u3002 -d \uff1a\u5bb9\u5668\u542f\u52a8\u540e\uff0c\u5728\u540e\u53f0\u8fd0\u884c\u3002 --rm \uff1a\u5bb9\u5668\u7ec8\u6b62\u8fd0\u884c\u540e\uff0c\u81ea\u52a8\u5220\u9664\u5bb9\u5668\u6587\u4ef6\u3002 --name wordpressdb \uff1a\u5bb9\u5668\u7684\u540d\u5b57\u53eb\u505a wordpressdb --env MYSQL_ROOT_PASSWORD=123456 \uff1a\u5411\u5bb9\u5668\u8fdb\u7a0b\u4f20\u5165\u4e00\u4e2a\u73af\u5883\u53d8\u91cf MYSQL_ROOT_PASSWORD \uff0c\u8be5\u53d8\u91cf\u4f1a\u88ab\u7528\u4f5c MySQL \u7684\u6839\u5bc6\u7801\u3002 --env MYSQL_DATABASE=wordpress \uff1a\u5411\u5bb9\u5668\u8fdb\u7a0b\u4f20\u5165\u4e00\u4e2a\u73af\u5883\u53d8\u91cf MYSQL_DATABASE \uff0c\u5bb9\u5668\u91cc\u9762\u7684 MySQL \u4f1a\u6839\u636e\u8be5\u53d8\u91cf\u521b\u5efa\u4e00\u4e2a\u540c\u540d\u6570\u636e\u5e93\uff08\u672c\u4f8b\u662f WordPress \uff09\u3002 \u8fd0\u884c\u4e0a\u9762\u7684\u547d\u4ee4\u4ee5\u540e\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u547d\u4ee4\u884c\u4f1a\u663e\u793a\u4e00\u884c\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f\u5bb9\u5668\u7684 ID\uff0c\u8868\u793a\u5df2\u7ecf\u65b0\u5efa\u6210\u529f\u4e86\u3002 \u8fd9\u65f6\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u4f60\u5e94\u8be5\u770b\u5230 wordpress \u548c wordpressdb \u4e24\u4e2a\u5bb9\u5668\u6b63\u5728\u8fd0\u884c\u3002 $ docker container ls \u5176\u4e2d\uff0c wordpressdb \u662f\u540e\u53f0\u8fd0\u884c\u7684\uff0c\u524d\u53f0\u770b\u4e0d\u89c1\u5b83\u7684\u8f93\u51fa\uff0c\u5fc5\u987b\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u3002 $ docker container logs wordpressdb","title":"2.3 \u5b98\u65b9\u7684 MySQL \u5bb9\u5668"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#24-php","text":"\u73b0\u5728 WordPress \u5bb9\u5668\u548c MySQL \u5bb9\u5668\u90fd\u5df2\u7ecf\u6709\u4e86\u3002\u63a5\u4e0b\u6765\uff0c\u8981\u628a WordPress \u5bb9\u5668\u8fde\u63a5\u5230 MySQL \u5bb9\u5668\u4e86\u3002\u4f46\u662f\uff0cPHP \u7684\u5b98\u65b9 image \u4e0d\u5e26\u6709 mysql \u6269\u5c55\uff0c\u5fc5\u987b\u81ea\u5df1\u65b0\u5efa image \u6587\u4ef6\u3002 \u9996\u5148\uff0c\u505c\u6389 WordPress \u5bb9\u5668\u3002 $ docker container stop wordpress \u505c\u6389\u4ee5\u540e\uff0c\u7531\u4e8e --rm \u53c2\u6570\u7684\u4f5c\u7528\uff0c\u8be5\u5bb9\u5668\u6587\u4ef6\u4f1a\u88ab\u81ea\u52a8\u5220\u9664\u3002 \u7136\u540e\uff0c\u5728 docker-demo \u76ee\u5f55\u91cc\u9762\uff0c\u65b0\u5efa\u4e00\u4e2a Dockerfile \u6587\u4ef6\uff0c\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 FROM php:5.6-apache RUN docker-php-ext-install mysqli CMD apache2-foreground \u4e0a\u9762\u4ee3\u7801\u7684\u610f\u601d\uff0c\u5c31\u662f\u5728\u539f\u6765 PHP \u7684 image \u57fa\u7840\u4e0a\uff0c\u5b89\u88c5 mysqli \u7684\u6269\u5c55\u3002\u7136\u540e\uff0c\u542f\u52a8 Apache\u3002 \u57fa\u4e8e\u8fd9\u4e2a Dockerfile \u6587\u4ef6\uff0c\u65b0\u5efa\u4e00\u4e2a\u540d\u4e3a phpwithmysql \u7684 image \u6587\u4ef6\u3002 $ docker build -t phpwithmysql .","title":"2.4 \u5b9a\u5236 PHP \u5bb9\u5668"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#25-wordpress-mysql","text":"\u73b0\u5728\u57fa\u4e8e phpwithmysql image\uff0c\u91cd\u65b0\u65b0\u5efa\u4e00\u4e2a WordPress \u5bb9\u5668\u3002 $ docker container run \\ --rm \\ --name wordpress \\ --volume \" $PWD /\" :/var/www/html \\ --link wordpressdb:mysql \\ phpwithmysql \u8ddf\u4e0a\u4e00\u6b21\u76f8\u6bd4\uff0c\u4e0a\u9762\u7684\u547d\u4ee4\u591a\u4e86\u4e00\u4e2a\u53c2\u6570 --link wordpressdb:mysql \uff0c\u8868\u793a WordPress \u5bb9\u5668\u8981\u8fde\u5230 wordpressdb \u5bb9\u5668\uff0c\u5192\u53f7\u8868\u793a\u8be5\u5bb9\u5668\u7684\u522b\u540d\u662f mysql \u3002 \u8fd9\u65f6\u8fd8\u8981\u6539\u4e00\u4e0b wordpress \u76ee\u5f55\u7684\u6743\u9650\uff0c\u8ba9\u5bb9\u5668\u53ef\u4ee5\u5c06\u914d\u7f6e\u4fe1\u606f\u5199\u5165\u8fd9\u4e2a\u76ee\u5f55\uff08\u5bb9\u5668\u5185\u90e8\u5199\u5165\u7684 /var/www/html \u76ee\u5f55\uff0c\u4f1a\u6620\u5c04\u5230\u8fd9\u4e2a\u76ee\u5f55\uff09\u3002 $ chmod -R 777 wordpress \u63a5\u7740\uff0c\u56de\u5230\u6d4f\u89c8\u5668\u7684 http://172.17.0.2/wordpress \u9875\u9762\uff0c\u70b9\u51fb\"\u73b0\u5728\u5c31\u5f00\u59cb\uff01\"\u6309\u94ae\uff0c\u5f00\u59cb\u5b89\u88c5\u3002 WordPress \u63d0\u793a\u8981\u8f93\u5165\u6570\u636e\u5e93\u53c2\u6570\u3002\u8f93\u5165\u7684\u53c2\u6570\u5982\u4e0b\u3002 \u6570\u636e\u5e93\u540d\uff1a wordpress \u7528\u6237\u540d\uff1a root \u5bc6\u7801\uff1a 123456 \u6570\u636e\u5e93\u4e3b\u673a\uff1a mysql \u8868\u524d\u7f00\uff1a wp_ \uff08\u4e0d\u53d8\uff09 \u70b9\u51fb\"\u4e0b\u4e00\u6b65\"\u6309\u94ae\uff0c\u5982\u679c Wordpress \u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff0c\u5c31\u4f1a\u51fa\u73b0\u4e0b\u9762\u7684\u9875\u9762\uff0c\u8fd9\u5c31\u8868\u793a\u53ef\u4ee5\u5b89\u88c5\u4e86\u3002 \u81f3\u6b64\uff0c\u81ea\u5efa WordPress \u5bb9\u5668\u7684\u6f14\u793a\u5b8c\u6bd5\uff0c\u53ef\u4ee5\u628a\u6b63\u5728\u8fd0\u884c\u7684\u4e24\u4e2a\u5bb9\u5668\u5173\u95ed\u4e86\uff08\u5bb9\u5668\u6587\u4ef6\u4f1a\u81ea\u52a8\u5220\u9664\uff09\u3002 $ docker container stop wordpress wordpressdb","title":"2.5 Wordpress \u5bb9\u5668\u8fde\u63a5 MySQL"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#bwordpress","text":"\u4e0a\u4e00\u90e8\u5206\u7684\u81ea\u5efa WordPress \u5bb9\u5668\uff0c\u8fd8\u662f\u633a\u9ebb\u70e6\u7684\u3002\u5176\u5b9e\u4e0d\u7528\u8fd9\u4e48\u9ebb\u70e6\uff0cDocker \u5df2\u7ecf\u63d0\u4f9b\u4e86\u5b98\u65b9 WordPress image\uff0c\u76f4\u63a5\u7528\u90a3\u4e2a\u5c31\u53ef\u4ee5\u4e86\u3002\u6709\u4e86\u4e0a\u4e00\u90e8\u5206\u7684\u57fa\u7840\uff0c\u4e0b\u9762\u7684\u64cd\u4f5c\u5c31\u5f88\u5bb9\u6613\u7406\u89e3\u4e86\u3002","title":"\u4e09\u3001\u65b9\u6cd5 B\uff1aWordpress \u5b98\u65b9\u955c\u50cf"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#31","text":"\u9996\u5148\uff0c\u65b0\u5efa\u5e76\u542f\u52a8 MySQL \u5bb9\u5668\u3002 $ docker container run \\ -d \\ --rm \\ --name wordpressdb \\ --env MYSQL_ROOT_PASSWORD = 123456 \\ --env MYSQL_DATABASE = wordpress \\ mysql:5.7 \u7136\u540e\uff0c\u57fa\u4e8e\u5b98\u65b9\u7684 WordPress image\uff0c\u65b0\u5efa\u5e76\u542f\u52a8 WordPress \u5bb9\u5668\u3002 $ docker container run \\ -d \\ --rm \\ --name wordpress \\ --env WORDPRESS_DB_PASSWORD = 123456 \\ --link wordpressdb:mysql \\ wordpress \u4e0a\u9762\u547d\u4ee4\u4e2d\uff0c\u5404\u4e2a\u53c2\u6570\u7684\u542b\u4e49\u524d\u9762\u90fd\u89e3\u91ca\u8fc7\u4e86\uff0c\u5176\u4e2d\u73af\u5883\u53d8\u91cf WORDPRESS_DB_PASSWORD \u662f MySQL \u5bb9\u5668\u7684\u6839\u5bc6\u7801\u3002 \u4e0a\u9762\u547d\u4ee4\u6307\u5b9a wordpress \u5bb9\u5668\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u5bfc\u81f4\u524d\u53f0\u770b\u4e0d\u89c1\u8f93\u51fa\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u51fa wordpress \u5bb9\u5668\u7684 IP \u5730\u5740\u3002 $ docker container inspect wordpress \u4e0a\u9762\u547d\u4ee4\u8fd0\u884c\u4ee5\u540e\uff0c\u4f1a\u8f93\u51fa\u5f88\u591a\u5185\u5bb9\uff0c\u627e\u5230 IPAddress \u5b57\u6bb5\u5373\u53ef\u3002\u6211\u7684\u673a\u5668\u8fd4\u56de\u7684 IP \u5730\u5740\u662f 172.17.0.3 \u3002 \u6d4f\u89c8\u5668\u8bbf\u95ee 172.17.0.3 \uff0c\u5c31\u4f1a\u770b\u5230 WordPress \u7684\u5b89\u88c5\u63d0\u793a\u3002","title":"3.1 \u57fa\u672c\u7528\u6cd5"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#32-wordpress","text":"\u5230\u4e86\u4e0a\u4e00\u6b65\uff0c\u5b98\u65b9 WordPress \u5bb9\u5668\u7684\u5b89\u88c5\u5c31\u5df2\u7ecf\u6210\u529f\u4e86\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6709\u4e24\u4e2a\u5f88\u4e0d\u65b9\u4fbf\u7684\u5730\u65b9\u3002 \u6bcf\u6b21\u65b0\u5efa\u5bb9\u5668\uff0c\u8fd4\u56de\u7684 IP \u5730\u5740\u4e0d\u80fd\u4fdd\u8bc1\u76f8\u540c\uff0c\u5bfc\u81f4\u8981\u66f4\u6362 IP \u5730\u5740\u8bbf\u95ee WordPress\u3002 WordPress \u5b89\u88c5\u5728\u5bb9\u5668\u91cc\u9762\uff0c\u672c\u5730\u65e0\u6cd5\u4fee\u6539\u6587\u4ef6\u3002 \u89e3\u51b3\u8fd9\u4e24\u4e2a\u95ee\u9898\u5f88\u5bb9\u6613\uff0c\u53ea\u8981\u65b0\u5efa\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u52a0\u4e24\u4e2a\u547d\u4ee4\u884c\u53c2\u6570\u5c31\u53ef\u4ee5\u4e86\u3002 \u5148\u628a\u521a\u624d\u542f\u52a8\u7684 WordPress \u5bb9\u5668\u7ec8\u6b62\uff08\u5bb9\u5668\u6587\u4ef6\u4f1a\u81ea\u52a8\u5220\u9664\uff09\u3002 $ docker container stop wordpress \u7136\u540e\uff0c\u4f7f\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u65b0\u5efa\u5e76\u542f\u52a8 WordPress \u5bb9\u5668\u3002 $ docker container run \\ -d \\ -p 127 .0.0.2:8080:80 \\ --rm \\ --name wordpress \\ --env WORDPRESS_DB_PASSWORD = 123456 \\ --link wordpressdb:mysql \\ --volume \" $PWD /wordpress\" :/var/www/html \\ wordpress \u4e0a\u9762\u7684\u547d\u4ee4\u8ddf\u524d\u9762\u76f8\u6bd4\uff0c\u547d\u4ee4\u884c\u53c2\u6570\u53ea\u591a\u51fa\u4e86\u4e24\u4e2a\u3002 -p 127.0.0.2:8080:80 \uff1a\u5c06\u5bb9\u5668\u7684 80 \u7aef\u53e3\u6620\u5c04\u5230 127.0.0.2 \u7684 8080 \u7aef\u53e3\u3002 --volume \"$PWD/wordpress\":/var/www/html \uff1a\u5c06\u5bb9\u5668\u7684 /var/www/html \u76ee\u5f55\u6620\u5c04\u5230\u5f53\u524d\u76ee\u5f55\u7684 wordpress \u5b50\u76ee\u5f55\u3002 \u6d4f\u89c8\u5668\u8bbf\u95ee 127.0.0.2:8080:80 \u5c31\u80fd\u770b\u5230 WordPress \u7684\u5b89\u88c5\u63d0\u793a\u4e86\u3002\u800c\u4e14\uff0c\u4f60\u5728 wordpress \u5b50\u76ee\u5f55\u4e0b\u7684\u6bcf\u6b21\u4fee\u6539\uff0c\u90fd\u4f1a\u53cd\u6620\u5230\u5bb9\u5668\u91cc\u9762\u3002 \u6700\u540e\uff0c\u7ec8\u6b62\u8fd9\u4e24\u4e2a\u5bb9\u5668\uff08\u5bb9\u5668\u6587\u4ef6\u4f1a\u81ea\u52a8\u5220\u9664\uff09\u3002 $ docker container stop wordpress wordpressdb","title":"3.2 WordPress \u5bb9\u5668\u7684\u5b9a\u5236"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#cdocker-compose","text":"\u4e0a\u9762\u7684\u65b9\u6cd5 B \u5df2\u7ecf\u633a\u7b80\u5355\u4e86\uff0c\u4f46\u662f\u5fc5\u987b\u81ea\u5df1\u5206\u522b\u542f\u52a8\u4e24\u4e2a\u5bb9\u5668\uff0c\u542f\u52a8\u7684\u65f6\u5019\uff0c\u8fd8\u8981\u5728\u547d\u4ee4\u884c\u63d0\u4f9b\u5bb9\u5668\u4e4b\u95f4\u7684\u8fde\u63a5\u4fe1\u606f\u3002\u56e0\u6b64\uff0cDocker \u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u6765\u7ba1\u7406\u591a\u4e2a\u5bb9\u5668\u7684\u8054\u52a8\u3002","title":"\u56db\u3001\u65b9\u6cd5 C\uff1aDocker Compose \u5de5\u5177"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#41-docker-compose","text":"Compose \u662f Docker \u516c\u53f8\u63a8\u51fa\u7684\u4e00\u4e2a\u5de5\u5177\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u7ba1\u7406\u591a\u4e2a Docker \u5bb9\u5668\u7ec4\u6210\u4e00\u4e2a\u5e94\u7528\u3002\u4f60\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a YAML \u683c\u5f0f\u7684\u914d\u7f6e\u6587\u4ef6 docker-compose.yml \uff0c\u5199\u597d\u591a\u4e2a\u5bb9\u5668\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u3002\u7136\u540e\uff0c\u53ea\u8981\u4e00\u4e2a\u547d\u4ee4\uff0c\u5c31\u80fd\u540c\u65f6\u542f\u52a8/\u5173\u95ed\u8fd9\u4e9b\u5bb9\u5668\u3002 # \u542f\u52a8\u6240\u6709\u670d\u52a1 $ docker-compose up # \u5173\u95ed\u6240\u6709\u670d\u52a1 $ docker-compose stop","title":"4.1 Docker Compose \u7b80\u4ecb"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#42-docker-compose","text":"Mac \u548c Windows \u5728\u5b89\u88c5 docker \u7684\u65f6\u5019\uff0c\u4f1a\u4e00\u8d77\u5b89\u88c5 docker compose\u3002Linux \u7cfb\u7edf\u4e0b\u7684\u5b89\u88c5\u53c2\u8003 \u5b98\u65b9\u6587\u6863 \u3002 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker-compose --version","title":"4.2 Docker Compose \u7684\u5b89\u88c5"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#43-wordpress","text":"\u5728 docker-demo \u76ee\u5f55\u4e0b\uff0c\u65b0\u5efa docker-compose.yml \u6587\u4ef6\uff0c\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 mysql: image: mysql:5.7 environment: - MYSQL_ROOT_PASSWORD = 123456 - MYSQL_DATABASE = wordpress web: image: wordpress links: - mysql environment: - WORDPRESS_DB_PASSWORD = 123456 ports: - \"127.0.0.3:8080:80\" working_dir: /var/www/html volumes: - wordpress:/var/www/html \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u4e24\u4e2a\u9876\u5c42\u6807\u7b7e\u8868\u793a\u6709\u4e24\u4e2a\u5bb9\u5668 mysql \u548c web \u3002\u6bcf\u4e2a\u5bb9\u5668\u7684\u5177\u4f53\u8bbe\u7f6e\uff0c\u524d\u9762\u90fd\u5df2\u7ecf\u8bb2\u89e3\u8fc7\u4e86\uff0c\u8fd8\u662f\u633a\u5bb9\u6613\u7406\u89e3\u7684\u3002 \u542f\u52a8\u4e24\u4e2a\u5bb9\u5668\u3002 $ docker-compose up \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.3:8080 \uff0c\u5e94\u8be5\u5c31\u80fd\u770b\u5230 WordPress \u7684\u5b89\u88c5\u754c\u9762\u3002 \u73b0\u5728\u5173\u95ed\u4e24\u4e2a\u5bb9\u5668\u3002 $ docker-compose stop \u5173\u95ed\u4ee5\u540e\uff0c\u8fd9\u4e24\u4e2a\u5bb9\u5668\u6587\u4ef6\u8fd8\u662f\u5b58\u5728\u7684\uff0c\u5199\u5728\u91cc\u9762\u7684\u6570\u636e\u4e0d\u4f1a\u4e22\u5931\u3002\u4e0b\u6b21\u542f\u52a8\u7684\u65f6\u5019\uff0c\u8fd8\u53ef\u4ee5\u590d\u7528\u3002\u4e0b\u9762\u7684\u547d\u4ee4\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u5bb9\u5668\u6587\u4ef6\u5220\u9664\uff08\u5bb9\u5668\u5fc5\u987b\u5df2\u7ecf\u505c\u6b62\u8fd0\u884c\uff09\u3002 $ docker-compose rm","title":"4.3 WordPress \u793a\u4f8b"},{"location":"03-docker/02%20Docker%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B-%E9%98%AE%E4%B8%80%E5%B3%B0/#_1","text":"How to Manually Build Docker Containers for WordPress , by Aleksander Koko How to Use the Official Docker WordPress Image , by Aleksander Koko Deploying WordPress with Docker , by Aleksander Koko \uff08\u5b8c\uff09","title":"\u4e94\u3001\u53c2\u8003\u94fe\u63a5"},{"location":"03-docker/03%20Docker%20%E5%8D%A0%E7%94%A8%E5%86%85%E5%AD%98%E5%A4%AA%E5%A4%A7%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/","text":"Docker \u5360\u7528\u5185\u5b58\u592a\u5927\u7684\u89e3\u51b3\u65b9\u6cd5 \u00b6 Docker \u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u5bb9\u5668\u5316\u6280\u672f\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u3001\u8fd0\u884c\u548c\u7ba1\u7406\u5bb9\u5668\u6765\u5b9e\u73b0\u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5bb9\u5668\u5316\u7684\u7279\u6027\uff0c\u6709\u65f6\u5019 Docker \u53ef\u80fd\u4f1a\u5360\u7528\u8fc7\u591a\u7684\u5185\u5b58\u8d44\u6e90\u3002\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u8bbe\u7f6e docker \u5bb9\u5668\u5360\u7528\u7684\u5185\u5b58\u8d44\u6e90\u3002 \u89e3\u51b3\u65b9\u6cd5 \u00b6 \u4e0b\u9762\u662f\u89e3\u51b3 Docker \u5360\u7528\u5185\u5b58\u8fc7\u5927\u95ee\u9898\u7684\u6b65\u9aa4\u6982\u8ff0\uff1a \u6b65\u9aa4 1\uff1a\u67e5\u770b Docker \u5bb9\u5668\u7684\u5185\u5b58\u5360\u7528\u60c5\u51b5 \u00b6 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3 Docker \u5bb9\u5668\u5f53\u524d\u7684\u5185\u5b58\u5360\u7528\u60c5\u51b5\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u67e5\u770b\u5bb9\u5668\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff1a docker stats <\u5bb9\u5668\u540d\u79f0\u6216 ID> \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5b9e\u65f6\u663e\u793a\u5bb9\u5668\u7684 CPU\u3001\u5185\u5b58\u3001\u7f51\u7edc\u548c\u78c1\u76d8\u7b49\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\u3002\u901a\u8fc7\u89c2\u5bdf\u5185\u5b58\u5360\u7528\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u662f\u5426\u5b58\u5728\u5185\u5b58\u5360\u7528\u8fc7\u5927\u7684\u95ee\u9898\u3002 \u6b65\u9aa4 2\uff1a\u4f18\u5316 Docker \u5bb9\u5668\u7684\u5185\u5b58\u4f7f\u7528 \u00b6 \u5982\u679c\u53d1\u73b0 Docker \u5bb9\u5668\u7684\u5185\u5b58\u5360\u7528\u8fc7\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u4ee5\u4e0b\u51e0\u4e2a\u63aa\u65bd\u6765\u4f18\u5316\u5185\u5b58\u4f7f\u7528\uff1a \u51cf\u5c11\u5bb9\u5668\u7684\u5185\u5b58\u9650\u5236\uff1a\u901a\u8fc7\u8bbe\u7f6e\u5bb9\u5668\u7684\u5185\u5b58\u9650\u5236\uff0c\u53ef\u4ee5\u9650\u5236\u5bb9\u5668\u53ef\u4f7f\u7528\u7684\u5185\u5b58\u8d44\u6e90\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u8bbe\u7f6e\u5bb9\u5668\u7684\u5185\u5b58\u9650\u5236\uff1a docker update --memory <\u5185\u5b58\u9650\u5236> <\u5bb9\u5668\u540d\u79f0\u6216 ID> \u5176\u4e2d <\u5185\u5b58\u9650\u5236> \u53ef\u4ee5\u662f\u4e00\u4e2a\u6574\u6570\u503c\uff0c\u8868\u793a\u5185\u5b58\u7684\u5927\u5c0f\u3002\u4f8b\u5982\uff0c--memory 512m \u8868\u793a\u5c06\u5bb9\u5668\u7684\u5185\u5b58\u9650\u5236\u8bbe\u7f6e\u4e3a 512MB\u3002\u901a\u8fc7\u9002\u5f53\u8bbe\u7f6e\u5185\u5b58\u9650\u5236\uff0c\u53ef\u4ee5\u907f\u514d\u5bb9\u5668\u5360\u7528\u8fc7\u591a\u7684\u5185\u5b58\u3002 \u4f18\u5316\u5bb9\u5668\u7684\u5e94\u7528\u7a0b\u5e8f\uff1a\u6709\u65f6\u5019\u5bb9\u5668\u5185\u90e8\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u5b58\u5728\u5185\u5b58\u6cc4\u6f0f\u6216\u8005\u8d44\u6e90\u6d6a\u8d39\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5bf9\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u4f18\u5316\uff0c\u51cf\u5c11\u5185\u5b58\u7684\u5360\u7528\u3002\u5177\u4f53\u7684\u4f18\u5316\u65b9\u6cd5\u56e0\u5e94\u7528\u7a0b\u5e8f\u800c\u5f02\uff0c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u8c03\u6574\u3002 \u6b65\u9aa4 3\uff1a\u91cd\u542f Docker \u5bb9\u5668 \u00b6 \u5b8c\u6210\u4ee5\u4e0a\u4f18\u5316\u64cd\u4f5c\u540e\uff0c\u9700\u8981\u91cd\u542f Docker \u5bb9\u5668\u4f7f\u5176\u751f\u6548\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u91cd\u542f\u5bb9\u5668\uff1a docker restart <\u5bb9\u5668\u540d\u79f0\u6216 ID> \u6b65\u9aa4 4\uff1a\u9a8c\u8bc1\u5185\u5b58\u5360\u7528\u662f\u5426\u51cf\u5c11 \u00b6 \u5b8c\u6210\u4f18\u5316\u548c\u91cd\u542f\u540e\uff0c\u6211\u4eec\u9700\u8981\u518d\u6b21\u67e5\u770b\u5bb9\u5668\u7684\u5185\u5b58\u5360\u7528\u60c5\u51b5\uff0c\u4ee5\u9a8c\u8bc1\u4f18\u5316\u662f\u5426\u751f\u6548\u3002\u53ef\u4ee5\u4f7f\u7528\u6b65\u9aa4 1 \u4e2d\u4ecb\u7ecd\u7684\u547d\u4ee4\u6765\u67e5\u770b\u5bb9\u5668\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u3002 \u5982\u679c\u5185\u5b58\u5360\u7528\u660e\u663e\u51cf\u5c11\uff0c\u8bf4\u660e\u6211\u4eec\u7684\u4f18\u5316\u63aa\u65bd\u6210\u529f\u3002\u5982\u679c\u6ca1\u6709\u660e\u663e\u6539\u5584\uff0c\u53ef\u4ee5\u8003\u8651\u8fdb\u4e00\u6b65\u8c03\u6574\u5bb9\u5668\u7684\u5185\u5b58\u9650\u5236\u6216\u8005\u4f18\u5316\u5e94\u7528\u7a0b\u5e8f\u3002","title":"03 Docker \u5360\u7528\u5185\u5b58\u592a\u5927\u7684\u89e3\u51b3\u65b9\u6cd5"},{"location":"03-docker/03%20Docker%20%E5%8D%A0%E7%94%A8%E5%86%85%E5%AD%98%E5%A4%AA%E5%A4%A7%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/#docker","text":"Docker \u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u5bb9\u5668\u5316\u6280\u672f\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u3001\u8fd0\u884c\u548c\u7ba1\u7406\u5bb9\u5668\u6765\u5b9e\u73b0\u5e94\u7528\u7a0b\u5e8f\u7684\u90e8\u7f72\u3002\u7136\u800c\uff0c\u7531\u4e8e\u5bb9\u5668\u5316\u7684\u7279\u6027\uff0c\u6709\u65f6\u5019 Docker \u53ef\u80fd\u4f1a\u5360\u7528\u8fc7\u591a\u7684\u5185\u5b58\u8d44\u6e90\u3002\u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u8bbe\u7f6e docker \u5bb9\u5668\u5360\u7528\u7684\u5185\u5b58\u8d44\u6e90\u3002","title":"Docker \u5360\u7528\u5185\u5b58\u592a\u5927\u7684\u89e3\u51b3\u65b9\u6cd5"},{"location":"03-docker/03%20Docker%20%E5%8D%A0%E7%94%A8%E5%86%85%E5%AD%98%E5%A4%AA%E5%A4%A7%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/#_1","text":"\u4e0b\u9762\u662f\u89e3\u51b3 Docker \u5360\u7528\u5185\u5b58\u8fc7\u5927\u95ee\u9898\u7684\u6b65\u9aa4\u6982\u8ff0\uff1a","title":"\u89e3\u51b3\u65b9\u6cd5"},{"location":"03-docker/03%20Docker%20%E5%8D%A0%E7%94%A8%E5%86%85%E5%AD%98%E5%A4%AA%E5%A4%A7%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/#1-docker","text":"\u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3 Docker \u5bb9\u5668\u5f53\u524d\u7684\u5185\u5b58\u5360\u7528\u60c5\u51b5\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u67e5\u770b\u5bb9\u5668\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff1a docker stats <\u5bb9\u5668\u540d\u79f0\u6216 ID> \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5b9e\u65f6\u663e\u793a\u5bb9\u5668\u7684 CPU\u3001\u5185\u5b58\u3001\u7f51\u7edc\u548c\u78c1\u76d8\u7b49\u8d44\u6e90\u7684\u4f7f\u7528\u60c5\u51b5\u3002\u901a\u8fc7\u89c2\u5bdf\u5185\u5b58\u5360\u7528\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u786e\u5b9a\u662f\u5426\u5b58\u5728\u5185\u5b58\u5360\u7528\u8fc7\u5927\u7684\u95ee\u9898\u3002","title":"\u6b65\u9aa4 1\uff1a\u67e5\u770b Docker \u5bb9\u5668\u7684\u5185\u5b58\u5360\u7528\u60c5\u51b5"},{"location":"03-docker/03%20Docker%20%E5%8D%A0%E7%94%A8%E5%86%85%E5%AD%98%E5%A4%AA%E5%A4%A7%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/#2-docker","text":"\u5982\u679c\u53d1\u73b0 Docker \u5bb9\u5668\u7684\u5185\u5b58\u5360\u7528\u8fc7\u5927\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u53d6\u4ee5\u4e0b\u51e0\u4e2a\u63aa\u65bd\u6765\u4f18\u5316\u5185\u5b58\u4f7f\u7528\uff1a \u51cf\u5c11\u5bb9\u5668\u7684\u5185\u5b58\u9650\u5236\uff1a\u901a\u8fc7\u8bbe\u7f6e\u5bb9\u5668\u7684\u5185\u5b58\u9650\u5236\uff0c\u53ef\u4ee5\u9650\u5236\u5bb9\u5668\u53ef\u4f7f\u7528\u7684\u5185\u5b58\u8d44\u6e90\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u8bbe\u7f6e\u5bb9\u5668\u7684\u5185\u5b58\u9650\u5236\uff1a docker update --memory <\u5185\u5b58\u9650\u5236> <\u5bb9\u5668\u540d\u79f0\u6216 ID> \u5176\u4e2d <\u5185\u5b58\u9650\u5236> \u53ef\u4ee5\u662f\u4e00\u4e2a\u6574\u6570\u503c\uff0c\u8868\u793a\u5185\u5b58\u7684\u5927\u5c0f\u3002\u4f8b\u5982\uff0c--memory 512m \u8868\u793a\u5c06\u5bb9\u5668\u7684\u5185\u5b58\u9650\u5236\u8bbe\u7f6e\u4e3a 512MB\u3002\u901a\u8fc7\u9002\u5f53\u8bbe\u7f6e\u5185\u5b58\u9650\u5236\uff0c\u53ef\u4ee5\u907f\u514d\u5bb9\u5668\u5360\u7528\u8fc7\u591a\u7684\u5185\u5b58\u3002 \u4f18\u5316\u5bb9\u5668\u7684\u5e94\u7528\u7a0b\u5e8f\uff1a\u6709\u65f6\u5019\u5bb9\u5668\u5185\u90e8\u7684\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u5b58\u5728\u5185\u5b58\u6cc4\u6f0f\u6216\u8005\u8d44\u6e90\u6d6a\u8d39\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u5bf9\u5e94\u7528\u7a0b\u5e8f\u8fdb\u884c\u4f18\u5316\uff0c\u51cf\u5c11\u5185\u5b58\u7684\u5360\u7528\u3002\u5177\u4f53\u7684\u4f18\u5316\u65b9\u6cd5\u56e0\u5e94\u7528\u7a0b\u5e8f\u800c\u5f02\uff0c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u8fdb\u884c\u8c03\u6574\u3002","title":"\u6b65\u9aa4 2\uff1a\u4f18\u5316 Docker \u5bb9\u5668\u7684\u5185\u5b58\u4f7f\u7528"},{"location":"03-docker/03%20Docker%20%E5%8D%A0%E7%94%A8%E5%86%85%E5%AD%98%E5%A4%AA%E5%A4%A7%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/#3-docker","text":"\u5b8c\u6210\u4ee5\u4e0a\u4f18\u5316\u64cd\u4f5c\u540e\uff0c\u9700\u8981\u91cd\u542f Docker \u5bb9\u5668\u4f7f\u5176\u751f\u6548\u3002\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u91cd\u542f\u5bb9\u5668\uff1a docker restart <\u5bb9\u5668\u540d\u79f0\u6216 ID>","title":"\u6b65\u9aa4 3\uff1a\u91cd\u542f Docker \u5bb9\u5668"},{"location":"03-docker/03%20Docker%20%E5%8D%A0%E7%94%A8%E5%86%85%E5%AD%98%E5%A4%AA%E5%A4%A7%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/#4","text":"\u5b8c\u6210\u4f18\u5316\u548c\u91cd\u542f\u540e\uff0c\u6211\u4eec\u9700\u8981\u518d\u6b21\u67e5\u770b\u5bb9\u5668\u7684\u5185\u5b58\u5360\u7528\u60c5\u51b5\uff0c\u4ee5\u9a8c\u8bc1\u4f18\u5316\u662f\u5426\u751f\u6548\u3002\u53ef\u4ee5\u4f7f\u7528\u6b65\u9aa4 1 \u4e2d\u4ecb\u7ecd\u7684\u547d\u4ee4\u6765\u67e5\u770b\u5bb9\u5668\u7684\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u3002 \u5982\u679c\u5185\u5b58\u5360\u7528\u660e\u663e\u51cf\u5c11\uff0c\u8bf4\u660e\u6211\u4eec\u7684\u4f18\u5316\u63aa\u65bd\u6210\u529f\u3002\u5982\u679c\u6ca1\u6709\u660e\u663e\u6539\u5584\uff0c\u53ef\u4ee5\u8003\u8651\u8fdb\u4e00\u6b65\u8c03\u6574\u5bb9\u5668\u7684\u5185\u5b58\u9650\u5236\u6216\u8005\u4f18\u5316\u5e94\u7528\u7a0b\u5e8f\u3002","title":"\u6b65\u9aa4 4\uff1a\u9a8c\u8bc1\u5185\u5b58\u5360\u7528\u662f\u5426\u51cf\u5c11"},{"location":"03-docker/04%20Docker%E7%AC%94%E8%AE%B0/","text":"Docker basic \u00b6 \u53c2\u8003\u94fe\u63a5\uff1a https://www.runoob.com/docker/docker-tutorial.html Docker \u7528\u9014 \u00b6 \u5c06\u5e94\u7528\u548c\u4f9d\u8d56\u73af\u5883\u6253\u5305\u5230\u4e00\u4e2a\u5bb9\u5668\u4e2d\uff08\u4f7f\u7528\u76f4\u63a5\u62c9\u53d6\u955c\u50cf\uff0c\u4e0d\u9700\u8981\u8003\u8651\u4f9d\u8d56\u5b89\u88c5\u517c\u5bb9\u6027\u7b49\u95ee\u9898\uff09\u652f\u6301\u81ea\u52a8\u5316\u6d4b\u8bd5\u53d1\u5e03\u7b49\u3002 \u4e3b\u8981\u540e\u7aef\u548c\u8fd0\u7ef4\u4f7f\u7528\uff0c\u524d\u7aef\u7b80\u5355\u4e86\u89e3\u4f7f\u7528\u65b9\u6cd5\u3002 \u9700\u8981\u61c2\u57fa\u7840\u7684 linux \u547d\u4ee4\u64cd\u4f5c \u57fa\u672c\u6982\u5ff5 \u00b6 \u955c\u50cf image \u5bf9\u5e94\u7c7b \u5bb9\u5668 container \u5bf9\u5e94\u7c7b\u7684\u5b9e\u4f8b \u5148\u83b7\u53d6\u955c\u50cf\uff0c\u7136\u540e\u521b\u5efa\u5bb9\u5668\uff0c\u7136\u540e\u8fdb\u5165\u5bb9\u5668\u8fdb\u884c\u64cd\u4f5c MAC \u5b89\u88c5 \u00b6 \u672c\u5730\u5df2\u7ecf\u5b89\u88c5\uff08\u652f\u6301 brew \u6216\u8005\u5b89\u88c5\u5305\u5b89\u88c5\uff09 https://www.runoob.com/docker/macos-docker-install.html \u53ef\u4ee5\u66f4\u6539\u56fd\u5185\u7684\u955c\u50cf\u5730\u5740\uff0c\u5b89\u88c5\u955c\u50cf\u901f\u5ea6\u66f4\u5feb\uff08 http://hub-mirror.c.163.com \uff09","title":"04 Docker\u7b14\u8bb0"},{"location":"03-docker/04%20Docker%E7%AC%94%E8%AE%B0/#docker-basic","text":"\u53c2\u8003\u94fe\u63a5\uff1a https://www.runoob.com/docker/docker-tutorial.html","title":"Docker basic"},{"location":"03-docker/04%20Docker%E7%AC%94%E8%AE%B0/#docker","text":"\u5c06\u5e94\u7528\u548c\u4f9d\u8d56\u73af\u5883\u6253\u5305\u5230\u4e00\u4e2a\u5bb9\u5668\u4e2d\uff08\u4f7f\u7528\u76f4\u63a5\u62c9\u53d6\u955c\u50cf\uff0c\u4e0d\u9700\u8981\u8003\u8651\u4f9d\u8d56\u5b89\u88c5\u517c\u5bb9\u6027\u7b49\u95ee\u9898\uff09\u652f\u6301\u81ea\u52a8\u5316\u6d4b\u8bd5\u53d1\u5e03\u7b49\u3002 \u4e3b\u8981\u540e\u7aef\u548c\u8fd0\u7ef4\u4f7f\u7528\uff0c\u524d\u7aef\u7b80\u5355\u4e86\u89e3\u4f7f\u7528\u65b9\u6cd5\u3002 \u9700\u8981\u61c2\u57fa\u7840\u7684 linux \u547d\u4ee4\u64cd\u4f5c","title":"Docker \u7528\u9014"},{"location":"03-docker/04%20Docker%E7%AC%94%E8%AE%B0/#_1","text":"\u955c\u50cf image \u5bf9\u5e94\u7c7b \u5bb9\u5668 container \u5bf9\u5e94\u7c7b\u7684\u5b9e\u4f8b \u5148\u83b7\u53d6\u955c\u50cf\uff0c\u7136\u540e\u521b\u5efa\u5bb9\u5668\uff0c\u7136\u540e\u8fdb\u5165\u5bb9\u5668\u8fdb\u884c\u64cd\u4f5c","title":"\u57fa\u672c\u6982\u5ff5"},{"location":"03-docker/04%20Docker%E7%AC%94%E8%AE%B0/#mac","text":"\u672c\u5730\u5df2\u7ecf\u5b89\u88c5\uff08\u652f\u6301 brew \u6216\u8005\u5b89\u88c5\u5305\u5b89\u88c5\uff09 https://www.runoob.com/docker/macos-docker-install.html \u53ef\u4ee5\u66f4\u6539\u56fd\u5185\u7684\u955c\u50cf\u5730\u5740\uff0c\u5b89\u88c5\u955c\u50cf\u901f\u5ea6\u66f4\u5feb\uff08 http://hub-mirror.c.163.com \uff09","title":"MAC \u5b89\u88c5"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/","text":"Docker \u5165\u95e8 \u00b6 http://www.docker.org.cn/book/docker/ Docker \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5f15\u64ce\uff0c\u53ef\u4ee5\u8f7b\u677e\u7684\u4e3a\u4efb\u4f55\u5e94\u7528\u521b\u5efa\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u3001\u53ef\u79fb\u690d\u7684\u3001\u81ea\u7ed9\u81ea\u8db3\u7684\u5bb9\u5668\u3002\u5f00\u53d1\u8005\u5728\u7b14\u8bb0\u672c\u4e0a\u7f16\u8bd1\u6d4b\u8bd5\u901a\u8fc7\u7684\u5bb9\u5668\u53ef\u4ee5\u6279\u91cf\u5730\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u90e8\u7f72\uff0c\u5305\u62ec VMs\uff08\u865a\u62df\u673a\uff09\u3001 bare metal \u3001OpenStack \u96c6\u7fa4\u548c\u5176\u4ed6\u7684\u57fa\u7840\u5e94\u7528\u5e73\u53f0\u3002 Docker \u901a\u5e38\u7528\u4e8e\u5982\u4e0b\u573a\u666f\uff1a \u00b6 web \u5e94\u7528\u7684\u81ea\u52a8\u5316\u6253\u5305\u548c\u53d1\u5e03\uff1b \u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u6301\u7eed\u96c6\u6210\u3001\u53d1\u5e03\uff1b \u5728\u670d\u52a1\u578b\u73af\u5883\u4e2d\u90e8\u7f72\u548c\u8c03\u6574\u6570\u636e\u5e93\u6216\u5176\u4ed6\u7684\u540e\u53f0\u5e94\u7528\uff1b \u4ece\u5934\u7f16\u8bd1\u6216\u8005\u6269\u5c55\u73b0\u6709\u7684 OpenShift \u6216 Cloud Foundry \u5e73\u53f0\u6765\u642d\u5efa\u81ea\u5df1\u7684 PaaS \u73af\u5883\u3002 \u51c6\u5907\u5f00\u59cb \u00b6 Docker \u7cfb\u7edf\u6709\u4e24\u4e2a\u7a0b\u5e8f\uff1adocker \u670d\u52a1\u7aef\u548c docker \u5ba2\u6237\u7aef\u3002\u5176\u4e2d docker \u670d\u52a1\u7aef\u662f\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\uff0c\u7ba1\u7406\u7740\u6240\u6709\u7684\u5bb9\u5668\u3002docker \u5ba2\u6237\u7aef\u5219\u626e\u6f14\u7740 docker \u670d\u52a1\u7aef\u7684\u8fdc\u7a0b\u63a7\u5236\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u63a7\u5236 docker \u7684\u670d\u52a1\u7aef\u8fdb\u7a0b\u3002\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0cdocker \u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u8fd0\u884c\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u3002 Docker \u662f\u4e00\u4e2a\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u8fd0\u884c\u5728\u4e0d\u540c OS \u4e2d\u3002 \u76ee\u6807\uff1a \u00b6 \u68c0\u67e5 docker \u7684\u7248\u672c\uff0c\u8fd9\u6837\u53ef\u4ee5\u7528\u6765\u786e\u8ba4 docker \u670d\u52a1\u5728\u8fd0\u884c\u5e76\u53ef\u901a\u8fc7\u5ba2\u6237\u7aef\u94fe\u63a5\u3002 \u63d0\u793a\uff1a \u00b6 \u53ef\u4ee5\u901a\u8fc7\u5728\u7ec8\u7aef\u8f93\u5165 docker \u547d\u4ee4\u6765\u67e5\u770b\u6240\u6709\u7684\u53c2\u6570\u3002 \u5b98\u7f51\u7684\u5728\u7ebf\u6a21\u62df\u5668\u53ea\u63d0\u4f9b\u4e86\u6709\u9650\u7684\u547d\u4ee4\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u6240\u6709\u7684\u547d\u4ee4\u53ef\u4ee5\u6b63\u786e\u6267\u884c\u3002 \u6b63\u786e\u7684\u547d\u4ee4\uff1a \u00b6 docker version \u641c\u7d22\u53ef\u7528\u7684 docker \u955c\u50cf \u00b6 \u4f7f\u7528 docker \u6700\u7b80\u5355\u7684\u65b9\u5f0f\u83ab\u8fc7\u4e8e\u4ece\u73b0\u6709\u7684\u5bb9\u5668\u955c\u50cf\u5f00\u59cb\u3002Docker \u5b98\u65b9\u7f51\u7ad9\u4e13\u95e8\u6709\u4e00\u4e2a\u9875\u9762\u6765\u5b58\u50a8\u6240\u6709\u53ef\u7528\u7684\u955c\u50cf\uff0c\u7f51\u5740\u662f\uff1a index.docker.io \u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u8fd9\u4e2a\u7f51\u9875\u6765\u67e5\u627e\u4f60\u60f3\u8981\u4f7f\u7528\u7684\u955c\u50cf\uff0c\u6216\u8005\u4f7f\u7528\u547d\u4ee4\u884c\u7684\u5de5\u5177\u6765\u68c0\u7d22\u3002 \u76ee\u6807\uff1a \u00b6 \u5b66\u4f1a\u4f7f\u7528\u547d\u4ee4\u884c\u7684\u5de5\u5177\u6765\u68c0\u7d22\u540d\u5b57\u53eb\u505a tutorial \u7684\u955c\u50cf\u3002 \u63d0\u793a\uff1a \u00b6 \u547d\u4ee4\u884c\u7684\u683c\u5f0f\u4e3a\uff1adocker search \u955c\u50cf\u540d\u5b57 \u6b63\u786e\u7684\u547d\u4ee4\uff1a \u00b6 $ docker search tutorial \u5b66\u4f1a\u4f7f\u7528 docker \u547d\u4ee4\u6765\u4e0b\u8f7d\u955c\u50cf \u00b6 \u4e0b\u8f7d\u955c\u50cf\u7684\u547d\u4ee4\u975e\u5e38\u7b80\u5355\uff0c\u4f7f\u7528 docker pull \u547d\u4ee4\u5373\u53ef\u3002(\u8bd1\u8005\u6309\uff1adocker \u547d\u4ee4\u548c git \u6709\u4e00\u4e9b\u7c7b\u4f3c\u7684\u5730\u65b9\uff09\u3002\u5728 docker \u7684\u955c\u50cf\u7d22\u5f15\u7f51\u7ad9\u4e0a\u9762\uff0c\u955c\u50cf\u90fd\u662f\u6309\u7167**\u7528\u6237\u540d/****\u955c\u50cf\u540d**\u7684\u65b9\u5f0f\u6765\u5b58\u50a8\u7684\u3002\u6709\u4e00\u7ec4\u6bd4\u8f83\u7279\u6b8a\u7684\u955c\u50cf\uff0c\u6bd4\u5982 ubuntu \u8fd9\u7c7b\u57fa\u7840\u955c\u50cf\uff0c\u7ecf\u8fc7\u5b98\u65b9\u7684\u9a8c\u8bc1\uff0c\u503c\u5f97\u4fe1\u4efb\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528**\u955c\u50cf\u540d**\u6765\u68c0\u7d22\u5230\u3002 \u76ee\u6807\uff1a \u00b6 \u901a\u8fc7 docker \u547d\u4ee4\u4e0b\u8f7d tutorial \u955c\u50cf\u3002 \u63d0\u793a\uff1a \u00b6 \u6267\u884c pull \u547d\u4ee4\u7684\u65f6\u5019\u8981\u5199\u5b8c\u6574\u7684\u540d\u5b57\uff0c\u6bd4\u5982\"learn/tutorial\"\u3002 \u6b63\u786e\u7684\u547d\u4ee4\uff1a \u00b6 $ docker pull learn/tutorial \u5728 docker \u5bb9\u5668\u4e2d\u8fd0\u884c hello world! \u00b6 docker \u5bb9\u5668\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u6c99\u76d2\u4e2d\u8fd0\u884c\u7684\u8fdb\u7a0b\u3002\u8fd9\u4e2a\u6c99\u76d2\u5305\u542b\u4e86\u8be5\u8fdb\u7a0b\u8fd0\u884c\u6240\u5fc5\u987b\u7684\u8d44\u6e90\uff0c\u5305\u62ec\u6587\u4ef6\u7cfb\u7edf\u3001\u7cfb\u7edf\u7c7b\u5e93\u3001shell \u73af\u5883\u7b49\u7b49\u3002\u4f46\u8fd9\u4e2a\u6c99\u76d2\u9ed8\u8ba4\u662f\u4e0d\u4f1a\u8fd0\u884c\u4efb\u4f55\u7a0b\u5e8f\u7684\u3002\u4f60\u9700\u8981\u5728\u6c99\u76d2\u4e2d\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b\u6765\u542f\u52a8\u67d0\u4e00\u4e2a\u5bb9\u5668\u3002\u8fd9\u4e2a\u8fdb\u7a0b\u662f\u8be5\u5bb9\u5668\u7684\u552f\u4e00\u8fdb\u7a0b\uff0c\u6240\u4ee5\u5f53\u8be5\u8fdb\u7a0b\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u5bb9\u5668\u4e5f\u4f1a\u5b8c\u5168\u7684\u505c\u6b62\u3002 \u76ee\u6807\uff1a \u00b6 \u5728\u6211\u4eec\u521a\u521a\u4e0b\u8f7d\u7684\u955c\u50cf\u4e2d\u8f93\u51fa\"hello word\"\u3002\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e2a\u5bb9\u5668\u4e2d\u8fd0\u884c\"echo\"\u547d\u4ee4\uff0c\u8f93\u51fa\"hello word\"\u3002 \u63d0\u793a\uff1a \u00b6 docker run \u547d\u4ee4\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u955c\u50cf\u540d\uff0c\u4e00\u4e2a\u662f\u8981\u5728\u955c\u50cf\u4e2d\u8fd0\u884c\u7684\u547d\u4ee4\u3002 \u6b63\u786e\u7684\u547d\u4ee4\uff1a \u00b6 $ docker run learn/tutorial echo \"hello word\" \u5728\u5bb9\u5668\u4e2d\u5b89\u88c5\u65b0\u7684\u7a0b\u5e8f \u00b6 \u4e0b\u4e00\u6b65\u6211\u4eec\u8981\u505a\u7684\u4e8b\u60c5\u662f\u5728\u5bb9\u5668\u91cc\u9762\u5b89\u88c5\u4e00\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f(ping)\u3002\u6211\u4eec\u4e4b\u524d\u4e0b\u8f7d\u7684 tutorial \u955c\u50cf\u662f\u57fa\u4e8e ubuntu \u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u4f7f\u7528 ubuntu \u7684 apt-get \u547d\u4ee4\u6765\u5b89\u88c5 ping \u7a0b\u5e8f\uff1a apt-get install -y ping \u3002 \u5907\u6ce8\uff1aapt-get \u547d\u4ee4\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\uff0c\u5bb9\u5668\u5c31\u4f1a\u505c\u6b62\uff0c\u4f46\u5bf9\u5bb9\u5668\u7684\u6539\u52a8\u4e0d\u4f1a\u4e22\u5931\u3002 \u76ee\u6807\uff1a \u00b6 \u5728 learn/tutorial \u955c\u50cf\u91cc\u9762\u5b89\u88c5 ping \u7a0b\u5e8f\u3002 \u63d0\u793a\uff1a \u00b6 \u5728\u6267\u884c apt-get \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u8981\u5e26\u4e0a-y \u53c2\u6570\u3002\u5982\u679c\u4e0d\u6307\u5b9a-y \u53c2\u6570\u7684\u8bdd\uff0capt-get \u547d\u4ee4\u4f1a\u8fdb\u5165\u4ea4\u4e92\u6a21\u5f0f\uff0c\u9700\u8981\u7528\u6237\u8f93\u5165\u547d\u4ee4\u6765\u8fdb\u884c\u786e\u8ba4\uff0c\u4f46\u5728 docker \u73af\u5883\u4e2d\u662f\u65e0\u6cd5\u54cd\u5e94\u8fd9\u79cd\u4ea4\u4e92\u7684\u3002 \u6b63\u786e\u7684\u547d\u4ee4\uff1a \u00b6 $docker run learn/tutorial apt-get install -y ping \u4fdd\u5b58\u5bf9\u5bb9\u5668\u7684\u4fee\u6539 \u00b6 \u5f53\u4f60\u5bf9\u67d0\u4e00\u4e2a\u5bb9\u5668\u505a\u4e86\u4fee\u6539\u4e4b\u540e\uff08\u901a\u8fc7\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u67d0\u4e00\u4e2a\u547d\u4ee4\uff09\uff0c\u53ef\u4ee5\u628a\u5bf9\u5bb9\u5668\u7684\u4fee\u6539\u4fdd\u5b58\u4e0b\u6765\uff0c\u8fd9\u6837\u4e0b\u6b21\u53ef\u4ee5\u4ece\u4fdd\u5b58\u540e\u7684\u6700\u65b0\u72b6\u6001\u8fd0\u884c\u8be5\u5bb9\u5668\u3002docker \u4e2d\u4fdd\u5b58\u72b6\u6001\u7684\u8fc7\u7a0b\u79f0\u4e4b\u4e3a committing\uff0c\u5b83\u4fdd\u5b58\u7684\u65b0\u65e7\u72b6\u6001\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u4ece\u800c\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u7248\u672c\u3002 \u76ee\u6807\uff1a \u00b6 \u9996\u5148\u4f7f\u7528**docker ps -l**\u547d\u4ee4\u83b7\u5f97\u5b89\u88c5\u5b8c ping \u547d\u4ee4\u4e4b\u540e\u5bb9\u5668\u7684 id\u3002\u7136\u540e\u628a\u8fd9\u4e2a\u955c\u50cf\u4fdd\u5b58\u4e3a learn/ping\u3002 \u63d0\u793a\uff1a \u00b6 \\1. \u8fd0\u884c docker commit\uff0c\u53ef\u4ee5\u67e5\u770b\u8be5\u547d\u4ee4\u7684\u53c2\u6570\u5217\u8868\u3002 \\2. \u4f60\u9700\u8981\u6307\u5b9a\u8981\u63d0\u4ea4\u4fdd\u5b58\u5bb9\u5668\u7684 ID\u3002(\u8bd1\u8005\u6309\uff1a\u901a\u8fc7 docker ps -l \u547d\u4ee4\u83b7\u5f97) \\3. \u65e0\u9700\u62f7\u8d1d\u5b8c\u6574\u7684 id\uff0c\u901a\u5e38\u6765\u8bb2\u6700\u5f00\u59cb\u7684\u4e09\u81f3\u56db\u4e2a\u5b57\u6bcd\u5373\u53ef\u533a\u5206\u3002\uff08\u8bd1\u8005\u6309\uff1a\u975e\u5e38\u7c7b\u4f3c git \u91cc\u9762\u7684\u7248\u672c\u53f7) \u6b63\u786e\u7684\u547d\u4ee4\uff1a \u00b6 $ docker commit 698 learn/ping \u8fd0\u884c\u65b0\u7684\u955c\u50cf \u00b6 ok\uff0c\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u4f60\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u3001\u81ea\u6210\u4f53\u7cfb\u7684 docker \u73af\u5883\uff0c\u5e76\u4e14\u5b89\u88c5\u4e86 ping \u547d\u4ee4\u5728\u91cc\u9762\u3002\u5b83\u53ef\u4ee5\u5728\u4efb\u4f55\u652f\u6301 docker \u73af\u5883\u7684\u7cfb\u7edf\u4e2d\u8fd0\u884c\u5566\uff01(\u8bd1\u8005\u6309\uff1a\u662f\u4e0d\u662f\u5f88\u795e\u5947\u5462\uff1f)\u8ba9\u6211\u4eec\u6765\u4f53\u9a8c\u4e00\u4e0b\u5427\uff01 \u76ee\u6807\uff1a \u00b6 \u5728\u65b0\u7684\u955c\u50cf\u4e2d\u8fd0\u884c ping www.google.com\u547d\u4ee4 \u3002 \u63d0\u793a\uff1a \u00b6 \u4e00\u5b9a\u8981\u4f7f\u7528\u65b0\u7684\u955c\u50cf\u540d**learn/ping**\u6765\u8fd0\u884c ping \u547d\u4ee4\u3002(\u8bd1\u8005\u6309\uff1a\u6700\u5f00\u59cb\u4e0b\u8f7d\u7684 learn/tutorial \u955c\u50cf\u4e2d\u662f\u6ca1\u6709 ping \u547d\u4ee4\u7684) \u6b63\u786e\u7684\u547d\u4ee4\uff1a \u00b6 $docker run lean/ping ping www.google.com \u68c0\u67e5\u8fd0\u884c\u4e2d\u7684\u955c\u50cf \u00b6 \u73b0\u5728\u4f60\u5df2\u7ecf\u8fd0\u884c\u4e86\u4e00\u4e2a docker \u5bb9\u5668\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e0b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u3002 \u4f7f\u7528 docker ps \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u6b63\u5728\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u5217\u8868\uff0c\u4f7f\u7528 docker inspect \u547d\u4ee4\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u66f4\u8be6\u7ec6\u7684\u5173\u4e8e\u67d0\u4e00\u4e2a\u5bb9\u5668\u7684\u4fe1\u606f\u3002 \u76ee\u6807\uff1a \u00b6 \u67e5\u627e\u67d0\u4e00\u4e2a\u8fd0\u884c\u4e2d\u5bb9\u5668\u7684 id\uff0c\u7136\u540e\u4f7f\u7528 docker inspect \u547d\u4ee4\u67e5\u770b\u5bb9\u5668\u7684\u4fe1\u606f\u3002 \u63d0\u793a\uff1a \u00b6 \u53ef\u4ee5\u4f7f\u7528\u955c\u50cf id \u7684\u524d\u9762\u90e8\u5206\uff0c\u4e0d\u9700\u8981\u5b8c\u6574\u7684 id\u3002 \u6b63\u786e\u7684\u547d\u4ee4\uff1a $ docker inspect efe \u53d1\u5e03 docker \u955c\u50cf \u00b6 \u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u9a8c\u8bc1\u4e86\u65b0\u955c\u50cf\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4e0b\u4e00\u6b65\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u53d1\u5e03\u5230\u5b98\u65b9\u7684\u7d22\u5f15\u7f51\u7ad9\u3002\u8fd8\u8bb0\u5f97\u6211\u4eec\u6700\u5f00\u59cb\u4e0b\u8f7d\u7684 learn/tutorial \u955c\u50cf\u5427\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u6211\u4eec\u81ea\u5df1\u7f16\u8bd1\u7684\u955c\u50cf\u53d1\u5e03\u5230\u7d22\u5f15\u9875\u9762\uff0c\u4e00\u65b9\u9762\u53ef\u4ee5\u81ea\u5df1\u91cd\u7528\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u53ef\u4ee5\u5206\u4eab\u7ed9\u5176\u4ed6\u4eba\u4f7f\u7528\u3002 \u76ee\u6807\uff1a \u00b6 \u628a learn/ping \u955c\u50cf\u53d1\u5e03\u5230 docker \u7684 index \u7f51\u7ad9\u3002 \u63d0\u793a\uff1a \u00b6 \\1. docker images \u547d\u4ee4\u53ef\u4ee5\u5217\u51fa\u6240\u6709\u5b89\u88c5\u8fc7\u7684\u955c\u50cf\u3002 \\2. docker push \u547d\u4ee4\u53ef\u4ee5\u5c06\u67d0\u4e00\u4e2a\u955c\u50cf\u53d1\u5e03\u5230\u5b98\u65b9\u7f51\u7ad9\u3002 \\3. \u4f60\u53ea\u80fd\u5c06\u955c\u50cf\u53d1\u5e03\u5230\u81ea\u5df1\u7684\u7a7a\u95f4\u4e0b\u9762\u3002\u8fd9\u4e2a\u6a21\u62df\u5668\u767b\u5f55\u7684\u662f learn \u5e10\u53f7\u3002 \u9884\u671f\u7684\u547d\u4ee4\uff1a \u00b6 $ docker push learn/ping","title":"05 docker\u5165\u95e8"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#docker","text":"http://www.docker.org.cn/book/docker/ Docker \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5f15\u64ce\uff0c\u53ef\u4ee5\u8f7b\u677e\u7684\u4e3a\u4efb\u4f55\u5e94\u7528\u521b\u5efa\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u3001\u53ef\u79fb\u690d\u7684\u3001\u81ea\u7ed9\u81ea\u8db3\u7684\u5bb9\u5668\u3002\u5f00\u53d1\u8005\u5728\u7b14\u8bb0\u672c\u4e0a\u7f16\u8bd1\u6d4b\u8bd5\u901a\u8fc7\u7684\u5bb9\u5668\u53ef\u4ee5\u6279\u91cf\u5730\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u90e8\u7f72\uff0c\u5305\u62ec VMs\uff08\u865a\u62df\u673a\uff09\u3001 bare metal \u3001OpenStack \u96c6\u7fa4\u548c\u5176\u4ed6\u7684\u57fa\u7840\u5e94\u7528\u5e73\u53f0\u3002","title":"Docker \u5165\u95e8"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#docker_1","text":"web \u5e94\u7528\u7684\u81ea\u52a8\u5316\u6253\u5305\u548c\u53d1\u5e03\uff1b \u81ea\u52a8\u5316\u6d4b\u8bd5\u548c\u6301\u7eed\u96c6\u6210\u3001\u53d1\u5e03\uff1b \u5728\u670d\u52a1\u578b\u73af\u5883\u4e2d\u90e8\u7f72\u548c\u8c03\u6574\u6570\u636e\u5e93\u6216\u5176\u4ed6\u7684\u540e\u53f0\u5e94\u7528\uff1b \u4ece\u5934\u7f16\u8bd1\u6216\u8005\u6269\u5c55\u73b0\u6709\u7684 OpenShift \u6216 Cloud Foundry \u5e73\u53f0\u6765\u642d\u5efa\u81ea\u5df1\u7684 PaaS \u73af\u5883\u3002","title":"Docker \u901a\u5e38\u7528\u4e8e\u5982\u4e0b\u573a\u666f\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_1","text":"Docker \u7cfb\u7edf\u6709\u4e24\u4e2a\u7a0b\u5e8f\uff1adocker \u670d\u52a1\u7aef\u548c docker \u5ba2\u6237\u7aef\u3002\u5176\u4e2d docker \u670d\u52a1\u7aef\u662f\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\uff0c\u7ba1\u7406\u7740\u6240\u6709\u7684\u5bb9\u5668\u3002docker \u5ba2\u6237\u7aef\u5219\u626e\u6f14\u7740 docker \u670d\u52a1\u7aef\u7684\u8fdc\u7a0b\u63a7\u5236\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u63a7\u5236 docker \u7684\u670d\u52a1\u7aef\u8fdb\u7a0b\u3002\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0cdocker \u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u8fd0\u884c\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u3002 Docker \u662f\u4e00\u4e2a\u8f6f\u4ef6\uff0c\u53ef\u4ee5\u8fd0\u884c\u5728\u4e0d\u540c OS \u4e2d\u3002","title":"\u51c6\u5907\u5f00\u59cb"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_2","text":"\u68c0\u67e5 docker \u7684\u7248\u672c\uff0c\u8fd9\u6837\u53ef\u4ee5\u7528\u6765\u786e\u8ba4 docker \u670d\u52a1\u5728\u8fd0\u884c\u5e76\u53ef\u901a\u8fc7\u5ba2\u6237\u7aef\u94fe\u63a5\u3002","title":"\u76ee\u6807\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_3","text":"\u53ef\u4ee5\u901a\u8fc7\u5728\u7ec8\u7aef\u8f93\u5165 docker \u547d\u4ee4\u6765\u67e5\u770b\u6240\u6709\u7684\u53c2\u6570\u3002 \u5b98\u7f51\u7684\u5728\u7ebf\u6a21\u62df\u5668\u53ea\u63d0\u4f9b\u4e86\u6709\u9650\u7684\u547d\u4ee4\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u6240\u6709\u7684\u547d\u4ee4\u53ef\u4ee5\u6b63\u786e\u6267\u884c\u3002","title":"\u63d0\u793a\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_4","text":"docker version","title":"\u6b63\u786e\u7684\u547d\u4ee4\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#docker_2","text":"\u4f7f\u7528 docker \u6700\u7b80\u5355\u7684\u65b9\u5f0f\u83ab\u8fc7\u4e8e\u4ece\u73b0\u6709\u7684\u5bb9\u5668\u955c\u50cf\u5f00\u59cb\u3002Docker \u5b98\u65b9\u7f51\u7ad9\u4e13\u95e8\u6709\u4e00\u4e2a\u9875\u9762\u6765\u5b58\u50a8\u6240\u6709\u53ef\u7528\u7684\u955c\u50cf\uff0c\u7f51\u5740\u662f\uff1a index.docker.io \u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u6d4f\u89c8\u8fd9\u4e2a\u7f51\u9875\u6765\u67e5\u627e\u4f60\u60f3\u8981\u4f7f\u7528\u7684\u955c\u50cf\uff0c\u6216\u8005\u4f7f\u7528\u547d\u4ee4\u884c\u7684\u5de5\u5177\u6765\u68c0\u7d22\u3002","title":"\u641c\u7d22\u53ef\u7528\u7684 docker \u955c\u50cf"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_5","text":"\u5b66\u4f1a\u4f7f\u7528\u547d\u4ee4\u884c\u7684\u5de5\u5177\u6765\u68c0\u7d22\u540d\u5b57\u53eb\u505a tutorial \u7684\u955c\u50cf\u3002","title":"\u76ee\u6807\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_6","text":"\u547d\u4ee4\u884c\u7684\u683c\u5f0f\u4e3a\uff1adocker search \u955c\u50cf\u540d\u5b57","title":"\u63d0\u793a\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_7","text":"$ docker search tutorial","title":"\u6b63\u786e\u7684\u547d\u4ee4\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#docker_3","text":"\u4e0b\u8f7d\u955c\u50cf\u7684\u547d\u4ee4\u975e\u5e38\u7b80\u5355\uff0c\u4f7f\u7528 docker pull \u547d\u4ee4\u5373\u53ef\u3002(\u8bd1\u8005\u6309\uff1adocker \u547d\u4ee4\u548c git \u6709\u4e00\u4e9b\u7c7b\u4f3c\u7684\u5730\u65b9\uff09\u3002\u5728 docker \u7684\u955c\u50cf\u7d22\u5f15\u7f51\u7ad9\u4e0a\u9762\uff0c\u955c\u50cf\u90fd\u662f\u6309\u7167**\u7528\u6237\u540d/****\u955c\u50cf\u540d**\u7684\u65b9\u5f0f\u6765\u5b58\u50a8\u7684\u3002\u6709\u4e00\u7ec4\u6bd4\u8f83\u7279\u6b8a\u7684\u955c\u50cf\uff0c\u6bd4\u5982 ubuntu \u8fd9\u7c7b\u57fa\u7840\u955c\u50cf\uff0c\u7ecf\u8fc7\u5b98\u65b9\u7684\u9a8c\u8bc1\uff0c\u503c\u5f97\u4fe1\u4efb\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528**\u955c\u50cf\u540d**\u6765\u68c0\u7d22\u5230\u3002","title":"\u5b66\u4f1a\u4f7f\u7528 docker \u547d\u4ee4\u6765\u4e0b\u8f7d\u955c\u50cf"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_8","text":"\u901a\u8fc7 docker \u547d\u4ee4\u4e0b\u8f7d tutorial \u955c\u50cf\u3002","title":"\u76ee\u6807\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_9","text":"\u6267\u884c pull \u547d\u4ee4\u7684\u65f6\u5019\u8981\u5199\u5b8c\u6574\u7684\u540d\u5b57\uff0c\u6bd4\u5982\"learn/tutorial\"\u3002","title":"\u63d0\u793a\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_10","text":"$ docker pull learn/tutorial","title":"\u6b63\u786e\u7684\u547d\u4ee4\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#docker-hello-world","text":"docker \u5bb9\u5668\u53ef\u4ee5\u7406\u89e3\u4e3a\u5728\u6c99\u76d2\u4e2d\u8fd0\u884c\u7684\u8fdb\u7a0b\u3002\u8fd9\u4e2a\u6c99\u76d2\u5305\u542b\u4e86\u8be5\u8fdb\u7a0b\u8fd0\u884c\u6240\u5fc5\u987b\u7684\u8d44\u6e90\uff0c\u5305\u62ec\u6587\u4ef6\u7cfb\u7edf\u3001\u7cfb\u7edf\u7c7b\u5e93\u3001shell \u73af\u5883\u7b49\u7b49\u3002\u4f46\u8fd9\u4e2a\u6c99\u76d2\u9ed8\u8ba4\u662f\u4e0d\u4f1a\u8fd0\u884c\u4efb\u4f55\u7a0b\u5e8f\u7684\u3002\u4f60\u9700\u8981\u5728\u6c99\u76d2\u4e2d\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b\u6765\u542f\u52a8\u67d0\u4e00\u4e2a\u5bb9\u5668\u3002\u8fd9\u4e2a\u8fdb\u7a0b\u662f\u8be5\u5bb9\u5668\u7684\u552f\u4e00\u8fdb\u7a0b\uff0c\u6240\u4ee5\u5f53\u8be5\u8fdb\u7a0b\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u5bb9\u5668\u4e5f\u4f1a\u5b8c\u5168\u7684\u505c\u6b62\u3002","title":"\u5728 docker \u5bb9\u5668\u4e2d\u8fd0\u884c hello world!"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_11","text":"\u5728\u6211\u4eec\u521a\u521a\u4e0b\u8f7d\u7684\u955c\u50cf\u4e2d\u8f93\u51fa\"hello word\"\u3002\u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u6211\u4eec\u9700\u8981\u5728\u8fd9\u4e2a\u5bb9\u5668\u4e2d\u8fd0\u884c\"echo\"\u547d\u4ee4\uff0c\u8f93\u51fa\"hello word\"\u3002","title":"\u76ee\u6807\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_12","text":"docker run \u547d\u4ee4\u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u955c\u50cf\u540d\uff0c\u4e00\u4e2a\u662f\u8981\u5728\u955c\u50cf\u4e2d\u8fd0\u884c\u7684\u547d\u4ee4\u3002","title":"\u63d0\u793a\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_13","text":"$ docker run learn/tutorial echo \"hello word\"","title":"\u6b63\u786e\u7684\u547d\u4ee4\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_14","text":"\u4e0b\u4e00\u6b65\u6211\u4eec\u8981\u505a\u7684\u4e8b\u60c5\u662f\u5728\u5bb9\u5668\u91cc\u9762\u5b89\u88c5\u4e00\u4e2a\u7b80\u5355\u7684\u7a0b\u5e8f(ping)\u3002\u6211\u4eec\u4e4b\u524d\u4e0b\u8f7d\u7684 tutorial \u955c\u50cf\u662f\u57fa\u4e8e ubuntu \u7684\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u4f7f\u7528 ubuntu \u7684 apt-get \u547d\u4ee4\u6765\u5b89\u88c5 ping \u7a0b\u5e8f\uff1a apt-get install -y ping \u3002 \u5907\u6ce8\uff1aapt-get \u547d\u4ee4\u6267\u884c\u5b8c\u6bd5\u4e4b\u540e\uff0c\u5bb9\u5668\u5c31\u4f1a\u505c\u6b62\uff0c\u4f46\u5bf9\u5bb9\u5668\u7684\u6539\u52a8\u4e0d\u4f1a\u4e22\u5931\u3002","title":"\u5728\u5bb9\u5668\u4e2d\u5b89\u88c5\u65b0\u7684\u7a0b\u5e8f"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_15","text":"\u5728 learn/tutorial \u955c\u50cf\u91cc\u9762\u5b89\u88c5 ping \u7a0b\u5e8f\u3002","title":"\u76ee\u6807\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_16","text":"\u5728\u6267\u884c apt-get \u547d\u4ee4\u7684\u65f6\u5019\uff0c\u8981\u5e26\u4e0a-y \u53c2\u6570\u3002\u5982\u679c\u4e0d\u6307\u5b9a-y \u53c2\u6570\u7684\u8bdd\uff0capt-get \u547d\u4ee4\u4f1a\u8fdb\u5165\u4ea4\u4e92\u6a21\u5f0f\uff0c\u9700\u8981\u7528\u6237\u8f93\u5165\u547d\u4ee4\u6765\u8fdb\u884c\u786e\u8ba4\uff0c\u4f46\u5728 docker \u73af\u5883\u4e2d\u662f\u65e0\u6cd5\u54cd\u5e94\u8fd9\u79cd\u4ea4\u4e92\u7684\u3002","title":"\u63d0\u793a\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_17","text":"$docker run learn/tutorial apt-get install -y ping","title":"\u6b63\u786e\u7684\u547d\u4ee4\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_18","text":"\u5f53\u4f60\u5bf9\u67d0\u4e00\u4e2a\u5bb9\u5668\u505a\u4e86\u4fee\u6539\u4e4b\u540e\uff08\u901a\u8fc7\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u67d0\u4e00\u4e2a\u547d\u4ee4\uff09\uff0c\u53ef\u4ee5\u628a\u5bf9\u5bb9\u5668\u7684\u4fee\u6539\u4fdd\u5b58\u4e0b\u6765\uff0c\u8fd9\u6837\u4e0b\u6b21\u53ef\u4ee5\u4ece\u4fdd\u5b58\u540e\u7684\u6700\u65b0\u72b6\u6001\u8fd0\u884c\u8be5\u5bb9\u5668\u3002docker \u4e2d\u4fdd\u5b58\u72b6\u6001\u7684\u8fc7\u7a0b\u79f0\u4e4b\u4e3a committing\uff0c\u5b83\u4fdd\u5b58\u7684\u65b0\u65e7\u72b6\u6001\u4e4b\u95f4\u7684\u533a\u522b\uff0c\u4ece\u800c\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684\u7248\u672c\u3002","title":"\u4fdd\u5b58\u5bf9\u5bb9\u5668\u7684\u4fee\u6539"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_19","text":"\u9996\u5148\u4f7f\u7528**docker ps -l**\u547d\u4ee4\u83b7\u5f97\u5b89\u88c5\u5b8c ping \u547d\u4ee4\u4e4b\u540e\u5bb9\u5668\u7684 id\u3002\u7136\u540e\u628a\u8fd9\u4e2a\u955c\u50cf\u4fdd\u5b58\u4e3a learn/ping\u3002","title":"\u76ee\u6807\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_20","text":"\\1. \u8fd0\u884c docker commit\uff0c\u53ef\u4ee5\u67e5\u770b\u8be5\u547d\u4ee4\u7684\u53c2\u6570\u5217\u8868\u3002 \\2. \u4f60\u9700\u8981\u6307\u5b9a\u8981\u63d0\u4ea4\u4fdd\u5b58\u5bb9\u5668\u7684 ID\u3002(\u8bd1\u8005\u6309\uff1a\u901a\u8fc7 docker ps -l \u547d\u4ee4\u83b7\u5f97) \\3. \u65e0\u9700\u62f7\u8d1d\u5b8c\u6574\u7684 id\uff0c\u901a\u5e38\u6765\u8bb2\u6700\u5f00\u59cb\u7684\u4e09\u81f3\u56db\u4e2a\u5b57\u6bcd\u5373\u53ef\u533a\u5206\u3002\uff08\u8bd1\u8005\u6309\uff1a\u975e\u5e38\u7c7b\u4f3c git \u91cc\u9762\u7684\u7248\u672c\u53f7)","title":"\u63d0\u793a\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_21","text":"$ docker commit 698 learn/ping","title":"\u6b63\u786e\u7684\u547d\u4ee4\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_22","text":"ok\uff0c\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u4f60\u5df2\u7ecf\u5efa\u7acb\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684\u3001\u81ea\u6210\u4f53\u7cfb\u7684 docker \u73af\u5883\uff0c\u5e76\u4e14\u5b89\u88c5\u4e86 ping \u547d\u4ee4\u5728\u91cc\u9762\u3002\u5b83\u53ef\u4ee5\u5728\u4efb\u4f55\u652f\u6301 docker \u73af\u5883\u7684\u7cfb\u7edf\u4e2d\u8fd0\u884c\u5566\uff01(\u8bd1\u8005\u6309\uff1a\u662f\u4e0d\u662f\u5f88\u795e\u5947\u5462\uff1f)\u8ba9\u6211\u4eec\u6765\u4f53\u9a8c\u4e00\u4e0b\u5427\uff01","title":"\u8fd0\u884c\u65b0\u7684\u955c\u50cf"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_23","text":"\u5728\u65b0\u7684\u955c\u50cf\u4e2d\u8fd0\u884c ping www.google.com\u547d\u4ee4 \u3002","title":"\u76ee\u6807\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_24","text":"\u4e00\u5b9a\u8981\u4f7f\u7528\u65b0\u7684\u955c\u50cf\u540d**learn/ping**\u6765\u8fd0\u884c ping \u547d\u4ee4\u3002(\u8bd1\u8005\u6309\uff1a\u6700\u5f00\u59cb\u4e0b\u8f7d\u7684 learn/tutorial \u955c\u50cf\u4e2d\u662f\u6ca1\u6709 ping \u547d\u4ee4\u7684)","title":"\u63d0\u793a\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_25","text":"$docker run lean/ping ping www.google.com","title":"\u6b63\u786e\u7684\u547d\u4ee4\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_26","text":"\u73b0\u5728\u4f60\u5df2\u7ecf\u8fd0\u884c\u4e86\u4e00\u4e2a docker \u5bb9\u5668\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u4e0b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u3002 \u4f7f\u7528 docker ps \u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u6b63\u5728\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\u5217\u8868\uff0c\u4f7f\u7528 docker inspect \u547d\u4ee4\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u66f4\u8be6\u7ec6\u7684\u5173\u4e8e\u67d0\u4e00\u4e2a\u5bb9\u5668\u7684\u4fe1\u606f\u3002","title":"\u68c0\u67e5\u8fd0\u884c\u4e2d\u7684\u955c\u50cf"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_27","text":"\u67e5\u627e\u67d0\u4e00\u4e2a\u8fd0\u884c\u4e2d\u5bb9\u5668\u7684 id\uff0c\u7136\u540e\u4f7f\u7528 docker inspect \u547d\u4ee4\u67e5\u770b\u5bb9\u5668\u7684\u4fe1\u606f\u3002","title":"\u76ee\u6807\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_28","text":"\u53ef\u4ee5\u4f7f\u7528\u955c\u50cf id \u7684\u524d\u9762\u90e8\u5206\uff0c\u4e0d\u9700\u8981\u5b8c\u6574\u7684 id\u3002 \u6b63\u786e\u7684\u547d\u4ee4\uff1a $ docker inspect efe","title":"\u63d0\u793a\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#docker_4","text":"\u73b0\u5728\u6211\u4eec\u5df2\u7ecf\u9a8c\u8bc1\u4e86\u65b0\u955c\u50cf\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4e0b\u4e00\u6b65\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u53d1\u5e03\u5230\u5b98\u65b9\u7684\u7d22\u5f15\u7f51\u7ad9\u3002\u8fd8\u8bb0\u5f97\u6211\u4eec\u6700\u5f00\u59cb\u4e0b\u8f7d\u7684 learn/tutorial \u955c\u50cf\u5427\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u628a\u6211\u4eec\u81ea\u5df1\u7f16\u8bd1\u7684\u955c\u50cf\u53d1\u5e03\u5230\u7d22\u5f15\u9875\u9762\uff0c\u4e00\u65b9\u9762\u53ef\u4ee5\u81ea\u5df1\u91cd\u7528\uff0c\u53e6\u4e00\u65b9\u9762\u4e5f\u53ef\u4ee5\u5206\u4eab\u7ed9\u5176\u4ed6\u4eba\u4f7f\u7528\u3002","title":"\u53d1\u5e03 docker \u955c\u50cf"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_29","text":"\u628a learn/ping \u955c\u50cf\u53d1\u5e03\u5230 docker \u7684 index \u7f51\u7ad9\u3002","title":"\u76ee\u6807\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_30","text":"\\1. docker images \u547d\u4ee4\u53ef\u4ee5\u5217\u51fa\u6240\u6709\u5b89\u88c5\u8fc7\u7684\u955c\u50cf\u3002 \\2. docker push \u547d\u4ee4\u53ef\u4ee5\u5c06\u67d0\u4e00\u4e2a\u955c\u50cf\u53d1\u5e03\u5230\u5b98\u65b9\u7f51\u7ad9\u3002 \\3. \u4f60\u53ea\u80fd\u5c06\u955c\u50cf\u53d1\u5e03\u5230\u81ea\u5df1\u7684\u7a7a\u95f4\u4e0b\u9762\u3002\u8fd9\u4e2a\u6a21\u62df\u5668\u767b\u5f55\u7684\u662f learn \u5e10\u53f7\u3002","title":"\u63d0\u793a\uff1a"},{"location":"03-docker/05%20docker%E5%85%A5%E9%97%A8/#_31","text":"$ docker push learn/ping","title":"\u9884\u671f\u7684\u547d\u4ee4\uff1a"},{"location":"03-docker/06%20Docker-download/","text":"Docker \u5165\u95e8\u6559\u7a0b \u00b6 http://www.runoob.com/docker/docker-tutorial.html \u5b89\u88c5 \u00b6 Ubuntu 16.04 \u5b89\u88c5 \u00b6 http://www.runoob.com/docker/ubuntu-docker-install.html MAC \u5b89\u88c5 \u00b6 http://www.runoob.com/docker/macos-docker-install.html \u81ea\u5df1\u5148\u5728 mac \u5b89\u88c5\uff0c\u7a0d\u540e\u5728 ubuntu \u8fdb\u884c\u5b89\u88c5 \u5e38\u7528\u547d\u4ee4 \u00b6 \u5bb9\u5668\u751f\u547d\u5468\u671f\u7ba1\u7406 \u00b6 run start/stop/restart kill rm pause/unpause create exec \u5bb9\u5668\u64cd\u4f5c \u00b6 ps inspect top attach events logs wait export port \u5bb9\u5668 rootfs \u547d\u4ee4 \u00b6 commit cp diff \u955c\u50cf\u4ed3\u5e93 \u00b6 login pull push search \u672c\u5730\u955c\u50cf\u7ba1\u7406 \u00b6 images rmi tag build history save import info|version \u00b6 info version","title":"06 Docker-download"},{"location":"03-docker/06%20Docker-download/#docker","text":"http://www.runoob.com/docker/docker-tutorial.html","title":"Docker \u5165\u95e8\u6559\u7a0b"},{"location":"03-docker/06%20Docker-download/#_1","text":"","title":"\u5b89\u88c5"},{"location":"03-docker/06%20Docker-download/#ubuntu-1604","text":"http://www.runoob.com/docker/ubuntu-docker-install.html","title":"Ubuntu 16.04 \u5b89\u88c5"},{"location":"03-docker/06%20Docker-download/#mac","text":"http://www.runoob.com/docker/macos-docker-install.html \u81ea\u5df1\u5148\u5728 mac \u5b89\u88c5\uff0c\u7a0d\u540e\u5728 ubuntu \u8fdb\u884c\u5b89\u88c5","title":"MAC \u5b89\u88c5"},{"location":"03-docker/06%20Docker-download/#_2","text":"","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"03-docker/06%20Docker-download/#_3","text":"run start/stop/restart kill rm pause/unpause create exec","title":"\u5bb9\u5668\u751f\u547d\u5468\u671f\u7ba1\u7406"},{"location":"03-docker/06%20Docker-download/#_4","text":"ps inspect top attach events logs wait export port","title":"\u5bb9\u5668\u64cd\u4f5c"},{"location":"03-docker/06%20Docker-download/#rootfs","text":"commit cp diff","title":"\u5bb9\u5668 rootfs \u547d\u4ee4"},{"location":"03-docker/06%20Docker-download/#_5","text":"login pull push search","title":"\u955c\u50cf\u4ed3\u5e93"},{"location":"03-docker/06%20Docker-download/#_6","text":"images rmi tag build history save import","title":"\u672c\u5730\u955c\u50cf\u7ba1\u7406"},{"location":"03-docker/06%20Docker-download/#infoversion","text":"info version","title":"info|version"},{"location":"03-docker/07%20docker-basic-use/","text":"docker \u5e38\u89c1\u64cd\u4f5c\u8865\u5145 \u00b6 ctime: 2021-08-30 mtime: 2024-03-25 \u53c2\u8003\u5b98\u65b9\u6587\u6863 https://docs.docker.com/docker-for-mac/install/ 1. \u57fa\u672c\u64cd\u4f5c \u00b6 # \u68c0\u67e5\u5f53\u524d docker \u7248\u672c docker --version # Docker version 18.09, build c97c6d6 docker-compose # \u53ef\u4ee5\u4f7f\u7528 YML \u6587\u4ef6\u6765\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u7684\u6240\u6709\u670d\u52a1 docker-compose up # \u53ef\u4ee5\u4ece YML \u6587\u4ef6\u914d\u7f6e\u4e2d\u521b\u5efa\u5e76\u542f\u52a8\u6240\u6709\u670d\u52a1 docker-machine # \u53ef\u4ee5\u521b\u5efa\u67e5\u770b\u865a\u62df\u673a\uff08\u8be6\u89c1 https://www.runoob.com/docker/docker-machine.html\uff09\u5f53\u524d\u6ca1\u6709\u7528\u5230 \u8fd0\u884c\u4e00\u4e2a\u955c\u50cf\uff08\u5982\u679c\u6ca1\u6709\u5c31\u4f1a\u8054\u7f51\u5b89\u88c5\uff0c\u5230\u5b98\u65b9\u53bb pull\uff09 docker run hello-world \u4f7f\u7528 docker \u642d\u5efa\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 nginx docker run --detach --publish = 80 :80 --name = webserver nginx \u73b0\u5728\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee localhost \u5373\u53ef\u770b\u5230 nginx \u7684\u754c\u9762 \u5f53\u5bb9\u5668\u5df2\u7ecf\u8fd0\u884c\uff0c\u53ef\u4ee5\u67e5\u770b\u5bb9\u5668\u7684\u5c5e\u6027 docker ps # \u7b49\u4ef7\u4e8e docker container ls \u505c\u6b62\u5bb9\u5668\uff0c\u7136\u540e\u5220\u9664\u5df2\u6709\u5bb9\u5668\uff0c\u518d\u5220\u9664\u5df2\u6709\u955c\u50cf\uff08\u65e5\u5e38\u5f00\u53d1\u4e0d\u9700\u8981\u5220\u9664\u5bb9\u5668\u548c\u955c\u50cf\uff0c\u8fd9\u91cc\u901a\u5e38\u662f\u955c\u50cf\u53d1\u751f\u66f4\u65b0\u65f6\uff0c\u9700\u8981\u5907\u4efd\u6570\u636e\uff0c\u66f4\u65b0\u955c\u50cf\uff09\u3002 \u955c\u50cf\u548c\u5bb9\u5668\uff0c\u5bf9\u5e94\u9762\u5411\u5bf9\u8c61\u4e2d\u7684\u7c7b\u548c\u5b9e\u4f8b\u3002 docker container stop webserver docker container rm webserver docker image rm nginx \u56e0\u4e3a docker \u955c\u50cf\u4f1a\u5b9a\u671f\u66f4\u65b0\uff0c\u6240\u4ee5\u672c\u5730\u5f00\u53d1\u9700\u8981\u6839\u636e\u955c\u50cf\u53d1\u5e03\uff0c\u7136\u540e\u5b9a\u671f\u66f4\u65b0\u955c\u50cf\u64cd\u4f5c # \u67e5\u770b\u5f53\u524d\u7684\u955c\u50cf\u7684ID docker ps -aq # 30b8a8b128f4 # ec328f5a228d # \u5217\u51fa\u5f53\u524d\u7684\u955c\u50cf(\u8be6\u60c5)\uff0c\u5c31\u662f\u628a\u4e0a\u9762\u7684\u8be6\u60c5\u5217\u51fa\u6765 docker image ls \u7ed3\u679c REPOSITORY TAG IMAGE ID CREATED SIZE nginx latest 27a188018e18 6 days ago 109MB hello-world latest fce289e99eb9 3 months ago 1.84kB docker.test.top/test-dev/test-pro-dev master 74f5640d3df7 7 months ago 1.04GB docker.test.top/test-dev/mariadb 10.3 2c73b3262fff 9 months ago 363MB memcached 1.4-alpine 273374b463b8 21 months ago 7.68MB # \u5220\u9664\u4e00\u4e2a\u955c\u50cf\uff0c\u4f46\u662f\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\u955c\u50cf\u7684\u4ed3\u5e93\uff0c\u9700\u8981\u5220\u9664\u955c\u50cf\u7684ID docker image rm hello-world Error response from daemon: conflict: unable to remove repository reference \"hello-world\" ( must force ) - container ec328f5a228d is using its referenced image fce289e99eb9 # \u5217\u51fa\u5f53\u524d\u7684\u5bb9\u5668 docker container ls CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 30b8a8b128f4 nginx \"nginx -g 'daemon of\u2026\" 5 hours ago Up 22 minutes 0 .0.0.0:80->80/tcp webserver 73b12bea8807 docker.test.top/test-dev/test-pro-dev:master \"/sbin/my_init -- /r\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:3000->3000/tcp, test-dev-pro dfdf5180c891 docker.test.top/test-dev/mariadb:10.3 \"docker-entrypoint.s\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:3306->3306/tcp test-mysql 3b54b280d6ef memcached:1.4-alpine \"docker-entrypoint.s\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:11211->11211/tcp test-memcached # \u5f3a\u884c\u5220\u9664 30b8a8b128f4 nginx \u5bb9\u5668 docker rm -f 30b8a8b128f4 30b8a8b128f4 # \u53ef\u4ee5\u770b\u51fa\u5bb9\u5668\u4ee5\u53ca\u88ab\u5220\u9664 docker container ls CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 73b12bea8807 docker.test.top/test-dev/test-pro-dev:master \"/sbin/my_init -- /r\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:3000->3000/tcp test-dev-pro dfdf5180c891 docker.test.top/test-dev/mariadb:10.3 \"docker-entrypoint.s\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:3306->3306/tcp test-mysql 3b54b280d6ef memcached:1.4-alpine \"docker-entrypoint.s\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:11211->11211/tcp test-memcached # \u5220\u9664\u5bb9\u5668\u540e\uff0c\u518d\u5220\u9664\u955c\u50cf(NGINX) docker rmi 27a188018e18 Untagged: nginx:latest Untagged: nginx@sha256:e71b1bf4281f25533cf15e6e5f9be4dac74d2328152edf7ecde23abc54e16c1c Deleted: sha256:27a188018e1847b312022b02146bb7ac3da54e96fab838b7db9f102c8c3dd778 Deleted: sha256:261d1996088c57b71d8ea9412f719bcbb8f4cb68a6e463d30abb85cc5fc5724b Deleted: sha256:e6fbd1f039a7391ab57afeb1b11a73781bcbd6ae8041d98c5988b90c46ce5726 Deleted: sha256:5dacd731af1b0386ead06c8b1feff9f65d9e0bdfec032d2cd0bc03690698feda # \u5df2\u7ecf\u5220\u9664\u955c\u50cf NGINX docker images REPOSITORY TAG IMAGE ID CREATED SIZE hello-world latest fce289e99eb9 3 months ago 1 .84kB docker.test.top/test-dev/test-pro-dev master 74f5640d3df7 7 months ago 1 .04GB docker.test.top/test-dev/mariadb 10 .3 2c73b3262fff 9 months ago 363MB memcached 1 .4-alpine 273374b463b8 21 months ago 7 .68MB 2. \u914d\u7f6e \u00b6 \u901a\u7528\uff1a\u914d\u7f6e docker \u5f00\u673a\u542f\u52a8\u3001\u81ea\u52a8\u5347\u7ea7\u3001\u7528\u6237\u7edf\u8ba1\u53cd\u9988\u3001\u865a\u62df\u673a\u5907\u4efd\u3001\u8bb0\u4f4f docker \u767b\u5f55\u7b49\uff08\u4f7f\u7528\u9ed8\u8ba4\uff09 \u6587\u4ef6\u5171\u4eab\uff1a\u8bbe\u7f6e docker \u7684\u8fd0\u884c\u76ee\u5f55\u3002\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u3002 \u9ad8\u7ea7\uff1a\u8bbe\u7f6e docker \u8fd0\u884c\u7684\u786c\u4ef6\u8d44\u6e90 docker \u4f7f\u7528\u5bbf\u4e3b\u673a\u7684\u4e00\u534a CPU\uff08\u5982\u679c\u9700\u8981\u589e\u52a0\u6216\u8005\u51cf\u5c11\u6027\u80fd\uff0c\u53ef\u4ee5\u6539\u53d8 CPU \u4e2a\u6570\uff09\uff1b \u5185\u5b58\u901a\u5e38\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684 2G \u8fd0\u884c\u5185\u5b58\uff08\u53ef\u4ee5\u589e\u52a0\u6216\u8005\u51cf\u5c11\uff09swap \u865a\u62df\u5185\u5b58\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a 1G \u865a\u62df\u5185\u5b58\u3002 \u5982\u679c\u7535\u8111\u7684 CPU \u5403\u4e0d\u6d88\uff0c\u6240\u4ee5\u589e\u52a0\u5185\u5b58\u548c\u865a\u62df\u5185\u5b58\uff0c\u589e\u52a0 CPU \u4e2a\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u7f13\u89e3\u5355\u4e2a CPU \u7684\u6027\u80fd\u3002 \u7528\u6237\u4ee3\u7406\uff1a\u9009\u62e9\u9ed8\u8ba4\u7684\u7528\u6237\u4ee3\u7406 \u5b58\u50a8\u4f4d\u7f6e\u548c\u5bb9\u91cf\uff1a\u53ef\u4ee5\u8fc1\u79fb\u955c\u50cf\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4f4d\u7f6e\u548c\u8bbe\u7f6e\u5bb9\u91cf","title":"07 docker-basic-use"},{"location":"03-docker/07%20docker-basic-use/#docker","text":"ctime: 2021-08-30 mtime: 2024-03-25 \u53c2\u8003\u5b98\u65b9\u6587\u6863 https://docs.docker.com/docker-for-mac/install/","title":"docker \u5e38\u89c1\u64cd\u4f5c\u8865\u5145"},{"location":"03-docker/07%20docker-basic-use/#1","text":"# \u68c0\u67e5\u5f53\u524d docker \u7248\u672c docker --version # Docker version 18.09, build c97c6d6 docker-compose # \u53ef\u4ee5\u4f7f\u7528 YML \u6587\u4ef6\u6765\u914d\u7f6e\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u7684\u6240\u6709\u670d\u52a1 docker-compose up # \u53ef\u4ee5\u4ece YML \u6587\u4ef6\u914d\u7f6e\u4e2d\u521b\u5efa\u5e76\u542f\u52a8\u6240\u6709\u670d\u52a1 docker-machine # \u53ef\u4ee5\u521b\u5efa\u67e5\u770b\u865a\u62df\u673a\uff08\u8be6\u89c1 https://www.runoob.com/docker/docker-machine.html\uff09\u5f53\u524d\u6ca1\u6709\u7528\u5230 \u8fd0\u884c\u4e00\u4e2a\u955c\u50cf\uff08\u5982\u679c\u6ca1\u6709\u5c31\u4f1a\u8054\u7f51\u5b89\u88c5\uff0c\u5230\u5b98\u65b9\u53bb pull\uff09 docker run hello-world \u4f7f\u7528 docker \u642d\u5efa\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 nginx docker run --detach --publish = 80 :80 --name = webserver nginx \u73b0\u5728\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee localhost \u5373\u53ef\u770b\u5230 nginx \u7684\u754c\u9762 \u5f53\u5bb9\u5668\u5df2\u7ecf\u8fd0\u884c\uff0c\u53ef\u4ee5\u67e5\u770b\u5bb9\u5668\u7684\u5c5e\u6027 docker ps # \u7b49\u4ef7\u4e8e docker container ls \u505c\u6b62\u5bb9\u5668\uff0c\u7136\u540e\u5220\u9664\u5df2\u6709\u5bb9\u5668\uff0c\u518d\u5220\u9664\u5df2\u6709\u955c\u50cf\uff08\u65e5\u5e38\u5f00\u53d1\u4e0d\u9700\u8981\u5220\u9664\u5bb9\u5668\u548c\u955c\u50cf\uff0c\u8fd9\u91cc\u901a\u5e38\u662f\u955c\u50cf\u53d1\u751f\u66f4\u65b0\u65f6\uff0c\u9700\u8981\u5907\u4efd\u6570\u636e\uff0c\u66f4\u65b0\u955c\u50cf\uff09\u3002 \u955c\u50cf\u548c\u5bb9\u5668\uff0c\u5bf9\u5e94\u9762\u5411\u5bf9\u8c61\u4e2d\u7684\u7c7b\u548c\u5b9e\u4f8b\u3002 docker container stop webserver docker container rm webserver docker image rm nginx \u56e0\u4e3a docker \u955c\u50cf\u4f1a\u5b9a\u671f\u66f4\u65b0\uff0c\u6240\u4ee5\u672c\u5730\u5f00\u53d1\u9700\u8981\u6839\u636e\u955c\u50cf\u53d1\u5e03\uff0c\u7136\u540e\u5b9a\u671f\u66f4\u65b0\u955c\u50cf\u64cd\u4f5c # \u67e5\u770b\u5f53\u524d\u7684\u955c\u50cf\u7684ID docker ps -aq # 30b8a8b128f4 # ec328f5a228d # \u5217\u51fa\u5f53\u524d\u7684\u955c\u50cf(\u8be6\u60c5)\uff0c\u5c31\u662f\u628a\u4e0a\u9762\u7684\u8be6\u60c5\u5217\u51fa\u6765 docker image ls \u7ed3\u679c REPOSITORY TAG IMAGE ID CREATED SIZE nginx latest 27a188018e18 6 days ago 109MB hello-world latest fce289e99eb9 3 months ago 1.84kB docker.test.top/test-dev/test-pro-dev master 74f5640d3df7 7 months ago 1.04GB docker.test.top/test-dev/mariadb 10.3 2c73b3262fff 9 months ago 363MB memcached 1.4-alpine 273374b463b8 21 months ago 7.68MB # \u5220\u9664\u4e00\u4e2a\u955c\u50cf\uff0c\u4f46\u662f\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\u955c\u50cf\u7684\u4ed3\u5e93\uff0c\u9700\u8981\u5220\u9664\u955c\u50cf\u7684ID docker image rm hello-world Error response from daemon: conflict: unable to remove repository reference \"hello-world\" ( must force ) - container ec328f5a228d is using its referenced image fce289e99eb9 # \u5217\u51fa\u5f53\u524d\u7684\u5bb9\u5668 docker container ls CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 30b8a8b128f4 nginx \"nginx -g 'daemon of\u2026\" 5 hours ago Up 22 minutes 0 .0.0.0:80->80/tcp webserver 73b12bea8807 docker.test.top/test-dev/test-pro-dev:master \"/sbin/my_init -- /r\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:3000->3000/tcp, test-dev-pro dfdf5180c891 docker.test.top/test-dev/mariadb:10.3 \"docker-entrypoint.s\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:3306->3306/tcp test-mysql 3b54b280d6ef memcached:1.4-alpine \"docker-entrypoint.s\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:11211->11211/tcp test-memcached # \u5f3a\u884c\u5220\u9664 30b8a8b128f4 nginx \u5bb9\u5668 docker rm -f 30b8a8b128f4 30b8a8b128f4 # \u53ef\u4ee5\u770b\u51fa\u5bb9\u5668\u4ee5\u53ca\u88ab\u5220\u9664 docker container ls CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 73b12bea8807 docker.test.top/test-dev/test-pro-dev:master \"/sbin/my_init -- /r\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:3000->3000/tcp test-dev-pro dfdf5180c891 docker.test.top/test-dev/mariadb:10.3 \"docker-entrypoint.s\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:3306->3306/tcp test-mysql 3b54b280d6ef memcached:1.4-alpine \"docker-entrypoint.s\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:11211->11211/tcp test-memcached # \u5220\u9664\u5bb9\u5668\u540e\uff0c\u518d\u5220\u9664\u955c\u50cf(NGINX) docker rmi 27a188018e18 Untagged: nginx:latest Untagged: nginx@sha256:e71b1bf4281f25533cf15e6e5f9be4dac74d2328152edf7ecde23abc54e16c1c Deleted: sha256:27a188018e1847b312022b02146bb7ac3da54e96fab838b7db9f102c8c3dd778 Deleted: sha256:261d1996088c57b71d8ea9412f719bcbb8f4cb68a6e463d30abb85cc5fc5724b Deleted: sha256:e6fbd1f039a7391ab57afeb1b11a73781bcbd6ae8041d98c5988b90c46ce5726 Deleted: sha256:5dacd731af1b0386ead06c8b1feff9f65d9e0bdfec032d2cd0bc03690698feda # \u5df2\u7ecf\u5220\u9664\u955c\u50cf NGINX docker images REPOSITORY TAG IMAGE ID CREATED SIZE hello-world latest fce289e99eb9 3 months ago 1 .84kB docker.test.top/test-dev/test-pro-dev master 74f5640d3df7 7 months ago 1 .04GB docker.test.top/test-dev/mariadb 10 .3 2c73b3262fff 9 months ago 363MB memcached 1 .4-alpine 273374b463b8 21 months ago 7 .68MB","title":"1. \u57fa\u672c\u64cd\u4f5c"},{"location":"03-docker/07%20docker-basic-use/#2","text":"\u901a\u7528\uff1a\u914d\u7f6e docker \u5f00\u673a\u542f\u52a8\u3001\u81ea\u52a8\u5347\u7ea7\u3001\u7528\u6237\u7edf\u8ba1\u53cd\u9988\u3001\u865a\u62df\u673a\u5907\u4efd\u3001\u8bb0\u4f4f docker \u767b\u5f55\u7b49\uff08\u4f7f\u7528\u9ed8\u8ba4\uff09 \u6587\u4ef6\u5171\u4eab\uff1a\u8bbe\u7f6e docker \u7684\u8fd0\u884c\u76ee\u5f55\u3002\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u3002 \u9ad8\u7ea7\uff1a\u8bbe\u7f6e docker \u8fd0\u884c\u7684\u786c\u4ef6\u8d44\u6e90 docker \u4f7f\u7528\u5bbf\u4e3b\u673a\u7684\u4e00\u534a CPU\uff08\u5982\u679c\u9700\u8981\u589e\u52a0\u6216\u8005\u51cf\u5c11\u6027\u80fd\uff0c\u53ef\u4ee5\u6539\u53d8 CPU \u4e2a\u6570\uff09\uff1b \u5185\u5b58\u901a\u5e38\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684 2G \u8fd0\u884c\u5185\u5b58\uff08\u53ef\u4ee5\u589e\u52a0\u6216\u8005\u51cf\u5c11\uff09swap \u865a\u62df\u5185\u5b58\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a 1G \u865a\u62df\u5185\u5b58\u3002 \u5982\u679c\u7535\u8111\u7684 CPU \u5403\u4e0d\u6d88\uff0c\u6240\u4ee5\u589e\u52a0\u5185\u5b58\u548c\u865a\u62df\u5185\u5b58\uff0c\u589e\u52a0 CPU \u4e2a\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u7f13\u89e3\u5355\u4e2a CPU \u7684\u6027\u80fd\u3002 \u7528\u6237\u4ee3\u7406\uff1a\u9009\u62e9\u9ed8\u8ba4\u7684\u7528\u6237\u4ee3\u7406 \u5b58\u50a8\u4f4d\u7f6e\u548c\u5bb9\u91cf\uff1a\u53ef\u4ee5\u8fc1\u79fb\u955c\u50cf\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4f4d\u7f6e\u548c\u8bbe\u7f6e\u5bb9\u91cf","title":"2. \u914d\u7f6e"},{"location":"03-docker/08%20docker-basic-RYF/","text":"docker \u57fa\u672c\u77e5\u8bc6 \u00b6 docker-compose.yml \u00b6 \u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u7684 docker-compose.yml \u6587\u4ef6\uff0c\u662f\u9879\u76ee\u7684 Docker \u914d\u7f6e\u6587\u4ef6\u3002 # version 2 of the Docker Compose file format \u7f16\u8bd1\u6587\u4ef6\u7684\u7248\u672c\u53f7 version: '2' # sets up a persistable filesystem volume \u53ef\u6301\u7eed\u7684\u6587\u4ef6\u7cfb\u7edf\u5377 volumes: database_data: driver: local services: # create a container called nginx, \u521b\u5efa\u4e00\u4e2anginx\u6700\u65b0\u7248\u672c\u5bb9\u5668 # which can be referred to by the other containers using the hostname nginx. # It will use the latest, official, Docker Nginx container image as the base for the container. nginx: image: nginx:latest # port 80 in the container to port 8080 on our host machine access our application by navigating to http://localhost:8080 ports: - 8080 :80 # copy ./docker/nginx/default.conf from the local filesystem # to /etc/nginx/conf.d/default.conf in the container\u2019s filesystem volumes: - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf # the container gets access to a filesystem volume in the PHP container volumes_from: - php php: build: ./docker/php/ expose: - 9000 volumes: - .:/var/www/html Dockerfile \u00b6 FROM nodesource/node:4 RUN mkdir -p /home/nodejs/app WORKDIR /home/nodejs/app COPY . /home/nodejs/app RUN npm install --production CMD [ \"node\" , \"index.js\" ] \u4e0a\u9762\u4ee3\u7801\u7684\u542b\u4e49\u5982\u4e0b\u3002 FROM nodesource/node:4 \u4e0a\u9762\u4ee3\u7801\u6307\u5b9a Dockerfile \u7684\u955c\u50cf\uff0c\u8868\u793a\u662f NodeSource \u7ef4\u62a4\u7684 Node \u955c\u50cf\uff0c4.x \u7248\u672c\u3002 RUN mkdir -p /home/nodejs/app WORKDIR /home/nodejs/app \u4e0a\u9762\u547d\u4ee4\u65b0\u5efa\u4e00\u4e2a\u5de5\u4f5c\u76ee\u5f55\uff0c WORKDIR \u7c7b\u4f3c\u4e8e cd \u547d\u4ee4\uff0c\u7528\u6765\u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55\u3002 COPY . /home/nodejs/app \u4e0a\u9762\u547d\u4ee4\u5c06 Dockerfile \u6240\u5728\u76ee\u5f55\u7684\u6587\u4ef6\uff0c\u62f7\u8d1d\u5230\u6307\u5b9a\u76ee\u5f55\u3002 RUN npm install --production \u4e0a\u9762\u547d\u4ee4\u5b89\u88c5\u9879\u76ee\u7684\u4f9d\u8d56\u3002 CMD [\"node\", \"index.js\"] S \u4e0a\u9762\u547d\u4ee4\u5728\u547d\u4ee4\u884c\u4e0b\u6267\u884c\u6307\u5b9a\u547d\u4ee4\u3002 \u6700\u540e\uff0c\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker build -t myapp \u4e0a\u9762\u547d\u4ee4\u4f1a\u6267\u884c\u524d\u9762\u7684 Dockerfile \u6587\u4ef6\uff0c\u8fdb\u884c\u955c\u50cf\u6784\u5efa\uff0c\u5e76\u4e14\u6307\u5b9a\u955c\u50cf\u540d\u4e3a myapp \u3002 \u6784\u5efa\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u542f\u52a8\u955c\u50cf\u3002 $ docker run -it \"myapp\" \u4e0a\u9762\u547d\u4ee4\u4e2d\u7684 -it \u53c2\u6570\uff0c\u8868\u793a\u7ed1\u5b9a\u672c\u673a\u7684\u6807\u51c6\u8f93\u51fa/\u6807\u51c6\u8f93\u5165/\u6807\u51c6\u9519\u8bef\u3002 \u4f60\u8fd8\u53ef\u4ee5\u5c06\u955c\u50cf\u53d1\u9001\u5230\u7f51\u7ad9\uff0c\u5206\u4eab\u7ed9\u5176\u4ed6\u4eba\u3002 $ docker login Username: your_user_name Password: Email: your_email@foo.bar Login Successful! $ docker push \u201cyour_user_name/myapp\u201d","title":"08 docker-basic-RYF"},{"location":"03-docker/08%20docker-basic-RYF/#docker","text":"","title":"docker \u57fa\u672c\u77e5\u8bc6"},{"location":"03-docker/08%20docker-basic-RYF/#docker-composeyml","text":"\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u7684 docker-compose.yml \u6587\u4ef6\uff0c\u662f\u9879\u76ee\u7684 Docker \u914d\u7f6e\u6587\u4ef6\u3002 # version 2 of the Docker Compose file format \u7f16\u8bd1\u6587\u4ef6\u7684\u7248\u672c\u53f7 version: '2' # sets up a persistable filesystem volume \u53ef\u6301\u7eed\u7684\u6587\u4ef6\u7cfb\u7edf\u5377 volumes: database_data: driver: local services: # create a container called nginx, \u521b\u5efa\u4e00\u4e2anginx\u6700\u65b0\u7248\u672c\u5bb9\u5668 # which can be referred to by the other containers using the hostname nginx. # It will use the latest, official, Docker Nginx container image as the base for the container. nginx: image: nginx:latest # port 80 in the container to port 8080 on our host machine access our application by navigating to http://localhost:8080 ports: - 8080 :80 # copy ./docker/nginx/default.conf from the local filesystem # to /etc/nginx/conf.d/default.conf in the container\u2019s filesystem volumes: - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf # the container gets access to a filesystem volume in the PHP container volumes_from: - php php: build: ./docker/php/ expose: - 9000 volumes: - .:/var/www/html","title":"docker-compose.yml"},{"location":"03-docker/08%20docker-basic-RYF/#dockerfile","text":"FROM nodesource/node:4 RUN mkdir -p /home/nodejs/app WORKDIR /home/nodejs/app COPY . /home/nodejs/app RUN npm install --production CMD [ \"node\" , \"index.js\" ] \u4e0a\u9762\u4ee3\u7801\u7684\u542b\u4e49\u5982\u4e0b\u3002 FROM nodesource/node:4 \u4e0a\u9762\u4ee3\u7801\u6307\u5b9a Dockerfile \u7684\u955c\u50cf\uff0c\u8868\u793a\u662f NodeSource \u7ef4\u62a4\u7684 Node \u955c\u50cf\uff0c4.x \u7248\u672c\u3002 RUN mkdir -p /home/nodejs/app WORKDIR /home/nodejs/app \u4e0a\u9762\u547d\u4ee4\u65b0\u5efa\u4e00\u4e2a\u5de5\u4f5c\u76ee\u5f55\uff0c WORKDIR \u7c7b\u4f3c\u4e8e cd \u547d\u4ee4\uff0c\u7528\u6765\u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55\u3002 COPY . /home/nodejs/app \u4e0a\u9762\u547d\u4ee4\u5c06 Dockerfile \u6240\u5728\u76ee\u5f55\u7684\u6587\u4ef6\uff0c\u62f7\u8d1d\u5230\u6307\u5b9a\u76ee\u5f55\u3002 RUN npm install --production \u4e0a\u9762\u547d\u4ee4\u5b89\u88c5\u9879\u76ee\u7684\u4f9d\u8d56\u3002 CMD [\"node\", \"index.js\"] S \u4e0a\u9762\u547d\u4ee4\u5728\u547d\u4ee4\u884c\u4e0b\u6267\u884c\u6307\u5b9a\u547d\u4ee4\u3002 \u6700\u540e\uff0c\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ docker build -t myapp \u4e0a\u9762\u547d\u4ee4\u4f1a\u6267\u884c\u524d\u9762\u7684 Dockerfile \u6587\u4ef6\uff0c\u8fdb\u884c\u955c\u50cf\u6784\u5efa\uff0c\u5e76\u4e14\u6307\u5b9a\u955c\u50cf\u540d\u4e3a myapp \u3002 \u6784\u5efa\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u542f\u52a8\u955c\u50cf\u3002 $ docker run -it \"myapp\" \u4e0a\u9762\u547d\u4ee4\u4e2d\u7684 -it \u53c2\u6570\uff0c\u8868\u793a\u7ed1\u5b9a\u672c\u673a\u7684\u6807\u51c6\u8f93\u51fa/\u6807\u51c6\u8f93\u5165/\u6807\u51c6\u9519\u8bef\u3002 \u4f60\u8fd8\u53ef\u4ee5\u5c06\u955c\u50cf\u53d1\u9001\u5230\u7f51\u7ad9\uff0c\u5206\u4eab\u7ed9\u5176\u4ed6\u4eba\u3002 $ docker login Username: your_user_name Password: Email: your_email@foo.bar Login Successful! $ docker push \u201cyour_user_name/myapp\u201d","title":"Dockerfile"},{"location":"03-docker/09%20Nginx%20%E5%AE%B9%E5%99%A8%E6%95%99%E7%A8%8B/","text":"Nginx \u5bb9\u5668\u6559\u7a0b \u00b6 \u4f5c\u8005\uff1a \u962e\u4e00\u5cf0 \u65e5\u671f\uff1a 2018 \u5e74 2 \u6708 27 \u65e5 \u6625\u8282\u524d\uff0c\u6211\u770b\u5230 Nginx \u52a0\u5165 \u4e86 HTTP/2 \u7684 server push \u529f\u80fd\uff0c\u5c31\u5f88\u60f3\u8bd5\u4e00\u4e0b\u3002 \u6b63\u597d\u8fd9\u4e9b\u5929\uff0c\u6211\u5728\u5b66\u4e60 Docker \uff0c\u5c31\u60f3\u5230\u53ef\u4ee5\u7528 Nginx \u5bb9\u5668 \u3002\u4e07\u4e00\u54ea\u91cc\u6539\u4e71\u4e86\uff0c\u76f4\u63a5\u5220\u6389\uff0c\u518d\u91cd\u542f\u4e00\u4e2a\u5bb9\u5668\u5c31\u53ef\u4ee5\u4e86\u3002 \u4e0b\u9762\u5c31\u662f\u6211\u642d\u5efa Nginx \u5bb9\u5668\u7684\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u5982\u4f55\u52a0\u5165 SSL \u8bc1\u4e66\u3002\u4f60\u4f1a\u770b\u5230 Docker \u7528\u6765\u6d4b\u8bd5\u8f6f\u4ef6\u7684\u65b0\u529f\u80fd\uff0c\u771f\u7684\u5f88\u65b9\u4fbf\uff0c\u5f88\u503c\u5f97\u5b66\u4e60\u3002\u5982\u679c\u4f60\u8fd8\u4e0d\u4f1a Docker\uff0c\u53ef\u4ee5\u5148\u770b \u300aDocker \u5165\u95e8\u6559\u7a0b\u300b \uff0c\u975e\u5e38\u7b80\u5355\uff0c\u534a\u5c0f\u65f6\u4ee5\u5185\u5c31\u80fd\u5b66\u4f1a\u3002 \u4e00\u3001HTTP \u670d\u52a1 \u00b6 Nginx \u7684\u6700\u5927\u4f5c\u7528\uff0c\u5c31\u662f\u642d\u5efa\u4e00\u4e2a Web Server\u3002\u6709\u4e86\u5bb9\u5668\uff0c\u53ea\u8981\u4e00\u884c\u547d\u4ee4\uff0c\u670d\u52a1\u5668\u5c31\u67b6\u8bbe\u597d\u4e86\uff0c\u5b8c\u5168\u4e0d\u7528\u914d\u7f6e\u3002 $ docker container run \\ -d \\ -p 127 .0.0.2:8080:80 \\ --rm \\ --name mynginx \\ nginx \u4e0a\u9762\u547d\u4ee4\u4e0b\u8f7d\u5e76\u8fd0\u884c\u5b98\u65b9\u7684 Nginx image \uff0c\u9ed8\u8ba4\u662f\u6700\u65b0\u7248\u672c\uff08latest\uff09\uff0c\u5f53\u524d\u662f 1.13.9\u3002\u5982\u679c\u672c\u673a\u5b89\u88c5\u8fc7\u4ee5\u524d\u7684\u7248\u672c\uff0c\u8bf7\u5220\u6389\u91cd\u65b0\u5b89\u88c5\uff0c\u56e0\u4e3a\u53ea\u6709 1.13.9 \u624d\u5f00\u59cb\u652f\u6301 server push\u3002 \u4e0a\u9762\u547d\u4ee4\u7684\u5404\u4e2a\u53c2\u6570\u542b\u4e49\u5982\u4e0b\u3002 -d \uff1a\u5728\u540e\u53f0\u8fd0\u884c -p \uff1a\u5bb9\u5668\u7684 80 \u7aef\u53e3\u6620\u5c04\u5230 127.0.0.2:8080 --rm \uff1a\u5bb9\u5668\u505c\u6b62\u8fd0\u884c\u540e\uff0c\u81ea\u52a8\u5220\u9664\u5bb9\u5668\u6587\u4ef6 --name \uff1a\u5bb9\u5668\u7684\u540d\u5b57\u4e3a mynginx \u5982\u679c\u6ca1\u6709\u62a5\u9519\uff0c\u5c31\u53ef\u4ee5\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee 127.0.0.2:8080 \u4e86\u3002\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u663e\u793a Nginx \u7684\u6b22\u8fce\u9875\u3002 \u7136\u540e\uff0c\u628a\u8fd9\u4e2a\u5bb9\u5668\u7ec8\u6b62\uff0c\u7531\u4e8e --rm \u53c2\u6570\u7684\u4f5c\u7528\uff0c\u5bb9\u5668\u6587\u4ef6\u4f1a\u81ea\u52a8\u5220\u9664\u3002 $ docker container stop mynginx \u4e8c\u3001\u6620\u5c04\u7f51\u9875\u76ee\u5f55 \u00b6 \u7f51\u9875\u6587\u4ef6\u90fd\u5728\u5bb9\u5668\u91cc\uff0c\u6ca1\u6cd5\u76f4\u63a5\u4fee\u6539\uff0c\u663e\u7136\u5f88\u4e0d\u65b9\u4fbf\u3002\u4e0b\u4e00\u6b65\u5c31\u662f\u8ba9\u7f51\u9875\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55 /usr/share/nginx/html \u6620\u5c04\u5230\u672c\u5730\u3002 \u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u5e76\u8fdb\u5165\u8be5\u76ee\u5f55\u3002 $ mkdir nginx-docker-demo $ cd nginx-docker-demo \u7136\u540e\uff0c\u65b0\u5efa\u4e00\u4e2a html \u5b50\u76ee\u5f55\u3002 $ mkdir html \u5728\u8fd9\u4e2a\u5b50\u76ee\u5f55\u91cc\u9762\uff0c\u653e\u7f6e\u4e00\u4e2a index.html \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\u3002 <h1>Hello World</h1> \u63a5\u7740\uff0c\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5b50\u76ee\u5f55 html \uff0c\u6620\u5c04\u5230\u5bb9\u5668\u7684\u7f51\u9875\u6587\u4ef6\u76ee\u5f55 /usr/share/nginx/html \u3002 $ docker container run \\ -d \\ -p 127 .0.0.2:8080:80 \\ --rm \\ --name mynginx \\ --volume \" $PWD /html\" :/usr/share/nginx/html \\ nginx \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee 127.0.0.2:8080\uff0c\u5e94\u8be5\u5c31\u80fd\u770b\u5230 Hello World \u4e86\u3002 \u4e09\u3001\u62f7\u8d1d\u914d\u7f6e \u00b6 \u4fee\u6539\u7f51\u9875\u6587\u4ef6\u8fd8\u4e0d\u591f\uff0c\u8fd8\u8981\u4fee\u6539 Nginx \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5426\u5219\u540e\u9762\u6ca1\u6cd5\u52a0 SSL \u652f\u6301\u3002 \u9996\u5148\uff0c\u628a\u5bb9\u5668\u91cc\u9762\u7684 Nginx \u914d\u7f6e\u6587\u4ef6\u62f7\u8d1d\u5230\u672c\u5730\u3002 $ docker container cp mynginx:/etc/nginx . \u4e0a\u9762\u547d\u4ee4\u7684\u542b\u4e49\u662f\uff0c\u628a mynginx \u5bb9\u5668\u7684 /etc/nginx \u62f7\u8d1d\u5230\u5f53\u524d\u76ee\u5f55\u3002\u4e0d\u8981\u6f0f\u6389\u6700\u540e\u90a3\u4e2a\u70b9\u3002 \u6267\u884c\u5b8c\u6210\u540e\uff0c\u5f53\u524d\u76ee\u5f55\u5e94\u8be5\u591a\u51fa\u4e00\u4e2a nginx \u5b50\u76ee\u5f55\u3002\u7136\u540e\uff0c\u628a\u8fd9\u4e2a\u5b50\u76ee\u5f55\u6539\u540d\u4e3a conf \u3002 $ mv nginx conf \u73b0\u5728\u53ef\u4ee5\u628a\u5bb9\u5668\u7ec8\u6b62\u4e86\u3002 $ docker container stop mynginx \u56db\u3001\u6620\u5c04\u914d\u7f6e\u76ee\u5f55 \u00b6 \u91cd\u65b0\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\uff0c\u8fd9\u6b21\u4e0d\u4ec5\u6620\u5c04\u7f51\u9875\u76ee\u5f55\uff0c\u8fd8\u8981\u6620\u5c04\u914d\u7f6e\u76ee\u5f55\u3002 $ docker container run \\ --rm \\ --name mynginx \\ --volume \" $PWD /html\" :/usr/share/nginx/html \\ --volume \" $PWD /conf\" :/etc/nginx \\ -p 127 .0.0.2:8080:80 \\ -d \\ nginx \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c --volume \"$PWD/conf\":/etc/nginx \u8868\u793a\u628a\u5bb9\u5668\u7684\u914d\u7f6e\u76ee\u5f55 /etc/nginx \uff0c\u6620\u5c04\u5230\u672c\u5730\u7684 conf \u5b50\u76ee\u5f55\u3002 \u6d4f\u89c8\u5668\u8bbf\u95ee 127.0.0.2:8080\uff0c\u5982\u679c\u80fd\u591f\u770b\u5230\u7f51\u9875\uff0c\u5c31\u8bf4\u660e\u672c\u5730\u7684\u914d\u7f6e\u751f\u6548\u4e86\u3002\u8fd9\u65f6\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5bb9\u5668\u7ec8\u6b62\u3002 $ docker container stop mynginx \u4e94\u3001\u81ea\u7b7e\u540d\u8bc1\u4e66 \u00b6 \u73b0\u5728\u8981\u4e3a\u5bb9\u5668\u52a0\u5165 HTTPS \u652f\u6301\uff0c\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u751f\u6210\u79c1\u94a5\u548c\u8bc1\u4e66\u3002\u6b63\u5f0f\u7684\u8bc1\u4e66\u9700\u8981\u8bc1\u4e66\u5f53\u5c40\uff08CA\uff09\u7684\u7b7e\u540d\uff0c\u8fd9\u91cc\u662f\u4e3a\u4e86\u6d4b\u8bd5\uff0c\u641e\u4e00\u5f20\u81ea\u7b7e\u540d\uff08self-signed\uff09\u8bc1\u4e66\u5c31\u53ef\u4ee5\u4e86\u3002 \u4e0b\u9762\uff0c\u6211\u53c2\u8003\u7684\u662f DigitalOcean \u7684\u6559\u7a0b\u3002\u9996\u5148\uff0c\u786e\u5b9a\u4f60\u7684\u673a\u5668\u5b89\u88c5\u4e86 OpenSSL \uff0c\u7136\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ sudo openssl req \\ -x509 \\ -nodes \\ -days 365 \\ -newkey rsa:2048 \\ -keyout example.key \\ -out example.crt \u4e0a\u9762\u547d\u4ee4\u7684\u5404\u4e2a\u53c2\u6570\u542b\u4e49\u5982\u4e0b\u3002 req \uff1a\u5904\u7406\u8bc1\u4e66\u7b7e\u7f72\u8bf7\u6c42\u3002 -x509 \uff1a\u751f\u6210\u81ea\u7b7e\u540d\u8bc1\u4e66\u3002 -nodes \uff1a\u8df3\u8fc7\u4e3a\u8bc1\u4e66\u8bbe\u7f6e\u5bc6\u7801\u7684\u9636\u6bb5\uff0c\u8fd9\u6837 Nginx \u624d\u53ef\u4ee5\u76f4\u63a5\u6253\u5f00\u8bc1\u4e66\u3002 -days 365 \uff1a\u8bc1\u4e66\u6709\u6548\u671f\u4e3a\u4e00\u5e74\u3002 -newkey rsa:2048 \uff1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u79c1\u94a5\uff0c\u91c7\u7528\u7684\u7b97\u6cd5\u662f 2048 \u4f4d\u7684 RSA\u3002 -keyout \uff1a\u65b0\u751f\u6210\u7684\u79c1\u94a5\u6587\u4ef6\u4e3a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 example.key \u3002 -out \uff1a\u65b0\u751f\u6210\u7684\u8bc1\u4e66\u6587\u4ef6\u4e3a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 example.crt \u3002 \u6267\u884c\u540e\uff0c\u547d\u4ee4\u884c\u4f1a\u8df3\u51fa\u4e00\u5806\u95ee\u9898\u8981\u4f60\u56de\u7b54\uff0c\u6bd4\u5982\u4f60\u5728\u54ea\u4e2a\u56fd\u5bb6\u3001\u4f60\u7684 Email \u7b49\u7b49\u3002 \u5176\u4e2d\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u95ee\u9898\u662f Common Name\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u5e94\u8be5\u586b\u5165\u4e00\u4e2a\u57df\u540d\uff0c\u8fd9\u91cc\u53ef\u4ee5\u586b 127.0.0.2\u3002 Common Name ( e.g. server FQDN or YOUR name ) [] :127.0.0.2 \u56de\u7b54\u5b8c\u95ee\u9898\uff0c\u5f53\u524d\u76ee\u5f55\u5e94\u8be5\u4f1a\u591a\u51fa\u4e24\u4e2a\u6587\u4ef6\uff1a example.key \u548c example.crt \u3002 conf \u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a\u5b50\u76ee\u5f55 certs \uff0c\u628a\u8fd9\u4e24\u4e2a\u6587\u4ef6\u653e\u5165\u8fd9\u4e2a\u5b50\u76ee\u5f55\u3002 $ mkdir conf/certs $ mv example.crt example.key conf/certs \u516d\u3001HTTPS \u914d\u7f6e \u00b6 \u6709\u4e86\u79c1\u94a5\u548c\u8bc1\u4e66\uff0c\u5c31\u53ef\u4ee5\u6253\u5f00 Nginx \u7684 HTTPS \u4e86\u3002 \u9996\u5148\uff0c\u6253\u5f00 conf/conf.d/default.conf \u6587\u4ef6\uff0c\u5728\u7ed3\u5c3e\u6dfb\u52a0\u4e0b\u9762\u7684\u914d\u7f6e\u3002 server { listen 443 ssl http2 ; server_name localhost ; ssl on ; ssl_certificate /etc/nginx/certs/example.crt ; ssl_certificate_key /etc/nginx/certs/example.key ; ssl_session_timeout 5m ; ssl_ciphers HIGH:!aNULL:!MD5 ; ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2 ; ssl_prefer_server_ciphers on ; location / { root /usr/share/nginx/html ; index index.html index.htm ; } } \u7136\u540e\uff0c\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Nginx \u5bb9\u5668\u3002 $ docker container run \\ --rm \\ --name mynginx \\ --volume \" $PWD /html\" :/usr/share/nginx/html \\ --volume \" $PWD /conf\" :/etc/nginx \\ -p 127 .0.0.2:8080:80 \\ -p 127 .0.0.2:8081:443 \\ -d \\ nginx \u4e0a\u9762\u547d\u4ee4\u4e2d\uff0c\u4e0d\u4ec5\u6620\u5c04\u4e86\u5bb9\u5668\u7684 80 \u7aef\u53e3\uff0c\u8fd8\u6620\u5c04\u4e86 443 \u7aef\u53e3\uff0c\u8fd9\u662f HTTPS \u7684\u4e13\u7528\u7aef\u53e3\u3002 \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee https://127.0.0.2:8081/ \u3002\u56e0\u4e3a\u4f7f\u7528\u4e86\u81ea\u7b7e\u540d\u8bc1\u4e66\uff0c\u6d4f\u89c8\u5668\u4f1a\u63d0\u793a\u4e0d\u5b89\u5168\u3002\u4e0d\u8981\u53bb\u7ba1\u5b83\uff0c\u9009\u62e9\u7ee7\u7eed\u8bbf\u95ee\uff0c\u5e94\u8be5\u5c31\u53ef\u4ee5\u770b\u5230 Hello World \u4e86\u3002 \u81f3\u6b64\uff0cNginx \u5bb9\u5668\u7684 HTTPS \u652f\u6301\u5c31\u505a\u597d\u4e86\u3002\u6709\u4e86\u8fd9\u4e2a\u5bb9\u5668\uff0c\u4e0b\u4e00\u7bc7\u6587\u7ae0\uff0c\u6211\u5c31\u6765\u8bd5\u9a8c HTTP/2 \u7684 server push \u529f\u80fd\u3002 \u4e03\u3001\u53c2\u8003\u94fe\u63a5 \u00b6 Tips for deploying nginx(official image) with docker , by Mario Ponticello How To Run Nginx in a Docker Container on Ubuntu 14.04 , by Thomas Taege Official Docker Library docs , by Docker How To Create a Self-Signed SSL Certificate for Nginx in Ubuntu 16.04 , by Justin Ellingwood \uff08\u5b8c\uff09","title":"09 Nginx \u5bb9\u5668\u6559\u7a0b"},{"location":"03-docker/09%20Nginx%20%E5%AE%B9%E5%99%A8%E6%95%99%E7%A8%8B/#nginx","text":"\u4f5c\u8005\uff1a \u962e\u4e00\u5cf0 \u65e5\u671f\uff1a 2018 \u5e74 2 \u6708 27 \u65e5 \u6625\u8282\u524d\uff0c\u6211\u770b\u5230 Nginx \u52a0\u5165 \u4e86 HTTP/2 \u7684 server push \u529f\u80fd\uff0c\u5c31\u5f88\u60f3\u8bd5\u4e00\u4e0b\u3002 \u6b63\u597d\u8fd9\u4e9b\u5929\uff0c\u6211\u5728\u5b66\u4e60 Docker \uff0c\u5c31\u60f3\u5230\u53ef\u4ee5\u7528 Nginx \u5bb9\u5668 \u3002\u4e07\u4e00\u54ea\u91cc\u6539\u4e71\u4e86\uff0c\u76f4\u63a5\u5220\u6389\uff0c\u518d\u91cd\u542f\u4e00\u4e2a\u5bb9\u5668\u5c31\u53ef\u4ee5\u4e86\u3002 \u4e0b\u9762\u5c31\u662f\u6211\u642d\u5efa Nginx \u5bb9\u5668\u7684\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u5982\u4f55\u52a0\u5165 SSL \u8bc1\u4e66\u3002\u4f60\u4f1a\u770b\u5230 Docker \u7528\u6765\u6d4b\u8bd5\u8f6f\u4ef6\u7684\u65b0\u529f\u80fd\uff0c\u771f\u7684\u5f88\u65b9\u4fbf\uff0c\u5f88\u503c\u5f97\u5b66\u4e60\u3002\u5982\u679c\u4f60\u8fd8\u4e0d\u4f1a Docker\uff0c\u53ef\u4ee5\u5148\u770b \u300aDocker \u5165\u95e8\u6559\u7a0b\u300b \uff0c\u975e\u5e38\u7b80\u5355\uff0c\u534a\u5c0f\u65f6\u4ee5\u5185\u5c31\u80fd\u5b66\u4f1a\u3002","title":"Nginx \u5bb9\u5668\u6559\u7a0b"},{"location":"03-docker/09%20Nginx%20%E5%AE%B9%E5%99%A8%E6%95%99%E7%A8%8B/#http","text":"Nginx \u7684\u6700\u5927\u4f5c\u7528\uff0c\u5c31\u662f\u642d\u5efa\u4e00\u4e2a Web Server\u3002\u6709\u4e86\u5bb9\u5668\uff0c\u53ea\u8981\u4e00\u884c\u547d\u4ee4\uff0c\u670d\u52a1\u5668\u5c31\u67b6\u8bbe\u597d\u4e86\uff0c\u5b8c\u5168\u4e0d\u7528\u914d\u7f6e\u3002 $ docker container run \\ -d \\ -p 127 .0.0.2:8080:80 \\ --rm \\ --name mynginx \\ nginx \u4e0a\u9762\u547d\u4ee4\u4e0b\u8f7d\u5e76\u8fd0\u884c\u5b98\u65b9\u7684 Nginx image \uff0c\u9ed8\u8ba4\u662f\u6700\u65b0\u7248\u672c\uff08latest\uff09\uff0c\u5f53\u524d\u662f 1.13.9\u3002\u5982\u679c\u672c\u673a\u5b89\u88c5\u8fc7\u4ee5\u524d\u7684\u7248\u672c\uff0c\u8bf7\u5220\u6389\u91cd\u65b0\u5b89\u88c5\uff0c\u56e0\u4e3a\u53ea\u6709 1.13.9 \u624d\u5f00\u59cb\u652f\u6301 server push\u3002 \u4e0a\u9762\u547d\u4ee4\u7684\u5404\u4e2a\u53c2\u6570\u542b\u4e49\u5982\u4e0b\u3002 -d \uff1a\u5728\u540e\u53f0\u8fd0\u884c -p \uff1a\u5bb9\u5668\u7684 80 \u7aef\u53e3\u6620\u5c04\u5230 127.0.0.2:8080 --rm \uff1a\u5bb9\u5668\u505c\u6b62\u8fd0\u884c\u540e\uff0c\u81ea\u52a8\u5220\u9664\u5bb9\u5668\u6587\u4ef6 --name \uff1a\u5bb9\u5668\u7684\u540d\u5b57\u4e3a mynginx \u5982\u679c\u6ca1\u6709\u62a5\u9519\uff0c\u5c31\u53ef\u4ee5\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee 127.0.0.2:8080 \u4e86\u3002\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u663e\u793a Nginx \u7684\u6b22\u8fce\u9875\u3002 \u7136\u540e\uff0c\u628a\u8fd9\u4e2a\u5bb9\u5668\u7ec8\u6b62\uff0c\u7531\u4e8e --rm \u53c2\u6570\u7684\u4f5c\u7528\uff0c\u5bb9\u5668\u6587\u4ef6\u4f1a\u81ea\u52a8\u5220\u9664\u3002 $ docker container stop mynginx","title":"\u4e00\u3001HTTP \u670d\u52a1"},{"location":"03-docker/09%20Nginx%20%E5%AE%B9%E5%99%A8%E6%95%99%E7%A8%8B/#_1","text":"\u7f51\u9875\u6587\u4ef6\u90fd\u5728\u5bb9\u5668\u91cc\uff0c\u6ca1\u6cd5\u76f4\u63a5\u4fee\u6539\uff0c\u663e\u7136\u5f88\u4e0d\u65b9\u4fbf\u3002\u4e0b\u4e00\u6b65\u5c31\u662f\u8ba9\u7f51\u9875\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55 /usr/share/nginx/html \u6620\u5c04\u5230\u672c\u5730\u3002 \u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a\u76ee\u5f55\uff0c\u5e76\u8fdb\u5165\u8be5\u76ee\u5f55\u3002 $ mkdir nginx-docker-demo $ cd nginx-docker-demo \u7136\u540e\uff0c\u65b0\u5efa\u4e00\u4e2a html \u5b50\u76ee\u5f55\u3002 $ mkdir html \u5728\u8fd9\u4e2a\u5b50\u76ee\u5f55\u91cc\u9762\uff0c\u653e\u7f6e\u4e00\u4e2a index.html \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\u3002 <h1>Hello World</h1> \u63a5\u7740\uff0c\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5b50\u76ee\u5f55 html \uff0c\u6620\u5c04\u5230\u5bb9\u5668\u7684\u7f51\u9875\u6587\u4ef6\u76ee\u5f55 /usr/share/nginx/html \u3002 $ docker container run \\ -d \\ -p 127 .0.0.2:8080:80 \\ --rm \\ --name mynginx \\ --volume \" $PWD /html\" :/usr/share/nginx/html \\ nginx \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee 127.0.0.2:8080\uff0c\u5e94\u8be5\u5c31\u80fd\u770b\u5230 Hello World \u4e86\u3002","title":"\u4e8c\u3001\u6620\u5c04\u7f51\u9875\u76ee\u5f55"},{"location":"03-docker/09%20Nginx%20%E5%AE%B9%E5%99%A8%E6%95%99%E7%A8%8B/#_2","text":"\u4fee\u6539\u7f51\u9875\u6587\u4ef6\u8fd8\u4e0d\u591f\uff0c\u8fd8\u8981\u4fee\u6539 Nginx \u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u5426\u5219\u540e\u9762\u6ca1\u6cd5\u52a0 SSL \u652f\u6301\u3002 \u9996\u5148\uff0c\u628a\u5bb9\u5668\u91cc\u9762\u7684 Nginx \u914d\u7f6e\u6587\u4ef6\u62f7\u8d1d\u5230\u672c\u5730\u3002 $ docker container cp mynginx:/etc/nginx . \u4e0a\u9762\u547d\u4ee4\u7684\u542b\u4e49\u662f\uff0c\u628a mynginx \u5bb9\u5668\u7684 /etc/nginx \u62f7\u8d1d\u5230\u5f53\u524d\u76ee\u5f55\u3002\u4e0d\u8981\u6f0f\u6389\u6700\u540e\u90a3\u4e2a\u70b9\u3002 \u6267\u884c\u5b8c\u6210\u540e\uff0c\u5f53\u524d\u76ee\u5f55\u5e94\u8be5\u591a\u51fa\u4e00\u4e2a nginx \u5b50\u76ee\u5f55\u3002\u7136\u540e\uff0c\u628a\u8fd9\u4e2a\u5b50\u76ee\u5f55\u6539\u540d\u4e3a conf \u3002 $ mv nginx conf \u73b0\u5728\u53ef\u4ee5\u628a\u5bb9\u5668\u7ec8\u6b62\u4e86\u3002 $ docker container stop mynginx","title":"\u4e09\u3001\u62f7\u8d1d\u914d\u7f6e"},{"location":"03-docker/09%20Nginx%20%E5%AE%B9%E5%99%A8%E6%95%99%E7%A8%8B/#_3","text":"\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\uff0c\u8fd9\u6b21\u4e0d\u4ec5\u6620\u5c04\u7f51\u9875\u76ee\u5f55\uff0c\u8fd8\u8981\u6620\u5c04\u914d\u7f6e\u76ee\u5f55\u3002 $ docker container run \\ --rm \\ --name mynginx \\ --volume \" $PWD /html\" :/usr/share/nginx/html \\ --volume \" $PWD /conf\" :/etc/nginx \\ -p 127 .0.0.2:8080:80 \\ -d \\ nginx \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c --volume \"$PWD/conf\":/etc/nginx \u8868\u793a\u628a\u5bb9\u5668\u7684\u914d\u7f6e\u76ee\u5f55 /etc/nginx \uff0c\u6620\u5c04\u5230\u672c\u5730\u7684 conf \u5b50\u76ee\u5f55\u3002 \u6d4f\u89c8\u5668\u8bbf\u95ee 127.0.0.2:8080\uff0c\u5982\u679c\u80fd\u591f\u770b\u5230\u7f51\u9875\uff0c\u5c31\u8bf4\u660e\u672c\u5730\u7684\u914d\u7f6e\u751f\u6548\u4e86\u3002\u8fd9\u65f6\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e2a\u5bb9\u5668\u7ec8\u6b62\u3002 $ docker container stop mynginx","title":"\u56db\u3001\u6620\u5c04\u914d\u7f6e\u76ee\u5f55"},{"location":"03-docker/09%20Nginx%20%E5%AE%B9%E5%99%A8%E6%95%99%E7%A8%8B/#_4","text":"\u73b0\u5728\u8981\u4e3a\u5bb9\u5668\u52a0\u5165 HTTPS \u652f\u6301\uff0c\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u751f\u6210\u79c1\u94a5\u548c\u8bc1\u4e66\u3002\u6b63\u5f0f\u7684\u8bc1\u4e66\u9700\u8981\u8bc1\u4e66\u5f53\u5c40\uff08CA\uff09\u7684\u7b7e\u540d\uff0c\u8fd9\u91cc\u662f\u4e3a\u4e86\u6d4b\u8bd5\uff0c\u641e\u4e00\u5f20\u81ea\u7b7e\u540d\uff08self-signed\uff09\u8bc1\u4e66\u5c31\u53ef\u4ee5\u4e86\u3002 \u4e0b\u9762\uff0c\u6211\u53c2\u8003\u7684\u662f DigitalOcean \u7684\u6559\u7a0b\u3002\u9996\u5148\uff0c\u786e\u5b9a\u4f60\u7684\u673a\u5668\u5b89\u88c5\u4e86 OpenSSL \uff0c\u7136\u540e\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ sudo openssl req \\ -x509 \\ -nodes \\ -days 365 \\ -newkey rsa:2048 \\ -keyout example.key \\ -out example.crt \u4e0a\u9762\u547d\u4ee4\u7684\u5404\u4e2a\u53c2\u6570\u542b\u4e49\u5982\u4e0b\u3002 req \uff1a\u5904\u7406\u8bc1\u4e66\u7b7e\u7f72\u8bf7\u6c42\u3002 -x509 \uff1a\u751f\u6210\u81ea\u7b7e\u540d\u8bc1\u4e66\u3002 -nodes \uff1a\u8df3\u8fc7\u4e3a\u8bc1\u4e66\u8bbe\u7f6e\u5bc6\u7801\u7684\u9636\u6bb5\uff0c\u8fd9\u6837 Nginx \u624d\u53ef\u4ee5\u76f4\u63a5\u6253\u5f00\u8bc1\u4e66\u3002 -days 365 \uff1a\u8bc1\u4e66\u6709\u6548\u671f\u4e3a\u4e00\u5e74\u3002 -newkey rsa:2048 \uff1a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u79c1\u94a5\uff0c\u91c7\u7528\u7684\u7b97\u6cd5\u662f 2048 \u4f4d\u7684 RSA\u3002 -keyout \uff1a\u65b0\u751f\u6210\u7684\u79c1\u94a5\u6587\u4ef6\u4e3a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 example.key \u3002 -out \uff1a\u65b0\u751f\u6210\u7684\u8bc1\u4e66\u6587\u4ef6\u4e3a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 example.crt \u3002 \u6267\u884c\u540e\uff0c\u547d\u4ee4\u884c\u4f1a\u8df3\u51fa\u4e00\u5806\u95ee\u9898\u8981\u4f60\u56de\u7b54\uff0c\u6bd4\u5982\u4f60\u5728\u54ea\u4e2a\u56fd\u5bb6\u3001\u4f60\u7684 Email \u7b49\u7b49\u3002 \u5176\u4e2d\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u95ee\u9898\u662f Common Name\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u5e94\u8be5\u586b\u5165\u4e00\u4e2a\u57df\u540d\uff0c\u8fd9\u91cc\u53ef\u4ee5\u586b 127.0.0.2\u3002 Common Name ( e.g. server FQDN or YOUR name ) [] :127.0.0.2 \u56de\u7b54\u5b8c\u95ee\u9898\uff0c\u5f53\u524d\u76ee\u5f55\u5e94\u8be5\u4f1a\u591a\u51fa\u4e24\u4e2a\u6587\u4ef6\uff1a example.key \u548c example.crt \u3002 conf \u76ee\u5f55\u4e0b\u65b0\u5efa\u4e00\u4e2a\u5b50\u76ee\u5f55 certs \uff0c\u628a\u8fd9\u4e24\u4e2a\u6587\u4ef6\u653e\u5165\u8fd9\u4e2a\u5b50\u76ee\u5f55\u3002 $ mkdir conf/certs $ mv example.crt example.key conf/certs","title":"\u4e94\u3001\u81ea\u7b7e\u540d\u8bc1\u4e66"},{"location":"03-docker/09%20Nginx%20%E5%AE%B9%E5%99%A8%E6%95%99%E7%A8%8B/#https","text":"\u6709\u4e86\u79c1\u94a5\u548c\u8bc1\u4e66\uff0c\u5c31\u53ef\u4ee5\u6253\u5f00 Nginx \u7684 HTTPS \u4e86\u3002 \u9996\u5148\uff0c\u6253\u5f00 conf/conf.d/default.conf \u6587\u4ef6\uff0c\u5728\u7ed3\u5c3e\u6dfb\u52a0\u4e0b\u9762\u7684\u914d\u7f6e\u3002 server { listen 443 ssl http2 ; server_name localhost ; ssl on ; ssl_certificate /etc/nginx/certs/example.crt ; ssl_certificate_key /etc/nginx/certs/example.key ; ssl_session_timeout 5m ; ssl_ciphers HIGH:!aNULL:!MD5 ; ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2 ; ssl_prefer_server_ciphers on ; location / { root /usr/share/nginx/html ; index index.html index.htm ; } } \u7136\u540e\uff0c\u542f\u52a8\u4e00\u4e2a\u65b0\u7684 Nginx \u5bb9\u5668\u3002 $ docker container run \\ --rm \\ --name mynginx \\ --volume \" $PWD /html\" :/usr/share/nginx/html \\ --volume \" $PWD /conf\" :/etc/nginx \\ -p 127 .0.0.2:8080:80 \\ -p 127 .0.0.2:8081:443 \\ -d \\ nginx \u4e0a\u9762\u547d\u4ee4\u4e2d\uff0c\u4e0d\u4ec5\u6620\u5c04\u4e86\u5bb9\u5668\u7684 80 \u7aef\u53e3\uff0c\u8fd8\u6620\u5c04\u4e86 443 \u7aef\u53e3\uff0c\u8fd9\u662f HTTPS \u7684\u4e13\u7528\u7aef\u53e3\u3002 \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee https://127.0.0.2:8081/ \u3002\u56e0\u4e3a\u4f7f\u7528\u4e86\u81ea\u7b7e\u540d\u8bc1\u4e66\uff0c\u6d4f\u89c8\u5668\u4f1a\u63d0\u793a\u4e0d\u5b89\u5168\u3002\u4e0d\u8981\u53bb\u7ba1\u5b83\uff0c\u9009\u62e9\u7ee7\u7eed\u8bbf\u95ee\uff0c\u5e94\u8be5\u5c31\u53ef\u4ee5\u770b\u5230 Hello World \u4e86\u3002 \u81f3\u6b64\uff0cNginx \u5bb9\u5668\u7684 HTTPS \u652f\u6301\u5c31\u505a\u597d\u4e86\u3002\u6709\u4e86\u8fd9\u4e2a\u5bb9\u5668\uff0c\u4e0b\u4e00\u7bc7\u6587\u7ae0\uff0c\u6211\u5c31\u6765\u8bd5\u9a8c HTTP/2 \u7684 server push \u529f\u80fd\u3002","title":"\u516d\u3001HTTPS \u914d\u7f6e"},{"location":"03-docker/09%20Nginx%20%E5%AE%B9%E5%99%A8%E6%95%99%E7%A8%8B/#_5","text":"Tips for deploying nginx(official image) with docker , by Mario Ponticello How To Run Nginx in a Docker Container on Ubuntu 14.04 , by Thomas Taege Official Docker Library docs , by Docker How To Create a Self-Signed SSL Certificate for Nginx in Ubuntu 16.04 , by Justin Ellingwood \uff08\u5b8c\uff09","title":"\u4e03\u3001\u53c2\u8003\u94fe\u63a5"},{"location":"04-django/01-Django%20%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D/","text":"Django \u6846\u67b6 \u00b6 Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design. Github: https://github.com/django/django \u6700\u65b0\u7a33\u5b9a\u7248\u82f1\u6587\u5b98\u65b9\u6587\u6863\uff1a https://docs.djangoproject.com/en/5.1/ \u6700\u65b0\u7a33\u5b9a\u7248\u4e2d\u6587\u5b98\u65b9\u6587\u6863\uff1a https://docs.djangoproject.com/zh-hans/5.1/ \u7248\u672c\u8bf4\u660e \u00b6 2024\u5e7410\u6708\uff0c\u6700\u65b0\u7248\u672c\u662f 5.1.2\uff0c\u5b9e\u9645\u9879\u76ee\u4e2d\u4e3b\u8981\u4f7f\u7528 4.2.x \u7248\u672c\uff08\u5b98\u7f51\u4e5f\u5728\u7ef4\u62a4\u8fd9\u4e2a\u7248\u672c\uff09\u5176\u4ed6\u7248\u672c\u5e94\u820d\u5f03 \u5b9e\u9645\u6848\u4f8b \u00b6 https://docs.djangoproject.com/zh-hans/5.1/intro/tutorial01/ \u5b9e\u9645\u6848\u4f8b\u90e8\u5206\u4ee3\u7801\u53ef\u4ee5\u653e\u5230 src \u4e2d","title":"01-Django \u6846\u67b6\u4ecb\u7ecd"},{"location":"04-django/01-Django%20%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D/#django","text":"Django is a high-level Python web framework that encourages rapid development and clean, pragmatic design. Github: https://github.com/django/django \u6700\u65b0\u7a33\u5b9a\u7248\u82f1\u6587\u5b98\u65b9\u6587\u6863\uff1a https://docs.djangoproject.com/en/5.1/ \u6700\u65b0\u7a33\u5b9a\u7248\u4e2d\u6587\u5b98\u65b9\u6587\u6863\uff1a https://docs.djangoproject.com/zh-hans/5.1/","title":"Django \u6846\u67b6"},{"location":"04-django/01-Django%20%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D/#_1","text":"2024\u5e7410\u6708\uff0c\u6700\u65b0\u7248\u672c\u662f 5.1.2\uff0c\u5b9e\u9645\u9879\u76ee\u4e2d\u4e3b\u8981\u4f7f\u7528 4.2.x \u7248\u672c\uff08\u5b98\u7f51\u4e5f\u5728\u7ef4\u62a4\u8fd9\u4e2a\u7248\u672c\uff09\u5176\u4ed6\u7248\u672c\u5e94\u820d\u5f03","title":"\u7248\u672c\u8bf4\u660e"},{"location":"04-django/01-Django%20%E6%A1%86%E6%9E%B6%E4%BB%8B%E7%BB%8D/#_2","text":"https://docs.djangoproject.com/zh-hans/5.1/intro/tutorial01/ \u5b9e\u9645\u6848\u4f8b\u90e8\u5206\u4ee3\u7801\u53ef\u4ee5\u653e\u5230 src \u4e2d","title":"\u5b9e\u9645\u6848\u4f8b"},{"location":"05-flask/no-flask-basic/","text":"Flask \u4ecb\u7ecd \u00b6 \u4ecb\u7ecd \u00b6 Flask \u4f9d\u8d56\u4e24\u4e2a\u5916\u90e8\u5e93\uff1a Werkzeug \u548c Jinja2 \u3002 Werkzeug \u662f\u4e00\u4e2a WSGI\uff08\u5728 Web \u5e94\u7528\u548c\u591a\u79cd\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6807\u51c6 Python \u63a5\u53e3) \u5de5\u5177\u96c6\u3002Jinja2 \u8d1f\u8d23\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9996\u5148\u9700\u8981 Python 2.6 \u6216\u66f4\u9ad8\u7684\u7248\u672c\uff0c\u6240\u4ee5\u8bf7\u786e\u8ba4\u6709\u4e00\u4e2a\u6700\u65b0\u7684 Python 2.x \u5b89\u88c5\u3002 \u5728 Python 3 \u4e2d\u4f7f\u7528 Flask \u8bf7\u53c2\u8003\uff1a Python 3 \u652f\u6301 \u3002 \u5b89\u88c5\u65b9\u6cd5\u4e00\uff1avirtualenv(\u865a\u62df\u73af\u5883\u5b89\u88c5) \u00b6 \u4f60\u5f88\u53ef\u80fd\u60f3\u5728\u5f00\u53d1\u4e2d\u7528\u4e0a virtualenv\uff0c\u5982\u679c\u4f60\u6709\u751f\u4ea7\u73af\u5883\u7684 shell \u6743\u9650\uff0c\u4f60\u540c\u6837\u4f1a\u4e50\u4e8e\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u5b83\u3002 virtualenv \u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f\u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u559c\u6b22 Python\uff0c\u4e0d\u4ec5\u4f1a\u5728\u91c7\u7528 Flask \u7684 Web \u5e94\u7528\u4e2d\u7528\u4e0a virtualenv\uff0c\u5728\u522b\u7684\u9879\u76ee\u4e2d\u4f60\u4e5f\u4f1a\u60f3\u7528\u4e0a\u5b83\u3002\u4f60\u62e5\u6709\u7684\u9879\u76ee\u8d8a\u591a\uff0c\u540c\u65f6\u4f7f\u7528\u4e0d\u540c\u7248\u672c\u7684 Python \u5de5\u4f5c\u7684\u53ef\u80fd\u6027\u4e5f\u5c31\u8d8a\u5927\uff0c\u6216\u8005\u8d77\u7801\u9700\u8981\u4e0d\u540c\u7248\u672c\u7684 Python \u5e93\u3002\u60b2\u60e8\u73b0\u5b9e\u662f\uff1a\u5e38\u5e38\u4f1a\u6709\u5e93\u7834\u574f\u5411\u540e\u517c\u5bb9\u6027\uff0c\u7136\u800c\u6b63\u7ecf\u5e94\u7528\u4e0d\u91c7\u7528\u5916\u90e8\u5e93\u7684\u53ef\u80fd\u5fae\u4e4e\u5176\u5fae\u3002\u5f53\u5728\u4f60\u7684\u9879\u76ee\u4e2d\uff0c\u51fa\u73b0\u4e24\u4e2a\u6216\u66f4\u591a\u4f9d\u8d56\u6027\u51b2\u7a81\u65f6\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f virtualenv \u62ef\u6551\u4e16\u754c\uff01virtualenv \u4e3a\u6bcf\u4e2a\u4e0d\u540c\u9879\u76ee\u63d0\u4f9b\u4e00\u4efd Python \u5b89\u88c5\u3002\u5b83\u5e76\u6ca1\u6709\u771f\u6b63\u5b89\u88c5\u591a\u4e2a Python \u526f\u672c\uff0c\u4f46\u662f\u5b83\u786e\u5b9e\u63d0\u4f9b\u4e86\u4e00\u79cd\u5de7\u5999\u7684\u65b9\u5f0f\u6765\u8ba9\u5404\u9879\u76ee\u73af\u5883\u4fdd\u6301\u72ec\u7acb\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b virtualenv \u662f\u600e\u4e48\u5de5\u4f5c\u7684\u3002 \u5982\u679c\u4f60\u5728 Mac OS X \u6216 Linux \u4e0b\uff0c\u4e0b\u9762\u4e24\u6761\u547d\u4ee4\u53ef\u80fd\u4f1a\u9002\u7528: $ sudo easy_install virtualenv $ sudo pip install virtualenv \u4e0a\u8ff0\u7684\u547d\u4ee4\u4f1a\u5728\u4f60\u7684\u7cfb\u7edf\u4e2d\u5b89\u88c5 virtualenv\u3002\u5b83\u751a\u81f3\u53ef\u80fd\u4f1a\u5b58\u5728\u4e8e\u5305\u7ba1\u7406\u5668\u4e2d\u3002 virtualenv \u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u4f60\u53ef\u4ee5\u7acb\u5373\u6253\u5f00 shell \u7136\u540e\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u73af\u5883\u3002\u6211\u901a\u5e38\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u5176\u4e0b\u521b\u5efa\u4e00\u4e2a venv \u6587\u4ef6\u5939 $ mkdir myproject $ cd myproject $ virtualenv venv New python executable in venv/bin/python Installing distribute............done. \u73b0\u5728\uff0c\u65e0\u8bba\u4f55\u65f6\u4f60\u60f3\u5728\u67d0\u4e2a\u9879\u76ee\u4e0a\u5de5\u4f5c\uff0c\u53ea\u9700\u8981\u6fc0\u6d3b\u76f8\u5e94\u7684\u73af\u5883\u3002\u5728 OS X \u548c Linux \u4e0a\uff0c\u6267\u884c\u5982\u4e0b\u64cd\u4f5c: $ . venv/bin/activate \u65e0\u8bba\u901a\u8fc7\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u73b0\u5728\u5e94\u8be5\u5df2\u7ecf\u6fc0\u6d3b\u4e86 virtualenv\uff08\u6ce8\u610f\u4f60\u7684 shell \u63d0\u793a\u7b26\u663e\u793a\u7684\u662f\u5f53\u524d\u6d3b\u52a8\u7684\u73af\u5883\uff09\u3002 \u73b0\u5728\u4f60\u53ea\u9700\u8981\u952e\u5165\u4ee5\u4e0b\u7684\u547d\u4ee4\u6765\u6fc0\u6d3b virtualenv \u4e2d\u7684 Flask: $ pip install Flask \u51e0\u79d2\u949f\u540e\uff0c\u4e00\u5207\u90fd\u641e\u5b9a\u4e86\u3002 \u5b89\u88c5\u65b9\u6cd5\u4e8c\uff1a\u5168\u5c40\u5b89\u88c5 \u00b6 \u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u867d\u7136\u6211\u4e0d\u63a8\u8350\u3002\u53ea\u9700\u8981\u4ee5 root \u6743\u9650\u8fd0\u884c pip\u3002\u73b0\u5728\u4ee5\u8fd9\u79cd\u6a21\u5f0f\u5b89\u88c5 flask\u3002 $ sudo pip install Flask \u57fa\u672c\u4f7f\u7528 \u00b6 \u4e00\u4e2a\u6700\u5c0f\u7684 Flask \u5e94\u7528\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837: from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return 'Hello World!' if __name__ == '__main__' : app . run () \u628a\u5b83\u4fdd\u5b58\u4e3a hello.py \uff08\u6216\u662f\u7c7b\u4f3c\u7684\uff09\uff0c\u7136\u540e\u7528 Python \u89e3\u91ca\u5668\u6765\u8fd0\u884c\u3002 \u786e\u4fdd\u4f60\u7684\u5e94\u7528\u6587\u4ef6\u540d\u4e0d\u662f flask.py \uff0c\u56e0\u4e3a\u8fd9\u5c06\u4e0e Flask \u672c\u8eab\u51b2\u7a81\u3002 python hello.py * Running on http://127.0.0.1:5000/ \u73b0\u5728\u8bbf\u95ee http://127.0.0.1:5000/ \uff0c\u4f60\u4f1a\u770b\u89c1 Hello World \u95ee\u5019\u3002\u6b32\u5173\u95ed\u670d\u52a1\u5668\uff0c\u6309 Ctrl+C\u3002 \u90a3\u4e48\uff0c\u8fd9\u6bb5\u4ee3\u7801\u505a\u4e86\u4ec0\u4e48\uff1f \u9996\u5148\uff0c\u6211\u4eec\u5bfc\u5165\u4e86 Flask \u7c7b\u3002\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5c06\u4f1a\u662f\u6211\u4eec\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u8be5\u7c7b\u7684\u5b9e\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5e94\u7528\u6a21\u5757\u6216\u8005\u5305\u7684\u540d\u79f0\u3002 \u5982\u679c\u4f60\u4f7f\u7528\u5355\u4e00\u7684\u6a21\u5757\uff08\u5982\u672c\u4f8b\uff09\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 name \uff0c\u56e0\u4e3a\u6a21\u5757\u7684\u540d\u79f0\u5c06\u4f1a\u56e0\u5176\u4f5c\u4e3a\u5355\u72ec\u5e94\u7528\u542f\u52a8\u8fd8\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u800c\u6709\u4e0d\u540c\uff08 \u4e5f\u5373\u662f '__main__' \u6216\u5b9e\u9645\u7684\u5bfc\u5165\u540d\uff09\u3002\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u8fd9\u6837 Flask \u624d\u77e5\u9053\u5230\u54ea\u53bb\u627e\u6a21\u677f\u3001\u9759\u6001\u6587\u4ef6\u7b49\u7b49\u3002\u8be6\u60c5\u89c1 Flask \u7684\u6587\u6863\u3002 \u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 route() \u88c5\u9970\u5668\u544a\u8bc9 Flask \u4ec0\u4e48\u6837\u7684 URL \u80fd\u89e6\u53d1\u6211\u4eec\u7684\u51fd\u6570\u3002 \u8fd9\u4e2a\u51fd\u6570\u7684\u540d\u5b57\u4e5f\u5728\u751f\u6210 URL \u65f6\u88ab\u7279\u5b9a\u7684\u51fd\u6570\u91c7\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u6211\u4eec\u60f3\u8981\u663e\u793a\u5728\u7528\u6237\u6d4f\u89c8\u5668\u4e2d\u7684\u4fe1\u606f\u3002 \u6700\u540e\u6211\u4eec\u7528 run() \u51fd\u6570\u6765\u8ba9\u5e94\u7528\u8fd0\u884c\u5728\u672c\u5730\u670d\u52a1\u5668\u4e0a\u3002 \u5176\u4e2d if __name__ =='__main__': \u786e\u4fdd\u670d\u52a1\u5668\u53ea\u4f1a\u5728\u8be5\u811a\u672c\u88ab Python \u89e3\u91ca\u5668\u76f4\u63a5\u6267\u884c\u7684\u65f6\u5019\u624d\u4f1a\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u7684\u65f6\u5019\u3002 \u5916\u90e8\u53ef\u8bbf\u95ee\u7684\u670d\u52a1\u5668 \u5982\u679c\u4f60\u8fd0\u884c\u4e86\u8fd9\u4e2a\u670d\u52a1\u5668\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u53ea\u80fd\u4ece\u4f60\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u8bbf\u95ee\uff0c\u7f51\u7edc\u4e2d\u5176\u5b83\u4efb\u4f55\u7684\u5730\u65b9\u90fd\u4e0d\u80fd\u8bbf\u95ee\u3002\u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4f60\u7684\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u4efb\u610f Python \u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u884c\u4e3a\u662f\u9ed8\u8ba4\u7684\u3002 \u5982\u679c\u4f60\u7981\u7528\u4e86 debug \u6216\u4fe1\u4efb\u4f60\u6240\u5728\u7f51\u7edc\u7684\u7528\u6237\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u4fee\u6539\u8c03\u7528 run() \u7684\u65b9\u6cd5\u4f7f\u4f60\u7684\u670d\u52a1\u5668\u516c\u5f00\u53ef\u7528\uff0c\u5982\u4e0b: app.run(host='0.0.0.0') \u8fd9\u4f1a\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u76d1\u542c\u6240\u6709\u516c\u7f51 IP\u3002 \u8c03\u8bd5\u6a21\u5f0f \u00b6 \u867d\u7136 run() \u65b9\u6cd5\u9002\u7528\u4e8e\u542f\u52a8\u672c\u5730\u7684\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u4f46\u662f\u4f60\u6bcf\u6b21\u4fee\u6539\u4ee3\u7801\u540e\u90fd\u8981\u624b\u52a8\u91cd\u542f\u5b83\u3002\u8fd9\u6837\u5e76\u4e0d\u591f\u4f18\u96c5\uff0c\u800c\u4e14 Flask \u53ef\u4ee5\u505a\u5230\u66f4\u597d\u3002\u5982\u679c\u4f60\u542f\u7528\u4e86\u8c03\u8bd5\u652f\u6301\uff0c\u670d\u52a1\u5668\u4f1a\u5728\u4ee3\u7801\u4fee\u6539\u540e\u81ea\u52a8\u91cd\u65b0\u8f7d\u5165\uff0c\u5e76\u5728\u53d1\u751f\u9519\u8bef\u65f6\u63d0\u4f9b\u4e00\u4e2a\u76f8\u5f53\u6709\u7528\u7684\u8c03\u8bd5\u5668\u3002 \u6709\u4e24\u79cd\u9014\u5f84\u6765\u542f\u7528\u8c03\u8bd5\u6a21\u5f0f\u3002\u4e00\u79cd\u662f\u76f4\u63a5\u5728\u5e94\u7528\u5bf9\u8c61\u4e0a\u8bbe\u7f6e: app . debug = True app . run () \u53e6\u4e00\u79cd\u662f\u4f5c\u4e3a run \u65b9\u6cd5\u7684\u4e00\u4e2a\u53c2\u6570\u4f20\u5165: app.run(debug=True) \u4e24\u79cd\u65b9\u6cd5\u7684\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002 \u6ce8\u610f \u5c3d\u7ba1\u4ea4\u4e92\u5f0f\u8c03\u8bd5\u5668\u5728\u5141\u8bb8 fork \u7684\u73af\u5883\u4e2d\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\uff08\u4e5f\u5373\u5728\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\u6b63\u5e38\u4f7f\u7528\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff09\uff0c\u4f46\u5b83\u4f9d\u7136\u5141\u8bb8\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002\u8fd9\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u5de8\u5927\u7684\u5b89\u5168\u9690\u60a3\uff0c\u56e0\u6b64\u5b83 \u7edd\u5bf9\u4e0d\u80fd\u7528\u4e8e\u751f\u4ea7\u73af\u5883 \u3002 \u8def\u7531 \u00b6 \u73b0\u4ee3 Web \u5e94\u7528\u7684 URL \u5341\u5206\u4f18\u96c5\uff0c\u6613\u4e8e\u4eba\u4eec\u8fa8\u8bc6\u8bb0\u5fc6\uff0c\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u90a3\u4e9b\u9762\u5411\u4f7f\u7528\u4f4e\u901f\u7f51\u7edc\u8fde\u63a5\u79fb\u52a8\u8bbe\u5907\u8bbf\u95ee\u7684\u5e94\u7528\u7279\u522b\u6709\u7528\u3002\u5982\u679c\u53ef\u4ee5\u4e0d\u8bbf\u95ee\u7d22\u5f15\u9875\uff0c\u800c\u662f\u76f4\u63a5\u8bbf\u95ee\u60f3\u8981\u7684\u90a3\u4e2a\u9875\u9762\uff0c\u4ed6\u4eec\u591a\u534a\u4f1a\u7b11\u9010\u989c\u5f00\u800c\u518d\u5ea6\u5149\u987e\u3002 \u5982\u4e0a\u6240\u89c1\uff0c route() \u88c5\u9970\u5668\u628a\u4e00\u4e2a\u51fd\u6570\u7ed1\u5b9a\u5230\u5bf9\u5e94\u7684 URL \u4e0a\u3002\u4f46\u662f\uff0c\u4e0d\u4ec5\u5982\u6b64\uff01\u4f60\u53ef\u4ee5\u6784\u9020\u542b\u6709\u52a8\u6001\u90e8\u5206\u7684 URL\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e00\u4e2a\u51fd\u6570\u4e0a\u9644\u7740\u591a\u4e2a\u89c4\u5219\u3002 \u8fd9\u91cc\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u4f8b\u5b50: @app . route ( '/' ) def index (): return 'Index Page' @app . route ( '/hello' ) def hello (): return 'Hello World' URL \u4f20\u53c2 \u00b6 \u8981\u7ed9 URL \u6dfb\u52a0\u53d8\u91cf\u90e8\u5206\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u7279\u6b8a\u7684\u5b57\u6bb5\u6807\u8bb0\u4e3a <variable_name> \uff0c \u8fd9\u4e2a\u90e8\u5206\u5c06\u4f1a\u4f5c\u4e3a\u547d\u540d\u53c2\u6570\u4f20\u9012\u5230\u4f60\u7684\u51fd\u6570\u3002\u89c4\u5219\u53ef\u4ee5\u7528 <converter:variable_name> \u6307\u5b9a\u4e00\u4e2a\u53ef\u9009\u7684\u8f6c\u6362\u5668\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4e0d\u9519\u7684\u4f8b\u5b50: @app . route ( '/user/<username>' ) def show_user_profile ( username ): # show the user profile for that user return 'User %s ' % username @app . route ( '/post/<int:post_id>' ) def show_post ( post_id ): # show the post with the given id, the id is an integer return 'Post %d ' % post_id \u8f6c\u6362\u5668\u6709\u4e0b\u9762\u51e0\u79cd\uff1a int \u63a5\u53d7\u6574\u6570 float \u540c int \uff0c\u4f46\u662f\u63a5\u53d7\u6d6e\u70b9\u6570 path \u548c\u9ed8\u8ba4\u7684\u76f8\u4f3c\uff0c\u4f46\u4e5f\u63a5\u53d7\u659c\u7ebf \u552f\u4e00 URL / \u91cd\u5b9a\u5411\u884c\u4e3a \u00b6 Flask \u7684 URL \u89c4\u5219\u57fa\u4e8e Werkzeug \u7684\u8def\u7531\u6a21\u5757\u3002\u8fd9\u4e2a\u6a21\u5757\u80cc\u540e\u7684\u601d\u60f3\u662f\u57fa\u4e8e Apache \u4ee5\u53ca\u66f4\u65e9\u7684 HTTP \u670d\u52a1\u5668\u4e3b\u5f20\u7684\u5148\u4f8b\uff0c\u4fdd\u8bc1\u4f18\u96c5\u4e14\u552f\u4e00\u7684 URL\u3002 \u4ee5\u8fd9\u4e24\u4e2a\u89c4\u5219\u4e3a\u4f8b: @app . route ( '/projects/' ) def projects (): return 'The project page' @app . route ( '/about' ) def about (): return 'The about page' \u867d\u7136\u5b83\u4eec\u770b\u8d77\u6765\u7740\u5b9e\u76f8\u4f3c\uff0c\u4f46\u5b83\u4eec\u7ed3\u5c3e\u659c\u7ebf\u7684\u4f7f\u7528\u5728 URL \u5b9a\u4e49 \u4e2d\u4e0d\u540c\u3002 \u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d\uff0c\u6307\u5411 projects \u7684\u89c4\u8303 URL \u5c3e\u7aef\u6709\u4e00\u4e2a\u659c\u7ebf\u3002\u8fd9\u79cd\u611f\u89c9\u5f88\u50cf\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u5939\u3002\u8bbf\u95ee\u4e00\u4e2a\u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u88ab Flask \u91cd\u5b9a\u5411\u5230\u5e26\u659c\u7ebf\u7684\u89c4\u8303 URL \u53bb\u3002 \u7136\u800c\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684 URL \u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\uff0c\u7c7b\u4f3c UNIX-like \u7cfb\u7edf\u4e0b\u7684\u6587\u4ef6\u7684\u8def\u5f84\u540d\u3002\u8bbf\u95ee\u7ed3\u5c3e\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u4ea7\u751f\u4e00\u4e2a 404 \u201cNot Found\u201d \u9519\u8bef\u3002 \u8fd9\u4e2a\u884c\u4e3a\u4f7f\u5f97\u5728\u9057\u5fd8\u5c3e\u659c\u7ebf\u65f6\uff0c\u5141\u8bb8\u5173\u8054\u7684 URL \u63a5\u4efb\u5de5\u4f5c\uff0c\u4e0e Apache \u548c\u5176\u5b83\u7684\u670d\u52a1\u5668\u7684\u884c\u4e3a\u5e76\u65e0\u4e8c\u5f02\u3002\u6b64\u5916\uff0c\u4e5f\u4fdd\u8bc1\u4e86 URL \u7684\u552f\u4e00\uff0c\u6709\u52a9\u4e8e\u907f\u514d\u641c\u7d22\u5f15\u64ce\u7d22\u5f15\u540c\u4e00\u4e2a\u9875\u9762\u4e24\u6b21\u3002 \u6784\u9020 URL \u00b6 \u5982\u679c Flask \u80fd\u5339\u914d URL\uff0c\u90a3\u4e48 Flask \u53ef\u4ee5\u751f\u6210\u5b83\u4eec\u5417\uff1f\u5f53\u7136\u53ef\u4ee5\u3002\u4f60\u53ef\u4ee5\u7528 url_for() \u6765\u7ed9\u6307\u5b9a\u7684\u51fd\u6570\u6784\u9020 URL\u3002\u5b83\u63a5\u53d7\u51fd\u6570\u540d\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4e5f\u63a5\u53d7\u5bf9\u5e94 URL \u89c4\u5219\u7684\u53d8\u91cf\u90e8\u5206\u7684\u547d\u540d\u53c2\u6570\u3002\u672a\u77e5\u53d8\u91cf\u90e8\u5206\u4f1a\u6dfb\u52a0\u5230 URL \u672b\u5c3e\u4f5c\u4e3a\u67e5\u8be2\u53c2\u6570\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: >>> from flask import Flask , url_for >>> app = Flask ( __name__ ) >>> @app . route ( '/' ) ... def index (): pass ... >>> @app . route ( '/login' ) ... def login (): pass ... >>> @app . route ( '/user/<username>' ) ... def profile ( username ): pass ... >>> with app . test_request_context (): ... print url_for ( 'index' ) ... print url_for ( 'login' ) ... print url_for ( 'login' , next = '/' ) ... print url_for ( 'profile' , username = 'John Doe' ) ... / / login / login ? next =/ / user / John % 20 Doe \uff08\u8fd9\u91cc\u4e5f\u7528\u5230\u4e86 test_request_context() \u65b9\u6cd5\uff0c\u4e0b\u9762\u4f1a\u89e3\u91ca\u3002\u5373\u4f7f\u6211\u4eec\u6b63\u5728\u901a\u8fc7 Python \u7684 shell \u8fdb\u884c\u4ea4\u4e92\uff0c\u5b83\u4f9d\u7136\u4f1a\u544a\u8bc9 Flask \u8981\u8868\u73b0\u4e3a\u6b63\u5728\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u89e3\u91ca\u3002 \u73af\u5883\u5c40\u90e8\u53d8\u91cf \uff09 \u4e3a\u4ec0\u4e48\u4f60\u8981\u6784\u5efa URL \u800c\u975e\u5728\u6a21\u677f\u4e2d\u786c\u7f16\u7801\uff1f\u8fd9\u91cc\u6709\u4e09\u4e2a\u7edd\u5999\u7684\u7406\u7531\uff1a \u53cd\u5411\u6784\u5efa\u901a\u5e38\u6bd4\u786c\u7f16\u7801\u7684\u63cf\u8ff0\u6027\u66f4\u597d\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5141\u8bb8\u4f60\u4e00\u6b21\u6027\u4fee\u6539 URL\uff0c \u800c\u4e0d\u662f\u5230\u5904\u8fb9\u627e\u8fb9\u6539\u3002 URL \u6784\u5efa\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\u548c Unicode \u6570\u636e\uff0c\u514d\u53bb\u4f60\u5f88\u591a\u9ebb\u70e6\u3002 \u5982\u679c\u4f60\u7684\u5e94\u7528\u4e0d\u4f4d\u4e8e URL \u7684\u6839\u8def\u5f84\uff08\u6bd4\u5982\uff0c\u5728 /myapplication \u4e0b\uff0c\u800c\u4e0d\u662f / \uff09\uff0c url_for() \u4f1a\u59a5\u5584\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002 HTTP \u65b9\u6cd5 \u00b6 HTTP \uff08\u4e0e Web \u5e94\u7528\u4f1a\u8bdd\u7684\u534f\u8bae\uff09\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u8bbf\u95ee URL \u65b9\u6cd5\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8def\u7531\u53ea\u56de\u5e94 GET \u8bf7\u6c42\uff0c\u4f46\u662f\u901a\u8fc7 route() \u88c5\u9970\u5668\u4f20\u9012 methods \u53c2\u6570\u53ef\u4ee5\u6539\u53d8\u8fd9\u4e2a\u884c\u4e3a\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : do_the_login () else : show_the_login_form () \u5982\u679c\u5b58\u5728 GET \uff0c\u90a3\u4e48\u4e5f\u4f1a\u66ff\u4f60\u81ea\u52a8\u5730\u6dfb\u52a0 HEAD\uff0c\u65e0\u9700\u5e72\u9884\u3002\u5b83\u4f1a\u786e\u4fdd\u9075\u7167 HTTP RFC \uff08\u63cf\u8ff0 HTTP \u534f\u8bae\u7684\u6587\u6863\uff09\u5904\u7406 HEAD \u8bf7\u6c42\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5b8c\u5168\u5ffd\u7565\u8fd9\u90e8\u5206\u7684 HTTP \u89c4\u8303\u3002\u540c\u6837\uff0c\u81ea\u4ece Flask 0.6 \u8d77\uff0c \u4e5f\u5b9e\u73b0\u4e86 OPTIONS \u7684\u81ea\u52a8\u5904\u7406\u3002 \u4f60\u4e0d\u77e5\u9053\u4e00\u4e2a HTTP \u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u8fd9\u91cc\u4f1a\u7b80\u8981\u4ecb\u7ecd HTTP \u65b9\u6cd5\u548c\u5b83\u4eec\u4e3a\u4ec0\u4e48\u91cd\u8981\uff1a HTTP \u65b9\u6cd5\uff08\u4e5f\u7ecf\u5e38\u88ab\u53eb\u505a\u201c\u8c13\u8bcd\u201d\uff09\u544a\u77e5\u670d\u52a1\u5668\uff0c\u5ba2\u6237\u7aef\u60f3\u5bf9\u8bf7\u6c42\u7684\u9875\u9762 \u505a \u4e9b\u4ec0\u4e48\u3002\u4e0b\u9762\u7684\u90fd\u662f\u975e\u5e38\u5e38\u89c1\u7684\u65b9\u6cd5\uff1a GET\uff1a\u6d4f\u89c8\u5668\u544a\u77e5\u670d\u52a1\u5668\uff1a\u53ea \u83b7\u53d6 \u9875\u9762\u4e0a\u7684\u4fe1\u606f\u5e76\u53d1\u7ed9\u6211\u3002\u8fd9\u662f\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u3002 HEAD\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u6b32\u83b7\u53d6\u4fe1\u606f\uff0c\u4f46\u662f\u53ea\u5173\u5fc3 \u6d88\u606f\u5934 \u3002\u5e94\u7528\u5e94\u50cf\u5904\u7406 GET \u8bf7\u6c42\u4e00\u6837\u6765\u5904\u7406\u5b83\uff0c\u4f46\u662f\u4e0d\u5206\u53d1\u5b9e\u9645\u5185\u5bb9\u3002\u5728 Flask \u4e2d\u4f60\u5b8c\u5168\u65e0\u9700 \u4eba\u5de5 \u5e72\u9884\uff0c\u5e95\u5c42\u7684 Werkzeug \u5e93\u5df2\u7ecf\u66ff\u4f60\u6253\u70b9\u597d\u4e86\u3002 POST\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u60f3\u5728 URL \u4e0a \u53d1\u5e03 \u65b0\u4fe1\u606f\u3002\u5e76\u4e14\uff0c\u670d\u52a1\u5668\u5fc5\u987b\u786e\u4fdd \u6570\u636e\u5df2\u5b58\u50a8\u4e14\u4ec5\u5b58\u50a8\u4e00\u6b21\u3002\u8fd9\u662f HTML \u8868\u5355\u901a\u5e38\u53d1\u9001\u6570\u636e\u5230\u670d\u52a1\u5668\u7684\u65b9\u6cd5\u3002 PUT\uff1a\u7c7b\u4f3c POST \u4f46\u662f\u670d\u52a1\u5668\u53ef\u80fd\u89e6\u53d1\u4e86\u5b58\u50a8\u8fc7\u7a0b\u591a\u6b21\uff0c\u591a\u6b21\u8986\u76d6\u6389\u65e7\u503c\u3002\u4f60\u53ef \u80fd\u4f1a\u95ee\u8fd9\u6709\u4ec0\u4e48\u7528\uff0c\u5f53\u7136\u8fd9\u662f\u6709\u539f\u56e0\u7684\u3002\u8003\u8651\u5230\u4f20\u8f93\u4e2d\u8fde\u63a5\u53ef\u80fd\u4f1a\u4e22\u5931\uff0c\u5728 \u8fd9\u79cd \u60c5\u51b5\u4e0b\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u7cfb\u7edf\u53ef\u80fd\u5b89\u5168\u5730\u7b2c\u4e8c\u6b21\u63a5\u6536\u8bf7\u6c42\uff0c\u800c \u4e0d\u7834\u574f\u5176\u5b83\u4e1c\u897f\u3002\u56e0\u4e3a POST \u5b83\u53ea\u89e6\u53d1\u4e00\u6b21\uff0c\u6240\u4ee5\u7528 POST \u662f\u4e0d\u53ef\u80fd\u7684\u3002 DELETE\uff1a\u5220\u9664\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002 OPTIONS\uff1a\u7ed9\u5ba2\u6237\u7aef\u63d0\u4f9b\u4e00\u4e2a\u654f\u6377\u7684\u9014\u5f84\u6765\u5f04\u6e05\u8fd9\u4e2a URL \u652f\u6301\u54ea\u4e9b HTTP \u65b9\u6cd5\u3002 \u4ece Flask 0.6 \u5f00\u59cb\uff0c\u5b9e\u73b0\u4e86\u81ea\u52a8\u5904\u7406\u3002. \u9759\u6001\u6587\u4ef6 \u00b6 \u52a8\u6001 web \u5e94\u7528\u4e5f\u4f1a\u9700\u8981\u9759\u6001\u6587\u4ef6\uff0c\u901a\u5e38\u662f CSS \u548c JavaScript \u6587\u4ef6\u3002\u7406\u60f3\u72b6\u51b5\u4e0b\uff0c \u4f60\u5df2\u7ecf\u914d\u7f6e\u597d Web \u670d\u52a1\u5668\u6765\u63d0\u4f9b\u9759\u6001\u6587\u4ef6\uff0c\u4f46\u662f\u5728\u5f00\u53d1\u4e2d\uff0cFlask \u4e5f\u53ef\u4ee5\u505a\u5230\u3002 \u53ea\u8981\u5728\u4f60\u7684\u5305\u4e2d\u6216\u662f\u6a21\u5757\u7684\u6240\u5728\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a static \u7684\u6587\u4ef6\u5939\uff0c\u5728\u5e94\u7528\u4e2d\u4f7f\u7528 /static \u5373\u53ef\u8bbf\u95ee\u3002 \u7ed9\u9759\u6001\u6587\u4ef6\u751f\u6210 URL \uff0c\u4f7f\u7528\u7279\u6b8a\u7684 'static' \u7aef\u70b9\u540d: ```python url_for('static', filename='style.css') \u8fd9\u4e2a\u6587\u4ef6\u5e94\u8be5\u5b58\u50a8\u5728\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684 `static/style.css` \u3002 ## \u6a21\u677f\u6e32\u67d3 \u7528 Python \u751f\u6210 HTML \u5341\u5206\u65e0\u8da3\uff0c\u800c\u4e14\u76f8\u5f53\u7e41\u7410\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u624b\u52a8\u5bf9 HTML \u505a\u8f6c\u4e49\u6765\u4fdd\u8bc1\u5e94\u7528\u7684\u5b89\u5168\u3002\u4e3a\u6b64\uff0cFlask \u914d\u5907\u4e86 [Jinja2](http://jinja.pocoo.org/) \u6a21\u677f\u5f15\u64ce\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 [`render_template()`](http://docs.jinkan.org/docs/flask/api.html#flask.render_template) \u65b9\u6cd5\u6765\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9700\u8981\u505a\u7684\u4e00\u5207\u5c31\u662f\u5c06\u6a21\u677f\u540d\u548c\u4f60\u60f3\u4f5c\u4e3a\u5173\u952e\u5b57\u7684\u53c2\u6570\u4f20\u5165\u6a21\u677f\u7684\u53d8\u91cf\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c55\u793a\u5982\u4f55\u6e32\u67d3\u6a21\u677f\u7684\u7b80\u4f8b: ```python from flask import render_template @app.route('/hello/') @app.route('/hello/<name>') def hello(name=None): return render_template('hello.html', name=name) Flask \u4f1a\u5728 templates \u6587\u4ef6\u5939\u91cc\u5bfb\u627e\u6a21\u677f\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u662f\u4e2a\u6a21\u5757\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u5e94\u8be5\u4e0e\u6a21\u5757\u540c\u7ea7\uff1b\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u5305\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5939\u4f5c\u4e3a\u5305\u7684\u5b50\u76ee\u5f55: \u60c5\u51b5 1 : \u6a21\u5757: /application.py /templates /hello.html \u60c5\u51b5 2 : \u5305: /application /__init__.py /templates /hello.html \u5173\u4e8e\u6a21\u677f\uff0c\u4f60\u53ef\u4ee5\u53d1\u6325 Jinja2 \u6a21\u677f\u7684\u5168\u90e8\u5b9e\u4f8b\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u89c1 Jinja2 \u6a21\u677f\u6587\u6863 \u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u6a21\u677f\u5b9e\u4f8b\uff1a <!DOCTYPE html> < title > Hello from Flask </ title > {% if name %} < h1 > Hello {{ name }}! </ h1 > {% else %} < h1 > Hello World! </ h1 > {% endif %} \u5728\u6a21\u677f\u91cc\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8bbf\u95ee request \u3001 session \u548c g [ 1] \u5bf9\u8c61\uff0c \u4ee5\u53ca get_flashed_messages() \u51fd\u6570\u3002 \u6a21\u677f\u7ee7\u627f\u8ba9\u6a21\u677f\u7528\u8d77\u6765\u76f8\u5f53\u987a\u624b\u3002\u5982\u6b32\u4e86\u89e3\u7ee7\u627f\u7684\u5de5\u4f5c\u673a\u7406\uff0c\u8bf7\u8df3\u8f6c\u5230 \u6a21\u677f\u7ee7\u627f \u6a21\u5f0f\u7684\u6587\u6863\u3002\u6700\u8d77\u7801\uff0c\u6a21\u677f\u7ee7\u627f\u80fd\u4f7f\u7279\u5b9a\u5143\u7d20 \uff08\u6bd4\u5982\u9875\u7709\u3001\u5bfc\u822a\u680f\u548c\u9875\u811a\uff09\u53ef\u4ee5\u51fa\u73b0\u5728\u6240\u6709\u7684\u9875\u9762\u3002 \u81ea\u52a8\u8f6c\u4e49\u529f\u80fd\u9ed8\u8ba4\u662f\u5f00\u542f\u7684\uff0c\u6240\u4ee5\u5982\u679c name \u5305\u542b HTML \uff0c\u5b83\u5c06\u4f1a\u88ab\u81ea\u52a8\u8f6c\u4e49\u3002\u5982\u679c\u4f60\u80fd\u4fe1\u4efb\u4e00\u4e2a\u53d8\u91cf\uff0c\u5e76\u4e14\u4f60\u77e5\u9053\u5b83\u662f\u5b89\u5168\u7684\uff08\u4f8b\u5982\u4e00\u4e2a\u6a21\u5757\u628a Wiki \u6807\u8bb0\u8f6c\u6362\u4e3a HTML\uff09\uff0c\u4f60\u53ef\u4ee5\u7528 Markup \u7c7b\u6216 |safe \u8fc7\u6ee4\u5668\u5728\u6a21\u677f\u4e2d\u628a\u5b83\u6807\u8bb0\u4e3a\u5b89\u5168\u7684\u3002\u5728 Jinja 2 \u6587\u6863\u4e2d\uff0c\u4f60\u4f1a\u770b\u5230\u66f4\u591a\u7684\u4f8b\u5b50\u3002 \u8fd9\u91cc\u662f\u4e00\u4e2a Markup \u7c7b\u5982\u4f55\u4f7f\u7528\u7684\u7b80\u5355\u4ecb\u7ecd: >>> from flask import Markup >>> Markup ( '<strong>Hello %s !</strong>' ) % '<blink>hacker</blink>' Markup ( u '<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>' ) >>> Markup . escape ( '<blink>hacker</blink>' ) Markup ( u '&lt;blink&gt;hacker&lt;/blink&gt;' ) >>> Markup ( '<em>Marked up</em> &raquo; HTML' ) . striptags () u 'Marked up \\xbb HTML' \u5728 0.5 \u7248\u66f4\u6539: \u81ea\u52a8\u8f6c\u4e49\u4e0d\u518d\u5728\u6240\u6709\u6a21\u677f\u4e2d\u542f\u7528\u3002\u4e0b\u5217\u6269\u5c55\u540d\u7684\u6a21\u677f\u4f1a\u89e6\u53d1\u81ea\u52a8\u8f6c\u4e49\uff1a .html \u3001 .htm \u3001 .xml \u3001 .xhtml \u3002\u4ece\u5b57\u7b26\u4e32\u52a0\u8f7d\u7684\u6a21\u677f\u4f1a\u7981\u7528\u81ea\u52a8\u8f6c\u4e49\u3002 [ 1] \u4e0d\u786e\u5b9a g \u5bf9\u8c61\u662f\u4ec0\u4e48\uff1f\u5b83\u5141\u8bb8\u4f60\u6309\u9700\u5b58\u50a8\u4fe1\u606f\uff0c \u67e5\u770b\uff08 g \uff09\u5bf9\u8c61\u7684\u6587\u6863\u548c \u5728 Flask \u4e2d\u4f7f\u7528 SQLite 3 \u7684\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u8bbf\u95ee\u8bf7\u6c42\u6570\u636e \u00b6 \u5bf9\u4e8e Web \u5e94\u7528\uff0c\u4e0e\u5ba2\u6237\u7aef\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u7684\u6570\u636e\u4ea4\u4e92\u81f3\u5173\u91cd\u8981\u3002\u5728 Flask \u4e2d\u7531\u5168\u5c40\u7684 request \u5bf9\u8c61\u6765\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\u5982\u679c\u4f60\u6709\u4e00\u5b9a\u7684 Python \u7ecf\u9a8c\uff0c\u4f60\u4f1a\u597d\u5947\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u662f\u5168\u5c40\u7684\uff0c\u4e3a\u4ec0\u4e48 Flask \u8fd8\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002\u7b54\u6848\u662f\u73af\u5883\u4f5c\u7528\u57df\uff1a \u73af\u5883\u5c40\u90e8\u53d8\u91cf \u00b6 \u5185\u5e55 \u5982\u679c\u4f60\u60f3\u7406\u89e3\u5176\u5de5\u4f5c\u673a\u5236\u53ca\u5982\u4f55\u5229\u7528\u73af\u5883\u5c40\u90e8\u53d8\u91cf\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u8bf7\u9605\u8bfb\u6b64\u8282\uff0c\u5426\u5219\u53ef\u8df3\u8fc7\u3002 Flask \u4e2d\u7684\u67d0\u4e9b\u5bf9\u8c61\u662f\u5168\u5c40\u5bf9\u8c61\uff0c\u4f46\u5374\u4e0d\u662f\u901a\u5e38\u7684\u90a3\u79cd\u3002\u8fd9\u4e9b\u5bf9\u8c61\u5b9e\u9645\u4e0a\u662f\u7279\u5b9a\u73af\u5883\u7684\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7406\u3002\u867d\u7136\u5f88\u62d7\u53e3\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f88\u5bb9\u6613\u7406\u89e3\u3002 \u60f3\u8c61\u4e00\u4e0b\u5904\u7406\u7ebf\u7a0b\u7684\u73af\u5883\u3002\u4e00\u4e2a\u8bf7\u6c42\u4f20\u5165\uff0cWeb \u670d\u52a1\u5668\u51b3\u5b9a\u751f\u6210\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff08 \u6216\u8005\u522b\u7684\u4ec0\u4e48\u4e1c\u897f\uff0c\u53ea\u8981\u8fd9\u4e2a\u5e95\u5c42\u7684\u5bf9\u8c61\u53ef\u4ee5\u80dc\u4efb\u5e76\u53d1\u7cfb\u7edf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7ebf\u7a0b\uff09\u3002 \u5f53 Flask \u5f00\u59cb\u5b83\u5185\u90e8\u7684\u8bf7\u6c42\u5904\u7406\u65f6\uff0c\u5b83\u8ba4\u5b9a\u5f53\u524d\u7ebf\u7a0b\u662f\u6d3b\u52a8\u7684\u73af\u5883\uff0c\u5e76\u7ed1\u5b9a\u5f53\u524d\u7684\u5e94\u7528\u548c WSGI \u73af\u5883\u5230\u90a3\u4e2a\u73af\u5883\u4e0a\uff08\u7ebf\u7a0b\uff09\u3002\u5b83\u7684\u5b9e\u73b0\u5f88\u5de7\u5999\uff0c\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u5e94\u7528\u8c03\u7528\u53e6\u4e00\u4e2a\u5e94\u7528\u65f6\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002 \u6240\u4ee5\uff0c\u8fd9\u5bf9\u4f60\u6765\u8bf4\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u9664\u975e\u4f60\u8981\u505a\u7c7b\u4f3c\u5355\u5143\u6d4b\u8bd5\u7684\u4e1c\u897f\uff0c\u5426\u5219\u4f60\u57fa\u672c\u4e0a\u53ef\u4ee5\u5b8c\u5168\u65e0\u89c6\u5b83\u3002\u4f60\u4f1a\u53d1\u73b0\u4f9d\u8d56\u4e8e\u4e00\u6bb5\u8bf7\u6c42\u5bf9\u8c61\u7684\u4ee3\u7801\uff0c\u56e0\u6ca1\u6709\u8bf7\u6c42\u5bf9\u8c61\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u81ea\u884c\u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u5e76\u4e14\u628a\u5b83\u7ed1\u5b9a\u5230\u73af\u5883\u4e2d\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u7528 test_request_context() \u73af\u5883\u7ba1\u7406\u5668\u3002\u7ed3\u5408 with \u58f0\u660e\uff0c\u7ed1\u5b9a\u4e00\u4e2a\u6d4b\u8bd5\u8bf7\u6c42\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u4e0e\u4e4b\u4ea4\u4e92\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50: from flask import request with app . test_request_context ( '/hello' , method = 'POST' ): # now you can do something with the request until the # end of the with block, such as basic assertions: assert request . path == '/hello' assert request . method == 'POST' \u53e6\u4e00\u79cd\u53ef\u80fd\u662f\uff1a\u4f20\u9012\u6574\u4e2a WSGI \u73af\u5883\u7ed9 request_context() \u65b9\u6cd5: from flask import request with app . request_context ( environ ): assert request . method == 'POST' \u8bf7\u6c42\u5bf9\u8c61 \u00b6 API \u7ae0\u8282\u5bf9\u8bf7\u6c42\u5bf9\u8c61\u4f5c\u4e86\u8be6\u5c3d\u9610\u8ff0\uff08\u53c2\u89c1 request \uff09\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e0d\u4f1a\u8d58\u8ff0\u3002\u6b64\u5904\u5bbd\u6cdb\u4ecb\u7ecd\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u3002\u9996\u5148\u4ece flask \u6a21\u5757\u91cc\u5bfc\u5165\u5b83: from flask import request \u5f53\u524d\u8bf7\u6c42\u7684 HTTP \u65b9\u6cd5\u53ef\u901a\u8fc7 method \u5c5e\u6027\u6765\u8bbf\u95ee\u3002\u901a\u8fc7:attr:~flask.request.form \u5c5e\u6027\u6765\u8bbf\u95ee\u8868\u5355\u6570\u636e\uff08 POST \u6216 PUT \u8bf7\u6c42\u63d0\u4ea4\u7684\u6570\u636e\uff09\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u7528\u5230\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e24\u4e2a\u5c5e\u6027\u7684\u5b8c\u6574\u5b9e\u4f8b: @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): error = None if request . method == 'POST' : if ( request . form [ 'username' ], request . form [ 'password' ]): return log_the_user_in ( request . form [ 'username' ]) else : error = 'Invalid username/password' # the code below is executed if the request method # was GET or the credentials were invalid return render_template ( 'login.html' , error = error ) \u5f53\u8bbf\u95ee form \u5c5e\u6027\u4e2d\u7684\u4e0d\u5b58\u5728\u7684\u952e\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4f1a\u629b\u51fa\u4e00\u4e2a\u7279\u6b8a\u7684 KeyError \u5f02\u5e38\u3002\u4f60\u53ef\u4ee5\u50cf\u6355\u83b7\u6807\u51c6\u7684 KeyError \u4e00\u6837\u6765\u6355\u83b7\u5b83\u3002 \u5982\u679c\u4f60\u4e0d\u8fd9\u4e48\u505a\uff0c\u5b83\u4f1a\u663e\u793a\u4e00\u4e2a HTTP 400 Bad Request \u9519\u8bef\u9875\u9762\u3002\u6240\u4ee5\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\u4f60\u5e76\u4e0d\u9700\u8981\u5e72\u9884\u8fd9\u4e2a\u884c\u4e3a\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7 args \u5c5e\u6027\u6765\u8bbf\u95ee URL \u4e2d\u63d0\u4ea4\u7684\u53c2\u6570 \uff08 ?key=value \uff09: searchword = request . args . get ( 'q' , '' ) \u6211\u4eec\u63a8\u8350\u7528 get \u6765\u8bbf\u95ee URL \u53c2\u6570\u6216\u6355\u83b7 KeyError \uff0c\u56e0\u4e3a\u7528\u6237\u53ef\u80fd\u4f1a\u4fee\u6539 URL\uff0c\u5411\u4ed6\u4eec\u5c55\u73b0\u4e00\u4e2a 400 bad request \u9875\u9762\u4f1a\u5f71\u54cd\u7528\u6237\u4f53\u9a8c\u3002 \u6587\u4ef6\u4e0a\u4f20 \u00b6 \u7528 Flask \u5904\u7406\u6587\u4ef6\u4e0a\u4f20\u5f88\u7b80\u5355\u3002\u53ea\u8981\u786e\u4fdd\u4f60\u6ca1\u5fd8\u8bb0\u5728 HTML \u8868\u5355\u4e2d\u8bbe\u7f6e enctype=\"multipart/form-data\" \u5c5e\u6027\uff0c\u4e0d\u7136\u4f60\u7684\u6d4f\u89c8\u5668\u6839\u672c\u4e0d\u4f1a\u53d1\u9001\u6587\u4ef6\u3002 \u5df2\u4e0a\u4f20\u7684\u6587\u4ef6\u5b58\u50a8\u5728\u5185\u5b58\u6216\u662f\u6587\u4ef6\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u4e34\u65f6\u7684\u4f4d\u7f6e\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u5bf9\u8c61\u7684 files \u5c5e\u6027\u8bbf\u95ee\u5b83\u4eec\u3002\u6bcf\u4e2a\u4e0a\u4f20\u7684\u6587\u4ef6\u90fd\u4f1a\u5b58\u50a8\u5728\u8fd9\u4e2a\u5b57\u5178\u91cc\u3002\u5b83\u8868\u73b0\u8fd1\u4e4e\u4e3a\u4e00\u4e2a\u6807\u51c6\u7684 Python file \u5bf9\u8c61\uff0c\u4f46\u5b83\u8fd8\u6709\u4e00\u4e2a save() \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8\u4f60\u628a\u6587\u4ef6\u4fdd\u5b58\u5230\u670d\u52a1\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u7528\u5b83\u4fdd\u5b58\u6587\u4ef6\u7684\u4f8b\u5b50: from flask import request @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/uploaded_file.txt' ) ... \u5982\u679c\u4f60\u60f3\u77e5\u9053\u4e0a\u4f20\u524d\u6587\u4ef6\u5728\u5ba2\u6237\u7aef\u7684\u6587\u4ef6\u540d\u662f\u4ec0\u4e48\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee filename \u5c5e\u6027\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c \u6c38\u8fdc\u4e0d\u8981\u4fe1\u4efb\u8fd9\u4e2a\u503c\uff0c\u8fd9\u4e2a\u503c\u662f\u53ef\u4ee5\u4f2a\u9020\u7684\u3002\u5982\u679c\u4f60\u8981\u628a\u6587\u4ef6\u6309\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u6587\u4ef6\u540d\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u90a3\u4e48\u8bf7\u628a\u5b83\u4f20\u9012\u7ed9 Werkzeug \u63d0\u4f9b\u7684 secure_filename() \u51fd\u6570: from flask import request from werkzeug import secure_filename @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/' + secure_filename ( f . filename )) ... Cookies \u00b6 \u4f60\u53ef\u4ee5\u901a\u8fc7 cookies \u5c5e\u6027\u6765\u8bbf\u95ee Cookies\uff0c\u7528\u54cd\u5e94\u5bf9\u8c61\u7684 set_cookie \u65b9\u6cd5\u6765\u8bbe\u7f6e Cookies\u3002\u8bf7\u6c42\u5bf9\u8c61\u7684 cookies \u5c5e\u6027\u662f\u4e00\u4e2a\u5185\u5bb9\u4e3a\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u6240\u6709 Cookies \u7684\u5b57\u5178\u3002\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u4f1a\u8bdd\uff0c\u8bf7\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528 Cookies\uff0c\u8bf7\u53c2\u8003 \u4f1a\u8bdd \u4e00\u8282\u3002\u5728 Flask \u4e2d\uff0c\u5df2\u7ecf\u6ce8\u610f\u5904\u7406\u4e86\u4e00\u4e9b Cookies \u5b89\u5168\u7ec6\u8282\u3002 \u8bfb\u53d6 cookies: from flask import request @app . route ( '/' ) def index (): username = request . cookies . get ( 'username' ) # use cookies.get(key) instead of cookies[key] to not get a # KeyError if the cookie is missing. \u5b58\u50a8 cookies: from flask import make_response @app . route ( '/' ) def index (): resp = make_response ( render_template ( ... )) resp . set_cookie ( 'username' , 'the username' ) return resp \u53ef\u6ce8\u610f\u5230\u7684\u662f\uff0cCookies \u662f\u8bbe\u7f6e\u5728\u54cd\u5e94\u5bf9\u8c61\u4e0a\u7684\u3002\u7531\u4e8e\u901a\u5e38\u89c6\u56fe\u51fd\u6570\u53ea\u662f\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u4e4b\u540e Flask \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u4f60\u8981\u663e\u5f0f\u5730\u8f6c\u6362\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u7136\u540e\u518d\u8fdb\u884c\u4fee\u6539\u3002 \u6709\u65f6\u5019\u4f60\u60f3\u8bbe\u7f6e Cookie\uff0c\u4f46\u54cd\u5e94\u5bf9\u8c61\u4e0d\u80fd\u918b\u5728\u3002\u8fd9\u53ef\u4ee5\u5229\u7528 \u5ef6\u8fdf\u8bf7\u6c42\u56de\u8c03 \u6a21\u5f0f\u5b9e\u73b0\u3002 \u4e3a\u6b64\uff0c\u4e5f\u53ef\u4ee5\u9605\u8bfb \u5173\u4e8e\u54cd\u5e94 \u3002 \u91cd\u5b9a\u5411\u548c\u9519\u8bef \u00b6 \u4f60\u53ef\u4ee5\u7528 redirect() \u51fd\u6570\u628a\u7528\u6237\u91cd\u5b9a\u5411\u5230\u5176\u5b83\u5730\u65b9\u3002\u653e\u5f03\u8bf7\u6c42\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\uff0c\u7528 abort() \u51fd\u6570\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u5b83\u4eec\u5982\u4f55\u4f7f\u7528\u7684\u4f8b\u5b50: from flask import abort , redirect , url_for @app . route ( '/' ) def index (): return redirect ( url_for ( 'login' )) @app . route ( '/login' ) def login (): abort ( 401 ) this_is_never_executed () \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u65e0\u610f\u4e49\u7684\u4f8b\u5b50\u56e0\u4e3a\u7528\u6237\u4f1a\u4ece\u4e3b\u9875\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u4e0d\u80fd\u8bbf\u95ee\u7684\u9875\u9762 \uff08401 \u610f\u5473\u7740\u7981\u6b62\u8bbf\u95ee\uff09\uff0c\u4f46\u662f\u5b83\u5c55\u793a\u4e86\u91cd\u5b9a\u5411\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9519\u8bef\u4ee3\u7801\u4f1a\u663e\u793a\u4e00\u4e2a\u9ed1\u767d\u7684\u9519\u8bef\u9875\u9762\u3002\u5982\u679c\u4f60\u8981\u5b9a\u5236\u9519\u8bef\u9875\u9762\uff0c \u53ef\u4ee5\u4f7f\u7528 errorhandler() \u88c5\u9970\u5668: from flask import render_template @app . errorhandler ( 404 ) def page_not_found ( error ): return render_template ( 'page_not_found.html' ), 404 \u6ce8\u610f render_template() \u8c03\u7528\u4e4b\u540e\u7684 404 \u3002\u8fd9\u544a\u8bc9 Flask\uff0c\u8be5\u9875\u7684\u9519\u8bef\u4ee3\u7801\u662f 404 \uff0c\u5373\u6ca1\u6709\u627e\u5230\u3002\u9ed8\u8ba4\u4e3a 200\uff0c\u4e5f\u5c31\u662f\u4e00\u5207\u6b63\u5e38\u3002 \u5173\u4e8e\u54cd\u5e94 \u00b6 \u89c6\u56fe\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u4e3a\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c \u5b83\u88ab\u8f6c\u6362\u4e3a\u8be5\u5b57\u7b26\u4e32\u4e3a\u4e3b\u4f53\u7684\u3001\u72b6\u6001\u7801\u4e3a 200 OK``\u7684 \u3001 MIME \u7c7b\u578b\u662f ``text/html \u7684\u54cd\u5e94\u5bf9\u8c61\u3002Flask \u628a\u8fd4\u56de\u503c\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u7684\u903b\u8f91\u662f\u8fd9\u6837\uff1a \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u5b83\u4f1a\u4ece\u89c6\u56fe\u76f4\u63a5\u8fd4\u56de\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u54cd\u5e94\u5bf9\u8c61\u4f1a\u7528\u5b57\u7b26\u4e32\u6570\u636e\u548c\u9ed8\u8ba4\u53c2\u6570\u521b\u5efa\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u4e14\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u63d0\u4f9b\u989d\u5916\u7684\u4fe1\u606f\u3002\u8fd9\u6837\u7684\u5143\u7ec4\u5fc5\u987b\u662f (response, status, headers) \u7684\u5f62\u5f0f\uff0c\u4e14\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u3002 status \u503c\u4f1a\u8986\u76d6\u72b6\u6001\u4ee3\u7801\uff0c headers \u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u8868\u6216\u5b57\u5178\uff0c\u4f5c\u4e3a\u989d\u5916\u7684\u6d88\u606f\u6807\u5934\u503c\u3002 \u5982\u679c\u4e0a\u8ff0\u6761\u4ef6\u5747\u4e0d\u6ee1\u8db3\uff0c Flask \u4f1a\u5047\u8bbe\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u3002 \u5982\u679c\u4f60\u60f3\u5728\u89c6\u56fe\u91cc\u64cd\u7eb5\u4e0a\u8ff0\u6b65\u9aa4\u7ed3\u679c\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u3002 \u8b6c\u5982\u4f60\u6709\u8fd9\u6837\u4e00\u4e2a\u89c6\u56fe: @app . errorhandler ( 404 ) def not_found ( error ): return render_template ( 'error.html' ), 404 \u4f60\u53ea\u9700\u8981\u628a\u8fd4\u56de\u503c\u8868\u8fbe\u5f0f\u4f20\u9012\u7ed9 make_response() \uff0c\u83b7\u53d6\u7ed3\u679c\u5bf9\u8c61\u5e76\u4fee\u6539\uff0c\u7136\u540e\u518d\u8fd4\u56de\u5b83: @app . errorhandler ( 404 ) def not_found ( error ): resp = make_response ( render_template ( 'error.html' ), 404 ) resp . headers [ 'X-Something' ] = 'A value' return resp \u4f1a\u8bdd \u00b6 \u9664\u8bf7\u6c42\u5bf9\u8c61\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a session \u5bf9\u8c61\u3002\u5b83\u5141\u8bb8\u4f60\u5728\u4e0d\u540c\u8bf7\u6c42\u95f4\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u7684\u4fe1\u606f\u3002\u5b83\u662f\u5728 Cookies \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u5bf9 Cookies \u8fdb\u884c\u5bc6\u94a5\u7b7e\u540d\u3002\u8fd9\u610f\u5473\u7740\u7528\u6237\u53ef\u4ee5\u67e5\u770b\u4f60 Cookie \u7684\u5185\u5bb9\uff0c\u4f46\u5374\u4e0d\u80fd\u4fee\u6539\u5b83\uff0c\u9664\u975e\u7528\u6237\u77e5\u9053\u7b7e\u540d\u7684\u5bc6\u94a5\u3002 \u8981\u4f7f\u7528\u4f1a\u8bdd\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5bc6\u94a5\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4f1a\u8bdd\u5982\u4f55\u5de5\u4f5c: from flask import Flask , session , redirect , url_for , escape , request app = Flask ( __name__ ) @app . route ( '/' ) def index (): if 'username' in session : return 'Logged in as %s ' % escape ( session [ 'username' ]) return 'You are not logged in' @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : session [ 'username' ] = request . form [ 'username' ] return redirect ( url_for ( 'index' )) return ''' <form action=\"\" method=\"post\"> <p><input type=text name=username> <p><input type=submit value=Login> </form> ''' @app . route ( '/logout' ) def logout (): # remove the username from the session if it's there session . pop ( 'username' , None ) return redirect ( url_for ( 'index' )) # set the secret key. keep this really secret: app . secret_key = 'A0Zr98j/3yX R~XHH!jmN]LWX/,?RT' \u8fd9\u91cc\u63d0\u5230\u7684 escape() \u53ef\u4ee5\u5728\u4f60\u6a21\u677f\u5f15\u64ce\u5916\u505a\u8f6c\u4e49\uff08\u5982\u540c\u672c\u4f8b\uff09\u3002 \u5982\u4f55\u751f\u6210\u5f3a\u58ee\u7684\u5bc6\u94a5 \u968f\u673a\u7684\u95ee\u9898\u5728\u4e8e\u5f88\u96be\u5224\u65ad\u4ec0\u4e48\u662f\u771f\u968f\u673a\u3002\u4e00\u4e2a\u5bc6\u94a5\u5e94\u8be5\u8db3\u591f\u968f\u673a\u3002\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u57fa\u4e8e\u4e00\u4e2a\u5bc6\u94a5\u968f\u673a\u751f\u6210\u5668\u6765\u751f\u6210\u6f02\u4eae\u7684\u968f\u673a\u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u7528\u6765\u505a\u5bc6\u94a5: >>> import os >>> os . urandom ( 24 ) ' \\xfd {H \\xe5 < \\x95\\xf9\\xe3\\x96 .5 \\xd1\\x01 O<! \\xd5\\xa2\\xa0\\x9f R\" \\xa1\\xa8 ' \u628a\u8fd9\u4e2a\u503c\u590d\u5236\u7c98\u8d34\u8fdb\u4f60\u7684\u4ee3\u7801\u4e2d\uff0c\u4f60\u5c31\u6709\u4e86\u5bc6\u94a5\u3002 \u4f7f\u7528\u57fa\u4e8e cookie \u7684\u4f1a\u8bdd\u9700\u6ce8\u610f: Flask \u4f1a\u5c06\u4f60\u653e\u8fdb\u4f1a\u8bdd\u5bf9\u8c61\u7684\u503c\u5e8f\u5217\u5316\u81f3 Cookies\u3002\u5982\u679c\u4f60\u53d1\u73b0\u67d0\u4e9b\u503c\u5728\u8bf7\u6c42\u4e4b\u95f4\u5e76\u6ca1\u6709\u6301\u4e45\u5b58\u5728\uff0c\u7136\u800c\u786e\u5b9e\u5df2\u7ecf\u542f\u7528\u4e86 Cookies\uff0c\u4f46\u4e5f\u6ca1\u6709\u5f97\u5230\u660e\u786e\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u65f6\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u9875\u9762\u54cd\u5e94\u4e2d\u7684 Cookies \u7684\u5927\u5c0f\uff0c\u5e76\u4e0e Web \u6d4f\u89c8\u5668\u6240\u652f\u6301\u7684\u5927\u5c0f\u5bf9\u6bd4\u3002 \u6d88\u606f\u95ea\u73b0 \u00b6 \u53cd\u9988\uff0c\u662f\u826f\u597d\u7684\u5e94\u7528\u548c\u7528\u6237\u754c\u9762\u7684\u91cd\u8981\u6784\u6210\u3002\u5982\u679c\u7528\u6237\u5f97\u4e0d\u5230\u8db3\u591f\u7684\u53cd\u9988\uff0c\u4ed6\u4eec\u5f88\u53ef\u80fd\u5f00\u59cb\u538c\u6076\u8fd9\u4e2a\u5e94\u7528\u3002 Flask \u63d0\u4f9b\u4e86\u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u7ed9\u7528\u6237\u53cd\u9988\u3002 \u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\u901a\u5e38\u4f1a\u5728\u8bf7\u6c42\u7ed3\u675f\u65f6\u8bb0\u5f55\u4fe1\u606f\uff0c\u5e76\u5728\u4e0b\u4e00\u4e2a\uff08\u4e14\u4ec5\u5728\u4e0b\u4e00\u4e2a\uff09\u8bf7\u6c42\u4e2d\u8bbf\u95ee\u8bb0\u5f55\u7684\u4fe1\u606f\u3002\u5c55\u73b0\u8fd9\u4e9b\u6d88\u606f\u901a\u5e38\u7ed3\u5408\u8981\u6a21\u677f\u5e03\u5c40\u3002 \u4f7f\u7528 flash() \u65b9\u6cd5\u53ef\u4ee5\u95ea\u73b0\u4e00\u6761\u6d88\u606f\u3002\u8981\u64cd\u4f5c\u6d88\u606f\u672c\u8eab\uff0c\u8bf7\u4f7f\u7528 get_flashed_messages() \u51fd\u6570\uff0c\u5e76\u4e14\u5728\u6a21\u677f\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002\u5b8c\u6574\u7684\u4f8b\u5b50\u89c1 \u6d88\u606f\u95ea\u73b0 \u90e8\u5206\u3002 \u65e5\u5fd7\u8bb0\u5f55 \u00b6 0.3 \u65b0\u7248\u529f\u80fd. \u6709\u65f6\u5019\u4f60\u4f1a\u5904\u4e8e\u8fd9\u6837\u4e00\u79cd\u5883\u5730\uff0c\u4f60\u5904\u7406\u7684\u6570\u636e\u672c\u5e94\u8be5\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u6bd4\u5982\uff0c\u4f60\u4f1a\u6709\u4e00\u4e9b\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u4f46\u8bf7\u6c42\u663e\u7136\u662f\u7578\u5f62\u7684\u3002\u8fd9\u53ef\u80fd\u662f\u7528\u6237\u7be1\u6539\u4e86\u6570\u636e\uff0c\u6216\u662f\u5ba2\u6237\u7aef\u4ee3\u7801\u7684\u7c97\u5236\u6ee5\u9020\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6b63\u5e38\u5730\u8fd4\u56de 400 Bad Request \u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u6709\u65f6\u5019\u4e0d\u80fd\u8fd9\u4e48\u505a\uff0c\u5e76\u4e14\u8981\u8ba9\u4ee3\u7801\u7ee7\u7eed\u8fd0\u884c\u3002 \u4f60\u53ef\u80fd\u4f9d\u7136\u60f3\u8981\u8bb0\u5f55\u4e0b\uff0c\u662f\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u3002\u8fd9\u65f6\u65e5\u5fd7\u8bb0\u5f55\u5c31\u6d3e\u4e0a\u4e86\u7528\u573a\u3002\u4ece Flask 0.3 \u5f00\u59cb\uff0cFlask \u5c31\u5df2\u7ecf\u9884\u7f6e\u4e86\u65e5\u5fd7\u7cfb\u7edf\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u8c03\u7528\u65e5\u5fd7\u8bb0\u5f55\u7684\u4f8b\u5b50: app . logger . debug ( 'A value for debugging' ) app . logger . warning ( 'A warning occurred ( %d apples)' , 42 ) app . logger . error ( 'An error occurred' ) \u9644\u5e26\u7684 logger \u662f\u4e00\u4e2a\u6807\u51c6\u65e5\u5fd7\u7c7b Logger \uff0c\u6240\u4ee5\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605 logging \u7684\u6587\u6863 \u3002 \u6574\u5408 WSGI \u4e2d\u95f4\u4ef6 \u00b6 \u5982\u679c\u4f60\u60f3\u7ed9\u4f60\u7684\u5e94\u7528\u6dfb\u52a0 WSGI \u4e2d\u95f4\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5c01\u88c5\u5185\u90e8 WSGI \u5e94\u7528\u3002\u4f8b\u5982\u82e5\u662f\u4f60\u60f3\u7528 Werkzeug \u5305\u4e2d\u7684\u67d0\u4e2a\u4e2d\u95f4\u4ef6\u6765\u5e94\u4ed8 lighttpd \u4e2d\u7684 bugs \uff0c\u53ef\u4ee5\u8fd9\u6837\u505a: from werkzeug.contrib.fixers import LighttpdCGIRootFix app . wsgi_app = LighttpdCGIRootFix ( app . wsgi_app ) \u90e8\u7f72\u5230 Web \u670d\u52a1\u5668 \u00b6 \u51c6\u5907\u597d\u90e8\u7f72\u4f60\u7684 Flask \u5e94\u7528\u4e86\uff1f\u4f60\u53ef\u4ee5\u7acb\u5373\u90e8\u7f72\u5230\u6258\u7ba1\u5e73\u53f0\u6765\u5706\u6ee1\u5b8c\u6210\u5feb\u901f\u5165\u95e8\uff0c\u4ee5\u4e0b\u5382\u5546\u5747\u5411\u5c0f\u9879\u76ee\u63d0\u4f9b\u514d\u8d39\u7684\u65b9\u6848: \u5728 Heroku \u4e0a\u90e8\u7f72 Flask \u5728 dotCloud \u4e0a\u90e8\u7f72 Flask \u9644 Flask \u7684\u5177\u4f53\u8bf4\u660e \u6258\u7ba1 Flask \u5e94\u7528\u7684\u5176\u5b83\u9009\u62e9: \u5728 Webfaction \u4e0a\u90e8\u7f72 Flask \u5728 Google App Engine \u4e0a\u90e8\u7f72 Flask \u7528 Localtunnel \u5171\u4eab\u4f60\u7684\u672c\u5730\u670d\u52a1\u5668 \u5982\u679c\u4f60\u6709\u81ea\u5df1\u7684\u4e3b\u673a\uff0c\u5e76\u4e14\u51c6\u5907\u81ea\u5df1\u6258\u7ba1\uff0c\u53c2\u89c1 \u90e8\u7f72\u9009\u62e9 \u7ae0\u8282\u3002","title":"no-flask-basic"},{"location":"05-flask/no-flask-basic/#flask","text":"","title":"Flask \u4ecb\u7ecd"},{"location":"05-flask/no-flask-basic/#_1","text":"Flask \u4f9d\u8d56\u4e24\u4e2a\u5916\u90e8\u5e93\uff1a Werkzeug \u548c Jinja2 \u3002 Werkzeug \u662f\u4e00\u4e2a WSGI\uff08\u5728 Web \u5e94\u7528\u548c\u591a\u79cd\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6807\u51c6 Python \u63a5\u53e3) \u5de5\u5177\u96c6\u3002Jinja2 \u8d1f\u8d23\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9996\u5148\u9700\u8981 Python 2.6 \u6216\u66f4\u9ad8\u7684\u7248\u672c\uff0c\u6240\u4ee5\u8bf7\u786e\u8ba4\u6709\u4e00\u4e2a\u6700\u65b0\u7684 Python 2.x \u5b89\u88c5\u3002 \u5728 Python 3 \u4e2d\u4f7f\u7528 Flask \u8bf7\u53c2\u8003\uff1a Python 3 \u652f\u6301 \u3002","title":"\u4ecb\u7ecd"},{"location":"05-flask/no-flask-basic/#virtualenv","text":"\u4f60\u5f88\u53ef\u80fd\u60f3\u5728\u5f00\u53d1\u4e2d\u7528\u4e0a virtualenv\uff0c\u5982\u679c\u4f60\u6709\u751f\u4ea7\u73af\u5883\u7684 shell \u6743\u9650\uff0c\u4f60\u540c\u6837\u4f1a\u4e50\u4e8e\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u5b83\u3002 virtualenv \u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f\u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u559c\u6b22 Python\uff0c\u4e0d\u4ec5\u4f1a\u5728\u91c7\u7528 Flask \u7684 Web \u5e94\u7528\u4e2d\u7528\u4e0a virtualenv\uff0c\u5728\u522b\u7684\u9879\u76ee\u4e2d\u4f60\u4e5f\u4f1a\u60f3\u7528\u4e0a\u5b83\u3002\u4f60\u62e5\u6709\u7684\u9879\u76ee\u8d8a\u591a\uff0c\u540c\u65f6\u4f7f\u7528\u4e0d\u540c\u7248\u672c\u7684 Python \u5de5\u4f5c\u7684\u53ef\u80fd\u6027\u4e5f\u5c31\u8d8a\u5927\uff0c\u6216\u8005\u8d77\u7801\u9700\u8981\u4e0d\u540c\u7248\u672c\u7684 Python \u5e93\u3002\u60b2\u60e8\u73b0\u5b9e\u662f\uff1a\u5e38\u5e38\u4f1a\u6709\u5e93\u7834\u574f\u5411\u540e\u517c\u5bb9\u6027\uff0c\u7136\u800c\u6b63\u7ecf\u5e94\u7528\u4e0d\u91c7\u7528\u5916\u90e8\u5e93\u7684\u53ef\u80fd\u5fae\u4e4e\u5176\u5fae\u3002\u5f53\u5728\u4f60\u7684\u9879\u76ee\u4e2d\uff0c\u51fa\u73b0\u4e24\u4e2a\u6216\u66f4\u591a\u4f9d\u8d56\u6027\u51b2\u7a81\u65f6\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f virtualenv \u62ef\u6551\u4e16\u754c\uff01virtualenv \u4e3a\u6bcf\u4e2a\u4e0d\u540c\u9879\u76ee\u63d0\u4f9b\u4e00\u4efd Python \u5b89\u88c5\u3002\u5b83\u5e76\u6ca1\u6709\u771f\u6b63\u5b89\u88c5\u591a\u4e2a Python \u526f\u672c\uff0c\u4f46\u662f\u5b83\u786e\u5b9e\u63d0\u4f9b\u4e86\u4e00\u79cd\u5de7\u5999\u7684\u65b9\u5f0f\u6765\u8ba9\u5404\u9879\u76ee\u73af\u5883\u4fdd\u6301\u72ec\u7acb\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b virtualenv \u662f\u600e\u4e48\u5de5\u4f5c\u7684\u3002 \u5982\u679c\u4f60\u5728 Mac OS X \u6216 Linux \u4e0b\uff0c\u4e0b\u9762\u4e24\u6761\u547d\u4ee4\u53ef\u80fd\u4f1a\u9002\u7528: $ sudo easy_install virtualenv $ sudo pip install virtualenv \u4e0a\u8ff0\u7684\u547d\u4ee4\u4f1a\u5728\u4f60\u7684\u7cfb\u7edf\u4e2d\u5b89\u88c5 virtualenv\u3002\u5b83\u751a\u81f3\u53ef\u80fd\u4f1a\u5b58\u5728\u4e8e\u5305\u7ba1\u7406\u5668\u4e2d\u3002 virtualenv \u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u4f60\u53ef\u4ee5\u7acb\u5373\u6253\u5f00 shell \u7136\u540e\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u73af\u5883\u3002\u6211\u901a\u5e38\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u5176\u4e0b\u521b\u5efa\u4e00\u4e2a venv \u6587\u4ef6\u5939 $ mkdir myproject $ cd myproject $ virtualenv venv New python executable in venv/bin/python Installing distribute............done. \u73b0\u5728\uff0c\u65e0\u8bba\u4f55\u65f6\u4f60\u60f3\u5728\u67d0\u4e2a\u9879\u76ee\u4e0a\u5de5\u4f5c\uff0c\u53ea\u9700\u8981\u6fc0\u6d3b\u76f8\u5e94\u7684\u73af\u5883\u3002\u5728 OS X \u548c Linux \u4e0a\uff0c\u6267\u884c\u5982\u4e0b\u64cd\u4f5c: $ . venv/bin/activate \u65e0\u8bba\u901a\u8fc7\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u73b0\u5728\u5e94\u8be5\u5df2\u7ecf\u6fc0\u6d3b\u4e86 virtualenv\uff08\u6ce8\u610f\u4f60\u7684 shell \u63d0\u793a\u7b26\u663e\u793a\u7684\u662f\u5f53\u524d\u6d3b\u52a8\u7684\u73af\u5883\uff09\u3002 \u73b0\u5728\u4f60\u53ea\u9700\u8981\u952e\u5165\u4ee5\u4e0b\u7684\u547d\u4ee4\u6765\u6fc0\u6d3b virtualenv \u4e2d\u7684 Flask: $ pip install Flask \u51e0\u79d2\u949f\u540e\uff0c\u4e00\u5207\u90fd\u641e\u5b9a\u4e86\u3002","title":"\u5b89\u88c5\u65b9\u6cd5\u4e00\uff1avirtualenv(\u865a\u62df\u73af\u5883\u5b89\u88c5)"},{"location":"05-flask/no-flask-basic/#_2","text":"\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u867d\u7136\u6211\u4e0d\u63a8\u8350\u3002\u53ea\u9700\u8981\u4ee5 root \u6743\u9650\u8fd0\u884c pip\u3002\u73b0\u5728\u4ee5\u8fd9\u79cd\u6a21\u5f0f\u5b89\u88c5 flask\u3002 $ sudo pip install Flask","title":"\u5b89\u88c5\u65b9\u6cd5\u4e8c\uff1a\u5168\u5c40\u5b89\u88c5"},{"location":"05-flask/no-flask-basic/#_3","text":"\u4e00\u4e2a\u6700\u5c0f\u7684 Flask \u5e94\u7528\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837: from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return 'Hello World!' if __name__ == '__main__' : app . run () \u628a\u5b83\u4fdd\u5b58\u4e3a hello.py \uff08\u6216\u662f\u7c7b\u4f3c\u7684\uff09\uff0c\u7136\u540e\u7528 Python \u89e3\u91ca\u5668\u6765\u8fd0\u884c\u3002 \u786e\u4fdd\u4f60\u7684\u5e94\u7528\u6587\u4ef6\u540d\u4e0d\u662f flask.py \uff0c\u56e0\u4e3a\u8fd9\u5c06\u4e0e Flask \u672c\u8eab\u51b2\u7a81\u3002 python hello.py * Running on http://127.0.0.1:5000/ \u73b0\u5728\u8bbf\u95ee http://127.0.0.1:5000/ \uff0c\u4f60\u4f1a\u770b\u89c1 Hello World \u95ee\u5019\u3002\u6b32\u5173\u95ed\u670d\u52a1\u5668\uff0c\u6309 Ctrl+C\u3002 \u90a3\u4e48\uff0c\u8fd9\u6bb5\u4ee3\u7801\u505a\u4e86\u4ec0\u4e48\uff1f \u9996\u5148\uff0c\u6211\u4eec\u5bfc\u5165\u4e86 Flask \u7c7b\u3002\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5c06\u4f1a\u662f\u6211\u4eec\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u8be5\u7c7b\u7684\u5b9e\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5e94\u7528\u6a21\u5757\u6216\u8005\u5305\u7684\u540d\u79f0\u3002 \u5982\u679c\u4f60\u4f7f\u7528\u5355\u4e00\u7684\u6a21\u5757\uff08\u5982\u672c\u4f8b\uff09\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 name \uff0c\u56e0\u4e3a\u6a21\u5757\u7684\u540d\u79f0\u5c06\u4f1a\u56e0\u5176\u4f5c\u4e3a\u5355\u72ec\u5e94\u7528\u542f\u52a8\u8fd8\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u800c\u6709\u4e0d\u540c\uff08 \u4e5f\u5373\u662f '__main__' \u6216\u5b9e\u9645\u7684\u5bfc\u5165\u540d\uff09\u3002\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u8fd9\u6837 Flask \u624d\u77e5\u9053\u5230\u54ea\u53bb\u627e\u6a21\u677f\u3001\u9759\u6001\u6587\u4ef6\u7b49\u7b49\u3002\u8be6\u60c5\u89c1 Flask \u7684\u6587\u6863\u3002 \u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 route() \u88c5\u9970\u5668\u544a\u8bc9 Flask \u4ec0\u4e48\u6837\u7684 URL \u80fd\u89e6\u53d1\u6211\u4eec\u7684\u51fd\u6570\u3002 \u8fd9\u4e2a\u51fd\u6570\u7684\u540d\u5b57\u4e5f\u5728\u751f\u6210 URL \u65f6\u88ab\u7279\u5b9a\u7684\u51fd\u6570\u91c7\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u6211\u4eec\u60f3\u8981\u663e\u793a\u5728\u7528\u6237\u6d4f\u89c8\u5668\u4e2d\u7684\u4fe1\u606f\u3002 \u6700\u540e\u6211\u4eec\u7528 run() \u51fd\u6570\u6765\u8ba9\u5e94\u7528\u8fd0\u884c\u5728\u672c\u5730\u670d\u52a1\u5668\u4e0a\u3002 \u5176\u4e2d if __name__ =='__main__': \u786e\u4fdd\u670d\u52a1\u5668\u53ea\u4f1a\u5728\u8be5\u811a\u672c\u88ab Python \u89e3\u91ca\u5668\u76f4\u63a5\u6267\u884c\u7684\u65f6\u5019\u624d\u4f1a\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u7684\u65f6\u5019\u3002 \u5916\u90e8\u53ef\u8bbf\u95ee\u7684\u670d\u52a1\u5668 \u5982\u679c\u4f60\u8fd0\u884c\u4e86\u8fd9\u4e2a\u670d\u52a1\u5668\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u53ea\u80fd\u4ece\u4f60\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u8bbf\u95ee\uff0c\u7f51\u7edc\u4e2d\u5176\u5b83\u4efb\u4f55\u7684\u5730\u65b9\u90fd\u4e0d\u80fd\u8bbf\u95ee\u3002\u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4f60\u7684\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u4efb\u610f Python \u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u884c\u4e3a\u662f\u9ed8\u8ba4\u7684\u3002 \u5982\u679c\u4f60\u7981\u7528\u4e86 debug \u6216\u4fe1\u4efb\u4f60\u6240\u5728\u7f51\u7edc\u7684\u7528\u6237\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u4fee\u6539\u8c03\u7528 run() \u7684\u65b9\u6cd5\u4f7f\u4f60\u7684\u670d\u52a1\u5668\u516c\u5f00\u53ef\u7528\uff0c\u5982\u4e0b: app.run(host='0.0.0.0') \u8fd9\u4f1a\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u76d1\u542c\u6240\u6709\u516c\u7f51 IP\u3002","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"05-flask/no-flask-basic/#_4","text":"\u867d\u7136 run() \u65b9\u6cd5\u9002\u7528\u4e8e\u542f\u52a8\u672c\u5730\u7684\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u4f46\u662f\u4f60\u6bcf\u6b21\u4fee\u6539\u4ee3\u7801\u540e\u90fd\u8981\u624b\u52a8\u91cd\u542f\u5b83\u3002\u8fd9\u6837\u5e76\u4e0d\u591f\u4f18\u96c5\uff0c\u800c\u4e14 Flask \u53ef\u4ee5\u505a\u5230\u66f4\u597d\u3002\u5982\u679c\u4f60\u542f\u7528\u4e86\u8c03\u8bd5\u652f\u6301\uff0c\u670d\u52a1\u5668\u4f1a\u5728\u4ee3\u7801\u4fee\u6539\u540e\u81ea\u52a8\u91cd\u65b0\u8f7d\u5165\uff0c\u5e76\u5728\u53d1\u751f\u9519\u8bef\u65f6\u63d0\u4f9b\u4e00\u4e2a\u76f8\u5f53\u6709\u7528\u7684\u8c03\u8bd5\u5668\u3002 \u6709\u4e24\u79cd\u9014\u5f84\u6765\u542f\u7528\u8c03\u8bd5\u6a21\u5f0f\u3002\u4e00\u79cd\u662f\u76f4\u63a5\u5728\u5e94\u7528\u5bf9\u8c61\u4e0a\u8bbe\u7f6e: app . debug = True app . run () \u53e6\u4e00\u79cd\u662f\u4f5c\u4e3a run \u65b9\u6cd5\u7684\u4e00\u4e2a\u53c2\u6570\u4f20\u5165: app.run(debug=True) \u4e24\u79cd\u65b9\u6cd5\u7684\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002 \u6ce8\u610f \u5c3d\u7ba1\u4ea4\u4e92\u5f0f\u8c03\u8bd5\u5668\u5728\u5141\u8bb8 fork \u7684\u73af\u5883\u4e2d\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\uff08\u4e5f\u5373\u5728\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\u6b63\u5e38\u4f7f\u7528\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff09\uff0c\u4f46\u5b83\u4f9d\u7136\u5141\u8bb8\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002\u8fd9\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u5de8\u5927\u7684\u5b89\u5168\u9690\u60a3\uff0c\u56e0\u6b64\u5b83 \u7edd\u5bf9\u4e0d\u80fd\u7528\u4e8e\u751f\u4ea7\u73af\u5883 \u3002","title":"\u8c03\u8bd5\u6a21\u5f0f"},{"location":"05-flask/no-flask-basic/#_5","text":"\u73b0\u4ee3 Web \u5e94\u7528\u7684 URL \u5341\u5206\u4f18\u96c5\uff0c\u6613\u4e8e\u4eba\u4eec\u8fa8\u8bc6\u8bb0\u5fc6\uff0c\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u90a3\u4e9b\u9762\u5411\u4f7f\u7528\u4f4e\u901f\u7f51\u7edc\u8fde\u63a5\u79fb\u52a8\u8bbe\u5907\u8bbf\u95ee\u7684\u5e94\u7528\u7279\u522b\u6709\u7528\u3002\u5982\u679c\u53ef\u4ee5\u4e0d\u8bbf\u95ee\u7d22\u5f15\u9875\uff0c\u800c\u662f\u76f4\u63a5\u8bbf\u95ee\u60f3\u8981\u7684\u90a3\u4e2a\u9875\u9762\uff0c\u4ed6\u4eec\u591a\u534a\u4f1a\u7b11\u9010\u989c\u5f00\u800c\u518d\u5ea6\u5149\u987e\u3002 \u5982\u4e0a\u6240\u89c1\uff0c route() \u88c5\u9970\u5668\u628a\u4e00\u4e2a\u51fd\u6570\u7ed1\u5b9a\u5230\u5bf9\u5e94\u7684 URL \u4e0a\u3002\u4f46\u662f\uff0c\u4e0d\u4ec5\u5982\u6b64\uff01\u4f60\u53ef\u4ee5\u6784\u9020\u542b\u6709\u52a8\u6001\u90e8\u5206\u7684 URL\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e00\u4e2a\u51fd\u6570\u4e0a\u9644\u7740\u591a\u4e2a\u89c4\u5219\u3002 \u8fd9\u91cc\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u4f8b\u5b50: @app . route ( '/' ) def index (): return 'Index Page' @app . route ( '/hello' ) def hello (): return 'Hello World'","title":"\u8def\u7531"},{"location":"05-flask/no-flask-basic/#url","text":"\u8981\u7ed9 URL \u6dfb\u52a0\u53d8\u91cf\u90e8\u5206\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u7279\u6b8a\u7684\u5b57\u6bb5\u6807\u8bb0\u4e3a <variable_name> \uff0c \u8fd9\u4e2a\u90e8\u5206\u5c06\u4f1a\u4f5c\u4e3a\u547d\u540d\u53c2\u6570\u4f20\u9012\u5230\u4f60\u7684\u51fd\u6570\u3002\u89c4\u5219\u53ef\u4ee5\u7528 <converter:variable_name> \u6307\u5b9a\u4e00\u4e2a\u53ef\u9009\u7684\u8f6c\u6362\u5668\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4e0d\u9519\u7684\u4f8b\u5b50: @app . route ( '/user/<username>' ) def show_user_profile ( username ): # show the user profile for that user return 'User %s ' % username @app . route ( '/post/<int:post_id>' ) def show_post ( post_id ): # show the post with the given id, the id is an integer return 'Post %d ' % post_id \u8f6c\u6362\u5668\u6709\u4e0b\u9762\u51e0\u79cd\uff1a int \u63a5\u53d7\u6574\u6570 float \u540c int \uff0c\u4f46\u662f\u63a5\u53d7\u6d6e\u70b9\u6570 path \u548c\u9ed8\u8ba4\u7684\u76f8\u4f3c\uff0c\u4f46\u4e5f\u63a5\u53d7\u659c\u7ebf","title":"URL \u4f20\u53c2"},{"location":"05-flask/no-flask-basic/#url_1","text":"Flask \u7684 URL \u89c4\u5219\u57fa\u4e8e Werkzeug \u7684\u8def\u7531\u6a21\u5757\u3002\u8fd9\u4e2a\u6a21\u5757\u80cc\u540e\u7684\u601d\u60f3\u662f\u57fa\u4e8e Apache \u4ee5\u53ca\u66f4\u65e9\u7684 HTTP \u670d\u52a1\u5668\u4e3b\u5f20\u7684\u5148\u4f8b\uff0c\u4fdd\u8bc1\u4f18\u96c5\u4e14\u552f\u4e00\u7684 URL\u3002 \u4ee5\u8fd9\u4e24\u4e2a\u89c4\u5219\u4e3a\u4f8b: @app . route ( '/projects/' ) def projects (): return 'The project page' @app . route ( '/about' ) def about (): return 'The about page' \u867d\u7136\u5b83\u4eec\u770b\u8d77\u6765\u7740\u5b9e\u76f8\u4f3c\uff0c\u4f46\u5b83\u4eec\u7ed3\u5c3e\u659c\u7ebf\u7684\u4f7f\u7528\u5728 URL \u5b9a\u4e49 \u4e2d\u4e0d\u540c\u3002 \u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d\uff0c\u6307\u5411 projects \u7684\u89c4\u8303 URL \u5c3e\u7aef\u6709\u4e00\u4e2a\u659c\u7ebf\u3002\u8fd9\u79cd\u611f\u89c9\u5f88\u50cf\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u5939\u3002\u8bbf\u95ee\u4e00\u4e2a\u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u88ab Flask \u91cd\u5b9a\u5411\u5230\u5e26\u659c\u7ebf\u7684\u89c4\u8303 URL \u53bb\u3002 \u7136\u800c\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684 URL \u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\uff0c\u7c7b\u4f3c UNIX-like \u7cfb\u7edf\u4e0b\u7684\u6587\u4ef6\u7684\u8def\u5f84\u540d\u3002\u8bbf\u95ee\u7ed3\u5c3e\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u4ea7\u751f\u4e00\u4e2a 404 \u201cNot Found\u201d \u9519\u8bef\u3002 \u8fd9\u4e2a\u884c\u4e3a\u4f7f\u5f97\u5728\u9057\u5fd8\u5c3e\u659c\u7ebf\u65f6\uff0c\u5141\u8bb8\u5173\u8054\u7684 URL \u63a5\u4efb\u5de5\u4f5c\uff0c\u4e0e Apache \u548c\u5176\u5b83\u7684\u670d\u52a1\u5668\u7684\u884c\u4e3a\u5e76\u65e0\u4e8c\u5f02\u3002\u6b64\u5916\uff0c\u4e5f\u4fdd\u8bc1\u4e86 URL \u7684\u552f\u4e00\uff0c\u6709\u52a9\u4e8e\u907f\u514d\u641c\u7d22\u5f15\u64ce\u7d22\u5f15\u540c\u4e00\u4e2a\u9875\u9762\u4e24\u6b21\u3002","title":"\u552f\u4e00 URL / \u91cd\u5b9a\u5411\u884c\u4e3a"},{"location":"05-flask/no-flask-basic/#url_2","text":"\u5982\u679c Flask \u80fd\u5339\u914d URL\uff0c\u90a3\u4e48 Flask \u53ef\u4ee5\u751f\u6210\u5b83\u4eec\u5417\uff1f\u5f53\u7136\u53ef\u4ee5\u3002\u4f60\u53ef\u4ee5\u7528 url_for() \u6765\u7ed9\u6307\u5b9a\u7684\u51fd\u6570\u6784\u9020 URL\u3002\u5b83\u63a5\u53d7\u51fd\u6570\u540d\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4e5f\u63a5\u53d7\u5bf9\u5e94 URL \u89c4\u5219\u7684\u53d8\u91cf\u90e8\u5206\u7684\u547d\u540d\u53c2\u6570\u3002\u672a\u77e5\u53d8\u91cf\u90e8\u5206\u4f1a\u6dfb\u52a0\u5230 URL \u672b\u5c3e\u4f5c\u4e3a\u67e5\u8be2\u53c2\u6570\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: >>> from flask import Flask , url_for >>> app = Flask ( __name__ ) >>> @app . route ( '/' ) ... def index (): pass ... >>> @app . route ( '/login' ) ... def login (): pass ... >>> @app . route ( '/user/<username>' ) ... def profile ( username ): pass ... >>> with app . test_request_context (): ... print url_for ( 'index' ) ... print url_for ( 'login' ) ... print url_for ( 'login' , next = '/' ) ... print url_for ( 'profile' , username = 'John Doe' ) ... / / login / login ? next =/ / user / John % 20 Doe \uff08\u8fd9\u91cc\u4e5f\u7528\u5230\u4e86 test_request_context() \u65b9\u6cd5\uff0c\u4e0b\u9762\u4f1a\u89e3\u91ca\u3002\u5373\u4f7f\u6211\u4eec\u6b63\u5728\u901a\u8fc7 Python \u7684 shell \u8fdb\u884c\u4ea4\u4e92\uff0c\u5b83\u4f9d\u7136\u4f1a\u544a\u8bc9 Flask \u8981\u8868\u73b0\u4e3a\u6b63\u5728\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u89e3\u91ca\u3002 \u73af\u5883\u5c40\u90e8\u53d8\u91cf \uff09 \u4e3a\u4ec0\u4e48\u4f60\u8981\u6784\u5efa URL \u800c\u975e\u5728\u6a21\u677f\u4e2d\u786c\u7f16\u7801\uff1f\u8fd9\u91cc\u6709\u4e09\u4e2a\u7edd\u5999\u7684\u7406\u7531\uff1a \u53cd\u5411\u6784\u5efa\u901a\u5e38\u6bd4\u786c\u7f16\u7801\u7684\u63cf\u8ff0\u6027\u66f4\u597d\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5141\u8bb8\u4f60\u4e00\u6b21\u6027\u4fee\u6539 URL\uff0c \u800c\u4e0d\u662f\u5230\u5904\u8fb9\u627e\u8fb9\u6539\u3002 URL \u6784\u5efa\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\u548c Unicode \u6570\u636e\uff0c\u514d\u53bb\u4f60\u5f88\u591a\u9ebb\u70e6\u3002 \u5982\u679c\u4f60\u7684\u5e94\u7528\u4e0d\u4f4d\u4e8e URL \u7684\u6839\u8def\u5f84\uff08\u6bd4\u5982\uff0c\u5728 /myapplication \u4e0b\uff0c\u800c\u4e0d\u662f / \uff09\uff0c url_for() \u4f1a\u59a5\u5584\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002","title":"\u6784\u9020 URL"},{"location":"05-flask/no-flask-basic/#http","text":"HTTP \uff08\u4e0e Web \u5e94\u7528\u4f1a\u8bdd\u7684\u534f\u8bae\uff09\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u8bbf\u95ee URL \u65b9\u6cd5\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8def\u7531\u53ea\u56de\u5e94 GET \u8bf7\u6c42\uff0c\u4f46\u662f\u901a\u8fc7 route() \u88c5\u9970\u5668\u4f20\u9012 methods \u53c2\u6570\u53ef\u4ee5\u6539\u53d8\u8fd9\u4e2a\u884c\u4e3a\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : do_the_login () else : show_the_login_form () \u5982\u679c\u5b58\u5728 GET \uff0c\u90a3\u4e48\u4e5f\u4f1a\u66ff\u4f60\u81ea\u52a8\u5730\u6dfb\u52a0 HEAD\uff0c\u65e0\u9700\u5e72\u9884\u3002\u5b83\u4f1a\u786e\u4fdd\u9075\u7167 HTTP RFC \uff08\u63cf\u8ff0 HTTP \u534f\u8bae\u7684\u6587\u6863\uff09\u5904\u7406 HEAD \u8bf7\u6c42\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5b8c\u5168\u5ffd\u7565\u8fd9\u90e8\u5206\u7684 HTTP \u89c4\u8303\u3002\u540c\u6837\uff0c\u81ea\u4ece Flask 0.6 \u8d77\uff0c \u4e5f\u5b9e\u73b0\u4e86 OPTIONS \u7684\u81ea\u52a8\u5904\u7406\u3002 \u4f60\u4e0d\u77e5\u9053\u4e00\u4e2a HTTP \u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u8fd9\u91cc\u4f1a\u7b80\u8981\u4ecb\u7ecd HTTP \u65b9\u6cd5\u548c\u5b83\u4eec\u4e3a\u4ec0\u4e48\u91cd\u8981\uff1a HTTP \u65b9\u6cd5\uff08\u4e5f\u7ecf\u5e38\u88ab\u53eb\u505a\u201c\u8c13\u8bcd\u201d\uff09\u544a\u77e5\u670d\u52a1\u5668\uff0c\u5ba2\u6237\u7aef\u60f3\u5bf9\u8bf7\u6c42\u7684\u9875\u9762 \u505a \u4e9b\u4ec0\u4e48\u3002\u4e0b\u9762\u7684\u90fd\u662f\u975e\u5e38\u5e38\u89c1\u7684\u65b9\u6cd5\uff1a GET\uff1a\u6d4f\u89c8\u5668\u544a\u77e5\u670d\u52a1\u5668\uff1a\u53ea \u83b7\u53d6 \u9875\u9762\u4e0a\u7684\u4fe1\u606f\u5e76\u53d1\u7ed9\u6211\u3002\u8fd9\u662f\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u3002 HEAD\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u6b32\u83b7\u53d6\u4fe1\u606f\uff0c\u4f46\u662f\u53ea\u5173\u5fc3 \u6d88\u606f\u5934 \u3002\u5e94\u7528\u5e94\u50cf\u5904\u7406 GET \u8bf7\u6c42\u4e00\u6837\u6765\u5904\u7406\u5b83\uff0c\u4f46\u662f\u4e0d\u5206\u53d1\u5b9e\u9645\u5185\u5bb9\u3002\u5728 Flask \u4e2d\u4f60\u5b8c\u5168\u65e0\u9700 \u4eba\u5de5 \u5e72\u9884\uff0c\u5e95\u5c42\u7684 Werkzeug \u5e93\u5df2\u7ecf\u66ff\u4f60\u6253\u70b9\u597d\u4e86\u3002 POST\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u60f3\u5728 URL \u4e0a \u53d1\u5e03 \u65b0\u4fe1\u606f\u3002\u5e76\u4e14\uff0c\u670d\u52a1\u5668\u5fc5\u987b\u786e\u4fdd \u6570\u636e\u5df2\u5b58\u50a8\u4e14\u4ec5\u5b58\u50a8\u4e00\u6b21\u3002\u8fd9\u662f HTML \u8868\u5355\u901a\u5e38\u53d1\u9001\u6570\u636e\u5230\u670d\u52a1\u5668\u7684\u65b9\u6cd5\u3002 PUT\uff1a\u7c7b\u4f3c POST \u4f46\u662f\u670d\u52a1\u5668\u53ef\u80fd\u89e6\u53d1\u4e86\u5b58\u50a8\u8fc7\u7a0b\u591a\u6b21\uff0c\u591a\u6b21\u8986\u76d6\u6389\u65e7\u503c\u3002\u4f60\u53ef \u80fd\u4f1a\u95ee\u8fd9\u6709\u4ec0\u4e48\u7528\uff0c\u5f53\u7136\u8fd9\u662f\u6709\u539f\u56e0\u7684\u3002\u8003\u8651\u5230\u4f20\u8f93\u4e2d\u8fde\u63a5\u53ef\u80fd\u4f1a\u4e22\u5931\uff0c\u5728 \u8fd9\u79cd \u60c5\u51b5\u4e0b\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u7cfb\u7edf\u53ef\u80fd\u5b89\u5168\u5730\u7b2c\u4e8c\u6b21\u63a5\u6536\u8bf7\u6c42\uff0c\u800c \u4e0d\u7834\u574f\u5176\u5b83\u4e1c\u897f\u3002\u56e0\u4e3a POST \u5b83\u53ea\u89e6\u53d1\u4e00\u6b21\uff0c\u6240\u4ee5\u7528 POST \u662f\u4e0d\u53ef\u80fd\u7684\u3002 DELETE\uff1a\u5220\u9664\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002 OPTIONS\uff1a\u7ed9\u5ba2\u6237\u7aef\u63d0\u4f9b\u4e00\u4e2a\u654f\u6377\u7684\u9014\u5f84\u6765\u5f04\u6e05\u8fd9\u4e2a URL \u652f\u6301\u54ea\u4e9b HTTP \u65b9\u6cd5\u3002 \u4ece Flask 0.6 \u5f00\u59cb\uff0c\u5b9e\u73b0\u4e86\u81ea\u52a8\u5904\u7406\u3002.","title":"HTTP \u65b9\u6cd5"},{"location":"05-flask/no-flask-basic/#_6","text":"\u52a8\u6001 web \u5e94\u7528\u4e5f\u4f1a\u9700\u8981\u9759\u6001\u6587\u4ef6\uff0c\u901a\u5e38\u662f CSS \u548c JavaScript \u6587\u4ef6\u3002\u7406\u60f3\u72b6\u51b5\u4e0b\uff0c \u4f60\u5df2\u7ecf\u914d\u7f6e\u597d Web \u670d\u52a1\u5668\u6765\u63d0\u4f9b\u9759\u6001\u6587\u4ef6\uff0c\u4f46\u662f\u5728\u5f00\u53d1\u4e2d\uff0cFlask \u4e5f\u53ef\u4ee5\u505a\u5230\u3002 \u53ea\u8981\u5728\u4f60\u7684\u5305\u4e2d\u6216\u662f\u6a21\u5757\u7684\u6240\u5728\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a static \u7684\u6587\u4ef6\u5939\uff0c\u5728\u5e94\u7528\u4e2d\u4f7f\u7528 /static \u5373\u53ef\u8bbf\u95ee\u3002 \u7ed9\u9759\u6001\u6587\u4ef6\u751f\u6210 URL \uff0c\u4f7f\u7528\u7279\u6b8a\u7684 'static' \u7aef\u70b9\u540d: ```python url_for('static', filename='style.css') \u8fd9\u4e2a\u6587\u4ef6\u5e94\u8be5\u5b58\u50a8\u5728\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684 `static/style.css` \u3002 ## \u6a21\u677f\u6e32\u67d3 \u7528 Python \u751f\u6210 HTML \u5341\u5206\u65e0\u8da3\uff0c\u800c\u4e14\u76f8\u5f53\u7e41\u7410\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u624b\u52a8\u5bf9 HTML \u505a\u8f6c\u4e49\u6765\u4fdd\u8bc1\u5e94\u7528\u7684\u5b89\u5168\u3002\u4e3a\u6b64\uff0cFlask \u914d\u5907\u4e86 [Jinja2](http://jinja.pocoo.org/) \u6a21\u677f\u5f15\u64ce\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 [`render_template()`](http://docs.jinkan.org/docs/flask/api.html#flask.render_template) \u65b9\u6cd5\u6765\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9700\u8981\u505a\u7684\u4e00\u5207\u5c31\u662f\u5c06\u6a21\u677f\u540d\u548c\u4f60\u60f3\u4f5c\u4e3a\u5173\u952e\u5b57\u7684\u53c2\u6570\u4f20\u5165\u6a21\u677f\u7684\u53d8\u91cf\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c55\u793a\u5982\u4f55\u6e32\u67d3\u6a21\u677f\u7684\u7b80\u4f8b: ```python from flask import render_template @app.route('/hello/') @app.route('/hello/<name>') def hello(name=None): return render_template('hello.html', name=name) Flask \u4f1a\u5728 templates \u6587\u4ef6\u5939\u91cc\u5bfb\u627e\u6a21\u677f\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u662f\u4e2a\u6a21\u5757\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u5e94\u8be5\u4e0e\u6a21\u5757\u540c\u7ea7\uff1b\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u5305\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5939\u4f5c\u4e3a\u5305\u7684\u5b50\u76ee\u5f55: \u60c5\u51b5 1 : \u6a21\u5757: /application.py /templates /hello.html \u60c5\u51b5 2 : \u5305: /application /__init__.py /templates /hello.html \u5173\u4e8e\u6a21\u677f\uff0c\u4f60\u53ef\u4ee5\u53d1\u6325 Jinja2 \u6a21\u677f\u7684\u5168\u90e8\u5b9e\u4f8b\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u89c1 Jinja2 \u6a21\u677f\u6587\u6863 \u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u6a21\u677f\u5b9e\u4f8b\uff1a <!DOCTYPE html> < title > Hello from Flask </ title > {% if name %} < h1 > Hello {{ name }}! </ h1 > {% else %} < h1 > Hello World! </ h1 > {% endif %} \u5728\u6a21\u677f\u91cc\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8bbf\u95ee request \u3001 session \u548c g [ 1] \u5bf9\u8c61\uff0c \u4ee5\u53ca get_flashed_messages() \u51fd\u6570\u3002 \u6a21\u677f\u7ee7\u627f\u8ba9\u6a21\u677f\u7528\u8d77\u6765\u76f8\u5f53\u987a\u624b\u3002\u5982\u6b32\u4e86\u89e3\u7ee7\u627f\u7684\u5de5\u4f5c\u673a\u7406\uff0c\u8bf7\u8df3\u8f6c\u5230 \u6a21\u677f\u7ee7\u627f \u6a21\u5f0f\u7684\u6587\u6863\u3002\u6700\u8d77\u7801\uff0c\u6a21\u677f\u7ee7\u627f\u80fd\u4f7f\u7279\u5b9a\u5143\u7d20 \uff08\u6bd4\u5982\u9875\u7709\u3001\u5bfc\u822a\u680f\u548c\u9875\u811a\uff09\u53ef\u4ee5\u51fa\u73b0\u5728\u6240\u6709\u7684\u9875\u9762\u3002 \u81ea\u52a8\u8f6c\u4e49\u529f\u80fd\u9ed8\u8ba4\u662f\u5f00\u542f\u7684\uff0c\u6240\u4ee5\u5982\u679c name \u5305\u542b HTML \uff0c\u5b83\u5c06\u4f1a\u88ab\u81ea\u52a8\u8f6c\u4e49\u3002\u5982\u679c\u4f60\u80fd\u4fe1\u4efb\u4e00\u4e2a\u53d8\u91cf\uff0c\u5e76\u4e14\u4f60\u77e5\u9053\u5b83\u662f\u5b89\u5168\u7684\uff08\u4f8b\u5982\u4e00\u4e2a\u6a21\u5757\u628a Wiki \u6807\u8bb0\u8f6c\u6362\u4e3a HTML\uff09\uff0c\u4f60\u53ef\u4ee5\u7528 Markup \u7c7b\u6216 |safe \u8fc7\u6ee4\u5668\u5728\u6a21\u677f\u4e2d\u628a\u5b83\u6807\u8bb0\u4e3a\u5b89\u5168\u7684\u3002\u5728 Jinja 2 \u6587\u6863\u4e2d\uff0c\u4f60\u4f1a\u770b\u5230\u66f4\u591a\u7684\u4f8b\u5b50\u3002 \u8fd9\u91cc\u662f\u4e00\u4e2a Markup \u7c7b\u5982\u4f55\u4f7f\u7528\u7684\u7b80\u5355\u4ecb\u7ecd: >>> from flask import Markup >>> Markup ( '<strong>Hello %s !</strong>' ) % '<blink>hacker</blink>' Markup ( u '<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>' ) >>> Markup . escape ( '<blink>hacker</blink>' ) Markup ( u '&lt;blink&gt;hacker&lt;/blink&gt;' ) >>> Markup ( '<em>Marked up</em> &raquo; HTML' ) . striptags () u 'Marked up \\xbb HTML' \u5728 0.5 \u7248\u66f4\u6539: \u81ea\u52a8\u8f6c\u4e49\u4e0d\u518d\u5728\u6240\u6709\u6a21\u677f\u4e2d\u542f\u7528\u3002\u4e0b\u5217\u6269\u5c55\u540d\u7684\u6a21\u677f\u4f1a\u89e6\u53d1\u81ea\u52a8\u8f6c\u4e49\uff1a .html \u3001 .htm \u3001 .xml \u3001 .xhtml \u3002\u4ece\u5b57\u7b26\u4e32\u52a0\u8f7d\u7684\u6a21\u677f\u4f1a\u7981\u7528\u81ea\u52a8\u8f6c\u4e49\u3002 [ 1] \u4e0d\u786e\u5b9a g \u5bf9\u8c61\u662f\u4ec0\u4e48\uff1f\u5b83\u5141\u8bb8\u4f60\u6309\u9700\u5b58\u50a8\u4fe1\u606f\uff0c \u67e5\u770b\uff08 g \uff09\u5bf9\u8c61\u7684\u6587\u6863\u548c \u5728 Flask \u4e2d\u4f7f\u7528 SQLite 3 \u7684\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002","title":"\u9759\u6001\u6587\u4ef6"},{"location":"05-flask/no-flask-basic/#_7","text":"\u5bf9\u4e8e Web \u5e94\u7528\uff0c\u4e0e\u5ba2\u6237\u7aef\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u7684\u6570\u636e\u4ea4\u4e92\u81f3\u5173\u91cd\u8981\u3002\u5728 Flask \u4e2d\u7531\u5168\u5c40\u7684 request \u5bf9\u8c61\u6765\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\u5982\u679c\u4f60\u6709\u4e00\u5b9a\u7684 Python \u7ecf\u9a8c\uff0c\u4f60\u4f1a\u597d\u5947\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u662f\u5168\u5c40\u7684\uff0c\u4e3a\u4ec0\u4e48 Flask \u8fd8\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002\u7b54\u6848\u662f\u73af\u5883\u4f5c\u7528\u57df\uff1a","title":"\u8bbf\u95ee\u8bf7\u6c42\u6570\u636e"},{"location":"05-flask/no-flask-basic/#_8","text":"\u5185\u5e55 \u5982\u679c\u4f60\u60f3\u7406\u89e3\u5176\u5de5\u4f5c\u673a\u5236\u53ca\u5982\u4f55\u5229\u7528\u73af\u5883\u5c40\u90e8\u53d8\u91cf\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u8bf7\u9605\u8bfb\u6b64\u8282\uff0c\u5426\u5219\u53ef\u8df3\u8fc7\u3002 Flask \u4e2d\u7684\u67d0\u4e9b\u5bf9\u8c61\u662f\u5168\u5c40\u5bf9\u8c61\uff0c\u4f46\u5374\u4e0d\u662f\u901a\u5e38\u7684\u90a3\u79cd\u3002\u8fd9\u4e9b\u5bf9\u8c61\u5b9e\u9645\u4e0a\u662f\u7279\u5b9a\u73af\u5883\u7684\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7406\u3002\u867d\u7136\u5f88\u62d7\u53e3\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f88\u5bb9\u6613\u7406\u89e3\u3002 \u60f3\u8c61\u4e00\u4e0b\u5904\u7406\u7ebf\u7a0b\u7684\u73af\u5883\u3002\u4e00\u4e2a\u8bf7\u6c42\u4f20\u5165\uff0cWeb \u670d\u52a1\u5668\u51b3\u5b9a\u751f\u6210\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff08 \u6216\u8005\u522b\u7684\u4ec0\u4e48\u4e1c\u897f\uff0c\u53ea\u8981\u8fd9\u4e2a\u5e95\u5c42\u7684\u5bf9\u8c61\u53ef\u4ee5\u80dc\u4efb\u5e76\u53d1\u7cfb\u7edf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7ebf\u7a0b\uff09\u3002 \u5f53 Flask \u5f00\u59cb\u5b83\u5185\u90e8\u7684\u8bf7\u6c42\u5904\u7406\u65f6\uff0c\u5b83\u8ba4\u5b9a\u5f53\u524d\u7ebf\u7a0b\u662f\u6d3b\u52a8\u7684\u73af\u5883\uff0c\u5e76\u7ed1\u5b9a\u5f53\u524d\u7684\u5e94\u7528\u548c WSGI \u73af\u5883\u5230\u90a3\u4e2a\u73af\u5883\u4e0a\uff08\u7ebf\u7a0b\uff09\u3002\u5b83\u7684\u5b9e\u73b0\u5f88\u5de7\u5999\uff0c\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u5e94\u7528\u8c03\u7528\u53e6\u4e00\u4e2a\u5e94\u7528\u65f6\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002 \u6240\u4ee5\uff0c\u8fd9\u5bf9\u4f60\u6765\u8bf4\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u9664\u975e\u4f60\u8981\u505a\u7c7b\u4f3c\u5355\u5143\u6d4b\u8bd5\u7684\u4e1c\u897f\uff0c\u5426\u5219\u4f60\u57fa\u672c\u4e0a\u53ef\u4ee5\u5b8c\u5168\u65e0\u89c6\u5b83\u3002\u4f60\u4f1a\u53d1\u73b0\u4f9d\u8d56\u4e8e\u4e00\u6bb5\u8bf7\u6c42\u5bf9\u8c61\u7684\u4ee3\u7801\uff0c\u56e0\u6ca1\u6709\u8bf7\u6c42\u5bf9\u8c61\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u81ea\u884c\u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u5e76\u4e14\u628a\u5b83\u7ed1\u5b9a\u5230\u73af\u5883\u4e2d\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u7528 test_request_context() \u73af\u5883\u7ba1\u7406\u5668\u3002\u7ed3\u5408 with \u58f0\u660e\uff0c\u7ed1\u5b9a\u4e00\u4e2a\u6d4b\u8bd5\u8bf7\u6c42\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u4e0e\u4e4b\u4ea4\u4e92\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50: from flask import request with app . test_request_context ( '/hello' , method = 'POST' ): # now you can do something with the request until the # end of the with block, such as basic assertions: assert request . path == '/hello' assert request . method == 'POST' \u53e6\u4e00\u79cd\u53ef\u80fd\u662f\uff1a\u4f20\u9012\u6574\u4e2a WSGI \u73af\u5883\u7ed9 request_context() \u65b9\u6cd5: from flask import request with app . request_context ( environ ): assert request . method == 'POST'","title":"\u73af\u5883\u5c40\u90e8\u53d8\u91cf"},{"location":"05-flask/no-flask-basic/#_9","text":"API \u7ae0\u8282\u5bf9\u8bf7\u6c42\u5bf9\u8c61\u4f5c\u4e86\u8be6\u5c3d\u9610\u8ff0\uff08\u53c2\u89c1 request \uff09\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e0d\u4f1a\u8d58\u8ff0\u3002\u6b64\u5904\u5bbd\u6cdb\u4ecb\u7ecd\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u3002\u9996\u5148\u4ece flask \u6a21\u5757\u91cc\u5bfc\u5165\u5b83: from flask import request \u5f53\u524d\u8bf7\u6c42\u7684 HTTP \u65b9\u6cd5\u53ef\u901a\u8fc7 method \u5c5e\u6027\u6765\u8bbf\u95ee\u3002\u901a\u8fc7:attr:~flask.request.form \u5c5e\u6027\u6765\u8bbf\u95ee\u8868\u5355\u6570\u636e\uff08 POST \u6216 PUT \u8bf7\u6c42\u63d0\u4ea4\u7684\u6570\u636e\uff09\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u7528\u5230\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e24\u4e2a\u5c5e\u6027\u7684\u5b8c\u6574\u5b9e\u4f8b: @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): error = None if request . method == 'POST' : if ( request . form [ 'username' ], request . form [ 'password' ]): return log_the_user_in ( request . form [ 'username' ]) else : error = 'Invalid username/password' # the code below is executed if the request method # was GET or the credentials were invalid return render_template ( 'login.html' , error = error ) \u5f53\u8bbf\u95ee form \u5c5e\u6027\u4e2d\u7684\u4e0d\u5b58\u5728\u7684\u952e\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4f1a\u629b\u51fa\u4e00\u4e2a\u7279\u6b8a\u7684 KeyError \u5f02\u5e38\u3002\u4f60\u53ef\u4ee5\u50cf\u6355\u83b7\u6807\u51c6\u7684 KeyError \u4e00\u6837\u6765\u6355\u83b7\u5b83\u3002 \u5982\u679c\u4f60\u4e0d\u8fd9\u4e48\u505a\uff0c\u5b83\u4f1a\u663e\u793a\u4e00\u4e2a HTTP 400 Bad Request \u9519\u8bef\u9875\u9762\u3002\u6240\u4ee5\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\u4f60\u5e76\u4e0d\u9700\u8981\u5e72\u9884\u8fd9\u4e2a\u884c\u4e3a\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7 args \u5c5e\u6027\u6765\u8bbf\u95ee URL \u4e2d\u63d0\u4ea4\u7684\u53c2\u6570 \uff08 ?key=value \uff09: searchword = request . args . get ( 'q' , '' ) \u6211\u4eec\u63a8\u8350\u7528 get \u6765\u8bbf\u95ee URL \u53c2\u6570\u6216\u6355\u83b7 KeyError \uff0c\u56e0\u4e3a\u7528\u6237\u53ef\u80fd\u4f1a\u4fee\u6539 URL\uff0c\u5411\u4ed6\u4eec\u5c55\u73b0\u4e00\u4e2a 400 bad request \u9875\u9762\u4f1a\u5f71\u54cd\u7528\u6237\u4f53\u9a8c\u3002","title":"\u8bf7\u6c42\u5bf9\u8c61"},{"location":"05-flask/no-flask-basic/#_10","text":"\u7528 Flask \u5904\u7406\u6587\u4ef6\u4e0a\u4f20\u5f88\u7b80\u5355\u3002\u53ea\u8981\u786e\u4fdd\u4f60\u6ca1\u5fd8\u8bb0\u5728 HTML \u8868\u5355\u4e2d\u8bbe\u7f6e enctype=\"multipart/form-data\" \u5c5e\u6027\uff0c\u4e0d\u7136\u4f60\u7684\u6d4f\u89c8\u5668\u6839\u672c\u4e0d\u4f1a\u53d1\u9001\u6587\u4ef6\u3002 \u5df2\u4e0a\u4f20\u7684\u6587\u4ef6\u5b58\u50a8\u5728\u5185\u5b58\u6216\u662f\u6587\u4ef6\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u4e34\u65f6\u7684\u4f4d\u7f6e\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u5bf9\u8c61\u7684 files \u5c5e\u6027\u8bbf\u95ee\u5b83\u4eec\u3002\u6bcf\u4e2a\u4e0a\u4f20\u7684\u6587\u4ef6\u90fd\u4f1a\u5b58\u50a8\u5728\u8fd9\u4e2a\u5b57\u5178\u91cc\u3002\u5b83\u8868\u73b0\u8fd1\u4e4e\u4e3a\u4e00\u4e2a\u6807\u51c6\u7684 Python file \u5bf9\u8c61\uff0c\u4f46\u5b83\u8fd8\u6709\u4e00\u4e2a save() \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8\u4f60\u628a\u6587\u4ef6\u4fdd\u5b58\u5230\u670d\u52a1\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u7528\u5b83\u4fdd\u5b58\u6587\u4ef6\u7684\u4f8b\u5b50: from flask import request @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/uploaded_file.txt' ) ... \u5982\u679c\u4f60\u60f3\u77e5\u9053\u4e0a\u4f20\u524d\u6587\u4ef6\u5728\u5ba2\u6237\u7aef\u7684\u6587\u4ef6\u540d\u662f\u4ec0\u4e48\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee filename \u5c5e\u6027\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c \u6c38\u8fdc\u4e0d\u8981\u4fe1\u4efb\u8fd9\u4e2a\u503c\uff0c\u8fd9\u4e2a\u503c\u662f\u53ef\u4ee5\u4f2a\u9020\u7684\u3002\u5982\u679c\u4f60\u8981\u628a\u6587\u4ef6\u6309\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u6587\u4ef6\u540d\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u90a3\u4e48\u8bf7\u628a\u5b83\u4f20\u9012\u7ed9 Werkzeug \u63d0\u4f9b\u7684 secure_filename() \u51fd\u6570: from flask import request from werkzeug import secure_filename @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/' + secure_filename ( f . filename )) ...","title":"\u6587\u4ef6\u4e0a\u4f20"},{"location":"05-flask/no-flask-basic/#cookies","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7 cookies \u5c5e\u6027\u6765\u8bbf\u95ee Cookies\uff0c\u7528\u54cd\u5e94\u5bf9\u8c61\u7684 set_cookie \u65b9\u6cd5\u6765\u8bbe\u7f6e Cookies\u3002\u8bf7\u6c42\u5bf9\u8c61\u7684 cookies \u5c5e\u6027\u662f\u4e00\u4e2a\u5185\u5bb9\u4e3a\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u6240\u6709 Cookies \u7684\u5b57\u5178\u3002\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u4f1a\u8bdd\uff0c\u8bf7\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528 Cookies\uff0c\u8bf7\u53c2\u8003 \u4f1a\u8bdd \u4e00\u8282\u3002\u5728 Flask \u4e2d\uff0c\u5df2\u7ecf\u6ce8\u610f\u5904\u7406\u4e86\u4e00\u4e9b Cookies \u5b89\u5168\u7ec6\u8282\u3002 \u8bfb\u53d6 cookies: from flask import request @app . route ( '/' ) def index (): username = request . cookies . get ( 'username' ) # use cookies.get(key) instead of cookies[key] to not get a # KeyError if the cookie is missing. \u5b58\u50a8 cookies: from flask import make_response @app . route ( '/' ) def index (): resp = make_response ( render_template ( ... )) resp . set_cookie ( 'username' , 'the username' ) return resp \u53ef\u6ce8\u610f\u5230\u7684\u662f\uff0cCookies \u662f\u8bbe\u7f6e\u5728\u54cd\u5e94\u5bf9\u8c61\u4e0a\u7684\u3002\u7531\u4e8e\u901a\u5e38\u89c6\u56fe\u51fd\u6570\u53ea\u662f\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u4e4b\u540e Flask \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u4f60\u8981\u663e\u5f0f\u5730\u8f6c\u6362\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u7136\u540e\u518d\u8fdb\u884c\u4fee\u6539\u3002 \u6709\u65f6\u5019\u4f60\u60f3\u8bbe\u7f6e Cookie\uff0c\u4f46\u54cd\u5e94\u5bf9\u8c61\u4e0d\u80fd\u918b\u5728\u3002\u8fd9\u53ef\u4ee5\u5229\u7528 \u5ef6\u8fdf\u8bf7\u6c42\u56de\u8c03 \u6a21\u5f0f\u5b9e\u73b0\u3002 \u4e3a\u6b64\uff0c\u4e5f\u53ef\u4ee5\u9605\u8bfb \u5173\u4e8e\u54cd\u5e94 \u3002","title":"Cookies"},{"location":"05-flask/no-flask-basic/#_11","text":"\u4f60\u53ef\u4ee5\u7528 redirect() \u51fd\u6570\u628a\u7528\u6237\u91cd\u5b9a\u5411\u5230\u5176\u5b83\u5730\u65b9\u3002\u653e\u5f03\u8bf7\u6c42\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\uff0c\u7528 abort() \u51fd\u6570\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u5b83\u4eec\u5982\u4f55\u4f7f\u7528\u7684\u4f8b\u5b50: from flask import abort , redirect , url_for @app . route ( '/' ) def index (): return redirect ( url_for ( 'login' )) @app . route ( '/login' ) def login (): abort ( 401 ) this_is_never_executed () \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u65e0\u610f\u4e49\u7684\u4f8b\u5b50\u56e0\u4e3a\u7528\u6237\u4f1a\u4ece\u4e3b\u9875\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u4e0d\u80fd\u8bbf\u95ee\u7684\u9875\u9762 \uff08401 \u610f\u5473\u7740\u7981\u6b62\u8bbf\u95ee\uff09\uff0c\u4f46\u662f\u5b83\u5c55\u793a\u4e86\u91cd\u5b9a\u5411\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9519\u8bef\u4ee3\u7801\u4f1a\u663e\u793a\u4e00\u4e2a\u9ed1\u767d\u7684\u9519\u8bef\u9875\u9762\u3002\u5982\u679c\u4f60\u8981\u5b9a\u5236\u9519\u8bef\u9875\u9762\uff0c \u53ef\u4ee5\u4f7f\u7528 errorhandler() \u88c5\u9970\u5668: from flask import render_template @app . errorhandler ( 404 ) def page_not_found ( error ): return render_template ( 'page_not_found.html' ), 404 \u6ce8\u610f render_template() \u8c03\u7528\u4e4b\u540e\u7684 404 \u3002\u8fd9\u544a\u8bc9 Flask\uff0c\u8be5\u9875\u7684\u9519\u8bef\u4ee3\u7801\u662f 404 \uff0c\u5373\u6ca1\u6709\u627e\u5230\u3002\u9ed8\u8ba4\u4e3a 200\uff0c\u4e5f\u5c31\u662f\u4e00\u5207\u6b63\u5e38\u3002","title":"\u91cd\u5b9a\u5411\u548c\u9519\u8bef"},{"location":"05-flask/no-flask-basic/#_12","text":"\u89c6\u56fe\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u4e3a\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c \u5b83\u88ab\u8f6c\u6362\u4e3a\u8be5\u5b57\u7b26\u4e32\u4e3a\u4e3b\u4f53\u7684\u3001\u72b6\u6001\u7801\u4e3a 200 OK``\u7684 \u3001 MIME \u7c7b\u578b\u662f ``text/html \u7684\u54cd\u5e94\u5bf9\u8c61\u3002Flask \u628a\u8fd4\u56de\u503c\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u7684\u903b\u8f91\u662f\u8fd9\u6837\uff1a \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u5b83\u4f1a\u4ece\u89c6\u56fe\u76f4\u63a5\u8fd4\u56de\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u54cd\u5e94\u5bf9\u8c61\u4f1a\u7528\u5b57\u7b26\u4e32\u6570\u636e\u548c\u9ed8\u8ba4\u53c2\u6570\u521b\u5efa\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u4e14\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u63d0\u4f9b\u989d\u5916\u7684\u4fe1\u606f\u3002\u8fd9\u6837\u7684\u5143\u7ec4\u5fc5\u987b\u662f (response, status, headers) \u7684\u5f62\u5f0f\uff0c\u4e14\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u3002 status \u503c\u4f1a\u8986\u76d6\u72b6\u6001\u4ee3\u7801\uff0c headers \u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u8868\u6216\u5b57\u5178\uff0c\u4f5c\u4e3a\u989d\u5916\u7684\u6d88\u606f\u6807\u5934\u503c\u3002 \u5982\u679c\u4e0a\u8ff0\u6761\u4ef6\u5747\u4e0d\u6ee1\u8db3\uff0c Flask \u4f1a\u5047\u8bbe\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u3002 \u5982\u679c\u4f60\u60f3\u5728\u89c6\u56fe\u91cc\u64cd\u7eb5\u4e0a\u8ff0\u6b65\u9aa4\u7ed3\u679c\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u3002 \u8b6c\u5982\u4f60\u6709\u8fd9\u6837\u4e00\u4e2a\u89c6\u56fe: @app . errorhandler ( 404 ) def not_found ( error ): return render_template ( 'error.html' ), 404 \u4f60\u53ea\u9700\u8981\u628a\u8fd4\u56de\u503c\u8868\u8fbe\u5f0f\u4f20\u9012\u7ed9 make_response() \uff0c\u83b7\u53d6\u7ed3\u679c\u5bf9\u8c61\u5e76\u4fee\u6539\uff0c\u7136\u540e\u518d\u8fd4\u56de\u5b83: @app . errorhandler ( 404 ) def not_found ( error ): resp = make_response ( render_template ( 'error.html' ), 404 ) resp . headers [ 'X-Something' ] = 'A value' return resp","title":"\u5173\u4e8e\u54cd\u5e94"},{"location":"05-flask/no-flask-basic/#_13","text":"\u9664\u8bf7\u6c42\u5bf9\u8c61\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a session \u5bf9\u8c61\u3002\u5b83\u5141\u8bb8\u4f60\u5728\u4e0d\u540c\u8bf7\u6c42\u95f4\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u7684\u4fe1\u606f\u3002\u5b83\u662f\u5728 Cookies \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u5bf9 Cookies \u8fdb\u884c\u5bc6\u94a5\u7b7e\u540d\u3002\u8fd9\u610f\u5473\u7740\u7528\u6237\u53ef\u4ee5\u67e5\u770b\u4f60 Cookie \u7684\u5185\u5bb9\uff0c\u4f46\u5374\u4e0d\u80fd\u4fee\u6539\u5b83\uff0c\u9664\u975e\u7528\u6237\u77e5\u9053\u7b7e\u540d\u7684\u5bc6\u94a5\u3002 \u8981\u4f7f\u7528\u4f1a\u8bdd\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5bc6\u94a5\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4f1a\u8bdd\u5982\u4f55\u5de5\u4f5c: from flask import Flask , session , redirect , url_for , escape , request app = Flask ( __name__ ) @app . route ( '/' ) def index (): if 'username' in session : return 'Logged in as %s ' % escape ( session [ 'username' ]) return 'You are not logged in' @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : session [ 'username' ] = request . form [ 'username' ] return redirect ( url_for ( 'index' )) return ''' <form action=\"\" method=\"post\"> <p><input type=text name=username> <p><input type=submit value=Login> </form> ''' @app . route ( '/logout' ) def logout (): # remove the username from the session if it's there session . pop ( 'username' , None ) return redirect ( url_for ( 'index' )) # set the secret key. keep this really secret: app . secret_key = 'A0Zr98j/3yX R~XHH!jmN]LWX/,?RT' \u8fd9\u91cc\u63d0\u5230\u7684 escape() \u53ef\u4ee5\u5728\u4f60\u6a21\u677f\u5f15\u64ce\u5916\u505a\u8f6c\u4e49\uff08\u5982\u540c\u672c\u4f8b\uff09\u3002 \u5982\u4f55\u751f\u6210\u5f3a\u58ee\u7684\u5bc6\u94a5 \u968f\u673a\u7684\u95ee\u9898\u5728\u4e8e\u5f88\u96be\u5224\u65ad\u4ec0\u4e48\u662f\u771f\u968f\u673a\u3002\u4e00\u4e2a\u5bc6\u94a5\u5e94\u8be5\u8db3\u591f\u968f\u673a\u3002\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u57fa\u4e8e\u4e00\u4e2a\u5bc6\u94a5\u968f\u673a\u751f\u6210\u5668\u6765\u751f\u6210\u6f02\u4eae\u7684\u968f\u673a\u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u7528\u6765\u505a\u5bc6\u94a5: >>> import os >>> os . urandom ( 24 ) ' \\xfd {H \\xe5 < \\x95\\xf9\\xe3\\x96 .5 \\xd1\\x01 O<! \\xd5\\xa2\\xa0\\x9f R\" \\xa1\\xa8 ' \u628a\u8fd9\u4e2a\u503c\u590d\u5236\u7c98\u8d34\u8fdb\u4f60\u7684\u4ee3\u7801\u4e2d\uff0c\u4f60\u5c31\u6709\u4e86\u5bc6\u94a5\u3002 \u4f7f\u7528\u57fa\u4e8e cookie \u7684\u4f1a\u8bdd\u9700\u6ce8\u610f: Flask \u4f1a\u5c06\u4f60\u653e\u8fdb\u4f1a\u8bdd\u5bf9\u8c61\u7684\u503c\u5e8f\u5217\u5316\u81f3 Cookies\u3002\u5982\u679c\u4f60\u53d1\u73b0\u67d0\u4e9b\u503c\u5728\u8bf7\u6c42\u4e4b\u95f4\u5e76\u6ca1\u6709\u6301\u4e45\u5b58\u5728\uff0c\u7136\u800c\u786e\u5b9e\u5df2\u7ecf\u542f\u7528\u4e86 Cookies\uff0c\u4f46\u4e5f\u6ca1\u6709\u5f97\u5230\u660e\u786e\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u65f6\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u9875\u9762\u54cd\u5e94\u4e2d\u7684 Cookies \u7684\u5927\u5c0f\uff0c\u5e76\u4e0e Web \u6d4f\u89c8\u5668\u6240\u652f\u6301\u7684\u5927\u5c0f\u5bf9\u6bd4\u3002","title":"\u4f1a\u8bdd"},{"location":"05-flask/no-flask-basic/#_14","text":"\u53cd\u9988\uff0c\u662f\u826f\u597d\u7684\u5e94\u7528\u548c\u7528\u6237\u754c\u9762\u7684\u91cd\u8981\u6784\u6210\u3002\u5982\u679c\u7528\u6237\u5f97\u4e0d\u5230\u8db3\u591f\u7684\u53cd\u9988\uff0c\u4ed6\u4eec\u5f88\u53ef\u80fd\u5f00\u59cb\u538c\u6076\u8fd9\u4e2a\u5e94\u7528\u3002 Flask \u63d0\u4f9b\u4e86\u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u7ed9\u7528\u6237\u53cd\u9988\u3002 \u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\u901a\u5e38\u4f1a\u5728\u8bf7\u6c42\u7ed3\u675f\u65f6\u8bb0\u5f55\u4fe1\u606f\uff0c\u5e76\u5728\u4e0b\u4e00\u4e2a\uff08\u4e14\u4ec5\u5728\u4e0b\u4e00\u4e2a\uff09\u8bf7\u6c42\u4e2d\u8bbf\u95ee\u8bb0\u5f55\u7684\u4fe1\u606f\u3002\u5c55\u73b0\u8fd9\u4e9b\u6d88\u606f\u901a\u5e38\u7ed3\u5408\u8981\u6a21\u677f\u5e03\u5c40\u3002 \u4f7f\u7528 flash() \u65b9\u6cd5\u53ef\u4ee5\u95ea\u73b0\u4e00\u6761\u6d88\u606f\u3002\u8981\u64cd\u4f5c\u6d88\u606f\u672c\u8eab\uff0c\u8bf7\u4f7f\u7528 get_flashed_messages() \u51fd\u6570\uff0c\u5e76\u4e14\u5728\u6a21\u677f\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002\u5b8c\u6574\u7684\u4f8b\u5b50\u89c1 \u6d88\u606f\u95ea\u73b0 \u90e8\u5206\u3002","title":"\u6d88\u606f\u95ea\u73b0"},{"location":"05-flask/no-flask-basic/#_15","text":"0.3 \u65b0\u7248\u529f\u80fd. \u6709\u65f6\u5019\u4f60\u4f1a\u5904\u4e8e\u8fd9\u6837\u4e00\u79cd\u5883\u5730\uff0c\u4f60\u5904\u7406\u7684\u6570\u636e\u672c\u5e94\u8be5\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u6bd4\u5982\uff0c\u4f60\u4f1a\u6709\u4e00\u4e9b\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u4f46\u8bf7\u6c42\u663e\u7136\u662f\u7578\u5f62\u7684\u3002\u8fd9\u53ef\u80fd\u662f\u7528\u6237\u7be1\u6539\u4e86\u6570\u636e\uff0c\u6216\u662f\u5ba2\u6237\u7aef\u4ee3\u7801\u7684\u7c97\u5236\u6ee5\u9020\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6b63\u5e38\u5730\u8fd4\u56de 400 Bad Request \u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u6709\u65f6\u5019\u4e0d\u80fd\u8fd9\u4e48\u505a\uff0c\u5e76\u4e14\u8981\u8ba9\u4ee3\u7801\u7ee7\u7eed\u8fd0\u884c\u3002 \u4f60\u53ef\u80fd\u4f9d\u7136\u60f3\u8981\u8bb0\u5f55\u4e0b\uff0c\u662f\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u3002\u8fd9\u65f6\u65e5\u5fd7\u8bb0\u5f55\u5c31\u6d3e\u4e0a\u4e86\u7528\u573a\u3002\u4ece Flask 0.3 \u5f00\u59cb\uff0cFlask \u5c31\u5df2\u7ecf\u9884\u7f6e\u4e86\u65e5\u5fd7\u7cfb\u7edf\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u8c03\u7528\u65e5\u5fd7\u8bb0\u5f55\u7684\u4f8b\u5b50: app . logger . debug ( 'A value for debugging' ) app . logger . warning ( 'A warning occurred ( %d apples)' , 42 ) app . logger . error ( 'An error occurred' ) \u9644\u5e26\u7684 logger \u662f\u4e00\u4e2a\u6807\u51c6\u65e5\u5fd7\u7c7b Logger \uff0c\u6240\u4ee5\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605 logging \u7684\u6587\u6863 \u3002","title":"\u65e5\u5fd7\u8bb0\u5f55"},{"location":"05-flask/no-flask-basic/#wsgi","text":"\u5982\u679c\u4f60\u60f3\u7ed9\u4f60\u7684\u5e94\u7528\u6dfb\u52a0 WSGI \u4e2d\u95f4\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5c01\u88c5\u5185\u90e8 WSGI \u5e94\u7528\u3002\u4f8b\u5982\u82e5\u662f\u4f60\u60f3\u7528 Werkzeug \u5305\u4e2d\u7684\u67d0\u4e2a\u4e2d\u95f4\u4ef6\u6765\u5e94\u4ed8 lighttpd \u4e2d\u7684 bugs \uff0c\u53ef\u4ee5\u8fd9\u6837\u505a: from werkzeug.contrib.fixers import LighttpdCGIRootFix app . wsgi_app = LighttpdCGIRootFix ( app . wsgi_app )","title":"\u6574\u5408 WSGI \u4e2d\u95f4\u4ef6"},{"location":"05-flask/no-flask-basic/#web","text":"\u51c6\u5907\u597d\u90e8\u7f72\u4f60\u7684 Flask \u5e94\u7528\u4e86\uff1f\u4f60\u53ef\u4ee5\u7acb\u5373\u90e8\u7f72\u5230\u6258\u7ba1\u5e73\u53f0\u6765\u5706\u6ee1\u5b8c\u6210\u5feb\u901f\u5165\u95e8\uff0c\u4ee5\u4e0b\u5382\u5546\u5747\u5411\u5c0f\u9879\u76ee\u63d0\u4f9b\u514d\u8d39\u7684\u65b9\u6848: \u5728 Heroku \u4e0a\u90e8\u7f72 Flask \u5728 dotCloud \u4e0a\u90e8\u7f72 Flask \u9644 Flask \u7684\u5177\u4f53\u8bf4\u660e \u6258\u7ba1 Flask \u5e94\u7528\u7684\u5176\u5b83\u9009\u62e9: \u5728 Webfaction \u4e0a\u90e8\u7f72 Flask \u5728 Google App Engine \u4e0a\u90e8\u7f72 Flask \u7528 Localtunnel \u5171\u4eab\u4f60\u7684\u672c\u5730\u670d\u52a1\u5668 \u5982\u679c\u4f60\u6709\u81ea\u5df1\u7684\u4e3b\u673a\uff0c\u5e76\u4e14\u51c6\u5907\u81ea\u5df1\u6258\u7ba1\uff0c\u53c2\u89c1 \u90e8\u7f72\u9009\u62e9 \u7ae0\u8282\u3002","title":"\u90e8\u7f72\u5230 Web \u670d\u52a1\u5668"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/","text":"Flask \u8bfe\u7a0b\u7b14\u8bb0 \u00b6 \u8bfe\u7a0b\u4ecb\u7ecd\uff1a\u7f51\u6613\u4e91\u8bfe\u5802\u89c6\u9891\u8bfe\u7a0b\uff1b2020 \u5e74\u5b66\u4e60\u524d\u4e24\u7ae0\u5e76\u603b\u7ed3\u7b14\u8bb0\u5982\u4e0b\uff08\u7136\u540e\u65e7\u89c6\u9891\u4e0b\u67b6\u4e86\uff09 2022 \u5e74\u65b0\u7684\u8bfe\u7a0b\u94fe\u63a5\uff1a https://study.163.com/course/courseMain.htm?courseId=1004091002 \u5b66\u4e60\u76ee\u6807\uff1a\u719f\u6089 python \u73af\u5883\u642d\u5efa\u548c\u57fa\u672c\u8bed\u6cd5\uff0c\u4e86\u89e3 flask \u7684\u8bbe\u8ba1\u539f\u7406\uff0c\u53ef\u4ee5\u505a\u4e00\u4e2a\u7b80\u5355\u9879\u76ee\uff1b\u6709\u80fd\u529b\u53ef\u4ee5\u5bf9\u63a5\u4e00\u4e2a\u524d\u540e\u7aef\u9879\u76ee\u3002 \u7ec3\u4e60\u9879\u76ee\uff1a\u7528\u6237\u6ce8\u518c\u3001\u7528\u6237\u767b\u5f55\u3001\u641c\u7d22\u6587\u7ae0\u3001\u53d1\u5e03\u6587\u7ae0\u3001\u589e\u52a0\u8bc4\u8bba\u3002 \u6570\u636e\u5e93\u8bbe\u8ba1\uff1a\u9700\u8981\u7528\u6237\u8868\uff0c\u6587\u7ae0\u8868\uff0c\u8bc4\u8bba\u8868\uff0c\u652f\u6301\u4e0d\u540c\u6570\u636e\u7684\u589e\u5220\u6539\u67e5\u3002 \u7b2c 0 \u7ae0 \u5b89\u88c5\u5f00\u53d1\u73af\u5883 \u00b6 0.1 \u5b89\u88c5 python \u00b6 MacOS: \u81ea\u5e26 python \u5f00\u53d1\u73af\u5883\uff0c\u5728\u63a7\u5236\u53f0\u8f93\u5165 python\uff0c\u6216\u8005 python xxx.py \u5373\u53ef\u6267\u884c Windows\uff1a\u6ca1\u6709 Python \u73af\u5883\u3002\u9700\u8981\u4e0b\u8f7d\u5b89\u88c5\uff0c\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff08 python pip easy-install \uff09\u8fd9\u91cc\u9700\u8981\u8bbe\u7f6e python \u7684\u73af\u5883\u53d8\u91cf\u548c pip \u7684\u73af\u5883\u53d8\u91cf\uff0c\u6253\u5f00\u8ba1\u7b97\u673a-\u5c5e\u6027-\u9ad8\u7ea7\u5c5e\u6027-\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf-\u589e\u52a0\u73af\u5883\u53d8\u91cf, \u540d\u79f0\u662f PATH \u5c5e\u6027\u662f\u6587\u4ef6\u8def\u5f84 C:/Python27;C:/Python27/Scripts \uff0c\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u540e\uff0c\u5728 cmd \u4e2d\u53ef\u4ee5\u67e5\u770b python \u548c pip \u7684\u7248\u672c\u53f7\uff0c\u9a8c\u8bc1\u5b89\u88c5\u3002 0.2 \u5b89\u88c5\u865a\u62df\u73af\u5883 virtualenv \u00b6 \u4e0d\u540c\u9879\u76ee\u4f9d\u8d56\u7684 python \u7248\u672c\u4e0d\u540c\uff0c\u4f9d\u8d56\u7b2c\u4e09\u65b9\u5e93\u4e0d\u540c\uff0c\u6240\u4ee5\u9700\u8981\u4e0d\u540c\u7684 python \u865a\u62df\u73af\u5883\uff0c\u865a\u62df\u73af\u5883\u4f1a\u907f\u514d\u7248\u672c\u51b2\u7a81\u3002\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u4e0d\u540c\u7684 flask \u7684\u7248\u672c\u548c\u5e93\uff0c\u76f8\u4e92\u72ec\u7acb\u4e0d\u4f1a\u5e72\u6270\u3002 \u5b89\u88c5\u865a\u62df\u73af\u5883 sudo pip3 install virtualenv mkdir test cd test virtualenv flask-env Windows \u6fc0\u6d3b\u865a\u62df\u73af\u5883 cd flask-dev/scripts activate pip3 install -r requirements.txt deactivate Mac \u6fc0\u6d3b\u865a\u62df\u73af\u5883 source ~/Virtualenv/flask-env/bin/activate pip3 install -r requirements.txt deactivate 0.3 \u5b89\u88c5 flask \u00b6 flask \u7248\u672c\u517c\u5bb9\u95ee\u9898\uff1a\u5b98\u65b9 flask \u5df2\u7ecf\u652f\u6301 2.x.x \u7248\u672c\uff0c\u5bf9\u5e94 python3\uff1b\u6559\u7a0b\u7248\u672c\u662f\u5426\u6700\u65b0\u7b49\uff0c\u53ef\u80fd\u90e8\u5206\u4ee3\u7801\u4e0d\u517c\u5bb9\uff0c\u9700\u8981\u5b9e\u9645\u8c03\u8bd5 source ~/Virtualenv/flask-env/bin/activate pip3 install flask \u6d4b\u8bd5\u7248\u672c\u53f7\uff08\u6d4b\u8bd5\u5b89\u88c5\u6b63\u5e38\uff09 import flask print flask . __version__ # 1.1.1 \u5b89\u88c5 IDE \u00b6 \u53ef\u4ee5\u4f7f\u7528 pycharm sublime Vscode \u7b49 \u7b2c\u4e00\u7ae0 URLs \u548c View(\u89c6\u56fe) \u00b6 \u7b2c\u4e00\u8bfe hello flask \u00b6 \u7b2c\u4e00\u6b21\u521b\u5efa\u9879\u76ee\u7684\u65f6\u5019\uff0c\u9700\u8981\u6dfb\u52a0\u865a\u62df\u73af\u5883\uff08\u5728 pycharm\uff09\u9009\u62e9\u865a\u62df\u73af\u5883\u4e2d\u7684 python \u6267\u884c\u6587\u4ef6 flask \u4ee3\u7801\u57fa\u672c\u7ed3\u6784\u89e3\u91ca #coding=utf-8 # python 2\u9700\u8981\u8bbe\u7f6e\u8bed\u8a00utf-8 # \u4ece Flask \u6846\u67b6\u4e2d\u5bfc\u5165\u8fd9\u4e2a\u7c7b from flask import Flask # \u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u9700\u8981\u4f20\u53c2 app = Flask ( __name__ ) # \u88c5\u9970\u5668 @\u5f00\u5934\uff0c\u4f4d\u4e8e\u51fd\u6570\u7684\u4e0a\u9762 # \u662fURL\u89c6\u56fe\u51fd\u6570\u7684\u6620\u5c04 # 127.0.0.1:5000 \u4f1a\u6620\u5c04\u5230\u4e0b\u9762\u7684\u51fd\u6570 @app . route ( '/' ) def hello_world (): return 'Hello Michael An!' @app . route ( '/index' ) def index_page (): return 'Hello Index Page' # \u5165\u53e3\u7a0b\u5e8f\uff1a\u542f\u52a8\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u63a5\u53d7\u7528\u6237\u7684\u8bf7\u6c42\uff08event listener\uff09 if __name__ == '__main__' : app . run () \u7b2c\u4e8c\u8bfe debug \u00b6 app.run(debug=True) \u6253\u5f00\u8c03\u8bd5\u6a21\u5f0f \u53ef\u4ee5\u9879\u76ee\u70ed\u52a0\u8f7d\uff08\u4fee\u6539 python \u4f1a\u70ed\u52a0\u8f7d\uff09\uff1b\u53ef\u4ee5\u51fa\u73b0\u95ee\u9898\u540e\uff0c\u5728\u9875\u9762\u4e2d\u770b\u5230\u62a5\u9519\u8be6\u60c5 \u5916\u90e8\u914d\u7f6e\u6587\u4ef6\uff1a\u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 config.py\uff0c\u52a0\u5165\u5927\u5199\u7684\u53c2\u6570 DEBUG = True # SECRET_KEY \u5728\u4e3b\u6587\u4ef6\u4e2d\u5f15\u5165\u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u7528\u914d\u7f6e main.py import config app . config . from_object ( config ) \u7b2c 3 \u8bfe URL \u4f20\u53c2 \u00b6 \u53ef\u4ee5\u5728 URL \u4e2d\u4f20\u53c2 @app . route ( '/page/<number>' ) def change_page ( number ): return 'change page to %s ' % number \u53c2\u6570\u9700\u8981\u653e\u5728\u5c16\u62ec\u53f7\u4e2d\uff0c\u89c6\u56fe\u51fd\u6570\u4e2d\u53c2\u6570\u548c\u539f\u59cb\u53c2\u6570\u76f8\u540c\u3002 \u7b2c 4 \u8bfe URL \u53cd\u8f6c \u00b6 \u53ef\u4ee5\u5728\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\u4e2d\uff0c\u4f20\u5165\u5176\u4ed6\u89c6\u56fe\u51fd\u6570\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684 URL \u4f7f\u7528 url_for \u5185\u7f6e\u51fd\u6570 \u7528\u9014\uff1a\u9875\u9762\u91cd\u5b9a\u5411\uff1bHTML \u4e2d A \u94fe\u63a5 from flask import Flask , url_for import config app = Flask ( __name__ ) app . config . from_object ( config ) @app . route ( '/' ) def hello_world (): print url_for ( 'handle_index' ) print url_for ( 'change_page' , number = 20 ) return 'Hello World!' @app . route ( '/index' ) def handle_index (): return 'index page' @app . route ( '/page/<number>' ) def change_page ( number ): return 'this is %s ' % number if __name__ == '__main__' : app . run () \u6ce8\u610f\uff1a\u8fd0\u884c flask \u540e\uff0c\u9700\u8981\u70b9\u51fb\u5173\u95ed\uff0c\u624d\u80fd\u5173\u95ed\u5f53\u524d\u7684\u672c\u5730\u670d\u52a1\u5668\u3002\u5426\u5219\u5173\u95ed\u7ec8\u7aef\u540e\uff0c\u672c\u5730\u670d\u52a1\u5668\u8fd8\u5728\u8fd0\u884c\uff0c\u53ef\u80fd\u5f71\u54cd\u5176\u4ed6\u7684\u672c\u5730\u670d\u52a1\u5668\u3002 \u7b2c 5 \u8bfe \u9875\u9762\u91cd\u5b9a\u5411\u548c\u8df3\u8f6c \u00b6 \u5b9e\u9645\u4f7f\u7528: \u7528\u6237\u672a\u767b\u5f55\u65f6\uff0c\u8df3\u8f6c\uff08\u91cd\u5b9a\u5411\uff09\u5230\u767b\u5f55\u754c\u9762 #coding=utf-8 from flask import Flask , redirect , url_for app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return redirect ( url_for ( 'login' )) # return redirect('/login/') # return 'Hello World!' # \u5982\u679c\u662f\u56fa\u5b9a\u7684URL\uff0c\u90a3\u4e48\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u8def\u5f84\u66f4\u6539\u540e\uff0c\u91cd\u5b9a\u5411\u4f1a\u9519\u8bef # \u4f7f\u7528url_for\u52a8\u6001\u83b7\u53d6\u89c6\u56fe\u51fd\u6570\u7684\u8df3\u8f6c\u4f4d\u7f6e @app . route ( '/login/' ) def login (): return 'This is login page, please login' # we can use cookie to check user login state in the future @app . route ( '/question/<id>' ) def question ( id ): if id == '1' : return 'Your question is 1, This is question page' else : return redirect ( url_for ( 'login' )) if __name__ == '__main__' : app . run ( debug = True ) \u7b2c\u4e8c\u7ae0 Jinja2 \u6a21\u677f \u00b6 \u7b2c\u4e00\u8bfe \u6a21\u677f\u6e32\u67d3\u548c\u4f20\u53c2 \u00b6 \u6a21\u677f\u653e\u5728 templates \u8def\u5f84\u4e0b \u5bfc\u5165\u6a21\u677f\uff1arender_template \u51fd\u6570\uff1b\u6ce8\u610f\uff1a\u4e0d\u9700\u8981\u5199 templates \u6587\u4ef6\u5939\u7684\u8def\u5f84\uff0c\u76f4\u63a5\u5199\u5165\u53e3\u6587\u4ef6 \u6a21\u677f\u4f20\u53c2\uff1arender_template \u51fd\u6570\u4e2d\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8fdb\u884c\u4f20\u53c2\uff1b\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u53d8\u91cf\u9700\u8981 {{ \u53c2\u6570 }} \u7b2c\u4e8c\u8bfe \u6a21\u677f\u4e2d\u8bbf\u95ee\u5c5e\u6027\u548c\u5b57\u5178 \u00b6 \u8bbf\u95ee\u6a21\u578b\u4e2d\u7684\u5c5e\u6027\u6216\u8005\u5b57\u5178\u3002\u4f7f\u7528\u70b9\u8bed\u6cd5\u6216\u8005\u4e2d\u62ec\u53f7\u53ef\u4ee5\u83b7\u53d6\u503c \u7b2c\u4e09\u8bfe \u6761\u4ef6\u8bed\u53e5 \u00b6 {% if user %} <p>{{ user.name }}</p> <p>\u6ce8\u9500</p> {% else %} <p>\u767b\u5f55</p> <p>\u6ce8\u518c</p> {% endif %} and or not \u903b\u8f91\u64cd\u4f5c \u7b2c\u56db\u8bfe \u5faa\u73af\u8bed\u53e5 \u00b6 \u904d\u5386\u5b57\u5178 \u00b6 python \u4e2d\u904d\u5386\u5b57\u5178\u548c JS \u4e0d\u540c user = { 'name' : 'Mike' , 'age' : 18 } for k , v in user . items (): print k print v Jinja2 \u6a21\u677f\u4e2d\u7684\u4f7f\u7528 \u5176\u4ed6\u7684\u904d\u5386\u548c python \u4e00\u6837\uff0c \u4f7f\u7528 items() keys() values() iteritems() itrtkeys() itervalues() \u8fed\u4ee3\u5668\u904d\u5386 <dl> <% for key, value, in my_dict.iteritems() %> <dt>{{ key|e }}</dt> <dd>{{ value|e }}</dd> <% endfor %> </dl> \u904d\u5386\u5217\u8868 \u00b6 \u6ca1\u6709\u503c\u7684\u60c5\u51b5 <ul> {% for user in users %} <li>{{ user.name }}</li> {% else %} <li>no users found</li> {% endfor %} </ul> \u5c0f\u6848\u4f8b\uff1a\u56db\u5927\u540d\u8457\u7684\u6e32\u67d3","title":"no-flask\u7f51\u6613\u4e91\u8bfe\u5802\u7b14\u8bb0"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#flask","text":"\u8bfe\u7a0b\u4ecb\u7ecd\uff1a\u7f51\u6613\u4e91\u8bfe\u5802\u89c6\u9891\u8bfe\u7a0b\uff1b2020 \u5e74\u5b66\u4e60\u524d\u4e24\u7ae0\u5e76\u603b\u7ed3\u7b14\u8bb0\u5982\u4e0b\uff08\u7136\u540e\u65e7\u89c6\u9891\u4e0b\u67b6\u4e86\uff09 2022 \u5e74\u65b0\u7684\u8bfe\u7a0b\u94fe\u63a5\uff1a https://study.163.com/course/courseMain.htm?courseId=1004091002 \u5b66\u4e60\u76ee\u6807\uff1a\u719f\u6089 python \u73af\u5883\u642d\u5efa\u548c\u57fa\u672c\u8bed\u6cd5\uff0c\u4e86\u89e3 flask \u7684\u8bbe\u8ba1\u539f\u7406\uff0c\u53ef\u4ee5\u505a\u4e00\u4e2a\u7b80\u5355\u9879\u76ee\uff1b\u6709\u80fd\u529b\u53ef\u4ee5\u5bf9\u63a5\u4e00\u4e2a\u524d\u540e\u7aef\u9879\u76ee\u3002 \u7ec3\u4e60\u9879\u76ee\uff1a\u7528\u6237\u6ce8\u518c\u3001\u7528\u6237\u767b\u5f55\u3001\u641c\u7d22\u6587\u7ae0\u3001\u53d1\u5e03\u6587\u7ae0\u3001\u589e\u52a0\u8bc4\u8bba\u3002 \u6570\u636e\u5e93\u8bbe\u8ba1\uff1a\u9700\u8981\u7528\u6237\u8868\uff0c\u6587\u7ae0\u8868\uff0c\u8bc4\u8bba\u8868\uff0c\u652f\u6301\u4e0d\u540c\u6570\u636e\u7684\u589e\u5220\u6539\u67e5\u3002","title":"Flask \u8bfe\u7a0b\u7b14\u8bb0"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#0","text":"","title":"\u7b2c 0 \u7ae0 \u5b89\u88c5\u5f00\u53d1\u73af\u5883"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#01-python","text":"MacOS: \u81ea\u5e26 python \u5f00\u53d1\u73af\u5883\uff0c\u5728\u63a7\u5236\u53f0\u8f93\u5165 python\uff0c\u6216\u8005 python xxx.py \u5373\u53ef\u6267\u884c Windows\uff1a\u6ca1\u6709 Python \u73af\u5883\u3002\u9700\u8981\u4e0b\u8f7d\u5b89\u88c5\uff0c\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff08 python pip easy-install \uff09\u8fd9\u91cc\u9700\u8981\u8bbe\u7f6e python \u7684\u73af\u5883\u53d8\u91cf\u548c pip \u7684\u73af\u5883\u53d8\u91cf\uff0c\u6253\u5f00\u8ba1\u7b97\u673a-\u5c5e\u6027-\u9ad8\u7ea7\u5c5e\u6027-\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf-\u589e\u52a0\u73af\u5883\u53d8\u91cf, \u540d\u79f0\u662f PATH \u5c5e\u6027\u662f\u6587\u4ef6\u8def\u5f84 C:/Python27;C:/Python27/Scripts \uff0c\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u540e\uff0c\u5728 cmd \u4e2d\u53ef\u4ee5\u67e5\u770b python \u548c pip \u7684\u7248\u672c\u53f7\uff0c\u9a8c\u8bc1\u5b89\u88c5\u3002","title":"0.1 \u5b89\u88c5 python"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#02-virtualenv","text":"\u4e0d\u540c\u9879\u76ee\u4f9d\u8d56\u7684 python \u7248\u672c\u4e0d\u540c\uff0c\u4f9d\u8d56\u7b2c\u4e09\u65b9\u5e93\u4e0d\u540c\uff0c\u6240\u4ee5\u9700\u8981\u4e0d\u540c\u7684 python \u865a\u62df\u73af\u5883\uff0c\u865a\u62df\u73af\u5883\u4f1a\u907f\u514d\u7248\u672c\u51b2\u7a81\u3002\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u4e0d\u540c\u7684 flask \u7684\u7248\u672c\u548c\u5e93\uff0c\u76f8\u4e92\u72ec\u7acb\u4e0d\u4f1a\u5e72\u6270\u3002 \u5b89\u88c5\u865a\u62df\u73af\u5883 sudo pip3 install virtualenv mkdir test cd test virtualenv flask-env Windows \u6fc0\u6d3b\u865a\u62df\u73af\u5883 cd flask-dev/scripts activate pip3 install -r requirements.txt deactivate Mac \u6fc0\u6d3b\u865a\u62df\u73af\u5883 source ~/Virtualenv/flask-env/bin/activate pip3 install -r requirements.txt deactivate","title":"0.2 \u5b89\u88c5\u865a\u62df\u73af\u5883 virtualenv"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#03-flask","text":"flask \u7248\u672c\u517c\u5bb9\u95ee\u9898\uff1a\u5b98\u65b9 flask \u5df2\u7ecf\u652f\u6301 2.x.x \u7248\u672c\uff0c\u5bf9\u5e94 python3\uff1b\u6559\u7a0b\u7248\u672c\u662f\u5426\u6700\u65b0\u7b49\uff0c\u53ef\u80fd\u90e8\u5206\u4ee3\u7801\u4e0d\u517c\u5bb9\uff0c\u9700\u8981\u5b9e\u9645\u8c03\u8bd5 source ~/Virtualenv/flask-env/bin/activate pip3 install flask \u6d4b\u8bd5\u7248\u672c\u53f7\uff08\u6d4b\u8bd5\u5b89\u88c5\u6b63\u5e38\uff09 import flask print flask . __version__ # 1.1.1","title":"0.3 \u5b89\u88c5 flask"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#ide","text":"\u53ef\u4ee5\u4f7f\u7528 pycharm sublime Vscode \u7b49","title":"\u5b89\u88c5 IDE"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#urls-view","text":"","title":"\u7b2c\u4e00\u7ae0 URLs \u548c View(\u89c6\u56fe)"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#hello-flask","text":"\u7b2c\u4e00\u6b21\u521b\u5efa\u9879\u76ee\u7684\u65f6\u5019\uff0c\u9700\u8981\u6dfb\u52a0\u865a\u62df\u73af\u5883\uff08\u5728 pycharm\uff09\u9009\u62e9\u865a\u62df\u73af\u5883\u4e2d\u7684 python \u6267\u884c\u6587\u4ef6 flask \u4ee3\u7801\u57fa\u672c\u7ed3\u6784\u89e3\u91ca #coding=utf-8 # python 2\u9700\u8981\u8bbe\u7f6e\u8bed\u8a00utf-8 # \u4ece Flask \u6846\u67b6\u4e2d\u5bfc\u5165\u8fd9\u4e2a\u7c7b from flask import Flask # \u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u9700\u8981\u4f20\u53c2 app = Flask ( __name__ ) # \u88c5\u9970\u5668 @\u5f00\u5934\uff0c\u4f4d\u4e8e\u51fd\u6570\u7684\u4e0a\u9762 # \u662fURL\u89c6\u56fe\u51fd\u6570\u7684\u6620\u5c04 # 127.0.0.1:5000 \u4f1a\u6620\u5c04\u5230\u4e0b\u9762\u7684\u51fd\u6570 @app . route ( '/' ) def hello_world (): return 'Hello Michael An!' @app . route ( '/index' ) def index_page (): return 'Hello Index Page' # \u5165\u53e3\u7a0b\u5e8f\uff1a\u542f\u52a8\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u63a5\u53d7\u7528\u6237\u7684\u8bf7\u6c42\uff08event listener\uff09 if __name__ == '__main__' : app . run ()","title":"\u7b2c\u4e00\u8bfe hello flask"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#debug","text":"app.run(debug=True) \u6253\u5f00\u8c03\u8bd5\u6a21\u5f0f \u53ef\u4ee5\u9879\u76ee\u70ed\u52a0\u8f7d\uff08\u4fee\u6539 python \u4f1a\u70ed\u52a0\u8f7d\uff09\uff1b\u53ef\u4ee5\u51fa\u73b0\u95ee\u9898\u540e\uff0c\u5728\u9875\u9762\u4e2d\u770b\u5230\u62a5\u9519\u8be6\u60c5 \u5916\u90e8\u914d\u7f6e\u6587\u4ef6\uff1a\u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 config.py\uff0c\u52a0\u5165\u5927\u5199\u7684\u53c2\u6570 DEBUG = True # SECRET_KEY \u5728\u4e3b\u6587\u4ef6\u4e2d\u5f15\u5165\u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u7528\u914d\u7f6e main.py import config app . config . from_object ( config )","title":"\u7b2c\u4e8c\u8bfe debug"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#3-url","text":"\u53ef\u4ee5\u5728 URL \u4e2d\u4f20\u53c2 @app . route ( '/page/<number>' ) def change_page ( number ): return 'change page to %s ' % number \u53c2\u6570\u9700\u8981\u653e\u5728\u5c16\u62ec\u53f7\u4e2d\uff0c\u89c6\u56fe\u51fd\u6570\u4e2d\u53c2\u6570\u548c\u539f\u59cb\u53c2\u6570\u76f8\u540c\u3002","title":"\u7b2c 3 \u8bfe URL \u4f20\u53c2"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#4-url","text":"\u53ef\u4ee5\u5728\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\u4e2d\uff0c\u4f20\u5165\u5176\u4ed6\u89c6\u56fe\u51fd\u6570\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684 URL \u4f7f\u7528 url_for \u5185\u7f6e\u51fd\u6570 \u7528\u9014\uff1a\u9875\u9762\u91cd\u5b9a\u5411\uff1bHTML \u4e2d A \u94fe\u63a5 from flask import Flask , url_for import config app = Flask ( __name__ ) app . config . from_object ( config ) @app . route ( '/' ) def hello_world (): print url_for ( 'handle_index' ) print url_for ( 'change_page' , number = 20 ) return 'Hello World!' @app . route ( '/index' ) def handle_index (): return 'index page' @app . route ( '/page/<number>' ) def change_page ( number ): return 'this is %s ' % number if __name__ == '__main__' : app . run () \u6ce8\u610f\uff1a\u8fd0\u884c flask \u540e\uff0c\u9700\u8981\u70b9\u51fb\u5173\u95ed\uff0c\u624d\u80fd\u5173\u95ed\u5f53\u524d\u7684\u672c\u5730\u670d\u52a1\u5668\u3002\u5426\u5219\u5173\u95ed\u7ec8\u7aef\u540e\uff0c\u672c\u5730\u670d\u52a1\u5668\u8fd8\u5728\u8fd0\u884c\uff0c\u53ef\u80fd\u5f71\u54cd\u5176\u4ed6\u7684\u672c\u5730\u670d\u52a1\u5668\u3002","title":"\u7b2c 4 \u8bfe URL \u53cd\u8f6c"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#5","text":"\u5b9e\u9645\u4f7f\u7528: \u7528\u6237\u672a\u767b\u5f55\u65f6\uff0c\u8df3\u8f6c\uff08\u91cd\u5b9a\u5411\uff09\u5230\u767b\u5f55\u754c\u9762 #coding=utf-8 from flask import Flask , redirect , url_for app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return redirect ( url_for ( 'login' )) # return redirect('/login/') # return 'Hello World!' # \u5982\u679c\u662f\u56fa\u5b9a\u7684URL\uff0c\u90a3\u4e48\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u8def\u5f84\u66f4\u6539\u540e\uff0c\u91cd\u5b9a\u5411\u4f1a\u9519\u8bef # \u4f7f\u7528url_for\u52a8\u6001\u83b7\u53d6\u89c6\u56fe\u51fd\u6570\u7684\u8df3\u8f6c\u4f4d\u7f6e @app . route ( '/login/' ) def login (): return 'This is login page, please login' # we can use cookie to check user login state in the future @app . route ( '/question/<id>' ) def question ( id ): if id == '1' : return 'Your question is 1, This is question page' else : return redirect ( url_for ( 'login' )) if __name__ == '__main__' : app . run ( debug = True )","title":"\u7b2c 5 \u8bfe \u9875\u9762\u91cd\u5b9a\u5411\u548c\u8df3\u8f6c"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#jinja2","text":"","title":"\u7b2c\u4e8c\u7ae0 Jinja2 \u6a21\u677f"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_1","text":"\u6a21\u677f\u653e\u5728 templates \u8def\u5f84\u4e0b \u5bfc\u5165\u6a21\u677f\uff1arender_template \u51fd\u6570\uff1b\u6ce8\u610f\uff1a\u4e0d\u9700\u8981\u5199 templates \u6587\u4ef6\u5939\u7684\u8def\u5f84\uff0c\u76f4\u63a5\u5199\u5165\u53e3\u6587\u4ef6 \u6a21\u677f\u4f20\u53c2\uff1arender_template \u51fd\u6570\u4e2d\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8fdb\u884c\u4f20\u53c2\uff1b\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u53d8\u91cf\u9700\u8981 {{ \u53c2\u6570 }}","title":"\u7b2c\u4e00\u8bfe \u6a21\u677f\u6e32\u67d3\u548c\u4f20\u53c2"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_2","text":"\u8bbf\u95ee\u6a21\u578b\u4e2d\u7684\u5c5e\u6027\u6216\u8005\u5b57\u5178\u3002\u4f7f\u7528\u70b9\u8bed\u6cd5\u6216\u8005\u4e2d\u62ec\u53f7\u53ef\u4ee5\u83b7\u53d6\u503c","title":"\u7b2c\u4e8c\u8bfe \u6a21\u677f\u4e2d\u8bbf\u95ee\u5c5e\u6027\u548c\u5b57\u5178"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_3","text":"{% if user %} <p>{{ user.name }}</p> <p>\u6ce8\u9500</p> {% else %} <p>\u767b\u5f55</p> <p>\u6ce8\u518c</p> {% endif %} and or not \u903b\u8f91\u64cd\u4f5c","title":"\u7b2c\u4e09\u8bfe \u6761\u4ef6\u8bed\u53e5"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_4","text":"","title":"\u7b2c\u56db\u8bfe \u5faa\u73af\u8bed\u53e5"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_5","text":"python \u4e2d\u904d\u5386\u5b57\u5178\u548c JS \u4e0d\u540c user = { 'name' : 'Mike' , 'age' : 18 } for k , v in user . items (): print k print v Jinja2 \u6a21\u677f\u4e2d\u7684\u4f7f\u7528 \u5176\u4ed6\u7684\u904d\u5386\u548c python \u4e00\u6837\uff0c \u4f7f\u7528 items() keys() values() iteritems() itrtkeys() itervalues() \u8fed\u4ee3\u5668\u904d\u5386 <dl> <% for key, value, in my_dict.iteritems() %> <dt>{{ key|e }}</dt> <dd>{{ value|e }}</dd> <% endfor %> </dl>","title":"\u904d\u5386\u5b57\u5178"},{"location":"05-flask/no-flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_6","text":"\u6ca1\u6709\u503c\u7684\u60c5\u51b5 <ul> {% for user in users %} <li>{{ user.name }}</li> {% else %} <li>no users found</li> {% endfor %} </ul> \u5c0f\u6848\u4f8b\uff1a\u56db\u5927\u540d\u8457\u7684\u6e32\u67d3","title":"\u904d\u5386\u5217\u8868"},{"location":"05-flask/readme-zh/","text":"Flask \u4ecb\u7ecd \u00b6 \u4ecb\u7ecd \u00b6 Flask \u4f9d\u8d56\u4e24\u4e2a\u5916\u90e8\u5e93\uff1a Werkzeug \u548c Jinja2 \u3002 Werkzeug \u662f\u4e00\u4e2a WSGI\uff08\u5728 Web \u5e94\u7528\u548c\u591a\u79cd\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6807\u51c6 Python \u63a5\u53e3) \u5de5\u5177\u96c6\u3002Jinja2 \u8d1f\u8d23\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9996\u5148\u9700\u8981 Python 2.6 \u6216\u66f4\u9ad8\u7684\u7248\u672c\uff0c\u6240\u4ee5\u8bf7\u786e\u8ba4\u6709\u4e00\u4e2a\u6700\u65b0\u7684 Python 2.x \u5b89\u88c5\u3002 \u5728 Python 3 \u4e2d\u4f7f\u7528 Flask \u8bf7\u53c2\u8003\uff1a Python 3 \u652f\u6301 \u3002 \u5b89\u88c5\u65b9\u6cd5\u4e00\uff1avirtualenv(\u865a\u62df\u73af\u5883\u5b89\u88c5) \u00b6 \u4f60\u5f88\u53ef\u80fd\u60f3\u5728\u5f00\u53d1\u4e2d\u7528\u4e0a virtualenv\uff0c\u5982\u679c\u4f60\u6709\u751f\u4ea7\u73af\u5883\u7684 shell \u6743\u9650\uff0c\u4f60\u540c\u6837\u4f1a\u4e50\u4e8e\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u5b83\u3002 virtualenv \u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f\u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u559c\u6b22 Python\uff0c\u4e0d\u4ec5\u4f1a\u5728\u91c7\u7528 Flask \u7684Web \u5e94\u7528\u4e2d\u7528\u4e0a virtualenv\uff0c\u5728\u522b\u7684\u9879\u76ee\u4e2d\u4f60\u4e5f\u4f1a\u60f3\u7528\u4e0a\u5b83\u3002\u4f60\u62e5\u6709\u7684\u9879\u76ee\u8d8a\u591a\uff0c\u540c\u65f6\u4f7f\u7528\u4e0d\u540c\u7248\u672c\u7684 Python \u5de5\u4f5c\u7684\u53ef\u80fd\u6027\u4e5f\u5c31\u8d8a\u5927\uff0c\u6216\u8005\u8d77\u7801\u9700\u8981\u4e0d\u540c\u7248\u672c\u7684 Python \u5e93\u3002\u60b2\u60e8\u73b0\u5b9e\u662f\uff1a\u5e38\u5e38\u4f1a\u6709\u5e93\u7834\u574f\u5411\u540e\u517c\u5bb9\u6027\uff0c\u7136\u800c\u6b63\u7ecf\u5e94\u7528\u4e0d\u91c7\u7528\u5916\u90e8\u5e93\u7684\u53ef\u80fd\u5fae\u4e4e\u5176\u5fae\u3002\u5f53\u5728\u4f60\u7684\u9879\u76ee\u4e2d\uff0c\u51fa\u73b0\u4e24\u4e2a\u6216\u66f4\u591a\u4f9d\u8d56\u6027\u51b2\u7a81\u65f6\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f virtualenv \u62ef\u6551\u4e16\u754c\uff01virtualenv \u4e3a\u6bcf\u4e2a\u4e0d\u540c\u9879\u76ee\u63d0\u4f9b\u4e00\u4efd Python \u5b89\u88c5\u3002\u5b83\u5e76\u6ca1\u6709\u771f\u6b63\u5b89\u88c5\u591a\u4e2a Python \u526f\u672c\uff0c\u4f46\u662f\u5b83\u786e\u5b9e\u63d0\u4f9b\u4e86\u4e00\u79cd\u5de7\u5999\u7684\u65b9\u5f0f\u6765\u8ba9\u5404\u9879\u76ee\u73af\u5883\u4fdd\u6301\u72ec\u7acb\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b virtualenv \u662f\u600e\u4e48\u5de5\u4f5c\u7684\u3002 \u5982\u679c\u4f60\u5728 Mac OS X \u6216 Linux \u4e0b\uff0c\u4e0b\u9762\u4e24\u6761\u547d\u4ee4\u53ef\u80fd\u4f1a\u9002\u7528: $ sudo easy_install virtualenv $ sudo pip install virtualenv \u4e0a\u8ff0\u7684\u547d\u4ee4\u4f1a\u5728\u4f60\u7684\u7cfb\u7edf\u4e2d\u5b89\u88c5 virtualenv\u3002\u5b83\u751a\u81f3\u53ef\u80fd\u4f1a\u5b58\u5728\u4e8e\u5305\u7ba1\u7406\u5668\u4e2d\u3002 virtualenv \u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u4f60\u53ef\u4ee5\u7acb\u5373\u6253\u5f00 shell \u7136\u540e\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u73af\u5883\u3002\u6211\u901a\u5e38\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u5176\u4e0b\u521b\u5efa\u4e00\u4e2a venv \u6587\u4ef6\u5939 $ mkdir myproject $ cd myproject $ virtualenv venv New python executable in venv/bin/python Installing distribute............done. \u73b0\u5728\uff0c\u65e0\u8bba\u4f55\u65f6\u4f60\u60f3\u5728\u67d0\u4e2a\u9879\u76ee\u4e0a\u5de5\u4f5c\uff0c\u53ea\u9700\u8981\u6fc0\u6d3b\u76f8\u5e94\u7684\u73af\u5883\u3002\u5728 OS X \u548c Linux \u4e0a\uff0c\u6267\u884c\u5982\u4e0b\u64cd\u4f5c: $ . venv/bin/activate \u65e0\u8bba\u901a\u8fc7\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u73b0\u5728\u5e94\u8be5\u5df2\u7ecf\u6fc0\u6d3b\u4e86 virtualenv\uff08\u6ce8\u610f\u4f60\u7684 shell \u63d0\u793a\u7b26\u663e\u793a\u7684\u662f\u5f53\u524d\u6d3b\u52a8\u7684\u73af\u5883\uff09\u3002 \u73b0\u5728\u4f60\u53ea\u9700\u8981\u952e\u5165\u4ee5\u4e0b\u7684\u547d\u4ee4\u6765\u6fc0\u6d3b virtualenv \u4e2d\u7684 Flask: $ pip install Flask \u51e0\u79d2\u949f\u540e\uff0c\u4e00\u5207\u90fd\u641e\u5b9a\u4e86\u3002 \u5b89\u88c5\u65b9\u6cd5\u4e8c\uff1a\u5168\u5c40\u5b89\u88c5 \u00b6 \u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u867d\u7136\u6211\u4e0d\u63a8\u8350\u3002\u53ea\u9700\u8981\u4ee5 root \u6743\u9650\u8fd0\u884c pip\u3002\u73b0\u5728\u4ee5\u8fd9\u79cd\u6a21\u5f0f\u5b89\u88c5 flask\u3002 $ sudo pip install Flask \u57fa\u672c\u4f7f\u7528 \u00b6 \u4e00\u4e2a\u6700\u5c0f\u7684 Flask \u5e94\u7528\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837: from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return 'Hello World!' if __name__ == '__main__' : app . run () \u628a\u5b83\u4fdd\u5b58\u4e3a hello.py \uff08\u6216\u662f\u7c7b\u4f3c\u7684\uff09\uff0c\u7136\u540e\u7528 Python \u89e3\u91ca\u5668\u6765\u8fd0\u884c\u3002 \u786e\u4fdd\u4f60\u7684\u5e94\u7528\u6587\u4ef6\u540d\u4e0d\u662f flask.py \uff0c\u56e0\u4e3a\u8fd9\u5c06\u4e0e Flask \u672c\u8eab\u51b2\u7a81\u3002 python hello.py * Running on http://127.0.0.1:5000/ \u73b0\u5728\u8bbf\u95ee http://127.0.0.1:5000/ \uff0c\u4f60\u4f1a\u770b\u89c1 Hello World \u95ee\u5019\u3002\u6b32\u5173\u95ed\u670d\u52a1\u5668\uff0c\u6309 Ctrl+C\u3002 \u90a3\u4e48\uff0c\u8fd9\u6bb5\u4ee3\u7801\u505a\u4e86\u4ec0\u4e48\uff1f \u9996\u5148\uff0c\u6211\u4eec\u5bfc\u5165\u4e86 Flask \u7c7b\u3002\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5c06\u4f1a\u662f\u6211\u4eec\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u8be5\u7c7b\u7684\u5b9e\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5e94\u7528\u6a21\u5757\u6216\u8005\u5305\u7684\u540d\u79f0\u3002 \u5982\u679c\u4f60\u4f7f\u7528\u5355\u4e00\u7684\u6a21\u5757\uff08\u5982\u672c\u4f8b\uff09\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 name \uff0c\u56e0\u4e3a\u6a21\u5757\u7684\u540d\u79f0\u5c06\u4f1a\u56e0\u5176\u4f5c\u4e3a\u5355\u72ec\u5e94\u7528\u542f\u52a8\u8fd8\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u800c\u6709\u4e0d\u540c\uff08 \u4e5f\u5373\u662f '__main__' \u6216\u5b9e\u9645\u7684\u5bfc\u5165\u540d\uff09\u3002\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u8fd9\u6837 Flask \u624d\u77e5\u9053\u5230\u54ea\u53bb\u627e\u6a21\u677f\u3001\u9759\u6001\u6587\u4ef6\u7b49\u7b49\u3002\u8be6\u60c5\u89c1 Flask \u7684\u6587\u6863\u3002 \u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 route() \u88c5\u9970\u5668\u544a\u8bc9 Flask \u4ec0\u4e48\u6837\u7684URL \u80fd\u89e6\u53d1\u6211\u4eec\u7684\u51fd\u6570\u3002 \u8fd9\u4e2a\u51fd\u6570\u7684\u540d\u5b57\u4e5f\u5728\u751f\u6210 URL \u65f6\u88ab\u7279\u5b9a\u7684\u51fd\u6570\u91c7\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u6211\u4eec\u60f3\u8981\u663e\u793a\u5728\u7528\u6237\u6d4f\u89c8\u5668\u4e2d\u7684\u4fe1\u606f\u3002 \u6700\u540e\u6211\u4eec\u7528 run() \u51fd\u6570\u6765\u8ba9\u5e94\u7528\u8fd0\u884c\u5728\u672c\u5730\u670d\u52a1\u5668\u4e0a\u3002 \u5176\u4e2d if __name__ =='__main__': \u786e\u4fdd\u670d\u52a1\u5668\u53ea\u4f1a\u5728\u8be5\u811a\u672c\u88ab Python \u89e3\u91ca\u5668\u76f4\u63a5\u6267\u884c\u7684\u65f6\u5019\u624d\u4f1a\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u7684\u65f6\u5019\u3002 \u5916\u90e8\u53ef\u8bbf\u95ee\u7684\u670d\u52a1\u5668 \u5982\u679c\u4f60\u8fd0\u884c\u4e86\u8fd9\u4e2a\u670d\u52a1\u5668\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u53ea\u80fd\u4ece\u4f60\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u8bbf\u95ee\uff0c\u7f51\u7edc\u4e2d\u5176\u5b83\u4efb\u4f55\u7684\u5730\u65b9\u90fd\u4e0d\u80fd\u8bbf\u95ee\u3002\u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4f60\u7684\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u4efb\u610f Python \u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u884c\u4e3a\u662f\u9ed8\u8ba4\u7684\u3002 \u5982\u679c\u4f60\u7981\u7528\u4e86 debug \u6216\u4fe1\u4efb\u4f60\u6240\u5728\u7f51\u7edc\u7684\u7528\u6237\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u4fee\u6539\u8c03\u7528 run() \u7684\u65b9\u6cd5\u4f7f\u4f60\u7684\u670d\u52a1\u5668\u516c\u5f00\u53ef\u7528\uff0c\u5982\u4e0b: app.run(host='0.0.0.0') \u8fd9\u4f1a\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u76d1\u542c\u6240\u6709\u516c\u7f51 IP\u3002 \u8c03\u8bd5\u6a21\u5f0f \u00b6 \u867d\u7136 run() \u65b9\u6cd5\u9002\u7528\u4e8e\u542f\u52a8\u672c\u5730\u7684\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u4f46\u662f\u4f60\u6bcf\u6b21\u4fee\u6539\u4ee3\u7801\u540e\u90fd\u8981\u624b\u52a8\u91cd\u542f\u5b83\u3002\u8fd9\u6837\u5e76\u4e0d\u591f\u4f18\u96c5\uff0c\u800c\u4e14 Flask \u53ef\u4ee5\u505a\u5230\u66f4\u597d\u3002\u5982\u679c\u4f60\u542f\u7528\u4e86\u8c03\u8bd5\u652f\u6301\uff0c\u670d\u52a1\u5668\u4f1a\u5728\u4ee3\u7801\u4fee\u6539\u540e\u81ea\u52a8\u91cd\u65b0\u8f7d\u5165\uff0c\u5e76\u5728\u53d1\u751f\u9519\u8bef\u65f6\u63d0\u4f9b\u4e00\u4e2a\u76f8\u5f53\u6709\u7528\u7684\u8c03\u8bd5\u5668\u3002 \u6709\u4e24\u79cd\u9014\u5f84\u6765\u542f\u7528\u8c03\u8bd5\u6a21\u5f0f\u3002\u4e00\u79cd\u662f\u76f4\u63a5\u5728\u5e94\u7528\u5bf9\u8c61\u4e0a\u8bbe\u7f6e: app . debug = True app . run () \u53e6\u4e00\u79cd\u662f\u4f5c\u4e3a run \u65b9\u6cd5\u7684\u4e00\u4e2a\u53c2\u6570\u4f20\u5165: app.run(debug=True) \u4e24\u79cd\u65b9\u6cd5\u7684\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002 \u6ce8\u610f \u5c3d\u7ba1\u4ea4\u4e92\u5f0f\u8c03\u8bd5\u5668\u5728\u5141\u8bb8 fork \u7684\u73af\u5883\u4e2d\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\uff08\u4e5f\u5373\u5728\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\u6b63\u5e38\u4f7f\u7528\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff09\uff0c\u4f46\u5b83\u4f9d\u7136\u5141\u8bb8\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002\u8fd9\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u5de8\u5927\u7684\u5b89\u5168\u9690\u60a3\uff0c\u56e0\u6b64\u5b83 \u7edd\u5bf9\u4e0d\u80fd\u7528\u4e8e\u751f\u4ea7\u73af\u5883 \u3002 \u8def\u7531 \u00b6 \u73b0\u4ee3 Web \u5e94\u7528\u7684 URL \u5341\u5206\u4f18\u96c5\uff0c\u6613\u4e8e\u4eba\u4eec\u8fa8\u8bc6\u8bb0\u5fc6\uff0c\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u90a3\u4e9b\u9762\u5411\u4f7f\u7528\u4f4e\u901f\u7f51\u7edc\u8fde\u63a5\u79fb\u52a8\u8bbe\u5907\u8bbf\u95ee\u7684\u5e94\u7528\u7279\u522b\u6709\u7528\u3002\u5982\u679c\u53ef\u4ee5\u4e0d\u8bbf\u95ee\u7d22\u5f15\u9875\uff0c\u800c\u662f\u76f4\u63a5\u8bbf\u95ee\u60f3\u8981\u7684\u90a3\u4e2a\u9875\u9762\uff0c\u4ed6\u4eec\u591a\u534a\u4f1a\u7b11\u9010\u989c\u5f00\u800c\u518d\u5ea6\u5149\u987e\u3002 \u5982\u4e0a\u6240\u89c1\uff0c route() \u88c5\u9970\u5668\u628a\u4e00\u4e2a\u51fd\u6570\u7ed1\u5b9a\u5230\u5bf9\u5e94\u7684 URL \u4e0a\u3002\u4f46\u662f\uff0c\u4e0d\u4ec5\u5982\u6b64\uff01\u4f60\u53ef\u4ee5\u6784\u9020\u542b\u6709\u52a8\u6001\u90e8\u5206\u7684 URL\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e00\u4e2a\u51fd\u6570\u4e0a\u9644\u7740\u591a\u4e2a\u89c4\u5219\u3002 \u8fd9\u91cc\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u4f8b\u5b50: @app . route ( '/' ) def index (): return 'Index Page' @app . route ( '/hello' ) def hello (): return 'Hello World' URL\u4f20\u53c2 \u00b6 \u8981\u7ed9 URL \u6dfb\u52a0\u53d8\u91cf\u90e8\u5206\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u7279\u6b8a\u7684\u5b57\u6bb5\u6807\u8bb0\u4e3a <variable_name> \uff0c \u8fd9\u4e2a\u90e8\u5206\u5c06\u4f1a\u4f5c\u4e3a\u547d\u540d\u53c2\u6570\u4f20\u9012\u5230\u4f60\u7684\u51fd\u6570\u3002\u89c4\u5219\u53ef\u4ee5\u7528 <converter:variable_name> \u6307\u5b9a\u4e00\u4e2a\u53ef\u9009\u7684\u8f6c\u6362\u5668\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4e0d\u9519\u7684\u4f8b\u5b50: @app . route ( '/user/<username>' ) def show_user_profile ( username ): # show the user profile for that user return 'User %s ' % username @app . route ( '/post/<int:post_id>' ) def show_post ( post_id ): # show the post with the given id, the id is an integer return 'Post %d ' % post_id \u8f6c\u6362\u5668\u6709\u4e0b\u9762\u51e0\u79cd\uff1a int \u63a5\u53d7\u6574\u6570 float \u540c int \uff0c\u4f46\u662f\u63a5\u53d7\u6d6e\u70b9\u6570 path \u548c\u9ed8\u8ba4\u7684\u76f8\u4f3c\uff0c\u4f46\u4e5f\u63a5\u53d7\u659c\u7ebf \u552f\u4e00 URL / \u91cd\u5b9a\u5411\u884c\u4e3a \u00b6 Flask \u7684 URL \u89c4\u5219\u57fa\u4e8e Werkzeug \u7684\u8def\u7531\u6a21\u5757\u3002\u8fd9\u4e2a\u6a21\u5757\u80cc\u540e\u7684\u601d\u60f3\u662f\u57fa\u4e8e Apache \u4ee5\u53ca\u66f4\u65e9\u7684 HTTP \u670d\u52a1\u5668\u4e3b\u5f20\u7684\u5148\u4f8b\uff0c\u4fdd\u8bc1\u4f18\u96c5\u4e14\u552f\u4e00\u7684 URL\u3002 \u4ee5\u8fd9\u4e24\u4e2a\u89c4\u5219\u4e3a\u4f8b: @app . route ( '/projects/' ) def projects (): return 'The project page' @app . route ( '/about' ) def about (): return 'The about page' \u867d\u7136\u5b83\u4eec\u770b\u8d77\u6765\u7740\u5b9e\u76f8\u4f3c\uff0c\u4f46\u5b83\u4eec\u7ed3\u5c3e\u659c\u7ebf\u7684\u4f7f\u7528\u5728 URL \u5b9a\u4e49 \u4e2d\u4e0d\u540c\u3002 \u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d\uff0c\u6307\u5411 projects \u7684\u89c4\u8303 URL \u5c3e\u7aef\u6709\u4e00\u4e2a\u659c\u7ebf\u3002\u8fd9\u79cd\u611f\u89c9\u5f88\u50cf\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u5939\u3002\u8bbf\u95ee\u4e00\u4e2a\u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u88ab Flask \u91cd\u5b9a\u5411\u5230\u5e26\u659c\u7ebf\u7684\u89c4\u8303 URL \u53bb\u3002 \u7136\u800c\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684 URL \u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\uff0c\u7c7b\u4f3c UNIX-like \u7cfb\u7edf\u4e0b\u7684\u6587\u4ef6\u7684\u8def\u5f84\u540d\u3002\u8bbf\u95ee\u7ed3\u5c3e\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u4ea7\u751f\u4e00\u4e2a 404 \u201cNot Found\u201d \u9519\u8bef\u3002 \u8fd9\u4e2a\u884c\u4e3a\u4f7f\u5f97\u5728\u9057\u5fd8\u5c3e\u659c\u7ebf\u65f6\uff0c\u5141\u8bb8\u5173\u8054\u7684 URL \u63a5\u4efb\u5de5\u4f5c\uff0c\u4e0e Apache \u548c\u5176\u5b83\u7684\u670d\u52a1\u5668\u7684\u884c\u4e3a\u5e76\u65e0\u4e8c\u5f02\u3002\u6b64\u5916\uff0c\u4e5f\u4fdd\u8bc1\u4e86 URL \u7684\u552f\u4e00\uff0c\u6709\u52a9\u4e8e\u907f\u514d\u641c\u7d22\u5f15\u64ce\u7d22\u5f15\u540c\u4e00\u4e2a\u9875\u9762\u4e24\u6b21\u3002 \u6784\u9020 URL \u00b6 \u5982\u679c Flask \u80fd\u5339\u914d URL\uff0c\u90a3\u4e48 Flask \u53ef\u4ee5\u751f\u6210\u5b83\u4eec\u5417\uff1f\u5f53\u7136\u53ef\u4ee5\u3002\u4f60\u53ef\u4ee5\u7528 url_for() \u6765\u7ed9\u6307\u5b9a\u7684\u51fd\u6570\u6784\u9020 URL\u3002\u5b83\u63a5\u53d7\u51fd\u6570\u540d\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4e5f\u63a5\u53d7\u5bf9\u5e94 URL \u89c4\u5219\u7684\u53d8\u91cf\u90e8\u5206\u7684\u547d\u540d\u53c2\u6570\u3002\u672a\u77e5\u53d8\u91cf\u90e8\u5206\u4f1a\u6dfb\u52a0\u5230 URL \u672b\u5c3e\u4f5c\u4e3a\u67e5\u8be2\u53c2\u6570\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: >>> from flask import Flask , url_for >>> app = Flask ( __name__ ) >>> @app . route ( '/' ) ... def index (): pass ... >>> @app . route ( '/login' ) ... def login (): pass ... >>> @app . route ( '/user/<username>' ) ... def profile ( username ): pass ... >>> with app . test_request_context (): ... print url_for ( 'index' ) ... print url_for ( 'login' ) ... print url_for ( 'login' , next = '/' ) ... print url_for ( 'profile' , username = 'John Doe' ) ... / / login / login ? next =/ / user / John % 20 Doe \uff08\u8fd9\u91cc\u4e5f\u7528\u5230\u4e86 test_request_context() \u65b9\u6cd5\uff0c\u4e0b\u9762\u4f1a\u89e3\u91ca\u3002\u5373\u4f7f\u6211\u4eec\u6b63\u5728\u901a\u8fc7 Python \u7684 shell \u8fdb\u884c\u4ea4\u4e92\uff0c\u5b83\u4f9d\u7136\u4f1a\u544a\u8bc9 Flask \u8981\u8868\u73b0\u4e3a\u6b63\u5728\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u89e3\u91ca\u3002 \u73af\u5883\u5c40\u90e8\u53d8\u91cf \uff09 \u4e3a\u4ec0\u4e48\u4f60\u8981\u6784\u5efa URL \u800c\u975e\u5728\u6a21\u677f\u4e2d\u786c\u7f16\u7801\uff1f\u8fd9\u91cc\u6709\u4e09\u4e2a\u7edd\u5999\u7684\u7406\u7531\uff1a \u53cd\u5411\u6784\u5efa\u901a\u5e38\u6bd4\u786c\u7f16\u7801\u7684\u63cf\u8ff0\u6027\u66f4\u597d\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5141\u8bb8\u4f60\u4e00\u6b21\u6027\u4fee\u6539 URL\uff0c \u800c\u4e0d\u662f\u5230\u5904\u8fb9\u627e\u8fb9\u6539\u3002 URL \u6784\u5efa\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\u548c Unicode \u6570\u636e\uff0c\u514d\u53bb\u4f60\u5f88\u591a\u9ebb\u70e6\u3002 \u5982\u679c\u4f60\u7684\u5e94\u7528\u4e0d\u4f4d\u4e8e URL \u7684\u6839\u8def\u5f84\uff08\u6bd4\u5982\uff0c\u5728 /myapplication \u4e0b\uff0c\u800c\u4e0d\u662f / \uff09\uff0c url_for() \u4f1a\u59a5\u5584\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002 HTTP \u65b9\u6cd5 \u00b6 HTTP \uff08\u4e0e Web \u5e94\u7528\u4f1a\u8bdd\u7684\u534f\u8bae\uff09\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u8bbf\u95ee URL \u65b9\u6cd5\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8def\u7531\u53ea\u56de\u5e94 GET \u8bf7\u6c42\uff0c\u4f46\u662f\u901a\u8fc7 route() \u88c5\u9970\u5668\u4f20\u9012 methods \u53c2\u6570\u53ef\u4ee5\u6539\u53d8\u8fd9\u4e2a\u884c\u4e3a\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : do_the_login () else : show_the_login_form () \u5982\u679c\u5b58\u5728 GET \uff0c\u90a3\u4e48\u4e5f\u4f1a\u66ff\u4f60\u81ea\u52a8\u5730\u6dfb\u52a0 HEAD\uff0c\u65e0\u9700\u5e72\u9884\u3002\u5b83\u4f1a\u786e\u4fdd\u9075\u7167 HTTP RFC \uff08\u63cf\u8ff0 HTTP \u534f\u8bae\u7684\u6587\u6863\uff09\u5904\u7406 HEAD \u8bf7\u6c42\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5b8c\u5168\u5ffd\u7565\u8fd9\u90e8\u5206\u7684 HTTP \u89c4\u8303\u3002\u540c\u6837\uff0c\u81ea\u4ece Flask 0.6 \u8d77\uff0c \u4e5f\u5b9e\u73b0\u4e86 OPTIONS \u7684\u81ea\u52a8\u5904\u7406\u3002 \u4f60\u4e0d\u77e5\u9053\u4e00\u4e2a HTTP \u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u8fd9\u91cc\u4f1a\u7b80\u8981\u4ecb\u7ecd HTTP \u65b9\u6cd5\u548c\u5b83\u4eec\u4e3a\u4ec0\u4e48\u91cd\u8981\uff1a HTTP \u65b9\u6cd5\uff08\u4e5f\u7ecf\u5e38\u88ab\u53eb\u505a\u201c\u8c13\u8bcd\u201d\uff09\u544a\u77e5\u670d\u52a1\u5668\uff0c\u5ba2\u6237\u7aef\u60f3\u5bf9\u8bf7\u6c42\u7684\u9875\u9762 \u505a \u4e9b\u4ec0\u4e48\u3002\u4e0b\u9762\u7684\u90fd\u662f\u975e\u5e38\u5e38\u89c1\u7684\u65b9\u6cd5\uff1a GET\uff1a\u6d4f\u89c8\u5668\u544a\u77e5\u670d\u52a1\u5668\uff1a\u53ea \u83b7\u53d6 \u9875\u9762\u4e0a\u7684\u4fe1\u606f\u5e76\u53d1\u7ed9\u6211\u3002\u8fd9\u662f\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u3002 HEAD\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u6b32\u83b7\u53d6\u4fe1\u606f\uff0c\u4f46\u662f\u53ea\u5173\u5fc3 \u6d88\u606f\u5934 \u3002\u5e94\u7528\u5e94\u50cf\u5904\u7406 GET \u8bf7\u6c42\u4e00\u6837\u6765\u5904\u7406\u5b83\uff0c\u4f46\u662f\u4e0d\u5206\u53d1\u5b9e\u9645\u5185\u5bb9\u3002\u5728 Flask \u4e2d\u4f60\u5b8c\u5168\u65e0\u9700 \u4eba\u5de5 \u5e72\u9884\uff0c\u5e95\u5c42\u7684 Werkzeug \u5e93\u5df2\u7ecf\u66ff\u4f60\u6253\u70b9\u597d\u4e86\u3002 POST\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u60f3\u5728 URL \u4e0a \u53d1\u5e03 \u65b0\u4fe1\u606f\u3002\u5e76\u4e14\uff0c\u670d\u52a1\u5668\u5fc5\u987b\u786e\u4fdd \u6570\u636e\u5df2\u5b58\u50a8\u4e14\u4ec5\u5b58\u50a8\u4e00\u6b21\u3002\u8fd9\u662f HTML \u8868\u5355\u901a\u5e38\u53d1\u9001\u6570\u636e\u5230\u670d\u52a1\u5668\u7684\u65b9\u6cd5\u3002 PUT\uff1a\u7c7b\u4f3c POST \u4f46\u662f\u670d\u52a1\u5668\u53ef\u80fd\u89e6\u53d1\u4e86\u5b58\u50a8\u8fc7\u7a0b\u591a\u6b21\uff0c\u591a\u6b21\u8986\u76d6\u6389\u65e7\u503c\u3002\u4f60\u53ef \u80fd\u4f1a\u95ee\u8fd9\u6709\u4ec0\u4e48\u7528\uff0c\u5f53\u7136\u8fd9\u662f\u6709\u539f\u56e0\u7684\u3002\u8003\u8651\u5230\u4f20\u8f93\u4e2d\u8fde\u63a5\u53ef\u80fd\u4f1a\u4e22\u5931\uff0c\u5728 \u8fd9\u79cd \u60c5\u51b5\u4e0b\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u7cfb\u7edf\u53ef\u80fd\u5b89\u5168\u5730\u7b2c\u4e8c\u6b21\u63a5\u6536\u8bf7\u6c42\uff0c\u800c \u4e0d\u7834\u574f\u5176\u5b83\u4e1c\u897f\u3002\u56e0\u4e3a POST\u5b83\u53ea\u89e6\u53d1\u4e00\u6b21\uff0c\u6240\u4ee5\u7528 POST \u662f\u4e0d\u53ef\u80fd\u7684\u3002 DELETE\uff1a\u5220\u9664\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002 OPTIONS\uff1a\u7ed9\u5ba2\u6237\u7aef\u63d0\u4f9b\u4e00\u4e2a\u654f\u6377\u7684\u9014\u5f84\u6765\u5f04\u6e05\u8fd9\u4e2a URL \u652f\u6301\u54ea\u4e9b HTTP \u65b9\u6cd5\u3002 \u4ece Flask 0.6 \u5f00\u59cb\uff0c\u5b9e\u73b0\u4e86\u81ea\u52a8\u5904\u7406\u3002. \u9759\u6001\u6587\u4ef6 \u00b6 \u52a8\u6001 web \u5e94\u7528\u4e5f\u4f1a\u9700\u8981\u9759\u6001\u6587\u4ef6\uff0c\u901a\u5e38\u662f CSS \u548c JavaScript \u6587\u4ef6\u3002\u7406\u60f3\u72b6\u51b5\u4e0b\uff0c \u4f60\u5df2\u7ecf\u914d\u7f6e\u597d Web \u670d\u52a1\u5668\u6765\u63d0\u4f9b\u9759\u6001\u6587\u4ef6\uff0c\u4f46\u662f\u5728\u5f00\u53d1\u4e2d\uff0cFlask \u4e5f\u53ef\u4ee5\u505a\u5230\u3002 \u53ea\u8981\u5728\u4f60\u7684\u5305\u4e2d\u6216\u662f\u6a21\u5757\u7684\u6240\u5728\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a static \u7684\u6587\u4ef6\u5939\uff0c\u5728\u5e94\u7528\u4e2d\u4f7f\u7528 /static \u5373\u53ef\u8bbf\u95ee\u3002 \u7ed9\u9759\u6001\u6587\u4ef6\u751f\u6210 URL \uff0c\u4f7f\u7528\u7279\u6b8a\u7684 'static' \u7aef\u70b9\u540d: ```python url_for('static', filename='style.css') \u8fd9\u4e2a\u6587\u4ef6\u5e94\u8be5\u5b58\u50a8\u5728\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684 `static/style.css` \u3002 ## \u6a21\u677f\u6e32\u67d3 \u7528 Python \u751f\u6210 HTML \u5341\u5206\u65e0\u8da3\uff0c\u800c\u4e14\u76f8\u5f53\u7e41\u7410\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u624b\u52a8\u5bf9 HTML \u505a\u8f6c\u4e49\u6765\u4fdd\u8bc1\u5e94\u7528\u7684\u5b89\u5168\u3002\u4e3a\u6b64\uff0cFlask \u914d\u5907\u4e86 [Jinja2](http://jinja.pocoo.org/) \u6a21\u677f\u5f15\u64ce\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 [`render_template()`](http://docs.jinkan.org/docs/flask/api.html#flask.render_template) \u65b9\u6cd5\u6765\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9700\u8981\u505a\u7684\u4e00\u5207\u5c31\u662f\u5c06\u6a21\u677f\u540d\u548c\u4f60\u60f3\u4f5c\u4e3a\u5173\u952e\u5b57\u7684\u53c2\u6570\u4f20\u5165\u6a21\u677f\u7684\u53d8\u91cf\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c55\u793a\u5982\u4f55\u6e32\u67d3\u6a21\u677f\u7684\u7b80\u4f8b: ```python from flask import render_template @app.route('/hello/') @app.route('/hello/<name>') def hello(name=None): return render_template('hello.html', name=name) Flask \u4f1a\u5728 templates \u6587\u4ef6\u5939\u91cc\u5bfb\u627e\u6a21\u677f\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u662f\u4e2a\u6a21\u5757\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u5e94\u8be5\u4e0e\u6a21\u5757\u540c\u7ea7\uff1b\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u5305\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5939\u4f5c\u4e3a\u5305\u7684\u5b50\u76ee\u5f55: \u60c5\u51b5 1 : \u6a21\u5757: /application.py /templates /hello.html \u60c5\u51b5 2 : \u5305: /application /__init__.py /templates /hello.html \u5173\u4e8e\u6a21\u677f\uff0c\u4f60\u53ef\u4ee5\u53d1\u6325 Jinja2 \u6a21\u677f\u7684\u5168\u90e8\u5b9e\u4f8b\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u89c1 Jinja2 \u6a21\u677f\u6587\u6863 \u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u6a21\u677f\u5b9e\u4f8b\uff1a <!doctype html> < title > Hello from Flask </ title > {% if name %} < h1 > Hello {{ name }}! </ h1 > {% else %} < h1 > Hello World! </ h1 > {% endif %} \u5728\u6a21\u677f\u91cc\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8bbf\u95ee request \u3001 session \u548c g [ 1] \u5bf9\u8c61\uff0c \u4ee5\u53ca get_flashed_messages() \u51fd\u6570\u3002 \u6a21\u677f\u7ee7\u627f\u8ba9\u6a21\u677f\u7528\u8d77\u6765\u76f8\u5f53\u987a\u624b\u3002\u5982\u6b32\u4e86\u89e3\u7ee7\u627f\u7684\u5de5\u4f5c\u673a\u7406\uff0c\u8bf7\u8df3\u8f6c\u5230 \u6a21\u677f\u7ee7\u627f \u6a21\u5f0f\u7684\u6587\u6863\u3002\u6700\u8d77\u7801\uff0c\u6a21\u677f\u7ee7\u627f\u80fd\u4f7f\u7279\u5b9a\u5143\u7d20 \uff08\u6bd4\u5982\u9875\u7709\u3001\u5bfc\u822a\u680f\u548c\u9875\u811a\uff09\u53ef\u4ee5\u51fa\u73b0\u5728\u6240\u6709\u7684\u9875\u9762\u3002 \u81ea\u52a8\u8f6c\u4e49\u529f\u80fd\u9ed8\u8ba4\u662f\u5f00\u542f\u7684\uff0c\u6240\u4ee5\u5982\u679c name \u5305\u542b HTML \uff0c\u5b83\u5c06\u4f1a\u88ab\u81ea\u52a8\u8f6c\u4e49\u3002\u5982\u679c\u4f60\u80fd\u4fe1\u4efb\u4e00\u4e2a\u53d8\u91cf\uff0c\u5e76\u4e14\u4f60\u77e5\u9053\u5b83\u662f\u5b89\u5168\u7684\uff08\u4f8b\u5982\u4e00\u4e2a\u6a21\u5757\u628a Wiki \u6807\u8bb0\u8f6c\u6362\u4e3a HTML\uff09\uff0c\u4f60\u53ef\u4ee5\u7528 Markup \u7c7b\u6216 |safe \u8fc7\u6ee4\u5668\u5728\u6a21\u677f\u4e2d\u628a\u5b83\u6807\u8bb0\u4e3a\u5b89\u5168\u7684\u3002\u5728 Jinja 2 \u6587\u6863\u4e2d\uff0c\u4f60\u4f1a\u770b\u5230\u66f4\u591a\u7684\u4f8b\u5b50\u3002 \u8fd9\u91cc\u662f\u4e00\u4e2a Markup \u7c7b\u5982\u4f55\u4f7f\u7528\u7684\u7b80\u5355\u4ecb\u7ecd: >>> from flask import Markup >>> Markup ( '<strong>Hello %s !</strong>' ) % '<blink>hacker</blink>' Markup ( u '<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>' ) >>> Markup . escape ( '<blink>hacker</blink>' ) Markup ( u '&lt;blink&gt;hacker&lt;/blink&gt;' ) >>> Markup ( '<em>Marked up</em> &raquo; HTML' ) . striptags () u 'Marked up \\xbb HTML' \u5728 0.5 \u7248\u66f4\u6539: \u81ea\u52a8\u8f6c\u4e49\u4e0d\u518d\u5728\u6240\u6709\u6a21\u677f\u4e2d\u542f\u7528\u3002\u4e0b\u5217\u6269\u5c55\u540d\u7684\u6a21\u677f\u4f1a\u89e6\u53d1\u81ea\u52a8\u8f6c\u4e49\uff1a .html \u3001 .htm \u3001 .xml \u3001 .xhtml \u3002\u4ece\u5b57\u7b26\u4e32\u52a0\u8f7d\u7684\u6a21\u677f\u4f1a\u7981\u7528\u81ea\u52a8\u8f6c\u4e49\u3002 [ 1] \u4e0d\u786e\u5b9a g \u5bf9\u8c61\u662f\u4ec0\u4e48\uff1f\u5b83\u5141\u8bb8\u4f60\u6309\u9700\u5b58\u50a8\u4fe1\u606f\uff0c \u67e5\u770b\uff08 g \uff09\u5bf9\u8c61\u7684\u6587\u6863\u548c \u5728 Flask \u4e2d\u4f7f\u7528 SQLite 3 \u7684\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u8bbf\u95ee\u8bf7\u6c42\u6570\u636e \u00b6 \u5bf9\u4e8e Web \u5e94\u7528\uff0c\u4e0e\u5ba2\u6237\u7aef\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u7684\u6570\u636e\u4ea4\u4e92\u81f3\u5173\u91cd\u8981\u3002\u5728 Flask \u4e2d\u7531\u5168\u5c40\u7684 request \u5bf9\u8c61\u6765\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\u5982\u679c\u4f60\u6709\u4e00\u5b9a\u7684 Python \u7ecf\u9a8c\uff0c\u4f60\u4f1a\u597d\u5947\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u662f\u5168\u5c40\u7684\uff0c\u4e3a\u4ec0\u4e48 Flask \u8fd8\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002\u7b54\u6848\u662f\u73af\u5883\u4f5c\u7528\u57df\uff1a \u73af\u5883\u5c40\u90e8\u53d8\u91cf \u00b6 \u5185\u5e55 \u5982\u679c\u4f60\u60f3\u7406\u89e3\u5176\u5de5\u4f5c\u673a\u5236\u53ca\u5982\u4f55\u5229\u7528\u73af\u5883\u5c40\u90e8\u53d8\u91cf\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u8bf7\u9605\u8bfb\u6b64\u8282\uff0c\u5426\u5219\u53ef\u8df3\u8fc7\u3002 Flask \u4e2d\u7684\u67d0\u4e9b\u5bf9\u8c61\u662f\u5168\u5c40\u5bf9\u8c61\uff0c\u4f46\u5374\u4e0d\u662f\u901a\u5e38\u7684\u90a3\u79cd\u3002\u8fd9\u4e9b\u5bf9\u8c61\u5b9e\u9645\u4e0a\u662f\u7279\u5b9a\u73af\u5883\u7684\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7406\u3002\u867d\u7136\u5f88\u62d7\u53e3\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f88\u5bb9\u6613\u7406\u89e3\u3002 \u60f3\u8c61\u4e00\u4e0b\u5904\u7406\u7ebf\u7a0b\u7684\u73af\u5883\u3002\u4e00\u4e2a\u8bf7\u6c42\u4f20\u5165\uff0cWeb \u670d\u52a1\u5668\u51b3\u5b9a\u751f\u6210\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff08 \u6216\u8005\u522b\u7684\u4ec0\u4e48\u4e1c\u897f\uff0c\u53ea\u8981\u8fd9\u4e2a\u5e95\u5c42\u7684\u5bf9\u8c61\u53ef\u4ee5\u80dc\u4efb\u5e76\u53d1\u7cfb\u7edf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7ebf\u7a0b\uff09\u3002 \u5f53 Flask \u5f00\u59cb\u5b83\u5185\u90e8\u7684\u8bf7\u6c42\u5904\u7406\u65f6\uff0c\u5b83\u8ba4\u5b9a\u5f53\u524d\u7ebf\u7a0b\u662f\u6d3b\u52a8\u7684\u73af\u5883\uff0c\u5e76\u7ed1\u5b9a\u5f53\u524d\u7684\u5e94\u7528\u548c WSGI \u73af\u5883\u5230\u90a3\u4e2a\u73af\u5883\u4e0a\uff08\u7ebf\u7a0b\uff09\u3002\u5b83\u7684\u5b9e\u73b0\u5f88\u5de7\u5999\uff0c\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u5e94\u7528\u8c03\u7528\u53e6\u4e00\u4e2a\u5e94\u7528\u65f6\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002 \u6240\u4ee5\uff0c\u8fd9\u5bf9\u4f60\u6765\u8bf4\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u9664\u975e\u4f60\u8981\u505a\u7c7b\u4f3c\u5355\u5143\u6d4b\u8bd5\u7684\u4e1c\u897f\uff0c\u5426\u5219\u4f60\u57fa\u672c\u4e0a\u53ef\u4ee5\u5b8c\u5168\u65e0\u89c6\u5b83\u3002\u4f60\u4f1a\u53d1\u73b0\u4f9d\u8d56\u4e8e\u4e00\u6bb5\u8bf7\u6c42\u5bf9\u8c61\u7684\u4ee3\u7801\uff0c\u56e0\u6ca1\u6709\u8bf7\u6c42\u5bf9\u8c61\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u81ea\u884c\u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u5e76\u4e14\u628a\u5b83\u7ed1\u5b9a\u5230\u73af\u5883\u4e2d\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u7528 test_request_context() \u73af\u5883\u7ba1\u7406\u5668\u3002\u7ed3\u5408 with \u58f0\u660e\uff0c\u7ed1\u5b9a\u4e00\u4e2a\u6d4b\u8bd5\u8bf7\u6c42\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u4e0e\u4e4b\u4ea4\u4e92\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50: from flask import request with app . test_request_context ( '/hello' , method = 'POST' ): # now you can do something with the request until the # end of the with block, such as basic assertions: assert request . path == '/hello' assert request . method == 'POST' \u53e6\u4e00\u79cd\u53ef\u80fd\u662f\uff1a\u4f20\u9012\u6574\u4e2a WSGI \u73af\u5883\u7ed9 request_context() \u65b9\u6cd5: from flask import request with app . request_context ( environ ): assert request . method == 'POST' \u8bf7\u6c42\u5bf9\u8c61 \u00b6 API \u7ae0\u8282\u5bf9\u8bf7\u6c42\u5bf9\u8c61\u4f5c\u4e86\u8be6\u5c3d\u9610\u8ff0\uff08\u53c2\u89c1 request \uff09\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e0d\u4f1a\u8d58\u8ff0\u3002\u6b64\u5904\u5bbd\u6cdb\u4ecb\u7ecd\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u3002\u9996\u5148\u4ece flask \u6a21\u5757\u91cc\u5bfc\u5165\u5b83: from flask import request \u5f53\u524d\u8bf7\u6c42\u7684 HTTP \u65b9\u6cd5\u53ef\u901a\u8fc7 method \u5c5e\u6027\u6765\u8bbf\u95ee\u3002\u901a\u8fc7:attr:~flask.request.form \u5c5e\u6027\u6765\u8bbf\u95ee\u8868\u5355\u6570\u636e\uff08 POST \u6216 PUT \u8bf7\u6c42\u63d0\u4ea4\u7684\u6570\u636e\uff09\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u7528\u5230\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e24\u4e2a\u5c5e\u6027\u7684\u5b8c\u6574\u5b9e\u4f8b: @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): error = None if request . method == 'POST' : if ( request . form [ 'username' ], request . form [ 'password' ]): return log_the_user_in ( request . form [ 'username' ]) else : error = 'Invalid username/password' # the code below is executed if the request method # was GET or the credentials were invalid return render_template ( 'login.html' , error = error ) \u5f53\u8bbf\u95ee form \u5c5e\u6027\u4e2d\u7684\u4e0d\u5b58\u5728\u7684\u952e\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4f1a\u629b\u51fa\u4e00\u4e2a\u7279\u6b8a\u7684 KeyError \u5f02\u5e38\u3002\u4f60\u53ef\u4ee5\u50cf\u6355\u83b7\u6807\u51c6\u7684 KeyError \u4e00\u6837\u6765\u6355\u83b7\u5b83\u3002 \u5982\u679c\u4f60\u4e0d\u8fd9\u4e48\u505a\uff0c\u5b83\u4f1a\u663e\u793a\u4e00\u4e2a HTTP 400 Bad Request \u9519\u8bef\u9875\u9762\u3002\u6240\u4ee5\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\u4f60\u5e76\u4e0d\u9700\u8981\u5e72\u9884\u8fd9\u4e2a\u884c\u4e3a\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7 args \u5c5e\u6027\u6765\u8bbf\u95ee URL \u4e2d\u63d0\u4ea4\u7684\u53c2\u6570 \uff08 ?key=value \uff09: searchword = request . args . get ( 'q' , '' ) \u6211\u4eec\u63a8\u8350\u7528 get \u6765\u8bbf\u95ee URL \u53c2\u6570\u6216\u6355\u83b7 KeyError \uff0c\u56e0\u4e3a\u7528\u6237\u53ef\u80fd\u4f1a\u4fee\u6539 URL\uff0c\u5411\u4ed6\u4eec\u5c55\u73b0\u4e00\u4e2a 400 bad request \u9875\u9762\u4f1a\u5f71\u54cd\u7528\u6237\u4f53\u9a8c\u3002 \u6587\u4ef6\u4e0a\u4f20 \u00b6 \u7528 Flask \u5904\u7406\u6587\u4ef6\u4e0a\u4f20\u5f88\u7b80\u5355\u3002\u53ea\u8981\u786e\u4fdd\u4f60\u6ca1\u5fd8\u8bb0\u5728 HTML \u8868\u5355\u4e2d\u8bbe\u7f6e enctype=\"multipart/form-data\" \u5c5e\u6027\uff0c\u4e0d\u7136\u4f60\u7684\u6d4f\u89c8\u5668\u6839\u672c\u4e0d\u4f1a\u53d1\u9001\u6587\u4ef6\u3002 \u5df2\u4e0a\u4f20\u7684\u6587\u4ef6\u5b58\u50a8\u5728\u5185\u5b58\u6216\u662f\u6587\u4ef6\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u4e34\u65f6\u7684\u4f4d\u7f6e\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u5bf9\u8c61\u7684 files \u5c5e\u6027\u8bbf\u95ee\u5b83\u4eec\u3002\u6bcf\u4e2a\u4e0a\u4f20\u7684\u6587\u4ef6\u90fd\u4f1a\u5b58\u50a8\u5728\u8fd9\u4e2a\u5b57\u5178\u91cc\u3002\u5b83\u8868\u73b0\u8fd1\u4e4e\u4e3a\u4e00\u4e2a\u6807\u51c6\u7684 Python file \u5bf9\u8c61\uff0c\u4f46\u5b83\u8fd8\u6709\u4e00\u4e2a save() \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8\u4f60\u628a\u6587\u4ef6\u4fdd\u5b58\u5230\u670d\u52a1\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u7528\u5b83\u4fdd\u5b58\u6587\u4ef6\u7684\u4f8b\u5b50: from flask import request @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/uploaded_file.txt' ) ... \u5982\u679c\u4f60\u60f3\u77e5\u9053\u4e0a\u4f20\u524d\u6587\u4ef6\u5728\u5ba2\u6237\u7aef\u7684\u6587\u4ef6\u540d\u662f\u4ec0\u4e48\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee filename \u5c5e\u6027\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c \u6c38\u8fdc\u4e0d\u8981\u4fe1\u4efb\u8fd9\u4e2a\u503c\uff0c\u8fd9\u4e2a\u503c\u662f\u53ef\u4ee5\u4f2a\u9020\u7684\u3002\u5982\u679c\u4f60\u8981\u628a\u6587\u4ef6\u6309\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u6587\u4ef6\u540d\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u90a3\u4e48\u8bf7\u628a\u5b83\u4f20\u9012\u7ed9 Werkzeug \u63d0\u4f9b\u7684 secure_filename() \u51fd\u6570: from flask import request from werkzeug import secure_filename @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/' + secure_filename ( f . filename )) ... Cookies \u00b6 \u4f60\u53ef\u4ee5\u901a\u8fc7 cookies \u5c5e\u6027\u6765\u8bbf\u95ee Cookies\uff0c\u7528\u54cd\u5e94\u5bf9\u8c61\u7684 set_cookie \u65b9\u6cd5\u6765\u8bbe\u7f6e Cookies\u3002\u8bf7\u6c42\u5bf9\u8c61\u7684 cookies \u5c5e\u6027\u662f\u4e00\u4e2a\u5185\u5bb9\u4e3a\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u6240\u6709 Cookies \u7684\u5b57\u5178\u3002\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u4f1a\u8bdd\uff0c\u8bf7\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528 Cookies\uff0c\u8bf7\u53c2\u8003 \u4f1a\u8bdd \u4e00\u8282\u3002\u5728 Flask \u4e2d\uff0c\u5df2\u7ecf\u6ce8\u610f\u5904\u7406\u4e86\u4e00\u4e9b Cookies \u5b89\u5168\u7ec6\u8282\u3002 \u8bfb\u53d6 cookies: from flask import request @app . route ( '/' ) def index (): username = request . cookies . get ( 'username' ) # use cookies.get(key) instead of cookies[key] to not get a # KeyError if the cookie is missing. \u5b58\u50a8 cookies: from flask import make_response @app . route ( '/' ) def index (): resp = make_response ( render_template ( ... )) resp . set_cookie ( 'username' , 'the username' ) return resp \u53ef\u6ce8\u610f\u5230\u7684\u662f\uff0cCookies \u662f\u8bbe\u7f6e\u5728\u54cd\u5e94\u5bf9\u8c61\u4e0a\u7684\u3002\u7531\u4e8e\u901a\u5e38\u89c6\u56fe\u51fd\u6570\u53ea\u662f\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u4e4b\u540e Flask \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u4f60\u8981\u663e\u5f0f\u5730\u8f6c\u6362\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u7136\u540e\u518d\u8fdb\u884c\u4fee\u6539\u3002 \u6709\u65f6\u5019\u4f60\u60f3\u8bbe\u7f6e Cookie\uff0c\u4f46\u54cd\u5e94\u5bf9\u8c61\u4e0d\u80fd\u918b\u5728\u3002\u8fd9\u53ef\u4ee5\u5229\u7528 \u5ef6\u8fdf\u8bf7\u6c42\u56de\u8c03 \u6a21\u5f0f\u5b9e\u73b0\u3002 \u4e3a\u6b64\uff0c\u4e5f\u53ef\u4ee5\u9605\u8bfb \u5173\u4e8e\u54cd\u5e94 \u3002 \u91cd\u5b9a\u5411\u548c\u9519\u8bef \u00b6 \u4f60\u53ef\u4ee5\u7528 redirect() \u51fd\u6570\u628a\u7528\u6237\u91cd\u5b9a\u5411\u5230\u5176\u5b83\u5730\u65b9\u3002\u653e\u5f03\u8bf7\u6c42\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\uff0c\u7528 abort() \u51fd\u6570\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u5b83\u4eec\u5982\u4f55\u4f7f\u7528\u7684\u4f8b\u5b50: from flask import abort , redirect , url_for @app . route ( '/' ) def index (): return redirect ( url_for ( 'login' )) @app . route ( '/login' ) def login (): abort ( 401 ) this_is_never_executed () \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u65e0\u610f\u4e49\u7684\u4f8b\u5b50\u56e0\u4e3a\u7528\u6237\u4f1a\u4ece\u4e3b\u9875\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u4e0d\u80fd\u8bbf\u95ee\u7684\u9875\u9762 \uff08401 \u610f\u5473\u7740\u7981\u6b62\u8bbf\u95ee\uff09\uff0c\u4f46\u662f\u5b83\u5c55\u793a\u4e86\u91cd\u5b9a\u5411\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9519\u8bef\u4ee3\u7801\u4f1a\u663e\u793a\u4e00\u4e2a\u9ed1\u767d\u7684\u9519\u8bef\u9875\u9762\u3002\u5982\u679c\u4f60\u8981\u5b9a\u5236\u9519\u8bef\u9875\u9762\uff0c \u53ef\u4ee5\u4f7f\u7528 errorhandler() \u88c5\u9970\u5668: from flask import render_template @app . errorhandler ( 404 ) def page_not_found ( error ): return render_template ( 'page_not_found.html' ), 404 \u6ce8\u610f render_template() \u8c03\u7528\u4e4b\u540e\u7684 404 \u3002\u8fd9\u544a\u8bc9 Flask\uff0c\u8be5\u9875\u7684\u9519\u8bef\u4ee3\u7801\u662f 404 \uff0c\u5373\u6ca1\u6709\u627e\u5230\u3002\u9ed8\u8ba4\u4e3a 200\uff0c\u4e5f\u5c31\u662f\u4e00\u5207\u6b63\u5e38\u3002 \u5173\u4e8e\u54cd\u5e94 \u00b6 \u89c6\u56fe\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u4e3a\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c \u5b83\u88ab\u8f6c\u6362\u4e3a\u8be5\u5b57\u7b26\u4e32\u4e3a\u4e3b\u4f53\u7684\u3001\u72b6\u6001\u7801\u4e3a 200 OK``\u7684 \u3001 MIME \u7c7b\u578b\u662f ``text/html \u7684\u54cd\u5e94\u5bf9\u8c61\u3002Flask \u628a\u8fd4\u56de\u503c\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u7684\u903b\u8f91\u662f\u8fd9\u6837\uff1a \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u5b83\u4f1a\u4ece\u89c6\u56fe\u76f4\u63a5\u8fd4\u56de\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u54cd\u5e94\u5bf9\u8c61\u4f1a\u7528\u5b57\u7b26\u4e32\u6570\u636e\u548c\u9ed8\u8ba4\u53c2\u6570\u521b\u5efa\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u4e14\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u63d0\u4f9b\u989d\u5916\u7684\u4fe1\u606f\u3002\u8fd9\u6837\u7684\u5143\u7ec4\u5fc5\u987b\u662f (response, status, headers) \u7684\u5f62\u5f0f\uff0c\u4e14\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u3002 status \u503c\u4f1a\u8986\u76d6\u72b6\u6001\u4ee3\u7801\uff0c headers \u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u8868\u6216\u5b57\u5178\uff0c\u4f5c\u4e3a\u989d\u5916\u7684\u6d88\u606f\u6807\u5934\u503c\u3002 \u5982\u679c\u4e0a\u8ff0\u6761\u4ef6\u5747\u4e0d\u6ee1\u8db3\uff0c Flask \u4f1a\u5047\u8bbe\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u3002 \u5982\u679c\u4f60\u60f3\u5728\u89c6\u56fe\u91cc\u64cd\u7eb5\u4e0a\u8ff0\u6b65\u9aa4\u7ed3\u679c\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u3002 \u8b6c\u5982\u4f60\u6709\u8fd9\u6837\u4e00\u4e2a\u89c6\u56fe: @app . errorhandler ( 404 ) def not_found ( error ): return render_template ( 'error.html' ), 404 \u4f60\u53ea\u9700\u8981\u628a\u8fd4\u56de\u503c\u8868\u8fbe\u5f0f\u4f20\u9012\u7ed9 make_response() \uff0c\u83b7\u53d6\u7ed3\u679c\u5bf9\u8c61\u5e76\u4fee\u6539\uff0c\u7136\u540e\u518d\u8fd4\u56de\u5b83: @app . errorhandler ( 404 ) def not_found ( error ): resp = make_response ( render_template ( 'error.html' ), 404 ) resp . headers [ 'X-Something' ] = 'A value' return resp \u4f1a\u8bdd \u00b6 \u9664\u8bf7\u6c42\u5bf9\u8c61\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a session \u5bf9\u8c61\u3002\u5b83\u5141\u8bb8\u4f60\u5728\u4e0d\u540c\u8bf7\u6c42\u95f4\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u7684\u4fe1\u606f\u3002\u5b83\u662f\u5728 Cookies \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u5bf9 Cookies \u8fdb\u884c\u5bc6\u94a5\u7b7e\u540d\u3002\u8fd9\u610f\u5473\u7740\u7528\u6237\u53ef\u4ee5\u67e5\u770b\u4f60 Cookie \u7684\u5185\u5bb9\uff0c\u4f46\u5374\u4e0d\u80fd\u4fee\u6539\u5b83\uff0c\u9664\u975e\u7528\u6237\u77e5\u9053\u7b7e\u540d\u7684\u5bc6\u94a5\u3002 \u8981\u4f7f\u7528\u4f1a\u8bdd\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5bc6\u94a5\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4f1a\u8bdd\u5982\u4f55\u5de5\u4f5c: from flask import Flask , session , redirect , url_for , escape , request app = Flask ( __name__ ) @app . route ( '/' ) def index (): if 'username' in session : return 'Logged in as %s ' % escape ( session [ 'username' ]) return 'You are not logged in' @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : session [ 'username' ] = request . form [ 'username' ] return redirect ( url_for ( 'index' )) return ''' <form action=\"\" method=\"post\"> <p><input type=text name=username> <p><input type=submit value=Login> </form> ''' @app . route ( '/logout' ) def logout (): # remove the username from the session if it's there session . pop ( 'username' , None ) return redirect ( url_for ( 'index' )) # set the secret key. keep this really secret: app . secret_key = 'A0Zr98j/3yX R~XHH!jmN]LWX/,?RT' \u8fd9\u91cc\u63d0\u5230\u7684 escape() \u53ef\u4ee5\u5728\u4f60\u6a21\u677f\u5f15\u64ce\u5916\u505a\u8f6c\u4e49\uff08\u5982\u540c\u672c\u4f8b\uff09\u3002 \u5982\u4f55\u751f\u6210\u5f3a\u58ee\u7684\u5bc6\u94a5 \u968f\u673a\u7684\u95ee\u9898\u5728\u4e8e\u5f88\u96be\u5224\u65ad\u4ec0\u4e48\u662f\u771f\u968f\u673a\u3002\u4e00\u4e2a\u5bc6\u94a5\u5e94\u8be5\u8db3\u591f\u968f\u673a\u3002\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u57fa\u4e8e\u4e00\u4e2a\u5bc6\u94a5\u968f\u673a\u751f\u6210\u5668\u6765\u751f\u6210\u6f02\u4eae\u7684\u968f\u673a\u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u7528\u6765\u505a\u5bc6\u94a5: >>> import os >>> os . urandom ( 24 ) ' \\xfd {H \\xe5 < \\x95\\xf9\\xe3\\x96 .5 \\xd1\\x01 O<! \\xd5\\xa2\\xa0\\x9f R\" \\xa1\\xa8 ' \u628a\u8fd9\u4e2a\u503c\u590d\u5236\u7c98\u8d34\u8fdb\u4f60\u7684\u4ee3\u7801\u4e2d\uff0c\u4f60\u5c31\u6709\u4e86\u5bc6\u94a5\u3002 \u4f7f\u7528\u57fa\u4e8e cookie \u7684\u4f1a\u8bdd\u9700\u6ce8\u610f: Flask \u4f1a\u5c06\u4f60\u653e\u8fdb\u4f1a\u8bdd\u5bf9\u8c61\u7684\u503c\u5e8f\u5217\u5316\u81f3 Cookies\u3002\u5982\u679c\u4f60\u53d1\u73b0\u67d0\u4e9b\u503c\u5728\u8bf7\u6c42\u4e4b\u95f4\u5e76\u6ca1\u6709\u6301\u4e45\u5b58\u5728\uff0c\u7136\u800c\u786e\u5b9e\u5df2\u7ecf\u542f\u7528\u4e86 Cookies\uff0c\u4f46\u4e5f\u6ca1\u6709\u5f97\u5230\u660e\u786e\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u65f6\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u9875\u9762\u54cd\u5e94\u4e2d\u7684 Cookies \u7684\u5927\u5c0f\uff0c\u5e76\u4e0e Web \u6d4f\u89c8\u5668\u6240\u652f\u6301\u7684\u5927\u5c0f\u5bf9\u6bd4\u3002 \u6d88\u606f\u95ea\u73b0 \u00b6 \u53cd\u9988\uff0c\u662f\u826f\u597d\u7684\u5e94\u7528\u548c\u7528\u6237\u754c\u9762\u7684\u91cd\u8981\u6784\u6210\u3002\u5982\u679c\u7528\u6237\u5f97\u4e0d\u5230\u8db3\u591f\u7684\u53cd\u9988\uff0c\u4ed6\u4eec\u5f88\u53ef\u80fd\u5f00\u59cb\u538c\u6076\u8fd9\u4e2a\u5e94\u7528\u3002 Flask \u63d0\u4f9b\u4e86\u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u7ed9\u7528\u6237\u53cd\u9988\u3002 \u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\u901a\u5e38\u4f1a\u5728\u8bf7\u6c42\u7ed3\u675f\u65f6\u8bb0\u5f55\u4fe1\u606f\uff0c\u5e76\u5728\u4e0b\u4e00\u4e2a\uff08\u4e14\u4ec5\u5728\u4e0b\u4e00\u4e2a\uff09\u8bf7\u6c42\u4e2d\u8bbf\u95ee\u8bb0\u5f55\u7684\u4fe1\u606f\u3002\u5c55\u73b0\u8fd9\u4e9b\u6d88\u606f\u901a\u5e38\u7ed3\u5408\u8981\u6a21\u677f\u5e03\u5c40\u3002 \u4f7f\u7528 flash() \u65b9\u6cd5\u53ef\u4ee5\u95ea\u73b0\u4e00\u6761\u6d88\u606f\u3002\u8981\u64cd\u4f5c\u6d88\u606f\u672c\u8eab\uff0c\u8bf7\u4f7f\u7528 get_flashed_messages() \u51fd\u6570\uff0c\u5e76\u4e14\u5728\u6a21\u677f\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002\u5b8c\u6574\u7684\u4f8b\u5b50\u89c1 \u6d88\u606f\u95ea\u73b0 \u90e8\u5206\u3002 \u65e5\u5fd7\u8bb0\u5f55 \u00b6 0.3 \u65b0\u7248\u529f\u80fd. \u6709\u65f6\u5019\u4f60\u4f1a\u5904\u4e8e\u8fd9\u6837\u4e00\u79cd\u5883\u5730\uff0c\u4f60\u5904\u7406\u7684\u6570\u636e\u672c\u5e94\u8be5\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u6bd4\u5982\uff0c\u4f60\u4f1a\u6709\u4e00\u4e9b\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u4f46\u8bf7\u6c42\u663e\u7136\u662f\u7578\u5f62\u7684\u3002\u8fd9\u53ef\u80fd\u662f\u7528\u6237\u7be1\u6539\u4e86\u6570\u636e\uff0c\u6216\u662f\u5ba2\u6237\u7aef\u4ee3\u7801\u7684\u7c97\u5236\u6ee5\u9020\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6b63\u5e38\u5730\u8fd4\u56de 400 Bad Request \u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u6709\u65f6\u5019\u4e0d\u80fd\u8fd9\u4e48\u505a\uff0c\u5e76\u4e14\u8981\u8ba9\u4ee3\u7801\u7ee7\u7eed\u8fd0\u884c\u3002 \u4f60\u53ef\u80fd\u4f9d\u7136\u60f3\u8981\u8bb0\u5f55\u4e0b\uff0c\u662f\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u3002\u8fd9\u65f6\u65e5\u5fd7\u8bb0\u5f55\u5c31\u6d3e\u4e0a\u4e86\u7528\u573a\u3002\u4ece Flask 0.3 \u5f00\u59cb\uff0cFlask \u5c31\u5df2\u7ecf\u9884\u7f6e\u4e86\u65e5\u5fd7\u7cfb\u7edf\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u8c03\u7528\u65e5\u5fd7\u8bb0\u5f55\u7684\u4f8b\u5b50: app . logger . debug ( 'A value for debugging' ) app . logger . warning ( 'A warning occurred ( %d apples)' , 42 ) app . logger . error ( 'An error occurred' ) \u9644\u5e26\u7684 logger \u662f\u4e00\u4e2a\u6807\u51c6\u65e5\u5fd7\u7c7b Logger \uff0c\u6240\u4ee5\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605 logging \u7684\u6587\u6863 \u3002 \u6574\u5408 WSGI \u4e2d\u95f4\u4ef6 \u00b6 \u5982\u679c\u4f60\u60f3\u7ed9\u4f60\u7684\u5e94\u7528\u6dfb\u52a0 WSGI \u4e2d\u95f4\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5c01\u88c5\u5185\u90e8 WSGI \u5e94\u7528\u3002\u4f8b\u5982\u82e5\u662f\u4f60\u60f3\u7528 Werkzeug \u5305\u4e2d\u7684\u67d0\u4e2a\u4e2d\u95f4\u4ef6\u6765\u5e94\u4ed8 lighttpd \u4e2d\u7684 bugs \uff0c\u53ef\u4ee5\u8fd9\u6837\u505a: from werkzeug.contrib.fixers import LighttpdCGIRootFix app . wsgi_app = LighttpdCGIRootFix ( app . wsgi_app ) \u90e8\u7f72\u5230 Web \u670d\u52a1\u5668 \u00b6 \u51c6\u5907\u597d\u90e8\u7f72\u4f60\u7684 Flask \u5e94\u7528\u4e86\uff1f\u4f60\u53ef\u4ee5\u7acb\u5373\u90e8\u7f72\u5230\u6258\u7ba1\u5e73\u53f0\u6765\u5706\u6ee1\u5b8c\u6210\u5feb\u901f\u5165\u95e8\uff0c\u4ee5\u4e0b\u5382\u5546\u5747\u5411\u5c0f\u9879\u76ee\u63d0\u4f9b\u514d\u8d39\u7684\u65b9\u6848: \u5728 Heroku \u4e0a\u90e8\u7f72 Flask \u5728 dotCloud \u4e0a\u90e8\u7f72 Flask \u9644 Flask \u7684\u5177\u4f53\u8bf4\u660e \u6258\u7ba1 Flask \u5e94\u7528\u7684\u5176\u5b83\u9009\u62e9: \u5728 Webfaction \u4e0a\u90e8\u7f72 Flask \u5728 Google App Engine \u4e0a\u90e8\u7f72 Flask \u7528 Localtunnel \u5171\u4eab\u4f60\u7684\u672c\u5730\u670d\u52a1\u5668 \u5982\u679c\u4f60\u6709\u81ea\u5df1\u7684\u4e3b\u673a\uff0c\u5e76\u4e14\u51c6\u5907\u81ea\u5df1\u6258\u7ba1\uff0c\u53c2\u89c1 \u90e8\u7f72\u9009\u62e9 \u7ae0\u8282\u3002","title":"readme-zh"},{"location":"05-flask/readme-zh/#flask","text":"","title":"Flask \u4ecb\u7ecd"},{"location":"05-flask/readme-zh/#_1","text":"Flask \u4f9d\u8d56\u4e24\u4e2a\u5916\u90e8\u5e93\uff1a Werkzeug \u548c Jinja2 \u3002 Werkzeug \u662f\u4e00\u4e2a WSGI\uff08\u5728 Web \u5e94\u7528\u548c\u591a\u79cd\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6807\u51c6 Python \u63a5\u53e3) \u5de5\u5177\u96c6\u3002Jinja2 \u8d1f\u8d23\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9996\u5148\u9700\u8981 Python 2.6 \u6216\u66f4\u9ad8\u7684\u7248\u672c\uff0c\u6240\u4ee5\u8bf7\u786e\u8ba4\u6709\u4e00\u4e2a\u6700\u65b0\u7684 Python 2.x \u5b89\u88c5\u3002 \u5728 Python 3 \u4e2d\u4f7f\u7528 Flask \u8bf7\u53c2\u8003\uff1a Python 3 \u652f\u6301 \u3002","title":"\u4ecb\u7ecd"},{"location":"05-flask/readme-zh/#virtualenv","text":"\u4f60\u5f88\u53ef\u80fd\u60f3\u5728\u5f00\u53d1\u4e2d\u7528\u4e0a virtualenv\uff0c\u5982\u679c\u4f60\u6709\u751f\u4ea7\u73af\u5883\u7684 shell \u6743\u9650\uff0c\u4f60\u540c\u6837\u4f1a\u4e50\u4e8e\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u5b83\u3002 virtualenv \u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f\u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u559c\u6b22 Python\uff0c\u4e0d\u4ec5\u4f1a\u5728\u91c7\u7528 Flask \u7684Web \u5e94\u7528\u4e2d\u7528\u4e0a virtualenv\uff0c\u5728\u522b\u7684\u9879\u76ee\u4e2d\u4f60\u4e5f\u4f1a\u60f3\u7528\u4e0a\u5b83\u3002\u4f60\u62e5\u6709\u7684\u9879\u76ee\u8d8a\u591a\uff0c\u540c\u65f6\u4f7f\u7528\u4e0d\u540c\u7248\u672c\u7684 Python \u5de5\u4f5c\u7684\u53ef\u80fd\u6027\u4e5f\u5c31\u8d8a\u5927\uff0c\u6216\u8005\u8d77\u7801\u9700\u8981\u4e0d\u540c\u7248\u672c\u7684 Python \u5e93\u3002\u60b2\u60e8\u73b0\u5b9e\u662f\uff1a\u5e38\u5e38\u4f1a\u6709\u5e93\u7834\u574f\u5411\u540e\u517c\u5bb9\u6027\uff0c\u7136\u800c\u6b63\u7ecf\u5e94\u7528\u4e0d\u91c7\u7528\u5916\u90e8\u5e93\u7684\u53ef\u80fd\u5fae\u4e4e\u5176\u5fae\u3002\u5f53\u5728\u4f60\u7684\u9879\u76ee\u4e2d\uff0c\u51fa\u73b0\u4e24\u4e2a\u6216\u66f4\u591a\u4f9d\u8d56\u6027\u51b2\u7a81\u65f6\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f virtualenv \u62ef\u6551\u4e16\u754c\uff01virtualenv \u4e3a\u6bcf\u4e2a\u4e0d\u540c\u9879\u76ee\u63d0\u4f9b\u4e00\u4efd Python \u5b89\u88c5\u3002\u5b83\u5e76\u6ca1\u6709\u771f\u6b63\u5b89\u88c5\u591a\u4e2a Python \u526f\u672c\uff0c\u4f46\u662f\u5b83\u786e\u5b9e\u63d0\u4f9b\u4e86\u4e00\u79cd\u5de7\u5999\u7684\u65b9\u5f0f\u6765\u8ba9\u5404\u9879\u76ee\u73af\u5883\u4fdd\u6301\u72ec\u7acb\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b virtualenv \u662f\u600e\u4e48\u5de5\u4f5c\u7684\u3002 \u5982\u679c\u4f60\u5728 Mac OS X \u6216 Linux \u4e0b\uff0c\u4e0b\u9762\u4e24\u6761\u547d\u4ee4\u53ef\u80fd\u4f1a\u9002\u7528: $ sudo easy_install virtualenv $ sudo pip install virtualenv \u4e0a\u8ff0\u7684\u547d\u4ee4\u4f1a\u5728\u4f60\u7684\u7cfb\u7edf\u4e2d\u5b89\u88c5 virtualenv\u3002\u5b83\u751a\u81f3\u53ef\u80fd\u4f1a\u5b58\u5728\u4e8e\u5305\u7ba1\u7406\u5668\u4e2d\u3002 virtualenv \u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u4f60\u53ef\u4ee5\u7acb\u5373\u6253\u5f00 shell \u7136\u540e\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u73af\u5883\u3002\u6211\u901a\u5e38\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u5176\u4e0b\u521b\u5efa\u4e00\u4e2a venv \u6587\u4ef6\u5939 $ mkdir myproject $ cd myproject $ virtualenv venv New python executable in venv/bin/python Installing distribute............done. \u73b0\u5728\uff0c\u65e0\u8bba\u4f55\u65f6\u4f60\u60f3\u5728\u67d0\u4e2a\u9879\u76ee\u4e0a\u5de5\u4f5c\uff0c\u53ea\u9700\u8981\u6fc0\u6d3b\u76f8\u5e94\u7684\u73af\u5883\u3002\u5728 OS X \u548c Linux \u4e0a\uff0c\u6267\u884c\u5982\u4e0b\u64cd\u4f5c: $ . venv/bin/activate \u65e0\u8bba\u901a\u8fc7\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u73b0\u5728\u5e94\u8be5\u5df2\u7ecf\u6fc0\u6d3b\u4e86 virtualenv\uff08\u6ce8\u610f\u4f60\u7684 shell \u63d0\u793a\u7b26\u663e\u793a\u7684\u662f\u5f53\u524d\u6d3b\u52a8\u7684\u73af\u5883\uff09\u3002 \u73b0\u5728\u4f60\u53ea\u9700\u8981\u952e\u5165\u4ee5\u4e0b\u7684\u547d\u4ee4\u6765\u6fc0\u6d3b virtualenv \u4e2d\u7684 Flask: $ pip install Flask \u51e0\u79d2\u949f\u540e\uff0c\u4e00\u5207\u90fd\u641e\u5b9a\u4e86\u3002","title":"\u5b89\u88c5\u65b9\u6cd5\u4e00\uff1avirtualenv(\u865a\u62df\u73af\u5883\u5b89\u88c5)"},{"location":"05-flask/readme-zh/#_2","text":"\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u867d\u7136\u6211\u4e0d\u63a8\u8350\u3002\u53ea\u9700\u8981\u4ee5 root \u6743\u9650\u8fd0\u884c pip\u3002\u73b0\u5728\u4ee5\u8fd9\u79cd\u6a21\u5f0f\u5b89\u88c5 flask\u3002 $ sudo pip install Flask","title":"\u5b89\u88c5\u65b9\u6cd5\u4e8c\uff1a\u5168\u5c40\u5b89\u88c5"},{"location":"05-flask/readme-zh/#_3","text":"\u4e00\u4e2a\u6700\u5c0f\u7684 Flask \u5e94\u7528\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837: from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return 'Hello World!' if __name__ == '__main__' : app . run () \u628a\u5b83\u4fdd\u5b58\u4e3a hello.py \uff08\u6216\u662f\u7c7b\u4f3c\u7684\uff09\uff0c\u7136\u540e\u7528 Python \u89e3\u91ca\u5668\u6765\u8fd0\u884c\u3002 \u786e\u4fdd\u4f60\u7684\u5e94\u7528\u6587\u4ef6\u540d\u4e0d\u662f flask.py \uff0c\u56e0\u4e3a\u8fd9\u5c06\u4e0e Flask \u672c\u8eab\u51b2\u7a81\u3002 python hello.py * Running on http://127.0.0.1:5000/ \u73b0\u5728\u8bbf\u95ee http://127.0.0.1:5000/ \uff0c\u4f60\u4f1a\u770b\u89c1 Hello World \u95ee\u5019\u3002\u6b32\u5173\u95ed\u670d\u52a1\u5668\uff0c\u6309 Ctrl+C\u3002 \u90a3\u4e48\uff0c\u8fd9\u6bb5\u4ee3\u7801\u505a\u4e86\u4ec0\u4e48\uff1f \u9996\u5148\uff0c\u6211\u4eec\u5bfc\u5165\u4e86 Flask \u7c7b\u3002\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5c06\u4f1a\u662f\u6211\u4eec\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u8be5\u7c7b\u7684\u5b9e\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5e94\u7528\u6a21\u5757\u6216\u8005\u5305\u7684\u540d\u79f0\u3002 \u5982\u679c\u4f60\u4f7f\u7528\u5355\u4e00\u7684\u6a21\u5757\uff08\u5982\u672c\u4f8b\uff09\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 name \uff0c\u56e0\u4e3a\u6a21\u5757\u7684\u540d\u79f0\u5c06\u4f1a\u56e0\u5176\u4f5c\u4e3a\u5355\u72ec\u5e94\u7528\u542f\u52a8\u8fd8\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u800c\u6709\u4e0d\u540c\uff08 \u4e5f\u5373\u662f '__main__' \u6216\u5b9e\u9645\u7684\u5bfc\u5165\u540d\uff09\u3002\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u8fd9\u6837 Flask \u624d\u77e5\u9053\u5230\u54ea\u53bb\u627e\u6a21\u677f\u3001\u9759\u6001\u6587\u4ef6\u7b49\u7b49\u3002\u8be6\u60c5\u89c1 Flask \u7684\u6587\u6863\u3002 \u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 route() \u88c5\u9970\u5668\u544a\u8bc9 Flask \u4ec0\u4e48\u6837\u7684URL \u80fd\u89e6\u53d1\u6211\u4eec\u7684\u51fd\u6570\u3002 \u8fd9\u4e2a\u51fd\u6570\u7684\u540d\u5b57\u4e5f\u5728\u751f\u6210 URL \u65f6\u88ab\u7279\u5b9a\u7684\u51fd\u6570\u91c7\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u6211\u4eec\u60f3\u8981\u663e\u793a\u5728\u7528\u6237\u6d4f\u89c8\u5668\u4e2d\u7684\u4fe1\u606f\u3002 \u6700\u540e\u6211\u4eec\u7528 run() \u51fd\u6570\u6765\u8ba9\u5e94\u7528\u8fd0\u884c\u5728\u672c\u5730\u670d\u52a1\u5668\u4e0a\u3002 \u5176\u4e2d if __name__ =='__main__': \u786e\u4fdd\u670d\u52a1\u5668\u53ea\u4f1a\u5728\u8be5\u811a\u672c\u88ab Python \u89e3\u91ca\u5668\u76f4\u63a5\u6267\u884c\u7684\u65f6\u5019\u624d\u4f1a\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u7684\u65f6\u5019\u3002 \u5916\u90e8\u53ef\u8bbf\u95ee\u7684\u670d\u52a1\u5668 \u5982\u679c\u4f60\u8fd0\u884c\u4e86\u8fd9\u4e2a\u670d\u52a1\u5668\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u53ea\u80fd\u4ece\u4f60\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u8bbf\u95ee\uff0c\u7f51\u7edc\u4e2d\u5176\u5b83\u4efb\u4f55\u7684\u5730\u65b9\u90fd\u4e0d\u80fd\u8bbf\u95ee\u3002\u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4f60\u7684\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u4efb\u610f Python \u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u884c\u4e3a\u662f\u9ed8\u8ba4\u7684\u3002 \u5982\u679c\u4f60\u7981\u7528\u4e86 debug \u6216\u4fe1\u4efb\u4f60\u6240\u5728\u7f51\u7edc\u7684\u7528\u6237\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u4fee\u6539\u8c03\u7528 run() \u7684\u65b9\u6cd5\u4f7f\u4f60\u7684\u670d\u52a1\u5668\u516c\u5f00\u53ef\u7528\uff0c\u5982\u4e0b: app.run(host='0.0.0.0') \u8fd9\u4f1a\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u76d1\u542c\u6240\u6709\u516c\u7f51 IP\u3002","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"05-flask/readme-zh/#_4","text":"\u867d\u7136 run() \u65b9\u6cd5\u9002\u7528\u4e8e\u542f\u52a8\u672c\u5730\u7684\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u4f46\u662f\u4f60\u6bcf\u6b21\u4fee\u6539\u4ee3\u7801\u540e\u90fd\u8981\u624b\u52a8\u91cd\u542f\u5b83\u3002\u8fd9\u6837\u5e76\u4e0d\u591f\u4f18\u96c5\uff0c\u800c\u4e14 Flask \u53ef\u4ee5\u505a\u5230\u66f4\u597d\u3002\u5982\u679c\u4f60\u542f\u7528\u4e86\u8c03\u8bd5\u652f\u6301\uff0c\u670d\u52a1\u5668\u4f1a\u5728\u4ee3\u7801\u4fee\u6539\u540e\u81ea\u52a8\u91cd\u65b0\u8f7d\u5165\uff0c\u5e76\u5728\u53d1\u751f\u9519\u8bef\u65f6\u63d0\u4f9b\u4e00\u4e2a\u76f8\u5f53\u6709\u7528\u7684\u8c03\u8bd5\u5668\u3002 \u6709\u4e24\u79cd\u9014\u5f84\u6765\u542f\u7528\u8c03\u8bd5\u6a21\u5f0f\u3002\u4e00\u79cd\u662f\u76f4\u63a5\u5728\u5e94\u7528\u5bf9\u8c61\u4e0a\u8bbe\u7f6e: app . debug = True app . run () \u53e6\u4e00\u79cd\u662f\u4f5c\u4e3a run \u65b9\u6cd5\u7684\u4e00\u4e2a\u53c2\u6570\u4f20\u5165: app.run(debug=True) \u4e24\u79cd\u65b9\u6cd5\u7684\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002 \u6ce8\u610f \u5c3d\u7ba1\u4ea4\u4e92\u5f0f\u8c03\u8bd5\u5668\u5728\u5141\u8bb8 fork \u7684\u73af\u5883\u4e2d\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\uff08\u4e5f\u5373\u5728\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\u6b63\u5e38\u4f7f\u7528\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff09\uff0c\u4f46\u5b83\u4f9d\u7136\u5141\u8bb8\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002\u8fd9\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u5de8\u5927\u7684\u5b89\u5168\u9690\u60a3\uff0c\u56e0\u6b64\u5b83 \u7edd\u5bf9\u4e0d\u80fd\u7528\u4e8e\u751f\u4ea7\u73af\u5883 \u3002","title":"\u8c03\u8bd5\u6a21\u5f0f"},{"location":"05-flask/readme-zh/#_5","text":"\u73b0\u4ee3 Web \u5e94\u7528\u7684 URL \u5341\u5206\u4f18\u96c5\uff0c\u6613\u4e8e\u4eba\u4eec\u8fa8\u8bc6\u8bb0\u5fc6\uff0c\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u90a3\u4e9b\u9762\u5411\u4f7f\u7528\u4f4e\u901f\u7f51\u7edc\u8fde\u63a5\u79fb\u52a8\u8bbe\u5907\u8bbf\u95ee\u7684\u5e94\u7528\u7279\u522b\u6709\u7528\u3002\u5982\u679c\u53ef\u4ee5\u4e0d\u8bbf\u95ee\u7d22\u5f15\u9875\uff0c\u800c\u662f\u76f4\u63a5\u8bbf\u95ee\u60f3\u8981\u7684\u90a3\u4e2a\u9875\u9762\uff0c\u4ed6\u4eec\u591a\u534a\u4f1a\u7b11\u9010\u989c\u5f00\u800c\u518d\u5ea6\u5149\u987e\u3002 \u5982\u4e0a\u6240\u89c1\uff0c route() \u88c5\u9970\u5668\u628a\u4e00\u4e2a\u51fd\u6570\u7ed1\u5b9a\u5230\u5bf9\u5e94\u7684 URL \u4e0a\u3002\u4f46\u662f\uff0c\u4e0d\u4ec5\u5982\u6b64\uff01\u4f60\u53ef\u4ee5\u6784\u9020\u542b\u6709\u52a8\u6001\u90e8\u5206\u7684 URL\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e00\u4e2a\u51fd\u6570\u4e0a\u9644\u7740\u591a\u4e2a\u89c4\u5219\u3002 \u8fd9\u91cc\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u4f8b\u5b50: @app . route ( '/' ) def index (): return 'Index Page' @app . route ( '/hello' ) def hello (): return 'Hello World'","title":"\u8def\u7531"},{"location":"05-flask/readme-zh/#url","text":"\u8981\u7ed9 URL \u6dfb\u52a0\u53d8\u91cf\u90e8\u5206\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u7279\u6b8a\u7684\u5b57\u6bb5\u6807\u8bb0\u4e3a <variable_name> \uff0c \u8fd9\u4e2a\u90e8\u5206\u5c06\u4f1a\u4f5c\u4e3a\u547d\u540d\u53c2\u6570\u4f20\u9012\u5230\u4f60\u7684\u51fd\u6570\u3002\u89c4\u5219\u53ef\u4ee5\u7528 <converter:variable_name> \u6307\u5b9a\u4e00\u4e2a\u53ef\u9009\u7684\u8f6c\u6362\u5668\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4e0d\u9519\u7684\u4f8b\u5b50: @app . route ( '/user/<username>' ) def show_user_profile ( username ): # show the user profile for that user return 'User %s ' % username @app . route ( '/post/<int:post_id>' ) def show_post ( post_id ): # show the post with the given id, the id is an integer return 'Post %d ' % post_id \u8f6c\u6362\u5668\u6709\u4e0b\u9762\u51e0\u79cd\uff1a int \u63a5\u53d7\u6574\u6570 float \u540c int \uff0c\u4f46\u662f\u63a5\u53d7\u6d6e\u70b9\u6570 path \u548c\u9ed8\u8ba4\u7684\u76f8\u4f3c\uff0c\u4f46\u4e5f\u63a5\u53d7\u659c\u7ebf","title":"URL\u4f20\u53c2"},{"location":"05-flask/readme-zh/#url_1","text":"Flask \u7684 URL \u89c4\u5219\u57fa\u4e8e Werkzeug \u7684\u8def\u7531\u6a21\u5757\u3002\u8fd9\u4e2a\u6a21\u5757\u80cc\u540e\u7684\u601d\u60f3\u662f\u57fa\u4e8e Apache \u4ee5\u53ca\u66f4\u65e9\u7684 HTTP \u670d\u52a1\u5668\u4e3b\u5f20\u7684\u5148\u4f8b\uff0c\u4fdd\u8bc1\u4f18\u96c5\u4e14\u552f\u4e00\u7684 URL\u3002 \u4ee5\u8fd9\u4e24\u4e2a\u89c4\u5219\u4e3a\u4f8b: @app . route ( '/projects/' ) def projects (): return 'The project page' @app . route ( '/about' ) def about (): return 'The about page' \u867d\u7136\u5b83\u4eec\u770b\u8d77\u6765\u7740\u5b9e\u76f8\u4f3c\uff0c\u4f46\u5b83\u4eec\u7ed3\u5c3e\u659c\u7ebf\u7684\u4f7f\u7528\u5728 URL \u5b9a\u4e49 \u4e2d\u4e0d\u540c\u3002 \u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d\uff0c\u6307\u5411 projects \u7684\u89c4\u8303 URL \u5c3e\u7aef\u6709\u4e00\u4e2a\u659c\u7ebf\u3002\u8fd9\u79cd\u611f\u89c9\u5f88\u50cf\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u5939\u3002\u8bbf\u95ee\u4e00\u4e2a\u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u88ab Flask \u91cd\u5b9a\u5411\u5230\u5e26\u659c\u7ebf\u7684\u89c4\u8303 URL \u53bb\u3002 \u7136\u800c\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684 URL \u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\uff0c\u7c7b\u4f3c UNIX-like \u7cfb\u7edf\u4e0b\u7684\u6587\u4ef6\u7684\u8def\u5f84\u540d\u3002\u8bbf\u95ee\u7ed3\u5c3e\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u4ea7\u751f\u4e00\u4e2a 404 \u201cNot Found\u201d \u9519\u8bef\u3002 \u8fd9\u4e2a\u884c\u4e3a\u4f7f\u5f97\u5728\u9057\u5fd8\u5c3e\u659c\u7ebf\u65f6\uff0c\u5141\u8bb8\u5173\u8054\u7684 URL \u63a5\u4efb\u5de5\u4f5c\uff0c\u4e0e Apache \u548c\u5176\u5b83\u7684\u670d\u52a1\u5668\u7684\u884c\u4e3a\u5e76\u65e0\u4e8c\u5f02\u3002\u6b64\u5916\uff0c\u4e5f\u4fdd\u8bc1\u4e86 URL \u7684\u552f\u4e00\uff0c\u6709\u52a9\u4e8e\u907f\u514d\u641c\u7d22\u5f15\u64ce\u7d22\u5f15\u540c\u4e00\u4e2a\u9875\u9762\u4e24\u6b21\u3002","title":"\u552f\u4e00 URL / \u91cd\u5b9a\u5411\u884c\u4e3a"},{"location":"05-flask/readme-zh/#url_2","text":"\u5982\u679c Flask \u80fd\u5339\u914d URL\uff0c\u90a3\u4e48 Flask \u53ef\u4ee5\u751f\u6210\u5b83\u4eec\u5417\uff1f\u5f53\u7136\u53ef\u4ee5\u3002\u4f60\u53ef\u4ee5\u7528 url_for() \u6765\u7ed9\u6307\u5b9a\u7684\u51fd\u6570\u6784\u9020 URL\u3002\u5b83\u63a5\u53d7\u51fd\u6570\u540d\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4e5f\u63a5\u53d7\u5bf9\u5e94 URL \u89c4\u5219\u7684\u53d8\u91cf\u90e8\u5206\u7684\u547d\u540d\u53c2\u6570\u3002\u672a\u77e5\u53d8\u91cf\u90e8\u5206\u4f1a\u6dfb\u52a0\u5230 URL \u672b\u5c3e\u4f5c\u4e3a\u67e5\u8be2\u53c2\u6570\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: >>> from flask import Flask , url_for >>> app = Flask ( __name__ ) >>> @app . route ( '/' ) ... def index (): pass ... >>> @app . route ( '/login' ) ... def login (): pass ... >>> @app . route ( '/user/<username>' ) ... def profile ( username ): pass ... >>> with app . test_request_context (): ... print url_for ( 'index' ) ... print url_for ( 'login' ) ... print url_for ( 'login' , next = '/' ) ... print url_for ( 'profile' , username = 'John Doe' ) ... / / login / login ? next =/ / user / John % 20 Doe \uff08\u8fd9\u91cc\u4e5f\u7528\u5230\u4e86 test_request_context() \u65b9\u6cd5\uff0c\u4e0b\u9762\u4f1a\u89e3\u91ca\u3002\u5373\u4f7f\u6211\u4eec\u6b63\u5728\u901a\u8fc7 Python \u7684 shell \u8fdb\u884c\u4ea4\u4e92\uff0c\u5b83\u4f9d\u7136\u4f1a\u544a\u8bc9 Flask \u8981\u8868\u73b0\u4e3a\u6b63\u5728\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u89e3\u91ca\u3002 \u73af\u5883\u5c40\u90e8\u53d8\u91cf \uff09 \u4e3a\u4ec0\u4e48\u4f60\u8981\u6784\u5efa URL \u800c\u975e\u5728\u6a21\u677f\u4e2d\u786c\u7f16\u7801\uff1f\u8fd9\u91cc\u6709\u4e09\u4e2a\u7edd\u5999\u7684\u7406\u7531\uff1a \u53cd\u5411\u6784\u5efa\u901a\u5e38\u6bd4\u786c\u7f16\u7801\u7684\u63cf\u8ff0\u6027\u66f4\u597d\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5141\u8bb8\u4f60\u4e00\u6b21\u6027\u4fee\u6539 URL\uff0c \u800c\u4e0d\u662f\u5230\u5904\u8fb9\u627e\u8fb9\u6539\u3002 URL \u6784\u5efa\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\u548c Unicode \u6570\u636e\uff0c\u514d\u53bb\u4f60\u5f88\u591a\u9ebb\u70e6\u3002 \u5982\u679c\u4f60\u7684\u5e94\u7528\u4e0d\u4f4d\u4e8e URL \u7684\u6839\u8def\u5f84\uff08\u6bd4\u5982\uff0c\u5728 /myapplication \u4e0b\uff0c\u800c\u4e0d\u662f / \uff09\uff0c url_for() \u4f1a\u59a5\u5584\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002","title":"\u6784\u9020 URL"},{"location":"05-flask/readme-zh/#http","text":"HTTP \uff08\u4e0e Web \u5e94\u7528\u4f1a\u8bdd\u7684\u534f\u8bae\uff09\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u8bbf\u95ee URL \u65b9\u6cd5\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8def\u7531\u53ea\u56de\u5e94 GET \u8bf7\u6c42\uff0c\u4f46\u662f\u901a\u8fc7 route() \u88c5\u9970\u5668\u4f20\u9012 methods \u53c2\u6570\u53ef\u4ee5\u6539\u53d8\u8fd9\u4e2a\u884c\u4e3a\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : do_the_login () else : show_the_login_form () \u5982\u679c\u5b58\u5728 GET \uff0c\u90a3\u4e48\u4e5f\u4f1a\u66ff\u4f60\u81ea\u52a8\u5730\u6dfb\u52a0 HEAD\uff0c\u65e0\u9700\u5e72\u9884\u3002\u5b83\u4f1a\u786e\u4fdd\u9075\u7167 HTTP RFC \uff08\u63cf\u8ff0 HTTP \u534f\u8bae\u7684\u6587\u6863\uff09\u5904\u7406 HEAD \u8bf7\u6c42\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5b8c\u5168\u5ffd\u7565\u8fd9\u90e8\u5206\u7684 HTTP \u89c4\u8303\u3002\u540c\u6837\uff0c\u81ea\u4ece Flask 0.6 \u8d77\uff0c \u4e5f\u5b9e\u73b0\u4e86 OPTIONS \u7684\u81ea\u52a8\u5904\u7406\u3002 \u4f60\u4e0d\u77e5\u9053\u4e00\u4e2a HTTP \u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u8fd9\u91cc\u4f1a\u7b80\u8981\u4ecb\u7ecd HTTP \u65b9\u6cd5\u548c\u5b83\u4eec\u4e3a\u4ec0\u4e48\u91cd\u8981\uff1a HTTP \u65b9\u6cd5\uff08\u4e5f\u7ecf\u5e38\u88ab\u53eb\u505a\u201c\u8c13\u8bcd\u201d\uff09\u544a\u77e5\u670d\u52a1\u5668\uff0c\u5ba2\u6237\u7aef\u60f3\u5bf9\u8bf7\u6c42\u7684\u9875\u9762 \u505a \u4e9b\u4ec0\u4e48\u3002\u4e0b\u9762\u7684\u90fd\u662f\u975e\u5e38\u5e38\u89c1\u7684\u65b9\u6cd5\uff1a GET\uff1a\u6d4f\u89c8\u5668\u544a\u77e5\u670d\u52a1\u5668\uff1a\u53ea \u83b7\u53d6 \u9875\u9762\u4e0a\u7684\u4fe1\u606f\u5e76\u53d1\u7ed9\u6211\u3002\u8fd9\u662f\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u3002 HEAD\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u6b32\u83b7\u53d6\u4fe1\u606f\uff0c\u4f46\u662f\u53ea\u5173\u5fc3 \u6d88\u606f\u5934 \u3002\u5e94\u7528\u5e94\u50cf\u5904\u7406 GET \u8bf7\u6c42\u4e00\u6837\u6765\u5904\u7406\u5b83\uff0c\u4f46\u662f\u4e0d\u5206\u53d1\u5b9e\u9645\u5185\u5bb9\u3002\u5728 Flask \u4e2d\u4f60\u5b8c\u5168\u65e0\u9700 \u4eba\u5de5 \u5e72\u9884\uff0c\u5e95\u5c42\u7684 Werkzeug \u5e93\u5df2\u7ecf\u66ff\u4f60\u6253\u70b9\u597d\u4e86\u3002 POST\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u60f3\u5728 URL \u4e0a \u53d1\u5e03 \u65b0\u4fe1\u606f\u3002\u5e76\u4e14\uff0c\u670d\u52a1\u5668\u5fc5\u987b\u786e\u4fdd \u6570\u636e\u5df2\u5b58\u50a8\u4e14\u4ec5\u5b58\u50a8\u4e00\u6b21\u3002\u8fd9\u662f HTML \u8868\u5355\u901a\u5e38\u53d1\u9001\u6570\u636e\u5230\u670d\u52a1\u5668\u7684\u65b9\u6cd5\u3002 PUT\uff1a\u7c7b\u4f3c POST \u4f46\u662f\u670d\u52a1\u5668\u53ef\u80fd\u89e6\u53d1\u4e86\u5b58\u50a8\u8fc7\u7a0b\u591a\u6b21\uff0c\u591a\u6b21\u8986\u76d6\u6389\u65e7\u503c\u3002\u4f60\u53ef \u80fd\u4f1a\u95ee\u8fd9\u6709\u4ec0\u4e48\u7528\uff0c\u5f53\u7136\u8fd9\u662f\u6709\u539f\u56e0\u7684\u3002\u8003\u8651\u5230\u4f20\u8f93\u4e2d\u8fde\u63a5\u53ef\u80fd\u4f1a\u4e22\u5931\uff0c\u5728 \u8fd9\u79cd \u60c5\u51b5\u4e0b\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u7cfb\u7edf\u53ef\u80fd\u5b89\u5168\u5730\u7b2c\u4e8c\u6b21\u63a5\u6536\u8bf7\u6c42\uff0c\u800c \u4e0d\u7834\u574f\u5176\u5b83\u4e1c\u897f\u3002\u56e0\u4e3a POST\u5b83\u53ea\u89e6\u53d1\u4e00\u6b21\uff0c\u6240\u4ee5\u7528 POST \u662f\u4e0d\u53ef\u80fd\u7684\u3002 DELETE\uff1a\u5220\u9664\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002 OPTIONS\uff1a\u7ed9\u5ba2\u6237\u7aef\u63d0\u4f9b\u4e00\u4e2a\u654f\u6377\u7684\u9014\u5f84\u6765\u5f04\u6e05\u8fd9\u4e2a URL \u652f\u6301\u54ea\u4e9b HTTP \u65b9\u6cd5\u3002 \u4ece Flask 0.6 \u5f00\u59cb\uff0c\u5b9e\u73b0\u4e86\u81ea\u52a8\u5904\u7406\u3002.","title":"HTTP \u65b9\u6cd5"},{"location":"05-flask/readme-zh/#_6","text":"\u52a8\u6001 web \u5e94\u7528\u4e5f\u4f1a\u9700\u8981\u9759\u6001\u6587\u4ef6\uff0c\u901a\u5e38\u662f CSS \u548c JavaScript \u6587\u4ef6\u3002\u7406\u60f3\u72b6\u51b5\u4e0b\uff0c \u4f60\u5df2\u7ecf\u914d\u7f6e\u597d Web \u670d\u52a1\u5668\u6765\u63d0\u4f9b\u9759\u6001\u6587\u4ef6\uff0c\u4f46\u662f\u5728\u5f00\u53d1\u4e2d\uff0cFlask \u4e5f\u53ef\u4ee5\u505a\u5230\u3002 \u53ea\u8981\u5728\u4f60\u7684\u5305\u4e2d\u6216\u662f\u6a21\u5757\u7684\u6240\u5728\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a static \u7684\u6587\u4ef6\u5939\uff0c\u5728\u5e94\u7528\u4e2d\u4f7f\u7528 /static \u5373\u53ef\u8bbf\u95ee\u3002 \u7ed9\u9759\u6001\u6587\u4ef6\u751f\u6210 URL \uff0c\u4f7f\u7528\u7279\u6b8a\u7684 'static' \u7aef\u70b9\u540d: ```python url_for('static', filename='style.css') \u8fd9\u4e2a\u6587\u4ef6\u5e94\u8be5\u5b58\u50a8\u5728\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684 `static/style.css` \u3002 ## \u6a21\u677f\u6e32\u67d3 \u7528 Python \u751f\u6210 HTML \u5341\u5206\u65e0\u8da3\uff0c\u800c\u4e14\u76f8\u5f53\u7e41\u7410\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u624b\u52a8\u5bf9 HTML \u505a\u8f6c\u4e49\u6765\u4fdd\u8bc1\u5e94\u7528\u7684\u5b89\u5168\u3002\u4e3a\u6b64\uff0cFlask \u914d\u5907\u4e86 [Jinja2](http://jinja.pocoo.org/) \u6a21\u677f\u5f15\u64ce\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 [`render_template()`](http://docs.jinkan.org/docs/flask/api.html#flask.render_template) \u65b9\u6cd5\u6765\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9700\u8981\u505a\u7684\u4e00\u5207\u5c31\u662f\u5c06\u6a21\u677f\u540d\u548c\u4f60\u60f3\u4f5c\u4e3a\u5173\u952e\u5b57\u7684\u53c2\u6570\u4f20\u5165\u6a21\u677f\u7684\u53d8\u91cf\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c55\u793a\u5982\u4f55\u6e32\u67d3\u6a21\u677f\u7684\u7b80\u4f8b: ```python from flask import render_template @app.route('/hello/') @app.route('/hello/<name>') def hello(name=None): return render_template('hello.html', name=name) Flask \u4f1a\u5728 templates \u6587\u4ef6\u5939\u91cc\u5bfb\u627e\u6a21\u677f\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u662f\u4e2a\u6a21\u5757\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u5e94\u8be5\u4e0e\u6a21\u5757\u540c\u7ea7\uff1b\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u5305\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5939\u4f5c\u4e3a\u5305\u7684\u5b50\u76ee\u5f55: \u60c5\u51b5 1 : \u6a21\u5757: /application.py /templates /hello.html \u60c5\u51b5 2 : \u5305: /application /__init__.py /templates /hello.html \u5173\u4e8e\u6a21\u677f\uff0c\u4f60\u53ef\u4ee5\u53d1\u6325 Jinja2 \u6a21\u677f\u7684\u5168\u90e8\u5b9e\u4f8b\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u89c1 Jinja2 \u6a21\u677f\u6587\u6863 \u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u6a21\u677f\u5b9e\u4f8b\uff1a <!doctype html> < title > Hello from Flask </ title > {% if name %} < h1 > Hello {{ name }}! </ h1 > {% else %} < h1 > Hello World! </ h1 > {% endif %} \u5728\u6a21\u677f\u91cc\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8bbf\u95ee request \u3001 session \u548c g [ 1] \u5bf9\u8c61\uff0c \u4ee5\u53ca get_flashed_messages() \u51fd\u6570\u3002 \u6a21\u677f\u7ee7\u627f\u8ba9\u6a21\u677f\u7528\u8d77\u6765\u76f8\u5f53\u987a\u624b\u3002\u5982\u6b32\u4e86\u89e3\u7ee7\u627f\u7684\u5de5\u4f5c\u673a\u7406\uff0c\u8bf7\u8df3\u8f6c\u5230 \u6a21\u677f\u7ee7\u627f \u6a21\u5f0f\u7684\u6587\u6863\u3002\u6700\u8d77\u7801\uff0c\u6a21\u677f\u7ee7\u627f\u80fd\u4f7f\u7279\u5b9a\u5143\u7d20 \uff08\u6bd4\u5982\u9875\u7709\u3001\u5bfc\u822a\u680f\u548c\u9875\u811a\uff09\u53ef\u4ee5\u51fa\u73b0\u5728\u6240\u6709\u7684\u9875\u9762\u3002 \u81ea\u52a8\u8f6c\u4e49\u529f\u80fd\u9ed8\u8ba4\u662f\u5f00\u542f\u7684\uff0c\u6240\u4ee5\u5982\u679c name \u5305\u542b HTML \uff0c\u5b83\u5c06\u4f1a\u88ab\u81ea\u52a8\u8f6c\u4e49\u3002\u5982\u679c\u4f60\u80fd\u4fe1\u4efb\u4e00\u4e2a\u53d8\u91cf\uff0c\u5e76\u4e14\u4f60\u77e5\u9053\u5b83\u662f\u5b89\u5168\u7684\uff08\u4f8b\u5982\u4e00\u4e2a\u6a21\u5757\u628a Wiki \u6807\u8bb0\u8f6c\u6362\u4e3a HTML\uff09\uff0c\u4f60\u53ef\u4ee5\u7528 Markup \u7c7b\u6216 |safe \u8fc7\u6ee4\u5668\u5728\u6a21\u677f\u4e2d\u628a\u5b83\u6807\u8bb0\u4e3a\u5b89\u5168\u7684\u3002\u5728 Jinja 2 \u6587\u6863\u4e2d\uff0c\u4f60\u4f1a\u770b\u5230\u66f4\u591a\u7684\u4f8b\u5b50\u3002 \u8fd9\u91cc\u662f\u4e00\u4e2a Markup \u7c7b\u5982\u4f55\u4f7f\u7528\u7684\u7b80\u5355\u4ecb\u7ecd: >>> from flask import Markup >>> Markup ( '<strong>Hello %s !</strong>' ) % '<blink>hacker</blink>' Markup ( u '<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>' ) >>> Markup . escape ( '<blink>hacker</blink>' ) Markup ( u '&lt;blink&gt;hacker&lt;/blink&gt;' ) >>> Markup ( '<em>Marked up</em> &raquo; HTML' ) . striptags () u 'Marked up \\xbb HTML' \u5728 0.5 \u7248\u66f4\u6539: \u81ea\u52a8\u8f6c\u4e49\u4e0d\u518d\u5728\u6240\u6709\u6a21\u677f\u4e2d\u542f\u7528\u3002\u4e0b\u5217\u6269\u5c55\u540d\u7684\u6a21\u677f\u4f1a\u89e6\u53d1\u81ea\u52a8\u8f6c\u4e49\uff1a .html \u3001 .htm \u3001 .xml \u3001 .xhtml \u3002\u4ece\u5b57\u7b26\u4e32\u52a0\u8f7d\u7684\u6a21\u677f\u4f1a\u7981\u7528\u81ea\u52a8\u8f6c\u4e49\u3002 [ 1] \u4e0d\u786e\u5b9a g \u5bf9\u8c61\u662f\u4ec0\u4e48\uff1f\u5b83\u5141\u8bb8\u4f60\u6309\u9700\u5b58\u50a8\u4fe1\u606f\uff0c \u67e5\u770b\uff08 g \uff09\u5bf9\u8c61\u7684\u6587\u6863\u548c \u5728 Flask \u4e2d\u4f7f\u7528 SQLite 3 \u7684\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002","title":"\u9759\u6001\u6587\u4ef6"},{"location":"05-flask/readme-zh/#_7","text":"\u5bf9\u4e8e Web \u5e94\u7528\uff0c\u4e0e\u5ba2\u6237\u7aef\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u7684\u6570\u636e\u4ea4\u4e92\u81f3\u5173\u91cd\u8981\u3002\u5728 Flask \u4e2d\u7531\u5168\u5c40\u7684 request \u5bf9\u8c61\u6765\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\u5982\u679c\u4f60\u6709\u4e00\u5b9a\u7684 Python \u7ecf\u9a8c\uff0c\u4f60\u4f1a\u597d\u5947\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u662f\u5168\u5c40\u7684\uff0c\u4e3a\u4ec0\u4e48 Flask \u8fd8\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002\u7b54\u6848\u662f\u73af\u5883\u4f5c\u7528\u57df\uff1a","title":"\u8bbf\u95ee\u8bf7\u6c42\u6570\u636e"},{"location":"05-flask/readme-zh/#_8","text":"\u5185\u5e55 \u5982\u679c\u4f60\u60f3\u7406\u89e3\u5176\u5de5\u4f5c\u673a\u5236\u53ca\u5982\u4f55\u5229\u7528\u73af\u5883\u5c40\u90e8\u53d8\u91cf\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u8bf7\u9605\u8bfb\u6b64\u8282\uff0c\u5426\u5219\u53ef\u8df3\u8fc7\u3002 Flask \u4e2d\u7684\u67d0\u4e9b\u5bf9\u8c61\u662f\u5168\u5c40\u5bf9\u8c61\uff0c\u4f46\u5374\u4e0d\u662f\u901a\u5e38\u7684\u90a3\u79cd\u3002\u8fd9\u4e9b\u5bf9\u8c61\u5b9e\u9645\u4e0a\u662f\u7279\u5b9a\u73af\u5883\u7684\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7406\u3002\u867d\u7136\u5f88\u62d7\u53e3\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f88\u5bb9\u6613\u7406\u89e3\u3002 \u60f3\u8c61\u4e00\u4e0b\u5904\u7406\u7ebf\u7a0b\u7684\u73af\u5883\u3002\u4e00\u4e2a\u8bf7\u6c42\u4f20\u5165\uff0cWeb \u670d\u52a1\u5668\u51b3\u5b9a\u751f\u6210\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff08 \u6216\u8005\u522b\u7684\u4ec0\u4e48\u4e1c\u897f\uff0c\u53ea\u8981\u8fd9\u4e2a\u5e95\u5c42\u7684\u5bf9\u8c61\u53ef\u4ee5\u80dc\u4efb\u5e76\u53d1\u7cfb\u7edf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7ebf\u7a0b\uff09\u3002 \u5f53 Flask \u5f00\u59cb\u5b83\u5185\u90e8\u7684\u8bf7\u6c42\u5904\u7406\u65f6\uff0c\u5b83\u8ba4\u5b9a\u5f53\u524d\u7ebf\u7a0b\u662f\u6d3b\u52a8\u7684\u73af\u5883\uff0c\u5e76\u7ed1\u5b9a\u5f53\u524d\u7684\u5e94\u7528\u548c WSGI \u73af\u5883\u5230\u90a3\u4e2a\u73af\u5883\u4e0a\uff08\u7ebf\u7a0b\uff09\u3002\u5b83\u7684\u5b9e\u73b0\u5f88\u5de7\u5999\uff0c\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u5e94\u7528\u8c03\u7528\u53e6\u4e00\u4e2a\u5e94\u7528\u65f6\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002 \u6240\u4ee5\uff0c\u8fd9\u5bf9\u4f60\u6765\u8bf4\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u9664\u975e\u4f60\u8981\u505a\u7c7b\u4f3c\u5355\u5143\u6d4b\u8bd5\u7684\u4e1c\u897f\uff0c\u5426\u5219\u4f60\u57fa\u672c\u4e0a\u53ef\u4ee5\u5b8c\u5168\u65e0\u89c6\u5b83\u3002\u4f60\u4f1a\u53d1\u73b0\u4f9d\u8d56\u4e8e\u4e00\u6bb5\u8bf7\u6c42\u5bf9\u8c61\u7684\u4ee3\u7801\uff0c\u56e0\u6ca1\u6709\u8bf7\u6c42\u5bf9\u8c61\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u81ea\u884c\u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u5e76\u4e14\u628a\u5b83\u7ed1\u5b9a\u5230\u73af\u5883\u4e2d\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u7528 test_request_context() \u73af\u5883\u7ba1\u7406\u5668\u3002\u7ed3\u5408 with \u58f0\u660e\uff0c\u7ed1\u5b9a\u4e00\u4e2a\u6d4b\u8bd5\u8bf7\u6c42\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u4e0e\u4e4b\u4ea4\u4e92\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50: from flask import request with app . test_request_context ( '/hello' , method = 'POST' ): # now you can do something with the request until the # end of the with block, such as basic assertions: assert request . path == '/hello' assert request . method == 'POST' \u53e6\u4e00\u79cd\u53ef\u80fd\u662f\uff1a\u4f20\u9012\u6574\u4e2a WSGI \u73af\u5883\u7ed9 request_context() \u65b9\u6cd5: from flask import request with app . request_context ( environ ): assert request . method == 'POST'","title":"\u73af\u5883\u5c40\u90e8\u53d8\u91cf"},{"location":"05-flask/readme-zh/#_9","text":"API \u7ae0\u8282\u5bf9\u8bf7\u6c42\u5bf9\u8c61\u4f5c\u4e86\u8be6\u5c3d\u9610\u8ff0\uff08\u53c2\u89c1 request \uff09\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e0d\u4f1a\u8d58\u8ff0\u3002\u6b64\u5904\u5bbd\u6cdb\u4ecb\u7ecd\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u3002\u9996\u5148\u4ece flask \u6a21\u5757\u91cc\u5bfc\u5165\u5b83: from flask import request \u5f53\u524d\u8bf7\u6c42\u7684 HTTP \u65b9\u6cd5\u53ef\u901a\u8fc7 method \u5c5e\u6027\u6765\u8bbf\u95ee\u3002\u901a\u8fc7:attr:~flask.request.form \u5c5e\u6027\u6765\u8bbf\u95ee\u8868\u5355\u6570\u636e\uff08 POST \u6216 PUT \u8bf7\u6c42\u63d0\u4ea4\u7684\u6570\u636e\uff09\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u7528\u5230\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e24\u4e2a\u5c5e\u6027\u7684\u5b8c\u6574\u5b9e\u4f8b: @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): error = None if request . method == 'POST' : if ( request . form [ 'username' ], request . form [ 'password' ]): return log_the_user_in ( request . form [ 'username' ]) else : error = 'Invalid username/password' # the code below is executed if the request method # was GET or the credentials were invalid return render_template ( 'login.html' , error = error ) \u5f53\u8bbf\u95ee form \u5c5e\u6027\u4e2d\u7684\u4e0d\u5b58\u5728\u7684\u952e\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4f1a\u629b\u51fa\u4e00\u4e2a\u7279\u6b8a\u7684 KeyError \u5f02\u5e38\u3002\u4f60\u53ef\u4ee5\u50cf\u6355\u83b7\u6807\u51c6\u7684 KeyError \u4e00\u6837\u6765\u6355\u83b7\u5b83\u3002 \u5982\u679c\u4f60\u4e0d\u8fd9\u4e48\u505a\uff0c\u5b83\u4f1a\u663e\u793a\u4e00\u4e2a HTTP 400 Bad Request \u9519\u8bef\u9875\u9762\u3002\u6240\u4ee5\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\u4f60\u5e76\u4e0d\u9700\u8981\u5e72\u9884\u8fd9\u4e2a\u884c\u4e3a\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7 args \u5c5e\u6027\u6765\u8bbf\u95ee URL \u4e2d\u63d0\u4ea4\u7684\u53c2\u6570 \uff08 ?key=value \uff09: searchword = request . args . get ( 'q' , '' ) \u6211\u4eec\u63a8\u8350\u7528 get \u6765\u8bbf\u95ee URL \u53c2\u6570\u6216\u6355\u83b7 KeyError \uff0c\u56e0\u4e3a\u7528\u6237\u53ef\u80fd\u4f1a\u4fee\u6539 URL\uff0c\u5411\u4ed6\u4eec\u5c55\u73b0\u4e00\u4e2a 400 bad request \u9875\u9762\u4f1a\u5f71\u54cd\u7528\u6237\u4f53\u9a8c\u3002","title":"\u8bf7\u6c42\u5bf9\u8c61"},{"location":"05-flask/readme-zh/#_10","text":"\u7528 Flask \u5904\u7406\u6587\u4ef6\u4e0a\u4f20\u5f88\u7b80\u5355\u3002\u53ea\u8981\u786e\u4fdd\u4f60\u6ca1\u5fd8\u8bb0\u5728 HTML \u8868\u5355\u4e2d\u8bbe\u7f6e enctype=\"multipart/form-data\" \u5c5e\u6027\uff0c\u4e0d\u7136\u4f60\u7684\u6d4f\u89c8\u5668\u6839\u672c\u4e0d\u4f1a\u53d1\u9001\u6587\u4ef6\u3002 \u5df2\u4e0a\u4f20\u7684\u6587\u4ef6\u5b58\u50a8\u5728\u5185\u5b58\u6216\u662f\u6587\u4ef6\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u4e34\u65f6\u7684\u4f4d\u7f6e\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u5bf9\u8c61\u7684 files \u5c5e\u6027\u8bbf\u95ee\u5b83\u4eec\u3002\u6bcf\u4e2a\u4e0a\u4f20\u7684\u6587\u4ef6\u90fd\u4f1a\u5b58\u50a8\u5728\u8fd9\u4e2a\u5b57\u5178\u91cc\u3002\u5b83\u8868\u73b0\u8fd1\u4e4e\u4e3a\u4e00\u4e2a\u6807\u51c6\u7684 Python file \u5bf9\u8c61\uff0c\u4f46\u5b83\u8fd8\u6709\u4e00\u4e2a save() \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8\u4f60\u628a\u6587\u4ef6\u4fdd\u5b58\u5230\u670d\u52a1\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u7528\u5b83\u4fdd\u5b58\u6587\u4ef6\u7684\u4f8b\u5b50: from flask import request @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/uploaded_file.txt' ) ... \u5982\u679c\u4f60\u60f3\u77e5\u9053\u4e0a\u4f20\u524d\u6587\u4ef6\u5728\u5ba2\u6237\u7aef\u7684\u6587\u4ef6\u540d\u662f\u4ec0\u4e48\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee filename \u5c5e\u6027\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c \u6c38\u8fdc\u4e0d\u8981\u4fe1\u4efb\u8fd9\u4e2a\u503c\uff0c\u8fd9\u4e2a\u503c\u662f\u53ef\u4ee5\u4f2a\u9020\u7684\u3002\u5982\u679c\u4f60\u8981\u628a\u6587\u4ef6\u6309\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u6587\u4ef6\u540d\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u90a3\u4e48\u8bf7\u628a\u5b83\u4f20\u9012\u7ed9 Werkzeug \u63d0\u4f9b\u7684 secure_filename() \u51fd\u6570: from flask import request from werkzeug import secure_filename @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/' + secure_filename ( f . filename )) ...","title":"\u6587\u4ef6\u4e0a\u4f20"},{"location":"05-flask/readme-zh/#cookies","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7 cookies \u5c5e\u6027\u6765\u8bbf\u95ee Cookies\uff0c\u7528\u54cd\u5e94\u5bf9\u8c61\u7684 set_cookie \u65b9\u6cd5\u6765\u8bbe\u7f6e Cookies\u3002\u8bf7\u6c42\u5bf9\u8c61\u7684 cookies \u5c5e\u6027\u662f\u4e00\u4e2a\u5185\u5bb9\u4e3a\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u6240\u6709 Cookies \u7684\u5b57\u5178\u3002\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u4f1a\u8bdd\uff0c\u8bf7\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528 Cookies\uff0c\u8bf7\u53c2\u8003 \u4f1a\u8bdd \u4e00\u8282\u3002\u5728 Flask \u4e2d\uff0c\u5df2\u7ecf\u6ce8\u610f\u5904\u7406\u4e86\u4e00\u4e9b Cookies \u5b89\u5168\u7ec6\u8282\u3002 \u8bfb\u53d6 cookies: from flask import request @app . route ( '/' ) def index (): username = request . cookies . get ( 'username' ) # use cookies.get(key) instead of cookies[key] to not get a # KeyError if the cookie is missing. \u5b58\u50a8 cookies: from flask import make_response @app . route ( '/' ) def index (): resp = make_response ( render_template ( ... )) resp . set_cookie ( 'username' , 'the username' ) return resp \u53ef\u6ce8\u610f\u5230\u7684\u662f\uff0cCookies \u662f\u8bbe\u7f6e\u5728\u54cd\u5e94\u5bf9\u8c61\u4e0a\u7684\u3002\u7531\u4e8e\u901a\u5e38\u89c6\u56fe\u51fd\u6570\u53ea\u662f\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u4e4b\u540e Flask \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u4f60\u8981\u663e\u5f0f\u5730\u8f6c\u6362\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u7136\u540e\u518d\u8fdb\u884c\u4fee\u6539\u3002 \u6709\u65f6\u5019\u4f60\u60f3\u8bbe\u7f6e Cookie\uff0c\u4f46\u54cd\u5e94\u5bf9\u8c61\u4e0d\u80fd\u918b\u5728\u3002\u8fd9\u53ef\u4ee5\u5229\u7528 \u5ef6\u8fdf\u8bf7\u6c42\u56de\u8c03 \u6a21\u5f0f\u5b9e\u73b0\u3002 \u4e3a\u6b64\uff0c\u4e5f\u53ef\u4ee5\u9605\u8bfb \u5173\u4e8e\u54cd\u5e94 \u3002","title":"Cookies"},{"location":"05-flask/readme-zh/#_11","text":"\u4f60\u53ef\u4ee5\u7528 redirect() \u51fd\u6570\u628a\u7528\u6237\u91cd\u5b9a\u5411\u5230\u5176\u5b83\u5730\u65b9\u3002\u653e\u5f03\u8bf7\u6c42\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\uff0c\u7528 abort() \u51fd\u6570\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u5b83\u4eec\u5982\u4f55\u4f7f\u7528\u7684\u4f8b\u5b50: from flask import abort , redirect , url_for @app . route ( '/' ) def index (): return redirect ( url_for ( 'login' )) @app . route ( '/login' ) def login (): abort ( 401 ) this_is_never_executed () \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u65e0\u610f\u4e49\u7684\u4f8b\u5b50\u56e0\u4e3a\u7528\u6237\u4f1a\u4ece\u4e3b\u9875\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u4e0d\u80fd\u8bbf\u95ee\u7684\u9875\u9762 \uff08401 \u610f\u5473\u7740\u7981\u6b62\u8bbf\u95ee\uff09\uff0c\u4f46\u662f\u5b83\u5c55\u793a\u4e86\u91cd\u5b9a\u5411\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9519\u8bef\u4ee3\u7801\u4f1a\u663e\u793a\u4e00\u4e2a\u9ed1\u767d\u7684\u9519\u8bef\u9875\u9762\u3002\u5982\u679c\u4f60\u8981\u5b9a\u5236\u9519\u8bef\u9875\u9762\uff0c \u53ef\u4ee5\u4f7f\u7528 errorhandler() \u88c5\u9970\u5668: from flask import render_template @app . errorhandler ( 404 ) def page_not_found ( error ): return render_template ( 'page_not_found.html' ), 404 \u6ce8\u610f render_template() \u8c03\u7528\u4e4b\u540e\u7684 404 \u3002\u8fd9\u544a\u8bc9 Flask\uff0c\u8be5\u9875\u7684\u9519\u8bef\u4ee3\u7801\u662f 404 \uff0c\u5373\u6ca1\u6709\u627e\u5230\u3002\u9ed8\u8ba4\u4e3a 200\uff0c\u4e5f\u5c31\u662f\u4e00\u5207\u6b63\u5e38\u3002","title":"\u91cd\u5b9a\u5411\u548c\u9519\u8bef"},{"location":"05-flask/readme-zh/#_12","text":"\u89c6\u56fe\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u4e3a\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c \u5b83\u88ab\u8f6c\u6362\u4e3a\u8be5\u5b57\u7b26\u4e32\u4e3a\u4e3b\u4f53\u7684\u3001\u72b6\u6001\u7801\u4e3a 200 OK``\u7684 \u3001 MIME \u7c7b\u578b\u662f ``text/html \u7684\u54cd\u5e94\u5bf9\u8c61\u3002Flask \u628a\u8fd4\u56de\u503c\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u7684\u903b\u8f91\u662f\u8fd9\u6837\uff1a \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u5b83\u4f1a\u4ece\u89c6\u56fe\u76f4\u63a5\u8fd4\u56de\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u54cd\u5e94\u5bf9\u8c61\u4f1a\u7528\u5b57\u7b26\u4e32\u6570\u636e\u548c\u9ed8\u8ba4\u53c2\u6570\u521b\u5efa\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u4e14\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u63d0\u4f9b\u989d\u5916\u7684\u4fe1\u606f\u3002\u8fd9\u6837\u7684\u5143\u7ec4\u5fc5\u987b\u662f (response, status, headers) \u7684\u5f62\u5f0f\uff0c\u4e14\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u3002 status \u503c\u4f1a\u8986\u76d6\u72b6\u6001\u4ee3\u7801\uff0c headers \u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u8868\u6216\u5b57\u5178\uff0c\u4f5c\u4e3a\u989d\u5916\u7684\u6d88\u606f\u6807\u5934\u503c\u3002 \u5982\u679c\u4e0a\u8ff0\u6761\u4ef6\u5747\u4e0d\u6ee1\u8db3\uff0c Flask \u4f1a\u5047\u8bbe\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u3002 \u5982\u679c\u4f60\u60f3\u5728\u89c6\u56fe\u91cc\u64cd\u7eb5\u4e0a\u8ff0\u6b65\u9aa4\u7ed3\u679c\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u3002 \u8b6c\u5982\u4f60\u6709\u8fd9\u6837\u4e00\u4e2a\u89c6\u56fe: @app . errorhandler ( 404 ) def not_found ( error ): return render_template ( 'error.html' ), 404 \u4f60\u53ea\u9700\u8981\u628a\u8fd4\u56de\u503c\u8868\u8fbe\u5f0f\u4f20\u9012\u7ed9 make_response() \uff0c\u83b7\u53d6\u7ed3\u679c\u5bf9\u8c61\u5e76\u4fee\u6539\uff0c\u7136\u540e\u518d\u8fd4\u56de\u5b83: @app . errorhandler ( 404 ) def not_found ( error ): resp = make_response ( render_template ( 'error.html' ), 404 ) resp . headers [ 'X-Something' ] = 'A value' return resp","title":"\u5173\u4e8e\u54cd\u5e94"},{"location":"05-flask/readme-zh/#_13","text":"\u9664\u8bf7\u6c42\u5bf9\u8c61\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a session \u5bf9\u8c61\u3002\u5b83\u5141\u8bb8\u4f60\u5728\u4e0d\u540c\u8bf7\u6c42\u95f4\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u7684\u4fe1\u606f\u3002\u5b83\u662f\u5728 Cookies \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u5bf9 Cookies \u8fdb\u884c\u5bc6\u94a5\u7b7e\u540d\u3002\u8fd9\u610f\u5473\u7740\u7528\u6237\u53ef\u4ee5\u67e5\u770b\u4f60 Cookie \u7684\u5185\u5bb9\uff0c\u4f46\u5374\u4e0d\u80fd\u4fee\u6539\u5b83\uff0c\u9664\u975e\u7528\u6237\u77e5\u9053\u7b7e\u540d\u7684\u5bc6\u94a5\u3002 \u8981\u4f7f\u7528\u4f1a\u8bdd\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5bc6\u94a5\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4f1a\u8bdd\u5982\u4f55\u5de5\u4f5c: from flask import Flask , session , redirect , url_for , escape , request app = Flask ( __name__ ) @app . route ( '/' ) def index (): if 'username' in session : return 'Logged in as %s ' % escape ( session [ 'username' ]) return 'You are not logged in' @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : session [ 'username' ] = request . form [ 'username' ] return redirect ( url_for ( 'index' )) return ''' <form action=\"\" method=\"post\"> <p><input type=text name=username> <p><input type=submit value=Login> </form> ''' @app . route ( '/logout' ) def logout (): # remove the username from the session if it's there session . pop ( 'username' , None ) return redirect ( url_for ( 'index' )) # set the secret key. keep this really secret: app . secret_key = 'A0Zr98j/3yX R~XHH!jmN]LWX/,?RT' \u8fd9\u91cc\u63d0\u5230\u7684 escape() \u53ef\u4ee5\u5728\u4f60\u6a21\u677f\u5f15\u64ce\u5916\u505a\u8f6c\u4e49\uff08\u5982\u540c\u672c\u4f8b\uff09\u3002 \u5982\u4f55\u751f\u6210\u5f3a\u58ee\u7684\u5bc6\u94a5 \u968f\u673a\u7684\u95ee\u9898\u5728\u4e8e\u5f88\u96be\u5224\u65ad\u4ec0\u4e48\u662f\u771f\u968f\u673a\u3002\u4e00\u4e2a\u5bc6\u94a5\u5e94\u8be5\u8db3\u591f\u968f\u673a\u3002\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u57fa\u4e8e\u4e00\u4e2a\u5bc6\u94a5\u968f\u673a\u751f\u6210\u5668\u6765\u751f\u6210\u6f02\u4eae\u7684\u968f\u673a\u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u7528\u6765\u505a\u5bc6\u94a5: >>> import os >>> os . urandom ( 24 ) ' \\xfd {H \\xe5 < \\x95\\xf9\\xe3\\x96 .5 \\xd1\\x01 O<! \\xd5\\xa2\\xa0\\x9f R\" \\xa1\\xa8 ' \u628a\u8fd9\u4e2a\u503c\u590d\u5236\u7c98\u8d34\u8fdb\u4f60\u7684\u4ee3\u7801\u4e2d\uff0c\u4f60\u5c31\u6709\u4e86\u5bc6\u94a5\u3002 \u4f7f\u7528\u57fa\u4e8e cookie \u7684\u4f1a\u8bdd\u9700\u6ce8\u610f: Flask \u4f1a\u5c06\u4f60\u653e\u8fdb\u4f1a\u8bdd\u5bf9\u8c61\u7684\u503c\u5e8f\u5217\u5316\u81f3 Cookies\u3002\u5982\u679c\u4f60\u53d1\u73b0\u67d0\u4e9b\u503c\u5728\u8bf7\u6c42\u4e4b\u95f4\u5e76\u6ca1\u6709\u6301\u4e45\u5b58\u5728\uff0c\u7136\u800c\u786e\u5b9e\u5df2\u7ecf\u542f\u7528\u4e86 Cookies\uff0c\u4f46\u4e5f\u6ca1\u6709\u5f97\u5230\u660e\u786e\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u65f6\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u9875\u9762\u54cd\u5e94\u4e2d\u7684 Cookies \u7684\u5927\u5c0f\uff0c\u5e76\u4e0e Web \u6d4f\u89c8\u5668\u6240\u652f\u6301\u7684\u5927\u5c0f\u5bf9\u6bd4\u3002","title":"\u4f1a\u8bdd"},{"location":"05-flask/readme-zh/#_14","text":"\u53cd\u9988\uff0c\u662f\u826f\u597d\u7684\u5e94\u7528\u548c\u7528\u6237\u754c\u9762\u7684\u91cd\u8981\u6784\u6210\u3002\u5982\u679c\u7528\u6237\u5f97\u4e0d\u5230\u8db3\u591f\u7684\u53cd\u9988\uff0c\u4ed6\u4eec\u5f88\u53ef\u80fd\u5f00\u59cb\u538c\u6076\u8fd9\u4e2a\u5e94\u7528\u3002 Flask \u63d0\u4f9b\u4e86\u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u7ed9\u7528\u6237\u53cd\u9988\u3002 \u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\u901a\u5e38\u4f1a\u5728\u8bf7\u6c42\u7ed3\u675f\u65f6\u8bb0\u5f55\u4fe1\u606f\uff0c\u5e76\u5728\u4e0b\u4e00\u4e2a\uff08\u4e14\u4ec5\u5728\u4e0b\u4e00\u4e2a\uff09\u8bf7\u6c42\u4e2d\u8bbf\u95ee\u8bb0\u5f55\u7684\u4fe1\u606f\u3002\u5c55\u73b0\u8fd9\u4e9b\u6d88\u606f\u901a\u5e38\u7ed3\u5408\u8981\u6a21\u677f\u5e03\u5c40\u3002 \u4f7f\u7528 flash() \u65b9\u6cd5\u53ef\u4ee5\u95ea\u73b0\u4e00\u6761\u6d88\u606f\u3002\u8981\u64cd\u4f5c\u6d88\u606f\u672c\u8eab\uff0c\u8bf7\u4f7f\u7528 get_flashed_messages() \u51fd\u6570\uff0c\u5e76\u4e14\u5728\u6a21\u677f\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002\u5b8c\u6574\u7684\u4f8b\u5b50\u89c1 \u6d88\u606f\u95ea\u73b0 \u90e8\u5206\u3002","title":"\u6d88\u606f\u95ea\u73b0"},{"location":"05-flask/readme-zh/#_15","text":"0.3 \u65b0\u7248\u529f\u80fd. \u6709\u65f6\u5019\u4f60\u4f1a\u5904\u4e8e\u8fd9\u6837\u4e00\u79cd\u5883\u5730\uff0c\u4f60\u5904\u7406\u7684\u6570\u636e\u672c\u5e94\u8be5\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u6bd4\u5982\uff0c\u4f60\u4f1a\u6709\u4e00\u4e9b\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u4f46\u8bf7\u6c42\u663e\u7136\u662f\u7578\u5f62\u7684\u3002\u8fd9\u53ef\u80fd\u662f\u7528\u6237\u7be1\u6539\u4e86\u6570\u636e\uff0c\u6216\u662f\u5ba2\u6237\u7aef\u4ee3\u7801\u7684\u7c97\u5236\u6ee5\u9020\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6b63\u5e38\u5730\u8fd4\u56de 400 Bad Request \u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u6709\u65f6\u5019\u4e0d\u80fd\u8fd9\u4e48\u505a\uff0c\u5e76\u4e14\u8981\u8ba9\u4ee3\u7801\u7ee7\u7eed\u8fd0\u884c\u3002 \u4f60\u53ef\u80fd\u4f9d\u7136\u60f3\u8981\u8bb0\u5f55\u4e0b\uff0c\u662f\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u3002\u8fd9\u65f6\u65e5\u5fd7\u8bb0\u5f55\u5c31\u6d3e\u4e0a\u4e86\u7528\u573a\u3002\u4ece Flask 0.3 \u5f00\u59cb\uff0cFlask \u5c31\u5df2\u7ecf\u9884\u7f6e\u4e86\u65e5\u5fd7\u7cfb\u7edf\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u8c03\u7528\u65e5\u5fd7\u8bb0\u5f55\u7684\u4f8b\u5b50: app . logger . debug ( 'A value for debugging' ) app . logger . warning ( 'A warning occurred ( %d apples)' , 42 ) app . logger . error ( 'An error occurred' ) \u9644\u5e26\u7684 logger \u662f\u4e00\u4e2a\u6807\u51c6\u65e5\u5fd7\u7c7b Logger \uff0c\u6240\u4ee5\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605 logging \u7684\u6587\u6863 \u3002","title":"\u65e5\u5fd7\u8bb0\u5f55"},{"location":"05-flask/readme-zh/#wsgi","text":"\u5982\u679c\u4f60\u60f3\u7ed9\u4f60\u7684\u5e94\u7528\u6dfb\u52a0 WSGI \u4e2d\u95f4\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5c01\u88c5\u5185\u90e8 WSGI \u5e94\u7528\u3002\u4f8b\u5982\u82e5\u662f\u4f60\u60f3\u7528 Werkzeug \u5305\u4e2d\u7684\u67d0\u4e2a\u4e2d\u95f4\u4ef6\u6765\u5e94\u4ed8 lighttpd \u4e2d\u7684 bugs \uff0c\u53ef\u4ee5\u8fd9\u6837\u505a: from werkzeug.contrib.fixers import LighttpdCGIRootFix app . wsgi_app = LighttpdCGIRootFix ( app . wsgi_app )","title":"\u6574\u5408 WSGI \u4e2d\u95f4\u4ef6"},{"location":"05-flask/readme-zh/#web","text":"\u51c6\u5907\u597d\u90e8\u7f72\u4f60\u7684 Flask \u5e94\u7528\u4e86\uff1f\u4f60\u53ef\u4ee5\u7acb\u5373\u90e8\u7f72\u5230\u6258\u7ba1\u5e73\u53f0\u6765\u5706\u6ee1\u5b8c\u6210\u5feb\u901f\u5165\u95e8\uff0c\u4ee5\u4e0b\u5382\u5546\u5747\u5411\u5c0f\u9879\u76ee\u63d0\u4f9b\u514d\u8d39\u7684\u65b9\u6848: \u5728 Heroku \u4e0a\u90e8\u7f72 Flask \u5728 dotCloud \u4e0a\u90e8\u7f72 Flask \u9644 Flask \u7684\u5177\u4f53\u8bf4\u660e \u6258\u7ba1 Flask \u5e94\u7528\u7684\u5176\u5b83\u9009\u62e9: \u5728 Webfaction \u4e0a\u90e8\u7f72 Flask \u5728 Google App Engine \u4e0a\u90e8\u7f72 Flask \u7528 Localtunnel \u5171\u4eab\u4f60\u7684\u672c\u5730\u670d\u52a1\u5668 \u5982\u679c\u4f60\u6709\u81ea\u5df1\u7684\u4e3b\u673a\uff0c\u5e76\u4e14\u51c6\u5907\u81ea\u5df1\u6258\u7ba1\uff0c\u53c2\u89c1 \u90e8\u7f72\u9009\u62e9 \u7ae0\u8282\u3002","title":"\u90e8\u7f72\u5230 Web \u670d\u52a1\u5668"},{"location":"05-flask/Flask_todo/01-Flask%20%E6%A6%82%E8%BF%B0/","text":"Flask \u6982\u8ff0 \u00b6 \u4ec0\u4e48\u662fWeb Framework\uff1f \u00b6 Web Application Framework\uff08Web\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\uff09\u6216\u7b80\u5355\u7684Web Framework\uff08Web\u6846\u67b6\uff09\u8868\u793a\u4e00\u4e2a\u5e93\u548c\u6a21\u5757\u7684\u96c6\u5408\uff0c\u4f7fWeb\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u534f\u8bae\uff0c\u7ebf\u7a0b\u7ba1\u7406\u7b49\u4f4e\u7ea7\u7ec6\u8282\u3002 \u4ec0\u4e48\u662fFlask\uff1f \u00b6 Flask\u662f\u4e00\u4e2a\u7528Python\u7f16\u5199\u7684Web\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u3002 \u5b83\u7531 Armin Ronacher \u5f00\u53d1\uff0c\u4ed6\u9886\u5bfc\u4e00\u4e2a\u540d\u4e3aPocco\u7684\u56fd\u9645Python\u7231\u597d\u8005\u56e2\u961f\u3002 Flask\u57fa\u4e8eWerkzeug WSGI\u5de5\u5177\u5305\u548cJinja2\u6a21\u677f\u5f15\u64ce\u3002\u4e24\u8005\u90fd\u662fPocco\u9879\u76ee\u3002 WSGI \u00b6 Web Server Gateway Interface\uff08Web\u670d\u52a1\u5668\u7f51\u5173\u63a5\u53e3\uff0cWSGI\uff09\u5df2\u88ab\u7528\u4f5cPython Web\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u7684\u6807\u51c6\u3002 WSGI\u662fWeb\u670d\u52a1\u5668\u548cWeb\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u901a\u7528\u63a5\u53e3\u7684\u89c4\u8303\u3002 Werkzeug \u00b6 \u5b83\u662f\u4e00\u4e2aWSGI\u5de5\u5177\u5305\uff0c\u5b83\u5b9e\u73b0\u4e86\u8bf7\u6c42\uff0c\u54cd\u5e94\u5bf9\u8c61\u548c\u5b9e\u7528\u51fd\u6570\u3002 \u8fd9\u4f7f\u5f97\u80fd\u591f\u5728\u5176\u4e0a\u6784\u5efaweb\u6846\u67b6\u3002 Flask\u6846\u67b6\u4f7f\u7528Werkzeug\u4f5c\u4e3a\u5176\u57fa\u7840\u4e4b\u4e00\u3002 jinja2 \u00b6 jinja2\u662fPython\u7684\u4e00\u4e2a\u6d41\u884c\u7684\u6a21\u677f\u5f15\u64ce\u3002Web\u6a21\u677f\u7cfb\u7edf\u5c06\u6a21\u677f\u4e0e\u7279\u5b9a\u6570\u636e\u6e90\u7ec4\u5408\u4ee5\u5448\u73b0\u52a8\u6001\u7f51\u9875\u3002 Flask\u901a\u5e38\u88ab\u79f0\u4e3a\u5fae\u6846\u67b6\u3002 \u5b83\u65e8\u5728\u4fdd\u6301\u5e94\u7528\u7a0b\u5e8f\u7684\u6838\u5fc3\u7b80\u5355\u4e14\u53ef\u6269\u5c55\u3002Flask\u6ca1\u6709\u7528\u4e8e\u6570\u636e\u5e93\u5904\u7406\u7684\u5185\u7f6e\u62bd\u8c61\u5c42\uff0c\u4e5f\u6ca1\u6709\u5f62\u6210\u9a8c\u8bc1\u652f\u6301\u3002\u76f8\u53cd\uff0cFlask\u652f\u6301\u6269\u5c55\u4ee5\u5411\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u6b64\u7c7b\u529f\u80fd\u3002\u4e00\u4e9b\u53d7\u6b22\u8fce\u7684Flask\u6269\u5c55\u5c06\u5728\u672c\u6559\u7a0b\u540e\u7eed\u7ae0\u8282\u8fdb\u884c\u8ba8\u8bba\u3002","title":"01-Flask \u6982\u8ff0"},{"location":"05-flask/Flask_todo/01-Flask%20%E6%A6%82%E8%BF%B0/#flask","text":"","title":"Flask \u6982\u8ff0"},{"location":"05-flask/Flask_todo/01-Flask%20%E6%A6%82%E8%BF%B0/#web-framework","text":"Web Application Framework\uff08Web\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\uff09\u6216\u7b80\u5355\u7684Web Framework\uff08Web\u6846\u67b6\uff09\u8868\u793a\u4e00\u4e2a\u5e93\u548c\u6a21\u5757\u7684\u96c6\u5408\uff0c\u4f7fWeb\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u80fd\u591f\u7f16\u5199\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u5fc5\u62c5\u5fc3\u534f\u8bae\uff0c\u7ebf\u7a0b\u7ba1\u7406\u7b49\u4f4e\u7ea7\u7ec6\u8282\u3002","title":"\u4ec0\u4e48\u662fWeb Framework\uff1f"},{"location":"05-flask/Flask_todo/01-Flask%20%E6%A6%82%E8%BF%B0/#flask_1","text":"Flask\u662f\u4e00\u4e2a\u7528Python\u7f16\u5199\u7684Web\u5e94\u7528\u7a0b\u5e8f\u6846\u67b6\u3002 \u5b83\u7531 Armin Ronacher \u5f00\u53d1\uff0c\u4ed6\u9886\u5bfc\u4e00\u4e2a\u540d\u4e3aPocco\u7684\u56fd\u9645Python\u7231\u597d\u8005\u56e2\u961f\u3002 Flask\u57fa\u4e8eWerkzeug WSGI\u5de5\u5177\u5305\u548cJinja2\u6a21\u677f\u5f15\u64ce\u3002\u4e24\u8005\u90fd\u662fPocco\u9879\u76ee\u3002","title":"\u4ec0\u4e48\u662fFlask\uff1f"},{"location":"05-flask/Flask_todo/01-Flask%20%E6%A6%82%E8%BF%B0/#wsgi","text":"Web Server Gateway Interface\uff08Web\u670d\u52a1\u5668\u7f51\u5173\u63a5\u53e3\uff0cWSGI\uff09\u5df2\u88ab\u7528\u4f5cPython Web\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u7684\u6807\u51c6\u3002 WSGI\u662fWeb\u670d\u52a1\u5668\u548cWeb\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u901a\u7528\u63a5\u53e3\u7684\u89c4\u8303\u3002","title":"WSGI"},{"location":"05-flask/Flask_todo/01-Flask%20%E6%A6%82%E8%BF%B0/#werkzeug","text":"\u5b83\u662f\u4e00\u4e2aWSGI\u5de5\u5177\u5305\uff0c\u5b83\u5b9e\u73b0\u4e86\u8bf7\u6c42\uff0c\u54cd\u5e94\u5bf9\u8c61\u548c\u5b9e\u7528\u51fd\u6570\u3002 \u8fd9\u4f7f\u5f97\u80fd\u591f\u5728\u5176\u4e0a\u6784\u5efaweb\u6846\u67b6\u3002 Flask\u6846\u67b6\u4f7f\u7528Werkzeug\u4f5c\u4e3a\u5176\u57fa\u7840\u4e4b\u4e00\u3002","title":"Werkzeug"},{"location":"05-flask/Flask_todo/01-Flask%20%E6%A6%82%E8%BF%B0/#jinja2","text":"jinja2\u662fPython\u7684\u4e00\u4e2a\u6d41\u884c\u7684\u6a21\u677f\u5f15\u64ce\u3002Web\u6a21\u677f\u7cfb\u7edf\u5c06\u6a21\u677f\u4e0e\u7279\u5b9a\u6570\u636e\u6e90\u7ec4\u5408\u4ee5\u5448\u73b0\u52a8\u6001\u7f51\u9875\u3002 Flask\u901a\u5e38\u88ab\u79f0\u4e3a\u5fae\u6846\u67b6\u3002 \u5b83\u65e8\u5728\u4fdd\u6301\u5e94\u7528\u7a0b\u5e8f\u7684\u6838\u5fc3\u7b80\u5355\u4e14\u53ef\u6269\u5c55\u3002Flask\u6ca1\u6709\u7528\u4e8e\u6570\u636e\u5e93\u5904\u7406\u7684\u5185\u7f6e\u62bd\u8c61\u5c42\uff0c\u4e5f\u6ca1\u6709\u5f62\u6210\u9a8c\u8bc1\u652f\u6301\u3002\u76f8\u53cd\uff0cFlask\u652f\u6301\u6269\u5c55\u4ee5\u5411\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u6b64\u7c7b\u529f\u80fd\u3002\u4e00\u4e9b\u53d7\u6b22\u8fce\u7684Flask\u6269\u5c55\u5c06\u5728\u672c\u6559\u7a0b\u540e\u7eed\u7ae0\u8282\u8fdb\u884c\u8ba8\u8bba\u3002","title":"jinja2"},{"location":"05-flask/Flask_todo/02-Flask%20%E7%8E%AF%E5%A2%83/","text":"Flask \u73af\u5883 \u00b6 Flask\u5b89\u88c5\u6761\u4ef6 \u00b6 \u5b89\u88c5Flask\u901a\u5e38\u9700\u8981Python 2.6\u6216\u66f4\u9ad8\u7248\u672c\u3002\u867d\u7136Flask\u53ca\u5176\u4f9d\u8d56\u9879\u9002\u7528\u4e8ePython 3\uff08Python 3.3\u4ee5\u4e0a\u7248\u672c\uff09\uff0c\u4f46\u662f\u8bb8\u591aFlask\u6269\u5c55\u4e0d\u80fd\u6b63\u786e\u652f\u6301\u5b83\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u5728Python 2.7\u4e0a\u5b89\u88c5Flask\u3002 \u4e3a\u5f00\u53d1\u73af\u5883\u5b89\u88c5virtualenv \u00b6 **virtualenv**\u662f\u4e00\u4e2a\u865a\u62df\u7684Python\u73af\u5883\u6784\u5efa\u5668\u3002\u5b83\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5e76\u884c\u521b\u5efa\u591a\u4e2aPython\u73af\u5883\u3002 \u56e0\u6b64\uff0c\u5b83\u53ef\u4ee5\u907f\u514d\u4e0d\u540c\u7248\u672c\u7684\u5e93\u4e4b\u95f4\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002 \u4ee5\u4e0b\u547d\u4ee4\u7528\u4e8e\u5b89\u88c5**virtualenv\uff1a** pip install virtualenv \u6b64\u547d\u4ee4\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\u3002\u60a8\u53ef\u4ee5\u5728Linux / Mac OS\u4e0a\u7684 pip \u4e4b\u524d\u6dfb\u52a0 sudo \u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fWindows\uff0c\u8bf7\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u767b\u5f55\u3002\u5728Ubuntu\u4e0a\uff0c **virtualenv**\u53ef\u4ee5\u4f7f\u7528\u5b83\u7684\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u3002 Sudo apt-get install virtualenv \u5b89\u88c5\u540e\uff0c\u5c06\u5728\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u65b0\u7684\u865a\u62df\u73af\u5883\u3002 mkdir newproj cd newproj virtualenv venv \u8981\u5728 Linux / OS X \u4e0a\u6fc0\u6d3b\u76f8\u5e94\u7684\u73af\u5883\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a venv/bin/activate \u8981\u5728 Windows \u4e0a\u6fc0\u6d3b\u76f8\u5e94\u7684\u73af\u5883\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a venv\\scripts\\activate \u6211\u4eec\u73b0\u5728\u51c6\u5907\u5728\u8fd9\u4e2a\u73af\u5883\u4e2d\u5b89\u88c5Flask\uff1a pip install Flask \u4e0a\u8ff0\u547d\u4ee4\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u4e0d\u9700\u8981\u7cfb\u7edf\u8303\u56f4\u5b89\u88c5\u7684\u865a\u62df\u73af\u5883\u3002","title":"02-Flask \u73af\u5883"},{"location":"05-flask/Flask_todo/02-Flask%20%E7%8E%AF%E5%A2%83/#flask","text":"","title":"Flask \u73af\u5883"},{"location":"05-flask/Flask_todo/02-Flask%20%E7%8E%AF%E5%A2%83/#flask_1","text":"\u5b89\u88c5Flask\u901a\u5e38\u9700\u8981Python 2.6\u6216\u66f4\u9ad8\u7248\u672c\u3002\u867d\u7136Flask\u53ca\u5176\u4f9d\u8d56\u9879\u9002\u7528\u4e8ePython 3\uff08Python 3.3\u4ee5\u4e0a\u7248\u672c\uff09\uff0c\u4f46\u662f\u8bb8\u591aFlask\u6269\u5c55\u4e0d\u80fd\u6b63\u786e\u652f\u6301\u5b83\u3002\u56e0\u6b64\uff0c\u5efa\u8bae\u5728Python 2.7\u4e0a\u5b89\u88c5Flask\u3002","title":"Flask\u5b89\u88c5\u6761\u4ef6"},{"location":"05-flask/Flask_todo/02-Flask%20%E7%8E%AF%E5%A2%83/#virtualenv","text":"**virtualenv**\u662f\u4e00\u4e2a\u865a\u62df\u7684Python\u73af\u5883\u6784\u5efa\u5668\u3002\u5b83\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u5e76\u884c\u521b\u5efa\u591a\u4e2aPython\u73af\u5883\u3002 \u56e0\u6b64\uff0c\u5b83\u53ef\u4ee5\u907f\u514d\u4e0d\u540c\u7248\u672c\u7684\u5e93\u4e4b\u95f4\u7684\u517c\u5bb9\u6027\u95ee\u9898\u3002 \u4ee5\u4e0b\u547d\u4ee4\u7528\u4e8e\u5b89\u88c5**virtualenv\uff1a** pip install virtualenv \u6b64\u547d\u4ee4\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650\u3002\u60a8\u53ef\u4ee5\u5728Linux / Mac OS\u4e0a\u7684 pip \u4e4b\u524d\u6dfb\u52a0 sudo \u3002\u5982\u679c\u60a8\u4f7f\u7528\u7684\u662fWindows\uff0c\u8bf7\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u767b\u5f55\u3002\u5728Ubuntu\u4e0a\uff0c **virtualenv**\u53ef\u4ee5\u4f7f\u7528\u5b83\u7684\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u3002 Sudo apt-get install virtualenv \u5b89\u88c5\u540e\uff0c\u5c06\u5728\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u65b0\u7684\u865a\u62df\u73af\u5883\u3002 mkdir newproj cd newproj virtualenv venv \u8981\u5728 Linux / OS X \u4e0a\u6fc0\u6d3b\u76f8\u5e94\u7684\u73af\u5883\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a venv/bin/activate \u8981\u5728 Windows \u4e0a\u6fc0\u6d3b\u76f8\u5e94\u7684\u73af\u5883\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a venv\\scripts\\activate \u6211\u4eec\u73b0\u5728\u51c6\u5907\u5728\u8fd9\u4e2a\u73af\u5883\u4e2d\u5b89\u88c5Flask\uff1a pip install Flask \u4e0a\u8ff0\u547d\u4ee4\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u4e0d\u9700\u8981\u7cfb\u7edf\u8303\u56f4\u5b89\u88c5\u7684\u865a\u62df\u73af\u5883\u3002","title":"\u4e3a\u5f00\u53d1\u73af\u5883\u5b89\u88c5virtualenv"},{"location":"05-flask/Flask_todo/03-Flask%20%E5%BA%94%E7%94%A8/","text":"Flask \u5e94\u7528 \u00b6 \u4e3a\u4e86\u6d4b\u8bd5 Flask \u5b89\u88c5\uff0c\u8bf7\u5728\u7f16\u8f91\u5668\u4e2d\u5c06\u4ee5\u4e0b\u4ee3\u7801\u8f93\u5165 Hello.py\uff1a from flask import Flask app = Flask(__name__) @app.route('/') def hello_world(): return 'Hello World\u2019 if __name__ == '__main__': app.run() \u5fc5\u987b\u5728\u9879\u76ee\u4e2d\u5bfc\u5165Flask\u6a21\u5757\u3002 Flask\u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61\u662f\u6211\u4eec\u7684**WSGI**\u5e94\u7528\u7a0b\u5e8f\u3002 Flask\u6784\u9020\u51fd\u6570\u4f7f\u7528**\u5f53\u524d\u6a21\u5757\uff08__name __\uff09**\u7684\u540d\u79f0\u4f5c\u4e3a\u53c2\u6570\u3002 Flask\u7c7b\u7684**route()**\u51fd\u6570\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u5b83\u544a\u8bc9\u5e94\u7528\u7a0b\u5e8f\u54ea\u4e2aURL\u5e94\u8be5\u8c03\u7528\u76f8\u5173\u7684\u51fd\u6570\u3002 app.route(rule, options) rule \u53c2\u6570\u8868\u793a\u4e0e\u8be5\u51fd\u6570\u7684URL\u7ed1\u5b9a\u3002 options \u662f\u8981\u8f6c\u53d1\u7ed9\u57fa\u7840Rule\u5bf9\u8c61\u7684\u53c2\u6570\u5217\u8868\u3002 \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c'/ ' URL\u4e0e**hello_world()**\u51fd\u6570\u7ed1\u5b9a\u3002\u56e0\u6b64\uff0c\u5f53\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00web\u670d\u52a1\u5668\u7684\u4e3b\u9875\u65f6\uff0c\u5c06\u5448\u73b0\u8be5\u51fd\u6570\u7684\u8f93\u51fa\u3002 \u6700\u540e\uff0cFlask\u7c7b\u7684**run()**\u65b9\u6cd5\u5728\u672c\u5730\u5f00\u53d1\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u3002 app.run(host, port, debug, options) \u6240\u6709\u53c2\u6570\u90fd\u662f\u53ef\u9009\u7684 \u5e8f\u53f7 \u53c2\u6570\u4e0e\u63cf\u8ff0 1 host \u8981\u76d1\u542c\u7684\u4e3b\u673a\u540d\u3002 \u9ed8\u8ba4\u4e3a127.0.0.1\uff08localhost\uff09\u3002\u8bbe\u7f6e\u4e3a\u201c0.0.0.0\u201d\u4ee5\u4f7f\u670d\u52a1\u5668\u5728\u5916\u90e8\u53ef\u7528 2 port \u9ed8\u8ba4\u503c\u4e3a5000 3 debug \u9ed8\u8ba4\u4e3afalse\u3002 \u5982\u679c\u8bbe\u7f6e\u4e3atrue\uff0c\u5219\u63d0\u4f9b\u8c03\u8bd5\u4fe1\u606f 4 options \u8981\u8f6c\u53d1\u5230\u5e95\u5c42\u7684Werkzeug\u670d\u52a1\u5668\u3002 \u4e0a\u9762\u7ed9\u51fa\u7684**Python**\u811a\u672c\u662f\u4ecePython shell\u6267\u884c\u7684\u3002 Python Hello.py Python shell\u4e2d\u7684\u6d88\u606f\u901a\u77e5\u60a8\uff1a * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit) \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u4e0a\u8ff0URL**\uff08localhost\uff1a5000\uff09 \u3002\u5c06\u663e\u793a \u201cHello World\u201d**\u6d88\u606f\u3002 \u00b6 \u8fd9\u91cc\u6ce8\u610f\uff0c\u5982\u679c\u4f7f\u7528python\u81ea\u5e26\u7684idle\u8fd0\u884c\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u62a5\u4ee5\u4e0b\u9519\u8bef\uff1a \u00b6 Traceback (most recent call last): File \u201cC:/learn/python/xuexi/web/demoflask/app.py\u201d, line 27, in app.run(); File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\flask\\app.py\u201d, line 938, in run cli.show_server_banner(self.env, self.debug, self.name, False) File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\flask\\cli.py\u201d, line 629, in show_server_banner click.echo(message) File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\click\\utils.py\u201d, line 217, in echo file = _default_text_stdout() File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\click_compat.py\u201d, line 621, in func rv = wrapper_func() File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\click_compat.py\u201d, line 385, in get_text_stdout rv = _get_windows_console_stream(sys.stdout, encoding, errors) File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\click_winconsole.py\u201d, line 261, in _get_windows_console_stream func = _stream_factories.get(f.fileno()) io.UnsupportedOperation: fileno \u53ea\u8981\u4e0d\u7528idle\u6267\u884c\u5c31\u4e0d\u4f1a\u51fa\u9519\u4e86\uff0c\u4e0d\u5f71\u54cd\u540e\u7eed\u4f7f\u7528\u3002\u6539\u7528cmd\u4e0bPython\u6267\u884c\u6216\u8005pycharm\u7b49\u8fd0\u884c\u90fd\u80fd\u6210\u529f\u3002 \u8c03\u8bd5\u6a21\u5f0f \u00b6 \u901a\u8fc7\u8c03\u7528**run() \u65b9\u6cd5\u542f\u52a8**Flask**\u5e94\u7528\u7a0b\u5e8f\u3002\u4f46\u662f\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u5f00\u53d1\u4e2d\u65f6\uff0c\u5e94\u8be5\u4e3a\u4ee3\u7801\u4e2d\u7684\u6bcf\u4e2a\u66f4\u6539\u624b\u52a8\u91cd\u65b0\u542f\u52a8\u5b83\u3002\u4e3a\u907f\u514d\u8fd9\u79cd\u4e0d\u4fbf\uff0c\u8bf7\u542f\u7528**\u8c03\u8bd5\u652f\u6301 \u3002\u5982\u679c\u4ee3\u7801\u66f4\u6539\uff0c\u670d\u52a1\u5668\u5c06\u81ea\u884c\u91cd\u65b0\u52a0\u8f7d\u3002\u5b83\u8fd8\u5c06\u63d0\u4f9b\u4e00\u4e2a\u6709\u7528\u7684\u8c03\u8bd5\u5668\u6765\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002 \u5728\u8fd0\u884c\u6216\u5c06\u8c03\u8bd5\u53c2\u6570\u4f20\u9012\u7ed9**run() \u65b9\u6cd5\u4e4b\u524d\uff0c\u901a\u8fc7\u5c06**application**\u5bf9\u8c61\u7684**debug**\u5c5e\u6027\u8bbe\u7f6e\u4e3a**True**\u6765\u542f\u7528**Debug\u6a21\u5f0f \u3002 app.debug = True app.run() app.run(debug = True)","title":"03-Flask \u5e94\u7528"},{"location":"05-flask/Flask_todo/03-Flask%20%E5%BA%94%E7%94%A8/#flask","text":"\u4e3a\u4e86\u6d4b\u8bd5 Flask \u5b89\u88c5\uff0c\u8bf7\u5728\u7f16\u8f91\u5668\u4e2d\u5c06\u4ee5\u4e0b\u4ee3\u7801\u8f93\u5165 Hello.py\uff1a from flask import Flask app = Flask(__name__) @app.route('/') def hello_world(): return 'Hello World\u2019 if __name__ == '__main__': app.run() \u5fc5\u987b\u5728\u9879\u76ee\u4e2d\u5bfc\u5165Flask\u6a21\u5757\u3002 Flask\u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61\u662f\u6211\u4eec\u7684**WSGI**\u5e94\u7528\u7a0b\u5e8f\u3002 Flask\u6784\u9020\u51fd\u6570\u4f7f\u7528**\u5f53\u524d\u6a21\u5757\uff08__name __\uff09**\u7684\u540d\u79f0\u4f5c\u4e3a\u53c2\u6570\u3002 Flask\u7c7b\u7684**route()**\u51fd\u6570\u662f\u4e00\u4e2a\u88c5\u9970\u5668\uff0c\u5b83\u544a\u8bc9\u5e94\u7528\u7a0b\u5e8f\u54ea\u4e2aURL\u5e94\u8be5\u8c03\u7528\u76f8\u5173\u7684\u51fd\u6570\u3002 app.route(rule, options) rule \u53c2\u6570\u8868\u793a\u4e0e\u8be5\u51fd\u6570\u7684URL\u7ed1\u5b9a\u3002 options \u662f\u8981\u8f6c\u53d1\u7ed9\u57fa\u7840Rule\u5bf9\u8c61\u7684\u53c2\u6570\u5217\u8868\u3002 \u5728\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c'/ ' URL\u4e0e**hello_world()**\u51fd\u6570\u7ed1\u5b9a\u3002\u56e0\u6b64\uff0c\u5f53\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00web\u670d\u52a1\u5668\u7684\u4e3b\u9875\u65f6\uff0c\u5c06\u5448\u73b0\u8be5\u51fd\u6570\u7684\u8f93\u51fa\u3002 \u6700\u540e\uff0cFlask\u7c7b\u7684**run()**\u65b9\u6cd5\u5728\u672c\u5730\u5f00\u53d1\u670d\u52a1\u5668\u4e0a\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u3002 app.run(host, port, debug, options) \u6240\u6709\u53c2\u6570\u90fd\u662f\u53ef\u9009\u7684 \u5e8f\u53f7 \u53c2\u6570\u4e0e\u63cf\u8ff0 1 host \u8981\u76d1\u542c\u7684\u4e3b\u673a\u540d\u3002 \u9ed8\u8ba4\u4e3a127.0.0.1\uff08localhost\uff09\u3002\u8bbe\u7f6e\u4e3a\u201c0.0.0.0\u201d\u4ee5\u4f7f\u670d\u52a1\u5668\u5728\u5916\u90e8\u53ef\u7528 2 port \u9ed8\u8ba4\u503c\u4e3a5000 3 debug \u9ed8\u8ba4\u4e3afalse\u3002 \u5982\u679c\u8bbe\u7f6e\u4e3atrue\uff0c\u5219\u63d0\u4f9b\u8c03\u8bd5\u4fe1\u606f 4 options \u8981\u8f6c\u53d1\u5230\u5e95\u5c42\u7684Werkzeug\u670d\u52a1\u5668\u3002 \u4e0a\u9762\u7ed9\u51fa\u7684**Python**\u811a\u672c\u662f\u4ecePython shell\u6267\u884c\u7684\u3002 Python Hello.py Python shell\u4e2d\u7684\u6d88\u606f\u901a\u77e5\u60a8\uff1a * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit) \u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u4e0a\u8ff0URL**\uff08localhost\uff1a5000\uff09 \u3002\u5c06\u663e\u793a \u201cHello World\u201d**\u6d88\u606f\u3002","title":"Flask \u5e94\u7528"},{"location":"05-flask/Flask_todo/03-Flask%20%E5%BA%94%E7%94%A8/#_1","text":"","title":""},{"location":"05-flask/Flask_todo/03-Flask%20%E5%BA%94%E7%94%A8/#pythonidle","text":"Traceback (most recent call last): File \u201cC:/learn/python/xuexi/web/demoflask/app.py\u201d, line 27, in app.run(); File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\flask\\app.py\u201d, line 938, in run cli.show_server_banner(self.env, self.debug, self.name, False) File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\flask\\cli.py\u201d, line 629, in show_server_banner click.echo(message) File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\click\\utils.py\u201d, line 217, in echo file = _default_text_stdout() File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\click_compat.py\u201d, line 621, in func rv = wrapper_func() File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\click_compat.py\u201d, line 385, in get_text_stdout rv = _get_windows_console_stream(sys.stdout, encoding, errors) File \u201cC:\\Users\\zhang\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\click_winconsole.py\u201d, line 261, in _get_windows_console_stream func = _stream_factories.get(f.fileno()) io.UnsupportedOperation: fileno \u53ea\u8981\u4e0d\u7528idle\u6267\u884c\u5c31\u4e0d\u4f1a\u51fa\u9519\u4e86\uff0c\u4e0d\u5f71\u54cd\u540e\u7eed\u4f7f\u7528\u3002\u6539\u7528cmd\u4e0bPython\u6267\u884c\u6216\u8005pycharm\u7b49\u8fd0\u884c\u90fd\u80fd\u6210\u529f\u3002","title":"\u8fd9\u91cc\u6ce8\u610f\uff0c\u5982\u679c\u4f7f\u7528python\u81ea\u5e26\u7684idle\u8fd0\u884c\u7684\u65f6\u5019\u53ef\u80fd\u4f1a\u62a5\u4ee5\u4e0b\u9519\u8bef\uff1a"},{"location":"05-flask/Flask_todo/03-Flask%20%E5%BA%94%E7%94%A8/#_2","text":"\u901a\u8fc7\u8c03\u7528**run() \u65b9\u6cd5\u542f\u52a8**Flask**\u5e94\u7528\u7a0b\u5e8f\u3002\u4f46\u662f\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u5f00\u53d1\u4e2d\u65f6\uff0c\u5e94\u8be5\u4e3a\u4ee3\u7801\u4e2d\u7684\u6bcf\u4e2a\u66f4\u6539\u624b\u52a8\u91cd\u65b0\u542f\u52a8\u5b83\u3002\u4e3a\u907f\u514d\u8fd9\u79cd\u4e0d\u4fbf\uff0c\u8bf7\u542f\u7528**\u8c03\u8bd5\u652f\u6301 \u3002\u5982\u679c\u4ee3\u7801\u66f4\u6539\uff0c\u670d\u52a1\u5668\u5c06\u81ea\u884c\u91cd\u65b0\u52a0\u8f7d\u3002\u5b83\u8fd8\u5c06\u63d0\u4f9b\u4e00\u4e2a\u6709\u7528\u7684\u8c03\u8bd5\u5668\u6765\u8ddf\u8e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002 \u5728\u8fd0\u884c\u6216\u5c06\u8c03\u8bd5\u53c2\u6570\u4f20\u9012\u7ed9**run() \u65b9\u6cd5\u4e4b\u524d\uff0c\u901a\u8fc7\u5c06**application**\u5bf9\u8c61\u7684**debug**\u5c5e\u6027\u8bbe\u7f6e\u4e3a**True**\u6765\u542f\u7528**Debug\u6a21\u5f0f \u3002 app.debug = True app.run() app.run(debug = True)","title":"\u8c03\u8bd5\u6a21\u5f0f"},{"location":"05-flask/Flask_todo/04-Flask%20%E8%B7%AF%E7%94%B1/","text":"Flask \u8def\u7531 \u00b6 \u73b0\u4ee3Web\u6846\u67b6\u4f7f\u7528\u8def\u7531\u6280\u672f\u6765\u5e2e\u52a9\u7528\u6237\u8bb0\u4f4f\u5e94\u7528\u7a0b\u5e8fURL\u3002\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6240\u9700\u7684\u9875\u9762\uff0c\u800c\u65e0\u9700\u4ece\u4e3b\u9875\u5bfc\u822a\u3002 Flask\u4e2d\u7684**route()**\u88c5\u9970\u5668\u7528\u4e8e\u5c06URL\u7ed1\u5b9a\u5230\u51fd\u6570\u3002\u4f8b\u5982\uff1a @app.route(\u2018/hello\u2019) def hello_world(): return \u2018hello world\u2019 \u5728\u8fd9\u91cc\uff0cURL '/ hello' \u89c4\u5219\u7ed1\u5b9a\u5230**hello_world() \u51fd\u6570\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u7528\u6237\u8bbf\u95ee**http\uff1a// localhost\uff1a5000 / hello URL\uff0c**hello_world()**\u51fd\u6570\u7684\u8f93\u51fa\u5c06\u5728\u6d4f\u89c8\u5668\u4e2d\u5448\u73b0\u3002 application\u5bf9\u8c61\u7684**add_url_rule() \u51fd\u6570\u4e5f\u53ef\u7528\u4e8e\u5c06URL\u4e0e\u51fd\u6570\u7ed1\u5b9a\uff0c\u5982\u4e0a\u4f8b\u6240\u793a\uff0c\u4f7f\u7528**route() \u3002 \u88c5\u9970\u5668\u7684\u76ee\u7684\u4e5f\u7531\u4ee5\u4e0b\u8868\u793a\uff1a def hello_world(): return \u2018hello world\u2019 app.add_url_rule(\u2018/\u2019, \u2018hello\u2019, hello_world)","title":"04-Flask \u8def\u7531"},{"location":"05-flask/Flask_todo/04-Flask%20%E8%B7%AF%E7%94%B1/#flask","text":"\u73b0\u4ee3Web\u6846\u67b6\u4f7f\u7528\u8def\u7531\u6280\u672f\u6765\u5e2e\u52a9\u7528\u6237\u8bb0\u4f4f\u5e94\u7528\u7a0b\u5e8fURL\u3002\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u6240\u9700\u7684\u9875\u9762\uff0c\u800c\u65e0\u9700\u4ece\u4e3b\u9875\u5bfc\u822a\u3002 Flask\u4e2d\u7684**route()**\u88c5\u9970\u5668\u7528\u4e8e\u5c06URL\u7ed1\u5b9a\u5230\u51fd\u6570\u3002\u4f8b\u5982\uff1a @app.route(\u2018/hello\u2019) def hello_world(): return \u2018hello world\u2019 \u5728\u8fd9\u91cc\uff0cURL '/ hello' \u89c4\u5219\u7ed1\u5b9a\u5230**hello_world() \u51fd\u6570\u3002 \u56e0\u6b64\uff0c\u5982\u679c\u7528\u6237\u8bbf\u95ee**http\uff1a// localhost\uff1a5000 / hello URL\uff0c**hello_world()**\u51fd\u6570\u7684\u8f93\u51fa\u5c06\u5728\u6d4f\u89c8\u5668\u4e2d\u5448\u73b0\u3002 application\u5bf9\u8c61\u7684**add_url_rule() \u51fd\u6570\u4e5f\u53ef\u7528\u4e8e\u5c06URL\u4e0e\u51fd\u6570\u7ed1\u5b9a\uff0c\u5982\u4e0a\u4f8b\u6240\u793a\uff0c\u4f7f\u7528**route() \u3002 \u88c5\u9970\u5668\u7684\u76ee\u7684\u4e5f\u7531\u4ee5\u4e0b\u8868\u793a\uff1a def hello_world(): return \u2018hello world\u2019 app.add_url_rule(\u2018/\u2019, \u2018hello\u2019, hello_world)","title":"Flask \u8def\u7531"},{"location":"05-flask/Flask_todo/05-Flask%20%E5%8F%98%E9%87%8F%E8%A7%84%E5%88%99/","text":"Flask \u53d8\u91cf\u89c4\u5219 \u00b6 Flask \u53d8\u91cf\u89c4\u5219 \u00b6 \u901a\u8fc7\u5411\u89c4\u5219\u53c2\u6570\u6dfb\u52a0\u53d8\u91cf\u90e8\u5206\uff0c\u53ef\u4ee5\u52a8\u6001\u6784\u5efaURL\u3002\u6b64\u53d8\u91cf\u90e8\u5206\u6807\u8bb0\u4e3a****\u3002\u5b83\u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9\u4e0e\u89c4\u5219\u76f8\u5173\u8054\u7684\u51fd\u6570\u3002 \u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c route()**\u88c5\u9970\u5668\u7684\u89c4\u5219\u53c2\u6570\u5305\u542b\u9644\u52a0\u5230URL **'/hello'**\u7684 \u3002 \u56e0\u6b64\uff0c\u5982\u679c\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165 http://localhost:5000/hello/w3cschool \u4f5c\u4e3a**URL \uff0c\u5219**'w3cschool'**\u5c06\u4f5c\u4e3a\u53c2\u6570\u63d0\u4f9b\u7ed9**hello()**\u51fd\u6570\u3002 from flask import Flask app = Flask(__name__) @app.route('/hello/<name>') def hello_name(name): return 'Hello %s!' % name if __name__ == '__main__': app.run(debug = True) \u5c06\u4e0a\u8ff0\u811a\u672c\u4fdd\u5b58\u4e3a**hello.py**\u5e76\u4ecePython shell\u8fd0\u884c\u5b83\u3002\u63a5\u4e0b\u6765\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u5e76\u8f93\u5165URL http:// localhost:5000/hello/w3cschool\u3002 \u4ee5\u4e0b\u8f93\u51fa\u5c06\u663e\u793a\u5728\u6d4f\u89c8\u5668\u4e2d: Hello w3cschool! \u9664\u4e86\u9ed8\u8ba4\u5b57\u7b26\u4e32\u53d8\u91cf\u90e8\u5206\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8f6c\u6362\u5668\u6784\u5efa\u89c4\u5219\uff1a \u5e8f\u53f7 \u8f6c\u6362\u5668\u548c\u63cf\u8ff0 1 **int**\u63a5\u53d7\u6574\u6570 2 **float**\u5bf9\u4e8e\u6d6e\u70b9\u503c 3 **path **\u63a5\u53d7\u7528\u4f5c\u76ee\u5f55\u5206\u9694\u7b26\u7684\u659c\u6760 \u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528\u4e86\u6240\u6709\u8fd9\u4e9b\u6784\u9020\u51fd\u6570\uff1a from flask import Flask app = Flask(__name__) @app.route('/blog/<int:postID>') def show_blog(postID): return 'Blog Number %d' % postID @app.route('/rev/<float:revNo>') def revision(revNo): return 'Revision Number %f' % revNo if __name__ == '__main__': app.run() \u4ecePython Shell\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u3002\u8bbf\u95ee\u6d4f\u89c8\u5668\u4e2d\u7684URL http://localhost:5000/blog/11 \u3002 \u7ed9\u5b9a\u7684\u6570\u5b57\u7528\u4f5c**show_blog()**\u51fd\u6570\u7684\u53c2\u6570\u3002\u6d4f\u89c8\u5668\u663e\u793a\u4ee5\u4e0b\u8f93\u51fa\uff1a Blog Number 11 \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u6b64URL - http://localhost:5000/rev/1.1 **revision()**\u51fd\u6570\u5c06\u6d6e\u70b9\u6570\u4f5c\u4e3a\u53c2\u6570\u3002\u4ee5\u4e0b\u7ed3\u679c\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\uff1a Revision Number 1.100000 Flask\u7684URL\u89c4\u5219\u57fa\u4e8e**Werkzeug**\u7684\u8def\u7531\u6a21\u5757\u3002\u8fd9\u786e\u4fdd\u5f62\u6210\u7684URL\u662f\u552f\u4e00\u7684\uff0c\u5e76\u4e14\u57fa\u4e8eApache\u89c4\u5b9a\u7684\u5148\u4f8b\u3002 \u8003\u8651\u4ee5\u4e0b\u811a\u672c\u4e2d\u5b9a\u4e49\u7684\u89c4\u5219\uff1a from flask import Flask app = Flask(__name__) @app.route('/flask') def hello_flask(): return 'Hello Flask' @app.route('/python/') def hello_python(): return 'Hello Python' if __name__ == '__main__': app.run() \u8fd9\u4e24\u4e2a\u89c4\u5219\u770b\u8d77\u6765\u7c7b\u4f3c\uff0c\u4f46\u5728\u7b2c\u4e8c\u4e2a\u89c4\u5219\u4e2d\uff0c\u4f7f\u7528\u659c\u6760**\uff08/\uff09 \u3002\u56e0\u6b64\uff0c\u5b83\u6210\u4e3a\u4e00\u4e2a\u89c4\u8303\u7684URL\u3002\u56e0\u6b64\uff0c\u4f7f\u7528 **/python \u6216 /python/**\u8fd4\u56de\u76f8\u540c\u7684\u8f93\u51fa\u3002\u4f46\u662f\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u89c4\u5219\uff0c /flask/ URL**\u4f1a\u4ea7\u751f\u201c404 Not Found\u201d\u9875\u9762\u3002","title":"05-Flask \u53d8\u91cf\u89c4\u5219"},{"location":"05-flask/Flask_todo/05-Flask%20%E5%8F%98%E9%87%8F%E8%A7%84%E5%88%99/#flask","text":"","title":"Flask \u53d8\u91cf\u89c4\u5219"},{"location":"05-flask/Flask_todo/05-Flask%20%E5%8F%98%E9%87%8F%E8%A7%84%E5%88%99/#flask_1","text":"\u901a\u8fc7\u5411\u89c4\u5219\u53c2\u6570\u6dfb\u52a0\u53d8\u91cf\u90e8\u5206\uff0c\u53ef\u4ee5\u52a8\u6001\u6784\u5efaURL\u3002\u6b64\u53d8\u91cf\u90e8\u5206\u6807\u8bb0\u4e3a****\u3002\u5b83\u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570\u4f20\u9012\u7ed9\u4e0e\u89c4\u5219\u76f8\u5173\u8054\u7684\u51fd\u6570\u3002 \u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c route()**\u88c5\u9970\u5668\u7684\u89c4\u5219\u53c2\u6570\u5305\u542b\u9644\u52a0\u5230URL **'/hello'**\u7684 \u3002 \u56e0\u6b64\uff0c\u5982\u679c\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165 http://localhost:5000/hello/w3cschool \u4f5c\u4e3a**URL \uff0c\u5219**'w3cschool'**\u5c06\u4f5c\u4e3a\u53c2\u6570\u63d0\u4f9b\u7ed9**hello()**\u51fd\u6570\u3002 from flask import Flask app = Flask(__name__) @app.route('/hello/<name>') def hello_name(name): return 'Hello %s!' % name if __name__ == '__main__': app.run(debug = True) \u5c06\u4e0a\u8ff0\u811a\u672c\u4fdd\u5b58\u4e3a**hello.py**\u5e76\u4ecePython shell\u8fd0\u884c\u5b83\u3002\u63a5\u4e0b\u6765\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u5e76\u8f93\u5165URL http:// localhost:5000/hello/w3cschool\u3002 \u4ee5\u4e0b\u8f93\u51fa\u5c06\u663e\u793a\u5728\u6d4f\u89c8\u5668\u4e2d: Hello w3cschool! \u9664\u4e86\u9ed8\u8ba4\u5b57\u7b26\u4e32\u53d8\u91cf\u90e8\u5206\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8f6c\u6362\u5668\u6784\u5efa\u89c4\u5219\uff1a \u5e8f\u53f7 \u8f6c\u6362\u5668\u548c\u63cf\u8ff0 1 **int**\u63a5\u53d7\u6574\u6570 2 **float**\u5bf9\u4e8e\u6d6e\u70b9\u503c 3 **path **\u63a5\u53d7\u7528\u4f5c\u76ee\u5f55\u5206\u9694\u7b26\u7684\u659c\u6760 \u5728\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u4f7f\u7528\u4e86\u6240\u6709\u8fd9\u4e9b\u6784\u9020\u51fd\u6570\uff1a from flask import Flask app = Flask(__name__) @app.route('/blog/<int:postID>') def show_blog(postID): return 'Blog Number %d' % postID @app.route('/rev/<float:revNo>') def revision(revNo): return 'Revision Number %f' % revNo if __name__ == '__main__': app.run() \u4ecePython Shell\u8fd0\u884c\u4e0a\u9762\u7684\u4ee3\u7801\u3002\u8bbf\u95ee\u6d4f\u89c8\u5668\u4e2d\u7684URL http://localhost:5000/blog/11 \u3002 \u7ed9\u5b9a\u7684\u6570\u5b57\u7528\u4f5c**show_blog()**\u51fd\u6570\u7684\u53c2\u6570\u3002\u6d4f\u89c8\u5668\u663e\u793a\u4ee5\u4e0b\u8f93\u51fa\uff1a Blog Number 11 \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u6b64URL - http://localhost:5000/rev/1.1 **revision()**\u51fd\u6570\u5c06\u6d6e\u70b9\u6570\u4f5c\u4e3a\u53c2\u6570\u3002\u4ee5\u4e0b\u7ed3\u679c\u663e\u793a\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\uff1a Revision Number 1.100000 Flask\u7684URL\u89c4\u5219\u57fa\u4e8e**Werkzeug**\u7684\u8def\u7531\u6a21\u5757\u3002\u8fd9\u786e\u4fdd\u5f62\u6210\u7684URL\u662f\u552f\u4e00\u7684\uff0c\u5e76\u4e14\u57fa\u4e8eApache\u89c4\u5b9a\u7684\u5148\u4f8b\u3002 \u8003\u8651\u4ee5\u4e0b\u811a\u672c\u4e2d\u5b9a\u4e49\u7684\u89c4\u5219\uff1a from flask import Flask app = Flask(__name__) @app.route('/flask') def hello_flask(): return 'Hello Flask' @app.route('/python/') def hello_python(): return 'Hello Python' if __name__ == '__main__': app.run() \u8fd9\u4e24\u4e2a\u89c4\u5219\u770b\u8d77\u6765\u7c7b\u4f3c\uff0c\u4f46\u5728\u7b2c\u4e8c\u4e2a\u89c4\u5219\u4e2d\uff0c\u4f7f\u7528\u659c\u6760**\uff08/\uff09 \u3002\u56e0\u6b64\uff0c\u5b83\u6210\u4e3a\u4e00\u4e2a\u89c4\u8303\u7684URL\u3002\u56e0\u6b64\uff0c\u4f7f\u7528 **/python \u6216 /python/**\u8fd4\u56de\u76f8\u540c\u7684\u8f93\u51fa\u3002\u4f46\u662f\uff0c\u5982\u679c\u662f\u7b2c\u4e00\u4e2a\u89c4\u5219\uff0c /flask/ URL**\u4f1a\u4ea7\u751f\u201c404 Not Found\u201d\u9875\u9762\u3002","title":"Flask \u53d8\u91cf\u89c4\u5219"},{"location":"05-flask/Flask_todo/06-Flask%20URL%E6%9E%84%E5%BB%BA/","text":"Flask URL\u6784\u5efa \u00b6 Flask URL\u6784\u5efa \u00b6 **url_for()**\u51fd\u6570\u5bf9\u4e8e\u52a8\u6001\u6784\u5efa\u7279\u5b9a\u51fd\u6570\u7684URL\u975e\u5e38\u6709\u7528\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u51fd\u6570\u7684\u540d\u79f0\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u952e\u5b57\u53c2\u6570\uff0c\u6bcf\u4e2a\u53c2\u6570\u5bf9\u5e94\u4e8eURL\u7684\u53d8\u91cf\u90e8\u5206\u3002 \u4ee5\u4e0b\u811a\u672c\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528**url_for()**\u51fd\u6570\uff1a from flask import Flask, redirect, url_for app = Flask(name) @app.route('/admin') def hello_admin(): return 'Hello Admin' @app.route('/guest/') def hello_guest(guest): return 'Hello %s as Guest' % guest @app.route('/user/') def hello_user(name): if name =='admin': return redirect(url_for('hello_admin')) else: return redirect(url_for('hello_guest',guest = name)) if name == 'main': app.run(debug = True) \u4e0a\u8ff0\u811a\u672c\u6709\u4e00\u4e2a\u51fd\u6570**user(name)**\uff0c\u5b83\u63a5\u53d7\u6765\u81eaURL\u7684\u53c2\u6570\u7684\u503c\u3002 User()**\u51fd\u6570\u68c0\u67e5\u63a5\u6536\u7684\u53c2\u6570\u662f\u5426\u4e0e 'admin'**\u5339\u914d\u3002\u5982\u679c\u5339\u914d\uff0c\u5219\u4f7f\u7528**url_for()**\u5c06\u5e94\u7528\u7a0b\u5e8f\u91cd\u5b9a\u5411\u5230**hello_admin()**\u51fd\u6570\uff0c\u5426\u5219\u91cd\u5b9a\u5411\u5230\u5c06\u63a5\u6536\u7684\u53c2\u6570\u4f5c\u4e3aguest\u53c2\u6570\u4f20\u9012\u7ed9\u5b83\u7684**hello_guest()**\u51fd\u6570\u3002 \u4fdd\u5b58\u4e0a\u9762\u7684\u4ee3\u7801\u5e76\u4ecePython shell\u8fd0\u884c\u3002 \u6253\u5f00\u6d4f\u89c8\u5668\u5e76\u8f93\u5165URL - http://localhost:5000/user/admin \u6d4f\u89c8\u5668\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94\u662f\uff1a Hello Admin \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u4ee5\u4e0bURL - http://localhost:5000/user/mvl \u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94\u73b0\u5728\u66f4\u6539\u4e3a\uff1a Hello mvl as Guest","title":"06-Flask URL\u6784\u5efa"},{"location":"05-flask/Flask_todo/06-Flask%20URL%E6%9E%84%E5%BB%BA/#flask-url","text":"","title":"Flask URL\u6784\u5efa"},{"location":"05-flask/Flask_todo/06-Flask%20URL%E6%9E%84%E5%BB%BA/#flask-url_1","text":"**url_for()**\u51fd\u6570\u5bf9\u4e8e\u52a8\u6001\u6784\u5efa\u7279\u5b9a\u51fd\u6570\u7684URL\u975e\u5e38\u6709\u7528\u3002\u8be5\u51fd\u6570\u63a5\u53d7\u51fd\u6570\u7684\u540d\u79f0\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6216\u591a\u4e2a\u5173\u952e\u5b57\u53c2\u6570\uff0c\u6bcf\u4e2a\u53c2\u6570\u5bf9\u5e94\u4e8eURL\u7684\u53d8\u91cf\u90e8\u5206\u3002 \u4ee5\u4e0b\u811a\u672c\u6f14\u793a\u4e86\u5982\u4f55\u4f7f\u7528**url_for()**\u51fd\u6570\uff1a from flask import Flask, redirect, url_for app = Flask(name) @app.route('/admin') def hello_admin(): return 'Hello Admin' @app.route('/guest/') def hello_guest(guest): return 'Hello %s as Guest' % guest @app.route('/user/') def hello_user(name): if name =='admin': return redirect(url_for('hello_admin')) else: return redirect(url_for('hello_guest',guest = name)) if name == 'main': app.run(debug = True) \u4e0a\u8ff0\u811a\u672c\u6709\u4e00\u4e2a\u51fd\u6570**user(name)**\uff0c\u5b83\u63a5\u53d7\u6765\u81eaURL\u7684\u53c2\u6570\u7684\u503c\u3002 User()**\u51fd\u6570\u68c0\u67e5\u63a5\u6536\u7684\u53c2\u6570\u662f\u5426\u4e0e 'admin'**\u5339\u914d\u3002\u5982\u679c\u5339\u914d\uff0c\u5219\u4f7f\u7528**url_for()**\u5c06\u5e94\u7528\u7a0b\u5e8f\u91cd\u5b9a\u5411\u5230**hello_admin()**\u51fd\u6570\uff0c\u5426\u5219\u91cd\u5b9a\u5411\u5230\u5c06\u63a5\u6536\u7684\u53c2\u6570\u4f5c\u4e3aguest\u53c2\u6570\u4f20\u9012\u7ed9\u5b83\u7684**hello_guest()**\u51fd\u6570\u3002 \u4fdd\u5b58\u4e0a\u9762\u7684\u4ee3\u7801\u5e76\u4ecePython shell\u8fd0\u884c\u3002 \u6253\u5f00\u6d4f\u89c8\u5668\u5e76\u8f93\u5165URL - http://localhost:5000/user/admin \u6d4f\u89c8\u5668\u4e2d\u7684\u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94\u662f\uff1a Hello Admin \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u4ee5\u4e0bURL - http://localhost:5000/user/mvl \u5e94\u7528\u7a0b\u5e8f\u54cd\u5e94\u73b0\u5728\u66f4\u6539\u4e3a\uff1a Hello mvl as Guest","title":"Flask URL\u6784\u5efa"},{"location":"05-flask/Flask_todo/07-Flask%20HTTP%E6%96%B9%E6%B3%95/","text":"Flask HTTP\u65b9\u6cd5 \u00b6 Flask HTTP\u65b9\u6cd5 \u00b6 Http\u534f\u8bae\u662f\u4e07\u7ef4\u7f51\u4e2d\u6570\u636e\u901a\u4fe1\u7684\u57fa\u7840\u3002\u5728\u8be5\u534f\u8bae\u4e2d\u5b9a\u4e49\u4e86\u4ece\u6307\u5b9aURL\u68c0\u7d22\u6570\u636e\u7684\u4e0d\u540c\u65b9\u6cd5\u3002 \u4e0b\u8868\u603b\u7ed3\u4e86\u4e0d\u540c\u7684http\u65b9\u6cd5\uff1a \u5e8f\u53f7 \u65b9\u6cd5\u4e0e\u63cf\u8ff0 1 **GET**\u4ee5\u672a\u52a0\u5bc6\u7684\u5f62\u5f0f\u5c06\u6570\u636e\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\u3002 2 **HEAD**\u548cGET\u65b9\u6cd5\u76f8\u540c\uff0c\u4f46\u6ca1\u6709\u54cd\u5e94\u4f53\u3002 3 **POST**\u7528\u4e8e\u5c06HTML\u8868\u5355\u6570\u636e\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002POST\u65b9\u6cd5\u63a5\u6536\u7684\u6570\u636e\u4e0d\u7531\u670d\u52a1\u5668\u7f13\u5b58\u3002 4 **PUT**\u7528\u4e0a\u4f20\u7684\u5185\u5bb9\u66ff\u6362\u76ee\u6807\u8d44\u6e90\u7684\u6240\u6709\u5f53\u524d\u8868\u793a\u3002 5 DELETE \u5220\u9664\u7531URL\u7ed9\u51fa\u7684\u76ee\u6807\u8d44\u6e90\u7684\u6240\u6709\u5f53\u524d\u8868\u793a\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cFlask\u8def\u7531\u54cd\u5e94**GET**\u8bf7\u6c42\u3002\u4f46\u662f\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e3a**route()**\u88c5\u9970\u5668\u63d0\u4f9b\u65b9\u6cd5\u53c2\u6570\u6765\u66f4\u6539\u6b64\u9996\u9009\u9879\u3002 \u4e3a\u4e86\u6f14\u793a\u5728URL\u8def\u7531\u4e2d\u4f7f\u7528**POST**\u65b9\u6cd5\uff0c\u9996\u5148\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2aHTML\u8868\u5355\uff0c\u5e76\u4f7f\u7528**POST**\u65b9\u6cd5\u5c06\u8868\u5355\u6570\u636e\u53d1\u9001\u5230URL\u3002 \u5c06\u4ee5\u4e0b\u811a\u672c\u53e6\u5b58\u4e3alogin.html <html> <body> <form action = \"http://localhost:5000/login\" method = \"post\"> <p>Enter Name:</p> <p><input type = \"text\" name = \"nm\" /></p> <p><input type = \"submit\" value = \"submit\" /></p> </form> </body> </html> \u73b0\u5728\u5728Python shell\u4e2d\u8f93\u5165\u4ee5\u4e0b\u811a\u672c\uff1a from flask import Flask, redirect, url_for, request app = Flask(__name__) @app.route('/success/<name>') def success(name): return 'welcome %s' % name @app.route('/login',methods = ['POST', 'GET']) def login(): if request.method == 'POST': user = request.form['nm'] return redirect(url_for('success',name = user)) else: user = request.args.get('nm') return redirect(url_for('success',name = user)) if __name__ == '__main__': app.run(debug = True) \u5f00\u53d1\u670d\u52a1\u5668\u5f00\u59cb\u8fd0\u884c\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00**login.html**\uff0c\u5728\u6587\u672c\u5b57\u6bb5\u4e2d\u8f93\u5165name\uff0c\u7136\u540e\u5355\u51fb**\u63d0\u4ea4**\u3002 \u8868\u5355\u6570\u636e\u5c06POST\u5230\u8868\u5355\u6807\u7b7e\u7684action\u5b50\u53e5\u4e2d\u7684URL\u3002 ** http://localhost/login **\u6620\u5c04\u5230**login()**\u51fd\u6570\u3002\u7531\u4e8e\u670d\u52a1\u5668\u901a\u8fc7**POST**\u65b9\u6cd5\u63a5\u6536\u6570\u636e\uff0c\u56e0\u6b64\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u83b7\u5f97\u4ece\u8868\u5355\u6570\u636e\u83b7\u5f97\u7684\u201cnm\u201d\u53c2\u6570\u7684\u503c\uff1a user = request.form['nm'] \u5b83\u4f5c\u4e3a\u53d8\u91cf\u90e8\u5206\u4f20\u9012\u7ed9**'/ success'** URL\u3002\u6d4f\u89c8\u5668\u5728\u7a97\u53e3\u4e2d\u663e\u793a**welcome**\u6d88\u606f\u3002 \u5728**login.html**\u4e2d\u5c06\u65b9\u6cd5\u53c2\u6570\u66f4\u6539\u4e3a**'GET'**\uff0c\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u518d\u6b21\u6253\u5f00\u5b83\u3002\u670d\u52a1\u5668\u4e0a\u63a5\u6536\u7684\u6570\u636e\u662f\u901a\u8fc7**GET**\u65b9\u6cd5\u83b7\u5f97\u7684\u3002\u901a\u8fc7\u4ee5\u4e0b\u7684\u6b65\u9aa4\u83b7\u5f97'nm'\u53c2\u6570\u7684\u503c\uff1a User = request.args.get(\u2018nm\u2019) \u8fd9\u91cc\uff0c**args**\u662f\u5305\u542b\u8868\u5355\u53c2\u6570\u5bf9\u53ca\u5176\u5bf9\u5e94\u503c\u5bf9\u7684\u5217\u8868\u7684\u5b57\u5178\u5bf9\u8c61\u3002\u4e0e'nm'\u53c2\u6570\u5bf9\u5e94\u7684\u503c\u5c06\u50cf\u4e4b\u524d\u4e00\u6837\u4f20\u9012\u5230'/ success' URL\u3002","title":"07-Flask HTTP\u65b9\u6cd5"},{"location":"05-flask/Flask_todo/07-Flask%20HTTP%E6%96%B9%E6%B3%95/#flask-http","text":"","title":"Flask HTTP\u65b9\u6cd5"},{"location":"05-flask/Flask_todo/07-Flask%20HTTP%E6%96%B9%E6%B3%95/#flask-http_1","text":"Http\u534f\u8bae\u662f\u4e07\u7ef4\u7f51\u4e2d\u6570\u636e\u901a\u4fe1\u7684\u57fa\u7840\u3002\u5728\u8be5\u534f\u8bae\u4e2d\u5b9a\u4e49\u4e86\u4ece\u6307\u5b9aURL\u68c0\u7d22\u6570\u636e\u7684\u4e0d\u540c\u65b9\u6cd5\u3002 \u4e0b\u8868\u603b\u7ed3\u4e86\u4e0d\u540c\u7684http\u65b9\u6cd5\uff1a \u5e8f\u53f7 \u65b9\u6cd5\u4e0e\u63cf\u8ff0 1 **GET**\u4ee5\u672a\u52a0\u5bc6\u7684\u5f62\u5f0f\u5c06\u6570\u636e\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002\u6700\u5e38\u89c1\u7684\u65b9\u6cd5\u3002 2 **HEAD**\u548cGET\u65b9\u6cd5\u76f8\u540c\uff0c\u4f46\u6ca1\u6709\u54cd\u5e94\u4f53\u3002 3 **POST**\u7528\u4e8e\u5c06HTML\u8868\u5355\u6570\u636e\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002POST\u65b9\u6cd5\u63a5\u6536\u7684\u6570\u636e\u4e0d\u7531\u670d\u52a1\u5668\u7f13\u5b58\u3002 4 **PUT**\u7528\u4e0a\u4f20\u7684\u5185\u5bb9\u66ff\u6362\u76ee\u6807\u8d44\u6e90\u7684\u6240\u6709\u5f53\u524d\u8868\u793a\u3002 5 DELETE \u5220\u9664\u7531URL\u7ed9\u51fa\u7684\u76ee\u6807\u8d44\u6e90\u7684\u6240\u6709\u5f53\u524d\u8868\u793a\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cFlask\u8def\u7531\u54cd\u5e94**GET**\u8bf7\u6c42\u3002\u4f46\u662f\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e3a**route()**\u88c5\u9970\u5668\u63d0\u4f9b\u65b9\u6cd5\u53c2\u6570\u6765\u66f4\u6539\u6b64\u9996\u9009\u9879\u3002 \u4e3a\u4e86\u6f14\u793a\u5728URL\u8def\u7531\u4e2d\u4f7f\u7528**POST**\u65b9\u6cd5\uff0c\u9996\u5148\u8ba9\u6211\u4eec\u521b\u5efa\u4e00\u4e2aHTML\u8868\u5355\uff0c\u5e76\u4f7f\u7528**POST**\u65b9\u6cd5\u5c06\u8868\u5355\u6570\u636e\u53d1\u9001\u5230URL\u3002 \u5c06\u4ee5\u4e0b\u811a\u672c\u53e6\u5b58\u4e3alogin.html <html> <body> <form action = \"http://localhost:5000/login\" method = \"post\"> <p>Enter Name:</p> <p><input type = \"text\" name = \"nm\" /></p> <p><input type = \"submit\" value = \"submit\" /></p> </form> </body> </html> \u73b0\u5728\u5728Python shell\u4e2d\u8f93\u5165\u4ee5\u4e0b\u811a\u672c\uff1a from flask import Flask, redirect, url_for, request app = Flask(__name__) @app.route('/success/<name>') def success(name): return 'welcome %s' % name @app.route('/login',methods = ['POST', 'GET']) def login(): if request.method == 'POST': user = request.form['nm'] return redirect(url_for('success',name = user)) else: user = request.args.get('nm') return redirect(url_for('success',name = user)) if __name__ == '__main__': app.run(debug = True) \u5f00\u53d1\u670d\u52a1\u5668\u5f00\u59cb\u8fd0\u884c\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00**login.html**\uff0c\u5728\u6587\u672c\u5b57\u6bb5\u4e2d\u8f93\u5165name\uff0c\u7136\u540e\u5355\u51fb**\u63d0\u4ea4**\u3002 \u8868\u5355\u6570\u636e\u5c06POST\u5230\u8868\u5355\u6807\u7b7e\u7684action\u5b50\u53e5\u4e2d\u7684URL\u3002 ** http://localhost/login **\u6620\u5c04\u5230**login()**\u51fd\u6570\u3002\u7531\u4e8e\u670d\u52a1\u5668\u901a\u8fc7**POST**\u65b9\u6cd5\u63a5\u6536\u6570\u636e\uff0c\u56e0\u6b64\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u83b7\u5f97\u4ece\u8868\u5355\u6570\u636e\u83b7\u5f97\u7684\u201cnm\u201d\u53c2\u6570\u7684\u503c\uff1a user = request.form['nm'] \u5b83\u4f5c\u4e3a\u53d8\u91cf\u90e8\u5206\u4f20\u9012\u7ed9**'/ success'** URL\u3002\u6d4f\u89c8\u5668\u5728\u7a97\u53e3\u4e2d\u663e\u793a**welcome**\u6d88\u606f\u3002 \u5728**login.html**\u4e2d\u5c06\u65b9\u6cd5\u53c2\u6570\u66f4\u6539\u4e3a**'GET'**\uff0c\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u518d\u6b21\u6253\u5f00\u5b83\u3002\u670d\u52a1\u5668\u4e0a\u63a5\u6536\u7684\u6570\u636e\u662f\u901a\u8fc7**GET**\u65b9\u6cd5\u83b7\u5f97\u7684\u3002\u901a\u8fc7\u4ee5\u4e0b\u7684\u6b65\u9aa4\u83b7\u5f97'nm'\u53c2\u6570\u7684\u503c\uff1a User = request.args.get(\u2018nm\u2019) \u8fd9\u91cc\uff0c**args**\u662f\u5305\u542b\u8868\u5355\u53c2\u6570\u5bf9\u53ca\u5176\u5bf9\u5e94\u503c\u5bf9\u7684\u5217\u8868\u7684\u5b57\u5178\u5bf9\u8c61\u3002\u4e0e'nm'\u53c2\u6570\u5bf9\u5e94\u7684\u503c\u5c06\u50cf\u4e4b\u524d\u4e00\u6837\u4f20\u9012\u5230'/ success' URL\u3002","title":"Flask HTTP\u65b9\u6cd5"},{"location":"05-flask/Flask_todo/08-Flask%20%E6%A8%A1%E6%9D%BF/","text":"Flask \u6a21\u677f \u00b6 Flask \u6a21\u677f \u00b6 \u53ef\u4ee5\u4ee5HTML\u7684\u5f62\u5f0f\u8fd4\u56de\u7ed1\u5b9a\u5230\u67d0\u4e2aURL\u7684\u51fd\u6570\u7684\u8f93\u51fa\u3002\u4f8b\u5982\uff0c\u5728\u4ee5\u4e0b\u811a\u672c\u4e2d\uff0c**hello()**\u51fd\u6570\u5c06\u4f7f\u7528 \u6807\u7b7e\u5448\u73b0**'Hello World'\u3002 ** \u00b6 from flask import Flask app = Flask(name) @app.route('/') def index(): return ''Hello World'' if name == 'main': app.run(debug = True) \u4f46\u662f\uff0c\u4ecePython\u4ee3\u7801\u751f\u6210HTML\u5185\u5bb9\u5f88\u9ebb\u70e6\uff0c\u5c24\u5176\u662f\u5728\u9700\u8981\u653e\u7f6e\u53d8\u91cf\u6570\u636e\u548cPython\u8bed\u8a00\u5143\u7d20\uff08\u5982\u6761\u4ef6\u6216\u5faa\u73af\uff09\u65f6\u3002\u8fd9\u9700\u8981\u7ecf\u5e38\u4eceHTML\u4e2d\u8f6c\u4e49\u3002 \u8fd9\u662f\u53ef\u4ee5\u5229\u7528Flask\u6240\u57fa\u4e8e\u7684**Jinja2**\u6a21\u677f\u5f15\u64ce\u7684\u5730\u65b9\u3002\u800c\u4e0d\u662f\u4ece\u51fd\u6570\u8fd4\u56de\u786c\u7f16\u7801HTML\uff0c\u53ef\u4ee5\u901a\u8fc7**render_template()**\u51fd\u6570\u5448\u73b0HTML\u6587\u4ef6\u3002 from flask import Flask\uff0crender_template app = Flask(name) @app.route('/') def index(): return render_template(\u2018hello.html\u2019) if name == 'main': app.run(debug = True) Flask\u5c06\u5c1d\u8bd5\u5728templates\u6587\u4ef6\u5939\u4e2d\u627e\u5230HTML\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5b58\u5728\u4e8e\u6b64\u811a\u672c\u6240\u5728\u7684\u6587\u4ef6\u5939\u4e2d\u3002 Application folder Hello.py templates hello.html \u672f\u8bed**\u2018web templating system\uff08web\u6a21\u677f\u7cfb\u7edf\uff09\u2019**\u6307\u7684\u662f\u8bbe\u8ba1\u4e00\u4e2aHTML\u811a\u672c\uff0c\u5176\u4e2d\u53ef\u4ee5\u52a8\u6001\u63d2\u5165\u53d8\u91cf\u6570\u636e\u3002web\u6a21\u677f\u7cfb\u7edf\u5305\u62ec\u6a21\u677f\u5f15\u64ce\uff0c\u67d0\u79cd\u6570\u636e\u6e90\u548c\u6a21\u677f\u5904\u7406\u5668\u3002 Flask\u4f7f\u7528**jinga2**\u6a21\u677f\u5f15\u64ce\u3002Web\u6a21\u677f\u5305\u542b\u7528\u4e8e\u53d8\u91cf\u548c\u8868\u8fbe\u5f0f\uff08\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\u4e3aPython\u8868\u8fbe\u5f0f\uff09\u7684HTML\u8bed\u6cd5\u6563\u5e03\u5360\u4f4d\u7b26\uff0c\u8fd9\u4e9b\u662f\u5728\u5448\u73b0\u6a21\u677f\u65f6\u66ff\u6362\u7684\u503c\u3002 \u4ee5\u4e0b\u4ee3\u7801\u5728templates\u6587\u4ef6\u5939\u4e2d\u53e6\u5b58\u4e3a**hello.html** \u3002 <h1>Hello {{ name }}!</h1> \u63a5\u4e0b\u6765\uff0c\u4ecePython shell\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\uff1a from flask import Flask, render_template app = Flask(name) @app.route('/hello/') def hello_name(user): return render_template('hello.html', name = user) if name == 'main': app.run(debug = True) \u5f53\u5f00\u53d1\u670d\u52a1\u5668\u5f00\u59cb\u8fd0\u884c\u65f6\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u5e76\u8f93\u5165URL - http://localhost:5000/hello/mvl URL\u7684**\u53d8\u91cf**\u90e8\u5206\u63d2\u5165**{{name}}**\u5360\u4f4d\u7b26\u3002 **Jinja2**\u6a21\u677f\u5f15\u64ce\u4f7f\u7528\u4ee5\u4e0b\u5206\u9694\u7b26\u4eceHTML\u8f6c\u4e49\u3002 {% ... %}\u7528\u4e8e\u8bed\u53e5 {{ ... }}\u7528\u4e8e\u8868\u8fbe\u5f0f\u53ef\u4ee5\u6253\u5370\u5230\u6a21\u677f\u8f93\u51fa {# ... #}\u7528\u4e8e\u672a\u5305\u542b\u5728\u6a21\u677f\u8f93\u51fa\u4e2d\u7684\u6ce8\u91ca # ... ##\u7528\u4e8e\u884c\u8bed\u53e5 \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6f14\u793a\u4e86\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u3002**hello()**\u51fd\u6570\u7684URL\u89c4\u5219\u63a5\u53d7\u6574\u6570\u53c2\u6570\u3002\u5b83\u88ab\u4f20\u9012\u5230**hello.html**\u6a21\u677f\u3002\u5176\u4e2d\uff0c\u6bd4\u8f83\u63a5\u6536\u7684\u6570\u5b57\uff08marks\uff09\u7684\u503c\uff08\u5927\u4e8e\u6216\u5c0f\u4e8e50\uff09\uff0c\u56e0\u6b64\u6709\u6761\u4ef6\u5730\u5448\u73b0HTML\u3002 Python\u811a\u672c\u5982\u4e0b\uff1a from flask import Flask, render_template app = Flask(name) @app.route('/hello/') def hello_name(score): return render_template('hello.html', marks = score) if name == 'main': app.run(debug = True) **hello.html**\u7684HTML\u6a21\u677f\u811a\u672c\u5982\u4e0b\uff1a {% if marks>50 %} <h1> Your result is pass!</h1> {% else %} <h1>Your result is fail</h1> {% endif %} \u8bf7\u6ce8\u610f\uff0c\u6761\u4ef6\u8bed\u53e5**if-else**\u548c**endif**\u5305\u542b\u5728\u5206\u9694\u7b26{\uff05..\uff05}\u4e2d\u3002 \u8fd0\u884cPython\u811a\u672c\u5e76\u8bbf\u95eeURL http://localhost/hello/60 \uff0c\u7136\u540e\u8bbf\u95ee** http://localhost/hello/30 **\uff0c\u4ee5\u67e5\u770bHTML\u7684\u8f93\u51fa\u662f\u5426\u6709\u6761\u4ef6\u5730\u66f4\u6539\u3002 Python\u5faa\u73af\u7ed3\u6784\u4e5f\u53ef\u4ee5\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u3002\u5728\u4ee5\u4e0b\u811a\u672c\u4e2d\uff0c\u5f53\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00URL http://localhost:5000/result **\u65f6\uff0c**result()**\u51fd\u6570\u4f1a\u5c06\u5b57\u5178\u5bf9\u8c61\u53d1\u9001\u5230\u6a21\u677f**results.html \u3002 **result.html**\u7684Template\u90e8\u5206\u4f7f\u7528**for\u5faa\u73af**\u5c06\u5b57\u5178\u5bf9\u8c61**result{}**\u7684\u952e\u548c\u503c\u5bf9\u5448\u73b0\u4e3aHTML\u8868\u7684\u5355\u5143\u683c\u3002 \u4ecePython shell\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff1a from flask import Flask, render_template app = Flask(name) @app.route('/result') def result(): dict = {'phy':50,'che':60,'maths':70} return render_template('result.html', result = dict) if name == 'main': app.run(debug = True) \u5c06\u4ee5\u4e0bHTML\u811a\u672c\u4fdd\u5b58\u4e3atemplates\u6587\u4ef6\u5939\u4e2d\u7684**result.html**\uff1a {% for key, value in result.iteritems() %} <tr> <th> {{ key }} </th> <td> {{ value }} </td> </tr> {% endfor %} ` ` \u8fd9\u91cc\uff0c\u5bf9\u5e94\u4e8e**For**\u5faa\u73af\u7684Python\u8bed\u53e5\u518d\u6b21\u5305\u542b\u5728{\uff05..\uff05}\u4e2d\uff0c\u800c\u8868\u8fbe\u5f0f**key\u548c****value**\u653e\u5728{{}}\u4e2d\u3002 \u5f00\u53d1\u5f00\u59cb\u8fd0\u884c\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00**http://localhost:5000/result**\u5373\u53ef\u83b7\u5f97\u4ee5\u4e0b\u8f93\u51fa\uff1a ![Table Template Example](https://atts.w3cschool.cn/attachments/tuploads/flask/table_template_example.jpg)","title":"08-Flask \u6a21\u677f"},{"location":"05-flask/Flask_todo/08-Flask%20%E6%A8%A1%E6%9D%BF/#flask","text":"","title":"Flask \u6a21\u677f"},{"location":"05-flask/Flask_todo/08-Flask%20%E6%A8%A1%E6%9D%BF/#flask_1","text":"\u53ef\u4ee5\u4ee5HTML\u7684\u5f62\u5f0f\u8fd4\u56de\u7ed1\u5b9a\u5230\u67d0\u4e2aURL\u7684\u51fd\u6570\u7684\u8f93\u51fa\u3002\u4f8b\u5982\uff0c\u5728\u4ee5\u4e0b\u811a\u672c\u4e2d\uff0c**hello()**\u51fd\u6570\u5c06\u4f7f\u7528","title":"Flask \u6a21\u677f"},{"location":"05-flask/Flask_todo/08-Flask%20%E6%A8%A1%E6%9D%BF/#hello-world","text":"from flask import Flask app = Flask(name) @app.route('/') def index(): return ''Hello World'' if name == 'main': app.run(debug = True) \u4f46\u662f\uff0c\u4ecePython\u4ee3\u7801\u751f\u6210HTML\u5185\u5bb9\u5f88\u9ebb\u70e6\uff0c\u5c24\u5176\u662f\u5728\u9700\u8981\u653e\u7f6e\u53d8\u91cf\u6570\u636e\u548cPython\u8bed\u8a00\u5143\u7d20\uff08\u5982\u6761\u4ef6\u6216\u5faa\u73af\uff09\u65f6\u3002\u8fd9\u9700\u8981\u7ecf\u5e38\u4eceHTML\u4e2d\u8f6c\u4e49\u3002 \u8fd9\u662f\u53ef\u4ee5\u5229\u7528Flask\u6240\u57fa\u4e8e\u7684**Jinja2**\u6a21\u677f\u5f15\u64ce\u7684\u5730\u65b9\u3002\u800c\u4e0d\u662f\u4ece\u51fd\u6570\u8fd4\u56de\u786c\u7f16\u7801HTML\uff0c\u53ef\u4ee5\u901a\u8fc7**render_template()**\u51fd\u6570\u5448\u73b0HTML\u6587\u4ef6\u3002 from flask import Flask\uff0crender_template app = Flask(name) @app.route('/') def index(): return render_template(\u2018hello.html\u2019) if name == 'main': app.run(debug = True) Flask\u5c06\u5c1d\u8bd5\u5728templates\u6587\u4ef6\u5939\u4e2d\u627e\u5230HTML\u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u5b58\u5728\u4e8e\u6b64\u811a\u672c\u6240\u5728\u7684\u6587\u4ef6\u5939\u4e2d\u3002 Application folder Hello.py templates hello.html \u672f\u8bed**\u2018web templating system\uff08web\u6a21\u677f\u7cfb\u7edf\uff09\u2019**\u6307\u7684\u662f\u8bbe\u8ba1\u4e00\u4e2aHTML\u811a\u672c\uff0c\u5176\u4e2d\u53ef\u4ee5\u52a8\u6001\u63d2\u5165\u53d8\u91cf\u6570\u636e\u3002web\u6a21\u677f\u7cfb\u7edf\u5305\u62ec\u6a21\u677f\u5f15\u64ce\uff0c\u67d0\u79cd\u6570\u636e\u6e90\u548c\u6a21\u677f\u5904\u7406\u5668\u3002 Flask\u4f7f\u7528**jinga2**\u6a21\u677f\u5f15\u64ce\u3002Web\u6a21\u677f\u5305\u542b\u7528\u4e8e\u53d8\u91cf\u548c\u8868\u8fbe\u5f0f\uff08\u5728\u8fd9\u4e9b\u60c5\u51b5\u4e0b\u4e3aPython\u8868\u8fbe\u5f0f\uff09\u7684HTML\u8bed\u6cd5\u6563\u5e03\u5360\u4f4d\u7b26\uff0c\u8fd9\u4e9b\u662f\u5728\u5448\u73b0\u6a21\u677f\u65f6\u66ff\u6362\u7684\u503c\u3002 \u4ee5\u4e0b\u4ee3\u7801\u5728templates\u6587\u4ef6\u5939\u4e2d\u53e6\u5b58\u4e3a**hello.html** \u3002 <h1>Hello {{ name }}!</h1> \u63a5\u4e0b\u6765\uff0c\u4ecePython shell\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\uff1a from flask import Flask, render_template app = Flask(name) @app.route('/hello/') def hello_name(user): return render_template('hello.html', name = user) if name == 'main': app.run(debug = True) \u5f53\u5f00\u53d1\u670d\u52a1\u5668\u5f00\u59cb\u8fd0\u884c\u65f6\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u5e76\u8f93\u5165URL - http://localhost:5000/hello/mvl URL\u7684**\u53d8\u91cf**\u90e8\u5206\u63d2\u5165**{{name}}**\u5360\u4f4d\u7b26\u3002 **Jinja2**\u6a21\u677f\u5f15\u64ce\u4f7f\u7528\u4ee5\u4e0b\u5206\u9694\u7b26\u4eceHTML\u8f6c\u4e49\u3002 {% ... %}\u7528\u4e8e\u8bed\u53e5 {{ ... }}\u7528\u4e8e\u8868\u8fbe\u5f0f\u53ef\u4ee5\u6253\u5370\u5230\u6a21\u677f\u8f93\u51fa {# ... #}\u7528\u4e8e\u672a\u5305\u542b\u5728\u6a21\u677f\u8f93\u51fa\u4e2d\u7684\u6ce8\u91ca # ... ##\u7528\u4e8e\u884c\u8bed\u53e5 \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6f14\u793a\u4e86\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u6761\u4ef6\u8bed\u53e5\u3002**hello()**\u51fd\u6570\u7684URL\u89c4\u5219\u63a5\u53d7\u6574\u6570\u53c2\u6570\u3002\u5b83\u88ab\u4f20\u9012\u5230**hello.html**\u6a21\u677f\u3002\u5176\u4e2d\uff0c\u6bd4\u8f83\u63a5\u6536\u7684\u6570\u5b57\uff08marks\uff09\u7684\u503c\uff08\u5927\u4e8e\u6216\u5c0f\u4e8e50\uff09\uff0c\u56e0\u6b64\u6709\u6761\u4ef6\u5730\u5448\u73b0HTML\u3002 Python\u811a\u672c\u5982\u4e0b\uff1a from flask import Flask, render_template app = Flask(name) @app.route('/hello/') def hello_name(score): return render_template('hello.html', marks = score) if name == 'main': app.run(debug = True) **hello.html**\u7684HTML\u6a21\u677f\u811a\u672c\u5982\u4e0b\uff1a {% if marks>50 %} <h1> Your result is pass!</h1> {% else %} <h1>Your result is fail</h1> {% endif %} \u8bf7\u6ce8\u610f\uff0c\u6761\u4ef6\u8bed\u53e5**if-else**\u548c**endif**\u5305\u542b\u5728\u5206\u9694\u7b26{\uff05..\uff05}\u4e2d\u3002 \u8fd0\u884cPython\u811a\u672c\u5e76\u8bbf\u95eeURL http://localhost/hello/60 \uff0c\u7136\u540e\u8bbf\u95ee** http://localhost/hello/30 **\uff0c\u4ee5\u67e5\u770bHTML\u7684\u8f93\u51fa\u662f\u5426\u6709\u6761\u4ef6\u5730\u66f4\u6539\u3002 Python\u5faa\u73af\u7ed3\u6784\u4e5f\u53ef\u4ee5\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u3002\u5728\u4ee5\u4e0b\u811a\u672c\u4e2d\uff0c\u5f53\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00URL http://localhost:5000/result **\u65f6\uff0c**result()**\u51fd\u6570\u4f1a\u5c06\u5b57\u5178\u5bf9\u8c61\u53d1\u9001\u5230\u6a21\u677f**results.html \u3002 **result.html**\u7684Template\u90e8\u5206\u4f7f\u7528**for\u5faa\u73af**\u5c06\u5b57\u5178\u5bf9\u8c61**result{}**\u7684\u952e\u548c\u503c\u5bf9\u5448\u73b0\u4e3aHTML\u8868\u7684\u5355\u5143\u683c\u3002 \u4ecePython shell\u8fd0\u884c\u4ee5\u4e0b\u4ee3\u7801\uff1a from flask import Flask, render_template app = Flask(name) @app.route('/result') def result(): dict = {'phy':50,'che':60,'maths':70} return render_template('result.html', result = dict) if name == 'main': app.run(debug = True) \u5c06\u4ee5\u4e0bHTML\u811a\u672c\u4fdd\u5b58\u4e3atemplates\u6587\u4ef6\u5939\u4e2d\u7684**result.html**\uff1a {% for key, value in result.iteritems() %} <tr> <th> {{ key }} </th> <td> {{ value }} </td> </tr> {% endfor %} ` ` \u8fd9\u91cc\uff0c\u5bf9\u5e94\u4e8e**For**\u5faa\u73af\u7684Python\u8bed\u53e5\u518d\u6b21\u5305\u542b\u5728{\uff05..\uff05}\u4e2d\uff0c\u800c\u8868\u8fbe\u5f0f**key\u548c****value**\u653e\u5728{{}}\u4e2d\u3002 \u5f00\u53d1\u5f00\u59cb\u8fd0\u884c\u540e\uff0c\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00**http://localhost:5000/result**\u5373\u53ef\u83b7\u5f97\u4ee5\u4e0b\u8f93\u51fa\uff1a ![Table Template Example](https://atts.w3cschool.cn/attachments/tuploads/flask/table_template_example.jpg)","title":"\u6807\u7b7e\u5448\u73b0**'Hello World'\u3002 **"},{"location":"05-flask/Flask_todo/09-Flask%20%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/","text":"Flask \u9759\u6001\u6587\u4ef6 \u00b6 Flask \u9759\u6001\u6587\u4ef6 \u00b6 Web\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u9700\u8981\u9759\u6001\u6587\u4ef6\uff0c\u4f8b\u5982**javascript**\u6587\u4ef6\u6216\u652f\u6301\u7f51\u9875\u663e\u793a\u7684**CSS**\u6587\u4ef6\u3002\u901a\u5e38\uff0c\u914d\u7f6eWeb\u670d\u52a1\u5668\u5e76\u4e3a\u60a8\u63d0\u4f9b\u8fd9\u4e9b\u670d\u52a1\uff0c\u4f46\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b\u6587\u4ef6\u662f\u4ece\u60a8\u7684\u5305\u6216\u6a21\u5757\u65c1\u8fb9\u7684*static*\u6587\u4ef6\u5939\u4e2d\u63d0\u4f9b\uff0c\u5b83\u5c06\u5728\u5e94\u7528\u7a0b\u5e8f\u7684**/static**\u4e2d\u63d0\u4f9b\u3002 \u7279\u6b8a\u7aef\u70b9'static'\u7528\u4e8e\u751f\u6210\u9759\u6001\u6587\u4ef6\u7684URL\u3002 \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u5728**index.html**\u4e2d\u7684HTML\u6309\u94ae\u7684**OnClick**\u4e8b\u4ef6\u4e0a\u8c03\u7528**hello.js**\u4e2d\u5b9a\u4e49\u7684**javascript**\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728Flask\u5e94\u7528\u7a0b\u5e8f\u7684**\u201c/\u201d**URL\u4e0a\u5448\u73b0\u3002 from flask import Flask, render_template app = Flask(__name__) @app.route(\"/\") def index(): return render_template(\"index.html\") if __name__ == '__main__': app.run(debug = True) **index.html**\u7684HTML\u811a\u672c\u5982\u4e0b\u6240\u793a\uff1a <html> <head> <script type = \"text/javascript\" src = \"{{ url_for('static', filename = 'hello.js') }}\" ></script> </head> <body> <input type = \"button\" onclick = \"sayHello()\" value = \"Say Hello\" /> </body> </html> **Hello.js**\u5305\u542b**sayHello()**\u51fd\u6570\u3002 function sayHello() { alert(\"Hello World\") }","title":"09-Flask \u9759\u6001\u6587\u4ef6"},{"location":"05-flask/Flask_todo/09-Flask%20%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#flask","text":"","title":"Flask \u9759\u6001\u6587\u4ef6"},{"location":"05-flask/Flask_todo/09-Flask%20%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/#flask_1","text":"Web\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u9700\u8981\u9759\u6001\u6587\u4ef6\uff0c\u4f8b\u5982**javascript**\u6587\u4ef6\u6216\u652f\u6301\u7f51\u9875\u663e\u793a\u7684**CSS**\u6587\u4ef6\u3002\u901a\u5e38\uff0c\u914d\u7f6eWeb\u670d\u52a1\u5668\u5e76\u4e3a\u60a8\u63d0\u4f9b\u8fd9\u4e9b\u670d\u52a1\uff0c\u4f46\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u8fd9\u4e9b\u6587\u4ef6\u662f\u4ece\u60a8\u7684\u5305\u6216\u6a21\u5757\u65c1\u8fb9\u7684*static*\u6587\u4ef6\u5939\u4e2d\u63d0\u4f9b\uff0c\u5b83\u5c06\u5728\u5e94\u7528\u7a0b\u5e8f\u7684**/static**\u4e2d\u63d0\u4f9b\u3002 \u7279\u6b8a\u7aef\u70b9'static'\u7528\u4e8e\u751f\u6210\u9759\u6001\u6587\u4ef6\u7684URL\u3002 \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u5728**index.html**\u4e2d\u7684HTML\u6309\u94ae\u7684**OnClick**\u4e8b\u4ef6\u4e0a\u8c03\u7528**hello.js**\u4e2d\u5b9a\u4e49\u7684**javascript**\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5728Flask\u5e94\u7528\u7a0b\u5e8f\u7684**\u201c/\u201d**URL\u4e0a\u5448\u73b0\u3002 from flask import Flask, render_template app = Flask(__name__) @app.route(\"/\") def index(): return render_template(\"index.html\") if __name__ == '__main__': app.run(debug = True) **index.html**\u7684HTML\u811a\u672c\u5982\u4e0b\u6240\u793a\uff1a <html> <head> <script type = \"text/javascript\" src = \"{{ url_for('static', filename = 'hello.js') }}\" ></script> </head> <body> <input type = \"button\" onclick = \"sayHello()\" value = \"Say Hello\" /> </body> </html> **Hello.js**\u5305\u542b**sayHello()**\u51fd\u6570\u3002 function sayHello() { alert(\"Hello World\") }","title":"Flask \u9759\u6001\u6587\u4ef6"},{"location":"05-flask/Flask_todo/10-Flask%20Request%E5%AF%B9%E8%B1%A1/","text":"Flask Request\u5bf9\u8c61 \u00b6 \u6765\u81ea\u5ba2\u6237\u7aef\u7f51\u9875\u7684\u6570\u636e\u4f5c\u4e3a\u5168\u5c40\u8bf7\u6c42\u5bf9\u8c61\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002\u4e3a\u4e86\u5904\u7406\u8bf7\u6c42\u6570\u636e\uff0c\u5e94\u8be5\u4eceFlask\u6a21\u5757\u5bfc\u5165\u3002 Request\u5bf9\u8c61\u7684\u91cd\u8981\u5c5e\u6027\u5982\u4e0b\u6240\u5217\uff1a Form - \u5b83\u662f\u4e00\u4e2a\u5b57\u5178\u5bf9\u8c61\uff0c\u5305\u542b\u8868\u5355\u53c2\u6570\u53ca\u5176\u503c\u7684\u952e\u548c\u503c\u5bf9\u3002 args - \u89e3\u6790\u67e5\u8be2\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u5b83\u662f\u95ee\u53f7\uff08\uff1f\uff09\u4e4b\u540e\u7684URL\u7684\u4e00\u90e8\u5206\u3002 Cookies - \u4fdd\u5b58Cookie\u540d\u79f0\u548c\u503c\u7684\u5b57\u5178\u5bf9\u8c61\u3002 files - \u4e0e\u4e0a\u4f20\u6587\u4ef6\u6709\u5173\u7684\u6570\u636e\u3002 method - \u5f53\u524d\u8bf7\u6c42\u65b9\u6cd5\u3002","title":"10-Flask Request\u5bf9\u8c61"},{"location":"05-flask/Flask_todo/10-Flask%20Request%E5%AF%B9%E8%B1%A1/#flask-request","text":"\u6765\u81ea\u5ba2\u6237\u7aef\u7f51\u9875\u7684\u6570\u636e\u4f5c\u4e3a\u5168\u5c40\u8bf7\u6c42\u5bf9\u8c61\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002\u4e3a\u4e86\u5904\u7406\u8bf7\u6c42\u6570\u636e\uff0c\u5e94\u8be5\u4eceFlask\u6a21\u5757\u5bfc\u5165\u3002 Request\u5bf9\u8c61\u7684\u91cd\u8981\u5c5e\u6027\u5982\u4e0b\u6240\u5217\uff1a Form - \u5b83\u662f\u4e00\u4e2a\u5b57\u5178\u5bf9\u8c61\uff0c\u5305\u542b\u8868\u5355\u53c2\u6570\u53ca\u5176\u503c\u7684\u952e\u548c\u503c\u5bf9\u3002 args - \u89e3\u6790\u67e5\u8be2\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u5b83\u662f\u95ee\u53f7\uff08\uff1f\uff09\u4e4b\u540e\u7684URL\u7684\u4e00\u90e8\u5206\u3002 Cookies - \u4fdd\u5b58Cookie\u540d\u79f0\u548c\u503c\u7684\u5b57\u5178\u5bf9\u8c61\u3002 files - \u4e0e\u4e0a\u4f20\u6587\u4ef6\u6709\u5173\u7684\u6570\u636e\u3002 method - \u5f53\u524d\u8bf7\u6c42\u65b9\u6cd5\u3002","title":"Flask Request\u5bf9\u8c61"},{"location":"05-flask/Flask_todo/11-Flask%20%E5%B0%86%E8%A1%A8%E5%8D%95%E6%95%B0%E6%8D%AE%E5%8F%91%E9%80%81%E5%88%B0%E6%A8%A1%E6%9D%BF/","text":"Flask \u5c06\u8868\u5355\u6570\u636e\u53d1\u9001\u5230\u6a21\u677f \u00b6 Flask \u5c06\u8868\u5355\u6570\u636e\u53d1\u9001\u5230\u6a21\u677f \u00b6 \u6211\u4eec\u5df2\u7ecf\u770b\u5230\uff0c\u53ef\u4ee5\u5728URL\u89c4\u5219\u4e2d\u6307\u5b9ahttp\u65b9\u6cd5\u3002\u89e6\u53d1\u51fd\u6570\u63a5\u6536\u7684**Form**\u6570\u636e\u53ef\u4ee5\u4ee5\u5b57\u5178\u5bf9\u8c61\u7684\u5f62\u5f0f\u6536\u96c6\u5b83\u5e76\u5c06\u5176\u8f6c\u53d1\u5230\u6a21\u677f\u4ee5\u5728\u76f8\u5e94\u7684\u7f51\u9875\u4e0a\u5448\u73b0\u5b83\u3002 \u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c '/' URL**\u4f1a\u5448\u73b0\u5177\u6709\u8868\u5355\u7684\u7f51\u9875\uff08student.html\uff09\u3002\u586b\u5165\u7684\u6570\u636e\u4f1a\u53d1\u5e03\u5230\u89e6\u53d1 **result()**\u51fd\u6570\u7684 '/result' URL**\u3002 results()**\u51fd\u6570\u6536\u96c6\u5b57\u5178\u5bf9\u8c61\u4e2d\u7684**request.form**\u4e2d\u5b58\u5728\u7684\u8868\u5355\u6570\u636e\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9**result.html \u3002 \u8be5\u6a21\u677f\u52a8\u6001\u5448\u73b0**\u8868\u5355**\u6570\u636e\u7684HTML\u8868\u683c\u3002 \u4e0b\u9762\u7ed9\u51fa\u7684\u662f\u5e94\u7528\u7a0b\u5e8f\u7684Python\u4ee3\u7801\uff1a from flask import Flask, render_template, request app = Flask(name) @app.route('/') def student(): return render_template('student.html') @app.route('/result',methods = ['POST', 'GET']) def result(): if request.method == 'POST': result = request.form return render_template(\"result.html\",result = result) if name == 'main': app.run(debug = True) \u4e0b\u9762\u7ed9\u51fa\u7684\u662f**student.html**\u7684HTML\u811a\u672c\u3002 <form action = \"http://localhost:5000/result&quot; method = \"POST\"> <p>Name <input type = \"text\" name = \"Name\" /></p> <p>Physics <input type = \"text\" name = \"Physics\" /></p> <p>Chemistry <input type = \"text\" name = \"chemistry\" /></p> <p>Maths <input type =\"text\" name = \"Mathematics\" /></p> <p><input type = \"submit\" value = \"submit\" /></p> </form> \u4e0b\u9762\u7ed9\u51fa\u4e86\u6a21\u677f**\uff08result.html\uff09**\u7684\u4ee3\u7801\uff1a {% for key, value in result.items() %} <tr> <th> {{ key }} </th> <td> {{ value }} </td> </tr> {% endfor %} ` ` \u8fd0\u884cPython\u811a\u672c\uff0c\u5e76\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165URL **http://localhost:5000/**\u3002 ![Submit Marks](https://atts.w3cschool.cn/attachments/tuploads/flask/submit_marks.jpg) \u5f53\u70b9\u51fb**\u63d0\u4ea4**\u6309\u94ae\u65f6\uff0c\u8868\u5355\u6570\u636e\u4ee5HTML\u8868\u683c\u7684\u5f62\u5f0f\u5448\u73b0\u5728**result.html**\u4e0a\u3002 ![Marks Table](https://atts.w3cschool.cn/attachments/tuploads/flask/marks_table.jpg)","title":"11-Flask \u5c06\u8868\u5355\u6570\u636e\u53d1\u9001\u5230\u6a21\u677f"},{"location":"05-flask/Flask_todo/11-Flask%20%E5%B0%86%E8%A1%A8%E5%8D%95%E6%95%B0%E6%8D%AE%E5%8F%91%E9%80%81%E5%88%B0%E6%A8%A1%E6%9D%BF/#flask","text":"","title":"Flask \u5c06\u8868\u5355\u6570\u636e\u53d1\u9001\u5230\u6a21\u677f"},{"location":"05-flask/Flask_todo/11-Flask%20%E5%B0%86%E8%A1%A8%E5%8D%95%E6%95%B0%E6%8D%AE%E5%8F%91%E9%80%81%E5%88%B0%E6%A8%A1%E6%9D%BF/#flask_1","text":"\u6211\u4eec\u5df2\u7ecf\u770b\u5230\uff0c\u53ef\u4ee5\u5728URL\u89c4\u5219\u4e2d\u6307\u5b9ahttp\u65b9\u6cd5\u3002\u89e6\u53d1\u51fd\u6570\u63a5\u6536\u7684**Form**\u6570\u636e\u53ef\u4ee5\u4ee5\u5b57\u5178\u5bf9\u8c61\u7684\u5f62\u5f0f\u6536\u96c6\u5b83\u5e76\u5c06\u5176\u8f6c\u53d1\u5230\u6a21\u677f\u4ee5\u5728\u76f8\u5e94\u7684\u7f51\u9875\u4e0a\u5448\u73b0\u5b83\u3002 \u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c '/' URL**\u4f1a\u5448\u73b0\u5177\u6709\u8868\u5355\u7684\u7f51\u9875\uff08student.html\uff09\u3002\u586b\u5165\u7684\u6570\u636e\u4f1a\u53d1\u5e03\u5230\u89e6\u53d1 **result()**\u51fd\u6570\u7684 '/result' URL**\u3002 results()**\u51fd\u6570\u6536\u96c6\u5b57\u5178\u5bf9\u8c61\u4e2d\u7684**request.form**\u4e2d\u5b58\u5728\u7684\u8868\u5355\u6570\u636e\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9**result.html \u3002 \u8be5\u6a21\u677f\u52a8\u6001\u5448\u73b0**\u8868\u5355**\u6570\u636e\u7684HTML\u8868\u683c\u3002 \u4e0b\u9762\u7ed9\u51fa\u7684\u662f\u5e94\u7528\u7a0b\u5e8f\u7684Python\u4ee3\u7801\uff1a from flask import Flask, render_template, request app = Flask(name) @app.route('/') def student(): return render_template('student.html') @app.route('/result',methods = ['POST', 'GET']) def result(): if request.method == 'POST': result = request.form return render_template(\"result.html\",result = result) if name == 'main': app.run(debug = True) \u4e0b\u9762\u7ed9\u51fa\u7684\u662f**student.html**\u7684HTML\u811a\u672c\u3002 <form action = \"http://localhost:5000/result&quot; method = \"POST\"> <p>Name <input type = \"text\" name = \"Name\" /></p> <p>Physics <input type = \"text\" name = \"Physics\" /></p> <p>Chemistry <input type = \"text\" name = \"chemistry\" /></p> <p>Maths <input type =\"text\" name = \"Mathematics\" /></p> <p><input type = \"submit\" value = \"submit\" /></p> </form> \u4e0b\u9762\u7ed9\u51fa\u4e86\u6a21\u677f**\uff08result.html\uff09**\u7684\u4ee3\u7801\uff1a {% for key, value in result.items() %} <tr> <th> {{ key }} </th> <td> {{ value }} </td> </tr> {% endfor %} ` ` \u8fd0\u884cPython\u811a\u672c\uff0c\u5e76\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165URL **http://localhost:5000/**\u3002 ![Submit Marks](https://atts.w3cschool.cn/attachments/tuploads/flask/submit_marks.jpg) \u5f53\u70b9\u51fb**\u63d0\u4ea4**\u6309\u94ae\u65f6\uff0c\u8868\u5355\u6570\u636e\u4ee5HTML\u8868\u683c\u7684\u5f62\u5f0f\u5448\u73b0\u5728**result.html**\u4e0a\u3002 ![Marks Table](https://atts.w3cschool.cn/attachments/tuploads/flask/marks_table.jpg)","title":"Flask \u5c06\u8868\u5355\u6570\u636e\u53d1\u9001\u5230\u6a21\u677f"},{"location":"05-flask/Flask_todo/12-Flask%20Cookies/","text":"Flask Cookies \u00b6 Flask Cookies \u00b6 Cookie\u4ee5\u6587\u672c\u6587\u4ef6\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u5ba2\u6237\u7aef\u7684\u8ba1\u7b97\u673a\u4e0a\u3002\u5176\u76ee\u7684\u662f\u8bb0\u4f4f\u548c\u8ddf\u8e2a\u4e0e\u5ba2\u6237\u4f7f\u7528\u76f8\u5173\u7684\u6570\u636e\uff0c\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u8bbf\u95ee\u8005\u4f53\u9a8c\u548c\u7f51\u7ad9\u7edf\u8ba1\u4fe1\u606f\u3002 **Request\u5bf9\u8c61**\u5305\u542bCookie\u7684\u5c5e\u6027\u3002\u5b83\u662f\u6240\u6709cookie\u53d8\u91cf\u53ca\u5176\u5bf9\u5e94\u503c\u7684\u5b57\u5178\u5bf9\u8c61\uff0c\u5ba2\u6237\u7aef\u5df2\u4f20\u8f93\u3002\u9664\u6b64\u4e4b\u5916\uff0ccookie\u8fd8\u5b58\u50a8\u5176\u7f51\u7ad9\u7684\u5230\u671f\u65f6\u95f4\uff0c\u8def\u5f84\u548c\u57df\u540d\u3002 \u5728Flask\u4e2d\uff0c\u5bf9\u54cd\u5e94\u5bf9\u8c61\u8bbe\u7f6ecookie\u3002\u4f7f\u7528**make_response()**\u51fd\u6570\u4ece\u89c6\u56fe\u51fd\u6570\u7684\u8fd4\u56de\u503c\u83b7\u53d6\u54cd\u5e94\u5bf9\u8c61\u3002\u4e4b\u540e\uff0c\u4f7f\u7528\u54cd\u5e94\u5bf9\u8c61\u7684**set_cookie()**\u51fd\u6570\u6765\u5b58\u50a8cookie\u3002 \u8bfb\u56decookie\u5f88\u5bb9\u6613\u3002request.cookies\u5c5e\u6027\u7684**get()**\u65b9\u6cd5\u7528\u4e8e\u8bfb\u53d6cookie\u3002 \u5728\u4ee5\u4e0bFlask\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5f53\u60a8\u8bbf\u95ee**'/'** URL\u65f6\uff0c\u4f1a\u6253\u5f00\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u5355\u3002 @app.route('/') def index(): return render_template('index.html') \u6b64HTML\u9875\u9762\u5305\u542b\u4e00\u4e2a\u6587\u672c\u8f93\u5165\u3002 <html> <body> <form action = \"/setcookie\" method = \"POST\"> <p><h3>Enter userID</h3></p> <p><input type = 'text' name = 'nm'/></p> <p><input type = 'submit' value = 'Login'/></p> </form> </body> </html> \u8868\u5355\u53d1\u5e03\u5230**'/ setcookie'** URL\u3002\u76f8\u5173\u8054\u7684\u89c6\u56fe\u51fd\u6570\u8bbe\u7f6eCookie\u540d\u79f0**userID**\u5e76\u5448\u73b0\u53e6\u4e00\u4e2a\u9875\u9762\u3002 @app.route('/setcookie', methods = ['POST', 'GET']) def setcookie(): if request.method == 'POST': user = request.form['nm'] resp = make_response(render_template('readcookie.html')) resp.set_cookie('userID', user) return resp **'readcookie.html'**\u5305\u542b\u6307\u5411\u53e6\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570**getcookie()**\u7684\u8d85\u94fe\u63a5\uff0c\u5b83\u8bfb\u56de\u5e76\u5728\u6d4f\u89c8\u5668\u4e2d\u663e\u793aCookie\u503c\u3002 @app.route('/getcookie') def getcookie(): name = request.cookies.get('userID') return '<h1>welcome '&plus;name&plus;'</h1>' \u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u8bbf\u95ee** http://localhost:5000/ ** \u8bbe\u7f6ecookie\u7684\u7ed3\u679c\u663e\u793a\u4e3a\u8fd9\u6837\uff1a \u8bfb\u56decookie\u7684\u8f93\u51fa\u5982\u4e0b\u6240\u793a\uff1a","title":"12-Flask Cookies"},{"location":"05-flask/Flask_todo/12-Flask%20Cookies/#flask-cookies","text":"","title":"Flask Cookies"},{"location":"05-flask/Flask_todo/12-Flask%20Cookies/#flask-cookies_1","text":"Cookie\u4ee5\u6587\u672c\u6587\u4ef6\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u5ba2\u6237\u7aef\u7684\u8ba1\u7b97\u673a\u4e0a\u3002\u5176\u76ee\u7684\u662f\u8bb0\u4f4f\u548c\u8ddf\u8e2a\u4e0e\u5ba2\u6237\u4f7f\u7528\u76f8\u5173\u7684\u6570\u636e\uff0c\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u8bbf\u95ee\u8005\u4f53\u9a8c\u548c\u7f51\u7ad9\u7edf\u8ba1\u4fe1\u606f\u3002 **Request\u5bf9\u8c61**\u5305\u542bCookie\u7684\u5c5e\u6027\u3002\u5b83\u662f\u6240\u6709cookie\u53d8\u91cf\u53ca\u5176\u5bf9\u5e94\u503c\u7684\u5b57\u5178\u5bf9\u8c61\uff0c\u5ba2\u6237\u7aef\u5df2\u4f20\u8f93\u3002\u9664\u6b64\u4e4b\u5916\uff0ccookie\u8fd8\u5b58\u50a8\u5176\u7f51\u7ad9\u7684\u5230\u671f\u65f6\u95f4\uff0c\u8def\u5f84\u548c\u57df\u540d\u3002 \u5728Flask\u4e2d\uff0c\u5bf9\u54cd\u5e94\u5bf9\u8c61\u8bbe\u7f6ecookie\u3002\u4f7f\u7528**make_response()**\u51fd\u6570\u4ece\u89c6\u56fe\u51fd\u6570\u7684\u8fd4\u56de\u503c\u83b7\u53d6\u54cd\u5e94\u5bf9\u8c61\u3002\u4e4b\u540e\uff0c\u4f7f\u7528\u54cd\u5e94\u5bf9\u8c61\u7684**set_cookie()**\u51fd\u6570\u6765\u5b58\u50a8cookie\u3002 \u8bfb\u56decookie\u5f88\u5bb9\u6613\u3002request.cookies\u5c5e\u6027\u7684**get()**\u65b9\u6cd5\u7528\u4e8e\u8bfb\u53d6cookie\u3002 \u5728\u4ee5\u4e0bFlask\u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u5f53\u60a8\u8bbf\u95ee**'/'** URL\u65f6\uff0c\u4f1a\u6253\u5f00\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u5355\u3002 @app.route('/') def index(): return render_template('index.html') \u6b64HTML\u9875\u9762\u5305\u542b\u4e00\u4e2a\u6587\u672c\u8f93\u5165\u3002 <html> <body> <form action = \"/setcookie\" method = \"POST\"> <p><h3>Enter userID</h3></p> <p><input type = 'text' name = 'nm'/></p> <p><input type = 'submit' value = 'Login'/></p> </form> </body> </html> \u8868\u5355\u53d1\u5e03\u5230**'/ setcookie'** URL\u3002\u76f8\u5173\u8054\u7684\u89c6\u56fe\u51fd\u6570\u8bbe\u7f6eCookie\u540d\u79f0**userID**\u5e76\u5448\u73b0\u53e6\u4e00\u4e2a\u9875\u9762\u3002 @app.route('/setcookie', methods = ['POST', 'GET']) def setcookie(): if request.method == 'POST': user = request.form['nm'] resp = make_response(render_template('readcookie.html')) resp.set_cookie('userID', user) return resp **'readcookie.html'**\u5305\u542b\u6307\u5411\u53e6\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570**getcookie()**\u7684\u8d85\u94fe\u63a5\uff0c\u5b83\u8bfb\u56de\u5e76\u5728\u6d4f\u89c8\u5668\u4e2d\u663e\u793aCookie\u503c\u3002 @app.route('/getcookie') def getcookie(): name = request.cookies.get('userID') return '<h1>welcome '&plus;name&plus;'</h1>' \u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u8bbf\u95ee** http://localhost:5000/ ** \u8bbe\u7f6ecookie\u7684\u7ed3\u679c\u663e\u793a\u4e3a\u8fd9\u6837\uff1a \u8bfb\u56decookie\u7684\u8f93\u51fa\u5982\u4e0b\u6240\u793a\uff1a","title":"Flask Cookies"},{"location":"05-flask/Flask_todo/13-Flask%20%E4%BC%9A%E8%AF%9D/","text":"Flask \u4f1a\u8bdd \u00b6 Flask Sessions\uff08\u4f1a\u8bdd\uff09 \u00b6 \u4e0eCookie\u4e0d\u540c\uff0c**Session\uff08\u4f1a\u8bdd\uff09**\u6570\u636e\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\u3002\u4f1a\u8bdd\u662f\u5ba2\u6237\u7aef\u767b\u5f55\u5230\u670d\u52a1\u5668\u5e76\u6ce8\u9500\u670d\u52a1\u5668\u7684\u65f6\u95f4\u95f4\u9694\u3002\u9700\u8981\u5728\u8be5\u4f1a\u8bdd\u4e2d\u4fdd\u5b58\u7684\u6570\u636e\u4f1a\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\u7684\u4e34\u65f6\u76ee\u5f55\u4e2d\u3002 \u4e3a\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7684\u4f1a\u8bdd\u5206\u914d**\u4f1a\u8bddID**\u3002\u4f1a\u8bdd\u6570\u636e\u5b58\u50a8\u5728cookie\u7684\u9876\u90e8\uff0c\u670d\u52a1\u5668\u4ee5\u52a0\u5bc6\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u7b7e\u540d\u3002\u5bf9\u4e8e\u6b64\u52a0\u5bc6\uff0cFlask\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4e00\u4e2a\u5b9a\u4e49\u7684**SECRET_KEY**\u3002 Session\u5bf9\u8c61\u4e5f\u662f\u4e00\u4e2a\u5b57\u5178\u5bf9\u8c61\uff0c\u5305\u542b\u4f1a\u8bdd\u53d8\u91cf\u548c\u5173\u8054\u503c\u7684\u952e\u503c\u5bf9\u3002 \u4f8b\u5982\uff0c\u8981\u8bbe\u7f6e\u4e00\u4e2a**'username'**\u4f1a\u8bdd\u53d8\u91cf\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\uff1a Session[\u2018username\u2019] = \u2019admin\u2019 \u8981\u91ca\u653e\u4f1a\u8bdd\u53d8\u91cf\uff0c\u8bf7\u4f7f\u7528**pop()**\u65b9\u6cd5\u3002 session.pop('username', None) \u4ee5\u4e0b\u4ee3\u7801\u662fFlask\u4e2d\u7684\u4f1a\u8bdd\u5de5\u4f5c\u7684\u7b80\u5355\u6f14\u793a\u3002URL '/'**\u53ea\u662f\u63d0\u793a\u7528\u6237\u767b\u5f55\uff0c\u56e0\u4e3a\u672a\u8bbe\u7f6e\u4f1a\u8bdd\u53d8\u91cf 'username'**\u3002 @app.route('/') def index(): if 'username' in session: username = session['username'] return 'Logged in as ' &plus; username &plus; '<br>' &plus; \\ \"<b><a href = '/logout'>click here to log out</a></b>\" return \"You are not logged in <br><a href = '/login'></b>\" &plus; \\ \"click here to log in</b></a>\" \u5f53\u7528\u6237\u6d4f\u89c8\u5230\u201c/login\u201dlogin()\u89c6\u56fe\u51fd\u6570\u65f6\uff0c\u56e0\u4e3a\u5b83\u662f\u901a\u8fc7GET\u65b9\u6cd5\u8c03\u7528\u7684\uff0c\u6240\u4ee5\u5c06\u6253\u5f00\u4e00\u4e2a\u767b\u5f55\u8868\u5355\u3002 \u8868\u5355\u53d1\u9001\u56de**'/login' \uff0c\u73b0\u5728\u4f1a\u8bdd\u53d8\u91cf\u5df2\u8bbe\u7f6e\u3002\u5e94\u7528\u7a0b\u5e8f\u91cd\u5b9a\u5411\u5230 '/' \u3002\u6b64\u65f6\u4f1a\u8bdd\u53d8\u91cf 'username'**\u88ab\u627e\u5230\u3002 @app.route('/login', methods = ['GET', 'POST']) def login(): if request.method == 'POST': session['username'] = request.form['username'] return redirect(url_for('index')) return ''' <form action = \"\" method = \"post\"> <p><input type = text name = username/></p> <p<<input type = submit value = Login/></p> </form> ''' \u5e94\u7528\u7a0b\u5e8f\u8fd8\u5305\u542b\u4e00\u4e2a**logout() \u89c6\u56fe\u51fd\u6570\uff0c\u5b83\u4f1a\u5f39\u51fa 'username' \u4f1a\u8bdd\u53d8\u91cf\u3002\u56e0\u6b64\uff0c '/'** URL\u518d\u6b21\u663e\u793a\u5f00\u59cb\u9875\u9762\u3002 @app.route('/logout') def logout(): # remove the username from the session if it is there session.pop('username', None) return redirect(url_for('index')) \u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u5e76\u8bbf\u95ee\u4e3b\u9875\u3002\uff08\u786e\u4fdd\u8bbe\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684**secret_key**\uff09 from flask import Flask, session, redirect, url_for, escape, request app = Flask(__name__) app.secret_key = 'any random string\u2019 \u8f93\u51fa\u5c06\u663e\u793a\u5982\u4e0b\u3002\u70b9\u51fb**\u201c\u70b9\u51fb\u6b64\u5904\u767b\u5f55\u201d**\u94fe\u63a5\u3002 \u94fe\u63a5\u5c06\u88ab\u5b9a\u5411\u5230\u53e6\u4e00\u4e2a\u5c4f\u5e55\u3002\u952e\u5165\u201cadmin\u201d\u3002 \u5c4f\u5e55\u5c06\u663e\u793a\u6d88\u606f**\u201c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u767b\u5f55\u201d**\u3002","title":"13-Flask \u4f1a\u8bdd"},{"location":"05-flask/Flask_todo/13-Flask%20%E4%BC%9A%E8%AF%9D/#flask","text":"","title":"Flask \u4f1a\u8bdd"},{"location":"05-flask/Flask_todo/13-Flask%20%E4%BC%9A%E8%AF%9D/#flask-sessions","text":"\u4e0eCookie\u4e0d\u540c\uff0c**Session\uff08\u4f1a\u8bdd\uff09**\u6570\u636e\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\u3002\u4f1a\u8bdd\u662f\u5ba2\u6237\u7aef\u767b\u5f55\u5230\u670d\u52a1\u5668\u5e76\u6ce8\u9500\u670d\u52a1\u5668\u7684\u65f6\u95f4\u95f4\u9694\u3002\u9700\u8981\u5728\u8be5\u4f1a\u8bdd\u4e2d\u4fdd\u5b58\u7684\u6570\u636e\u4f1a\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\u7684\u4e34\u65f6\u76ee\u5f55\u4e2d\u3002 \u4e3a\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7684\u4f1a\u8bdd\u5206\u914d**\u4f1a\u8bddID**\u3002\u4f1a\u8bdd\u6570\u636e\u5b58\u50a8\u5728cookie\u7684\u9876\u90e8\uff0c\u670d\u52a1\u5668\u4ee5\u52a0\u5bc6\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u7b7e\u540d\u3002\u5bf9\u4e8e\u6b64\u52a0\u5bc6\uff0cFlask\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u4e00\u4e2a\u5b9a\u4e49\u7684**SECRET_KEY**\u3002 Session\u5bf9\u8c61\u4e5f\u662f\u4e00\u4e2a\u5b57\u5178\u5bf9\u8c61\uff0c\u5305\u542b\u4f1a\u8bdd\u53d8\u91cf\u548c\u5173\u8054\u503c\u7684\u952e\u503c\u5bf9\u3002 \u4f8b\u5982\uff0c\u8981\u8bbe\u7f6e\u4e00\u4e2a**'username'**\u4f1a\u8bdd\u53d8\u91cf\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\uff1a Session[\u2018username\u2019] = \u2019admin\u2019 \u8981\u91ca\u653e\u4f1a\u8bdd\u53d8\u91cf\uff0c\u8bf7\u4f7f\u7528**pop()**\u65b9\u6cd5\u3002 session.pop('username', None) \u4ee5\u4e0b\u4ee3\u7801\u662fFlask\u4e2d\u7684\u4f1a\u8bdd\u5de5\u4f5c\u7684\u7b80\u5355\u6f14\u793a\u3002URL '/'**\u53ea\u662f\u63d0\u793a\u7528\u6237\u767b\u5f55\uff0c\u56e0\u4e3a\u672a\u8bbe\u7f6e\u4f1a\u8bdd\u53d8\u91cf 'username'**\u3002 @app.route('/') def index(): if 'username' in session: username = session['username'] return 'Logged in as ' &plus; username &plus; '<br>' &plus; \\ \"<b><a href = '/logout'>click here to log out</a></b>\" return \"You are not logged in <br><a href = '/login'></b>\" &plus; \\ \"click here to log in</b></a>\" \u5f53\u7528\u6237\u6d4f\u89c8\u5230\u201c/login\u201dlogin()\u89c6\u56fe\u51fd\u6570\u65f6\uff0c\u56e0\u4e3a\u5b83\u662f\u901a\u8fc7GET\u65b9\u6cd5\u8c03\u7528\u7684\uff0c\u6240\u4ee5\u5c06\u6253\u5f00\u4e00\u4e2a\u767b\u5f55\u8868\u5355\u3002 \u8868\u5355\u53d1\u9001\u56de**'/login' \uff0c\u73b0\u5728\u4f1a\u8bdd\u53d8\u91cf\u5df2\u8bbe\u7f6e\u3002\u5e94\u7528\u7a0b\u5e8f\u91cd\u5b9a\u5411\u5230 '/' \u3002\u6b64\u65f6\u4f1a\u8bdd\u53d8\u91cf 'username'**\u88ab\u627e\u5230\u3002 @app.route('/login', methods = ['GET', 'POST']) def login(): if request.method == 'POST': session['username'] = request.form['username'] return redirect(url_for('index')) return ''' <form action = \"\" method = \"post\"> <p><input type = text name = username/></p> <p<<input type = submit value = Login/></p> </form> ''' \u5e94\u7528\u7a0b\u5e8f\u8fd8\u5305\u542b\u4e00\u4e2a**logout() \u89c6\u56fe\u51fd\u6570\uff0c\u5b83\u4f1a\u5f39\u51fa 'username' \u4f1a\u8bdd\u53d8\u91cf\u3002\u56e0\u6b64\uff0c '/'** URL\u518d\u6b21\u663e\u793a\u5f00\u59cb\u9875\u9762\u3002 @app.route('/logout') def logout(): # remove the username from the session if it is there session.pop('username', None) return redirect(url_for('index')) \u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u5e76\u8bbf\u95ee\u4e3b\u9875\u3002\uff08\u786e\u4fdd\u8bbe\u7f6e\u5e94\u7528\u7a0b\u5e8f\u7684**secret_key**\uff09 from flask import Flask, session, redirect, url_for, escape, request app = Flask(__name__) app.secret_key = 'any random string\u2019 \u8f93\u51fa\u5c06\u663e\u793a\u5982\u4e0b\u3002\u70b9\u51fb**\u201c\u70b9\u51fb\u6b64\u5904\u767b\u5f55\u201d**\u94fe\u63a5\u3002 \u94fe\u63a5\u5c06\u88ab\u5b9a\u5411\u5230\u53e6\u4e00\u4e2a\u5c4f\u5e55\u3002\u952e\u5165\u201cadmin\u201d\u3002 \u5c4f\u5e55\u5c06\u663e\u793a\u6d88\u606f**\u201c\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u767b\u5f55\u201d**\u3002","title":"Flask Sessions\uff08\u4f1a\u8bdd\uff09"},{"location":"05-flask/Flask_todo/14-Flask%20%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E9%94%99%E8%AF%AF/","text":"Flask \u91cd\u5b9a\u5411\u548c\u9519\u8bef \u00b6 Flask \u91cd\u5b9a\u5411\u548c\u9519\u8bef \u00b6 Flask\u7c7b\u6709\u4e00\u4e2a**redirect()**\u51fd\u6570\u3002\u8c03\u7528\u65f6\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff0c\u5e76\u5c06\u7528\u6237\u91cd\u5b9a\u5411\u5230\u5177\u6709\u6307\u5b9a\u72b6\u6001\u4ee3\u7801\u7684\u53e6\u4e00\u4e2a\u76ee\u6807\u4f4d\u7f6e\u3002 **redirect()**\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a Flask.redirect(location, statuscode, response) \u5728\u4e0a\u8ff0\u51fd\u6570\u4e2d\uff1a **location**\u53c2\u6570\u662f\u5e94\u8be5\u91cd\u5b9a\u5411\u54cd\u5e94\u7684URL\u3002 **statuscode**\u53d1\u9001\u5230\u6d4f\u89c8\u5668\u6807\u5934\uff0c\u9ed8\u8ba4\u4e3a302\u3002 **response**\u53c2\u6570\u7528\u4e8e\u5b9e\u4f8b\u5316\u54cd\u5e94\u3002 \u4ee5\u4e0b\u72b6\u6001\u4ee3\u7801\u5df2\u6807\u51c6\u5316\uff1a HTTP_300_MULTIPLE_CHOICES HTTP_301_MOVED_PERMANENTLY HTTP_302_FOUND HTTP_303_SEE_OTHER HTTP_304_NOT_MODIFIED HTTP_305_USE_PROXY HTTP_306_RESERVED HTTP_307_TEMPORARY_REDIRECT \u9ed8\u8ba4\u72b6\u6001**\u4ee3\u7801\u4e3a**302 \uff0c\u8868\u793a**'found'**\u3002 \u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c**redirect()**\u51fd\u6570\u7528\u4e8e\u5728\u767b\u5f55\u5c1d\u8bd5\u5931\u8d25\u65f6\u518d\u6b21\u663e\u793a\u767b\u5f55\u9875\u9762\u3002 from flask import Flask, redirect, url_for, render_template, request # Initialize the Flask application app = Flask(__name__) @app.route('/') def index(): return render_template('log_in.html') @app.route('/login',methods = ['POST', 'GET']) def login(): if request.method == 'POST' and request.form['username'] == 'admin' : return redirect(url_for('success')) return redirect(url_for('index')) @app.route('/success') def success(): return 'logged in successfully' if __name__ == '__main__': app.run(debug = True) Flask\u7c7b\u5177\u6709\u5e26\u6709\u9519\u8bef\u4ee3\u7801\u7684**abort()**\u51fd\u6570\u3002 Flask.abort(code) **Code**\u53c2\u6570\u91c7\u7528\u4ee5\u4e0b\u503c\u4e4b\u4e00\uff1a 400 - \u7528\u4e8e\u9519\u8bef\u8bf7\u6c42 401 - \u7528\u4e8e\u672a\u8eab\u4efd\u9a8c\u8bc1\u7684 403 - Forbidden 404 - \u672a\u4e0d\u5230 406 - \u8868\u793a\u4e0d\u63a5\u53d7 415 - \u7528\u4e8e\u4e0d\u652f\u6301\u7684\u5a92\u4f53\u7c7b\u578b 429 - \u8bf7\u6c42\u8fc7\u591a \u8ba9\u6211\u4eec\u5bf9\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684**login() \u51fd\u6570\u7a0d\u4f5c\u66f4\u6539\u3002\u5982\u679c\u8981\u663e\u793a 'Unauthurized' \u9875\u9762\uff0c\u8bf7\u5c06\u5176\u66ff\u6362\u4e3a\u8c03\u7528**abort(401) \uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u663e\u793a\u767b\u5f55\u9875\u9762\u3002 from flask import Flask, redirect, url_for, render_template, request, abort app = Flask(__name__) @app.route('/') def index(): return render_template('log_in.html') @app.route('/login',methods = ['POST', 'GET']) def login(): if request.method == 'POST': if request.form['username'] == 'admin' : return redirect(url_for('success')) else: abort(401) else: return redirect(url_for('index')) @app.route('/success') def success(): return 'logged in successfully' if __name__ == '__main__': app.run(debug = True)","title":"14-Flask \u91cd\u5b9a\u5411\u548c\u9519\u8bef"},{"location":"05-flask/Flask_todo/14-Flask%20%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E9%94%99%E8%AF%AF/#flask","text":"","title":"Flask \u91cd\u5b9a\u5411\u548c\u9519\u8bef"},{"location":"05-flask/Flask_todo/14-Flask%20%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E9%94%99%E8%AF%AF/#flask_1","text":"Flask\u7c7b\u6709\u4e00\u4e2a**redirect()**\u51fd\u6570\u3002\u8c03\u7528\u65f6\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\uff0c\u5e76\u5c06\u7528\u6237\u91cd\u5b9a\u5411\u5230\u5177\u6709\u6307\u5b9a\u72b6\u6001\u4ee3\u7801\u7684\u53e6\u4e00\u4e2a\u76ee\u6807\u4f4d\u7f6e\u3002 **redirect()**\u51fd\u6570\u7684\u539f\u578b\u5982\u4e0b\uff1a Flask.redirect(location, statuscode, response) \u5728\u4e0a\u8ff0\u51fd\u6570\u4e2d\uff1a **location**\u53c2\u6570\u662f\u5e94\u8be5\u91cd\u5b9a\u5411\u54cd\u5e94\u7684URL\u3002 **statuscode**\u53d1\u9001\u5230\u6d4f\u89c8\u5668\u6807\u5934\uff0c\u9ed8\u8ba4\u4e3a302\u3002 **response**\u53c2\u6570\u7528\u4e8e\u5b9e\u4f8b\u5316\u54cd\u5e94\u3002 \u4ee5\u4e0b\u72b6\u6001\u4ee3\u7801\u5df2\u6807\u51c6\u5316\uff1a HTTP_300_MULTIPLE_CHOICES HTTP_301_MOVED_PERMANENTLY HTTP_302_FOUND HTTP_303_SEE_OTHER HTTP_304_NOT_MODIFIED HTTP_305_USE_PROXY HTTP_306_RESERVED HTTP_307_TEMPORARY_REDIRECT \u9ed8\u8ba4\u72b6\u6001**\u4ee3\u7801\u4e3a**302 \uff0c\u8868\u793a**'found'**\u3002 \u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c**redirect()**\u51fd\u6570\u7528\u4e8e\u5728\u767b\u5f55\u5c1d\u8bd5\u5931\u8d25\u65f6\u518d\u6b21\u663e\u793a\u767b\u5f55\u9875\u9762\u3002 from flask import Flask, redirect, url_for, render_template, request # Initialize the Flask application app = Flask(__name__) @app.route('/') def index(): return render_template('log_in.html') @app.route('/login',methods = ['POST', 'GET']) def login(): if request.method == 'POST' and request.form['username'] == 'admin' : return redirect(url_for('success')) return redirect(url_for('index')) @app.route('/success') def success(): return 'logged in successfully' if __name__ == '__main__': app.run(debug = True) Flask\u7c7b\u5177\u6709\u5e26\u6709\u9519\u8bef\u4ee3\u7801\u7684**abort()**\u51fd\u6570\u3002 Flask.abort(code) **Code**\u53c2\u6570\u91c7\u7528\u4ee5\u4e0b\u503c\u4e4b\u4e00\uff1a 400 - \u7528\u4e8e\u9519\u8bef\u8bf7\u6c42 401 - \u7528\u4e8e\u672a\u8eab\u4efd\u9a8c\u8bc1\u7684 403 - Forbidden 404 - \u672a\u4e0d\u5230 406 - \u8868\u793a\u4e0d\u63a5\u53d7 415 - \u7528\u4e8e\u4e0d\u652f\u6301\u7684\u5a92\u4f53\u7c7b\u578b 429 - \u8bf7\u6c42\u8fc7\u591a \u8ba9\u6211\u4eec\u5bf9\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684**login() \u51fd\u6570\u7a0d\u4f5c\u66f4\u6539\u3002\u5982\u679c\u8981\u663e\u793a 'Unauthurized' \u9875\u9762\uff0c\u8bf7\u5c06\u5176\u66ff\u6362\u4e3a\u8c03\u7528**abort(401) \uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u663e\u793a\u767b\u5f55\u9875\u9762\u3002 from flask import Flask, redirect, url_for, render_template, request, abort app = Flask(__name__) @app.route('/') def index(): return render_template('log_in.html') @app.route('/login',methods = ['POST', 'GET']) def login(): if request.method == 'POST': if request.form['username'] == 'admin' : return redirect(url_for('success')) else: abort(401) else: return redirect(url_for('index')) @app.route('/success') def success(): return 'logged in successfully' if __name__ == '__main__': app.run(debug = True)","title":"Flask \u91cd\u5b9a\u5411\u548c\u9519\u8bef"},{"location":"05-flask/Flask_todo/15-Flask%20%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/","text":"Flask \u6d88\u606f\u95ea\u73b0 \u00b6 Flask \u6d88\u606f\u95ea\u73b0 \u00b6 \u4e00\u4e2a\u597d\u7684\u57fa\u4e8eGUI\u7684\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5411\u7528\u6237\u63d0\u4f9b\u6709\u5173\u4ea4\u4e92\u7684\u53cd\u9988\u3002\u4f8b\u5982\uff0c\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u5bf9\u8bdd\u6846\u6216\u6d88\u606f\u6846\uff0cJavaScript\u4f7f\u7528\u8b66\u62a5\u7528\u4e8e\u7c7b\u4f3c\u76ee\u7684\u3002 \u5728Flask Web\u5e94\u7528\u7a0b\u5e8f\u4e2d\u751f\u6210\u8fd9\u6837\u7684\u4fe1\u606f\u6027\u6d88\u606f\u5f88\u5bb9\u6613\u3002Flask\u6846\u67b6\u7684\u95ea\u73b0\u7cfb\u7edf\u53ef\u4ee5\u5728\u4e00\u4e2a\u89c6\u56fe\u4e2d\u521b\u5efa\u6d88\u606f\uff0c\u5e76\u5728\u540d\u4e3a**next**\u7684\u89c6\u56fe\u51fd\u6570\u4e2d\u5448\u73b0\u5b83\u3002 Flask\u6a21\u5757\u5305\u542b**flash()**\u65b9\u6cd5\u3002\u5b83\u5c06\u6d88\u606f\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u8bf7\u6c42\uff0c\u8be5\u8bf7\u6c42\u901a\u5e38\u662f\u4e00\u4e2a\u6a21\u677f\u3002 flash(message, category) \u5176\u4e2d\uff0c **message**\u53c2\u6570\u662f\u8981\u95ea\u73b0\u7684\u5b9e\u9645\u6d88\u606f\u3002 **category**\u53c2\u6570\u662f\u53ef\u9009\u7684\u3002\u5b83\u53ef\u4ee5\u662f\u201cerror\u201d\uff0c\u201cinfo\u201d\u6216\u201cwarning\u201d\u3002 \u4e3a\u4e86\u4ece\u4f1a\u8bdd\u4e2d\u5220\u9664\u6d88\u606f\uff0c\u6a21\u677f\u8c03\u7528**get_flashed_messages()**\u3002 get_flashed_messages(with_categories, category_filter) \u4e24\u4e2a\u53c2\u6570\u90fd\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u63a5\u6536\u5230\u7684\u6d88\u606f\u5177\u6709\u7c7b\u522b\uff0c\u5219\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5143\u7ec4\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ec5\u7528\u4e8e\u663e\u793a\u7279\u5b9a\u6d88\u606f\u3002 \u4ee5\u4e0b\u95ea\u73b0\u5728\u6a21\u677f\u4e2d\u63a5\u6536\u6d88\u606f\u3002 {% with messages = get_flashed_messages() %} {% if messages %} {% for message in messages %} {{ message }} {% endfor %} {% endif %} {% endwith %} \u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6f14\u793aFlask\u4e2d\u7684\u95ea\u73b0\u673a\u5236\u3002\u5728\u4ee5\u4e0b\u4ee3\u7801\u4e2d\uff0c '/' URL\u663e\u793a\u767b\u5f55\u9875\u9762\u7684\u94fe\u63a5\uff0c\u6ca1\u6709\u6d88\u606f\u95ea\u73b0\u3002 @app.route('/') def index(): return render_template('index.html') \u8be5\u94fe\u63a5\u4f1a\u5c06\u7528\u6237\u5f15\u5bfc\u5230**'/ login'** URL\uff0c\u8be5URL\u663e\u793a\u767b\u5f55\u8868\u5355\u3002\u63d0\u4ea4\u65f6\uff0c login()**\u89c6\u56fe\u51fd\u6570\u9a8c\u8bc1\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u5e76\u76f8\u5e94\u95ea\u73b0 'success' \u6d88\u606f\u6216\u521b\u5efa 'error'**\u53d8\u91cf\u3002 @app.route('/login', methods = ['GET', 'POST']) def login(): error = None if request.method == 'POST': if request.form['username'] != 'admin' or \\ request.form['password'] != 'admin': error = 'Invalid username or password. Please try again!' else: flash('You were successfully logged in') return redirect(url_for('index')) return render_template('login.html', error = error) \u5982\u679c\u51fa\u73b0**\u9519\u8bef**\uff0c\u5219\u4f1a\u91cd\u65b0\u663e\u793a\u767b\u5f55\u6a21\u677f\uff0c\u5e76\u663e\u793a\u9519\u8bef\u6d88\u606f\u3002 Login.html \u00b6 Login {% if error %} Error: {{ error }} {% endif %} Username: <dd> <input type = text name = username value = \"{{request.form.username }}\"> </dd> <dt>Password:</dt> <dd><input type = password name = password></dd> </dl> <p><input type = submit value = Login></p> \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u767b\u5f55\u6210\u529f\uff0c\u5219\u4f1a\u5728\u7d22\u5f15\u6a21\u677f\u4e0a\u5237\u65b0\u6210\u529f\u6d88\u606f\u3002 Index.html \u00b6 {% with messages = get_flashed_messages() %} {% if messages %} <ul> {% for message in messages %} <li<{{ message }}</li> {% endfor %} </ul> {% endif %} {% endwith %} <h1>Flask Message Flashing Example</h1> <p>Do you want to <a href = \"{{ url_for('login') }}\"> <b>log in?</b></a></p> \u4e0b\u9762\u7ed9\u51fa\u4e86Flask\u6d88\u606f\u95ea\u73b0\u793a\u4f8b\u7684\u5b8c\u6574\u4ee3\u7801\uff1a Flash.py \u00b6 from flask import Flask, flash, redirect, render_template, request, url_for app = Flask(name) app.secret_key = 'random string' @app.route('/') def index(): return render_template('index.html') @app.route('/login', methods = ['GET', 'POST']) def login(): error = None if request.method == 'POST': if request.form['username'] != 'admin' or \\ request.form['password'] != 'admin': error = 'Invalid username or password. Please try again!' else: flash('You were successfully logged in') return redirect(url_for('index')) return render_template('login.html', error = error) if name == \"main\": app.run(debug = True) \u6267\u884c\u4e0a\u8ff0\u4ee3\u7801\u540e\uff0c\u60a8\u5c06\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u754c\u9762\u3002 \u5f53\u60a8\u70b9\u51fb\u94fe\u63a5\uff0c\u60a8\u5c06\u88ab\u5b9a\u5411\u5230\u767b\u5f55\u9875\u9762\u3002 \u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002 \u70b9\u51fb**\u767b\u5f55**\u3002\u5c06\u663e\u793a\u4e00\u6761\u6d88\u606f\u201c\u60a8\u5df2\u6210\u529f\u767b\u5f55\u201d\u3002","title":"15-Flask \u6d88\u606f\u95ea\u73b0"},{"location":"05-flask/Flask_todo/15-Flask%20%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/#flask","text":"","title":"Flask \u6d88\u606f\u95ea\u73b0"},{"location":"05-flask/Flask_todo/15-Flask%20%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/#flask_1","text":"\u4e00\u4e2a\u597d\u7684\u57fa\u4e8eGUI\u7684\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5411\u7528\u6237\u63d0\u4f9b\u6709\u5173\u4ea4\u4e92\u7684\u53cd\u9988\u3002\u4f8b\u5982\uff0c\u684c\u9762\u5e94\u7528\u7a0b\u5e8f\u4f7f\u7528\u5bf9\u8bdd\u6846\u6216\u6d88\u606f\u6846\uff0cJavaScript\u4f7f\u7528\u8b66\u62a5\u7528\u4e8e\u7c7b\u4f3c\u76ee\u7684\u3002 \u5728Flask Web\u5e94\u7528\u7a0b\u5e8f\u4e2d\u751f\u6210\u8fd9\u6837\u7684\u4fe1\u606f\u6027\u6d88\u606f\u5f88\u5bb9\u6613\u3002Flask\u6846\u67b6\u7684\u95ea\u73b0\u7cfb\u7edf\u53ef\u4ee5\u5728\u4e00\u4e2a\u89c6\u56fe\u4e2d\u521b\u5efa\u6d88\u606f\uff0c\u5e76\u5728\u540d\u4e3a**next**\u7684\u89c6\u56fe\u51fd\u6570\u4e2d\u5448\u73b0\u5b83\u3002 Flask\u6a21\u5757\u5305\u542b**flash()**\u65b9\u6cd5\u3002\u5b83\u5c06\u6d88\u606f\u4f20\u9012\u7ed9\u4e0b\u4e00\u4e2a\u8bf7\u6c42\uff0c\u8be5\u8bf7\u6c42\u901a\u5e38\u662f\u4e00\u4e2a\u6a21\u677f\u3002 flash(message, category) \u5176\u4e2d\uff0c **message**\u53c2\u6570\u662f\u8981\u95ea\u73b0\u7684\u5b9e\u9645\u6d88\u606f\u3002 **category**\u53c2\u6570\u662f\u53ef\u9009\u7684\u3002\u5b83\u53ef\u4ee5\u662f\u201cerror\u201d\uff0c\u201cinfo\u201d\u6216\u201cwarning\u201d\u3002 \u4e3a\u4e86\u4ece\u4f1a\u8bdd\u4e2d\u5220\u9664\u6d88\u606f\uff0c\u6a21\u677f\u8c03\u7528**get_flashed_messages()**\u3002 get_flashed_messages(with_categories, category_filter) \u4e24\u4e2a\u53c2\u6570\u90fd\u662f\u53ef\u9009\u7684\u3002\u5982\u679c\u63a5\u6536\u5230\u7684\u6d88\u606f\u5177\u6709\u7c7b\u522b\uff0c\u5219\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5143\u7ec4\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ec5\u7528\u4e8e\u663e\u793a\u7279\u5b9a\u6d88\u606f\u3002 \u4ee5\u4e0b\u95ea\u73b0\u5728\u6a21\u677f\u4e2d\u63a5\u6536\u6d88\u606f\u3002 {% with messages = get_flashed_messages() %} {% if messages %} {% for message in messages %} {{ message }} {% endfor %} {% endif %} {% endwith %} \u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff0c\u6f14\u793aFlask\u4e2d\u7684\u95ea\u73b0\u673a\u5236\u3002\u5728\u4ee5\u4e0b\u4ee3\u7801\u4e2d\uff0c '/' URL\u663e\u793a\u767b\u5f55\u9875\u9762\u7684\u94fe\u63a5\uff0c\u6ca1\u6709\u6d88\u606f\u95ea\u73b0\u3002 @app.route('/') def index(): return render_template('index.html') \u8be5\u94fe\u63a5\u4f1a\u5c06\u7528\u6237\u5f15\u5bfc\u5230**'/ login'** URL\uff0c\u8be5URL\u663e\u793a\u767b\u5f55\u8868\u5355\u3002\u63d0\u4ea4\u65f6\uff0c login()**\u89c6\u56fe\u51fd\u6570\u9a8c\u8bc1\u7528\u6237\u540d\u548c\u5bc6\u7801\uff0c\u5e76\u76f8\u5e94\u95ea\u73b0 'success' \u6d88\u606f\u6216\u521b\u5efa 'error'**\u53d8\u91cf\u3002 @app.route('/login', methods = ['GET', 'POST']) def login(): error = None if request.method == 'POST': if request.form['username'] != 'admin' or \\ request.form['password'] != 'admin': error = 'Invalid username or password. Please try again!' else: flash('You were successfully logged in') return redirect(url_for('index')) return render_template('login.html', error = error) \u5982\u679c\u51fa\u73b0**\u9519\u8bef**\uff0c\u5219\u4f1a\u91cd\u65b0\u663e\u793a\u767b\u5f55\u6a21\u677f\uff0c\u5e76\u663e\u793a\u9519\u8bef\u6d88\u606f\u3002","title":"Flask \u6d88\u606f\u95ea\u73b0"},{"location":"05-flask/Flask_todo/15-Flask%20%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/#loginhtml","text":"Login {% if error %} Error: {{ error }} {% endif %} Username: <dd> <input type = text name = username value = \"{{request.form.username }}\"> </dd> <dt>Password:</dt> <dd><input type = password name = password></dd> </dl> <p><input type = submit value = Login></p> \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u767b\u5f55\u6210\u529f\uff0c\u5219\u4f1a\u5728\u7d22\u5f15\u6a21\u677f\u4e0a\u5237\u65b0\u6210\u529f\u6d88\u606f\u3002","title":"Login.html"},{"location":"05-flask/Flask_todo/15-Flask%20%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/#indexhtml","text":"{% with messages = get_flashed_messages() %} {% if messages %} <ul> {% for message in messages %} <li<{{ message }}</li> {% endfor %} </ul> {% endif %} {% endwith %} <h1>Flask Message Flashing Example</h1> <p>Do you want to <a href = \"{{ url_for('login') }}\"> <b>log in?</b></a></p> \u4e0b\u9762\u7ed9\u51fa\u4e86Flask\u6d88\u606f\u95ea\u73b0\u793a\u4f8b\u7684\u5b8c\u6574\u4ee3\u7801\uff1a","title":"Index.html"},{"location":"05-flask/Flask_todo/15-Flask%20%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/#flashpy","text":"from flask import Flask, flash, redirect, render_template, request, url_for app = Flask(name) app.secret_key = 'random string' @app.route('/') def index(): return render_template('index.html') @app.route('/login', methods = ['GET', 'POST']) def login(): error = None if request.method == 'POST': if request.form['username'] != 'admin' or \\ request.form['password'] != 'admin': error = 'Invalid username or password. Please try again!' else: flash('You were successfully logged in') return redirect(url_for('index')) return render_template('login.html', error = error) if name == \"main\": app.run(debug = True) \u6267\u884c\u4e0a\u8ff0\u4ee3\u7801\u540e\uff0c\u60a8\u5c06\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u754c\u9762\u3002 \u5f53\u60a8\u70b9\u51fb\u94fe\u63a5\uff0c\u60a8\u5c06\u88ab\u5b9a\u5411\u5230\u767b\u5f55\u9875\u9762\u3002 \u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002 \u70b9\u51fb**\u767b\u5f55**\u3002\u5c06\u663e\u793a\u4e00\u6761\u6d88\u606f\u201c\u60a8\u5df2\u6210\u529f\u767b\u5f55\u201d\u3002","title":"Flash.py"},{"location":"05-flask/Flask_todo/16-Flask%20%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/","text":"Flask \u6587\u4ef6\u4e0a\u4f20 \u00b6 Flask \u6587\u4ef6\u4e0a\u4f20 \u00b6 \u5728Flask\u4e2d\u5904\u7406\u6587\u4ef6\u4e0a\u4f20\u975e\u5e38\u7b80\u5355\u3002\u5b83\u9700\u8981\u4e00\u4e2aHTML\u8868\u5355\uff0c\u5176enctype\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u201cmultipart / form-data\u201d\uff0c\u5c06\u6587\u4ef6\u53d1\u5e03\u5230URL\u3002URL\u5904\u7406\u7a0b\u5e8f\u4ece**request.files[]**\u5bf9\u8c61\u4e2d\u63d0\u53d6\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u4fdd\u5b58\u5230\u6240\u9700\u7684\u4f4d\u7f6e\u3002 \u6bcf\u4e2a\u4e0a\u4f20\u7684\u6587\u4ef6\u9996\u5148\u4f1a\u4fdd\u5b58\u5728\u670d\u52a1\u5668\u4e0a\u7684\u4e34\u65f6\u4f4d\u7f6e\uff0c\u7136\u540e\u5c06\u5176\u5b9e\u9645\u4fdd\u5b58\u5230\u5b83\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002\u76ee\u6807\u6587\u4ef6\u7684\u540d\u79f0\u53ef\u4ee5\u662f\u786c\u7f16\u7801\u7684\uff0c\u4e5f\u53ef\u4ee5\u4ece**request.files[file]**\u5bf9\u8c61\u7684filename\u5c5e\u6027\u4e2d\u83b7\u53d6\u3002\u4f46\u662f\uff0c\u5efa\u8bae\u4f7f\u7528**secure_filename()**\u51fd\u6570\u83b7\u53d6\u5b83\u7684\u5b89\u5168\u7248\u672c\u3002 \u53ef\u4ee5\u5728Flask\u5bf9\u8c61\u7684\u914d\u7f6e\u8bbe\u7f6e\u4e2d\u5b9a\u4e49\u9ed8\u8ba4\u4e0a\u4f20\u6587\u4ef6\u5939\u7684\u8def\u5f84\u548c\u4e0a\u4f20\u6587\u4ef6\u7684\u6700\u5927\u5927\u5c0f\u3002 app.config[\u2018UPLOAD_FOLDER\u2019] \u5b9a\u4e49\u4e0a\u4f20\u6587\u4ef6\u5939\u7684\u8def\u5f84 app.config[\u2018MAX_CONTENT_PATH\u2019] \u6307\u5b9a\u8981\u4e0a\u4f20\u7684\u6587\u4ef6\u7684\u6700\u5927\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09 \u4ee5\u4e0b\u4ee3\u7801\u5177\u6709' / upload' URL\u89c4\u5219\uff0c\u8be5\u89c4\u5219\u5728templates\u6587\u4ef6\u5939\u4e2d\u663e\u793a' upload.html' \uff0c\u4ee5\u53ca**'/ upload-file'** URL\u89c4\u5219\uff0c\u7528\u4e8e\u8c03\u7528**uploader()**\u51fd\u6570\u5904\u7406\u4e0a\u4f20\u8fc7\u7a0b\u3002 **'upload.html'**\u6709\u4e00\u4e2a\u6587\u4ef6\u9009\u62e9\u5668\u6309\u94ae\u548c\u4e00\u4e2a\u63d0\u4ea4\u6309\u94ae\u3002 <html> <body> <form action = \"http://localhost:5000/uploader\" method = \"POST\" enctype = \"multipart/form-data\"> <input type = \"file\" name = \"file\" /> <input type = \"submit\"/> </form> </body> </html> \u60a8\u5c06\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u754c\u9762\u3002 \u9009\u62e9\u6587\u4ef6\u540e\uff0c\u5355\u51fb**\u63d0\u4ea4**\u3002\u8868\u5355\u7684post\u65b9\u6cd5\u8c03\u7528**'/ upload_file' URL**\u3002\u5e95\u5c42\u51fd\u6570**uploader()**\u6267\u884c\u4fdd\u5b58\u64cd\u4f5c\u3002 \u4ee5\u4e0b\u662fFlask\u5e94\u7528\u7a0b\u5e8f\u7684Python\u4ee3\u7801\u3002 from flask import Flask, render_template, request from werkzeug import secure_filename app = Flask(__name__) @app.route('/upload') def upload_file(): return render_template('upload.html') @app.route('/uploader', methods = ['GET', 'POST']) def upload_file(): if request.method == 'POST': f = request.files['file'] f.save(secure_filename(f.filename)) return 'file uploaded successfully' if __name__ == '__main__': app.run(debug = True)","title":"16-Flask \u6587\u4ef6\u4e0a\u4f20"},{"location":"05-flask/Flask_todo/16-Flask%20%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/#flask","text":"","title":"Flask \u6587\u4ef6\u4e0a\u4f20"},{"location":"05-flask/Flask_todo/16-Flask%20%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/#flask_1","text":"\u5728Flask\u4e2d\u5904\u7406\u6587\u4ef6\u4e0a\u4f20\u975e\u5e38\u7b80\u5355\u3002\u5b83\u9700\u8981\u4e00\u4e2aHTML\u8868\u5355\uff0c\u5176enctype\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u201cmultipart / form-data\u201d\uff0c\u5c06\u6587\u4ef6\u53d1\u5e03\u5230URL\u3002URL\u5904\u7406\u7a0b\u5e8f\u4ece**request.files[]**\u5bf9\u8c61\u4e2d\u63d0\u53d6\u6587\u4ef6\uff0c\u5e76\u5c06\u5176\u4fdd\u5b58\u5230\u6240\u9700\u7684\u4f4d\u7f6e\u3002 \u6bcf\u4e2a\u4e0a\u4f20\u7684\u6587\u4ef6\u9996\u5148\u4f1a\u4fdd\u5b58\u5728\u670d\u52a1\u5668\u4e0a\u7684\u4e34\u65f6\u4f4d\u7f6e\uff0c\u7136\u540e\u5c06\u5176\u5b9e\u9645\u4fdd\u5b58\u5230\u5b83\u7684\u6700\u7ec8\u4f4d\u7f6e\u3002\u76ee\u6807\u6587\u4ef6\u7684\u540d\u79f0\u53ef\u4ee5\u662f\u786c\u7f16\u7801\u7684\uff0c\u4e5f\u53ef\u4ee5\u4ece**request.files[file]**\u5bf9\u8c61\u7684filename\u5c5e\u6027\u4e2d\u83b7\u53d6\u3002\u4f46\u662f\uff0c\u5efa\u8bae\u4f7f\u7528**secure_filename()**\u51fd\u6570\u83b7\u53d6\u5b83\u7684\u5b89\u5168\u7248\u672c\u3002 \u53ef\u4ee5\u5728Flask\u5bf9\u8c61\u7684\u914d\u7f6e\u8bbe\u7f6e\u4e2d\u5b9a\u4e49\u9ed8\u8ba4\u4e0a\u4f20\u6587\u4ef6\u5939\u7684\u8def\u5f84\u548c\u4e0a\u4f20\u6587\u4ef6\u7684\u6700\u5927\u5927\u5c0f\u3002 app.config[\u2018UPLOAD_FOLDER\u2019] \u5b9a\u4e49\u4e0a\u4f20\u6587\u4ef6\u5939\u7684\u8def\u5f84 app.config[\u2018MAX_CONTENT_PATH\u2019] \u6307\u5b9a\u8981\u4e0a\u4f20\u7684\u6587\u4ef6\u7684\u6700\u5927\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09 \u4ee5\u4e0b\u4ee3\u7801\u5177\u6709' / upload' URL\u89c4\u5219\uff0c\u8be5\u89c4\u5219\u5728templates\u6587\u4ef6\u5939\u4e2d\u663e\u793a' upload.html' \uff0c\u4ee5\u53ca**'/ upload-file'** URL\u89c4\u5219\uff0c\u7528\u4e8e\u8c03\u7528**uploader()**\u51fd\u6570\u5904\u7406\u4e0a\u4f20\u8fc7\u7a0b\u3002 **'upload.html'**\u6709\u4e00\u4e2a\u6587\u4ef6\u9009\u62e9\u5668\u6309\u94ae\u548c\u4e00\u4e2a\u63d0\u4ea4\u6309\u94ae\u3002 <html> <body> <form action = \"http://localhost:5000/uploader\" method = \"POST\" enctype = \"multipart/form-data\"> <input type = \"file\" name = \"file\" /> <input type = \"submit\"/> </form> </body> </html> \u60a8\u5c06\u770b\u5230\u5982\u4e0b\u6240\u793a\u7684\u754c\u9762\u3002 \u9009\u62e9\u6587\u4ef6\u540e\uff0c\u5355\u51fb**\u63d0\u4ea4**\u3002\u8868\u5355\u7684post\u65b9\u6cd5\u8c03\u7528**'/ upload_file' URL**\u3002\u5e95\u5c42\u51fd\u6570**uploader()**\u6267\u884c\u4fdd\u5b58\u64cd\u4f5c\u3002 \u4ee5\u4e0b\u662fFlask\u5e94\u7528\u7a0b\u5e8f\u7684Python\u4ee3\u7801\u3002 from flask import Flask, render_template, request from werkzeug import secure_filename app = Flask(__name__) @app.route('/upload') def upload_file(): return render_template('upload.html') @app.route('/uploader', methods = ['GET', 'POST']) def upload_file(): if request.method == 'POST': f = request.files['file'] f.save(secure_filename(f.filename)) return 'file uploaded successfully' if __name__ == '__main__': app.run(debug = True)","title":"Flask \u6587\u4ef6\u4e0a\u4f20"},{"location":"05-flask/Flask_todo/17-Flask%20%E6%89%A9%E5%B1%95/","text":"Flask \u6269\u5c55 \u00b6 Flask\u6269\u5c55 \u00b6 Flask\u901a\u5e38\u88ab\u79f0\u4e3a\u5fae\u6846\u67b6\uff0c\u56e0\u4e3a\u6838\u5fc3\u529f\u80fd\u5305\u62ec\u57fa\u4e8e**Werkzeug**\u7684WSGI\u548c\u8def\u7531\u4ee5\u53ca\u57fa\u4e8e**Jinja2**\u7684\u6a21\u677f\u5f15\u64ce\u3002\u6b64\u5916\uff0cFlask\u6846\u67b6\u8fd8\u652f\u6301cookie\u548c\u4f1a\u8bdd\uff0c\u4ee5\u53ca**JSON**\uff0c\u9759\u6001\u6587\u4ef6\u7b49Web\u5e2e\u52a9\u7a0b\u5e8f\u3002\u663e\u7136\uff0c\u8fd9\u4e0d\u8db3\u4ee5\u5f00\u53d1\u5b8c\u6574\u7684Web\u5e94\u7528\u7a0b\u5e8f\u3002\u800cFlask\u6269\u5c55\u5c31\u5177\u5907\u8fd9\u6837\u7684\u529f\u80fd**\u3002**Flask\u6269\u5c55\u4e3aFlask\u6846\u67b6\u63d0\u4f9b\u4e86\u53ef\u6269\u5c55\u6027\u3002 \u6709\u5927\u91cf\u7684Flask\u6269\u5c55\u53ef\u7528\u3002Flask\u6269\u5c55\u662f\u4e00\u4e2aPython\u6a21\u5757\uff0c\u5b83\u5411Flask\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u4e86\u7279\u5b9a\u7c7b\u578b\u7684\u652f\u6301\u3002Flask Extension Registry\uff08Flask\u6269\u5c55\u6ce8\u518c\u8868\uff09\u662f\u4e00\u4e2a\u53ef\u7528\u7684\u6269\u5c55\u76ee\u5f55\u3002\u53ef\u4ee5\u901a\u8fc7**pip**\u5b9e\u7528\u7a0b\u5e8f\u4e0b\u8f7d\u6240\u9700\u7684\u6269\u5c55\u540d\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u4ee5\u4e0b\u91cd\u8981\u7684Flask\u6269\u5c55\uff1a Flask Mail - \u4e3aFlask\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9bSMTP\u63a5\u53e3 Flask WTF - \u6dfb\u52a0WTForms\u7684\u6e32\u67d3\u548c\u9a8c\u8bc1 Flask SQLAlchemy - \u4e3aFlask\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0SQLAlchemy\u652f\u6301 Flask Sijax - Sijax\u7684\u63a5\u53e3 - Python/jQuery\u5e93\uff0c\u4f7fAJAX\u6613\u4e8e\u5728Web\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528 \u6bcf\u79cd\u7c7b\u578b\u7684\u6269\u5c55\u901a\u5e38\u63d0\u4f9b\u6709\u5173\u5176\u7528\u6cd5\u7684\u5927\u91cf\u6587\u6863\u3002\u7531\u4e8e\u6269\u5c55\u662f\u4e00\u4e2aPython\u6a21\u5757\uff0c\u56e0\u6b64\u9700\u8981\u5bfc\u5165\u5b83\u624d\u80fd\u4f7f\u7528\u5b83\u3002Flask\u6269\u5c55\u540d\u901a\u5e38\u547d\u540d\u4e3aflask-foo\u3002\u5bfc\u5165\u7684\u64cd\u4f5c\u5982\u4e0b\uff1a from flask_foo import [class, function] \u5bf9\u4e8e0.7\u4ee5\u540e\u7684Flask\u7248\u672c\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u8bed\u6cd5\uff1a from flask.ext import foo \u5bf9\u4e8e\u6b64\u7528\u6cd5\uff0c\u9700\u8981\u6fc0\u6d3b\u517c\u5bb9\u6027\u6a21\u5757\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884cflaskext_compat.py\u6765\u5b89\u88c5\uff1a import flaskext_compat flaskext_compat.activate() from flask.ext import foo","title":"17-Flask \u6269\u5c55"},{"location":"05-flask/Flask_todo/17-Flask%20%E6%89%A9%E5%B1%95/#flask","text":"","title":"Flask \u6269\u5c55"},{"location":"05-flask/Flask_todo/17-Flask%20%E6%89%A9%E5%B1%95/#flask_1","text":"Flask\u901a\u5e38\u88ab\u79f0\u4e3a\u5fae\u6846\u67b6\uff0c\u56e0\u4e3a\u6838\u5fc3\u529f\u80fd\u5305\u62ec\u57fa\u4e8e**Werkzeug**\u7684WSGI\u548c\u8def\u7531\u4ee5\u53ca\u57fa\u4e8e**Jinja2**\u7684\u6a21\u677f\u5f15\u64ce\u3002\u6b64\u5916\uff0cFlask\u6846\u67b6\u8fd8\u652f\u6301cookie\u548c\u4f1a\u8bdd\uff0c\u4ee5\u53ca**JSON**\uff0c\u9759\u6001\u6587\u4ef6\u7b49Web\u5e2e\u52a9\u7a0b\u5e8f\u3002\u663e\u7136\uff0c\u8fd9\u4e0d\u8db3\u4ee5\u5f00\u53d1\u5b8c\u6574\u7684Web\u5e94\u7528\u7a0b\u5e8f\u3002\u800cFlask\u6269\u5c55\u5c31\u5177\u5907\u8fd9\u6837\u7684\u529f\u80fd**\u3002**Flask\u6269\u5c55\u4e3aFlask\u6846\u67b6\u63d0\u4f9b\u4e86\u53ef\u6269\u5c55\u6027\u3002 \u6709\u5927\u91cf\u7684Flask\u6269\u5c55\u53ef\u7528\u3002Flask\u6269\u5c55\u662f\u4e00\u4e2aPython\u6a21\u5757\uff0c\u5b83\u5411Flask\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0\u4e86\u7279\u5b9a\u7c7b\u578b\u7684\u652f\u6301\u3002Flask Extension Registry\uff08Flask\u6269\u5c55\u6ce8\u518c\u8868\uff09\u662f\u4e00\u4e2a\u53ef\u7528\u7684\u6269\u5c55\u76ee\u5f55\u3002\u53ef\u4ee5\u901a\u8fc7**pip**\u5b9e\u7528\u7a0b\u5e8f\u4e0b\u8f7d\u6240\u9700\u7684\u6269\u5c55\u540d\u3002 \u5728\u672c\u6559\u7a0b\u4e2d\uff0c\u6211\u4eec\u5c06\u8ba8\u8bba\u4ee5\u4e0b\u91cd\u8981\u7684Flask\u6269\u5c55\uff1a Flask Mail - \u4e3aFlask\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9bSMTP\u63a5\u53e3 Flask WTF - \u6dfb\u52a0WTForms\u7684\u6e32\u67d3\u548c\u9a8c\u8bc1 Flask SQLAlchemy - \u4e3aFlask\u5e94\u7528\u7a0b\u5e8f\u6dfb\u52a0SQLAlchemy\u652f\u6301 Flask Sijax - Sijax\u7684\u63a5\u53e3 - Python/jQuery\u5e93\uff0c\u4f7fAJAX\u6613\u4e8e\u5728Web\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528 \u6bcf\u79cd\u7c7b\u578b\u7684\u6269\u5c55\u901a\u5e38\u63d0\u4f9b\u6709\u5173\u5176\u7528\u6cd5\u7684\u5927\u91cf\u6587\u6863\u3002\u7531\u4e8e\u6269\u5c55\u662f\u4e00\u4e2aPython\u6a21\u5757\uff0c\u56e0\u6b64\u9700\u8981\u5bfc\u5165\u5b83\u624d\u80fd\u4f7f\u7528\u5b83\u3002Flask\u6269\u5c55\u540d\u901a\u5e38\u547d\u540d\u4e3aflask-foo\u3002\u5bfc\u5165\u7684\u64cd\u4f5c\u5982\u4e0b\uff1a from flask_foo import [class, function] \u5bf9\u4e8e0.7\u4ee5\u540e\u7684Flask\u7248\u672c\uff0c\u60a8\u8fd8\u53ef\u4ee5\u4f7f\u7528\u8bed\u6cd5\uff1a from flask.ext import foo \u5bf9\u4e8e\u6b64\u7528\u6cd5\uff0c\u9700\u8981\u6fc0\u6d3b\u517c\u5bb9\u6027\u6a21\u5757\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884cflaskext_compat.py\u6765\u5b89\u88c5\uff1a import flaskext_compat flaskext_compat.activate() from flask.ext import foo","title":"Flask\u6269\u5c55"},{"location":"05-flask/Flask_todo/18-Flask%20%E9%82%AE%E4%BB%B6/","text":"Flask \u90ae\u4ef6 \u00b6 Flask \u90ae\u4ef6 \u00b6 \u57fa\u4e8eweb\u7684\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u9700\u8981\u5177\u6709\u5411\u7528\u6237/\u5ba2\u6237\u7aef\u53d1\u9001\u90ae\u4ef6\u7684\u529f\u80fd\u3002**Flask-Mail**\u6269\u5c55\u4f7f\u5f97\u4e0e\u4efb\u4f55\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u5668\u5efa\u7acb\u7b80\u5355\u7684\u63a5\u53e3\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002 \u9996\u5148\uff0c\u5e94\u8be5\u5728pip\u5b9e\u7528\u7a0b\u5e8f\u7684\u5e2e\u52a9\u4e0b\u5b89\u88c5Flask-Mail\u6269\u5c55\u3002 pip install Flask-Mail \u7136\u540e\u9700\u8981\u901a\u8fc7\u8bbe\u7f6e\u4ee5\u4e0b\u5e94\u7528\u7a0b\u5e8f\u53c2\u6570\u7684\u503c\u6765\u914d\u7f6eFlask-Mail\u3002 \u5e8f\u53f7 \u53c2\u6570\u4e0e\u63cf\u8ff0 1 **MAIL_SERVER**\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u5668\u7684\u540d\u79f0/IP\u5730\u5740 2 **MAIL_PORT**\u4f7f\u7528\u7684\u670d\u52a1\u5668\u7684\u7aef\u53e3\u53f7 3 **MAIL_USE_TLS**\u542f\u7528/\u7981\u7528\u4f20\u8f93\u5b89\u5168\u5c42\u52a0\u5bc6 4 **MAIL_USE_SSL**\u542f\u7528/\u7981\u7528\u5b89\u5168\u5957\u63a5\u5b57\u5c42\u52a0\u5bc6 5 **MAIL_DEBUG**\u8c03\u8bd5\u652f\u6301\u3002\u9ed8\u8ba4\u503c\u662fFlask\u5e94\u7528\u7a0b\u5e8f\u7684\u8c03\u8bd5\u72b6\u6001 6 **MAIL_USERNAME**\u53d1\u4ef6\u4eba\u7684\u7528\u6237\u540d 7 **MAIL_PASSWORD**\u53d1\u4ef6\u4eba\u7684\u5bc6\u7801 8 **MAIL_DEFAULT_SENDER**\u8bbe\u7f6e\u9ed8\u8ba4\u53d1\u4ef6\u4eba 9 **MAIL_MAX_EMAILS**\u8bbe\u7f6e\u8981\u53d1\u9001\u7684\u6700\u5927\u90ae\u4ef6\u6570 10 **MAIL_SUPPRESS_SEND**\u5982\u679capp.testing\u8bbe\u7f6e\u4e3atrue\uff0c\u5219\u53d1\u9001\u88ab\u6291\u5236 11 **MAIL_ASCII_ATTACHMENTS**\u5982\u679c\u8bbe\u7f6e\u4e3atrue\uff0c\u5219\u9644\u52a0\u7684\u6587\u4ef6\u540d\u5c06\u8f6c\u6362\u4e3aASCII flask-mail\u6a21\u5757\u5305\u542b\u4ee5\u4e0b\u91cd\u8981\u7c7b\u7684\u5b9a\u4e49\u3002 \u00b6 Mail\u7c7b \u00b6 \u5b83\u7ba1\u7406\u7535\u5b50\u90ae\u4ef6\u6d88\u606f\u4f20\u9012\u9700\u6c42\u3002\u7c7b\u6784\u9020\u51fd\u6570\u91c7\u7528\u4ee5\u4e0b\u5f62\u5f0f\uff1a flask-mail.Mail(app = None) \u6784\u9020\u51fd\u6570\u5c06Flask\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u3002 Mail\u7c7b\u7684\u65b9\u6cd5 \u00b6 \u5e8f\u53f7 \u65b9\u6cd5\u4e0e\u63cf\u8ff0 1 **send()**\u53d1\u9001Message\u7c7b\u5bf9\u8c61\u7684\u5185\u5bb9 2 **connect()**\u6253\u5f00\u4e0e\u90ae\u4ef6\u4e3b\u673a\u7684\u8fde\u63a5 3 **send_message()**\u53d1\u9001\u6d88\u606f\u5bf9\u8c61 \u00b6 Message\u7c7b \u00b6 \u5b83\u5c01\u88c5\u4e86\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002Message\u7c7b\u6784\u9020\u51fd\u6570\u6709\u51e0\u4e2a\u53c2\u6570: flask-mail.Message(subject, recipients, body, html, sender, cc, bcc, reply-to, date, charset, extra_headers, mail_options, rcpt_options) Message\u7c7b\u65b9\u6cd5 \u00b6 attach() - \u4e3a\u90ae\u4ef6\u6dfb\u52a0\u9644\u4ef6\u3002\u6b64\u65b9\u6cd5\u91c7\u7528\u4ee5\u4e0b\u53c2\u6570\uff1a filename - \u8981\u9644\u52a0\u7684\u6587\u4ef6\u7684\u540d\u79f0 content_type - MIME\u7c7b\u578b\u7684\u6587\u4ef6 data - \u539f\u59cb\u6587\u4ef6\u6570\u636e \u5904\u7f6e - \u5185\u5bb9\u5904\u7f6e\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002 add_recipient() - \u5411\u90ae\u4ef6\u6dfb\u52a0\u53e6\u4e00\u4e2a\u6536\u4ef6\u4eba \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0cGoogle gmail\u670d\u52a1\u7684SMTP\u670d\u52a1\u5668\u7528\u4f5cFlask-Mail\u914d\u7f6e\u7684MAIL_SERVER\u3002 \u6b65\u9aa41 - \u5728\u4ee3\u7801\u4e2d\u4eceflask-mail\u6a21\u5757\u5bfc\u5165Mail\u548cMessage\u7c7b\u3002 from flask_mail import Mail, Message \u6b65\u9aa42 - \u7136\u540e\u6309\u7167\u4ee5\u4e0b\u8bbe\u7f6e\u914d\u7f6eFlask-Mail\u3002 app.config['MAIL_SERVER']='smtp.gmail.com' app.config['MAIL_PORT'] = 465 app.config['MAIL_USERNAME'] = 'yourId@gmail.com' app.config['MAIL_PASSWORD'] = '*****' app.config['MAIL_USE_TLS'] = False app.config['MAIL_USE_SSL'] = True \u6b65\u9aa43 - \u521b\u5efaMail\u7c7b\u7684\u5b9e\u4f8b\u3002 mail = Mail(app) \u6b65\u9aa44 - \u5728\u7531URL\u89c4\u5219**\uff08\u2018/\u2019\uff09**\u6620\u5c04\u7684Python\u51fd\u6570\u4e2d\u8bbe\u7f6eMessage\u5bf9\u8c61\u3002 @app.route(\"/\") def index(): msg = Message('Hello', sender = 'yourId@gmail.com', recipients = ['id1@gmail.com']) msg.body = \"This is the email body\" mail.send(msg) return \"Sent\" \u6b65\u9aa45 - \u6574\u4e2a\u4ee3\u7801\u5982\u4e0b\u3002\u5728Python Shell\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u5e76\u8bbf\u95ee** http://localhost:5000/ \u3002** from flask import Flask from flask_mail import Mail, Message app =Flask(__name__) mail=Mail(app) app.config['MAIL_SERVER']='smtp.gmail.com' app.config['MAIL_PORT'] = 465 app.config['MAIL_USERNAME'] = 'yourId@gmail.com' app.config['MAIL_PASSWORD'] = '*****' app.config['MAIL_USE_TLS'] = False app.config['MAIL_USE_SSL'] = True mail = Mail(app) @app.route(\"/\") def index(): msg = Message('Hello', sender = 'yourId@gmail.com', recipients = ['id1@gmail.com']) msg.body = \"Hello Flask message sent from Flask-Mail\" mail.send(msg) return \"Sent\" if __name__ == '__main__': app.run(debug = True) \u8bf7\u6ce8\u610f\uff0cGmail\u670d\u52a1\u4e2d\u7684\u5185\u7f6e\u4e0d\u5b89\u5168\u529f\u80fd\u53ef\u80fd\u4f1a\u963b\u6b62\u6b64\u6b21\u767b\u5f55\u5c1d\u8bd5\u3002\u60a8\u53ef\u80fd\u5fc5\u987b\u964d\u4f4e\u5b89\u5168\u7ea7\u522b\u3002\u8bf7\u767b\u5f55\u60a8\u7684Gmail\u5e10\u6237\u5e76\u8bbf\u95ee\u6b64 \u94fe\u63a5 \u4ee5\u964d\u4f4e\u5b89\u5168\u6027\u3002","title":"18-Flask \u90ae\u4ef6"},{"location":"05-flask/Flask_todo/18-Flask%20%E9%82%AE%E4%BB%B6/#flask","text":"","title":"Flask \u90ae\u4ef6"},{"location":"05-flask/Flask_todo/18-Flask%20%E9%82%AE%E4%BB%B6/#flask_1","text":"\u57fa\u4e8eweb\u7684\u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u9700\u8981\u5177\u6709\u5411\u7528\u6237/\u5ba2\u6237\u7aef\u53d1\u9001\u90ae\u4ef6\u7684\u529f\u80fd\u3002**Flask-Mail**\u6269\u5c55\u4f7f\u5f97\u4e0e\u4efb\u4f55\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u5668\u5efa\u7acb\u7b80\u5355\u7684\u63a5\u53e3\u53d8\u5f97\u975e\u5e38\u5bb9\u6613\u3002 \u9996\u5148\uff0c\u5e94\u8be5\u5728pip\u5b9e\u7528\u7a0b\u5e8f\u7684\u5e2e\u52a9\u4e0b\u5b89\u88c5Flask-Mail\u6269\u5c55\u3002 pip install Flask-Mail \u7136\u540e\u9700\u8981\u901a\u8fc7\u8bbe\u7f6e\u4ee5\u4e0b\u5e94\u7528\u7a0b\u5e8f\u53c2\u6570\u7684\u503c\u6765\u914d\u7f6eFlask-Mail\u3002 \u5e8f\u53f7 \u53c2\u6570\u4e0e\u63cf\u8ff0 1 **MAIL_SERVER**\u7535\u5b50\u90ae\u4ef6\u670d\u52a1\u5668\u7684\u540d\u79f0/IP\u5730\u5740 2 **MAIL_PORT**\u4f7f\u7528\u7684\u670d\u52a1\u5668\u7684\u7aef\u53e3\u53f7 3 **MAIL_USE_TLS**\u542f\u7528/\u7981\u7528\u4f20\u8f93\u5b89\u5168\u5c42\u52a0\u5bc6 4 **MAIL_USE_SSL**\u542f\u7528/\u7981\u7528\u5b89\u5168\u5957\u63a5\u5b57\u5c42\u52a0\u5bc6 5 **MAIL_DEBUG**\u8c03\u8bd5\u652f\u6301\u3002\u9ed8\u8ba4\u503c\u662fFlask\u5e94\u7528\u7a0b\u5e8f\u7684\u8c03\u8bd5\u72b6\u6001 6 **MAIL_USERNAME**\u53d1\u4ef6\u4eba\u7684\u7528\u6237\u540d 7 **MAIL_PASSWORD**\u53d1\u4ef6\u4eba\u7684\u5bc6\u7801 8 **MAIL_DEFAULT_SENDER**\u8bbe\u7f6e\u9ed8\u8ba4\u53d1\u4ef6\u4eba 9 **MAIL_MAX_EMAILS**\u8bbe\u7f6e\u8981\u53d1\u9001\u7684\u6700\u5927\u90ae\u4ef6\u6570 10 **MAIL_SUPPRESS_SEND**\u5982\u679capp.testing\u8bbe\u7f6e\u4e3atrue\uff0c\u5219\u53d1\u9001\u88ab\u6291\u5236 11 **MAIL_ASCII_ATTACHMENTS**\u5982\u679c\u8bbe\u7f6e\u4e3atrue\uff0c\u5219\u9644\u52a0\u7684\u6587\u4ef6\u540d\u5c06\u8f6c\u6362\u4e3aASCII flask-mail\u6a21\u5757\u5305\u542b\u4ee5\u4e0b\u91cd\u8981\u7c7b\u7684\u5b9a\u4e49\u3002","title":"Flask \u90ae\u4ef6"},{"location":"05-flask/Flask_todo/18-Flask%20%E9%82%AE%E4%BB%B6/#_1","text":"","title":""},{"location":"05-flask/Flask_todo/18-Flask%20%E9%82%AE%E4%BB%B6/#mail","text":"\u5b83\u7ba1\u7406\u7535\u5b50\u90ae\u4ef6\u6d88\u606f\u4f20\u9012\u9700\u6c42\u3002\u7c7b\u6784\u9020\u51fd\u6570\u91c7\u7528\u4ee5\u4e0b\u5f62\u5f0f\uff1a flask-mail.Mail(app = None) \u6784\u9020\u51fd\u6570\u5c06Flask\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u3002","title":"Mail\u7c7b"},{"location":"05-flask/Flask_todo/18-Flask%20%E9%82%AE%E4%BB%B6/#mail_1","text":"\u5e8f\u53f7 \u65b9\u6cd5\u4e0e\u63cf\u8ff0 1 **send()**\u53d1\u9001Message\u7c7b\u5bf9\u8c61\u7684\u5185\u5bb9 2 **connect()**\u6253\u5f00\u4e0e\u90ae\u4ef6\u4e3b\u673a\u7684\u8fde\u63a5 3 **send_message()**\u53d1\u9001\u6d88\u606f\u5bf9\u8c61","title":"Mail\u7c7b\u7684\u65b9\u6cd5"},{"location":"05-flask/Flask_todo/18-Flask%20%E9%82%AE%E4%BB%B6/#_2","text":"","title":""},{"location":"05-flask/Flask_todo/18-Flask%20%E9%82%AE%E4%BB%B6/#message","text":"\u5b83\u5c01\u88c5\u4e86\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\u3002Message\u7c7b\u6784\u9020\u51fd\u6570\u6709\u51e0\u4e2a\u53c2\u6570: flask-mail.Message(subject, recipients, body, html, sender, cc, bcc, reply-to, date, charset, extra_headers, mail_options, rcpt_options)","title":"Message\u7c7b"},{"location":"05-flask/Flask_todo/18-Flask%20%E9%82%AE%E4%BB%B6/#message_1","text":"attach() - \u4e3a\u90ae\u4ef6\u6dfb\u52a0\u9644\u4ef6\u3002\u6b64\u65b9\u6cd5\u91c7\u7528\u4ee5\u4e0b\u53c2\u6570\uff1a filename - \u8981\u9644\u52a0\u7684\u6587\u4ef6\u7684\u540d\u79f0 content_type - MIME\u7c7b\u578b\u7684\u6587\u4ef6 data - \u539f\u59cb\u6587\u4ef6\u6570\u636e \u5904\u7f6e - \u5185\u5bb9\u5904\u7f6e\uff08\u5982\u679c\u6709\u7684\u8bdd\uff09\u3002 add_recipient() - \u5411\u90ae\u4ef6\u6dfb\u52a0\u53e6\u4e00\u4e2a\u6536\u4ef6\u4eba \u5728\u4e0b\u9762\u7684\u793a\u4f8b\u4e2d\uff0cGoogle gmail\u670d\u52a1\u7684SMTP\u670d\u52a1\u5668\u7528\u4f5cFlask-Mail\u914d\u7f6e\u7684MAIL_SERVER\u3002 \u6b65\u9aa41 - \u5728\u4ee3\u7801\u4e2d\u4eceflask-mail\u6a21\u5757\u5bfc\u5165Mail\u548cMessage\u7c7b\u3002 from flask_mail import Mail, Message \u6b65\u9aa42 - \u7136\u540e\u6309\u7167\u4ee5\u4e0b\u8bbe\u7f6e\u914d\u7f6eFlask-Mail\u3002 app.config['MAIL_SERVER']='smtp.gmail.com' app.config['MAIL_PORT'] = 465 app.config['MAIL_USERNAME'] = 'yourId@gmail.com' app.config['MAIL_PASSWORD'] = '*****' app.config['MAIL_USE_TLS'] = False app.config['MAIL_USE_SSL'] = True \u6b65\u9aa43 - \u521b\u5efaMail\u7c7b\u7684\u5b9e\u4f8b\u3002 mail = Mail(app) \u6b65\u9aa44 - \u5728\u7531URL\u89c4\u5219**\uff08\u2018/\u2019\uff09**\u6620\u5c04\u7684Python\u51fd\u6570\u4e2d\u8bbe\u7f6eMessage\u5bf9\u8c61\u3002 @app.route(\"/\") def index(): msg = Message('Hello', sender = 'yourId@gmail.com', recipients = ['id1@gmail.com']) msg.body = \"This is the email body\" mail.send(msg) return \"Sent\" \u6b65\u9aa45 - \u6574\u4e2a\u4ee3\u7801\u5982\u4e0b\u3002\u5728Python Shell\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u811a\u672c\u5e76\u8bbf\u95ee** http://localhost:5000/ \u3002** from flask import Flask from flask_mail import Mail, Message app =Flask(__name__) mail=Mail(app) app.config['MAIL_SERVER']='smtp.gmail.com' app.config['MAIL_PORT'] = 465 app.config['MAIL_USERNAME'] = 'yourId@gmail.com' app.config['MAIL_PASSWORD'] = '*****' app.config['MAIL_USE_TLS'] = False app.config['MAIL_USE_SSL'] = True mail = Mail(app) @app.route(\"/\") def index(): msg = Message('Hello', sender = 'yourId@gmail.com', recipients = ['id1@gmail.com']) msg.body = \"Hello Flask message sent from Flask-Mail\" mail.send(msg) return \"Sent\" if __name__ == '__main__': app.run(debug = True) \u8bf7\u6ce8\u610f\uff0cGmail\u670d\u52a1\u4e2d\u7684\u5185\u7f6e\u4e0d\u5b89\u5168\u529f\u80fd\u53ef\u80fd\u4f1a\u963b\u6b62\u6b64\u6b21\u767b\u5f55\u5c1d\u8bd5\u3002\u60a8\u53ef\u80fd\u5fc5\u987b\u964d\u4f4e\u5b89\u5168\u7ea7\u522b\u3002\u8bf7\u767b\u5f55\u60a8\u7684Gmail\u5e10\u6237\u5e76\u8bbf\u95ee\u6b64 \u94fe\u63a5 \u4ee5\u964d\u4f4e\u5b89\u5168\u6027\u3002","title":"Message\u7c7b\u65b9\u6cd5"},{"location":"05-flask/Flask_todo/19-Flask%20WTF/","text":"Flask WTF \u00b6 Flask WTF \u00b6 Web\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u65b9\u9762\u662f\u4e3a\u7528\u6237\u63d0\u4f9b\u7528\u6237\u754c\u9762\u3002HTML\u63d0\u4f9b\u4e86\u4e00\u4e2a****\u6807\u7b7e\uff0c\u7528\u4e8e\u8bbe\u8ba1\u754c\u9762\u3002\u53ef\u4ee5\u9002\u5f53\u5730\u4f7f\u7528**Form\uff08\u8868\u5355\uff09**\u5143\u7d20\uff0c\u4f8b\u5982\u6587\u672c\u8f93\u5165\uff0c\u5355\u9009\u6309\u94ae\uff0c\u9009\u62e9\u7b49\u3002 \u7528\u6237\u8f93\u5165\u7684\u6570\u636e\u4ee5Http\u8bf7\u6c42\u6d88\u606f\u7684\u5f62\u5f0f\u901a\u8fc7GET\u6216POST\u65b9\u6cd5\u63d0\u4ea4\u7ed9\u670d\u52a1\u5668\u7aef\u811a\u672c\u3002 \u670d\u52a1\u5668\u7aef\u811a\u672c\u5fc5\u987b\u4ecehttp\u8bf7\u6c42\u6570\u636e\u91cd\u65b0\u521b\u5efa\u8868\u5355\u5143\u7d20\u3002\u56e0\u6b64\uff0c\u5b9e\u9645\u4e0a\uff0c\u8868\u5355\u5143\u7d20\u5fc5\u987b\u5b9a\u4e49\u4e24\u6b21 - \u4e00\u6b21\u5728HTML\u4e2d\uff0c\u53e6\u4e00\u6b21\u5728\u670d\u52a1\u5668\u7aef\u811a\u672c\u4e2d\u3002 \u4f7f\u7528HTML\u8868\u5355\u7684\u53e6\u4e00\u4e2a\u7f3a\u70b9\u662f\u5f88\u96be\uff08\u5982\u679c\u4e0d\u662f\u4e0d\u53ef\u80fd\u7684\u8bdd\uff09\u52a8\u6001\u5448\u73b0\u8868\u5355\u5143\u7d20\u3002HTML\u672c\u8eab\u65e0\u6cd5\u9a8c\u8bc1\u7528\u6237\u7684\u8f93\u5165\u3002 \u8fd9\u5c31\u662f**WTForms**\u7684\u4f5c\u7528\uff0c\u4e00\u4e2a\u7075\u6d3b\u7684\u8868\u5355\uff0c\u6e32\u67d3\u548c\u9a8c\u8bc1\u5e93\uff0c\u80fd\u591f\u65b9\u4fbf\u4f7f\u7528\u3002Flask-WTF\u6269\u5c55\u4e3a\u8fd9\u4e2a**WTForms**\u5e93\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3\u3002 \u4f7f\u7528**Flask-WTF**\uff0c\u6211\u4eec\u53ef\u4ee5\u5728Python\u811a\u672c\u4e2d\u5b9a\u4e49\u8868\u5355\u5b57\u6bb5\uff0c\u5e76\u4f7f\u7528HTML\u6a21\u677f\u8fdb\u884c\u6e32\u67d3\u3002\u8fd8\u53ef\u4ee5\u5c06\u9a8c\u8bc1\u5e94\u7528\u4e8e**WTF**\u5b57\u6bb5\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u79cd\u52a8\u6001\u751f\u6210\u7684HTML\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u9996\u5148\uff0c\u9700\u8981\u5b89\u88c5Flask-WTF\u6269\u5c55\u3002 pip install flask-WTF \u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\u5305\u542b\u4e00\u4e2a**Form**\u7c7b\uff0c\u8be5\u7c7b\u5fc5\u987b\u7528\u4f5c\u7528\u6237\u5b9a\u4e49\u8868\u5355\u7684\u7236\u7ea7\u3002 WTforms**\u5305\u4e2d\u5305\u542b\u5404\u79cd\u8868\u5355\u5b57\u6bb5\u7684\u5b9a\u4e49\u3002\u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b**\u6807\u51c6\u8868\u5355\u5b57\u6bb5 \u3002 \u5e8f\u53f7 \u6807\u51c6\u8868\u5355\u5b57\u6bb5\u4e0e\u63cf\u8ff0 1 **TextField**\u8868\u793a HTML\u8868\u5355\u5143\u7d20 2 **BooleanField**\u8868\u793a HTML\u8868\u5355\u5143\u7d20 3 **DecimalField**\u7528\u4e8e\u663e\u793a\u5e26\u5c0f\u6570\u7684\u6570\u5b57\u7684\u6587\u672c\u5b57\u6bb5 4 **IntegerField**\u7528\u4e8e\u663e\u793a\u6574\u6570\u7684\u6587\u672c\u5b57\u6bb5 5 **RadioField**\u8868\u793a HTML\u8868\u5355\u5143\u7d20 6 **SelectField**\u8868\u793a\u9009\u62e9\u8868\u5355\u5143\u7d20 7 **TextAreaField**\u8868\u793a HTML\u8868\u5355\u5143\u7d20 8 **PasswordField**\u8868\u793a HTML\u8868\u5355\u5143\u7d20 9 **SubmitField**\u8868\u793a \u8868\u5355\u5143\u7d20 \u4f8b\u5982\uff0c\u5305\u542b\u6587\u672c\u5b57\u6bb5\u7684\u8868\u5355\u53ef\u4ee5\u8bbe\u8ba1\u5982\u4e0b\uff1a from flask_wtf import Form from wtforms import TextField class ContactForm(Form): name = TextField(\"Name Of Student\") \u9664\u4e86**'name'**\u5b57\u6bb5\uff0c\u8fd8\u4f1a\u81ea\u52a8\u521b\u5efaCSRF\u4ee4\u724c\u7684\u9690\u85cf\u5b57\u6bb5\u3002\u8fd9\u662f\u4e3a\u4e86\u9632\u6b62**Cross Site Request Forgery\uff08* \u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020* \uff09**\u653b\u51fb\u3002 \u6e32\u67d3\u65f6\uff0c\u8fd9\u5c06\u5bfc\u81f4\u7b49\u6548\u7684HTML\u811a\u672c\uff0c\u5982\u4e0b\u6240\u793a\uff1a <input id = \"csrf_token\" name = \"csrf_token\" type = \"hidden\" /> <label for = \"name\">Name Of Student</label><br> <input id = \"name\" name = \"name\" type = \"text\" value = \"\" /> \u5728Flask\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7528\u6237\u5b9a\u4e49\u7684\u8868\u5355\u7c7b\uff0c\u5e76\u4f7f\u7528\u6a21\u677f\u5448\u73b0\u8868\u5355\u3002 from flask import Flask, render_template from forms import ContactForm app = Flask(__name__) app.secret_key = 'development key' @app.route('/contact') def contact(): form = ContactForm() return render_template('contact.html', form = form) if __name__ == '__main__': app.run(debug = True) WTForms\u5305\u4e5f\u5305\u542b\u9a8c\u8bc1\u5668\u7c7b\u3002\u5b83\u5bf9\u8868\u5355\u5b57\u6bb5\u5e94\u7528\u9a8c\u8bc1\u5f88\u6709\u7528\u3002\u4ee5\u4e0b\u5217\u8868\u663e\u793a\u4e86\u5e38\u7528\u7684\u9a8c\u8bc1\u5668\u3002 \u5e8f\u53f7 \u9a8c\u8bc1\u5668\u7c7b\u4e0e\u63cf\u8ff0 1 **DataRequired**\u68c0\u67e5\u8f93\u5165\u5b57\u6bb5\u662f\u5426\u4e3a\u7a7a 2 **Email **\u68c0\u67e5\u5b57\u6bb5\u4e2d\u7684\u6587\u672c\u662f\u5426\u9075\u5faa\u7535\u5b50\u90ae\u4ef6ID\u7ea6\u5b9a 3 IPAddress \u5728\u8f93\u5165\u5b57\u6bb5\u4e2d\u9a8c\u8bc1IP\u5730\u5740 4 Length \u9a8c\u8bc1\u8f93\u5165\u5b57\u6bb5\u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f\u5426\u5728\u7ed9\u5b9a\u8303\u56f4\u5185 5 **NumberRange**\u9a8c\u8bc1\u7ed9\u5b9a\u8303\u56f4\u5185\u8f93\u5165\u5b57\u6bb5\u4e2d\u7684\u6570\u5b57 6 **URL**\u9a8c\u8bc1\u5728\u8f93\u5165\u5b57\u6bb5\u4e2d\u8f93\u5165\u7684URL \u73b0\u5728\uff0c\u6211\u4eec\u5c06\u5bf9\u8054\u7cfb\u8868\u5355\u4e2d\u7684**name**\u5b57\u6bb5\u5e94\u7528**'DataRequired'**\u9a8c\u8bc1\u89c4\u5219\u3002 name = TextField(\"Name Of Student\",[validators.Required(\"Please enter your name.\")]) \u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff0c\u8868\u5355\u5bf9\u8c61\u7684**validate()**\u51fd\u6570\u5c06\u9a8c\u8bc1\u8868\u5355\u6570\u636e\u5e76\u629b\u51fa\u9a8c\u8bc1\u9519\u8bef\u3002**Error**\u6d88\u606f\u5c06\u53d1\u9001\u5230\u6a21\u677f\u3002\u5728HTML\u6a21\u677f\u4e2d\uff0c\u52a8\u6001\u5448\u73b0error\u6d88\u606f\u3002 {% for message in form.name.errors %} {{ message }} {% endfor %} \u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u4e86\u4e0a\u9762\u7ed9\u51fa\u7684\u6982\u5ff5\u3002 Contact\u8868\u5355**\u7684\u8bbe\u8ba1\u5982\u4e0b \uff08forms.py\uff09**\u3002 from flask_wtf import Form from wtforms import TextField, IntegerField, TextAreaField, SubmitField, RadioField, SelectField from wtforms import validators, ValidationError class ContactForm(Form): name = TextField(\"Name Of Student\",[validators.Required(\"Please enter your name.\")]) Gender = RadioField('Gender', choices = [('M','Male'),('F','Female')]) Address = TextAreaField(\"Address\") email = TextField(\"Email\",[validators.Required(\"Please enter your email address.\"), validators.Email(\"Please enter your email address.\")]) Age = IntegerField(\"age\") language = SelectField('Languages', choices = [('cpp', 'C&plus;&plus;'), ('py', 'Python')]) submit = SubmitField(\"Send\") \u9a8c\u8bc1\u5668\u5e94\u7528\u4e8e**Name**\u548c**Email**\u5b57\u6bb5\u3002 \u4e0b\u9762\u7ed9\u51fa\u4e86Flask\u5e94\u7528\u7a0b\u5e8f\u811a\u672c**\uff08formexample.py\uff09**\u3002 from flask import Flask, render_template, request, flash from forms import ContactForm app = Flask(__name__) app.secret_key = 'development key' @app.route('/contact', methods = ['GET', 'POST']) def contact(): form = ContactForm() if request.method == 'POST': if form.validate() == False: flash('All fields are required.') return render_template('contact.html', form = form) else: return render_template('success.html') elif request.method == 'GET': return render_template('contact.html', form = form) if __name__ == '__main__': app.run(debug = True) \u6a21\u677f**\uff08contact.html\uff09**\u7684\u811a\u672c\u5982\u4e0b\uff1a <!doctype html> <html> <body> <h2 style = \"text-align: center;\">Contact Form</h2> {% for message in form.name.errors %} <div>{{ message }}</div> {% endfor %} {% for message in form.email.errors %} <div>{{ message }}</div> {% endfor %} <form action = \"http://localhost:5000/contact\" method = post> <fieldset> <legend>Contact Form</legend> {{ form.hidden_tag() }} <div style = font-size:20px; font-weight:bold; margin-left:150px;> {{ form.name.label }}<br> {{ form.name }} <br> {{ form.Gender.label }} {{ form.Gender }} {{ form.Address.label }}<br> {{ form.Address }} <br> {{ form.email.label }}<br> {{ form.email }} <br> {{ form.Age.label }}<br> {{ form.Age }} <br> {{ form.language.label }}<br> {{ form.language }} <br> {{ form.submit }} </div> </fieldset> </form> </body> </html> \u5728Python shell\u4e2d\u8fd0\u884c**formexample.py**\uff0c\u8bbf\u95eeURL http://localhost:5000/contact \u3002\u663e\u793a**Contact**\u8868\u5355\u5c06\u5982\u4e0b\u6240\u793a\u3002 \u5982\u679c\u6709\u4efb\u4f55\u9519\u8bef\uff0c\u9875\u9762\u5c06\u5982\u4e0b\u6240\u793a\uff1a \u5982\u679c\u6ca1\u6709\u9519\u8bef\uff0c\u5c06\u663e\u793a**'success.html'**\u3002","title":"19-Flask WTF"},{"location":"05-flask/Flask_todo/19-Flask%20WTF/#flask-wtf","text":"","title":"Flask WTF"},{"location":"05-flask/Flask_todo/19-Flask%20WTF/#flask-wtf_1","text":"Web\u5e94\u7528\u7a0b\u5e8f\u7684\u4e00\u4e2a\u91cd\u8981\u65b9\u9762\u662f\u4e3a\u7528\u6237\u63d0\u4f9b\u7528\u6237\u754c\u9762\u3002HTML\u63d0\u4f9b\u4e86\u4e00\u4e2a****\u6807\u7b7e\uff0c\u7528\u4e8e\u8bbe\u8ba1\u754c\u9762\u3002\u53ef\u4ee5\u9002\u5f53\u5730\u4f7f\u7528**Form\uff08\u8868\u5355\uff09**\u5143\u7d20\uff0c\u4f8b\u5982\u6587\u672c\u8f93\u5165\uff0c\u5355\u9009\u6309\u94ae\uff0c\u9009\u62e9\u7b49\u3002 \u7528\u6237\u8f93\u5165\u7684\u6570\u636e\u4ee5Http\u8bf7\u6c42\u6d88\u606f\u7684\u5f62\u5f0f\u901a\u8fc7GET\u6216POST\u65b9\u6cd5\u63d0\u4ea4\u7ed9\u670d\u52a1\u5668\u7aef\u811a\u672c\u3002 \u670d\u52a1\u5668\u7aef\u811a\u672c\u5fc5\u987b\u4ecehttp\u8bf7\u6c42\u6570\u636e\u91cd\u65b0\u521b\u5efa\u8868\u5355\u5143\u7d20\u3002\u56e0\u6b64\uff0c\u5b9e\u9645\u4e0a\uff0c\u8868\u5355\u5143\u7d20\u5fc5\u987b\u5b9a\u4e49\u4e24\u6b21 - \u4e00\u6b21\u5728HTML\u4e2d\uff0c\u53e6\u4e00\u6b21\u5728\u670d\u52a1\u5668\u7aef\u811a\u672c\u4e2d\u3002 \u4f7f\u7528HTML\u8868\u5355\u7684\u53e6\u4e00\u4e2a\u7f3a\u70b9\u662f\u5f88\u96be\uff08\u5982\u679c\u4e0d\u662f\u4e0d\u53ef\u80fd\u7684\u8bdd\uff09\u52a8\u6001\u5448\u73b0\u8868\u5355\u5143\u7d20\u3002HTML\u672c\u8eab\u65e0\u6cd5\u9a8c\u8bc1\u7528\u6237\u7684\u8f93\u5165\u3002 \u8fd9\u5c31\u662f**WTForms**\u7684\u4f5c\u7528\uff0c\u4e00\u4e2a\u7075\u6d3b\u7684\u8868\u5355\uff0c\u6e32\u67d3\u548c\u9a8c\u8bc1\u5e93\uff0c\u80fd\u591f\u65b9\u4fbf\u4f7f\u7528\u3002Flask-WTF\u6269\u5c55\u4e3a\u8fd9\u4e2a**WTForms**\u5e93\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3\u3002 \u4f7f\u7528**Flask-WTF**\uff0c\u6211\u4eec\u53ef\u4ee5\u5728Python\u811a\u672c\u4e2d\u5b9a\u4e49\u8868\u5355\u5b57\u6bb5\uff0c\u5e76\u4f7f\u7528HTML\u6a21\u677f\u8fdb\u884c\u6e32\u67d3\u3002\u8fd8\u53ef\u4ee5\u5c06\u9a8c\u8bc1\u5e94\u7528\u4e8e**WTF**\u5b57\u6bb5\u3002 \u8ba9\u6211\u4eec\u770b\u770b\u8fd9\u79cd\u52a8\u6001\u751f\u6210\u7684HTML\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u9996\u5148\uff0c\u9700\u8981\u5b89\u88c5Flask-WTF\u6269\u5c55\u3002 pip install flask-WTF \u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\u5305\u542b\u4e00\u4e2a**Form**\u7c7b\uff0c\u8be5\u7c7b\u5fc5\u987b\u7528\u4f5c\u7528\u6237\u5b9a\u4e49\u8868\u5355\u7684\u7236\u7ea7\u3002 WTforms**\u5305\u4e2d\u5305\u542b\u5404\u79cd\u8868\u5355\u5b57\u6bb5\u7684\u5b9a\u4e49\u3002\u4e0b\u9762\u5217\u51fa\u4e86\u4e00\u4e9b**\u6807\u51c6\u8868\u5355\u5b57\u6bb5 \u3002 \u5e8f\u53f7 \u6807\u51c6\u8868\u5355\u5b57\u6bb5\u4e0e\u63cf\u8ff0 1 **TextField**\u8868\u793a HTML\u8868\u5355\u5143\u7d20 2 **BooleanField**\u8868\u793a HTML\u8868\u5355\u5143\u7d20 3 **DecimalField**\u7528\u4e8e\u663e\u793a\u5e26\u5c0f\u6570\u7684\u6570\u5b57\u7684\u6587\u672c\u5b57\u6bb5 4 **IntegerField**\u7528\u4e8e\u663e\u793a\u6574\u6570\u7684\u6587\u672c\u5b57\u6bb5 5 **RadioField**\u8868\u793a HTML\u8868\u5355\u5143\u7d20 6 **SelectField**\u8868\u793a\u9009\u62e9\u8868\u5355\u5143\u7d20 7 **TextAreaField**\u8868\u793a HTML\u8868\u5355\u5143\u7d20 8 **PasswordField**\u8868\u793a HTML\u8868\u5355\u5143\u7d20 9 **SubmitField**\u8868\u793a \u8868\u5355\u5143\u7d20 \u4f8b\u5982\uff0c\u5305\u542b\u6587\u672c\u5b57\u6bb5\u7684\u8868\u5355\u53ef\u4ee5\u8bbe\u8ba1\u5982\u4e0b\uff1a from flask_wtf import Form from wtforms import TextField class ContactForm(Form): name = TextField(\"Name Of Student\") \u9664\u4e86**'name'**\u5b57\u6bb5\uff0c\u8fd8\u4f1a\u81ea\u52a8\u521b\u5efaCSRF\u4ee4\u724c\u7684\u9690\u85cf\u5b57\u6bb5\u3002\u8fd9\u662f\u4e3a\u4e86\u9632\u6b62**Cross Site Request Forgery\uff08* \u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020* \uff09**\u653b\u51fb\u3002 \u6e32\u67d3\u65f6\uff0c\u8fd9\u5c06\u5bfc\u81f4\u7b49\u6548\u7684HTML\u811a\u672c\uff0c\u5982\u4e0b\u6240\u793a\uff1a <input id = \"csrf_token\" name = \"csrf_token\" type = \"hidden\" /> <label for = \"name\">Name Of Student</label><br> <input id = \"name\" name = \"name\" type = \"text\" value = \"\" /> \u5728Flask\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7528\u6237\u5b9a\u4e49\u7684\u8868\u5355\u7c7b\uff0c\u5e76\u4f7f\u7528\u6a21\u677f\u5448\u73b0\u8868\u5355\u3002 from flask import Flask, render_template from forms import ContactForm app = Flask(__name__) app.secret_key = 'development key' @app.route('/contact') def contact(): form = ContactForm() return render_template('contact.html', form = form) if __name__ == '__main__': app.run(debug = True) WTForms\u5305\u4e5f\u5305\u542b\u9a8c\u8bc1\u5668\u7c7b\u3002\u5b83\u5bf9\u8868\u5355\u5b57\u6bb5\u5e94\u7528\u9a8c\u8bc1\u5f88\u6709\u7528\u3002\u4ee5\u4e0b\u5217\u8868\u663e\u793a\u4e86\u5e38\u7528\u7684\u9a8c\u8bc1\u5668\u3002 \u5e8f\u53f7 \u9a8c\u8bc1\u5668\u7c7b\u4e0e\u63cf\u8ff0 1 **DataRequired**\u68c0\u67e5\u8f93\u5165\u5b57\u6bb5\u662f\u5426\u4e3a\u7a7a 2 **Email **\u68c0\u67e5\u5b57\u6bb5\u4e2d\u7684\u6587\u672c\u662f\u5426\u9075\u5faa\u7535\u5b50\u90ae\u4ef6ID\u7ea6\u5b9a 3 IPAddress \u5728\u8f93\u5165\u5b57\u6bb5\u4e2d\u9a8c\u8bc1IP\u5730\u5740 4 Length \u9a8c\u8bc1\u8f93\u5165\u5b57\u6bb5\u4e2d\u7684\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f\u5426\u5728\u7ed9\u5b9a\u8303\u56f4\u5185 5 **NumberRange**\u9a8c\u8bc1\u7ed9\u5b9a\u8303\u56f4\u5185\u8f93\u5165\u5b57\u6bb5\u4e2d\u7684\u6570\u5b57 6 **URL**\u9a8c\u8bc1\u5728\u8f93\u5165\u5b57\u6bb5\u4e2d\u8f93\u5165\u7684URL \u73b0\u5728\uff0c\u6211\u4eec\u5c06\u5bf9\u8054\u7cfb\u8868\u5355\u4e2d\u7684**name**\u5b57\u6bb5\u5e94\u7528**'DataRequired'**\u9a8c\u8bc1\u89c4\u5219\u3002 name = TextField(\"Name Of Student\",[validators.Required(\"Please enter your name.\")]) \u5982\u679c\u9a8c\u8bc1\u5931\u8d25\uff0c\u8868\u5355\u5bf9\u8c61\u7684**validate()**\u51fd\u6570\u5c06\u9a8c\u8bc1\u8868\u5355\u6570\u636e\u5e76\u629b\u51fa\u9a8c\u8bc1\u9519\u8bef\u3002**Error**\u6d88\u606f\u5c06\u53d1\u9001\u5230\u6a21\u677f\u3002\u5728HTML\u6a21\u677f\u4e2d\uff0c\u52a8\u6001\u5448\u73b0error\u6d88\u606f\u3002 {% for message in form.name.errors %} {{ message }} {% endfor %} \u4ee5\u4e0b\u793a\u4f8b\u6f14\u793a\u4e86\u4e0a\u9762\u7ed9\u51fa\u7684\u6982\u5ff5\u3002 Contact\u8868\u5355**\u7684\u8bbe\u8ba1\u5982\u4e0b \uff08forms.py\uff09**\u3002 from flask_wtf import Form from wtforms import TextField, IntegerField, TextAreaField, SubmitField, RadioField, SelectField from wtforms import validators, ValidationError class ContactForm(Form): name = TextField(\"Name Of Student\",[validators.Required(\"Please enter your name.\")]) Gender = RadioField('Gender', choices = [('M','Male'),('F','Female')]) Address = TextAreaField(\"Address\") email = TextField(\"Email\",[validators.Required(\"Please enter your email address.\"), validators.Email(\"Please enter your email address.\")]) Age = IntegerField(\"age\") language = SelectField('Languages', choices = [('cpp', 'C&plus;&plus;'), ('py', 'Python')]) submit = SubmitField(\"Send\") \u9a8c\u8bc1\u5668\u5e94\u7528\u4e8e**Name**\u548c**Email**\u5b57\u6bb5\u3002 \u4e0b\u9762\u7ed9\u51fa\u4e86Flask\u5e94\u7528\u7a0b\u5e8f\u811a\u672c**\uff08formexample.py\uff09**\u3002 from flask import Flask, render_template, request, flash from forms import ContactForm app = Flask(__name__) app.secret_key = 'development key' @app.route('/contact', methods = ['GET', 'POST']) def contact(): form = ContactForm() if request.method == 'POST': if form.validate() == False: flash('All fields are required.') return render_template('contact.html', form = form) else: return render_template('success.html') elif request.method == 'GET': return render_template('contact.html', form = form) if __name__ == '__main__': app.run(debug = True) \u6a21\u677f**\uff08contact.html\uff09**\u7684\u811a\u672c\u5982\u4e0b\uff1a <!doctype html> <html> <body> <h2 style = \"text-align: center;\">Contact Form</h2> {% for message in form.name.errors %} <div>{{ message }}</div> {% endfor %} {% for message in form.email.errors %} <div>{{ message }}</div> {% endfor %} <form action = \"http://localhost:5000/contact\" method = post> <fieldset> <legend>Contact Form</legend> {{ form.hidden_tag() }} <div style = font-size:20px; font-weight:bold; margin-left:150px;> {{ form.name.label }}<br> {{ form.name }} <br> {{ form.Gender.label }} {{ form.Gender }} {{ form.Address.label }}<br> {{ form.Address }} <br> {{ form.email.label }}<br> {{ form.email }} <br> {{ form.Age.label }}<br> {{ form.Age }} <br> {{ form.language.label }}<br> {{ form.language }} <br> {{ form.submit }} </div> </fieldset> </form> </body> </html> \u5728Python shell\u4e2d\u8fd0\u884c**formexample.py**\uff0c\u8bbf\u95eeURL http://localhost:5000/contact \u3002\u663e\u793a**Contact**\u8868\u5355\u5c06\u5982\u4e0b\u6240\u793a\u3002 \u5982\u679c\u6709\u4efb\u4f55\u9519\u8bef\uff0c\u9875\u9762\u5c06\u5982\u4e0b\u6240\u793a\uff1a \u5982\u679c\u6ca1\u6709\u9519\u8bef\uff0c\u5c06\u663e\u793a**'success.html'**\u3002","title":"Flask WTF"},{"location":"05-flask/Flask_todo/20-Flask%20SQLite/","text":"Flask SQLite \u00b6 Python\u5bf9**SQlite**\u6709\u5185\u7f6e\u7684\u652f\u6301\u3002SQlite3\u6a21\u5757\u9644\u5e26Python\u53d1\u884c\u7248\u3002\u6709\u5173\u5728Python\u4e2d\u4f7f\u7528SQLite\u6570\u636e\u5e93\u7684\u8be6\u7ec6\u6559\u7a0b\uff0c\u8bf7\u53c2\u8003 \u300aSQLite - Python\u300b \u7684\u5185\u5bb9\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4e86\u89e3Flask\u5e94\u7528\u7a0b\u5e8f\u5982\u4f55\u4e0eSQLite\u4ea4\u4e92\u3002 \u521b\u5efa\u4e00\u4e2aSQLite\u6570\u636e\u5e93**'database.db'**\u5e76\u5728\u5176\u4e2d\u521b\u5efa\u5b66\u751f\u8868\u3002 import sqlite3 conn = sqlite3.connect('database.db') print \"Opened database successfully\"; conn.execute('CREATE TABLE students (name TEXT, addr TEXT, city TEXT, pin TEXT)') print \"Table created successfully\"; conn.close() \u6211\u4eec\u7684Flask\u5e94\u7528\u7a0b\u5e8f\u6709\u4e09\u4e2a**View**\u529f\u80fd\u3002 \u7b2c\u4e00\u4e2a**new_student() \u51fd\u6570\u5df2\u7ed1\u5b9a\u5230URL\u89c4\u5219 \uff08'/ addnew'\uff09**\u3002\u5b83\u5448\u73b0\u5305\u542b\u5b66\u751f\u4fe1\u606f\u8868\u5355\u7684HTML\u6587\u4ef6\u3002 @app.route('/enternew') def new_student(): return render_template('student.html') **'student.html'**\u7684HTML\u811a\u672c\u5982\u4e0b\uff1a <html> <body> <form action = \"{{ url_for('addrec') }}\" method = \"POST\"> <h3>Student Information</h3> Name<br> <input type = \"text\" name = \"nm\" /></br> Address<br> <textarea name = \"add\" ></textarea><br> City<br> <input type = \"text\" name = \"city\" /><br> PINCODE<br> <input type = \"text\" name = \"pin\" /><br> <input type = \"submit\" value = \"submit\" /><br> </form> </body> </html> \u53ef\u4ee5\u770b\u51fa\uff0c\u8868\u5355\u6570\u636e\u88ab\u53d1\u5e03\u5230\u7ed1\u5b9a**addrec() \u51fd\u6570\u7684 '/ addrec'** URL\u3002 \u8fd9\u4e2a**addrec() \u51fd\u6570\u901a\u8fc7**POST**\u65b9\u6cd5\u68c0\u7d22\u8868\u5355\u7684\u6570\u636e\uff0c\u5e76\u63d2\u5165\u5b66\u751f\u8868\u4e2d\u3002\u4e0einsert\u64cd\u4f5c\u4e2d\u7684\u6210\u529f\u6216\u9519\u8bef\u76f8\u5bf9\u5e94\u7684\u6d88\u606f\u5c06\u5448\u73b0\u4e3a 'result.html'**\u3002 @app.route('/addrec',methods = ['POST', 'GET']) def addrec(): if request.method == 'POST': try: nm = request.form['nm'] addr = request.form['add'] city = request.form['city'] pin = request.form['pin'] with sql.connect(\"database.db\") as con: cur = con.cursor() cur.execute(\"INSERT INTO students (name,addr,city,pin) VALUES (?,?,?,?)\",(nm,addr,city,pin) ) con.commit() msg = \"Record successfully added\" except: con.rollback() msg = \"error in insert operation\" finally: return render_template(\"result.html\",msg = msg) con.close() result.html**\u7684HTML\u811a\u672c\u5305\u542b\u4e00\u4e2a\u8f6c\u4e49\u8bed\u53e5 {{msg}}**\uff0c\u5b83\u663e\u793a**Insert**\u64cd\u4f5c\u7684\u7ed3\u679c\u3002 <!doctype html> <html> <body> result of addition : {{ msg }} <h2><a href = \"\\\">go back to home page</a></h2> </body> </html> \u8be5\u5e94\u7528\u7a0b\u5e8f\u5305\u542b\u7531**'/ list'** URL\u8868\u793a\u7684\u53e6\u4e00\u4e2a**list() \u51fd\u6570\u3002\u5b83\u5c06 'rows'**\u586b\u5145\u4e3a\u5305\u542b\u5b66\u751f\u8868\u4e2d\u6240\u6709\u8bb0\u5f55\u7684**MultiDict**\u5bf9\u8c61\u3002\u6b64\u5bf9\u8c61\u5c06\u4f20\u9012\u7ed9**list.html**\u6a21\u677f\u3002 @app.route('/list') def list(): con = sql.connect(\"database.db\") con.row_factory = sql.Row cur = con.cursor() cur.execute(\"select * from students\") rows = cur.fetchall(); return render_template(\"list.html\",rows = rows) \u6b64**list.html**\u662f\u4e00\u4e2a\u6a21\u677f\uff0c\u5b83\u904d\u5386\u884c\u96c6\u5e76\u5728HTML\u8868\u4e2d\u5448\u73b0\u6570\u636e\u3002 <!doctype html> <html> <body> <table border = 1> <thead> <td>Name</td> <td>Address>/td< <td>city</td> <td>Pincode</td> </thead> {% for row in rows %} <tr> <td>{{row[\"name\"]}}</td> <td>{{row[\"addr\"]}}</td> <td> {{ row[\"city\"]}}</td> <td>{{row['pin']}}</td> </tr> {% endfor %} </table> <a href = \"/\">Go back to home page</a> </body> </html> \u6700\u540e\uff0c '/' URL**\u89c4\u5219\u5448\u73b0 'home.html'**\uff0c\u5b83\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002 @app.route('/') def home(): return render_template('home.html') \u4ee5\u4e0b\u662f**Flask-SQLite**\u5e94\u7528\u7a0b\u5e8f\u7684\u5b8c\u6574\u4ee3\u7801\u3002 from flask import Flask, render_template, request import sqlite3 as sql app = Flask(__name__) @app.route('/') def home(): return render_template('home.html') @app.route('/enternew') def new_student(): return render_template('student.html') @app.route('/addrec',methods = ['POST', 'GET']) def addrec(): if request.method == 'POST': try: nm = request.form['nm'] addr = request.form['add'] city = request.form['city'] pin = request.form['pin'] with sql.connect(\"database.db\") as con: cur = con.cursor() cur.execute(\"INSERT INTO students (name,addr,city,pin) VALUES (?,?,?,?)\",(nm,addr,city,pin) ) con.commit() msg = \"Record successfully added\" except: con.rollback() msg = \"error in insert operation\" finally: return render_template(\"result.html\",msg = msg) con.close() @app.route('/list') def list(): con = sql.connect(\"database.db\") con.row_factory = sql.Row cur = con.cursor() cur.execute(\"select * from students\") rows = cur.fetchall(); return render_template(\"list.html\",rows = rows) if __name__ == '__main__': app.run(debug = True) \u5728\u5f00\u53d1\u670d\u52a1\u5668\u5f00\u59cb\u8fd0\u884c\u65f6\uff0c\u4ecePython shell\u8fd0\u884c\u6b64\u811a\u672c\u3002\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee** http://localhost:5000/ **\uff0c\u663e\u793a\u4e00\u4e2a\u7b80\u5355\u7684\u83dc\u5355\uff1a \u70b9\u51fb**\u201c\u6dfb\u52a0\u65b0\u8bb0\u5f55\u201d**\u94fe\u63a5\u4ee5\u6253\u5f00**\u5b66\u751f\u4fe1\u606f**\u8868\u5355\u3002 \u586b\u5199\u8868\u5355\u5b57\u6bb5\u5e76\u63d0\u4ea4\u3002\u5e95\u5c42\u51fd\u6570\u5728\u5b66\u751f\u8868\u4e2d\u63d2\u5165\u8bb0\u5f55\u3002 \u8fd4\u56de\u9996\u9875\uff0c\u7136\u540e\u70b9\u51fb**'\u663e\u793a\u5217\u8868'**\u94fe\u63a5\u3002\u5c06\u663e\u793a\u4e00\u4e2a\u663e\u793a\u6837\u54c1\u6570\u636e\u7684\u8868\u3002 \u60a8\u7684\u652f\u6301\u5c06\u9f13\u52b1\u6211\u4eec\u505a\u5f97\u66f4\u597d","title":"20-Flask SQLite"},{"location":"05-flask/Flask_todo/20-Flask%20SQLite/#flask-sqlite","text":"Python\u5bf9**SQlite**\u6709\u5185\u7f6e\u7684\u652f\u6301\u3002SQlite3\u6a21\u5757\u9644\u5e26Python\u53d1\u884c\u7248\u3002\u6709\u5173\u5728Python\u4e2d\u4f7f\u7528SQLite\u6570\u636e\u5e93\u7684\u8be6\u7ec6\u6559\u7a0b\uff0c\u8bf7\u53c2\u8003 \u300aSQLite - Python\u300b \u7684\u5185\u5bb9\u3002\u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4e86\u89e3Flask\u5e94\u7528\u7a0b\u5e8f\u5982\u4f55\u4e0eSQLite\u4ea4\u4e92\u3002 \u521b\u5efa\u4e00\u4e2aSQLite\u6570\u636e\u5e93**'database.db'**\u5e76\u5728\u5176\u4e2d\u521b\u5efa\u5b66\u751f\u8868\u3002 import sqlite3 conn = sqlite3.connect('database.db') print \"Opened database successfully\"; conn.execute('CREATE TABLE students (name TEXT, addr TEXT, city TEXT, pin TEXT)') print \"Table created successfully\"; conn.close() \u6211\u4eec\u7684Flask\u5e94\u7528\u7a0b\u5e8f\u6709\u4e09\u4e2a**View**\u529f\u80fd\u3002 \u7b2c\u4e00\u4e2a**new_student() \u51fd\u6570\u5df2\u7ed1\u5b9a\u5230URL\u89c4\u5219 \uff08'/ addnew'\uff09**\u3002\u5b83\u5448\u73b0\u5305\u542b\u5b66\u751f\u4fe1\u606f\u8868\u5355\u7684HTML\u6587\u4ef6\u3002 @app.route('/enternew') def new_student(): return render_template('student.html') **'student.html'**\u7684HTML\u811a\u672c\u5982\u4e0b\uff1a <html> <body> <form action = \"{{ url_for('addrec') }}\" method = \"POST\"> <h3>Student Information</h3> Name<br> <input type = \"text\" name = \"nm\" /></br> Address<br> <textarea name = \"add\" ></textarea><br> City<br> <input type = \"text\" name = \"city\" /><br> PINCODE<br> <input type = \"text\" name = \"pin\" /><br> <input type = \"submit\" value = \"submit\" /><br> </form> </body> </html> \u53ef\u4ee5\u770b\u51fa\uff0c\u8868\u5355\u6570\u636e\u88ab\u53d1\u5e03\u5230\u7ed1\u5b9a**addrec() \u51fd\u6570\u7684 '/ addrec'** URL\u3002 \u8fd9\u4e2a**addrec() \u51fd\u6570\u901a\u8fc7**POST**\u65b9\u6cd5\u68c0\u7d22\u8868\u5355\u7684\u6570\u636e\uff0c\u5e76\u63d2\u5165\u5b66\u751f\u8868\u4e2d\u3002\u4e0einsert\u64cd\u4f5c\u4e2d\u7684\u6210\u529f\u6216\u9519\u8bef\u76f8\u5bf9\u5e94\u7684\u6d88\u606f\u5c06\u5448\u73b0\u4e3a 'result.html'**\u3002 @app.route('/addrec',methods = ['POST', 'GET']) def addrec(): if request.method == 'POST': try: nm = request.form['nm'] addr = request.form['add'] city = request.form['city'] pin = request.form['pin'] with sql.connect(\"database.db\") as con: cur = con.cursor() cur.execute(\"INSERT INTO students (name,addr,city,pin) VALUES (?,?,?,?)\",(nm,addr,city,pin) ) con.commit() msg = \"Record successfully added\" except: con.rollback() msg = \"error in insert operation\" finally: return render_template(\"result.html\",msg = msg) con.close() result.html**\u7684HTML\u811a\u672c\u5305\u542b\u4e00\u4e2a\u8f6c\u4e49\u8bed\u53e5 {{msg}}**\uff0c\u5b83\u663e\u793a**Insert**\u64cd\u4f5c\u7684\u7ed3\u679c\u3002 <!doctype html> <html> <body> result of addition : {{ msg }} <h2><a href = \"\\\">go back to home page</a></h2> </body> </html> \u8be5\u5e94\u7528\u7a0b\u5e8f\u5305\u542b\u7531**'/ list'** URL\u8868\u793a\u7684\u53e6\u4e00\u4e2a**list() \u51fd\u6570\u3002\u5b83\u5c06 'rows'**\u586b\u5145\u4e3a\u5305\u542b\u5b66\u751f\u8868\u4e2d\u6240\u6709\u8bb0\u5f55\u7684**MultiDict**\u5bf9\u8c61\u3002\u6b64\u5bf9\u8c61\u5c06\u4f20\u9012\u7ed9**list.html**\u6a21\u677f\u3002 @app.route('/list') def list(): con = sql.connect(\"database.db\") con.row_factory = sql.Row cur = con.cursor() cur.execute(\"select * from students\") rows = cur.fetchall(); return render_template(\"list.html\",rows = rows) \u6b64**list.html**\u662f\u4e00\u4e2a\u6a21\u677f\uff0c\u5b83\u904d\u5386\u884c\u96c6\u5e76\u5728HTML\u8868\u4e2d\u5448\u73b0\u6570\u636e\u3002 <!doctype html> <html> <body> <table border = 1> <thead> <td>Name</td> <td>Address>/td< <td>city</td> <td>Pincode</td> </thead> {% for row in rows %} <tr> <td>{{row[\"name\"]}}</td> <td>{{row[\"addr\"]}}</td> <td> {{ row[\"city\"]}}</td> <td>{{row['pin']}}</td> </tr> {% endfor %} </table> <a href = \"/\">Go back to home page</a> </body> </html> \u6700\u540e\uff0c '/' URL**\u89c4\u5219\u5448\u73b0 'home.html'**\uff0c\u5b83\u4f5c\u4e3a\u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u3002 @app.route('/') def home(): return render_template('home.html') \u4ee5\u4e0b\u662f**Flask-SQLite**\u5e94\u7528\u7a0b\u5e8f\u7684\u5b8c\u6574\u4ee3\u7801\u3002 from flask import Flask, render_template, request import sqlite3 as sql app = Flask(__name__) @app.route('/') def home(): return render_template('home.html') @app.route('/enternew') def new_student(): return render_template('student.html') @app.route('/addrec',methods = ['POST', 'GET']) def addrec(): if request.method == 'POST': try: nm = request.form['nm'] addr = request.form['add'] city = request.form['city'] pin = request.form['pin'] with sql.connect(\"database.db\") as con: cur = con.cursor() cur.execute(\"INSERT INTO students (name,addr,city,pin) VALUES (?,?,?,?)\",(nm,addr,city,pin) ) con.commit() msg = \"Record successfully added\" except: con.rollback() msg = \"error in insert operation\" finally: return render_template(\"result.html\",msg = msg) con.close() @app.route('/list') def list(): con = sql.connect(\"database.db\") con.row_factory = sql.Row cur = con.cursor() cur.execute(\"select * from students\") rows = cur.fetchall(); return render_template(\"list.html\",rows = rows) if __name__ == '__main__': app.run(debug = True) \u5728\u5f00\u53d1\u670d\u52a1\u5668\u5f00\u59cb\u8fd0\u884c\u65f6\uff0c\u4ecePython shell\u8fd0\u884c\u6b64\u811a\u672c\u3002\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee** http://localhost:5000/ **\uff0c\u663e\u793a\u4e00\u4e2a\u7b80\u5355\u7684\u83dc\u5355\uff1a \u70b9\u51fb**\u201c\u6dfb\u52a0\u65b0\u8bb0\u5f55\u201d**\u94fe\u63a5\u4ee5\u6253\u5f00**\u5b66\u751f\u4fe1\u606f**\u8868\u5355\u3002 \u586b\u5199\u8868\u5355\u5b57\u6bb5\u5e76\u63d0\u4ea4\u3002\u5e95\u5c42\u51fd\u6570\u5728\u5b66\u751f\u8868\u4e2d\u63d2\u5165\u8bb0\u5f55\u3002 \u8fd4\u56de\u9996\u9875\uff0c\u7136\u540e\u70b9\u51fb**'\u663e\u793a\u5217\u8868'**\u94fe\u63a5\u3002\u5c06\u663e\u793a\u4e00\u4e2a\u663e\u793a\u6837\u54c1\u6570\u636e\u7684\u8868\u3002 \u60a8\u7684\u652f\u6301\u5c06\u9f13\u52b1\u6211\u4eec\u505a\u5f97\u66f4\u597d","title":"Flask SQLite"},{"location":"05-flask/Flask_todo/21-Flask%20SQLAlchemy/","text":"Flask SQLAlchemy \u00b6 Flask SQLAlchemy \u00b6 \u5728Flask Web\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u539f\u59cbSQL\u5bf9\u6570\u636e\u5e93\u6267\u884cCRUD\u64cd\u4f5c\u53ef\u80fd\u5f88\u7e41\u7410\u3002\u76f8\u53cd\uff0c SQLAlchemy \uff0cPython\u5de5\u5177\u5305\u662f\u4e00\u4e2a\u5f3a\u5927\u7684**OR Mapper**\uff0c\u5b83\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86SQL\u7684\u5168\u90e8\u529f\u80fd\u548c\u7075\u6d3b\u6027\u3002Flask-SQLAlchemy\u662fFlask\u6269\u5c55\uff0c\u5b83\u5c06\u5bf9SQLAlchemy\u7684\u652f\u6301\u6dfb\u52a0\u5230Flask\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002 \u4ec0\u4e48\u662fORM\uff08Object Relation Mapping\uff0c\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff09\uff1f \u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u5e73\u53f0\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u53e6\u4e00\u65b9\u9762\uff0cRDBMS\u670d\u52a1\u5668\u4e2d\u7684\u6570\u636e\u5b58\u50a8\u4e3a\u8868\u3002\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\u662f\u5c06\u5bf9\u8c61\u53c2\u6570\u6620\u5c04\u5230\u5e95\u5c42RDBMS\u8868\u7ed3\u6784\u7684\u6280\u672f\u3002ORM API\u63d0\u4f9b\u4e86\u6267\u884cCRUD\u64cd\u4f5c\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u5fc5\u7f16\u5199\u539f\u59cbSQL\u8bed\u53e5\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u7814\u7a76Flask-SQLAlchemy\u7684ORM\u6280\u672f\u5e76\u6784\u5efa\u4e00\u4e2a\u5c0f\u578bWeb\u5e94\u7528\u7a0b\u5e8f\u3002 \u6b65\u9aa41 - \u5b89\u88c5Flask-SQLAlchemy\u6269\u5c55\u3002 pip install flask-sqlalchemy \u6b65\u9aa42 - \u60a8\u9700\u8981\u4ece\u6b64\u6a21\u5757\u5bfc\u5165SQLAlchemy\u7c7b\u3002 from flask_sqlalchemy import SQLAlchemy \u6b65\u9aa43 - \u73b0\u5728\u521b\u5efa\u4e00\u4e2aFlask\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\u5e76\u4e3a\u8981\u4f7f\u7528\u7684\u6570\u636e\u5e93\u8bbe\u7f6eURI\u3002 app = Flask(__name__) app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///students.sqlite3' \u6b65\u9aa44 - \u7136\u540e\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u521b\u5efaSQLAlchemy\u7c7b\u7684\u5bf9\u8c61\u3002\u8be5\u5bf9\u8c61\u5305\u542b\u7528\u4e8eORM\u64cd\u4f5c\u7684\u8f85\u52a9\u51fd\u6570\u3002\u5b83\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7236Model\u7c7b\uff0c\u4f7f\u7528\u5b83\u6765\u58f0\u660e\u7528\u6237\u5b9a\u4e49\u7684\u6a21\u578b\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u4e2d\uff0c\u521b\u5efa\u4e86**students**\u6a21\u578b\u3002 db = SQLAlchemy(app) class students(db.Model): id = db.Column('student_id', db.Integer, primary_key = True) name = db.Column(db.String(100)) city = db.Column(db.String(50)) addr = db.Column(db.String(200)) pin = db.Column(db.String(10)) def __init__(self, name, city, addr,pin): self.name = name self.city = city self.addr = addr self.pin = pin \u6b65\u9aa45 - \u8981\u521b\u5efa/\u4f7f\u7528URI\u4e2d\u63d0\u53ca\u7684\u6570\u636e\u5e93\uff0c\u8bf7\u8fd0\u884c**create_all()**\u65b9\u6cd5\u3002 db.create_all() **SQLAlchemy**\u7684**Session**\u5bf9\u8c61\u7ba1\u7406**ORM**\u5bf9\u8c61\u7684\u6240\u6709\u6301\u4e45\u6027\u64cd\u4f5c\u3002 \u4ee5\u4e0bsession\u65b9\u6cd5\u6267\u884cCRUD\u64cd\u4f5c\uff1a db.session.add (\u6a21\u578b\u5bf9\u8c61) - \u5c06\u8bb0\u5f55\u63d2\u5165\u5230\u6620\u5c04\u8868\u4e2d db.session.delete (\u6a21\u578b\u5bf9\u8c61) - \u4ece\u8868\u4e2d\u5220\u9664\u8bb0\u5f55 model.query.all() - \u4ece\u8868\u4e2d\u68c0\u7d22\u6240\u6709\u8bb0\u5f55\uff08\u5bf9\u5e94\u4e8eSELECT\u67e5\u8be2\uff09\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528filter\u5c5e\u6027\u5c06\u8fc7\u6ee4\u5668\u5e94\u7528\u4e8e\u68c0\u7d22\u5230\u7684\u8bb0\u5f55\u96c6\u3002\u4f8b\u5982\uff0c\u8981\u5728\u5b66\u751f\u8868\u4e2d\u68c0\u7d22**city ='Hyderabad'**\u7684\u8bb0\u5f55\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\uff1a Students.query.filter_by(city = \u2019Hyderabad\u2019).all() \u6709\u4e86\u8fd9\u4e48\u591a\u7684\u80cc\u666f\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u4e3a\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u89c6\u56fe\u51fd\u6570\u6765\u6dfb\u52a0\u5b66\u751f\u6570\u636e\u3002 \u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u662f\u7ed1\u5b9a\u5230**'/'** URL\u7684**show_all()**\u51fd\u6570\u3002\u5b66\u751f\u8868\u7684\u8bb0\u5f55\u96c6\u4f5c\u4e3a\u53c2\u6570\u53d1\u9001\u5230HTML\u6a21\u677f\u3002\u6a21\u677f\u4e2d\u7684\u670d\u52a1\u5668\u7aef\u4ee3\u7801\u4ee5HTML\u8868\u683c\u5f62\u5f0f\u5448\u73b0\u8bb0\u5f55\u3002 @app.route('/') def show_all(): return render_template('show_all.html', students = students.query.all() ) \u6a21\u677f**\uff08'show_all.html'\uff09**\u7684HTML\u811a\u672c\u5982\u4e0b\uff1a <!DOCTYPE html> <html lang = \"en\"> <head></head> <body> <h3> <a href = \"{{ url_for('show_all') }}\">Comments - Flask SQLAlchemy example</a> </h3> <hr/> {%- for message in get_flashed_messages() %} {{ message }} {%- endfor %} <h3>Students (<a href = \"{{ url_for('new') }}\">Add Student </a>)</h3> <table> <thead> <tr> <th>Name</th> <th>City</th> <th>Address</th> <th>Pin</th> </tr> </thead> <tbody> {% for student in students %} <tr> <td>{{ student.name }}</td> <td>{{ student.city }}</td> <td>{{ student.addr }}</td> <td>{{ student.pin }}</td> </tr> {% endfor %} </tbody> </table> </body> </html> \u4e0a\u8ff0\u7f51\u9875\u5305\u542b\u6307\u5411**'/ new' URL**\u6620\u5c04**new()**\u51fd\u6570\u7684\u8d85\u94fe\u63a5\u3002\u5355\u51fb\u65f6\uff0c\u5c06\u6253\u5f00\u201c\u5b66\u751f\u4fe1\u606f\u201d\u8868\u5355\u3002 \u6570\u636e\u5728 **POST**\u65b9\u6cd5\u4e2d\u53d1\u5e03\u5230\u76f8\u540c\u7684URL\u3002 new.html \u00b6 <!DOCTYPE html> <html> <body> <h3>Students - Flask SQLAlchemy example</h3> <hr/> {%- for category, message in get_flashed_messages(with_categories = true) %} <div class = \"alert alert-danger\"> {{ message }} </div> {%- endfor %} <form action = \"{{ request.path }}\" method = \"post\"> <label for = \"name\">Name</label><br> <input type = \"text\" name = \"name\" placeholder = \"Name\" /><br> <label for = \"email\">City</label><br> <input type = \"text\" name = \"city\" placeholder = \"city\" /><br> <label for = \"addr\">addr</label><br> <textarea name = \"addr\" placeholder = \"addr\"></textarea><br> <label for = \"PIN\">City</label><br> <input type = \"text\" name = \"pin\" placeholder = \"pin\" /><br> <input type = \"submit\" value = \"Submit\" /> </form> </body> </html> \u5f53http\u65b9\u6cd5\u88ab\u68c0\u6d4b\u4e3aPOST\u65f6\uff0c\u8868\u5355\u6570\u636e\u88ab\u6dfb\u52a0\u5230\u5b66\u751f\u8868\u4e2d\uff0c\u5e76\u4e14\u5e94\u7528\u8fd4\u56de\u5230\u663e\u793a\u6dfb\u52a0\u6570\u636e\u7684\u4e3b\u9875\u3002 @app.route('/new', methods = ['GET', 'POST']) def new(): if request.method == 'POST': if not request.form['name'] or not request.form['city'] or not request.form['addr']: flash('Please enter all the fields', 'error') else: student = students(request.form['name'], request.form['city'], request.form['addr'], request.form['pin']) db.session.add(student) db.session.commit() flash('Record was successfully added') return redirect(url_for('show_all')) return render_template('new.html') \u4e0b\u9762\u7ed9\u51fa\u4e86\u5e94\u7528\u7a0b\u5e8f**\uff08app.py\uff09**\u7684\u5b8c\u6574\u4ee3\u7801\u3002 from flask import Flask, request, flash, url_for, redirect, render_template from flask_sqlalchemy import SQLAlchemy app = Flask(__name__) app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///students.sqlite3' app.config['SECRET_KEY'] = \"random string\" db = SQLAlchemy(app) class students(db.Model): id = db.Column('student_id', db.Integer, primary_key = True) name = db.Column(db.String(100)) city = db.Column(db.String(50)) addr = db.Column(db.String(200)) pin = db.Column(db.String(10)) def __init__(self, name, city, addr,pin): self.name = name self.city = city self.addr = addr self.pin = pin @app.route('/') def show_all(): return render_template('show_all.html', students = students.query.all() ) @app.route('/new', methods = ['GET', 'POST']) def new(): if request.method == 'POST': if not request.form['name'] or not request.form['city'] or not request.form['addr']: flash('Please enter all the fields', 'error') else: student = students(request.form['name'], request.form['city'], request.form['addr'], request.form['pin']) db.session.add(student) db.session.commit() flash('Record was successfully added') return redirect(url_for('show_all')) return render_template('new.html') if __name__ == '__main__': db.create_all() app.run(debug = True) \u4ecePython shell\u8fd0\u884c\u811a\u672c\uff0c\u5e76\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165** http://localhost:5000/ **\u3002 \u70b9\u51fb**\u201c\u6dfb\u52a0\u5b66\u751f\u201d**\u94fe\u63a5\u4ee5\u6253\u5f00**\u5b66\u751f\u4fe1\u606f**\u8868\u5355\u3002 \u586b\u5199\u8868\u5355\u5e76\u63d0\u4ea4\u3002\u4e3b\u9875\u5c06\u91cd\u65b0\u663e\u793a\u63d0\u4ea4\u7684\u6570\u636e\u3002 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\u5982\u4e0b\u6240\u793a\u3002","title":"21-Flask SQLAlchemy"},{"location":"05-flask/Flask_todo/21-Flask%20SQLAlchemy/#flask-sqlalchemy","text":"","title":"Flask SQLAlchemy"},{"location":"05-flask/Flask_todo/21-Flask%20SQLAlchemy/#flask-sqlalchemy_1","text":"\u5728Flask Web\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u539f\u59cbSQL\u5bf9\u6570\u636e\u5e93\u6267\u884cCRUD\u64cd\u4f5c\u53ef\u80fd\u5f88\u7e41\u7410\u3002\u76f8\u53cd\uff0c SQLAlchemy \uff0cPython\u5de5\u5177\u5305\u662f\u4e00\u4e2a\u5f3a\u5927\u7684**OR Mapper**\uff0c\u5b83\u4e3a\u5e94\u7528\u7a0b\u5e8f\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86SQL\u7684\u5168\u90e8\u529f\u80fd\u548c\u7075\u6d3b\u6027\u3002Flask-SQLAlchemy\u662fFlask\u6269\u5c55\uff0c\u5b83\u5c06\u5bf9SQLAlchemy\u7684\u652f\u6301\u6dfb\u52a0\u5230Flask\u5e94\u7528\u7a0b\u5e8f\u4e2d\u3002 \u4ec0\u4e48\u662fORM\uff08Object Relation Mapping\uff0c\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\uff09\uff1f \u5927\u591a\u6570\u7f16\u7a0b\u8bed\u8a00\u5e73\u53f0\u662f\u9762\u5411\u5bf9\u8c61\u7684\u3002\u53e6\u4e00\u65b9\u9762\uff0cRDBMS\u670d\u52a1\u5668\u4e2d\u7684\u6570\u636e\u5b58\u50a8\u4e3a\u8868\u3002\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\u662f\u5c06\u5bf9\u8c61\u53c2\u6570\u6620\u5c04\u5230\u5e95\u5c42RDBMS\u8868\u7ed3\u6784\u7684\u6280\u672f\u3002ORM API\u63d0\u4f9b\u4e86\u6267\u884cCRUD\u64cd\u4f5c\u7684\u65b9\u6cd5\uff0c\u800c\u4e0d\u5fc5\u7f16\u5199\u539f\u59cbSQL\u8bed\u53e5\u3002 \u5728\u672c\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u7814\u7a76Flask-SQLAlchemy\u7684ORM\u6280\u672f\u5e76\u6784\u5efa\u4e00\u4e2a\u5c0f\u578bWeb\u5e94\u7528\u7a0b\u5e8f\u3002 \u6b65\u9aa41 - \u5b89\u88c5Flask-SQLAlchemy\u6269\u5c55\u3002 pip install flask-sqlalchemy \u6b65\u9aa42 - \u60a8\u9700\u8981\u4ece\u6b64\u6a21\u5757\u5bfc\u5165SQLAlchemy\u7c7b\u3002 from flask_sqlalchemy import SQLAlchemy \u6b65\u9aa43 - \u73b0\u5728\u521b\u5efa\u4e00\u4e2aFlask\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\u5e76\u4e3a\u8981\u4f7f\u7528\u7684\u6570\u636e\u5e93\u8bbe\u7f6eURI\u3002 app = Flask(__name__) app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///students.sqlite3' \u6b65\u9aa44 - \u7136\u540e\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u521b\u5efaSQLAlchemy\u7c7b\u7684\u5bf9\u8c61\u3002\u8be5\u5bf9\u8c61\u5305\u542b\u7528\u4e8eORM\u64cd\u4f5c\u7684\u8f85\u52a9\u51fd\u6570\u3002\u5b83\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7236Model\u7c7b\uff0c\u4f7f\u7528\u5b83\u6765\u58f0\u660e\u7528\u6237\u5b9a\u4e49\u7684\u6a21\u578b\u3002\u5728\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u4e2d\uff0c\u521b\u5efa\u4e86**students**\u6a21\u578b\u3002 db = SQLAlchemy(app) class students(db.Model): id = db.Column('student_id', db.Integer, primary_key = True) name = db.Column(db.String(100)) city = db.Column(db.String(50)) addr = db.Column(db.String(200)) pin = db.Column(db.String(10)) def __init__(self, name, city, addr,pin): self.name = name self.city = city self.addr = addr self.pin = pin \u6b65\u9aa45 - \u8981\u521b\u5efa/\u4f7f\u7528URI\u4e2d\u63d0\u53ca\u7684\u6570\u636e\u5e93\uff0c\u8bf7\u8fd0\u884c**create_all()**\u65b9\u6cd5\u3002 db.create_all() **SQLAlchemy**\u7684**Session**\u5bf9\u8c61\u7ba1\u7406**ORM**\u5bf9\u8c61\u7684\u6240\u6709\u6301\u4e45\u6027\u64cd\u4f5c\u3002 \u4ee5\u4e0bsession\u65b9\u6cd5\u6267\u884cCRUD\u64cd\u4f5c\uff1a db.session.add (\u6a21\u578b\u5bf9\u8c61) - \u5c06\u8bb0\u5f55\u63d2\u5165\u5230\u6620\u5c04\u8868\u4e2d db.session.delete (\u6a21\u578b\u5bf9\u8c61) - \u4ece\u8868\u4e2d\u5220\u9664\u8bb0\u5f55 model.query.all() - \u4ece\u8868\u4e2d\u68c0\u7d22\u6240\u6709\u8bb0\u5f55\uff08\u5bf9\u5e94\u4e8eSELECT\u67e5\u8be2\uff09\u3002 \u60a8\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528filter\u5c5e\u6027\u5c06\u8fc7\u6ee4\u5668\u5e94\u7528\u4e8e\u68c0\u7d22\u5230\u7684\u8bb0\u5f55\u96c6\u3002\u4f8b\u5982\uff0c\u8981\u5728\u5b66\u751f\u8868\u4e2d\u68c0\u7d22**city ='Hyderabad'**\u7684\u8bb0\u5f55\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\uff1a Students.query.filter_by(city = \u2019Hyderabad\u2019).all() \u6709\u4e86\u8fd9\u4e48\u591a\u7684\u80cc\u666f\uff0c\u73b0\u5728\u6211\u4eec\u5c06\u4e3a\u6211\u4eec\u7684\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u89c6\u56fe\u51fd\u6570\u6765\u6dfb\u52a0\u5b66\u751f\u6570\u636e\u3002 \u5e94\u7528\u7a0b\u5e8f\u7684\u5165\u53e3\u70b9\u662f\u7ed1\u5b9a\u5230**'/'** URL\u7684**show_all()**\u51fd\u6570\u3002\u5b66\u751f\u8868\u7684\u8bb0\u5f55\u96c6\u4f5c\u4e3a\u53c2\u6570\u53d1\u9001\u5230HTML\u6a21\u677f\u3002\u6a21\u677f\u4e2d\u7684\u670d\u52a1\u5668\u7aef\u4ee3\u7801\u4ee5HTML\u8868\u683c\u5f62\u5f0f\u5448\u73b0\u8bb0\u5f55\u3002 @app.route('/') def show_all(): return render_template('show_all.html', students = students.query.all() ) \u6a21\u677f**\uff08'show_all.html'\uff09**\u7684HTML\u811a\u672c\u5982\u4e0b\uff1a <!DOCTYPE html> <html lang = \"en\"> <head></head> <body> <h3> <a href = \"{{ url_for('show_all') }}\">Comments - Flask SQLAlchemy example</a> </h3> <hr/> {%- for message in get_flashed_messages() %} {{ message }} {%- endfor %} <h3>Students (<a href = \"{{ url_for('new') }}\">Add Student </a>)</h3> <table> <thead> <tr> <th>Name</th> <th>City</th> <th>Address</th> <th>Pin</th> </tr> </thead> <tbody> {% for student in students %} <tr> <td>{{ student.name }}</td> <td>{{ student.city }}</td> <td>{{ student.addr }}</td> <td>{{ student.pin }}</td> </tr> {% endfor %} </tbody> </table> </body> </html> \u4e0a\u8ff0\u7f51\u9875\u5305\u542b\u6307\u5411**'/ new' URL**\u6620\u5c04**new()**\u51fd\u6570\u7684\u8d85\u94fe\u63a5\u3002\u5355\u51fb\u65f6\uff0c\u5c06\u6253\u5f00\u201c\u5b66\u751f\u4fe1\u606f\u201d\u8868\u5355\u3002 \u6570\u636e\u5728 **POST**\u65b9\u6cd5\u4e2d\u53d1\u5e03\u5230\u76f8\u540c\u7684URL\u3002","title":"Flask SQLAlchemy"},{"location":"05-flask/Flask_todo/21-Flask%20SQLAlchemy/#newhtml","text":"<!DOCTYPE html> <html> <body> <h3>Students - Flask SQLAlchemy example</h3> <hr/> {%- for category, message in get_flashed_messages(with_categories = true) %} <div class = \"alert alert-danger\"> {{ message }} </div> {%- endfor %} <form action = \"{{ request.path }}\" method = \"post\"> <label for = \"name\">Name</label><br> <input type = \"text\" name = \"name\" placeholder = \"Name\" /><br> <label for = \"email\">City</label><br> <input type = \"text\" name = \"city\" placeholder = \"city\" /><br> <label for = \"addr\">addr</label><br> <textarea name = \"addr\" placeholder = \"addr\"></textarea><br> <label for = \"PIN\">City</label><br> <input type = \"text\" name = \"pin\" placeholder = \"pin\" /><br> <input type = \"submit\" value = \"Submit\" /> </form> </body> </html> \u5f53http\u65b9\u6cd5\u88ab\u68c0\u6d4b\u4e3aPOST\u65f6\uff0c\u8868\u5355\u6570\u636e\u88ab\u6dfb\u52a0\u5230\u5b66\u751f\u8868\u4e2d\uff0c\u5e76\u4e14\u5e94\u7528\u8fd4\u56de\u5230\u663e\u793a\u6dfb\u52a0\u6570\u636e\u7684\u4e3b\u9875\u3002 @app.route('/new', methods = ['GET', 'POST']) def new(): if request.method == 'POST': if not request.form['name'] or not request.form['city'] or not request.form['addr']: flash('Please enter all the fields', 'error') else: student = students(request.form['name'], request.form['city'], request.form['addr'], request.form['pin']) db.session.add(student) db.session.commit() flash('Record was successfully added') return redirect(url_for('show_all')) return render_template('new.html') \u4e0b\u9762\u7ed9\u51fa\u4e86\u5e94\u7528\u7a0b\u5e8f**\uff08app.py\uff09**\u7684\u5b8c\u6574\u4ee3\u7801\u3002 from flask import Flask, request, flash, url_for, redirect, render_template from flask_sqlalchemy import SQLAlchemy app = Flask(__name__) app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///students.sqlite3' app.config['SECRET_KEY'] = \"random string\" db = SQLAlchemy(app) class students(db.Model): id = db.Column('student_id', db.Integer, primary_key = True) name = db.Column(db.String(100)) city = db.Column(db.String(50)) addr = db.Column(db.String(200)) pin = db.Column(db.String(10)) def __init__(self, name, city, addr,pin): self.name = name self.city = city self.addr = addr self.pin = pin @app.route('/') def show_all(): return render_template('show_all.html', students = students.query.all() ) @app.route('/new', methods = ['GET', 'POST']) def new(): if request.method == 'POST': if not request.form['name'] or not request.form['city'] or not request.form['addr']: flash('Please enter all the fields', 'error') else: student = students(request.form['name'], request.form['city'], request.form['addr'], request.form['pin']) db.session.add(student) db.session.commit() flash('Record was successfully added') return redirect(url_for('show_all')) return render_template('new.html') if __name__ == '__main__': db.create_all() app.run(debug = True) \u4ecePython shell\u8fd0\u884c\u811a\u672c\uff0c\u5e76\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165** http://localhost:5000/ **\u3002 \u70b9\u51fb**\u201c\u6dfb\u52a0\u5b66\u751f\u201d**\u94fe\u63a5\u4ee5\u6253\u5f00**\u5b66\u751f\u4fe1\u606f**\u8868\u5355\u3002 \u586b\u5199\u8868\u5355\u5e76\u63d0\u4ea4\u3002\u4e3b\u9875\u5c06\u91cd\u65b0\u663e\u793a\u63d0\u4ea4\u7684\u6570\u636e\u3002 \u6211\u4eec\u53ef\u4ee5\u770b\u5230\u8f93\u51fa\u5982\u4e0b\u6240\u793a\u3002","title":"new.html"},{"location":"05-flask/Flask_todo/22-Flask%20Sijax/","text":"Flask Sijax \u00b6 Flask Sijax \u00b6 Sijax**\u4ee3\u8868 'Simple Ajax'**\uff0c\u5b83\u662f\u4e00\u4e2a**Python/jQuery**\u5e93\uff0c\u65e8\u5728\u5e2e\u52a9\u60a8\u8f7b\u677e\u5730\u5c06**Ajax**\u5f15\u5165\u5230\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u4f7f\u7528**jQuery.ajax**\u6765\u53d1\u51faAJAX\u8bf7\u6c42\u3002 \u5b89\u88c5 \u00b6 Flask-Sijax\u7684\u5b89\u88c5\u5f88\u7b80\u5355\u3002 pip install flask-sijax \u7ec4\u6001 \u00b6 SIJAX_STATIC_PATH - \u8981\u88ab\u955c\u50cf\u7684Sijax javascript\u6587\u4ef6\u7684\u9759\u6001\u8def\u5f84\u3002\u9ed8\u8ba4\u4f4d\u7f6e\u662f**static/js/sijax**\u3002\u5728\u6b64\u6587\u4ef6\u5939\u4e2d\uff0c\u4fdd\u7559**sijax.js**\u548c**json2.js**\u6587\u4ef6\u3002 SIJAX_JSON_URI - \u4ece\u4e2d\u52a0\u8f7djson2.js\u9759\u6001\u6587\u4ef6\u7684URI Sijax\u4f7f\u7528**JSON**\u5728\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u3002\u8fd9\u610f\u5473\u7740\u6d4f\u89c8\u5668\u9700\u8981\u672c\u673a\u652f\u6301**JSON**\u6216\u4ece**json2.js**\u6587\u4ef6\u652f\u6301**JSON**\u652f\u6301\u3002 \u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6ce8\u518c\u7684\u51fd\u6570\u4e0d\u80fd\u63d0\u4f9b**Sijax**\u529f\u80fd\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u65e0\u6cd5\u4f7f\u7528**POST**\u65b9\u6cd5\u8bbf\u95ee\u5b83\u4eec\uff08\u5e76\u4e14Sijax\u4f7f\u7528POST\u8bf7\u6c42\uff09\u3002 \u8981\u4f7f**View**\u51fd\u6570\u80fd\u591f\u5904\u7406**Sijax**\u8bf7\u6c42\uff0c\u8bf7\u4f7f\u7528**@app.route\uff08'/url'\uff0cmethods = [\\'GET\\'** \uff0c \\'POST\\']\uff09**\u6216\u4f7f\u7528 @flask_sijax.route**\u8f85\u52a9\u88c5\u9970\u5668\uff0c\u5982\uff1a @flask_sijax.route(app, '/hello') \u6bcf\u4e2aSijax\u5904\u7406\u51fd\u6570\uff08\u50cf\u8fd9\u6837\uff09\u90fd\u4f1a\u81ea\u52a8\u63a5\u6536\u81f3\u5c11\u4e00\u4e2a\u53c2\u6570\uff0c\u5c31\u50cfPython\u5c06'self'\u4f20\u9012\u7ed9\u5bf9\u8c61\u65b9\u6cd5\u4e00\u6837\u3002**'obj_response'**\u53c2\u6570\u662f\u51fd\u6570\u56de\u590d\u6d4f\u89c8\u5668\u7684\u65b9\u5f0f\u3002 def say_hi(obj_response): obj_response.alert('Hi there!') \u5f53\u68c0\u6d4b\u5230Ajax\u8bf7\u6c42\u65f6\uff0cSijax\u4f1a\u50cf\u8fd9\u6837\u5904\u7406\u5b83\uff1a g.sijax.register_callback('say_hi', say_hi) return g.sijax.process_request() Sijax\u5e94\u7528\u7a0b\u5e8f \u00b6 \u6700\u5c0f\u7684Sijax\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5982\u4e0b\uff1a import os from flask import Flask, g from flask_sijax import sijax path = os.path.join('.', os.path.dirname(__file__), 'static/js/sijax/') app = Flask(__name__) app.config['SIJAX_STATIC_PATH'] = path app.config['SIJAX_JSON_URI'] = '/static/js/sijax/json2.js' flask_sijax.Sijax(app) @app.route('/') def index(): return 'Index' @flask_sijax.route(app, '/hello') def hello(): def say_hi(obj_response): obj_response.alert('Hi there!') if g.sijax.is_sijax_request: # Sijax request detected - let Sijax handle it g.sijax.register_callback('say_hi', say_hi) return g.sijax.process_request() return _render_template('sijaxexample.html') if __name__ == '__main__': app.run(debug = True) \u5f53Sijax\u5411\u670d\u52a1\u5668\u8bf7\u6c42\uff08\u7279\u6b8a\u7684**jQuery.ajax()**\u8bf7\u6c42\uff09\u65f6\uff0c**g.sijax.is_sijax_request()**\u4f1a\u5728\u670d\u52a1\u5668\u4e0a\u68c0\u6d4b\u5230\u6b64\u8bf7\u6c42\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u8ba9Sijax\u5904\u7406\u8bf7\u6c42\u3002 \u4f7f\u7528**g.sijax.register_callback()**\u6ce8\u518c\u7684\u6240\u6709\u51fd\u6570\u90fd\u4f1a\u516c\u5f00\uff0c\u4ee5\u4fbf\u4ece\u6d4f\u89c8\u5668\u8fdb\u884c\u8c03\u7528\u3002 \u8c03\u7528**g.sijax.process_request()**\u4f1a\u544a\u8bc9Sijax\u6267\u884c\u9002\u5f53\u7684\uff08\u5148\u524d\u6ce8\u518c\u7684\uff09\u51fd\u6570\u5e76\u5c06\u54cd\u5e94\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002","title":"22-Flask Sijax"},{"location":"05-flask/Flask_todo/22-Flask%20Sijax/#flask-sijax","text":"","title":"Flask Sijax"},{"location":"05-flask/Flask_todo/22-Flask%20Sijax/#flask-sijax_1","text":"Sijax**\u4ee3\u8868 'Simple Ajax'**\uff0c\u5b83\u662f\u4e00\u4e2a**Python/jQuery**\u5e93\uff0c\u65e8\u5728\u5e2e\u52a9\u60a8\u8f7b\u677e\u5730\u5c06**Ajax**\u5f15\u5165\u5230\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u3002\u5b83\u4f7f\u7528**jQuery.ajax**\u6765\u53d1\u51faAJAX\u8bf7\u6c42\u3002","title":"Flask Sijax"},{"location":"05-flask/Flask_todo/22-Flask%20Sijax/#_1","text":"Flask-Sijax\u7684\u5b89\u88c5\u5f88\u7b80\u5355\u3002 pip install flask-sijax","title":"\u5b89\u88c5"},{"location":"05-flask/Flask_todo/22-Flask%20Sijax/#_2","text":"SIJAX_STATIC_PATH - \u8981\u88ab\u955c\u50cf\u7684Sijax javascript\u6587\u4ef6\u7684\u9759\u6001\u8def\u5f84\u3002\u9ed8\u8ba4\u4f4d\u7f6e\u662f**static/js/sijax**\u3002\u5728\u6b64\u6587\u4ef6\u5939\u4e2d\uff0c\u4fdd\u7559**sijax.js**\u548c**json2.js**\u6587\u4ef6\u3002 SIJAX_JSON_URI - \u4ece\u4e2d\u52a0\u8f7djson2.js\u9759\u6001\u6587\u4ef6\u7684URI Sijax\u4f7f\u7528**JSON**\u5728\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u4f20\u9012\u6570\u636e\u3002\u8fd9\u610f\u5473\u7740\u6d4f\u89c8\u5668\u9700\u8981\u672c\u673a\u652f\u6301**JSON**\u6216\u4ece**json2.js**\u6587\u4ef6\u652f\u6301**JSON**\u652f\u6301\u3002 \u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6ce8\u518c\u7684\u51fd\u6570\u4e0d\u80fd\u63d0\u4f9b**Sijax**\u529f\u80fd\uff0c\u56e0\u4e3a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u65e0\u6cd5\u4f7f\u7528**POST**\u65b9\u6cd5\u8bbf\u95ee\u5b83\u4eec\uff08\u5e76\u4e14Sijax\u4f7f\u7528POST\u8bf7\u6c42\uff09\u3002 \u8981\u4f7f**View**\u51fd\u6570\u80fd\u591f\u5904\u7406**Sijax**\u8bf7\u6c42\uff0c\u8bf7\u4f7f\u7528**@app.route\uff08'/url'\uff0cmethods = [\\'GET\\'** \uff0c \\'POST\\']\uff09**\u6216\u4f7f\u7528 @flask_sijax.route**\u8f85\u52a9\u88c5\u9970\u5668\uff0c\u5982\uff1a @flask_sijax.route(app, '/hello') \u6bcf\u4e2aSijax\u5904\u7406\u51fd\u6570\uff08\u50cf\u8fd9\u6837\uff09\u90fd\u4f1a\u81ea\u52a8\u63a5\u6536\u81f3\u5c11\u4e00\u4e2a\u53c2\u6570\uff0c\u5c31\u50cfPython\u5c06'self'\u4f20\u9012\u7ed9\u5bf9\u8c61\u65b9\u6cd5\u4e00\u6837\u3002**'obj_response'**\u53c2\u6570\u662f\u51fd\u6570\u56de\u590d\u6d4f\u89c8\u5668\u7684\u65b9\u5f0f\u3002 def say_hi(obj_response): obj_response.alert('Hi there!') \u5f53\u68c0\u6d4b\u5230Ajax\u8bf7\u6c42\u65f6\uff0cSijax\u4f1a\u50cf\u8fd9\u6837\u5904\u7406\u5b83\uff1a g.sijax.register_callback('say_hi', say_hi) return g.sijax.process_request()","title":"\u7ec4\u6001"},{"location":"05-flask/Flask_todo/22-Flask%20Sijax/#sijax","text":"\u6700\u5c0f\u7684Sijax\u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u5982\u4e0b\uff1a import os from flask import Flask, g from flask_sijax import sijax path = os.path.join('.', os.path.dirname(__file__), 'static/js/sijax/') app = Flask(__name__) app.config['SIJAX_STATIC_PATH'] = path app.config['SIJAX_JSON_URI'] = '/static/js/sijax/json2.js' flask_sijax.Sijax(app) @app.route('/') def index(): return 'Index' @flask_sijax.route(app, '/hello') def hello(): def say_hi(obj_response): obj_response.alert('Hi there!') if g.sijax.is_sijax_request: # Sijax request detected - let Sijax handle it g.sijax.register_callback('say_hi', say_hi) return g.sijax.process_request() return _render_template('sijaxexample.html') if __name__ == '__main__': app.run(debug = True) \u5f53Sijax\u5411\u670d\u52a1\u5668\u8bf7\u6c42\uff08\u7279\u6b8a\u7684**jQuery.ajax()**\u8bf7\u6c42\uff09\u65f6\uff0c**g.sijax.is_sijax_request()**\u4f1a\u5728\u670d\u52a1\u5668\u4e0a\u68c0\u6d4b\u5230\u6b64\u8bf7\u6c42\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u60a8\u8ba9Sijax\u5904\u7406\u8bf7\u6c42\u3002 \u4f7f\u7528**g.sijax.register_callback()**\u6ce8\u518c\u7684\u6240\u6709\u51fd\u6570\u90fd\u4f1a\u516c\u5f00\uff0c\u4ee5\u4fbf\u4ece\u6d4f\u89c8\u5668\u8fdb\u884c\u8c03\u7528\u3002 \u8c03\u7528**g.sijax.process_request()**\u4f1a\u544a\u8bc9Sijax\u6267\u884c\u9002\u5f53\u7684\uff08\u5148\u524d\u6ce8\u518c\u7684\uff09\u51fd\u6570\u5e76\u5c06\u54cd\u5e94\u8fd4\u56de\u7ed9\u6d4f\u89c8\u5668\u3002","title":"Sijax\u5e94\u7528\u7a0b\u5e8f"},{"location":"05-flask/Flask_todo/23-Flask%20%E9%83%A8%E7%BD%B2/","text":"Flask \u90e8\u7f72 \u00b6 \u5916\u90e8\u53ef\u89c1\u670d\u52a1\u5668 \u00b6 \u5f00\u53d1\u670d\u52a1\u5668\u4e0a\u7684Flask\u5e94\u7528\u7a0b\u5e8f\u53ea\u80fd\u5728\u8bbe\u7f6e\u4e86\u5f00\u53d1\u73af\u5883\u7684\u8ba1\u7b97\u673a\u4e0a\u8bbf\u95ee\u3002\u8fd9\u662f\u4e00\u79cd\u9ed8\u8ba4\u884c\u4e3a\uff0c\u56e0\u4e3a\u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002 \u5982\u679c\u7981\u7528\u4e86**debug**\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5c06\u4e3b\u673a\u540d\u8bbe\u7f6e\u4e3a**'0.0.0.0'**\uff0c\u4f7f\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u7684\u5f00\u53d1\u670d\u52a1\u5668\u53ef\u4f9b\u7f51\u7edc\u4e0a\u7684\u7528\u6237\u4f7f\u7528\u3002 app.run(host = \u20190.0.0.0\u2019) \u56e0\u6b64\uff0c\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u5c06\u4fa6\u542c\u6240\u6709\u516c\u5171IP\u3002 \u90e8\u7f72 \u00b6 \u8981\u4ece\u5f00\u53d1\u73af\u5883\u5207\u6362\u5230\u6210\u719f\u7684\u751f\u4ea7\u73af\u5883\uff0c\u9700\u8981\u5728\u771f\u5b9e\u7684Web\u670d\u52a1\u5668\u4e0a\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u3002\u6839\u636e\u60a8\u7684\u5177\u4f53\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u9009\u9879\u6765\u90e8\u7f72Flask Web\u5e94\u7528\u7a0b\u5e8f\u3002 \u5bf9\u4e8e\u5c0f\u578b\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u4ee5\u8003\u8651\u5728\u4ee5\u4e0b\u4efb\u4f55\u6258\u7ba1\u5e73\u53f0\u4e0a\u90e8\u7f72\u5b83\uff0c\u6240\u6709\u8fd9\u4e9b\u5e73\u53f0\u90fd\u4e3a\u5c0f\u578b\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u514d\u8d39\u8ba1\u5212\u3002 Heroku dotcloud webfaction Flask\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u90e8\u7f72\u5728\u8fd9\u4e9b\u4e91\u5e73\u53f0\u4e0a\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u5728Google\u4e91\u5e73\u53f0\u4e0a\u90e8\u7f72Flask\u5e94\u7528\u7a0b\u5e8f\u3002Localtunnel\u670d\u52a1\u5141\u8bb8\u60a8\u5728localhost\u4e0a\u5171\u4eab\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u4f1a\u7834\u574fDNS\u548c\u9632\u706b\u5899\u8bbe\u7f6e\u3002 \u5982\u679c\u60a8\u503e\u5411\u4e8e\u4f7f\u7528\u4e13\u7528Web\u670d\u52a1\u5668\u4ee3\u66ff\u4e0a\u8ff0\u5171\u4eab\u5e73\u53f0\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u9009\u9879\u8fdb\u884c\u63a2\u7d22\u3002 mod_wsgi \u00b6 **mod_wsgi**\u662f\u4e00\u4e2aApache\u6a21\u5757\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2aWSGI\u517c\u5bb9\u63a5\u53e3\uff0c\u7528\u4e8e\u5728Apache\u670d\u52a1\u5668\u4e0a\u6258\u7ba1\u57fa\u4e8ePython\u7684Web\u5e94\u7528\u7a0b\u5e8f\u3002 \u5b89\u88c5mod_wsgi \u00b6 \u8981\u76f4\u63a5\u4ecePyPi\u5b89\u88c5\u5b98\u65b9\u53d1\u884c\u7248\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c\uff1a pip install mod_wsgi \u8981\u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6210\u529f\uff0c\u8bf7\u4f7f\u7528start-server\u547d\u4ee4\u8fd0\u884cmod_wsgi-express\u811a\u672c\uff1a mod_wsgi-express start-server \u8fd9\u5c06\u5728\u7aef\u53e38000\u4e0a\u542f\u52a8Apache/mod_wsgi\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u6d4f\u89c8\u5668\u6307\u5411\u4ee5\u4e0b\u5185\u5bb9\u6765\u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6709\u6548\uff1a http://localhost:8000/ \u521b\u5efa.wsgi\u6587\u4ef6 \u00b6 \u5e94\u8be5\u6709\u4e00\u4e2a**yourapplication.wsgi**\u6587\u4ef6\u3002\u6b64\u6587\u4ef6\u5305\u542b\u4ee3\u7801**mod_wsgi**\uff0c\u8be5\u4ee3\u7801\u5728\u542f\u52a8\u65f6\u6267\u884c\u4ee5\u83b7\u53d6\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4e0b\u6587\u4ef6\u5e94\u8be5\u8db3\u591f\u4e86\uff1a from yourapplication import app as application \u786e\u4fdd**yourapplication**\u548c\u6240\u6709\u6b63\u5728\u4f7f\u7528\u7684\u5e93\u90fd\u5728python\u52a0\u8f7d\u8def\u5f84\u4e0a\u3002 \u914d\u7f6eApache \u00b6 \u60a8\u9700\u8981\u544a\u8bc9**mod_wsgi\uff0c**\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u4f4d\u7f6e\uff1a <VirtualHost *> ServerName example.com WSGIScriptAlias / C:\\yourdir\\yourapp.wsgi <Directory C:\\yourdir> Order deny,allow Allow from all </Directory> </VirtualHost> \u72ec\u7acb\u7684WSGI\u5bb9\u5668 \u00b6 \u6709\u5f88\u591a\u6d41\u884c\u7684\u670d\u52a1\u5668\u7528Python\u7f16\u5199\uff0c\u5b83\u4eec\u5305\u542bWSGI\u5e94\u7528\u7a0b\u5e8f\u5e76\u63d0\u4f9bHTTP\u670d\u52a1\u3002 Gunicorn Tornado Gevent Twisted Web","title":"23-Flask \u90e8\u7f72"},{"location":"05-flask/Flask_todo/23-Flask%20%E9%83%A8%E7%BD%B2/#flask","text":"","title":"Flask \u90e8\u7f72"},{"location":"05-flask/Flask_todo/23-Flask%20%E9%83%A8%E7%BD%B2/#_1","text":"\u5f00\u53d1\u670d\u52a1\u5668\u4e0a\u7684Flask\u5e94\u7528\u7a0b\u5e8f\u53ea\u80fd\u5728\u8bbe\u7f6e\u4e86\u5f00\u53d1\u73af\u5883\u7684\u8ba1\u7b97\u673a\u4e0a\u8bbf\u95ee\u3002\u8fd9\u662f\u4e00\u79cd\u9ed8\u8ba4\u884c\u4e3a\uff0c\u56e0\u4e3a\u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002 \u5982\u679c\u7981\u7528\u4e86**debug**\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5c06\u4e3b\u673a\u540d\u8bbe\u7f6e\u4e3a**'0.0.0.0'**\uff0c\u4f7f\u672c\u5730\u8ba1\u7b97\u673a\u4e0a\u7684\u5f00\u53d1\u670d\u52a1\u5668\u53ef\u4f9b\u7f51\u7edc\u4e0a\u7684\u7528\u6237\u4f7f\u7528\u3002 app.run(host = \u20190.0.0.0\u2019) \u56e0\u6b64\uff0c\u60a8\u7684\u64cd\u4f5c\u7cfb\u7edf\u5c06\u4fa6\u542c\u6240\u6709\u516c\u5171IP\u3002","title":"\u5916\u90e8\u53ef\u89c1\u670d\u52a1\u5668"},{"location":"05-flask/Flask_todo/23-Flask%20%E9%83%A8%E7%BD%B2/#_2","text":"\u8981\u4ece\u5f00\u53d1\u73af\u5883\u5207\u6362\u5230\u6210\u719f\u7684\u751f\u4ea7\u73af\u5883\uff0c\u9700\u8981\u5728\u771f\u5b9e\u7684Web\u670d\u52a1\u5668\u4e0a\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u3002\u6839\u636e\u60a8\u7684\u5177\u4f53\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u9009\u9879\u6765\u90e8\u7f72Flask Web\u5e94\u7528\u7a0b\u5e8f\u3002 \u5bf9\u4e8e\u5c0f\u578b\u5e94\u7528\u7a0b\u5e8f\uff0c\u60a8\u53ef\u4ee5\u8003\u8651\u5728\u4ee5\u4e0b\u4efb\u4f55\u6258\u7ba1\u5e73\u53f0\u4e0a\u90e8\u7f72\u5b83\uff0c\u6240\u6709\u8fd9\u4e9b\u5e73\u53f0\u90fd\u4e3a\u5c0f\u578b\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u514d\u8d39\u8ba1\u5212\u3002 Heroku dotcloud webfaction Flask\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u90e8\u7f72\u5728\u8fd9\u4e9b\u4e91\u5e73\u53f0\u4e0a\u3002\u6b64\u5916\uff0c\u53ef\u4ee5\u5728Google\u4e91\u5e73\u53f0\u4e0a\u90e8\u7f72Flask\u5e94\u7528\u7a0b\u5e8f\u3002Localtunnel\u670d\u52a1\u5141\u8bb8\u60a8\u5728localhost\u4e0a\u5171\u4eab\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u800c\u4e0d\u4f1a\u7834\u574fDNS\u548c\u9632\u706b\u5899\u8bbe\u7f6e\u3002 \u5982\u679c\u60a8\u503e\u5411\u4e8e\u4f7f\u7528\u4e13\u7528Web\u670d\u52a1\u5668\u4ee3\u66ff\u4e0a\u8ff0\u5171\u4eab\u5e73\u53f0\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u9009\u9879\u8fdb\u884c\u63a2\u7d22\u3002","title":"\u90e8\u7f72"},{"location":"05-flask/Flask_todo/23-Flask%20%E9%83%A8%E7%BD%B2/#mod_wsgi","text":"**mod_wsgi**\u662f\u4e00\u4e2aApache\u6a21\u5757\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2aWSGI\u517c\u5bb9\u63a5\u53e3\uff0c\u7528\u4e8e\u5728Apache\u670d\u52a1\u5668\u4e0a\u6258\u7ba1\u57fa\u4e8ePython\u7684Web\u5e94\u7528\u7a0b\u5e8f\u3002","title":"mod_wsgi"},{"location":"05-flask/Flask_todo/23-Flask%20%E9%83%A8%E7%BD%B2/#mod_wsgi_1","text":"\u8981\u76f4\u63a5\u4ecePyPi\u5b89\u88c5\u5b98\u65b9\u53d1\u884c\u7248\uff0c\u4f60\u53ef\u4ee5\u8fd0\u884c\uff1a pip install mod_wsgi \u8981\u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6210\u529f\uff0c\u8bf7\u4f7f\u7528start-server\u547d\u4ee4\u8fd0\u884cmod_wsgi-express\u811a\u672c\uff1a mod_wsgi-express start-server \u8fd9\u5c06\u5728\u7aef\u53e38000\u4e0a\u542f\u52a8Apache/mod_wsgi\u3002\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5c06\u6d4f\u89c8\u5668\u6307\u5411\u4ee5\u4e0b\u5185\u5bb9\u6765\u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6709\u6548\uff1a http://localhost:8000/","title":"\u5b89\u88c5mod_wsgi"},{"location":"05-flask/Flask_todo/23-Flask%20%E9%83%A8%E7%BD%B2/#wsgi","text":"\u5e94\u8be5\u6709\u4e00\u4e2a**yourapplication.wsgi**\u6587\u4ef6\u3002\u6b64\u6587\u4ef6\u5305\u542b\u4ee3\u7801**mod_wsgi**\uff0c\u8be5\u4ee3\u7801\u5728\u542f\u52a8\u65f6\u6267\u884c\u4ee5\u83b7\u53d6\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8c61\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4e0b\u6587\u4ef6\u5e94\u8be5\u8db3\u591f\u4e86\uff1a from yourapplication import app as application \u786e\u4fdd**yourapplication**\u548c\u6240\u6709\u6b63\u5728\u4f7f\u7528\u7684\u5e93\u90fd\u5728python\u52a0\u8f7d\u8def\u5f84\u4e0a\u3002","title":"\u521b\u5efa.wsgi\u6587\u4ef6"},{"location":"05-flask/Flask_todo/23-Flask%20%E9%83%A8%E7%BD%B2/#apache","text":"\u60a8\u9700\u8981\u544a\u8bc9**mod_wsgi\uff0c**\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\u7684\u4f4d\u7f6e\uff1a <VirtualHost *> ServerName example.com WSGIScriptAlias / C:\\yourdir\\yourapp.wsgi <Directory C:\\yourdir> Order deny,allow Allow from all </Directory> </VirtualHost>","title":"\u914d\u7f6eApache"},{"location":"05-flask/Flask_todo/23-Flask%20%E9%83%A8%E7%BD%B2/#wsgi_1","text":"\u6709\u5f88\u591a\u6d41\u884c\u7684\u670d\u52a1\u5668\u7528Python\u7f16\u5199\uff0c\u5b83\u4eec\u5305\u542bWSGI\u5e94\u7528\u7a0b\u5e8f\u5e76\u63d0\u4f9bHTTP\u670d\u52a1\u3002 Gunicorn Tornado Gevent Twisted Web","title":"\u72ec\u7acb\u7684WSGI\u5bb9\u5668"},{"location":"05-flask/Flask_todo/24-Flask%20FastCGI/","text":"Flask FastCGI \u00b6 Flask FastCGI \u00b6 FastCGI\u662f\u5728nginx\uff0clighttpd\u548cCherokee\u7b49web\u670d\u52a1\u5668\u4e0a\u7684Flask\u5e94\u7528\u7a0b\u5e8f\u7684\u53e6\u4e00\u4e2a\u90e8\u7f72\u9009\u9879\u3002 \u914d\u7f6eFastCGI \u00b6 \u9996\u5148\uff0c\u60a8\u9700\u8981\u521b\u5efa**FastCGI**\u670d\u52a1\u5668\u6587\u4ef6\u3002\u8ba9\u6211\u4eec\u79f0\u4e4b\u4e3a**yourapplication.fcgiC**\u3002 from flup.server.fcgi import WSGIServer from yourapplication import app if __name__ == '__main__': WSGIServer(app).run() nginx**\u548c\u65e7\u7248\u672c\u7684**lighttpd**\u9700\u8981\u663e\u5f0f\u4f20\u9012\u5957\u63a5\u5b57\u4ee5\u4e0e**FastCGI**\u670d\u52a1\u5668\u901a\u4fe1\u3002\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u5c06\u5957\u63a5\u5b57\u7684\u8def\u5f84\u4f20\u9012\u5230**WSGIServer \u3002 WSGIServer(application, bindAddress = '/path/to/fcgi.sock').run() \u914d\u7f6eApache \u00b6 \u5bf9\u4e8e\u57fa\u672c\u7684Apache\u90e8\u7f72\uff0c\u60a8\u7684**.fcgi**\u6587\u4ef6\u5c06\u51fa\u73b0\u5728\u60a8\u7684\u5e94\u7528\u7a0b\u5e8fURL\u4e2d\u3002\u4f8b\u5982**\uff1aexample.com/yourapplication.fcgi/hello/**\u3002\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u914d\u7f6e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4f7f**yourapplication.fcgi**\u4e0d\u4f1a\u51fa\u73b0\u5728URL\u4e2d\u3002 <VirtualHost *> ServerName example.com ScriptAlias / /path/to/yourapplication.fcgi/ </VirtualHost> \u914d\u7f6elighttpd \u00b6 **lighttpd**\u7684\u57fa\u672c\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a fastcgi.server = (\"/yourapplication.fcgi\" => (( \"socket\" => \"/tmp/yourapplication-fcgi.sock\", \"bin-path\" => \"/var/www/yourapplication/yourapplication.fcgi\", \"check-local\" => \"disable\", \"max-procs\" => 1 ))) alias.url = ( \"/static/\" => \"/path/to/your/static\" ) url.rewrite-once = ( \"^(/static($|/.*))$\" => \"$1\", \"^(/.*)$\" => \"/yourapplication.fcgi$1\" ) \u8bf7\u8bb0\u4f4f\u542f\u7528**FastCGI**\uff0calias\u548crewrite\u6a21\u5757\u3002\u6b64\u914d\u7f6e\u5c06\u5e94\u7528\u7a0b\u5e8f\u7ed1\u5b9a\u5230**/yourapplication**\u3002","title":"24-Flask FastCGI"},{"location":"05-flask/Flask_todo/24-Flask%20FastCGI/#flask-fastcgi","text":"","title":"Flask FastCGI"},{"location":"05-flask/Flask_todo/24-Flask%20FastCGI/#flask-fastcgi_1","text":"FastCGI\u662f\u5728nginx\uff0clighttpd\u548cCherokee\u7b49web\u670d\u52a1\u5668\u4e0a\u7684Flask\u5e94\u7528\u7a0b\u5e8f\u7684\u53e6\u4e00\u4e2a\u90e8\u7f72\u9009\u9879\u3002","title":"Flask FastCGI"},{"location":"05-flask/Flask_todo/24-Flask%20FastCGI/#fastcgi","text":"\u9996\u5148\uff0c\u60a8\u9700\u8981\u521b\u5efa**FastCGI**\u670d\u52a1\u5668\u6587\u4ef6\u3002\u8ba9\u6211\u4eec\u79f0\u4e4b\u4e3a**yourapplication.fcgiC**\u3002 from flup.server.fcgi import WSGIServer from yourapplication import app if __name__ == '__main__': WSGIServer(app).run() nginx**\u548c\u65e7\u7248\u672c\u7684**lighttpd**\u9700\u8981\u663e\u5f0f\u4f20\u9012\u5957\u63a5\u5b57\u4ee5\u4e0e**FastCGI**\u670d\u52a1\u5668\u901a\u4fe1\u3002\u4e3a\u6b64\uff0c\u60a8\u9700\u8981\u5c06\u5957\u63a5\u5b57\u7684\u8def\u5f84\u4f20\u9012\u5230**WSGIServer \u3002 WSGIServer(application, bindAddress = '/path/to/fcgi.sock').run()","title":"\u914d\u7f6eFastCGI"},{"location":"05-flask/Flask_todo/24-Flask%20FastCGI/#apache","text":"\u5bf9\u4e8e\u57fa\u672c\u7684Apache\u90e8\u7f72\uff0c\u60a8\u7684**.fcgi**\u6587\u4ef6\u5c06\u51fa\u73b0\u5728\u60a8\u7684\u5e94\u7528\u7a0b\u5e8fURL\u4e2d\u3002\u4f8b\u5982**\uff1aexample.com/yourapplication.fcgi/hello/**\u3002\u6709\u51e0\u79cd\u65b9\u6cd5\u53ef\u4ee5\u914d\u7f6e\u60a8\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u4ee5\u4f7f**yourapplication.fcgi**\u4e0d\u4f1a\u51fa\u73b0\u5728URL\u4e2d\u3002 <VirtualHost *> ServerName example.com ScriptAlias / /path/to/yourapplication.fcgi/ </VirtualHost>","title":"\u914d\u7f6eApache"},{"location":"05-flask/Flask_todo/24-Flask%20FastCGI/#lighttpd","text":"**lighttpd**\u7684\u57fa\u672c\u914d\u7f6e\u5982\u4e0b\u6240\u793a\uff1a fastcgi.server = (\"/yourapplication.fcgi\" => (( \"socket\" => \"/tmp/yourapplication-fcgi.sock\", \"bin-path\" => \"/var/www/yourapplication/yourapplication.fcgi\", \"check-local\" => \"disable\", \"max-procs\" => 1 ))) alias.url = ( \"/static/\" => \"/path/to/your/static\" ) url.rewrite-once = ( \"^(/static($|/.*))$\" => \"$1\", \"^(/.*)$\" => \"/yourapplication.fcgi$1\" ) \u8bf7\u8bb0\u4f4f\u542f\u7528**FastCGI**\uff0calias\u548crewrite\u6a21\u5757\u3002\u6b64\u914d\u7f6e\u5c06\u5e94\u7528\u7a0b\u5e8f\u7ed1\u5b9a\u5230**/yourapplication**\u3002","title":"\u914d\u7f6elighttpd"},{"location":"05-flask/Flask_todo_2/Flask1%E2%80%93Hello%20World/","text":"Flask\u5165\u95e8\u7cfb\u5217(\u4e00)\u2013Hello World \u00b6 \u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u7ecf\u5e38\u8981\u5199\u4e00\u4e9b\u5c0f\u7cfb\u7edf\u6765\u8f85\u52a9\uff0c\u6bd4\u5982\u76d1\u63a7\u7cfb\u7edf\uff0c\u914d\u7f6e\u7cfb\u7edf\u7b49\u7b49\u3002\u7528\u4f20\u7edf\u7684Java\u5199\uff0c\u592a\u7b28\u91cd\u4e86\uff0c\u8fdePHP\u90fd\u5acc\u9ebb\u70e6\u3002\u4e00\u76f4\u5728\u5bfb\u627e\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u540e\u53f0\u6846\u67b6\uff0c\u5b66\u4e60\u6210\u672c\u4f4e\uff0c\u7ef4\u62a4\u7b80\u5355\u3002\u53d1\u73b0Flask\u540e\uff0c\u6211\u7acb\u9a6c\u88ab\u5b83\u7684\u8f7b\u5de7\u6240\u5438\u5f15\uff0c\u5b83\u5145\u5206\u53d1\u6325\u4e86Python\u8bed\u8a00\u7684\u4f18\u96c5\u548c\u8f7b\u4fbf\uff0c\u8fdeDjango\u8fd9\u6837\u5f3a\u5927\u7684\u6846\u67b6\u5728\u5b83\u9762\u524d\u90fd\u89c9\u5f97\u7e41\u7410\u3002\u53ef\u4ee5\u8bf4\u7b80\u5355\u5c31\u662f\u7f8e\u3002\u8fd9\u91cc\u6211\u4eec\u4e0d\u8ba8\u8bba\u5230\u5e95\u54ea\u4e2a\u6846\u67b6\u8bed\u8a00\u66f4\u597d\uff0c\u53ea\u662f\u4ece\u7b80\u5355\u8fd9\u4e2a\u89d2\u5ea6\u51fa\u53d1\uff0cFlask\u7edd\u5bf9\u662f\u4f7c\u4f7c\u8005\u3002\u8fd9\u4e00\u7cfb\u5217\u6587\u7ae0\u5c31\u4f1a\u7ed9\u5927\u5bb6\u5c55\u793aFlask\u7684\u8f7b\u5de7\u4e4b\u7f8e\u3002 Hello World \u00b6 \u7a0b\u5e8f\u5458\u7684\u7ecf\u5178\u5b66\u4e60\u65b9\u6cd5\uff0c\u4eceHello World\u5f00\u59cb\u3002\u4e0d\u8981\u5fd8\u4e86\uff0c\u5148\u5b89\u88c5python, pip\uff0c\u7136\u540e\u8fd0\u884c pip install Flask \uff0c\u73af\u5883\u5c31\u88c5\u597d\u4e86\u3002\u5f53\u7136\u672c\u4eba\u8fd8\u662f\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528 virtualenv \u6765\u5b89\u88c5\u73af\u5883\u3002\u7ec6\u8282\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u8ba9\u6211\u4eec\u5199\u4e2aHello World\u5427\uff1a from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def index (): return '<h1>Hello World</h1>' if __name__ == '__main__' : app . run () \u4e00\u4e2aWeb\u5e94\u7528\u7684\u4ee3\u7801\u5c31\u5199\u5b8c\u4e86\uff0c\u5bf9\uff0c\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\uff01\u4fdd\u5b58\u4e3a\u201dhello.py\u201d\uff0c\u6253\u5f00\u63a7\u5236\u53f0\uff0c\u5230\u8be5\u6587\u4ef6\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c $ python hello.py \u5982\u679c\u770b\u5230 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit) \u5b57\u6837\u540e\uff0c\u5c31\u8bf4\u660e\u670d\u52a1\u5668\u542f\u52a8\u5b8c\u6210\u3002\u6253\u5f00\u4f60\u7684\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee http://127.0.0.1:5000/ \uff0c\u4e00\u4e2a\u7855\u5927\u7684\u201dHello World\u201d\u6620\u5165\u773c\u5e18:-) \u7b80\u5355\u89e3\u91ca\u4e0b\u8fd9\u6bb5\u4ee3\u7801 \u00b6 \u9996\u5148\u5f15\u5165\u4e86Flask\u5305\uff0c\u5e76\u521b\u5efa\u4e00\u4e2aWeb\u5e94\u7528\u7684\u5b9e\u4f8b\u201dapp\u201d from flask import Flask app = Flask ( __name__ ) \u8fd9\u91cc\u7ed9\u7684\u5b9e\u4f8b\u540d\u79f0\u5c31\u662f\u8fd9\u4e2apython\u6a21\u5757\u540d\u3002 \u5b9a\u4e49\u8def\u7531\u89c4\u5219 @app . route ( '/' ) \u8fd9\u4e2a\u51fd\u6570\u7ea7\u522b\u7684\u6ce8\u89e3\u6307\u660e\u4e86\u5f53\u5730\u5740\u662f\u6839\u8def\u5f84\u65f6\uff0c\u5c31\u8c03\u7528\u4e0b\u9762\u7684\u51fd\u6570\u3002\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u8def\u7531\u89c4\u5219\uff0c\u4f1a\u5728 \u4e0b\u7bc7\u6587\u7ae0 \u91cc\u8be6\u7ec6\u4ecb\u7ecd\u3002\u8bf4\u7684\u9ad8\u5927\u4e0a\u4e9b\uff0c\u8fd9\u91cc\u5c31\u662fMVC\u4e2d\u7684Contoller\u3002 \u5904\u7406\u8bf7\u6c42 def index (): return '<h1>Hello World</h1>' \u5f53\u8bf7\u6c42\u7684\u5730\u5740\u7b26\u5408\u8def\u7531\u89c4\u5219\u65f6\uff0c\u5c31\u4f1a\u8fdb\u5165\u8be5\u51fd\u6570\u3002\u53ef\u4ee5\u8bf4\uff0c\u8fd9\u91cc\u662fMVC\u7684Model\u5c42\u3002\u4f60\u53ef\u4ee5\u5728\u91cc\u9762\u83b7\u53d6\u8bf7\u6c42\u7684request\u5bf9\u8c61\uff0c\u8fd4\u56de\u7684\u5185\u5bb9\u5c31\u662fresponse\u3002\u672c\u4f8b\u4e2d\u7684response\u5c31\u662f\u5927\u6807\u9898\u201dHello World\u201d\u3002 \u542f\u52a8Web\u670d\u52a1\u5668 if __name__ == '__main__' : app . run () \u5f53\u672c\u6587\u4ef6\u4e3a\u7a0b\u5e8f\u5165\u53e3\uff08\u4e5f\u5c31\u662f\u7528python\u547d\u4ee4\u76f4\u63a5\u6267\u884c\u672c\u6587\u4ef6\uff09\u65f6\uff0c\u5c31\u4f1a\u901a\u8fc7 app.run() \u542f\u52a8Web\u670d\u52a1\u5668\u3002\u5982\u679c\u4e0d\u662f\u7a0b\u5e8f\u5165\u53e3\uff0c\u90a3\u4e48\u8be5\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\u3002Web\u670d\u52a1\u5668\u4f1a\u9ed8\u8ba4\u76d1\u542c\u672c\u5730\u76845000\u7aef\u53e3\uff0c\u4f46\u4e0d\u652f\u6301\u8fdc\u7a0b\u8bbf\u95ee\u3002\u5982\u679c\u4f60\u60f3\u652f\u6301\u8fdc\u7a0b\uff0c\u9700\u8981\u5728 run() \u65b9\u6cd5\u4f20\u5165 host=0.0.0.0 \uff0c\u60f3\u6539\u53d8\u76d1\u542c\u7aef\u53e3\u7684\u8bdd\uff0c\u4f20\u5165 port=\u7aef\u53e3\u53f7 \uff0c\u4f60\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u8c03\u8bd5\u6a21\u5f0f\u3002\u5177\u4f53\u4f8b\u5b50\u5982\u4e0b\uff1a if __name__ == '__main__' : app . run ( host = '0.0.0.0' , port = 8888 , debug = True ) \u6ce8\u610f\uff0cFlask\u81ea\u5e26\u7684Web\u670d\u52a1\u5668\u4e3b\u8981\u8fd8\u662f\u7ed9\u5f00\u53d1\u4eba\u5458\u8c03\u8bd5\u7528\u7684\uff0c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u4f60\u6700\u597d\u662f\u901a\u8fc7WSGI\u5c06Flask\u5de5\u7a0b\u90e8\u7f72\u5230\u7c7b\u4f3cApache\u6216Nginx\u7684\u670d\u52a1\u5668\u4e0a\u3002","title":"Flask1\u2013Hello World"},{"location":"05-flask/Flask_todo_2/Flask1%E2%80%93Hello%20World/#flaskhello-world","text":"\u9879\u76ee\u5f00\u53d1\u4e2d\uff0c\u7ecf\u5e38\u8981\u5199\u4e00\u4e9b\u5c0f\u7cfb\u7edf\u6765\u8f85\u52a9\uff0c\u6bd4\u5982\u76d1\u63a7\u7cfb\u7edf\uff0c\u914d\u7f6e\u7cfb\u7edf\u7b49\u7b49\u3002\u7528\u4f20\u7edf\u7684Java\u5199\uff0c\u592a\u7b28\u91cd\u4e86\uff0c\u8fdePHP\u90fd\u5acc\u9ebb\u70e6\u3002\u4e00\u76f4\u5728\u5bfb\u627e\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u540e\u53f0\u6846\u67b6\uff0c\u5b66\u4e60\u6210\u672c\u4f4e\uff0c\u7ef4\u62a4\u7b80\u5355\u3002\u53d1\u73b0Flask\u540e\uff0c\u6211\u7acb\u9a6c\u88ab\u5b83\u7684\u8f7b\u5de7\u6240\u5438\u5f15\uff0c\u5b83\u5145\u5206\u53d1\u6325\u4e86Python\u8bed\u8a00\u7684\u4f18\u96c5\u548c\u8f7b\u4fbf\uff0c\u8fdeDjango\u8fd9\u6837\u5f3a\u5927\u7684\u6846\u67b6\u5728\u5b83\u9762\u524d\u90fd\u89c9\u5f97\u7e41\u7410\u3002\u53ef\u4ee5\u8bf4\u7b80\u5355\u5c31\u662f\u7f8e\u3002\u8fd9\u91cc\u6211\u4eec\u4e0d\u8ba8\u8bba\u5230\u5e95\u54ea\u4e2a\u6846\u67b6\u8bed\u8a00\u66f4\u597d\uff0c\u53ea\u662f\u4ece\u7b80\u5355\u8fd9\u4e2a\u89d2\u5ea6\u51fa\u53d1\uff0cFlask\u7edd\u5bf9\u662f\u4f7c\u4f7c\u8005\u3002\u8fd9\u4e00\u7cfb\u5217\u6587\u7ae0\u5c31\u4f1a\u7ed9\u5927\u5bb6\u5c55\u793aFlask\u7684\u8f7b\u5de7\u4e4b\u7f8e\u3002","title":"Flask\u5165\u95e8\u7cfb\u5217(\u4e00)\u2013Hello World"},{"location":"05-flask/Flask_todo_2/Flask1%E2%80%93Hello%20World/#hello-world","text":"\u7a0b\u5e8f\u5458\u7684\u7ecf\u5178\u5b66\u4e60\u65b9\u6cd5\uff0c\u4eceHello World\u5f00\u59cb\u3002\u4e0d\u8981\u5fd8\u4e86\uff0c\u5148\u5b89\u88c5python, pip\uff0c\u7136\u540e\u8fd0\u884c pip install Flask \uff0c\u73af\u5883\u5c31\u88c5\u597d\u4e86\u3002\u5f53\u7136\u672c\u4eba\u8fd8\u662f\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528 virtualenv \u6765\u5b89\u88c5\u73af\u5883\u3002\u7ec6\u8282\u5c31\u4e0d\u591a\u8bf4\u4e86\uff0c\u8ba9\u6211\u4eec\u5199\u4e2aHello World\u5427\uff1a from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def index (): return '<h1>Hello World</h1>' if __name__ == '__main__' : app . run () \u4e00\u4e2aWeb\u5e94\u7528\u7684\u4ee3\u7801\u5c31\u5199\u5b8c\u4e86\uff0c\u5bf9\uff0c\u5c31\u662f\u8fd9\u4e48\u7b80\u5355\uff01\u4fdd\u5b58\u4e3a\u201dhello.py\u201d\uff0c\u6253\u5f00\u63a7\u5236\u53f0\uff0c\u5230\u8be5\u6587\u4ef6\u76ee\u5f55\u4e0b\uff0c\u8fd0\u884c $ python hello.py \u5982\u679c\u770b\u5230 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit) \u5b57\u6837\u540e\uff0c\u5c31\u8bf4\u660e\u670d\u52a1\u5668\u542f\u52a8\u5b8c\u6210\u3002\u6253\u5f00\u4f60\u7684\u6d4f\u89c8\u5668\uff0c\u8bbf\u95ee http://127.0.0.1:5000/ \uff0c\u4e00\u4e2a\u7855\u5927\u7684\u201dHello World\u201d\u6620\u5165\u773c\u5e18:-)","title":"Hello World"},{"location":"05-flask/Flask_todo_2/Flask1%E2%80%93Hello%20World/#_1","text":"\u9996\u5148\u5f15\u5165\u4e86Flask\u5305\uff0c\u5e76\u521b\u5efa\u4e00\u4e2aWeb\u5e94\u7528\u7684\u5b9e\u4f8b\u201dapp\u201d from flask import Flask app = Flask ( __name__ ) \u8fd9\u91cc\u7ed9\u7684\u5b9e\u4f8b\u540d\u79f0\u5c31\u662f\u8fd9\u4e2apython\u6a21\u5757\u540d\u3002 \u5b9a\u4e49\u8def\u7531\u89c4\u5219 @app . route ( '/' ) \u8fd9\u4e2a\u51fd\u6570\u7ea7\u522b\u7684\u6ce8\u89e3\u6307\u660e\u4e86\u5f53\u5730\u5740\u662f\u6839\u8def\u5f84\u65f6\uff0c\u5c31\u8c03\u7528\u4e0b\u9762\u7684\u51fd\u6570\u3002\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u8def\u7531\u89c4\u5219\uff0c\u4f1a\u5728 \u4e0b\u7bc7\u6587\u7ae0 \u91cc\u8be6\u7ec6\u4ecb\u7ecd\u3002\u8bf4\u7684\u9ad8\u5927\u4e0a\u4e9b\uff0c\u8fd9\u91cc\u5c31\u662fMVC\u4e2d\u7684Contoller\u3002 \u5904\u7406\u8bf7\u6c42 def index (): return '<h1>Hello World</h1>' \u5f53\u8bf7\u6c42\u7684\u5730\u5740\u7b26\u5408\u8def\u7531\u89c4\u5219\u65f6\uff0c\u5c31\u4f1a\u8fdb\u5165\u8be5\u51fd\u6570\u3002\u53ef\u4ee5\u8bf4\uff0c\u8fd9\u91cc\u662fMVC\u7684Model\u5c42\u3002\u4f60\u53ef\u4ee5\u5728\u91cc\u9762\u83b7\u53d6\u8bf7\u6c42\u7684request\u5bf9\u8c61\uff0c\u8fd4\u56de\u7684\u5185\u5bb9\u5c31\u662fresponse\u3002\u672c\u4f8b\u4e2d\u7684response\u5c31\u662f\u5927\u6807\u9898\u201dHello World\u201d\u3002 \u542f\u52a8Web\u670d\u52a1\u5668 if __name__ == '__main__' : app . run () \u5f53\u672c\u6587\u4ef6\u4e3a\u7a0b\u5e8f\u5165\u53e3\uff08\u4e5f\u5c31\u662f\u7528python\u547d\u4ee4\u76f4\u63a5\u6267\u884c\u672c\u6587\u4ef6\uff09\u65f6\uff0c\u5c31\u4f1a\u901a\u8fc7 app.run() \u542f\u52a8Web\u670d\u52a1\u5668\u3002\u5982\u679c\u4e0d\u662f\u7a0b\u5e8f\u5165\u53e3\uff0c\u90a3\u4e48\u8be5\u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\u3002Web\u670d\u52a1\u5668\u4f1a\u9ed8\u8ba4\u76d1\u542c\u672c\u5730\u76845000\u7aef\u53e3\uff0c\u4f46\u4e0d\u652f\u6301\u8fdc\u7a0b\u8bbf\u95ee\u3002\u5982\u679c\u4f60\u60f3\u652f\u6301\u8fdc\u7a0b\uff0c\u9700\u8981\u5728 run() \u65b9\u6cd5\u4f20\u5165 host=0.0.0.0 \uff0c\u60f3\u6539\u53d8\u76d1\u542c\u7aef\u53e3\u7684\u8bdd\uff0c\u4f20\u5165 port=\u7aef\u53e3\u53f7 \uff0c\u4f60\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u8c03\u8bd5\u6a21\u5f0f\u3002\u5177\u4f53\u4f8b\u5b50\u5982\u4e0b\uff1a if __name__ == '__main__' : app . run ( host = '0.0.0.0' , port = 8888 , debug = True ) \u6ce8\u610f\uff0cFlask\u81ea\u5e26\u7684Web\u670d\u52a1\u5668\u4e3b\u8981\u8fd8\u662f\u7ed9\u5f00\u53d1\u4eba\u5458\u8c03\u8bd5\u7528\u7684\uff0c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u4f60\u6700\u597d\u662f\u901a\u8fc7WSGI\u5c06Flask\u5de5\u7a0b\u90e8\u7f72\u5230\u7c7b\u4f3cApache\u6216Nginx\u7684\u670d\u52a1\u5668\u4e0a\u3002","title":"\u7b80\u5355\u89e3\u91ca\u4e0b\u8fd9\u6bb5\u4ee3\u7801"},{"location":"05-flask/Flask_todo_2/Flask2%E2%80%93%E8%B7%AF%E7%94%B1/","text":"Flask\u5165\u95e8\u7cfb\u5217(\u4e8c)\u2013\u8def\u7531 \u00b6 \u6211\u4eec\u7528Flask\u5199\u4e86\u4e00\u4e2aHello World\u7a0b\u5e8f\uff0c\u8ba9\u5927\u5bb6\u9886\u7565\u5230\u4e86Flask\u7684\u7b80\u6d01\u8f7b\u4fbf\u3002\u4ece\u8fd9\u7bc7\u5f00\u59cb\u6211\u4eec\u5c06\u5bf9Flask\u6846\u67b6\u7684\u5404\u529f\u80fd\u4f5c\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u9996\u5148\u4ece\u8def\u7531(Route)\u5f00\u59cb\u3002 \u8def\u7531 \u00b6 \u4eceHello World\u4e2d\uff0c\u6211\u4eec\u4e86\u89e3\u5230URL\u7684\u8def\u7531\u53ef\u4ee5\u76f4\u63a5\u5199\u5728\u5176\u8981\u6267\u884c\u7684\u51fd\u6570\u4e0a\u3002\u6709\u4eba\u4f1a\u8d28\u7591\uff0c\u8fd9\u6837\u4e0d\u662f\u628aModel\u548cController\u7ed1\u5728\u4e00\u8d77\u4e86\u5417\uff1f\u7684\u786e\uff0c\u5982\u679c\u4f60\u60f3\u7075\u6d3b\u7684\u914d\u7f6eModel\u548cController\uff0c\u8fd9\u6837\u662f\u4e0d\u65b9\u4fbf\uff0c\u4f46\u662f\u5bf9\u4e8e\u8f7b\u91cf\u7ea7\u7cfb\u7edf\u6765\u8bf4\uff0c\u7075\u6d3b\u914d\u7f6e\u610f\u4e49\u4e0d\u5927\uff0c\u53cd\u800c\u5199\u5728\u4e00\u5757\u66f4\u5229\u4e8e\u7ef4\u62a4\u3002Flask\u8def\u7531\u89c4\u5219\u90fd\u662f\u57fa\u4e8eWerkzeug\u7684\u8def\u7531\u6a21\u5757\u7684\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u5f88\u591a\u5f3a\u5927\u7684\u529f\u80fd\u3002 \u5e26\u53c2\u6570\u7684\u8def\u7531 \u00b6 \u8ba9\u6211\u4eec\u5728\u4e0a\u4e00\u7bc7Hello World\u7684\u57fa\u7840\u4e0a\uff0c\u52a0\u4e0a\u4e0b\u9762\u7684\u51fd\u6570\u3002\u5e76\u8fd0\u884c\u7a0b\u5e8f\u3002 @app . route ( '/hello/<name>' ) def hello ( name ): return 'Hello %s ' % name \u5f53\u4f60\u5728\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\u4e2d\u8f93\u5165 http://localhost:5000/hello/man \uff0c\u4f60\u5c06\u5728\u9875\u9762\u4e0a\u770b\u5230\u201dHello man\u201d\u7684\u5b57\u6837\u3002URL\u8def\u5f84\u4e2d /hello/ \u540e\u9762\u7684\u53c2\u6570\u88ab\u4f5c\u4e3a hello() \u51fd\u6570\u7684 name \u53c2\u6570\u4f20\u4e86\u8fdb\u6765\u3002 \u4f60\u8fd8\u53ef\u4ee5\u5728URL\u53c2\u6570\u524d\u6dfb\u52a0\u8f6c\u6362\u5668\u6765\u8f6c\u6362\u53c2\u6570\u7c7b\u578b\uff0c\u6211\u4eec\u518d\u6765\u52a0\u4e2a\u51fd\u6570\uff1a @app . route ( '/user/<int:user_id>' ) def get_user ( user_id ): return 'User ID: %d ' % user_id \u8bd5\u4e0b\u8bbf\u95ee http://localhost:5000/user/man \uff0c\u4f60\u4f1a\u770b\u5230404\u9519\u8bef\u3002\u4f46\u662f\u8bd5\u4e0b http://localhost:5000/user/123 \uff0c\u9875\u9762\u4e0a\u5c31\u4f1a\u6709\u201dUser ID: 123\u201d\u663e\u793a\u51fa\u6765\u3002\u53c2\u6570\u7c7b\u578b\u8f6c\u6362\u5668 int: \u5e2e\u4f60\u63a7\u5236\u597d\u4e86\u4f20\u5165\u53c2\u6570\u7684\u7c7b\u578b\u53ea\u80fd\u662f\u6574\u5f62\u3002\u76ee\u524d\u652f\u6301\u7684\u53c2\u6570\u7c7b\u578b\u8f6c\u6362\u5668\u6709\uff1a \u7c7b\u578b\u8f6c\u6362\u5668 \u4f5c\u7528 \u7f3a\u7701 \u5b57\u7b26\u578b\uff0c\u4f46\u4e0d\u80fd\u6709\u659c\u6760 int: \u6574\u578b float: \u6d6e\u70b9\u578b path: \u5b57\u7b26\u578b\uff0c\u53ef\u6709\u659c\u6760 \u53e6\u5916\uff0c\u5927\u5bb6\u6709\u6ca1\u6709\u6ce8\u610f\u5230\uff0cFlask\u81ea\u5e26\u7684Web\u670d\u52a1\u5668\u652f\u6301\u70ed\u90e8\u7f72\u3002\u5f53\u4f60\u4fee\u6539\u597d\u6587\u4ef6\u5e76\u4fdd\u5b58\u540e\uff0cWeb\u670d\u52a1\u5668\u81ea\u52a8\u90e8\u7f72\u5b8c\u6bd5\uff0c\u4f60\u65e0\u9700\u91cd\u65b0\u8fd0\u884c\u7a0b\u5e8f\u3002 \u591aURL\u7684\u8def\u7531 \u00b6 \u4e00\u4e2a\u51fd\u6570\u4e0a\u53ef\u4ee5\u8bbe\u65bd\u591a\u4e2aURL\u8def\u7531\u89c4\u5219 @app . route ( '/' ) @app . route ( '/hello' ) @app . route ( '/hello/<name>' ) def hello ( name = None ): if name is None : name = 'World' return 'Hello %s ' % name \u8fd9\u4e2a\u4f8b\u5b50\u63a5\u53d7\u4e09\u79cdURL\u89c4\u5219\uff0c / \u548c /hello \u90fd\u4e0d\u5e26\u53c2\u6570\uff0c\u51fd\u6570\u53c2\u6570 name \u503c\u5c06\u4e3a\u7a7a\uff0c\u9875\u9762\u663e\u793a\u201dHello World\u201d\uff1b /hello/ \u5e26\u53c2\u6570\uff0c\u9875\u9762\u4f1a\u663e\u793a\u53c2\u6570 name \u7684\u503c\uff0c\u6548\u679c\u4e0e\u4e0a\u9762\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u76f8\u540c\u3002 HTTP\u8bf7\u6c42\u65b9\u6cd5\u8bbe\u7f6e \u00b6 HTTP\u8bf7\u6c42\u65b9\u6cd5\u5e38\u7528\u7684\u6709Get, Post, Put, Delete\u3002\u4e0d\u719f\u6089\u7684\u670b\u53cb\u4eec\u53ef\u4ee5\u53bb\u5ea6\u5a18\u67e5\u4e0b\u3002Flask\u8def\u7531\u89c4\u5219\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u8bf7\u6c42\u65b9\u6cd5\u3002 from flask import request @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : return 'This is a POST request' else : return 'This is a GET request' \u5f53\u4f60\u8bf7\u6c42\u5730\u5740 http://localhost:5000/login \uff0c\u201dGET\u201d\u548c\u201dPOST\u201d\u8bf7\u6c42\u4f1a\u8fd4\u56de\u4e0d\u540c\u7684\u5185\u5bb9\uff0c\u5176\u4ed6\u8bf7\u6c42\u65b9\u6cd5\u5219\u4f1a\u8fd4\u56de405\u9519\u8bef\u3002\u6709\u6ca1\u6709\u89c9\u5f97\u7528Flask\u6765\u5b9e\u73b0Restful\u98ce\u683c\u5f88\u65b9\u4fbf\u554a\uff1f URL\u6784\u5efa\u65b9\u6cd5 \u00b6 Flask\u63d0\u4f9b\u4e86 url_for() \u65b9\u6cd5\u6765\u5feb\u901f\u83b7\u53d6\u53ca\u6784\u5efaURL\uff0c\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5411\u51fd\u6570\u540d\uff08\u52a0\u8fc7 @app.route \u6ce8\u89e3\u7684\u51fd\u6570\uff09\uff0c\u540e\u7eed\u7684\u53c2\u6570\u5bf9\u5e94\u4e8e\u8981\u6784\u5efa\u7684URL\u53d8\u91cf\u3002\u4e0b\u9762\u662f\u51e0\u4e2a\u4f8b\u5b50\uff1a url_for ( 'login' ) # \u8fd4\u56de/login url_for ( 'login' , id = '1' ) # \u5c06id\u4f5c\u4e3aURL\u53c2\u6570\uff0c\u8fd4\u56de/login?id=1 url_for ( 'hello' , name = 'man' ) # \u9002\u914dhello\u51fd\u6570\u7684name\u53c2\u6570\uff0c\u8fd4\u56de/hello/man url_for ( 'static' , filename = 'style.css' ) # \u9759\u6001\u6587\u4ef6\u5730\u5740\uff0c\u8fd4\u56de/static/style.css \u9759\u6001\u6587\u4ef6\u4f4d\u7f6e \u00b6 \u4e00\u4e2aWeb\u5e94\u7528\u7684\u9759\u6001\u6587\u4ef6\u5305\u62ec\u4e86JS, CSS, \u56fe\u7247\u7b49\uff0cFlask\u7684\u98ce\u683c\u662f\u5c06\u6240\u6709\u9759\u6001\u6587\u4ef6\u653e\u5728\u201dstatic\u201d\u5b50\u76ee\u5f55\u4e0b\u3002\u5e76\u4e14\u5728\u4ee3\u7801\u6216\u6a21\u677f\uff08 \u4e0b\u7bc7 \u4f1a\u4ecb\u7ecd\uff09\u4e2d\uff0c\u4f7f\u7528 url_for('static') \u6765\u83b7\u53d6\u9759\u6001\u6587\u4ef6\u76ee\u5f55\u3002\u4e0a\u5c0f\u8282\u4e2d\u7b2c\u56db\u4e2a\u7684\u4f8b\u5b50\u5c31\u662f\u901a\u8fc7 url_for() \u51fd\u6570\u83b7\u53d6\u201dstatic\u201d\u76ee\u5f55\u4e0b\u7684\u6307\u5b9a\u6587\u4ef6\u3002\u5982\u679c\u4f60\u60f3\u6539\u53d8\u8fd9\u4e2a\u9759\u6001\u76ee\u5f55\u7684\u4f4d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u5728\u521b\u5efa\u5e94\u7528\u65f6\uff0c\u6307\u5b9a static_folder \u53c2\u6570\u3002 app = Flask ( __name__ , static_folder = 'files' )","title":"Flask2\u2013\u8def\u7531"},{"location":"05-flask/Flask_todo_2/Flask2%E2%80%93%E8%B7%AF%E7%94%B1/#flask","text":"\u6211\u4eec\u7528Flask\u5199\u4e86\u4e00\u4e2aHello World\u7a0b\u5e8f\uff0c\u8ba9\u5927\u5bb6\u9886\u7565\u5230\u4e86Flask\u7684\u7b80\u6d01\u8f7b\u4fbf\u3002\u4ece\u8fd9\u7bc7\u5f00\u59cb\u6211\u4eec\u5c06\u5bf9Flask\u6846\u67b6\u7684\u5404\u529f\u80fd\u4f5c\u66f4\u8be6\u7ec6\u7684\u4ecb\u7ecd\uff0c\u6211\u4eec\u9996\u5148\u4ece\u8def\u7531(Route)\u5f00\u59cb\u3002","title":"Flask\u5165\u95e8\u7cfb\u5217(\u4e8c)\u2013\u8def\u7531"},{"location":"05-flask/Flask_todo_2/Flask2%E2%80%93%E8%B7%AF%E7%94%B1/#_1","text":"\u4eceHello World\u4e2d\uff0c\u6211\u4eec\u4e86\u89e3\u5230URL\u7684\u8def\u7531\u53ef\u4ee5\u76f4\u63a5\u5199\u5728\u5176\u8981\u6267\u884c\u7684\u51fd\u6570\u4e0a\u3002\u6709\u4eba\u4f1a\u8d28\u7591\uff0c\u8fd9\u6837\u4e0d\u662f\u628aModel\u548cController\u7ed1\u5728\u4e00\u8d77\u4e86\u5417\uff1f\u7684\u786e\uff0c\u5982\u679c\u4f60\u60f3\u7075\u6d3b\u7684\u914d\u7f6eModel\u548cController\uff0c\u8fd9\u6837\u662f\u4e0d\u65b9\u4fbf\uff0c\u4f46\u662f\u5bf9\u4e8e\u8f7b\u91cf\u7ea7\u7cfb\u7edf\u6765\u8bf4\uff0c\u7075\u6d3b\u914d\u7f6e\u610f\u4e49\u4e0d\u5927\uff0c\u53cd\u800c\u5199\u5728\u4e00\u5757\u66f4\u5229\u4e8e\u7ef4\u62a4\u3002Flask\u8def\u7531\u89c4\u5219\u90fd\u662f\u57fa\u4e8eWerkzeug\u7684\u8def\u7531\u6a21\u5757\u7684\uff0c\u5b83\u8fd8\u63d0\u4f9b\u4e86\u5f88\u591a\u5f3a\u5927\u7684\u529f\u80fd\u3002","title":"\u8def\u7531"},{"location":"05-flask/Flask_todo_2/Flask2%E2%80%93%E8%B7%AF%E7%94%B1/#_2","text":"\u8ba9\u6211\u4eec\u5728\u4e0a\u4e00\u7bc7Hello World\u7684\u57fa\u7840\u4e0a\uff0c\u52a0\u4e0a\u4e0b\u9762\u7684\u51fd\u6570\u3002\u5e76\u8fd0\u884c\u7a0b\u5e8f\u3002 @app . route ( '/hello/<name>' ) def hello ( name ): return 'Hello %s ' % name \u5f53\u4f60\u5728\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\u4e2d\u8f93\u5165 http://localhost:5000/hello/man \uff0c\u4f60\u5c06\u5728\u9875\u9762\u4e0a\u770b\u5230\u201dHello man\u201d\u7684\u5b57\u6837\u3002URL\u8def\u5f84\u4e2d /hello/ \u540e\u9762\u7684\u53c2\u6570\u88ab\u4f5c\u4e3a hello() \u51fd\u6570\u7684 name \u53c2\u6570\u4f20\u4e86\u8fdb\u6765\u3002 \u4f60\u8fd8\u53ef\u4ee5\u5728URL\u53c2\u6570\u524d\u6dfb\u52a0\u8f6c\u6362\u5668\u6765\u8f6c\u6362\u53c2\u6570\u7c7b\u578b\uff0c\u6211\u4eec\u518d\u6765\u52a0\u4e2a\u51fd\u6570\uff1a @app . route ( '/user/<int:user_id>' ) def get_user ( user_id ): return 'User ID: %d ' % user_id \u8bd5\u4e0b\u8bbf\u95ee http://localhost:5000/user/man \uff0c\u4f60\u4f1a\u770b\u5230404\u9519\u8bef\u3002\u4f46\u662f\u8bd5\u4e0b http://localhost:5000/user/123 \uff0c\u9875\u9762\u4e0a\u5c31\u4f1a\u6709\u201dUser ID: 123\u201d\u663e\u793a\u51fa\u6765\u3002\u53c2\u6570\u7c7b\u578b\u8f6c\u6362\u5668 int: \u5e2e\u4f60\u63a7\u5236\u597d\u4e86\u4f20\u5165\u53c2\u6570\u7684\u7c7b\u578b\u53ea\u80fd\u662f\u6574\u5f62\u3002\u76ee\u524d\u652f\u6301\u7684\u53c2\u6570\u7c7b\u578b\u8f6c\u6362\u5668\u6709\uff1a \u7c7b\u578b\u8f6c\u6362\u5668 \u4f5c\u7528 \u7f3a\u7701 \u5b57\u7b26\u578b\uff0c\u4f46\u4e0d\u80fd\u6709\u659c\u6760 int: \u6574\u578b float: \u6d6e\u70b9\u578b path: \u5b57\u7b26\u578b\uff0c\u53ef\u6709\u659c\u6760 \u53e6\u5916\uff0c\u5927\u5bb6\u6709\u6ca1\u6709\u6ce8\u610f\u5230\uff0cFlask\u81ea\u5e26\u7684Web\u670d\u52a1\u5668\u652f\u6301\u70ed\u90e8\u7f72\u3002\u5f53\u4f60\u4fee\u6539\u597d\u6587\u4ef6\u5e76\u4fdd\u5b58\u540e\uff0cWeb\u670d\u52a1\u5668\u81ea\u52a8\u90e8\u7f72\u5b8c\u6bd5\uff0c\u4f60\u65e0\u9700\u91cd\u65b0\u8fd0\u884c\u7a0b\u5e8f\u3002","title":"\u5e26\u53c2\u6570\u7684\u8def\u7531"},{"location":"05-flask/Flask_todo_2/Flask2%E2%80%93%E8%B7%AF%E7%94%B1/#url","text":"\u4e00\u4e2a\u51fd\u6570\u4e0a\u53ef\u4ee5\u8bbe\u65bd\u591a\u4e2aURL\u8def\u7531\u89c4\u5219 @app . route ( '/' ) @app . route ( '/hello' ) @app . route ( '/hello/<name>' ) def hello ( name = None ): if name is None : name = 'World' return 'Hello %s ' % name \u8fd9\u4e2a\u4f8b\u5b50\u63a5\u53d7\u4e09\u79cdURL\u89c4\u5219\uff0c / \u548c /hello \u90fd\u4e0d\u5e26\u53c2\u6570\uff0c\u51fd\u6570\u53c2\u6570 name \u503c\u5c06\u4e3a\u7a7a\uff0c\u9875\u9762\u663e\u793a\u201dHello World\u201d\uff1b /hello/ \u5e26\u53c2\u6570\uff0c\u9875\u9762\u4f1a\u663e\u793a\u53c2\u6570 name \u7684\u503c\uff0c\u6548\u679c\u4e0e\u4e0a\u9762\u7b2c\u4e00\u4e2a\u4f8b\u5b50\u76f8\u540c\u3002","title":"\u591aURL\u7684\u8def\u7531"},{"location":"05-flask/Flask_todo_2/Flask2%E2%80%93%E8%B7%AF%E7%94%B1/#http","text":"HTTP\u8bf7\u6c42\u65b9\u6cd5\u5e38\u7528\u7684\u6709Get, Post, Put, Delete\u3002\u4e0d\u719f\u6089\u7684\u670b\u53cb\u4eec\u53ef\u4ee5\u53bb\u5ea6\u5a18\u67e5\u4e0b\u3002Flask\u8def\u7531\u89c4\u5219\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u8bf7\u6c42\u65b9\u6cd5\u3002 from flask import request @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : return 'This is a POST request' else : return 'This is a GET request' \u5f53\u4f60\u8bf7\u6c42\u5730\u5740 http://localhost:5000/login \uff0c\u201dGET\u201d\u548c\u201dPOST\u201d\u8bf7\u6c42\u4f1a\u8fd4\u56de\u4e0d\u540c\u7684\u5185\u5bb9\uff0c\u5176\u4ed6\u8bf7\u6c42\u65b9\u6cd5\u5219\u4f1a\u8fd4\u56de405\u9519\u8bef\u3002\u6709\u6ca1\u6709\u89c9\u5f97\u7528Flask\u6765\u5b9e\u73b0Restful\u98ce\u683c\u5f88\u65b9\u4fbf\u554a\uff1f","title":"HTTP\u8bf7\u6c42\u65b9\u6cd5\u8bbe\u7f6e"},{"location":"05-flask/Flask_todo_2/Flask2%E2%80%93%E8%B7%AF%E7%94%B1/#url_1","text":"Flask\u63d0\u4f9b\u4e86 url_for() \u65b9\u6cd5\u6765\u5feb\u901f\u83b7\u53d6\u53ca\u6784\u5efaURL\uff0c\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5411\u51fd\u6570\u540d\uff08\u52a0\u8fc7 @app.route \u6ce8\u89e3\u7684\u51fd\u6570\uff09\uff0c\u540e\u7eed\u7684\u53c2\u6570\u5bf9\u5e94\u4e8e\u8981\u6784\u5efa\u7684URL\u53d8\u91cf\u3002\u4e0b\u9762\u662f\u51e0\u4e2a\u4f8b\u5b50\uff1a url_for ( 'login' ) # \u8fd4\u56de/login url_for ( 'login' , id = '1' ) # \u5c06id\u4f5c\u4e3aURL\u53c2\u6570\uff0c\u8fd4\u56de/login?id=1 url_for ( 'hello' , name = 'man' ) # \u9002\u914dhello\u51fd\u6570\u7684name\u53c2\u6570\uff0c\u8fd4\u56de/hello/man url_for ( 'static' , filename = 'style.css' ) # \u9759\u6001\u6587\u4ef6\u5730\u5740\uff0c\u8fd4\u56de/static/style.css","title":"URL\u6784\u5efa\u65b9\u6cd5"},{"location":"05-flask/Flask_todo_2/Flask2%E2%80%93%E8%B7%AF%E7%94%B1/#_3","text":"\u4e00\u4e2aWeb\u5e94\u7528\u7684\u9759\u6001\u6587\u4ef6\u5305\u62ec\u4e86JS, CSS, \u56fe\u7247\u7b49\uff0cFlask\u7684\u98ce\u683c\u662f\u5c06\u6240\u6709\u9759\u6001\u6587\u4ef6\u653e\u5728\u201dstatic\u201d\u5b50\u76ee\u5f55\u4e0b\u3002\u5e76\u4e14\u5728\u4ee3\u7801\u6216\u6a21\u677f\uff08 \u4e0b\u7bc7 \u4f1a\u4ecb\u7ecd\uff09\u4e2d\uff0c\u4f7f\u7528 url_for('static') \u6765\u83b7\u53d6\u9759\u6001\u6587\u4ef6\u76ee\u5f55\u3002\u4e0a\u5c0f\u8282\u4e2d\u7b2c\u56db\u4e2a\u7684\u4f8b\u5b50\u5c31\u662f\u901a\u8fc7 url_for() \u51fd\u6570\u83b7\u53d6\u201dstatic\u201d\u76ee\u5f55\u4e0b\u7684\u6307\u5b9a\u6587\u4ef6\u3002\u5982\u679c\u4f60\u60f3\u6539\u53d8\u8fd9\u4e2a\u9759\u6001\u76ee\u5f55\u7684\u4f4d\u7f6e\uff0c\u4f60\u53ef\u4ee5\u5728\u521b\u5efa\u5e94\u7528\u65f6\uff0c\u6307\u5b9a static_folder \u53c2\u6570\u3002 app = Flask ( __name__ , static_folder = 'files' )","title":"\u9759\u6001\u6587\u4ef6\u4f4d\u7f6e"},{"location":"05-flask/Flask_todo_2/Flask3-%E6%A8%A1%E6%9D%BF/","text":"Flask\u5165\u95e8\u7cfb\u5217(\u4e09)\u2013\u6a21\u677f \u00b6 \u6a21\u677f \u00b6 Flask\u7684\u6a21\u677f\u529f\u80fd\u662f\u57fa\u4e8e Jinja2\u6a21\u677f\u5f15\u64ce \u5b9e\u73b0\u7684\u3002\u8ba9\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u4f8b\u5b50\u5427\u3002\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Flask\u8fd0\u884c\u6587\u4ef6\uff08\u4f60\u5e94\u8be5\u4e0d\u4f1a\u5fd8\u4e86\u600e\u4e48\u5199\u5427\uff09\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a from flask import Flask from flask import render_template app = Flask ( __name__ ) @app . route ( '/hello' ) @app . route ( '/hello/<name>' ) def hello ( name = None ): return render_template ( 'hello.html' , name = name ) if __name__ == '__main__' : app . run ( host = '0.0.0.0' , debug = True ) \u8fd9\u6bb5\u4ee3\u7801\u540c\u4e0a\u4e00\u7bc7\u7684\u591aURL\u8def\u7531\u7684\u4f8b\u5b50\u975e\u5e38\u76f8\u4f3c\uff0c\u533a\u522b\u5c31\u662f hello() \u51fd\u6570\u5e76\u4e0d\u662f\u76f4\u63a5\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u800c\u662f\u8c03\u7528\u4e86 render_template() \u65b9\u6cd5\u6765\u6e32\u67d3\u6a21\u677f\u3002\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570 hello.html \u6307\u5411\u4f60\u60f3\u6e32\u67d3\u7684\u6a21\u677f\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570 name \u662f\u4f60\u8981\u4f20\u5230\u6a21\u677f\u53bb\u7684\u53d8\u91cf\uff0c\u53d8\u91cf\u53ef\u4ee5\u4f20\u591a\u4e2a\u3002 \u90a3\u4e48\u8fd9\u4e2a\u6a21\u677f hello.html \u5728\u54ea\u513f\u5462\uff0c\u53d8\u91cf\u53c2\u6570\u53c8\u8be5\u600e\u4e48\u7528\u5462\uff1f\u522b\u6025\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa\u6a21\u677f\u6587\u4ef6\u3002\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u4e00\u4e2a\u5b50\u76ee\u5f55\u201dtemplates\u201d\uff08\u6ce8\u610f\uff0c\u4e00\u5b9a\u8981\u4f7f\u7528\u8fd9\u4e2a\u540d\u5b57\uff09\u3002\u7136\u540e\u5728\u201dtemplates\u201d\u76ee\u5f55\u4e0b\u521b\u5efa\u6587\u4ef6\u201dhello.html\u201d\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a <!doctype html> < title > Hello Sample </ title > {% if name %} < h1 > Hello {{ name }}! </ h1 > {% else %} < h1 > Hello World! </ h1 > {% endif %} \u8fd9\u6bb5\u4ee3\u7801\u662f\u4e0d\u662f\u5f88\u50cfHTML\uff1f\u63a5\u89e6\u8fc7\u5176\u4ed6\u6a21\u677f\u5f15\u64ce\u7684\u670b\u53cb\u4eec\u80af\u5b9a\u7acb\u9a6c\u79d2\u61c2\u4e86\u8fd9\u6bb5\u4ee3\u7801\u3002\u5b83\u5c31\u662f\u4e00\u4e2aHTML\u6a21\u677f\uff0c\u6839\u636e name \u53d8\u91cf\u7684\u503c\uff0c\u663e\u793a\u4e0d\u540c\u7684\u5185\u5bb9\u3002\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\u7531 {{ }} \u4fee\u9970\uff0c\u800c\u63a7\u5236\u8bed\u53e5\u7531 {% %} \u4fee\u9970\uff0c\u5176\u4ed6\u7684\u4ee3\u7801\uff0c\u5c31\u662f\u6211\u4eec\u5e38\u89c1\u7684HTML\u3002 \u8ba9\u6211\u4eec\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8f93\u5165 http://localhost:5000/hello/man \uff0c\u9875\u9762\u4e0a\u5373\u663e\u793a\u5927\u6807\u9898\u201dHello man!\u201c\u3002\u6211\u4eec\u518d\u770b\u4e0b\u9875\u9762\u6e90\u4ee3\u7801 <!doctype html> < title > Hello from Flask </ title > < h1 > Hello man! </ h1 > \u679c\u7136\uff0c\u6a21\u677f\u4ee3\u7801\u8fdb\u5165\u4e86 Hello {{ name }}! \u5206\u652f\uff0c\u800c\u4e14\u53d8\u91cf {{ name }} \u88ab\u66ff\u6362\u4e3a\u4e86\u201dman\u201d\u3002Jinja2\u7684\u6a21\u677f\u5f15\u64ce\u8fd8\u6709\u66f4\u591a\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u5305\u62ecfor\u5faa\u73af\uff0c\u8fc7\u6ee4\u5668\u7b49\u3002\u6a21\u677f\u91cc\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5185\u7f6e\u5bf9\u8c61\u5982request, session\u7b49\u3002\u5bf9\u4e8eJinja2\u7684\u7ec6\u8282\uff0c\u611f\u5174\u8da3\u7684\u670b\u53cb\u4eec\u53ef\u4ee5\u81ea\u5df1\u53bb\u67e5\u67e5\u3002 \u6a21\u677f\u7ee7\u627f \u00b6 \u4e00\u822c\u6211\u4eec\u7684\u7f51\u7ad9\u867d\u7136\u9875\u9762\u591a\uff0c\u4f46\u662f\u5f88\u591a\u90e8\u5206\u662f\u91cd\u7528\u7684\uff0c\u6bd4\u5982\u9875\u9996\uff0c\u9875\u811a\uff0c\u5bfc\u822a\u680f\u4e4b\u7c7b\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u9875\u9762\uff0c\u90fd\u8981\u5199\u8fd9\u4e9b\u4ee3\u7801\uff0c\u5f88\u9ebb\u70e6\u3002Flask\u7684Jinja2\u6a21\u677f\u652f\u6301\u6a21\u677f\u7ee7\u627f\u529f\u80fd\uff0c\u7701\u53bb\u4e86\u8fd9\u4e9b\u91cd\u590d\u4ee3\u7801\u3002\u8ba9\u6211\u4eec\u57fa\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5728\u201dtemplates\u201d\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201dlayout.html\u201d\u7684\u6a21\u677f\uff1a <!doctype html> < title > Hello Sample </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ url_for('static', filename='style.css') }}\" > < div class = \"page\" > {% block body %} {% endblock %} </ div > \u518d\u4fee\u6539\u4e4b\u524d\u7684\u201dhello.html\u201d\uff0c\u628a\u539f\u6765\u7684\u4ee3\u7801\u5b9a\u4e49\u5728 {% block body %} \u4e2d\uff0c\u5e76\u5728\u4ee3\u7801\u4e00\u5f00\u59cb\u201d\u7ee7\u627f\u201d\u4e0a\u9762\u7684\u201dlayout.html\u201d\uff1a {% extends \"layout.html\" %} {% block body %} {% if name %} < h1 > Hello {{ name }}! </ h1 > {% else %} < h1 > Hello World! </ h1 > {% endif %} {% endblock %} \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u518d\u770b\u4e0b http://localhost:5000/hello/man \u9875\u9762\u7684\u6e90\u7801\u3002 <!doctype html> < title > Hello Sample </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"/static/style.css\" > < div class = \"page\" > < h1 > Hello man! </ h1 > </ div > \u4f60\u4f1a\u53d1\u73b0\uff0c\u867d\u7136 render_template() \u52a0\u8f7d\u4e86\u201dhello.html\u201d\u6a21\u677f\uff0c\u4f46\u662f\u201dlayout.html\u201d\u7684\u5185\u5bb9\u4e5f\u4e00\u8d77\u88ab\u52a0\u8f7d\u4e86\u3002\u800c\u4e14\u201dhello.html\u201d\u4e2d\u7684\u5185\u5bb9\u88ab\u653e\u7f6e\u5728\u201dlayout.html\u201d\u4e2d {% block body %} \u7684\u4f4d\u7f6e\u4e0a\u3002\u5f62\u8c61\u7684\u8bf4\uff0c\u5c31\u662f\u201dhello.html\u201d\u7ee7\u627f\u4e86\u201dlayout.html\u201d\u3002 HTML\u81ea\u52a8\u8f6c\u4e49 \u00b6 \u6211\u4eec\u770b\u4e0b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a @app . route ( '/' ) def index (): return '<div>Hello %s </div>' % '<em>Flask</em>' \u6253\u5f00\u9875\u9762\uff0c\u4f60\u4f1a\u770b\u5230\u201dHello Flask\u201d\u5b57\u6837\uff0c\u800c\u4e14\u201dFlask\u201d\u662f\u659c\u4f53\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u52a0\u4e86``\u6807\u7b7e\u3002\u4f46\u6709\u65f6\u6211\u4eec\u5e76\u4e0d\u60f3\u8ba9\u8fd9\u4e9bHTML\u6807\u7b7e\u81ea\u52a8\u8f6c\u4e49\uff0c\u7279\u522b\u662f\u4f20\u9012\u8868\u5355\u53c2\u6570\u65f6\uff0c\u5f88\u5bb9\u6613\u5bfc\u81f4HTML\u6ce8\u5165\u7684\u6f0f\u6d1e\u3002\u6211\u4eec\u628a\u4e0a\u9762\u7684\u4ee3\u7801\u6539\u4e0b\uff0c\u5f15\u5165\u201dMarkup\u201d\u7c7b\uff1a from flask import Flask , Markup app = Flask ( __name__ ) @app . route ( '/' ) def index (): return Markup ( '<div>Hello %s </div>' ) % '<em>Flask</em>' \u518d\u6b21\u6253\u5f00\u9875\u9762\uff0c `\u6807\u7b7e\u663e\u793a\u5728\u9875\u9762\u4e0a\u4e86\u3002Markup\u8fd8\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u6bd4\u5982 escape() \u5448\u73b0HTML\u6807\u7b7e, striptags()`\u53bb\u9664HTML\u6807\u7b7e\u3002\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002","title":"Flask3-\u6a21\u677f"},{"location":"05-flask/Flask_todo_2/Flask3-%E6%A8%A1%E6%9D%BF/#flask","text":"","title":"Flask\u5165\u95e8\u7cfb\u5217(\u4e09)\u2013\u6a21\u677f"},{"location":"05-flask/Flask_todo_2/Flask3-%E6%A8%A1%E6%9D%BF/#_1","text":"Flask\u7684\u6a21\u677f\u529f\u80fd\u662f\u57fa\u4e8e Jinja2\u6a21\u677f\u5f15\u64ce \u5b9e\u73b0\u7684\u3002\u8ba9\u6211\u4eec\u6765\u5b9e\u73b0\u4e00\u4e2a\u4f8b\u5b50\u5427\u3002\u521b\u5efa\u4e00\u4e2a\u65b0\u7684Flask\u8fd0\u884c\u6587\u4ef6\uff08\u4f60\u5e94\u8be5\u4e0d\u4f1a\u5fd8\u4e86\u600e\u4e48\u5199\u5427\uff09\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a from flask import Flask from flask import render_template app = Flask ( __name__ ) @app . route ( '/hello' ) @app . route ( '/hello/<name>' ) def hello ( name = None ): return render_template ( 'hello.html' , name = name ) if __name__ == '__main__' : app . run ( host = '0.0.0.0' , debug = True ) \u8fd9\u6bb5\u4ee3\u7801\u540c\u4e0a\u4e00\u7bc7\u7684\u591aURL\u8def\u7531\u7684\u4f8b\u5b50\u975e\u5e38\u76f8\u4f3c\uff0c\u533a\u522b\u5c31\u662f hello() \u51fd\u6570\u5e76\u4e0d\u662f\u76f4\u63a5\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u800c\u662f\u8c03\u7528\u4e86 render_template() \u65b9\u6cd5\u6765\u6e32\u67d3\u6a21\u677f\u3002\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570 hello.html \u6307\u5411\u4f60\u60f3\u6e32\u67d3\u7684\u6a21\u677f\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570 name \u662f\u4f60\u8981\u4f20\u5230\u6a21\u677f\u53bb\u7684\u53d8\u91cf\uff0c\u53d8\u91cf\u53ef\u4ee5\u4f20\u591a\u4e2a\u3002 \u90a3\u4e48\u8fd9\u4e2a\u6a21\u677f hello.html \u5728\u54ea\u513f\u5462\uff0c\u53d8\u91cf\u53c2\u6570\u53c8\u8be5\u600e\u4e48\u7528\u5462\uff1f\u522b\u6025\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa\u6a21\u677f\u6587\u4ef6\u3002\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u4e00\u4e2a\u5b50\u76ee\u5f55\u201dtemplates\u201d\uff08\u6ce8\u610f\uff0c\u4e00\u5b9a\u8981\u4f7f\u7528\u8fd9\u4e2a\u540d\u5b57\uff09\u3002\u7136\u540e\u5728\u201dtemplates\u201d\u76ee\u5f55\u4e0b\u521b\u5efa\u6587\u4ef6\u201dhello.html\u201d\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a <!doctype html> < title > Hello Sample </ title > {% if name %} < h1 > Hello {{ name }}! </ h1 > {% else %} < h1 > Hello World! </ h1 > {% endif %} \u8fd9\u6bb5\u4ee3\u7801\u662f\u4e0d\u662f\u5f88\u50cfHTML\uff1f\u63a5\u89e6\u8fc7\u5176\u4ed6\u6a21\u677f\u5f15\u64ce\u7684\u670b\u53cb\u4eec\u80af\u5b9a\u7acb\u9a6c\u79d2\u61c2\u4e86\u8fd9\u6bb5\u4ee3\u7801\u3002\u5b83\u5c31\u662f\u4e00\u4e2aHTML\u6a21\u677f\uff0c\u6839\u636e name \u53d8\u91cf\u7684\u503c\uff0c\u663e\u793a\u4e0d\u540c\u7684\u5185\u5bb9\u3002\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\u7531 {{ }} \u4fee\u9970\uff0c\u800c\u63a7\u5236\u8bed\u53e5\u7531 {% %} \u4fee\u9970\uff0c\u5176\u4ed6\u7684\u4ee3\u7801\uff0c\u5c31\u662f\u6211\u4eec\u5e38\u89c1\u7684HTML\u3002 \u8ba9\u6211\u4eec\u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u8f93\u5165 http://localhost:5000/hello/man \uff0c\u9875\u9762\u4e0a\u5373\u663e\u793a\u5927\u6807\u9898\u201dHello man!\u201c\u3002\u6211\u4eec\u518d\u770b\u4e0b\u9875\u9762\u6e90\u4ee3\u7801 <!doctype html> < title > Hello from Flask </ title > < h1 > Hello man! </ h1 > \u679c\u7136\uff0c\u6a21\u677f\u4ee3\u7801\u8fdb\u5165\u4e86 Hello {{ name }}! \u5206\u652f\uff0c\u800c\u4e14\u53d8\u91cf {{ name }} \u88ab\u66ff\u6362\u4e3a\u4e86\u201dman\u201d\u3002Jinja2\u7684\u6a21\u677f\u5f15\u64ce\u8fd8\u6709\u66f4\u591a\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u5305\u62ecfor\u5faa\u73af\uff0c\u8fc7\u6ee4\u5668\u7b49\u3002\u6a21\u677f\u91cc\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5185\u7f6e\u5bf9\u8c61\u5982request, session\u7b49\u3002\u5bf9\u4e8eJinja2\u7684\u7ec6\u8282\uff0c\u611f\u5174\u8da3\u7684\u670b\u53cb\u4eec\u53ef\u4ee5\u81ea\u5df1\u53bb\u67e5\u67e5\u3002","title":"\u6a21\u677f"},{"location":"05-flask/Flask_todo_2/Flask3-%E6%A8%A1%E6%9D%BF/#_2","text":"\u4e00\u822c\u6211\u4eec\u7684\u7f51\u7ad9\u867d\u7136\u9875\u9762\u591a\uff0c\u4f46\u662f\u5f88\u591a\u90e8\u5206\u662f\u91cd\u7528\u7684\uff0c\u6bd4\u5982\u9875\u9996\uff0c\u9875\u811a\uff0c\u5bfc\u822a\u680f\u4e4b\u7c7b\u7684\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u9875\u9762\uff0c\u90fd\u8981\u5199\u8fd9\u4e9b\u4ee3\u7801\uff0c\u5f88\u9ebb\u70e6\u3002Flask\u7684Jinja2\u6a21\u677f\u652f\u6301\u6a21\u677f\u7ee7\u627f\u529f\u80fd\uff0c\u7701\u53bb\u4e86\u8fd9\u4e9b\u91cd\u590d\u4ee3\u7801\u3002\u8ba9\u6211\u4eec\u57fa\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u5728\u201dtemplates\u201d\u76ee\u5f55\u4e0b\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a\u201dlayout.html\u201d\u7684\u6a21\u677f\uff1a <!doctype html> < title > Hello Sample </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ url_for('static', filename='style.css') }}\" > < div class = \"page\" > {% block body %} {% endblock %} </ div > \u518d\u4fee\u6539\u4e4b\u524d\u7684\u201dhello.html\u201d\uff0c\u628a\u539f\u6765\u7684\u4ee3\u7801\u5b9a\u4e49\u5728 {% block body %} \u4e2d\uff0c\u5e76\u5728\u4ee3\u7801\u4e00\u5f00\u59cb\u201d\u7ee7\u627f\u201d\u4e0a\u9762\u7684\u201dlayout.html\u201d\uff1a {% extends \"layout.html\" %} {% block body %} {% if name %} < h1 > Hello {{ name }}! </ h1 > {% else %} < h1 > Hello World! </ h1 > {% endif %} {% endblock %} \u6253\u5f00\u6d4f\u89c8\u5668\uff0c\u518d\u770b\u4e0b http://localhost:5000/hello/man \u9875\u9762\u7684\u6e90\u7801\u3002 <!doctype html> < title > Hello Sample </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"/static/style.css\" > < div class = \"page\" > < h1 > Hello man! </ h1 > </ div > \u4f60\u4f1a\u53d1\u73b0\uff0c\u867d\u7136 render_template() \u52a0\u8f7d\u4e86\u201dhello.html\u201d\u6a21\u677f\uff0c\u4f46\u662f\u201dlayout.html\u201d\u7684\u5185\u5bb9\u4e5f\u4e00\u8d77\u88ab\u52a0\u8f7d\u4e86\u3002\u800c\u4e14\u201dhello.html\u201d\u4e2d\u7684\u5185\u5bb9\u88ab\u653e\u7f6e\u5728\u201dlayout.html\u201d\u4e2d {% block body %} \u7684\u4f4d\u7f6e\u4e0a\u3002\u5f62\u8c61\u7684\u8bf4\uff0c\u5c31\u662f\u201dhello.html\u201d\u7ee7\u627f\u4e86\u201dlayout.html\u201d\u3002","title":"\u6a21\u677f\u7ee7\u627f"},{"location":"05-flask/Flask_todo_2/Flask3-%E6%A8%A1%E6%9D%BF/#html","text":"\u6211\u4eec\u770b\u4e0b\u4e0b\u9762\u7684\u4ee3\u7801\uff1a @app . route ( '/' ) def index (): return '<div>Hello %s </div>' % '<em>Flask</em>' \u6253\u5f00\u9875\u9762\uff0c\u4f60\u4f1a\u770b\u5230\u201dHello Flask\u201d\u5b57\u6837\uff0c\u800c\u4e14\u201dFlask\u201d\u662f\u659c\u4f53\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u52a0\u4e86``\u6807\u7b7e\u3002\u4f46\u6709\u65f6\u6211\u4eec\u5e76\u4e0d\u60f3\u8ba9\u8fd9\u4e9bHTML\u6807\u7b7e\u81ea\u52a8\u8f6c\u4e49\uff0c\u7279\u522b\u662f\u4f20\u9012\u8868\u5355\u53c2\u6570\u65f6\uff0c\u5f88\u5bb9\u6613\u5bfc\u81f4HTML\u6ce8\u5165\u7684\u6f0f\u6d1e\u3002\u6211\u4eec\u628a\u4e0a\u9762\u7684\u4ee3\u7801\u6539\u4e0b\uff0c\u5f15\u5165\u201dMarkup\u201d\u7c7b\uff1a from flask import Flask , Markup app = Flask ( __name__ ) @app . route ( '/' ) def index (): return Markup ( '<div>Hello %s </div>' ) % '<em>Flask</em>' \u518d\u6b21\u6253\u5f00\u9875\u9762\uff0c `\u6807\u7b7e\u663e\u793a\u5728\u9875\u9762\u4e0a\u4e86\u3002Markup\u8fd8\u6709\u5f88\u591a\u65b9\u6cd5\uff0c\u6bd4\u5982 escape() \u5448\u73b0HTML\u6807\u7b7e, striptags()`\u53bb\u9664HTML\u6807\u7b7e\u3002\u8fd9\u91cc\u5c31\u4e0d\u4e00\u4e00\u5217\u4e3e\u4e86\u3002","title":"HTML\u81ea\u52a8\u8f6c\u4e49"},{"location":"05-flask/Flask_todo_2/Flask4-%E8%AF%B7%E6%B1%82%EF%BC%8C%E5%93%8D%E5%BA%94%E5%8F%8A%E4%BC%9A%E8%AF%9D/","text":"Flask\u5165\u95e8\u7cfb\u5217(\u56db)\u2013\u8bf7\u6c42\uff0c\u54cd\u5e94\u53ca\u4f1a\u8bdd \u00b6 \u4e00\u4e2a\u5b8c\u6574\u7684HTTP\u8bf7\u6c42\uff0c\u5305\u62ec\u4e86\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42Request\uff0c\u670d\u52a1\u5668\u7aef\u7684\u54cd\u5e94Response\uff0c\u4f1a\u8bddSession\u7b49\u3002\u4e00\u4e2a\u57fa\u672c\u7684Web\u6846\u67b6\u4e00\u5b9a\u4f1a\u63d0\u4f9b\u5185\u5efa\u7684\u5bf9\u8c61\u6765\u8bbf\u95ee\u8fd9\u4e9b\u4fe1\u606f\uff0cFlask\u5f53\u7136\u4e5f\u4e0d\u4f8b\u5916\u3002\u6211\u4eec\u6765\u770b\u770b\u5728Flask\u4e2d\u8be5\u600e\u4e48\u4f7f\u7528\u8fd9\u4e9b\u5185\u5efa\u5bf9\u8c61\u3002 Flask\u5185\u5efa\u5bf9\u8c61 \u00b6 Flask\u63d0\u4f9b\u7684\u5185\u5efa\u5bf9\u8c61\u5e38\u7528\u7684\u6709request, session, g\uff0c\u901a\u8fc7request\uff0c\u4f60\u8fd8\u53ef\u4ee5\u83b7\u53d6cookie\u5bf9\u8c61\u3002\u8fd9\u4e9b\u5bf9\u8c61\u4e0d\u4f46\u53ef\u4ee5\u5728\u8bf7\u6c42\u51fd\u6570\u4e2d\u4f7f\u7528\uff0c\u5728\u6a21\u677f\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002 \u8bf7\u6c42\u5bf9\u8c61request \u00b6 \u5f15\u5165flask\u5305\u4e2d\u7684request\u5bf9\u8c61\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728\u8bf7\u6c42\u51fd\u6570\u4e2d\u76f4\u63a5\u4f7f\u7528\u8be5\u5bf9\u8c61\u4e86\u3002\u8ba9\u6211\u4eec\u6539\u8fdb\u4e0b \u7b2c\u4e8c\u7bc7 \u4e2d\u7684 login() \u65b9\u6cd5\uff1a from flask import request @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : if request . form [ 'user' ] == 'admin' : return 'Admin login successfully!' else : return 'No such user!' title = request . args . get ( 'title' , 'Default' ) return render_template ( 'login.html' , title = title ) \u5728 \u7b2c\u4e09\u7bc7 \u7684templates\u76ee\u5f55\u4e0b\uff0c\u6dfb\u52a0\u201dlogin.html\u201d\u6587\u4ef6 {% extends \"layout.html\" %} {% block body %} < form name = \"login\" action = \"/login\" method = \"post\" > Hello {{ title }}, please login by: < input type = \"text\" name = \"user\" /> </ form > {% endblock %} \u6267\u884c\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u7ed3\u679c\u6211\u5c31\u4e0d\u591a\u63cf\u8ff0\u4e86\u3002\u7b80\u5355\u89e3\u91ca\u4e0b\uff0c request \u4e2d method \u53d8\u91cf\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684\u65b9\u6cd5\uff0c\u5373\u201dGET\u201d, \u201cPOST\u201d, \u201cDELETE\u201d, \u201cPUT\u201d\u7b49\uff1b form \u53d8\u91cf\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u53ef\u4ee5\u83b7\u53d6\u201dPost\u201d\u8bf7\u6c42\u8868\u5355\u4e2d\u7684\u5185\u5bb9\uff0c\u5728\u4e0a\u4f8b\u4e2d\uff0c\u5982\u679c\u63d0\u4ea4\u7684\u8868\u5355\u4e2d\u4e0d\u5b58\u5728 user \u9879\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2a KeyError \uff0c\u4f60\u53ef\u4ee5\u4e0d\u6355\u83b7\uff0c\u9875\u9762\u4f1a\u8fd4\u56de400\u9519\u8bef\uff08\u60f3\u907f\u514d\u629b\u51fa\u8fd9 KeyError \uff0c\u4f60\u53ef\u4ee5\u7528 request.form.get('user') \u6765\u66ff\u4ee3\uff09\u3002\u800c request.args.get() \u65b9\u6cd5\u5219\u53ef\u4ee5\u83b7\u53d6\u201dGet\u201d\u8bf7\u6c42URL\u4e2d\u7684\u53c2\u6570\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u9ed8\u8ba4\u503c\uff0c\u5f53URL\u53c2\u6570\u4e0d\u5b58\u5728\u65f6\uff0c\u5219\u8fd4\u56de\u9ed8\u8ba4\u503c\u3002 request \u7684\u8be6\u7ec6\u4f7f\u7528\u53ef\u53c2\u9605Flask\u7684 \u5b98\u65b9API\u6587\u6863 \u3002 \u4f1a\u8bdd\u5bf9\u8c61session \u00b6 \u4f1a\u8bdd\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u8bf7\u6c42\u7684\u4e00\u4e9b\u72b6\u6001\uff0c\u4ee5\u4fbf\u4e8e\u5728\u8bf7\u6c42\u4e4b\u524d\u5171\u4eab\u4fe1\u606f\u3002\u6211\u4eec\u5c06\u4e0a\u9762\u7684python\u4ee3\u7801\u6539\u52a8\u4e0b\uff1a from flask import request , session @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : if request . form [ 'user' ] == 'admin' : session [ 'user' ] = request . form [ 'user' ] return 'Admin login successfully!' else : return 'No such user!' if 'user' in session : return 'Hello %s !' % session [ 'user' ] else : title = request . args . get ( 'title' , 'Default' ) return render_template ( 'login.html' , title = title ) app . secret_key = '123456' \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u201dadmin\u201d\u767b\u9646\u6210\u529f\u540e\uff0c\u518d\u6253\u5f00\u201dlogin\u201d\u9875\u9762\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8868\u5355\u4e86\u3002session\u5bf9\u8c61\u7684\u64cd\u4f5c\u5c31\u8ddf\u4e00\u4e2a\u5b57\u5178\u4e00\u6837\u3002\u7279\u522b\u63d0\u9192\uff0c\u4f7f\u7528session\u65f6\u4e00\u5b9a\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5bc6\u94a5 app.secret_key \uff0c\u5982\u4e0a\u4f8b\u3002\u4e0d\u7136\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u8fd0\u884c\u65f6\u9519\u8bef\uff0c\u5185\u5bb9\u5927\u81f4\u662f RuntimeError: the session is unavailable because no secret key was set \u3002\u5bc6\u94a5\u8981\u5c3d\u91cf\u590d\u6742\uff0c\u6700\u597d\u4f7f\u7528\u4e00\u4e2a\u968f\u673a\u6570\uff0c\u8fd9\u6837\u4e0d\u4f1a\u6709\u91cd\u590d\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u4e0d\u662f\u4e00\u4e2a\u597d\u5bc6\u94a5\u3002 \u6211\u4eec\u987a\u4fbf\u5199\u4e2a\u767b\u51fa\u7684\u65b9\u6cd5\uff0c\u4f30\u8ba1\u6211\u4e0d\u653e\u4f8b\u5b50\uff0c\u5927\u5bb6\u4e5f\u90fd\u731c\u5230\u600e\u4e48\u5199\uff0c\u5c31\u662f\u6e05\u9664\u5b57\u5178\u91cc\u7684\u952e\u503c\uff1a from flask import request , session , redirect , url_for @app . route ( '/logout' ) def logout (): session . pop ( 'user' , None ) return redirect ( url_for ( 'login' )) \u5173\u4e8e redirect \u65b9\u6cd5\uff0c\u6211\u4eec\u4f1a\u5728 \u4e0b\u4e00\u7bc7 \u4ecb\u7ecd\u3002 \u6784\u5efa\u54cd\u5e94 \u00b6 \u5728\u4e4b\u524d\u7684\u4f8b\u5b50\u4e2d\uff0c\u8bf7\u6c42\u7684\u54cd\u5e94\u6211\u4eec\u90fd\u662f\u76f4\u63a5\u8fd4\u56de\u5b57\u7b26\u4e32\u5185\u5bb9\uff0c\u6216\u8005\u901a\u8fc7\u6a21\u677f\u6765\u6784\u5efa\u54cd\u5e94\u5185\u5bb9\u7136\u540e\u8fd4\u56de\u3002\u5176\u5b9e\u6211\u4eec\u4e5f\u53ef\u4ee5\u5148\u6784\u5efa\u54cd\u5e94\u5bf9\u8c61\uff0c\u8bbe\u7f6e\u4e00\u4e9b\u53c2\u6570\uff08\u6bd4\u5982\u54cd\u5e94\u5934\uff09\u540e\uff0c\u518d\u5c06\u5176\u8fd4\u56de\u3002\u4fee\u6539\u4e0b\u4e0a\u4f8b\u4e2d\u7684\u201dGet\u201d\u8bf7\u6c42\u90e8\u5206\uff1a from flask import request , session , make_response @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : ... if 'user' in session : ... else : title = request . args . get ( 'title' , 'Default' ) response = make_response ( render_template ( 'login.html' , title = title ), 200 ) response . headers [ 'key' ] = 'value' return response \u6253\u5f00\u6d4f\u89c8\u5668\u8c03\u8bd5\uff0c\u5728\u201dGet\u201d\u8bf7\u6c42\u7528\u6237\u672a\u767b\u5f55\u72b6\u6001\u4e0b\uff0c\u4f60\u4f1a\u770b\u5230\u54cd\u5e94\u5934\u4e2d\u6709\u4e00\u4e2a key \u9879\u3002 make_response \u65b9\u6cd5\u5c31\u662f\u7528\u6765\u6784\u5efa response \u5bf9\u8c61\u7684\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ee3\u8868\u54cd\u5e94\u72b6\u6001\u7801\uff0c\u7f3a\u7701\u5c31\u662f\u201d200\u201d\u3002 response \u5bf9\u8c61\u7684\u8be6\u7ec6\u4f7f\u7528\u53ef\u53c2\u9605Flask\u7684 \u5b98\u65b9API\u6587\u6863 \u3002 Cookie\u7684\u4f7f\u7528 \u00b6 \u63d0\u5230\u4e86Session\uff0c\u5f53\u7136\u4e5f\u8981\u4ecb\u7ecdCookie\u55bd\uff0c\u6bd5\u7adf\u6ca1\u6709Cookie\uff0cSession\u5c31\u6839\u672c\u6ca1\u6cd5\u7528\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff1f\u67e5\u67e5\u53bb\uff09\u3002Flask\u4e2d\u4f7f\u7528Cookie\u4e5f\u5f88\u7b80\u5355\uff1a from flask import request , session , make_response import time @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): response = None if request . method == 'POST' : if request . form [ 'user' ] == 'admin' : session [ 'user' ] = request . form [ 'user' ] response = make_response ( 'Admin login successfully!' ) response . set_cookie ( 'login_time' , time . strftime ( '%Y-%m- %d %H:%M:%S' )) ... else : if 'user' in session : login_time = request . cookies . get ( 'login_time' ) response = make_response ( 'Hello %s , you logged in on %s ' % ( session [ 'user' ], login_time )) ... return response \u4f8b\u5b50\u8d8a\u6765\u8d8a\u957f\u4e86\uff0c\u8fd9\u6b21\u6211\u4eec\u5f15\u5165\u4e86 time \u6a21\u5757\u6765\u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\u3002\u6211\u4eec\u5728\u8fd4\u56de\u54cd\u5e94\u65f6\uff0c\u901a\u8fc7 response.set_cookie() \u51fd\u6570\uff0c\u6765\u8bbe\u7f6eCookie\u9879\uff0c\u4e4b\u540e\u8fd9\u4e2a\u9879\u503c\u4f1a\u88ab\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e2d\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570 max_age \u53ef\u4ee5\u8bbe\u7f6e\u8be5Cookie\u9879\u7684\u6709\u6548\u671f\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u4e0d\u8bbe\u7684\u8bdd\uff0c\u5728\u6d4f\u89c8\u5668\u5173\u95ed\u540e\uff0c\u8be5Cookie\u9879\u5373\u5931\u6548\u3002 \u5728\u8bf7\u6c42\u4e2d\uff0c request.cookies \u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u4fdd\u5b58\u4e86\u6d4f\u89c8\u5668Cookie\u7684\u5b57\u5178\uff0c\u4f7f\u7528\u5176 get() \u51fd\u6570\u5c31\u53ef\u4ee5\u83b7\u53d6\u76f8\u5e94\u7684\u952e\u503c\u3002 \u5168\u5c40\u5bf9\u8c61g \u00b6 flask.g \u662fFlask\u4e00\u4e2a\u5168\u5c40\u5bf9\u8c61\uff0c\u8fd9\u91cc\u6709\u70b9\u5bb9\u6613\u8ba9\u4eba\u8bef\u89e3\uff0c\u5176\u5b9e g \u7684\u4f5c\u7528\u8303\u56f4\uff0c\u5c31\u5728\u4e00\u4e2a\u8bf7\u6c42\uff08\u4e5f\u5c31\u662f\u4e00\u4e2a\u7ebf\u7a0b\uff09\u91cc\uff0c\u5b83\u4e0d\u80fd\u5728\u591a\u4e2a\u8bf7\u6c42\u95f4\u5171\u4eab\u3002\u4f60\u53ef\u4ee5\u5728 g \u5bf9\u8c61\u91cc\u4fdd\u5b58\u4efb\u4f55\u4f60\u60f3\u4fdd\u5b58\u7684\u5185\u5bb9\u3002\u4e00\u4e2a\u6700\u5e38\u7528\u7684\u4f8b\u5b50\uff0c\u5c31\u662f\u5728\u8fdb\u5165\u8bf7\u6c42\u524d\uff0c\u4fdd\u5b58\u6570\u636e\u5e93\u8fde\u63a5\u3002\u8fd9\u4e2a\u6211\u4eec\u4f1a\u5728\u4ecb\u7ecd \u6570\u636e\u5e93\u96c6\u6210 \u65f6\u8bb2\u5230\u3002","title":"Flask4-\u8bf7\u6c42\uff0c\u54cd\u5e94\u53ca\u4f1a\u8bdd"},{"location":"05-flask/Flask_todo_2/Flask4-%E8%AF%B7%E6%B1%82%EF%BC%8C%E5%93%8D%E5%BA%94%E5%8F%8A%E4%BC%9A%E8%AF%9D/#flask","text":"\u4e00\u4e2a\u5b8c\u6574\u7684HTTP\u8bf7\u6c42\uff0c\u5305\u62ec\u4e86\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42Request\uff0c\u670d\u52a1\u5668\u7aef\u7684\u54cd\u5e94Response\uff0c\u4f1a\u8bddSession\u7b49\u3002\u4e00\u4e2a\u57fa\u672c\u7684Web\u6846\u67b6\u4e00\u5b9a\u4f1a\u63d0\u4f9b\u5185\u5efa\u7684\u5bf9\u8c61\u6765\u8bbf\u95ee\u8fd9\u4e9b\u4fe1\u606f\uff0cFlask\u5f53\u7136\u4e5f\u4e0d\u4f8b\u5916\u3002\u6211\u4eec\u6765\u770b\u770b\u5728Flask\u4e2d\u8be5\u600e\u4e48\u4f7f\u7528\u8fd9\u4e9b\u5185\u5efa\u5bf9\u8c61\u3002","title":"Flask\u5165\u95e8\u7cfb\u5217(\u56db)\u2013\u8bf7\u6c42\uff0c\u54cd\u5e94\u53ca\u4f1a\u8bdd"},{"location":"05-flask/Flask_todo_2/Flask4-%E8%AF%B7%E6%B1%82%EF%BC%8C%E5%93%8D%E5%BA%94%E5%8F%8A%E4%BC%9A%E8%AF%9D/#flask_1","text":"Flask\u63d0\u4f9b\u7684\u5185\u5efa\u5bf9\u8c61\u5e38\u7528\u7684\u6709request, session, g\uff0c\u901a\u8fc7request\uff0c\u4f60\u8fd8\u53ef\u4ee5\u83b7\u53d6cookie\u5bf9\u8c61\u3002\u8fd9\u4e9b\u5bf9\u8c61\u4e0d\u4f46\u53ef\u4ee5\u5728\u8bf7\u6c42\u51fd\u6570\u4e2d\u4f7f\u7528\uff0c\u5728\u6a21\u677f\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002","title":"Flask\u5185\u5efa\u5bf9\u8c61"},{"location":"05-flask/Flask_todo_2/Flask4-%E8%AF%B7%E6%B1%82%EF%BC%8C%E5%93%8D%E5%BA%94%E5%8F%8A%E4%BC%9A%E8%AF%9D/#request","text":"\u5f15\u5165flask\u5305\u4e2d\u7684request\u5bf9\u8c61\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u5728\u8bf7\u6c42\u51fd\u6570\u4e2d\u76f4\u63a5\u4f7f\u7528\u8be5\u5bf9\u8c61\u4e86\u3002\u8ba9\u6211\u4eec\u6539\u8fdb\u4e0b \u7b2c\u4e8c\u7bc7 \u4e2d\u7684 login() \u65b9\u6cd5\uff1a from flask import request @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : if request . form [ 'user' ] == 'admin' : return 'Admin login successfully!' else : return 'No such user!' title = request . args . get ( 'title' , 'Default' ) return render_template ( 'login.html' , title = title ) \u5728 \u7b2c\u4e09\u7bc7 \u7684templates\u76ee\u5f55\u4e0b\uff0c\u6dfb\u52a0\u201dlogin.html\u201d\u6587\u4ef6 {% extends \"layout.html\" %} {% block body %} < form name = \"login\" action = \"/login\" method = \"post\" > Hello {{ title }}, please login by: < input type = \"text\" name = \"user\" /> </ form > {% endblock %} \u6267\u884c\u4e0a\u9762\u7684\u4f8b\u5b50\uff0c\u7ed3\u679c\u6211\u5c31\u4e0d\u591a\u63cf\u8ff0\u4e86\u3002\u7b80\u5355\u89e3\u91ca\u4e0b\uff0c request \u4e2d method \u53d8\u91cf\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u7684\u65b9\u6cd5\uff0c\u5373\u201dGET\u201d, \u201cPOST\u201d, \u201cDELETE\u201d, \u201cPUT\u201d\u7b49\uff1b form \u53d8\u91cf\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u53ef\u4ee5\u83b7\u53d6\u201dPost\u201d\u8bf7\u6c42\u8868\u5355\u4e2d\u7684\u5185\u5bb9\uff0c\u5728\u4e0a\u4f8b\u4e2d\uff0c\u5982\u679c\u63d0\u4ea4\u7684\u8868\u5355\u4e2d\u4e0d\u5b58\u5728 user \u9879\uff0c\u5219\u4f1a\u8fd4\u56de\u4e00\u4e2a KeyError \uff0c\u4f60\u53ef\u4ee5\u4e0d\u6355\u83b7\uff0c\u9875\u9762\u4f1a\u8fd4\u56de400\u9519\u8bef\uff08\u60f3\u907f\u514d\u629b\u51fa\u8fd9 KeyError \uff0c\u4f60\u53ef\u4ee5\u7528 request.form.get('user') \u6765\u66ff\u4ee3\uff09\u3002\u800c request.args.get() \u65b9\u6cd5\u5219\u53ef\u4ee5\u83b7\u53d6\u201dGet\u201d\u8bf7\u6c42URL\u4e2d\u7684\u53c2\u6570\uff0c\u8be5\u51fd\u6570\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u9ed8\u8ba4\u503c\uff0c\u5f53URL\u53c2\u6570\u4e0d\u5b58\u5728\u65f6\uff0c\u5219\u8fd4\u56de\u9ed8\u8ba4\u503c\u3002 request \u7684\u8be6\u7ec6\u4f7f\u7528\u53ef\u53c2\u9605Flask\u7684 \u5b98\u65b9API\u6587\u6863 \u3002","title":"\u8bf7\u6c42\u5bf9\u8c61request"},{"location":"05-flask/Flask_todo_2/Flask4-%E8%AF%B7%E6%B1%82%EF%BC%8C%E5%93%8D%E5%BA%94%E5%8F%8A%E4%BC%9A%E8%AF%9D/#session","text":"\u4f1a\u8bdd\u53ef\u4ee5\u7528\u6765\u4fdd\u5b58\u5f53\u524d\u8bf7\u6c42\u7684\u4e00\u4e9b\u72b6\u6001\uff0c\u4ee5\u4fbf\u4e8e\u5728\u8bf7\u6c42\u4e4b\u524d\u5171\u4eab\u4fe1\u606f\u3002\u6211\u4eec\u5c06\u4e0a\u9762\u7684python\u4ee3\u7801\u6539\u52a8\u4e0b\uff1a from flask import request , session @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : if request . form [ 'user' ] == 'admin' : session [ 'user' ] = request . form [ 'user' ] return 'Admin login successfully!' else : return 'No such user!' if 'user' in session : return 'Hello %s !' % session [ 'user' ] else : title = request . args . get ( 'title' , 'Default' ) return render_template ( 'login.html' , title = title ) app . secret_key = '123456' \u4f60\u53ef\u4ee5\u770b\u5230\uff0c\u201dadmin\u201d\u767b\u9646\u6210\u529f\u540e\uff0c\u518d\u6253\u5f00\u201dlogin\u201d\u9875\u9762\u5c31\u4e0d\u4f1a\u51fa\u73b0\u8868\u5355\u4e86\u3002session\u5bf9\u8c61\u7684\u64cd\u4f5c\u5c31\u8ddf\u4e00\u4e2a\u5b57\u5178\u4e00\u6837\u3002\u7279\u522b\u63d0\u9192\uff0c\u4f7f\u7528session\u65f6\u4e00\u5b9a\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5bc6\u94a5 app.secret_key \uff0c\u5982\u4e0a\u4f8b\u3002\u4e0d\u7136\u4f60\u4f1a\u5f97\u5230\u4e00\u4e2a\u8fd0\u884c\u65f6\u9519\u8bef\uff0c\u5185\u5bb9\u5927\u81f4\u662f RuntimeError: the session is unavailable because no secret key was set \u3002\u5bc6\u94a5\u8981\u5c3d\u91cf\u590d\u6742\uff0c\u6700\u597d\u4f7f\u7528\u4e00\u4e2a\u968f\u673a\u6570\uff0c\u8fd9\u6837\u4e0d\u4f1a\u6709\u91cd\u590d\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u4e0d\u662f\u4e00\u4e2a\u597d\u5bc6\u94a5\u3002 \u6211\u4eec\u987a\u4fbf\u5199\u4e2a\u767b\u51fa\u7684\u65b9\u6cd5\uff0c\u4f30\u8ba1\u6211\u4e0d\u653e\u4f8b\u5b50\uff0c\u5927\u5bb6\u4e5f\u90fd\u731c\u5230\u600e\u4e48\u5199\uff0c\u5c31\u662f\u6e05\u9664\u5b57\u5178\u91cc\u7684\u952e\u503c\uff1a from flask import request , session , redirect , url_for @app . route ( '/logout' ) def logout (): session . pop ( 'user' , None ) return redirect ( url_for ( 'login' )) \u5173\u4e8e redirect \u65b9\u6cd5\uff0c\u6211\u4eec\u4f1a\u5728 \u4e0b\u4e00\u7bc7 \u4ecb\u7ecd\u3002","title":"\u4f1a\u8bdd\u5bf9\u8c61session"},{"location":"05-flask/Flask_todo_2/Flask4-%E8%AF%B7%E6%B1%82%EF%BC%8C%E5%93%8D%E5%BA%94%E5%8F%8A%E4%BC%9A%E8%AF%9D/#_1","text":"\u5728\u4e4b\u524d\u7684\u4f8b\u5b50\u4e2d\uff0c\u8bf7\u6c42\u7684\u54cd\u5e94\u6211\u4eec\u90fd\u662f\u76f4\u63a5\u8fd4\u56de\u5b57\u7b26\u4e32\u5185\u5bb9\uff0c\u6216\u8005\u901a\u8fc7\u6a21\u677f\u6765\u6784\u5efa\u54cd\u5e94\u5185\u5bb9\u7136\u540e\u8fd4\u56de\u3002\u5176\u5b9e\u6211\u4eec\u4e5f\u53ef\u4ee5\u5148\u6784\u5efa\u54cd\u5e94\u5bf9\u8c61\uff0c\u8bbe\u7f6e\u4e00\u4e9b\u53c2\u6570\uff08\u6bd4\u5982\u54cd\u5e94\u5934\uff09\u540e\uff0c\u518d\u5c06\u5176\u8fd4\u56de\u3002\u4fee\u6539\u4e0b\u4e0a\u4f8b\u4e2d\u7684\u201dGet\u201d\u8bf7\u6c42\u90e8\u5206\uff1a from flask import request , session , make_response @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : ... if 'user' in session : ... else : title = request . args . get ( 'title' , 'Default' ) response = make_response ( render_template ( 'login.html' , title = title ), 200 ) response . headers [ 'key' ] = 'value' return response \u6253\u5f00\u6d4f\u89c8\u5668\u8c03\u8bd5\uff0c\u5728\u201dGet\u201d\u8bf7\u6c42\u7528\u6237\u672a\u767b\u5f55\u72b6\u6001\u4e0b\uff0c\u4f60\u4f1a\u770b\u5230\u54cd\u5e94\u5934\u4e2d\u6709\u4e00\u4e2a key \u9879\u3002 make_response \u65b9\u6cd5\u5c31\u662f\u7528\u6765\u6784\u5efa response \u5bf9\u8c61\u7684\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ee3\u8868\u54cd\u5e94\u72b6\u6001\u7801\uff0c\u7f3a\u7701\u5c31\u662f\u201d200\u201d\u3002 response \u5bf9\u8c61\u7684\u8be6\u7ec6\u4f7f\u7528\u53ef\u53c2\u9605Flask\u7684 \u5b98\u65b9API\u6587\u6863 \u3002","title":"\u6784\u5efa\u54cd\u5e94"},{"location":"05-flask/Flask_todo_2/Flask4-%E8%AF%B7%E6%B1%82%EF%BC%8C%E5%93%8D%E5%BA%94%E5%8F%8A%E4%BC%9A%E8%AF%9D/#cookie","text":"\u63d0\u5230\u4e86Session\uff0c\u5f53\u7136\u4e5f\u8981\u4ecb\u7ecdCookie\u55bd\uff0c\u6bd5\u7adf\u6ca1\u6709Cookie\uff0cSession\u5c31\u6839\u672c\u6ca1\u6cd5\u7528\uff08\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff1f\u67e5\u67e5\u53bb\uff09\u3002Flask\u4e2d\u4f7f\u7528Cookie\u4e5f\u5f88\u7b80\u5355\uff1a from flask import request , session , make_response import time @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): response = None if request . method == 'POST' : if request . form [ 'user' ] == 'admin' : session [ 'user' ] = request . form [ 'user' ] response = make_response ( 'Admin login successfully!' ) response . set_cookie ( 'login_time' , time . strftime ( '%Y-%m- %d %H:%M:%S' )) ... else : if 'user' in session : login_time = request . cookies . get ( 'login_time' ) response = make_response ( 'Hello %s , you logged in on %s ' % ( session [ 'user' ], login_time )) ... return response \u4f8b\u5b50\u8d8a\u6765\u8d8a\u957f\u4e86\uff0c\u8fd9\u6b21\u6211\u4eec\u5f15\u5165\u4e86 time \u6a21\u5757\u6765\u83b7\u53d6\u5f53\u524d\u7cfb\u7edf\u65f6\u95f4\u3002\u6211\u4eec\u5728\u8fd4\u56de\u54cd\u5e94\u65f6\uff0c\u901a\u8fc7 response.set_cookie() \u51fd\u6570\uff0c\u6765\u8bbe\u7f6eCookie\u9879\uff0c\u4e4b\u540e\u8fd9\u4e2a\u9879\u503c\u4f1a\u88ab\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e2d\u3002\u8fd9\u4e2a\u51fd\u6570\u7684\u7b2c\u4e09\u4e2a\u53c2\u6570 max_age \u53ef\u4ee5\u8bbe\u7f6e\u8be5Cookie\u9879\u7684\u6709\u6548\u671f\uff0c\u5355\u4f4d\u662f\u79d2\uff0c\u4e0d\u8bbe\u7684\u8bdd\uff0c\u5728\u6d4f\u89c8\u5668\u5173\u95ed\u540e\uff0c\u8be5Cookie\u9879\u5373\u5931\u6548\u3002 \u5728\u8bf7\u6c42\u4e2d\uff0c request.cookies \u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u4fdd\u5b58\u4e86\u6d4f\u89c8\u5668Cookie\u7684\u5b57\u5178\uff0c\u4f7f\u7528\u5176 get() \u51fd\u6570\u5c31\u53ef\u4ee5\u83b7\u53d6\u76f8\u5e94\u7684\u952e\u503c\u3002","title":"Cookie\u7684\u4f7f\u7528"},{"location":"05-flask/Flask_todo_2/Flask4-%E8%AF%B7%E6%B1%82%EF%BC%8C%E5%93%8D%E5%BA%94%E5%8F%8A%E4%BC%9A%E8%AF%9D/#g","text":"flask.g \u662fFlask\u4e00\u4e2a\u5168\u5c40\u5bf9\u8c61\uff0c\u8fd9\u91cc\u6709\u70b9\u5bb9\u6613\u8ba9\u4eba\u8bef\u89e3\uff0c\u5176\u5b9e g \u7684\u4f5c\u7528\u8303\u56f4\uff0c\u5c31\u5728\u4e00\u4e2a\u8bf7\u6c42\uff08\u4e5f\u5c31\u662f\u4e00\u4e2a\u7ebf\u7a0b\uff09\u91cc\uff0c\u5b83\u4e0d\u80fd\u5728\u591a\u4e2a\u8bf7\u6c42\u95f4\u5171\u4eab\u3002\u4f60\u53ef\u4ee5\u5728 g \u5bf9\u8c61\u91cc\u4fdd\u5b58\u4efb\u4f55\u4f60\u60f3\u4fdd\u5b58\u7684\u5185\u5bb9\u3002\u4e00\u4e2a\u6700\u5e38\u7528\u7684\u4f8b\u5b50\uff0c\u5c31\u662f\u5728\u8fdb\u5165\u8bf7\u6c42\u524d\uff0c\u4fdd\u5b58\u6570\u636e\u5e93\u8fde\u63a5\u3002\u8fd9\u4e2a\u6211\u4eec\u4f1a\u5728\u4ecb\u7ecd \u6570\u636e\u5e93\u96c6\u6210 \u65f6\u8bb2\u5230\u3002","title":"\u5168\u5c40\u5bf9\u8c61g"},{"location":"05-flask/Flask_todo_2/Flask5%E2%80%93%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%8F%8A%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/","text":"Flask\u5165\u95e8\u7cfb\u5217(\u4e94)\u2013\u9519\u8bef\u5904\u7406\u53ca\u6d88\u606f\u95ea\u73b0 \u00b6 \u672c\u7bc7\u5c06\u8865\u5145\u4e00\u4e9bFlask\u7684\u57fa\u672c\u529f\u80fd\uff0c\u5305\u62ec\u9519\u8bef\u5904\u7406\uff0cURL\u91cd\u5b9a\u5411\uff0c\u65e5\u5fd7\u529f\u80fd\uff0c\u8fd8\u6709\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u6d88\u606f\u95ea\u73b0\u529f\u80fd\u3002 \u9519\u8bef\u5904\u7406 \u00b6 \u4f7f\u7528 abort() \u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u8bf7\u6c42\uff0c\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\uff1a from flask import abort @app . route ( '/error' ) def error (): abort ( 404 ) \u4e0a\u4f8b\u4f1a\u663e\u793a\u6d4f\u89c8\u5668\u7684404\u9519\u8bef\u9875\u9762\u3002\u6709\u65f6\u5019\uff0c\u6211\u4eec\u60f3\u8981\u5728\u9047\u5230\u7279\u5b9a\u9519\u8bef\u4ee3\u7801\u65f6\u505a\u4e9b\u4e8b\u60c5\uff0c\u6216\u8005\u91cd\u5199\u9519\u8bef\u9875\u9762\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\uff1a @app . errorhandler ( 404 ) def page_not_found ( error ): return render_template ( '404.html' ), 404 \u6b64\u65f6\uff0c\u5f53\u518d\u6b21\u9047\u5230404\u9519\u8bef\u65f6\uff0c\u5373\u4f1a\u8c03\u7528 page_not_found() \u51fd\u6570\uff0c\u5176\u8fd4\u56de\u201d404.html\u201d\u7684\u6a21\u677f\u9875\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ee3\u8868\u9519\u8bef\u4ee3\u7801\u3002 \u4e0d\u8fc7\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5e76\u4e0d\u4f1a\u7ecf\u5e38\u4f7f\u7528 abort() \u6765\u9000\u51fa\uff0c\u5e38\u7528\u7684\u9519\u8bef\u5904\u7406\u65b9\u6cd5\u4e00\u822c\u90fd\u662f\u5f02\u5e38\u7684\u629b\u51fa\u6216\u6355\u83b7\u3002\u88c5\u9970\u5668 @app.errorhandler() \u9664\u4e86\u53ef\u4ee5\u6ce8\u518c\u9519\u8bef\u4ee3\u7801\u5916\uff0c\u8fd8\u53ef\u4ee5\u6ce8\u518c\u6307\u5b9a\u7684\u5f02\u5e38\u7c7b\u578b\u3002\u8ba9\u6211\u4eec\u6765\u81ea\u5b9a\u4e49\u4e00\u4e2a\u5f02\u5e38\uff1a class InvalidUsage ( Exception ): status_code = 400 def __init__ ( self , message , status_code = 400 ): Exception . __init__ ( self ) self . message = message self . status_code = status_code @app . errorhandler ( InvalidUsage ) def invalid_usage ( error ): response = make_response ( error . message ) response . status_code = error . status_code return response \u6211\u4eec\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f02\u5e38 InvalidUsage \uff0c\u540c\u65f6\u6211\u4eec\u901a\u8fc7\u88c5\u9970\u5668 @app.errorhandler() \u4fee\u9970\u4e86\u51fd\u6570 invalid_usage() \uff0c\u88c5\u9970\u5668\u4e2d\u6ce8\u518c\u4e86\u6211\u4eec\u521a\u5b9a\u4e49\u7684\u5f02\u5e38\u7c7b\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u4e00\u4f46\u9047\u5230 InvalidUsage \u5f02\u5e38\u88ab\u629b\u51fa\uff0c\u8fd9\u4e2a invalid_usage() \u51fd\u6570\u5c31\u4f1a\u88ab\u8c03\u7528\u3002\u5199\u4e2a\u8def\u7531\u8bd5\u4e00\u8bd5\u5427\u3002 @app . route ( '/exception' ) def exception (): raise InvalidUsage ( 'No privilege to access the resource' , status_code = 403 ) URL\u91cd\u5b9a\u5411 \u00b6 \u91cd\u5b9a\u5411 redirect() \u51fd\u6570\u7684\u4f7f\u7528\u5728 \u4e0a\u4e00\u7bc7 logout \u7684\u4f8b\u5b50\u4e2d\u5df2\u6709\u51fa\u73b0\u3002\u4f5c\u7528\u5c31\u662f\u5f53\u5ba2\u6237\u7aef\u6d4f\u89c8\u67d0\u4e2a\u7f51\u5740\u65f6\uff0c\u5c06\u5176\u5bfc\u5411\u5230\u53e6\u4e00\u4e2a\u7f51\u5740\u3002\u5e38\u89c1\u7684\u4f8b\u5b50\uff0c\u6bd4\u5982\u7528\u6237\u5728\u672a\u767b\u5f55\u65f6\u6d4f\u89c8\u67d0\u4e2a\u9700\u6388\u6743\u7684\u9875\u9762\uff0c\u6211\u4eec\u5c06\u5176\u91cd\u5b9a\u5411\u5230\u767b\u5f55\u9875\u8981\u6c42\u5176\u767b\u5f55\u5148\u3002 from flask import session , redirect @app . route ( '/' ) def index (): if 'user' in session : return 'Hello %s !' % session [ 'user' ] else : return redirect ( url_for ( 'login' ), 302 ) redirect() \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u65f6HTTP\u72b6\u6001\u7801\uff0c\u53ef\u53d6\u7684\u503c\u6709301, 302, 303, 305\u548c307\uff0c\u9ed8\u8ba4\u5373302\uff08\u4e3a\u4ec0\u4e48\u6ca1\u6709304\uff1f\u7559\u7ed9\u5927\u5bb6\u53bb\u601d\u8003\uff09\u3002 \u65e5\u5fd7 \u00b6 \u63d0\u5230\u9519\u8bef\u5904\u7406\uff0c\u90a3\u4e00\u5b9a\u8981\u8bf4\u5230\u65e5\u5fd7\u3002Flask\u63d0\u4f9b logger \u5bf9\u8c61\uff0c\u5176\u662f\u4e00\u4e2a\u6807\u51c6\u7684 Python Logger \u7c7b\u3002\u4fee\u6539\u4e0a\u4f8b\u4e2d\u7684 exception() \u51fd\u6570\uff1a @app . route ( '/exception' ) def exception (): app . logger . debug ( 'Enter exception method' ) app . logger . error ( '403 error happened' ) raise InvalidUsage ( 'No privilege to access the resource' , status_code = 403 ) \u6267\u884c\u540e\uff0c\u4f60\u4f1a\u5728\u63a7\u5236\u53f0\u770b\u5230\u65e5\u5fd7\u4fe1\u606f\u3002\u5728debug\u6a21\u5f0f\u4e0b\uff0c\u65e5\u5fd7\u4f1a\u9ed8\u8ba4\u8f93\u51fa\u5230\u6807\u51c6\u9519\u8befstderr\u4e2d\u3002\u4f60\u53ef\u4ee5\u6dfb\u52a0 FileHandler \u6765\u4f7f\u5176\u8f93\u51fa\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d\u53bb\uff0c\u4e5f\u53ef\u4ee5\u4fee\u6539\u65e5\u5fd7\u7684\u8bb0\u5f55\u683c\u5f0f\uff0c\u4e0b\u9762\u6f14\u793a\u4e00\u4e2a\u7b80\u5355\u7684\u65e5\u5fd7\u914d\u7f6e\u4ee3\u7801\uff1a server_log = TimedRotatingFileHandler ( 'server.log' , 'D' ) server_log . setLevel ( logging . DEBUG ) server_log . setFormatter ( logging . Formatter ( ' %(asctime)s %(levelname)s : %(message)s ' )) error_log = TimedRotatingFileHandler ( 'error.log' , 'D' ) error_log . setLevel ( logging . ERROR ) error_log . setFormatter ( logging . Formatter ( ' %(asctime)s : %(message)s [in %(pathname)s : %(lineno)d ]' )) app . logger . addHandler ( server_log ) app . logger . addHandler ( error_log ) \u4e0a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5728\u672c\u5730\u76ee\u5f55\u4e0b\u521b\u5efa\u4e86\u4e24\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u5206\u522b\u662f\u201dserver.log\u201d\u8bb0\u5f55\u6240\u6709\u7ea7\u522b\u65e5\u5fd7\uff1b\u201derror.log\u201d\u53ea\u8bb0\u5f55\u9519\u8bef\u65e5\u5fd7\u3002\u6211\u4eec\u5206\u522b\u7ed9\u4e24\u4e2a\u6587\u4ef6\u4e0d\u540c\u7684\u5185\u5bb9\u683c\u5f0f\u3002\u53e6\u5916\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 TimedRotatingFileHandler \u5e76\u7ed9\u4e86\u53c2\u6570 D \uff0c\u8fd9\u6837\u65e5\u5fd7\u6bcf\u5929\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\uff0c\u5e76\u5c06\u65e7\u6587\u4ef6\u52a0\u65e5\u671f\u540e\u7f00\u6765\u5f52\u6863\u3002 \u4f60\u8fd8\u53ef\u4ee5\u5c06\u9519\u8bef\u4fe1\u606f\u53d1\u9001\u90ae\u4ef6\u3002\u66f4\u8be6\u7ec6\u7684\u65e5\u5fd7\u4f7f\u7528\u53ef\u53c2\u9605 Python logging\u5b98\u65b9\u6587\u6863 \u3002 \u6d88\u606f\u95ea\u73b0 \u00b6 \u201cFlask Message\u201d\u662f\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u529f\u80fd\uff0c\u4e00\u822c\u4e00\u4e2a\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u5728\u9875\u9762\u4e0a\u95ea\u51fa\u4e00\u4e2a\u6d88\u606f\uff0c\u544a\u8bc9\u7528\u6237\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\u7528\u6237\u770b\u5b8c\u540e\uff0c\u8fd9\u4e2a\u6d88\u606f\u5c31\u4e0d\u590d\u5b58\u5728\u4e86\u3002Flask\u63d0\u4f9b\u7684 flash \u529f\u80fd\u5c31\u662f\u4e3a\u4e86\u8fd9\u4e2a\u3002\u6211\u4eec\u8fd8\u662f\u62ff\u7528\u6237\u767b\u5f55\u6765\u4e3e\u4f8b\u5b50\uff1a from flask import render_template , request , session , url_for , redirect , flash @app . route ( '/' ) def index (): if 'user' in session : return render_template ( 'hello.html' , name = session [ 'user' ]) else : return redirect ( url_for ( 'login' ), 302 ) @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : session [ 'user' ] = request . form [ 'user' ] flash ( 'Login successfully!' ) return redirect ( url_for ( 'index' )) else : return ''' ''' \u4e0a\u4f8b\u4e2d\uff0c\u5f53\u7528\u6237\u767b\u5f55\u6210\u529f\u540e\uff0c\u5c31\u7528 flash() \u51fd\u6570\u95ea\u51fa\u4e00\u4e2a\u6d88\u606f\u3002\u8ba9\u6211\u4eec\u627e\u56de \u7b2c\u4e09\u7bc7 \u4e2d\u7684\u6a21\u677f\u4ee3\u7801\uff0c\u5728\u201dlayout.html\u201d\u52a0\u4e0a\u6d88\u606f\u663e\u793a\u7684\u90e8\u5206\uff1a <!doctype html> < title > Hello Sample </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ url_for('static', filename='style.css') }}\" > {% with messages = get_flashed_messages() %} {% if messages %} < ul class = \"flash\" > {% for message in messages %} < li > {{ message }} </ li > {% endfor %} </ ul > {% endif %} {% endwith %} < div class = \"page\" > {% block body %} {% endblock %} </ div > \u4e0a\u4f8b\u4e2d get_flashed_messages() \u51fd\u6570\u5c31\u4f1a\u83b7\u53d6\u6211\u4eec\u5728 login() \u4e2d\u901a\u8fc7 flash() \u95ea\u51fa\u7684\u6d88\u606f\u3002\u4ece\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u95ea\u51fa\u7684\u6d88\u606f\u53ef\u4ee5\u6709\u591a\u4e2a\u3002\u6a21\u677f\u201dhello.html\u201d\u4e0d\u7528\u6539\u3002\u8fd0\u884c\u4e0b\u8bd5\u8bd5\u3002\u767b\u5f55\u6210\u529f\u540e\uff0c\u662f\u4e0d\u662f\u51fa\u73b0\u4e86\u4e00\u6761\u201dLogin successfully\u201d\u6587\u5b57\uff1f\u518d\u5237\u65b0\u4e0b\u9875\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u6587\u5b57\u6d88\u5931\u4e86\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7CSS\u6765\u63a7\u5236\u8fd9\u4e2a\u6d88\u606f\u7684\u663e\u793a\u65b9\u5f0f\u3002 flash() \u65b9\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6d88\u606f\u7c7b\u578b\uff0c\u53ef\u9009\u62e9\u7684\u6709\u201dmessage\u201d, \u201cinfo\u201d, \u201cwarning\u201d, \u201cerror\u201d\u3002\u4f60\u53ef\u4ee5\u5728\u83b7\u53d6\u6d88\u606f\u65f6\uff0c\u540c\u65f6\u83b7\u53d6\u6d88\u606f\u7c7b\u578b\uff0c\u8fd8\u53ef\u4ee5\u8fc7\u6ee4\u7279\u5b9a\u7684\u6d88\u606f\u7c7b\u578b\u3002\u53ea\u9700\u8bbe\u7f6e get_flashed_messages() \u65b9\u6cd5\u7684 with_categories \u548c category_filter \u53c2\u6570\u5373\u53ef\u3002\u6bd4\u5982\uff0cPython\u90e8\u5206\u53ef\u6539\u4e3a\uff1a @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : session [ 'user' ] = request . form [ 'user' ] flash ( 'Login successfully!' , 'message' ) flash ( 'Login as user: %s .' % request . form [ 'user' ], 'info' ) return redirect ( url_for ( 'index' )) ... layout\u6a21\u677f\u90e8\u5206\u53ef\u6539\u4e3a\uff1a ... {% with messages = get_flashed_messages(with_categories=true, category_filter=[\"message\",\"error\"]) %} {% if messages %} < ul class = \"flash\" > {% for category, message in messages %} < li class = \"{{ category }}\" > {{ category }}: {{ message }} </ li > {% endfor %} </ ul > {% endif %} {% endwith %} ... \u8fd0\u884c\u7ed3\u679c\u5927\u5bb6\u5c31\u81ea\u5df1\u8bd5\u8bd5\u5427\u3002","title":"Flask5\u2013\u9519\u8bef\u5904\u7406\u53ca\u6d88\u606f\u95ea\u73b0"},{"location":"05-flask/Flask_todo_2/Flask5%E2%80%93%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%8F%8A%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/#flask","text":"\u672c\u7bc7\u5c06\u8865\u5145\u4e00\u4e9bFlask\u7684\u57fa\u672c\u529f\u80fd\uff0c\u5305\u62ec\u9519\u8bef\u5904\u7406\uff0cURL\u91cd\u5b9a\u5411\uff0c\u65e5\u5fd7\u529f\u80fd\uff0c\u8fd8\u6709\u4e00\u4e2a\u5f88\u6709\u8da3\u7684\u6d88\u606f\u95ea\u73b0\u529f\u80fd\u3002","title":"Flask\u5165\u95e8\u7cfb\u5217(\u4e94)\u2013\u9519\u8bef\u5904\u7406\u53ca\u6d88\u606f\u95ea\u73b0"},{"location":"05-flask/Flask_todo_2/Flask5%E2%80%93%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%8F%8A%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/#_1","text":"\u4f7f\u7528 abort() \u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u9000\u51fa\u8bf7\u6c42\uff0c\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\uff1a from flask import abort @app . route ( '/error' ) def error (): abort ( 404 ) \u4e0a\u4f8b\u4f1a\u663e\u793a\u6d4f\u89c8\u5668\u7684404\u9519\u8bef\u9875\u9762\u3002\u6709\u65f6\u5019\uff0c\u6211\u4eec\u60f3\u8981\u5728\u9047\u5230\u7279\u5b9a\u9519\u8bef\u4ee3\u7801\u65f6\u505a\u4e9b\u4e8b\u60c5\uff0c\u6216\u8005\u91cd\u5199\u9519\u8bef\u9875\u9762\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\uff1a @app . errorhandler ( 404 ) def page_not_found ( error ): return render_template ( '404.html' ), 404 \u6b64\u65f6\uff0c\u5f53\u518d\u6b21\u9047\u5230404\u9519\u8bef\u65f6\uff0c\u5373\u4f1a\u8c03\u7528 page_not_found() \u51fd\u6570\uff0c\u5176\u8fd4\u56de\u201d404.html\u201d\u7684\u6a21\u677f\u9875\u3002\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ee3\u8868\u9519\u8bef\u4ee3\u7801\u3002 \u4e0d\u8fc7\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5e76\u4e0d\u4f1a\u7ecf\u5e38\u4f7f\u7528 abort() \u6765\u9000\u51fa\uff0c\u5e38\u7528\u7684\u9519\u8bef\u5904\u7406\u65b9\u6cd5\u4e00\u822c\u90fd\u662f\u5f02\u5e38\u7684\u629b\u51fa\u6216\u6355\u83b7\u3002\u88c5\u9970\u5668 @app.errorhandler() \u9664\u4e86\u53ef\u4ee5\u6ce8\u518c\u9519\u8bef\u4ee3\u7801\u5916\uff0c\u8fd8\u53ef\u4ee5\u6ce8\u518c\u6307\u5b9a\u7684\u5f02\u5e38\u7c7b\u578b\u3002\u8ba9\u6211\u4eec\u6765\u81ea\u5b9a\u4e49\u4e00\u4e2a\u5f02\u5e38\uff1a class InvalidUsage ( Exception ): status_code = 400 def __init__ ( self , message , status_code = 400 ): Exception . __init__ ( self ) self . message = message self . status_code = status_code @app . errorhandler ( InvalidUsage ) def invalid_usage ( error ): response = make_response ( error . message ) response . status_code = error . status_code return response \u6211\u4eec\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f02\u5e38 InvalidUsage \uff0c\u540c\u65f6\u6211\u4eec\u901a\u8fc7\u88c5\u9970\u5668 @app.errorhandler() \u4fee\u9970\u4e86\u51fd\u6570 invalid_usage() \uff0c\u88c5\u9970\u5668\u4e2d\u6ce8\u518c\u4e86\u6211\u4eec\u521a\u5b9a\u4e49\u7684\u5f02\u5e38\u7c7b\u3002\u8fd9\u4e5f\u5c31\u610f\u5473\u7740\uff0c\u4e00\u4f46\u9047\u5230 InvalidUsage \u5f02\u5e38\u88ab\u629b\u51fa\uff0c\u8fd9\u4e2a invalid_usage() \u51fd\u6570\u5c31\u4f1a\u88ab\u8c03\u7528\u3002\u5199\u4e2a\u8def\u7531\u8bd5\u4e00\u8bd5\u5427\u3002 @app . route ( '/exception' ) def exception (): raise InvalidUsage ( 'No privilege to access the resource' , status_code = 403 )","title":"\u9519\u8bef\u5904\u7406"},{"location":"05-flask/Flask_todo_2/Flask5%E2%80%93%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%8F%8A%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/#url","text":"\u91cd\u5b9a\u5411 redirect() \u51fd\u6570\u7684\u4f7f\u7528\u5728 \u4e0a\u4e00\u7bc7 logout \u7684\u4f8b\u5b50\u4e2d\u5df2\u6709\u51fa\u73b0\u3002\u4f5c\u7528\u5c31\u662f\u5f53\u5ba2\u6237\u7aef\u6d4f\u89c8\u67d0\u4e2a\u7f51\u5740\u65f6\uff0c\u5c06\u5176\u5bfc\u5411\u5230\u53e6\u4e00\u4e2a\u7f51\u5740\u3002\u5e38\u89c1\u7684\u4f8b\u5b50\uff0c\u6bd4\u5982\u7528\u6237\u5728\u672a\u767b\u5f55\u65f6\u6d4f\u89c8\u67d0\u4e2a\u9700\u6388\u6743\u7684\u9875\u9762\uff0c\u6211\u4eec\u5c06\u5176\u91cd\u5b9a\u5411\u5230\u767b\u5f55\u9875\u8981\u6c42\u5176\u767b\u5f55\u5148\u3002 from flask import session , redirect @app . route ( '/' ) def index (): if 'user' in session : return 'Hello %s !' % session [ 'user' ] else : return redirect ( url_for ( 'login' ), 302 ) redirect() \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u65f6HTTP\u72b6\u6001\u7801\uff0c\u53ef\u53d6\u7684\u503c\u6709301, 302, 303, 305\u548c307\uff0c\u9ed8\u8ba4\u5373302\uff08\u4e3a\u4ec0\u4e48\u6ca1\u6709304\uff1f\u7559\u7ed9\u5927\u5bb6\u53bb\u601d\u8003\uff09\u3002","title":"URL\u91cd\u5b9a\u5411"},{"location":"05-flask/Flask_todo_2/Flask5%E2%80%93%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%8F%8A%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/#_2","text":"\u63d0\u5230\u9519\u8bef\u5904\u7406\uff0c\u90a3\u4e00\u5b9a\u8981\u8bf4\u5230\u65e5\u5fd7\u3002Flask\u63d0\u4f9b logger \u5bf9\u8c61\uff0c\u5176\u662f\u4e00\u4e2a\u6807\u51c6\u7684 Python Logger \u7c7b\u3002\u4fee\u6539\u4e0a\u4f8b\u4e2d\u7684 exception() \u51fd\u6570\uff1a @app . route ( '/exception' ) def exception (): app . logger . debug ( 'Enter exception method' ) app . logger . error ( '403 error happened' ) raise InvalidUsage ( 'No privilege to access the resource' , status_code = 403 ) \u6267\u884c\u540e\uff0c\u4f60\u4f1a\u5728\u63a7\u5236\u53f0\u770b\u5230\u65e5\u5fd7\u4fe1\u606f\u3002\u5728debug\u6a21\u5f0f\u4e0b\uff0c\u65e5\u5fd7\u4f1a\u9ed8\u8ba4\u8f93\u51fa\u5230\u6807\u51c6\u9519\u8befstderr\u4e2d\u3002\u4f60\u53ef\u4ee5\u6dfb\u52a0 FileHandler \u6765\u4f7f\u5176\u8f93\u51fa\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d\u53bb\uff0c\u4e5f\u53ef\u4ee5\u4fee\u6539\u65e5\u5fd7\u7684\u8bb0\u5f55\u683c\u5f0f\uff0c\u4e0b\u9762\u6f14\u793a\u4e00\u4e2a\u7b80\u5355\u7684\u65e5\u5fd7\u914d\u7f6e\u4ee3\u7801\uff1a server_log = TimedRotatingFileHandler ( 'server.log' , 'D' ) server_log . setLevel ( logging . DEBUG ) server_log . setFormatter ( logging . Formatter ( ' %(asctime)s %(levelname)s : %(message)s ' )) error_log = TimedRotatingFileHandler ( 'error.log' , 'D' ) error_log . setLevel ( logging . ERROR ) error_log . setFormatter ( logging . Formatter ( ' %(asctime)s : %(message)s [in %(pathname)s : %(lineno)d ]' )) app . logger . addHandler ( server_log ) app . logger . addHandler ( error_log ) \u4e0a\u4f8b\u4e2d\uff0c\u6211\u4eec\u5728\u672c\u5730\u76ee\u5f55\u4e0b\u521b\u5efa\u4e86\u4e24\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff0c\u5206\u522b\u662f\u201dserver.log\u201d\u8bb0\u5f55\u6240\u6709\u7ea7\u522b\u65e5\u5fd7\uff1b\u201derror.log\u201d\u53ea\u8bb0\u5f55\u9519\u8bef\u65e5\u5fd7\u3002\u6211\u4eec\u5206\u522b\u7ed9\u4e24\u4e2a\u6587\u4ef6\u4e0d\u540c\u7684\u5185\u5bb9\u683c\u5f0f\u3002\u53e6\u5916\uff0c\u6211\u4eec\u4f7f\u7528\u4e86 TimedRotatingFileHandler \u5e76\u7ed9\u4e86\u53c2\u6570 D \uff0c\u8fd9\u6837\u65e5\u5fd7\u6bcf\u5929\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\uff0c\u5e76\u5c06\u65e7\u6587\u4ef6\u52a0\u65e5\u671f\u540e\u7f00\u6765\u5f52\u6863\u3002 \u4f60\u8fd8\u53ef\u4ee5\u5c06\u9519\u8bef\u4fe1\u606f\u53d1\u9001\u90ae\u4ef6\u3002\u66f4\u8be6\u7ec6\u7684\u65e5\u5fd7\u4f7f\u7528\u53ef\u53c2\u9605 Python logging\u5b98\u65b9\u6587\u6863 \u3002","title":"\u65e5\u5fd7"},{"location":"05-flask/Flask_todo_2/Flask5%E2%80%93%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86%E5%8F%8A%E6%B6%88%E6%81%AF%E9%97%AA%E7%8E%B0/#_3","text":"\u201cFlask Message\u201d\u662f\u4e00\u4e2a\u5f88\u6709\u610f\u601d\u7684\u529f\u80fd\uff0c\u4e00\u822c\u4e00\u4e2a\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u90fd\u5e0c\u671b\u5728\u9875\u9762\u4e0a\u95ea\u51fa\u4e00\u4e2a\u6d88\u606f\uff0c\u544a\u8bc9\u7528\u6237\u64cd\u4f5c\u7684\u7ed3\u679c\u3002\u7528\u6237\u770b\u5b8c\u540e\uff0c\u8fd9\u4e2a\u6d88\u606f\u5c31\u4e0d\u590d\u5b58\u5728\u4e86\u3002Flask\u63d0\u4f9b\u7684 flash \u529f\u80fd\u5c31\u662f\u4e3a\u4e86\u8fd9\u4e2a\u3002\u6211\u4eec\u8fd8\u662f\u62ff\u7528\u6237\u767b\u5f55\u6765\u4e3e\u4f8b\u5b50\uff1a from flask import render_template , request , session , url_for , redirect , flash @app . route ( '/' ) def index (): if 'user' in session : return render_template ( 'hello.html' , name = session [ 'user' ]) else : return redirect ( url_for ( 'login' ), 302 ) @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : session [ 'user' ] = request . form [ 'user' ] flash ( 'Login successfully!' ) return redirect ( url_for ( 'index' )) else : return ''' ''' \u4e0a\u4f8b\u4e2d\uff0c\u5f53\u7528\u6237\u767b\u5f55\u6210\u529f\u540e\uff0c\u5c31\u7528 flash() \u51fd\u6570\u95ea\u51fa\u4e00\u4e2a\u6d88\u606f\u3002\u8ba9\u6211\u4eec\u627e\u56de \u7b2c\u4e09\u7bc7 \u4e2d\u7684\u6a21\u677f\u4ee3\u7801\uff0c\u5728\u201dlayout.html\u201d\u52a0\u4e0a\u6d88\u606f\u663e\u793a\u7684\u90e8\u5206\uff1a <!doctype html> < title > Hello Sample </ title > < link rel = \"stylesheet\" type = \"text/css\" href = \"{{ url_for('static', filename='style.css') }}\" > {% with messages = get_flashed_messages() %} {% if messages %} < ul class = \"flash\" > {% for message in messages %} < li > {{ message }} </ li > {% endfor %} </ ul > {% endif %} {% endwith %} < div class = \"page\" > {% block body %} {% endblock %} </ div > \u4e0a\u4f8b\u4e2d get_flashed_messages() \u51fd\u6570\u5c31\u4f1a\u83b7\u53d6\u6211\u4eec\u5728 login() \u4e2d\u901a\u8fc7 flash() \u95ea\u51fa\u7684\u6d88\u606f\u3002\u4ece\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\uff0c\u95ea\u51fa\u7684\u6d88\u606f\u53ef\u4ee5\u6709\u591a\u4e2a\u3002\u6a21\u677f\u201dhello.html\u201d\u4e0d\u7528\u6539\u3002\u8fd0\u884c\u4e0b\u8bd5\u8bd5\u3002\u767b\u5f55\u6210\u529f\u540e\uff0c\u662f\u4e0d\u662f\u51fa\u73b0\u4e86\u4e00\u6761\u201dLogin successfully\u201d\u6587\u5b57\uff1f\u518d\u5237\u65b0\u4e0b\u9875\u9762\uff0c\u4f60\u4f1a\u53d1\u73b0\u6587\u5b57\u6d88\u5931\u4e86\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7CSS\u6765\u63a7\u5236\u8fd9\u4e2a\u6d88\u606f\u7684\u663e\u793a\u65b9\u5f0f\u3002 flash() \u65b9\u6cd5\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u6d88\u606f\u7c7b\u578b\uff0c\u53ef\u9009\u62e9\u7684\u6709\u201dmessage\u201d, \u201cinfo\u201d, \u201cwarning\u201d, \u201cerror\u201d\u3002\u4f60\u53ef\u4ee5\u5728\u83b7\u53d6\u6d88\u606f\u65f6\uff0c\u540c\u65f6\u83b7\u53d6\u6d88\u606f\u7c7b\u578b\uff0c\u8fd8\u53ef\u4ee5\u8fc7\u6ee4\u7279\u5b9a\u7684\u6d88\u606f\u7c7b\u578b\u3002\u53ea\u9700\u8bbe\u7f6e get_flashed_messages() \u65b9\u6cd5\u7684 with_categories \u548c category_filter \u53c2\u6570\u5373\u53ef\u3002\u6bd4\u5982\uff0cPython\u90e8\u5206\u53ef\u6539\u4e3a\uff1a @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : session [ 'user' ] = request . form [ 'user' ] flash ( 'Login successfully!' , 'message' ) flash ( 'Login as user: %s .' % request . form [ 'user' ], 'info' ) return redirect ( url_for ( 'index' )) ... layout\u6a21\u677f\u90e8\u5206\u53ef\u6539\u4e3a\uff1a ... {% with messages = get_flashed_messages(with_categories=true, category_filter=[\"message\",\"error\"]) %} {% if messages %} < ul class = \"flash\" > {% for category, message in messages %} < li class = \"{{ category }}\" > {{ category }}: {{ message }} </ li > {% endfor %} </ ul > {% endif %} {% endwith %} ... \u8fd0\u884c\u7ed3\u679c\u5927\u5bb6\u5c31\u81ea\u5df1\u8bd5\u8bd5\u5427\u3002","title":"\u6d88\u606f\u95ea\u73b0"},{"location":"05-flask/Flask_todo_2/Flask6-%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9B%86%E6%88%90/","text":"Flask\u5165\u95e8\u7cfb\u5217(\u516d)\u2013\u6570\u636e\u5e93\u96c6\u6210 \u00b6 \u8f6c\u773c\uff0c\u6211\u4eec\u8981\u8fdb\u5165\u672c\u7cfb\u5217\u7684\u6700\u540e\u4e00\u7bc7\u4e86\u3002\u4e00\u4e2a\u57fa\u672c\u7684Web\u5e94\u7528\u529f\u80fd\u5176\u5b9e\u5df2\u7ecf\u8bb2\u5b8c\u4e86\uff0c\u73b0\u5728\u5c31\u8ba9\u6211\u4eec\u5f15\u5165\u6570\u636e\u5e93\u3002\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c31\u4f7f\u7528SQLite3\u4f5c\u4e3a\u4f8b\u5b50\u3002 \u96c6\u6210\u6570\u636e\u5e93 \u00b6 \u65e2\u7136\u524d\u51e0\u7bc7\u90fd\u7528\u7528\u6237\u767b\u5f55\u4f5c\u4e3a\u4f8b\u5b50\uff0c\u6211\u4eec\u8fd9\u7bc7\u5c31\u7ee7\u7eed\u8bb2\u767b\u5f55\uff0c\u53ea\u662f\u767b\u5f55\u7684\u4fe1\u606f\u4f1a\u7531\u6570\u636e\u5e93\u6765\u9a8c\u8bc1\u3002\u8ba9\u6211\u4eec\u5148\u51c6\u5907SQLite\u73af\u5883\u5427\u3002 \u521d\u59cb\u5316\u6570\u636e\u5e93 \u00b6 \u600e\u4e48\u5b89\u88c5SQLite\u8fd9\u91cc\u5c31\u4e0d\u8bf4\u4e86\u3002\u6211\u4eec\u5148\u5199\u4e2a\u6570\u636e\u5e93\u8868\u7684\u521d\u59cb\u5316SQL\uff0c\u4fdd\u5b58\u5728\u201dinit.sql\u201d\u6587\u4ef6\u4e2d\uff1a DROP TABLE IF EXISTS users ; CREATE TABLE users ( id INTEGER PRIMARY KEY AUTOINCREMENT , name TEXT NOT NULL , password TEXT NOT NULL ); INSERT INTO users ( name , password ) VALUES ( 'visit' , '111' ); INSERT INTO users ( name , password ) VALUES ( 'admin' , '123' ); \u8fd0\u884csqlite3\u547d\u4ee4\uff0c\u521d\u59cb\u5316\u6570\u636e\u5e93\u3002\u6211\u4eec\u7684\u6570\u636e\u5e93\u6587\u4ef6\u5c31\u653e\u5728\u201ddb\u201d\u5b50\u76ee\u5f55\u4e0b\u7684\u201duser.db\u201d\u6587\u4ef6\u4e2d\u3002 $ sqlite3 db/user.db < init.sql \u914d\u7f6e\u8fde\u63a5\u53c2\u6570 \u00b6 \u521b\u5efa\u914d\u7f6e\u6587\u4ef6\u201dconfig.py\u201d\uff0c\u4fdd\u5b58\u914d\u7f6e\u4fe1\u606f\uff1a #coding:utf8 DATABASE = 'db/user.db' # \u6570\u636e\u5e93\u6587\u4ef6\u4f4d\u7f6e DEBUG = True # \u8c03\u8bd5\u6a21\u5f0f SECRET_KEY = 'secret_key_1' # \u4f1a\u8bdd\u5bc6\u94a5 \u5728\u521b\u5efaFlask\u5e94\u7528\u65f6\uff0c\u5bfc\u5165\u914d\u7f6e\u4fe1\u606f\uff1a from flask import Flask import config app = Flask ( __name__ ) app . config . from_object ( 'config' ) \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u7528 app.config.from_envvar('FLASK_SETTINGS', silent=True) \u65b9\u6cd5\u6765\u5bfc\u5165\u914d\u7f6e\u4fe1\u606f\uff0c\u6b64\u65f6\u7a0b\u5e8f\u4f1a\u8bfb\u53d6\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d FLASK_SETTINGS \u7684\u503c\uff0c\u6765\u83b7\u53d6\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u5e76\u52a0\u8f7d\u6b64\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u8be5\u8bed\u53e5\u8fd4\u56de False \u3002\u53c2\u6570 silent=True \u8868\u793a\u5ffd\u7565\u9519\u8bef\u3002 \u5efa\u7acb\u548c\u91ca\u653e\u6570\u636e\u5e93\u8fde\u63a5 \u00b6 \u8fd9\u91cc\u8981\u7528\u5230\u8bf7\u6c42\u7684\u4e0a\u4e0b\u6587\u88c5\u9970\u5668\uff0c\u6211\u4eec\u4f1a\u5728 \u8fdb\u9636\u7cfb\u5217\u7684\u7b2c\u4e00\u7bc7 \u91cc\u8be6\u7ec6\u4ecb\u7ecd\u4e0a\u4e0b\u6587\u3002 @app . before_request def before_request (): g . db = sqlite3 . connect ( app . config [ 'DATABASE' ]) @app . teardown_request def teardown_request ( exception ): db = getattr ( g , 'db' , None ) if db is not None : db . close () \u6211\u4eec\u5728 before_request() \u91cc\u5efa\u7acb\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u5b83\u4f1a\u5728\u6bcf\u6b21\u8bf7\u6c42\u5f00\u59cb\u65f6\u88ab\u8c03\u7528\uff1b\u5e76\u5728 teardown_request() \u5173\u95ed\u5b83\uff0c\u5b83\u4f1a\u5728\u6bcf\u6b21\u8bf7\u6c42\u5173\u95ed\u524d\u88ab\u8c03\u7528\u3002 \u67e5\u8be2\u6570\u636e\u5e93 \u00b6 \u8ba9\u6211\u4eec\u53d6\u56de \u4e0a\u4e00\u7bc7 \u767b\u5f55\u90e8\u5206\u7684\u4ee3\u7801\uff0c index() \u548c logout() \u8bf7\u6c42\u4e0d\u7528\u4fee\u6539\uff0c\u5728 login() \u8bf7\u6c42\u4e2d\uff0c\u6211\u4eec\u4f1a\u67e5\u8be2\u6570\u636e\u5e93\uff0c\u9a8c\u8bc1\u5ba2\u6237\u7aef\u8f93\u5165\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u5b58\u5728\uff1a @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : name = request . form [ 'user' ] passwd = request . form [ 'passwd' ] cursor = g . db . execute ( 'select * from users where name=? and password=?' , [ name , passwd ]) if cursor . fetchone () is not None : session [ 'user' ] = name flash ( 'Login successfully!' ) return redirect ( url_for ( 'index' )) else : flash ( 'No such user!' , 'error' ) return redirect ( url_for ( 'login' )) else : return render_template ( 'login.html' ) \u6a21\u677f\u4e2d\u52a0\u4e0a\u201dlogin.html\u201d\u6587\u4ef6 {% extends \"layout.html\" %} {% block body %} < form name = \"login\" action = \"/login\" method = \"post\" > Username: < input type = \"text\" name = \"user\" />< br > Password: < input type = \"password\" name = \"passwd\" />< br > < input type = \"submit\" value = \"Submit\" /> </ form > {% endblock %} \u7ec8\u4e8e\u4e00\u4e2a\u771f\u6b63\u7684\u767b\u5f55\u9a8c\u8bc1\u5199\u5b8c\u4e86\uff08\u524d\u51e0\u7bc7\u90fd\u662f\u5047\u7684\uff09\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u767b\u5f55\u4e0b\u5427\u3002\u56e0\u4e3a\u6bd4\u8f83\u61d2\uff0c\u5c31\u4e0d\u5199CSS\u7f8e\u5316\u4e86\uff0c\u53d7\u4e0d\u4e86\u8fd9\u7c97\u7cd9\u754c\u9762\u7684\u670b\u53cb\u4eec\u5c31\u81ea\u5df1\u8c03\u5427\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0cFlask\u7684\u57fa\u7840\u529f\u80fd\u5df2\u7ecf\u4ecb\u7ecd\u5b8c\u4e86\uff0c\u662f\u5426\u5f88\u60f3\u52a8\u624b\u5199\u4e2a\u5e94\u7528\u5566\uff1f\u5176\u5b9eFlask\u8fd8\u6709\u66f4\u5f3a\u5927\u7684\u9ad8\u7ea7\u529f\u80fd\uff0c\u4e4b\u540e\u4f1a\u5728\u8fdb\u9636\u7cfb\u5217\u91cc\u4ecb\u7ecd\u3002","title":"Flask6-\u6570\u636e\u5e93\u96c6\u6210"},{"location":"05-flask/Flask_todo_2/Flask6-%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9B%86%E6%88%90/#flask","text":"\u8f6c\u773c\uff0c\u6211\u4eec\u8981\u8fdb\u5165\u672c\u7cfb\u5217\u7684\u6700\u540e\u4e00\u7bc7\u4e86\u3002\u4e00\u4e2a\u57fa\u672c\u7684Web\u5e94\u7528\u529f\u80fd\u5176\u5b9e\u5df2\u7ecf\u8bb2\u5b8c\u4e86\uff0c\u73b0\u5728\u5c31\u8ba9\u6211\u4eec\u5f15\u5165\u6570\u636e\u5e93\u3002\u7b80\u5355\u8d77\u89c1\uff0c\u6211\u4eec\u5c31\u4f7f\u7528SQLite3\u4f5c\u4e3a\u4f8b\u5b50\u3002","title":"Flask\u5165\u95e8\u7cfb\u5217(\u516d)\u2013\u6570\u636e\u5e93\u96c6\u6210"},{"location":"05-flask/Flask_todo_2/Flask6-%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9B%86%E6%88%90/#_1","text":"\u65e2\u7136\u524d\u51e0\u7bc7\u90fd\u7528\u7528\u6237\u767b\u5f55\u4f5c\u4e3a\u4f8b\u5b50\uff0c\u6211\u4eec\u8fd9\u7bc7\u5c31\u7ee7\u7eed\u8bb2\u767b\u5f55\uff0c\u53ea\u662f\u767b\u5f55\u7684\u4fe1\u606f\u4f1a\u7531\u6570\u636e\u5e93\u6765\u9a8c\u8bc1\u3002\u8ba9\u6211\u4eec\u5148\u51c6\u5907SQLite\u73af\u5883\u5427\u3002","title":"\u96c6\u6210\u6570\u636e\u5e93"},{"location":"05-flask/Flask_todo_2/Flask6-%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9B%86%E6%88%90/#_2","text":"\u600e\u4e48\u5b89\u88c5SQLite\u8fd9\u91cc\u5c31\u4e0d\u8bf4\u4e86\u3002\u6211\u4eec\u5148\u5199\u4e2a\u6570\u636e\u5e93\u8868\u7684\u521d\u59cb\u5316SQL\uff0c\u4fdd\u5b58\u5728\u201dinit.sql\u201d\u6587\u4ef6\u4e2d\uff1a DROP TABLE IF EXISTS users ; CREATE TABLE users ( id INTEGER PRIMARY KEY AUTOINCREMENT , name TEXT NOT NULL , password TEXT NOT NULL ); INSERT INTO users ( name , password ) VALUES ( 'visit' , '111' ); INSERT INTO users ( name , password ) VALUES ( 'admin' , '123' ); \u8fd0\u884csqlite3\u547d\u4ee4\uff0c\u521d\u59cb\u5316\u6570\u636e\u5e93\u3002\u6211\u4eec\u7684\u6570\u636e\u5e93\u6587\u4ef6\u5c31\u653e\u5728\u201ddb\u201d\u5b50\u76ee\u5f55\u4e0b\u7684\u201duser.db\u201d\u6587\u4ef6\u4e2d\u3002 $ sqlite3 db/user.db < init.sql","title":"\u521d\u59cb\u5316\u6570\u636e\u5e93"},{"location":"05-flask/Flask_todo_2/Flask6-%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9B%86%E6%88%90/#_3","text":"\u521b\u5efa\u914d\u7f6e\u6587\u4ef6\u201dconfig.py\u201d\uff0c\u4fdd\u5b58\u914d\u7f6e\u4fe1\u606f\uff1a #coding:utf8 DATABASE = 'db/user.db' # \u6570\u636e\u5e93\u6587\u4ef6\u4f4d\u7f6e DEBUG = True # \u8c03\u8bd5\u6a21\u5f0f SECRET_KEY = 'secret_key_1' # \u4f1a\u8bdd\u5bc6\u94a5 \u5728\u521b\u5efaFlask\u5e94\u7528\u65f6\uff0c\u5bfc\u5165\u914d\u7f6e\u4fe1\u606f\uff1a from flask import Flask import config app = Flask ( __name__ ) app . config . from_object ( 'config' ) \u8fd9\u91cc\u4e5f\u53ef\u4ee5\u7528 app.config.from_envvar('FLASK_SETTINGS', silent=True) \u65b9\u6cd5\u6765\u5bfc\u5165\u914d\u7f6e\u4fe1\u606f\uff0c\u6b64\u65f6\u7a0b\u5e8f\u4f1a\u8bfb\u53d6\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u4e2d FLASK_SETTINGS \u7684\u503c\uff0c\u6765\u83b7\u53d6\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff0c\u5e76\u52a0\u8f7d\u6b64\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u8be5\u8bed\u53e5\u8fd4\u56de False \u3002\u53c2\u6570 silent=True \u8868\u793a\u5ffd\u7565\u9519\u8bef\u3002","title":"\u914d\u7f6e\u8fde\u63a5\u53c2\u6570"},{"location":"05-flask/Flask_todo_2/Flask6-%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9B%86%E6%88%90/#_4","text":"\u8fd9\u91cc\u8981\u7528\u5230\u8bf7\u6c42\u7684\u4e0a\u4e0b\u6587\u88c5\u9970\u5668\uff0c\u6211\u4eec\u4f1a\u5728 \u8fdb\u9636\u7cfb\u5217\u7684\u7b2c\u4e00\u7bc7 \u91cc\u8be6\u7ec6\u4ecb\u7ecd\u4e0a\u4e0b\u6587\u3002 @app . before_request def before_request (): g . db = sqlite3 . connect ( app . config [ 'DATABASE' ]) @app . teardown_request def teardown_request ( exception ): db = getattr ( g , 'db' , None ) if db is not None : db . close () \u6211\u4eec\u5728 before_request() \u91cc\u5efa\u7acb\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u5b83\u4f1a\u5728\u6bcf\u6b21\u8bf7\u6c42\u5f00\u59cb\u65f6\u88ab\u8c03\u7528\uff1b\u5e76\u5728 teardown_request() \u5173\u95ed\u5b83\uff0c\u5b83\u4f1a\u5728\u6bcf\u6b21\u8bf7\u6c42\u5173\u95ed\u524d\u88ab\u8c03\u7528\u3002","title":"\u5efa\u7acb\u548c\u91ca\u653e\u6570\u636e\u5e93\u8fde\u63a5"},{"location":"05-flask/Flask_todo_2/Flask6-%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9B%86%E6%88%90/#_5","text":"\u8ba9\u6211\u4eec\u53d6\u56de \u4e0a\u4e00\u7bc7 \u767b\u5f55\u90e8\u5206\u7684\u4ee3\u7801\uff0c index() \u548c logout() \u8bf7\u6c42\u4e0d\u7528\u4fee\u6539\uff0c\u5728 login() \u8bf7\u6c42\u4e2d\uff0c\u6211\u4eec\u4f1a\u67e5\u8be2\u6570\u636e\u5e93\uff0c\u9a8c\u8bc1\u5ba2\u6237\u7aef\u8f93\u5165\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u5b58\u5728\uff1a @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): if request . method == 'POST' : name = request . form [ 'user' ] passwd = request . form [ 'passwd' ] cursor = g . db . execute ( 'select * from users where name=? and password=?' , [ name , passwd ]) if cursor . fetchone () is not None : session [ 'user' ] = name flash ( 'Login successfully!' ) return redirect ( url_for ( 'index' )) else : flash ( 'No such user!' , 'error' ) return redirect ( url_for ( 'login' )) else : return render_template ( 'login.html' ) \u6a21\u677f\u4e2d\u52a0\u4e0a\u201dlogin.html\u201d\u6587\u4ef6 {% extends \"layout.html\" %} {% block body %} < form name = \"login\" action = \"/login\" method = \"post\" > Username: < input type = \"text\" name = \"user\" />< br > Password: < input type = \"password\" name = \"passwd\" />< br > < input type = \"submit\" value = \"Submit\" /> </ form > {% endblock %} \u7ec8\u4e8e\u4e00\u4e2a\u771f\u6b63\u7684\u767b\u5f55\u9a8c\u8bc1\u5199\u5b8c\u4e86\uff08\u524d\u51e0\u7bc7\u90fd\u662f\u5047\u7684\uff09\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u767b\u5f55\u4e0b\u5427\u3002\u56e0\u4e3a\u6bd4\u8f83\u61d2\uff0c\u5c31\u4e0d\u5199CSS\u7f8e\u5316\u4e86\uff0c\u53d7\u4e0d\u4e86\u8fd9\u7c97\u7cd9\u754c\u9762\u7684\u670b\u53cb\u4eec\u5c31\u81ea\u5df1\u8c03\u5427\u3002 \u5230\u76ee\u524d\u4e3a\u6b62\uff0cFlask\u7684\u57fa\u7840\u529f\u80fd\u5df2\u7ecf\u4ecb\u7ecd\u5b8c\u4e86\uff0c\u662f\u5426\u5f88\u60f3\u52a8\u624b\u5199\u4e2a\u5e94\u7528\u5566\uff1f\u5176\u5b9eFlask\u8fd8\u6709\u66f4\u5f3a\u5927\u7684\u9ad8\u7ea7\u529f\u80fd\uff0c\u4e4b\u540e\u4f1a\u5728\u8fdb\u9636\u7cfb\u5217\u91cc\u4ecb\u7ecd\u3002","title":"\u67e5\u8be2\u6570\u636e\u5e93"},{"location":"05-flask/netease/readme/","text":"Flask \u5165\u95e8 \u00b6 https://study.163.com/course/courseMain.htm?courseId=1004091002 \u77e5\u4e4e\u9879\u76ee\u9700\u6c42\uff1a\u53ef\u4ee5\u7528\u6237\u6ce8\u518c\u3001\u7528\u6237\u767b\u5f55\u3001\u641c\u7d22\u65e5\u5fd7\u3001\u53d1\u5e03\u65e5\u5fd7\uff08\u589e\u5220\u6539\u67e5\uff09\u3001\u589e\u52a0\u8bc4\u8bba \u4e00\u5171 41\u8bfe\u65f6 \u7b2c0\u7ae0 \u5b89\u88c5\u73af\u5883 \u00b6 \u5b89\u88c5 python \u00b6 py2.7(mac\u81ea\u5e26python2.7\uff09\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u5165 python\uff1bWindows \u9700\u8981\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff08python pip easy-install \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff09\u8fd9\u91cc\u9700\u8981\u8bbe\u7f6e python \u7684\u73af\u5883\u53d8\u91cf\u548c pip \u7684\u73af\u5883\u53d8\u91cf \u6253\u5f00\u8ba1\u7b97\u673a-\u5c5e\u6027-\u9ad8\u7ea7\u5c5e\u6027-\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf-\u589e\u52a0\u73af\u5883\u53d8\u91cf \u540d\u79f0\u662f PATH \u5c5e\u6027\u662f\u6587\u4ef6\u8def\u5f84 C:/Python27;C:/Python27/Scripts \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u540e\uff0c\u5728cmd\u4e2d\u53ef\u4ee5\u770b\u5230python\u548cpip\u7684\u7248\u672c\u53f7 \u5b89\u88c5\u865a\u62df\u73af\u5883 virtualenv \u00b6 \u6240\u4ee5\u9700\u8981python\u865a\u62df\u73af\u5883\u3002\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u4e0d\u540c\u7684falsk\u7684\u7248\u672c\u548c\u5e93\uff0c\u4e24\u4e2a\u7248\u672c\u4f1a\u5171\u5b58\u3002\u865a\u62df\u73af\u5883\u4f1a\u907f\u514d\u7248\u672c\u51b2\u7a81\u3002 \u5b89\u88c5\u865a\u62df\u73af\u5883 sudo pip install virtualenv mkdir Test cd test virtualenv flask-env Windows\u6fc0\u6d3b\u865a\u62df\u73af\u5883 cd falsk-dev/scripts activate deactivate # \u9000\u51fa Mac \u6fc0\u6d3b\u865a\u62df\u73af\u5883 source ~/Virtualenv/flask-env/bin/activate # source path/bin/activate deactivate # \u9000\u51fa \u5b89\u88c5flask \u00b6 falsk \u7248\u672c\u517c\u5bb9\u95ee\u9898\uff1a\u6559\u7a0b\u662f0.12.2 \u73b0\u5728\u5b89\u88c5\u7684\u662f 1.1.1 \u7248\u672c\uff1b\u53ef\u80fd\u90e8\u5206\u4ee3\u7801\u4e0d\u517c\u5bb9\u3002\u8fd9\u91cc\u9700\u8981\u53c2\u8003\u5b98\u7f51\u6700\u65b0\u7248\u672c\u7684\u6559\u7a0b\uff0c\u4e0d\u80fd\u7248\u672c\u53ef\u80fd\u9020\u6210\u540e\u9762\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\u7b49\u95ee\u9898 source ~/Virtualenv/flask-env/bin/activate pip install flask python import flask print flask.__version__ # 1.1.1 \u73b0\u5728\u865a\u62df\u73af\u5883\u548cflask\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6bd5\uff08windows\u73af\u5883\u4e0b\uff09 \u7b2c\u4e00\u7ae0 URLs \u548c\u89c6\u56fe \u00b6 \u7b2c\u4e00\u8bfe hello flask \u00b6 \u7b2c\u4e00\u6b21\u521b\u5efa\u9879\u76ee\u7684\u65f6\u5019\uff0c\u9700\u8981\u6dfb\u52a0\u865a\u62df\u73af\u5883\uff08\u5728pycharm\uff09\u9009\u62e9\u865a\u62df\u73af\u5883\u4e2d\u7684python\u6267\u884c\u6587\u4ef6 flask \u4ee3\u7801\u57fa\u672c\u7ed3\u6784\u89e3\u91ca #coding=utf-8 # python 2\u9700\u8981\u8bbe\u7f6e\u8bed\u8a00utf-8 # \u4eceFlask\u6846\u67b6\u4e2d\u5bfc\u5165\u8fd9\u4e2a\u7c7b from flask import Flask # \u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u9700\u8981\u4f20\u53c2 app = Flask ( __name__ ) # \u88c5\u9970\u5668 @\u5f00\u5934\uff0c\u4f4d\u4e8e\u51fd\u6570\u7684\u4e0a\u9762 # \u662fURL\u89c6\u56fe\u51fd\u6570\u7684\u6620\u5c04 # 127.0.0.1:5000 \u4f1a\u6620\u5c04\u5230\u4e0b\u9762\u7684\u51fd\u6570 @app . route ( '/' ) def hello_world (): return 'Hello Michael An!' @app . route ( '/index' ) def index_page (): return 'Hello Index Page' # \u5165\u53e3\u7a0b\u5e8f\uff1a\u542f\u52a8\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u63a5\u53d7\u7528\u6237\u7684\u8bf7\u6c42\uff08eventlistener\uff09 if __name__ == '__main__' : app . run () \u7b2c\u4e8c\u8bfe debug \u00b6 app . run ( debug = True ) \u53ef\u4ee5\u6253\u5f00\u8c03\u8bd5\u6a21\u5f0f \u53ef\u4ee5\u9879\u76ee\u70ed\u52a0\u8f7d\uff08\u4fee\u6539python\u6587\u4ef6\u624d\u884c\uff0cJS\u6587\u4ef6\u4fee\u6539\u540e\u4e0d\u4f1a\u70ed\u52a0\u8f7d\uff09\uff1b\u53ef\u4ee5\u51fa\u73b0\u95ee\u9898\u540e\u5728\u9875\u9762\u4e2d\u770b\u5230\u62a5\u9519\u8be6\u60c5 \u5916\u90e8\u914d\u7f6e\u6587\u4ef6 \u00b6 \u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 config.py\uff0c\u52a0\u5165\u5927\u5199\u7684\u53c2\u6570 DEBUG = True # SECRET_KEY \u5728\u4e3b\u6587\u4ef6\u4e2d\u5f15\u5165\u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u7528\u914d\u7f6e main.py import config app . config . from_object ( config ) \u7b2c3\u8bfe URL \u4f20\u53c2 \u00b6 \u53ef\u4ee5\u5728URL\u4e2d\u4f20\u53c2 @app . route ( '/page/<number>' ) def change_page ( number ): return 'change page to %s ' % number \u53c2\u6570\u9700\u8981\u653e\u5728\u5c16\u62ec\u53f7\u4e2d\uff0c\u89c6\u56fe\u51fd\u6570\u4e2d\u53c2\u6570\u548c\u539f\u59cb\u53c2\u6570\u76f8\u540c\u3002 \u7b2c4\u8bfe URL\u53cd\u8f6c \u00b6 \u53ef\u4ee5\u5728\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\u4e2d\uff0c\u4f20\u5165\u5176\u4ed6\u89c6\u56fe\u51fd\u6570\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684URL \u4f7f\u7528 url_for \u5185\u7f6e\u51fd\u6570 \u7528\u9014\uff1a\u9875\u9762\u91cd\u5b9a\u5411\uff1bHTML\u4e2dA\u94fe\u63a5 from flask import Flask , url_for import config app = Flask ( __name__ ) app . config . from_object ( config ) @app . route ( '/' ) def hello_world (): print url_for ( 'handle_index' ) print url_for ( 'change_page' , number = 20 ) return 'Hello World!' @app . route ( '/index' ) def handle_index (): return 'index page' @app . route ( '/page/<number>' ) def change_page ( number ): return 'this is %s ' % number if __name__ == '__main__' : app . run () \u6ce8\u610f\uff1a\u8fd0\u884cflask\u540e\uff0c\u9700\u8981\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684\u5173\u95ed\u6309\u94ae\uff0c\u624d\u80fd\u5173\u95ed\u5f53\u524d\u7684\u672c\u5730\u670d\u52a1\u5668\u3002\u5426\u5219\u5173\u95ed\u8f6f\u4ef6\u540e\uff0c\u672c\u5730\u670d\u52a1\u5668\u8fd8\u5728\u8fd0\u884c\uff0c\u53ef\u80fd\u5f71\u54cd\u5176\u4ed6\u7684\u672c\u5730\u670d\u52a1\u5668\u3002 \u7b2c5\u8bfe \u9875\u9762\u91cd\u5b9a\u5411\u548c\u8df3\u8f6c \u00b6 \u5b9e\u9645\u4f7f\u7528:\u7528\u6237\u672a\u767b\u5f55\u65f6\uff0c\u8df3\u8f6c\uff08\u91cd\u5b9a\u5411\uff09\u5230\u767b\u5f55\u754c\u9762 #coding=utf-8 from flask import Flask , redirect , url_for app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return redirect ( url_for ( 'login' )) # return redirect('/login/') # return 'Hello World!' # \u5982\u679c\u662f\u56fa\u5b9a\u7684URL\uff0c\u90a3\u4e48\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u8def\u5f84\u66f4\u6539\u540e\uff0c\u91cd\u5b9a\u5411\u4f1a\u9519\u8bef # \u4f7f\u7528url_for\u52a8\u6001\u83b7\u53d6\u89c6\u56fe\u51fd\u6570\u7684\u8df3\u8f6c\u4f4d\u7f6e @app . route ( '/login/' ) def login (): return 'This is login page, please login' # we can use cookie to check user login state in the future @app . route ( '/question/<id>' ) def question ( id ): if id == '1' : return 'Your question is 1, This is question page' else : return redirect ( url_for ( 'login' )) if __name__ == '__main__' : app . run ( debug = True ) \u7b2c\u4e8c\u7ae0 Jinja2\u6a21\u677f \u00b6 \u7b2c\u4e00\u8bfe \u6a21\u677f\u6e32\u67d3\u548c\u4f20\u53c2 \u00b6 \u6a21\u677f\u653e\u5728 templates \u8def\u5f84\u4e0b \u5bfc\u5165\u6a21\u677f\uff1arender_template \u51fd\u6570\uff1b\u6ce8\u610f\uff1a\u4e0d\u9700\u8981\u5199templates\u6587\u4ef6\u5939\u7684\u8def\u5f84\uff0c\u76f4\u63a5\u5199\u5165\u53e3\u6587\u4ef6 \u6a21\u677f\u4f20\u53c2\uff1arender_template \u51fd\u6570\u4e2d\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8fdb\u884c\u4f20\u53c2\uff1b\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u53d8\u91cf\u9700\u8981 {{ \u53c2\u6570 }} \u7b2c\u4e8c\u8bfe \u6a21\u677f\u4e2d\u8bbf\u95ee\u5c5e\u6027\u548c\u5b57\u5178 \u00b6 \u8bbf\u95ee\u6a21\u578b\u4e2d\u7684\u5c5e\u6027\u6216\u8005\u5b57\u5178\u3002\u4f7f\u7528\u70b9\u8bed\u6cd5\u6216\u8005\u4e2d\u62ec\u53f7\u53ef\u4ee5\u83b7\u53d6\u503c \u7b2c\u4e09\u8bfe \u6761\u4ef6\u8bed\u53e5 \u00b6 {% if user %} <p>{{ user.name }}</p> <p>\u6ce8\u9500</p> {% else %} <p>\u767b\u5f55</p> <p>\u6ce8\u518c</p> {% endif %} and or not \u903b\u8f91\u64cd\u4f5c \u7b2c\u56db\u8bfe \u5faa\u73af\u8bed\u53e5 \u00b6 \u904d\u5386\u5b57\u5178 \u00b6 python \u4e2d\u904d\u5386\u5b57\u5178\u548c JS \u4e0d\u540c user = { 'name' : 'Mike' , 'age' : 18 } for k , v in user . items (): print k print v Jinja2 \u6a21\u677f\u4e2d\u7684\u4f7f\u7528 \u5176\u4ed6\u7684\u904d\u5386\u548cpython\u4e00\u6837\uff0c \u4f7f\u7528 items() keys() values() iteritems() itrtkeys() itervalues() \u8fed\u4ee3\u5668\u904d\u5386 <dl> <% for key, value, in my_dict.iteritems() %> <dt>{{ key|e }}</dt> <dd>{{ value|e }}</dd> <% endfor %> </dl> \u904d\u5386\u5217\u8868 \u00b6 \u6ca1\u6709\u503c\u7684\u60c5\u51b5 <ul> {% for user in users %} <li>{{ user.name }}</li> {% else %} <li>no users found</li> {% endfor %} </ul> \u5c0f\u6848\u4f8b\uff1a\u56db\u5927\u540d\u8457\u7684\u6e32\u67d3 \u7b2c\u4e94\u8bfe \u8fc7\u6ee4\u5668 \u00b6 \u8fc7\u6ee4\u5668\u4ecb\u7ecd\u548c\u8bed\u6cd5\uff1a\u8fc7\u6ee4\u5668\u5904\u7406\u539f\u59cb\u53d8\u91cf\u3002 default \u8fc7\u6ee4\u5668\uff1a\u5982\u679c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0d\u4f20\u53c2\uff0c\u90a3\u4e48\u901a\u8fc7\u7ba1\u9053\u7b26\u5224\u65ad\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u503c\u3002\u4f5c\u7528\u7684\u5bf9\u8c61\u662f\u53d8\u91cf\u3002 {{ avatar|default(\u9ed8\u8ba4\u7684\u53c2\u6570) }} length\u8fc7\u6ee4\u5668\uff1a\u83b7\u53d6\u5f53\u524d\u7684\u5217\u8868\u7684\u957f\u5ea6\u5e76\u663e\u793a\uff08\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u5143\u7ec4\u5b57\u5178\u7684\u952e\u7684\u957f\u5ea6\uff09 {{ comments|length }} \u5176\u4ed6\u904d\u5386\u5668\uff1a abs default escape format length \u83b7\u53d6\u53c2\u6570\u7684\u957f\u5ea6 last first \u83b7\u53d6\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u503c\u6216\u8005\u6700\u540e\u4e00\u4e2a\u503c join(value, d) \u5c06\u4e00\u4e2a\u5e8f\u5217\u4f7f\u7528\u5206\u9694\u7b26\u62fc\u63a5\u6210\u5b57\u7b26\u4e32 safe \u5982\u679c\u5f00\u542f\u5168\u5c40\u8f6c\u4e49\u5b57\u7b26\uff0csafe \u4f1a\u5173\u95ed\u8f6c\u4e49 int float \u5c06\u503c\u8f6c\u6362\u6210\u6574\u5f62\u6216\u8005\u6d6e\u70b9\u578b\u6570\u636e lower upper \u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u8f6c\u6362 replace(value, old, new)\u5b57\u7b26\u4e32\u66ff\u4ee3 truncate(value, length, killwords=False)\u622a\u53d6\u67d0\u4e2a\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 striptags(value)\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u5168\u90e8HTML\u6807\u7b7e\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8fde\u7eed\u7a7a\u683c\uff0c\u4f7f\u7528\u4e00\u4e2a\u7a7a\u683c\u53d6\u4ee3 trim \u5220\u9664\u5b57\u7b26\u4e32\u524d\u540e\u7684\u7a7a\u767d\u5b57\u7b26\u4e32 string \u5c06\u53d8\u91cf\u8f6c\u6362\u6210\u5b57\u7b26\u4e32 wordcount(string) \u8ba1\u7b97\u4e00\u4e2a\u957f\u5b57\u7b26\u4e32\u4e2d\u5355\u8bcd\u7684\u4e2a\u6570 \u7b2c\u516d\u8bfe \u6a21\u677f\u7ee7\u627f\u548cblock\u5b9e\u73b0 \u00b6 python \u7684\u7ee7\u627f\uff1a class Person ( object ): name = '' age = 0 class Student ( Person ): pass class Teacher ( Person ): def hello (): print \"hello\" jinja2 \u7ee7\u627f\uff0c\u81ea\u6a21\u677f\u7ee7\u627f\u7236\u6a21\u677f {% extends 'base.html' %} {% block title %} \u8fd9\u4e2a\u662f\u754c\u9762\u6807\u9898 {% endblock %} {% block main %} <h1>\u8fd9\u662f\u5b50\u754c\u9762</h1> {% endblock %} {% block header-style %} <style></style> \u8fd9\u91cc\u662f\u5b50\u6a21\u677f\u4e2d\u4f7f\u7528\u7684\u6837\u5f0f {% endblock %} \u7b2c\u4e03\u8bfe URL\u94fe\u63a5\u548c\u52a0\u8f7d\u9759\u6001\u6587\u4ef6 \u00b6 <a href=\"{{ url_for('login') }}\"></a> \u4f7f\u7528URL_for \u83b7\u53d6\u5bf9\u5e94\u89c6\u56fe\u51fd\u6570\u7684URL\uff0cA\u6807\u7b7e\u53ef\u4ee5\u76f4\u63a5\u8df3\u8f6c\u5230\u5bf9\u5e94\u9875\u9762 \u52a0\u8f7d\u9759\u6001\u6587\u4ef6 Url_for('static', 'filepath') \u7b2c\u4e09\u7ae0 SQLAlchemy \u6570\u636e\u5e93 \u00b6 \u7b2c\u4e00\u8282 \u5b89\u88c5MYSQL \u00b6 Mac \u5b89\u88c5 MYSQL \u6570\u636e\u5e93\uff1a\u4e0b\u8f7d\u540e\u5e76\u5b89\u88c5\uff0c\u9700\u8981\u5728\u63a7\u5236\u53f0\u521d\u59cb\u5316\u5e76\u8f93\u5165\u5bc6\u7801\uff1a mysqladmin -uroot password [password] Windows \u5b89\u88c5\u65f6\uff0c\u9700\u8981\u6839\u636e\u63d0\u793a\u5b89\u88c5 MicroSoft C++, .net Framework \u5f00\u53d1\u5e93\uff0c\u5728\u5b89\u88c5\u5bf9\u8bdd\u6846\u4e2d\u8f93\u5165\u521d\u59cb\u5bc6\u7801\u3002 \u8be6\u7ec6\u5b89\u88c5\u60c5\u51b5\u53c2\u8003 database-mysql \u5b89\u88c5\u6587\u4ef6 \u7b2c\u4e8c\u8282 \u5b89\u88c5 mysql-python \u4e2d\u95f4\u4ef6 \u00b6 MAC \u5b89\u88c5\uff1a \u73b0\u5728\u65e0\u6cd5\u5b89\u88c5\uff0c\u59cb\u7ec8\u65e0\u6cd5\u5b89\u88c5\uff08\u5c1d\u8bd5\u4f7f\u7528python3\u5185\u7f6e\u7684sqlite\u6570\u636e\u5e93\uff09\u73b0\u5728\u89e3\u6790\u5668\u662f2.7.10\uff0cpython3 \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u6240\u4ee5\u73b0\u5728\u5c1d\u8bd5\u4f7f\u7528\u5185\u7f6esqlite \u53c2\u8003\u94fe\u63a5 https://blog.csdn.net/eri_feng/article/details/81224106 https://www.jianshu.com/p/da9dd5dd4bd2 source ~/Virtualenv/flask-env/bin/activate pip install mysql-python Windows \u9700\u8981\u6ce8\u610f\uff1a\u76f4\u63a5\u5b89\u88c5 pip install mysql-python \u4e0d\u6210\u529f\uff0c\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u7684 whl \u6587\u4ef6\uff0c\u672c\u5730\u5b89\u88c5 pip install ... \u7b2c\u4e09\u8282 flask-sqlalchemy \u7b2c\u4e09\u65b9\u5e93 \u00b6 Flask-sqlalchemy \u662f\u4e00\u4e2aORM\u7684\u6846\u67b6\uff08\u6a21\u578b\u5173\u7cfb\u6620\u5c04\uff0cObject relationship mapping\uff09\u628a\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u8868\u5f53\u505apython\u4e2d\u7684\u4e00\u4e2a\u7c7b\uff0c\u589e\u52a0\u8bb0\u5f55\u5c31\u662f\u65b0\u5efa\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5220\u9664\u66f4\u65b0\u6570\u636e\u4e5f\u53ef\u4ee5\u5b8c\u6210\u3002 \u5047\u8bbe\u6211\u4eec\u7684\u8868\u7ed3\u6784\uff1a id(int) name(string) comment(text) 001 Mike This is text. \u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u5bf9\u5e94\u7684\u7c7b\uff0c\u8868\u793a\u8fd9\u4e2a\u8868\u3002 class Comment ( Modal ): id = Int () name = String () comment = Text () comment1 = Comment ( id = '001' , name = 'Mike' , comment = 'This is text' ) # \u5b8c\u6210\u6570\u636e\u5e93\u7684\u589e\u5220\u6539\u67e5 add ( comment1 ) delete ( comment1 ) comment1 . name = 'John' update ( comment1 ) \u6211\u4eec\u64cd\u4f5c\u6570\u636e\u5e93\u5c31\u7c7b\u4f3c\u64cd\u4f5c\u5bf9\u8c61\uff0c\u5f88\u65b9\u4fbf\uff1b\u8fd9\u662f\u4e00\u4e2a\u6570\u636e\u5e93\u7684\u6620\u5c04 \u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u8fd9\u4e2a\u5e93\u5373\u53ef\u4f7f\u7528\uff1apip install falsk-sqlachemy \u7b2c\u56db\u8282 flask-sqlalchemy \u8fde\u63a5\u6570\u636e\u5e93 \u00b6 \u9996\u5148\u9700\u8981\u914d\u7f6e\u6587\u4ef6\uff08\u8fde\u63a5\u6570\u636e\u5e93\uff09 # dialect+driver://username:password@host:port/database # dialect \u8868\u793a\u6570\u636e\u5e93 mysql # driver \u8868\u793a\u6570\u636e\u5e93\u9a71\u52a8\uff08\u4e2d\u95f4\u4ef6\uff09 # host:port \u8868\u793a\u6570\u636e\u5e93\u7684\u5730\u5740\uff08\u672c\u5730\u5c31\u662fhost\uff09 # database \u8868\u793a\u6570\u636e\u5e93\u7684\u540d\u79f0 \u7b2c\u56db\u7ae0 session \u548c cookie \u64cd\u4f5c \u00b6 \u7b2c\u4e94\u7ae0 \u7f51\u7edc\u77e5\u8bc6\u70b9\u8865\u5145 \u00b6 \u7b2c\u516d\u7ae0 \u9879\u76ee\u5b9e\u6218 \u00b6","title":"readme"},{"location":"05-flask/netease/readme/#flask","text":"https://study.163.com/course/courseMain.htm?courseId=1004091002 \u77e5\u4e4e\u9879\u76ee\u9700\u6c42\uff1a\u53ef\u4ee5\u7528\u6237\u6ce8\u518c\u3001\u7528\u6237\u767b\u5f55\u3001\u641c\u7d22\u65e5\u5fd7\u3001\u53d1\u5e03\u65e5\u5fd7\uff08\u589e\u5220\u6539\u67e5\uff09\u3001\u589e\u52a0\u8bc4\u8bba \u4e00\u5171 41\u8bfe\u65f6","title":"Flask \u5165\u95e8"},{"location":"05-flask/netease/readme/#0","text":"","title":"\u7b2c0\u7ae0 \u5b89\u88c5\u73af\u5883"},{"location":"05-flask/netease/readme/#python","text":"py2.7(mac\u81ea\u5e26python2.7\uff09\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u5165 python\uff1bWindows \u9700\u8981\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff08python pip easy-install \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff09\u8fd9\u91cc\u9700\u8981\u8bbe\u7f6e python \u7684\u73af\u5883\u53d8\u91cf\u548c pip \u7684\u73af\u5883\u53d8\u91cf \u6253\u5f00\u8ba1\u7b97\u673a-\u5c5e\u6027-\u9ad8\u7ea7\u5c5e\u6027-\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf-\u589e\u52a0\u73af\u5883\u53d8\u91cf \u540d\u79f0\u662f PATH \u5c5e\u6027\u662f\u6587\u4ef6\u8def\u5f84 C:/Python27;C:/Python27/Scripts \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u540e\uff0c\u5728cmd\u4e2d\u53ef\u4ee5\u770b\u5230python\u548cpip\u7684\u7248\u672c\u53f7","title":"\u5b89\u88c5 python"},{"location":"05-flask/netease/readme/#virtualenv","text":"\u6240\u4ee5\u9700\u8981python\u865a\u62df\u73af\u5883\u3002\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u4e0d\u540c\u7684falsk\u7684\u7248\u672c\u548c\u5e93\uff0c\u4e24\u4e2a\u7248\u672c\u4f1a\u5171\u5b58\u3002\u865a\u62df\u73af\u5883\u4f1a\u907f\u514d\u7248\u672c\u51b2\u7a81\u3002 \u5b89\u88c5\u865a\u62df\u73af\u5883 sudo pip install virtualenv mkdir Test cd test virtualenv flask-env Windows\u6fc0\u6d3b\u865a\u62df\u73af\u5883 cd falsk-dev/scripts activate deactivate # \u9000\u51fa Mac \u6fc0\u6d3b\u865a\u62df\u73af\u5883 source ~/Virtualenv/flask-env/bin/activate # source path/bin/activate deactivate # \u9000\u51fa","title":"\u5b89\u88c5\u865a\u62df\u73af\u5883 virtualenv"},{"location":"05-flask/netease/readme/#flask_1","text":"falsk \u7248\u672c\u517c\u5bb9\u95ee\u9898\uff1a\u6559\u7a0b\u662f0.12.2 \u73b0\u5728\u5b89\u88c5\u7684\u662f 1.1.1 \u7248\u672c\uff1b\u53ef\u80fd\u90e8\u5206\u4ee3\u7801\u4e0d\u517c\u5bb9\u3002\u8fd9\u91cc\u9700\u8981\u53c2\u8003\u5b98\u7f51\u6700\u65b0\u7248\u672c\u7684\u6559\u7a0b\uff0c\u4e0d\u80fd\u7248\u672c\u53ef\u80fd\u9020\u6210\u540e\u9762\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\u7b49\u95ee\u9898 source ~/Virtualenv/flask-env/bin/activate pip install flask python import flask print flask.__version__ # 1.1.1 \u73b0\u5728\u865a\u62df\u73af\u5883\u548cflask\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6bd5\uff08windows\u73af\u5883\u4e0b\uff09","title":"\u5b89\u88c5flask"},{"location":"05-flask/netease/readme/#urls","text":"","title":"\u7b2c\u4e00\u7ae0 URLs \u548c\u89c6\u56fe"},{"location":"05-flask/netease/readme/#hello-flask","text":"\u7b2c\u4e00\u6b21\u521b\u5efa\u9879\u76ee\u7684\u65f6\u5019\uff0c\u9700\u8981\u6dfb\u52a0\u865a\u62df\u73af\u5883\uff08\u5728pycharm\uff09\u9009\u62e9\u865a\u62df\u73af\u5883\u4e2d\u7684python\u6267\u884c\u6587\u4ef6 flask \u4ee3\u7801\u57fa\u672c\u7ed3\u6784\u89e3\u91ca #coding=utf-8 # python 2\u9700\u8981\u8bbe\u7f6e\u8bed\u8a00utf-8 # \u4eceFlask\u6846\u67b6\u4e2d\u5bfc\u5165\u8fd9\u4e2a\u7c7b from flask import Flask # \u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u9700\u8981\u4f20\u53c2 app = Flask ( __name__ ) # \u88c5\u9970\u5668 @\u5f00\u5934\uff0c\u4f4d\u4e8e\u51fd\u6570\u7684\u4e0a\u9762 # \u662fURL\u89c6\u56fe\u51fd\u6570\u7684\u6620\u5c04 # 127.0.0.1:5000 \u4f1a\u6620\u5c04\u5230\u4e0b\u9762\u7684\u51fd\u6570 @app . route ( '/' ) def hello_world (): return 'Hello Michael An!' @app . route ( '/index' ) def index_page (): return 'Hello Index Page' # \u5165\u53e3\u7a0b\u5e8f\uff1a\u542f\u52a8\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u63a5\u53d7\u7528\u6237\u7684\u8bf7\u6c42\uff08eventlistener\uff09 if __name__ == '__main__' : app . run ()","title":"\u7b2c\u4e00\u8bfe hello flask"},{"location":"05-flask/netease/readme/#debug","text":"app . run ( debug = True ) \u53ef\u4ee5\u6253\u5f00\u8c03\u8bd5\u6a21\u5f0f \u53ef\u4ee5\u9879\u76ee\u70ed\u52a0\u8f7d\uff08\u4fee\u6539python\u6587\u4ef6\u624d\u884c\uff0cJS\u6587\u4ef6\u4fee\u6539\u540e\u4e0d\u4f1a\u70ed\u52a0\u8f7d\uff09\uff1b\u53ef\u4ee5\u51fa\u73b0\u95ee\u9898\u540e\u5728\u9875\u9762\u4e2d\u770b\u5230\u62a5\u9519\u8be6\u60c5","title":"\u7b2c\u4e8c\u8bfe debug"},{"location":"05-flask/netease/readme/#_1","text":"\u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 config.py\uff0c\u52a0\u5165\u5927\u5199\u7684\u53c2\u6570 DEBUG = True # SECRET_KEY \u5728\u4e3b\u6587\u4ef6\u4e2d\u5f15\u5165\u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u7528\u914d\u7f6e main.py import config app . config . from_object ( config )","title":"\u5916\u90e8\u914d\u7f6e\u6587\u4ef6"},{"location":"05-flask/netease/readme/#3-url","text":"\u53ef\u4ee5\u5728URL\u4e2d\u4f20\u53c2 @app . route ( '/page/<number>' ) def change_page ( number ): return 'change page to %s ' % number \u53c2\u6570\u9700\u8981\u653e\u5728\u5c16\u62ec\u53f7\u4e2d\uff0c\u89c6\u56fe\u51fd\u6570\u4e2d\u53c2\u6570\u548c\u539f\u59cb\u53c2\u6570\u76f8\u540c\u3002","title":"\u7b2c3\u8bfe URL \u4f20\u53c2"},{"location":"05-flask/netease/readme/#4-url","text":"\u53ef\u4ee5\u5728\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\u4e2d\uff0c\u4f20\u5165\u5176\u4ed6\u89c6\u56fe\u51fd\u6570\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684URL \u4f7f\u7528 url_for \u5185\u7f6e\u51fd\u6570 \u7528\u9014\uff1a\u9875\u9762\u91cd\u5b9a\u5411\uff1bHTML\u4e2dA\u94fe\u63a5 from flask import Flask , url_for import config app = Flask ( __name__ ) app . config . from_object ( config ) @app . route ( '/' ) def hello_world (): print url_for ( 'handle_index' ) print url_for ( 'change_page' , number = 20 ) return 'Hello World!' @app . route ( '/index' ) def handle_index (): return 'index page' @app . route ( '/page/<number>' ) def change_page ( number ): return 'this is %s ' % number if __name__ == '__main__' : app . run () \u6ce8\u610f\uff1a\u8fd0\u884cflask\u540e\uff0c\u9700\u8981\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684\u5173\u95ed\u6309\u94ae\uff0c\u624d\u80fd\u5173\u95ed\u5f53\u524d\u7684\u672c\u5730\u670d\u52a1\u5668\u3002\u5426\u5219\u5173\u95ed\u8f6f\u4ef6\u540e\uff0c\u672c\u5730\u670d\u52a1\u5668\u8fd8\u5728\u8fd0\u884c\uff0c\u53ef\u80fd\u5f71\u54cd\u5176\u4ed6\u7684\u672c\u5730\u670d\u52a1\u5668\u3002","title":"\u7b2c4\u8bfe URL\u53cd\u8f6c"},{"location":"05-flask/netease/readme/#5","text":"\u5b9e\u9645\u4f7f\u7528:\u7528\u6237\u672a\u767b\u5f55\u65f6\uff0c\u8df3\u8f6c\uff08\u91cd\u5b9a\u5411\uff09\u5230\u767b\u5f55\u754c\u9762 #coding=utf-8 from flask import Flask , redirect , url_for app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return redirect ( url_for ( 'login' )) # return redirect('/login/') # return 'Hello World!' # \u5982\u679c\u662f\u56fa\u5b9a\u7684URL\uff0c\u90a3\u4e48\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u8def\u5f84\u66f4\u6539\u540e\uff0c\u91cd\u5b9a\u5411\u4f1a\u9519\u8bef # \u4f7f\u7528url_for\u52a8\u6001\u83b7\u53d6\u89c6\u56fe\u51fd\u6570\u7684\u8df3\u8f6c\u4f4d\u7f6e @app . route ( '/login/' ) def login (): return 'This is login page, please login' # we can use cookie to check user login state in the future @app . route ( '/question/<id>' ) def question ( id ): if id == '1' : return 'Your question is 1, This is question page' else : return redirect ( url_for ( 'login' )) if __name__ == '__main__' : app . run ( debug = True )","title":"\u7b2c5\u8bfe \u9875\u9762\u91cd\u5b9a\u5411\u548c\u8df3\u8f6c"},{"location":"05-flask/netease/readme/#jinja2","text":"","title":"\u7b2c\u4e8c\u7ae0 Jinja2\u6a21\u677f"},{"location":"05-flask/netease/readme/#_2","text":"\u6a21\u677f\u653e\u5728 templates \u8def\u5f84\u4e0b \u5bfc\u5165\u6a21\u677f\uff1arender_template \u51fd\u6570\uff1b\u6ce8\u610f\uff1a\u4e0d\u9700\u8981\u5199templates\u6587\u4ef6\u5939\u7684\u8def\u5f84\uff0c\u76f4\u63a5\u5199\u5165\u53e3\u6587\u4ef6 \u6a21\u677f\u4f20\u53c2\uff1arender_template \u51fd\u6570\u4e2d\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8fdb\u884c\u4f20\u53c2\uff1b\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u53d8\u91cf\u9700\u8981 {{ \u53c2\u6570 }}","title":"\u7b2c\u4e00\u8bfe \u6a21\u677f\u6e32\u67d3\u548c\u4f20\u53c2"},{"location":"05-flask/netease/readme/#_3","text":"\u8bbf\u95ee\u6a21\u578b\u4e2d\u7684\u5c5e\u6027\u6216\u8005\u5b57\u5178\u3002\u4f7f\u7528\u70b9\u8bed\u6cd5\u6216\u8005\u4e2d\u62ec\u53f7\u53ef\u4ee5\u83b7\u53d6\u503c","title":"\u7b2c\u4e8c\u8bfe \u6a21\u677f\u4e2d\u8bbf\u95ee\u5c5e\u6027\u548c\u5b57\u5178"},{"location":"05-flask/netease/readme/#_4","text":"{% if user %} <p>{{ user.name }}</p> <p>\u6ce8\u9500</p> {% else %} <p>\u767b\u5f55</p> <p>\u6ce8\u518c</p> {% endif %} and or not \u903b\u8f91\u64cd\u4f5c","title":"\u7b2c\u4e09\u8bfe \u6761\u4ef6\u8bed\u53e5"},{"location":"05-flask/netease/readme/#_5","text":"","title":"\u7b2c\u56db\u8bfe \u5faa\u73af\u8bed\u53e5"},{"location":"05-flask/netease/readme/#_6","text":"python \u4e2d\u904d\u5386\u5b57\u5178\u548c JS \u4e0d\u540c user = { 'name' : 'Mike' , 'age' : 18 } for k , v in user . items (): print k print v Jinja2 \u6a21\u677f\u4e2d\u7684\u4f7f\u7528 \u5176\u4ed6\u7684\u904d\u5386\u548cpython\u4e00\u6837\uff0c \u4f7f\u7528 items() keys() values() iteritems() itrtkeys() itervalues() \u8fed\u4ee3\u5668\u904d\u5386 <dl> <% for key, value, in my_dict.iteritems() %> <dt>{{ key|e }}</dt> <dd>{{ value|e }}</dd> <% endfor %> </dl>","title":"\u904d\u5386\u5b57\u5178"},{"location":"05-flask/netease/readme/#_7","text":"\u6ca1\u6709\u503c\u7684\u60c5\u51b5 <ul> {% for user in users %} <li>{{ user.name }}</li> {% else %} <li>no users found</li> {% endfor %} </ul> \u5c0f\u6848\u4f8b\uff1a\u56db\u5927\u540d\u8457\u7684\u6e32\u67d3","title":"\u904d\u5386\u5217\u8868"},{"location":"05-flask/netease/readme/#_8","text":"\u8fc7\u6ee4\u5668\u4ecb\u7ecd\u548c\u8bed\u6cd5\uff1a\u8fc7\u6ee4\u5668\u5904\u7406\u539f\u59cb\u53d8\u91cf\u3002 default \u8fc7\u6ee4\u5668\uff1a\u5982\u679c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0d\u4f20\u53c2\uff0c\u90a3\u4e48\u901a\u8fc7\u7ba1\u9053\u7b26\u5224\u65ad\uff0c\u4f7f\u7528\u9ed8\u8ba4\u7684\u503c\u3002\u4f5c\u7528\u7684\u5bf9\u8c61\u662f\u53d8\u91cf\u3002 {{ avatar|default(\u9ed8\u8ba4\u7684\u53c2\u6570) }} length\u8fc7\u6ee4\u5668\uff1a\u83b7\u53d6\u5f53\u524d\u7684\u5217\u8868\u7684\u957f\u5ea6\u5e76\u663e\u793a\uff08\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u5143\u7ec4\u5b57\u5178\u7684\u952e\u7684\u957f\u5ea6\uff09 {{ comments|length }} \u5176\u4ed6\u904d\u5386\u5668\uff1a abs default escape format length \u83b7\u53d6\u53c2\u6570\u7684\u957f\u5ea6 last first \u83b7\u53d6\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u503c\u6216\u8005\u6700\u540e\u4e00\u4e2a\u503c join(value, d) \u5c06\u4e00\u4e2a\u5e8f\u5217\u4f7f\u7528\u5206\u9694\u7b26\u62fc\u63a5\u6210\u5b57\u7b26\u4e32 safe \u5982\u679c\u5f00\u542f\u5168\u5c40\u8f6c\u4e49\u5b57\u7b26\uff0csafe \u4f1a\u5173\u95ed\u8f6c\u4e49 int float \u5c06\u503c\u8f6c\u6362\u6210\u6574\u5f62\u6216\u8005\u6d6e\u70b9\u578b\u6570\u636e lower upper \u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u8f6c\u6362 replace(value, old, new)\u5b57\u7b26\u4e32\u66ff\u4ee3 truncate(value, length, killwords=False)\u622a\u53d6\u67d0\u4e2a\u957f\u5ea6\u7684\u5b57\u7b26\u4e32 striptags(value)\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u5168\u90e8HTML\u6807\u7b7e\uff0c\u5982\u679c\u6709\u591a\u4e2a\u8fde\u7eed\u7a7a\u683c\uff0c\u4f7f\u7528\u4e00\u4e2a\u7a7a\u683c\u53d6\u4ee3 trim \u5220\u9664\u5b57\u7b26\u4e32\u524d\u540e\u7684\u7a7a\u767d\u5b57\u7b26\u4e32 string \u5c06\u53d8\u91cf\u8f6c\u6362\u6210\u5b57\u7b26\u4e32 wordcount(string) \u8ba1\u7b97\u4e00\u4e2a\u957f\u5b57\u7b26\u4e32\u4e2d\u5355\u8bcd\u7684\u4e2a\u6570","title":"\u7b2c\u4e94\u8bfe \u8fc7\u6ee4\u5668"},{"location":"05-flask/netease/readme/#block","text":"python \u7684\u7ee7\u627f\uff1a class Person ( object ): name = '' age = 0 class Student ( Person ): pass class Teacher ( Person ): def hello (): print \"hello\" jinja2 \u7ee7\u627f\uff0c\u81ea\u6a21\u677f\u7ee7\u627f\u7236\u6a21\u677f {% extends 'base.html' %} {% block title %} \u8fd9\u4e2a\u662f\u754c\u9762\u6807\u9898 {% endblock %} {% block main %} <h1>\u8fd9\u662f\u5b50\u754c\u9762</h1> {% endblock %} {% block header-style %} <style></style> \u8fd9\u91cc\u662f\u5b50\u6a21\u677f\u4e2d\u4f7f\u7528\u7684\u6837\u5f0f {% endblock %}","title":"\u7b2c\u516d\u8bfe \u6a21\u677f\u7ee7\u627f\u548cblock\u5b9e\u73b0"},{"location":"05-flask/netease/readme/#url","text":"<a href=\"{{ url_for('login') }}\"></a> \u4f7f\u7528URL_for \u83b7\u53d6\u5bf9\u5e94\u89c6\u56fe\u51fd\u6570\u7684URL\uff0cA\u6807\u7b7e\u53ef\u4ee5\u76f4\u63a5\u8df3\u8f6c\u5230\u5bf9\u5e94\u9875\u9762 \u52a0\u8f7d\u9759\u6001\u6587\u4ef6 Url_for('static', 'filepath')","title":"\u7b2c\u4e03\u8bfe URL\u94fe\u63a5\u548c\u52a0\u8f7d\u9759\u6001\u6587\u4ef6"},{"location":"05-flask/netease/readme/#sqlalchemy","text":"","title":"\u7b2c\u4e09\u7ae0 SQLAlchemy \u6570\u636e\u5e93"},{"location":"05-flask/netease/readme/#mysql","text":"Mac \u5b89\u88c5 MYSQL \u6570\u636e\u5e93\uff1a\u4e0b\u8f7d\u540e\u5e76\u5b89\u88c5\uff0c\u9700\u8981\u5728\u63a7\u5236\u53f0\u521d\u59cb\u5316\u5e76\u8f93\u5165\u5bc6\u7801\uff1a mysqladmin -uroot password [password] Windows \u5b89\u88c5\u65f6\uff0c\u9700\u8981\u6839\u636e\u63d0\u793a\u5b89\u88c5 MicroSoft C++, .net Framework \u5f00\u53d1\u5e93\uff0c\u5728\u5b89\u88c5\u5bf9\u8bdd\u6846\u4e2d\u8f93\u5165\u521d\u59cb\u5bc6\u7801\u3002 \u8be6\u7ec6\u5b89\u88c5\u60c5\u51b5\u53c2\u8003 database-mysql \u5b89\u88c5\u6587\u4ef6","title":"\u7b2c\u4e00\u8282 \u5b89\u88c5MYSQL"},{"location":"05-flask/netease/readme/#mysql-python","text":"MAC \u5b89\u88c5\uff1a \u73b0\u5728\u65e0\u6cd5\u5b89\u88c5\uff0c\u59cb\u7ec8\u65e0\u6cd5\u5b89\u88c5\uff08\u5c1d\u8bd5\u4f7f\u7528python3\u5185\u7f6e\u7684sqlite\u6570\u636e\u5e93\uff09\u73b0\u5728\u89e3\u6790\u5668\u662f2.7.10\uff0cpython3 \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u6240\u4ee5\u73b0\u5728\u5c1d\u8bd5\u4f7f\u7528\u5185\u7f6esqlite \u53c2\u8003\u94fe\u63a5 https://blog.csdn.net/eri_feng/article/details/81224106 https://www.jianshu.com/p/da9dd5dd4bd2 source ~/Virtualenv/flask-env/bin/activate pip install mysql-python Windows \u9700\u8981\u6ce8\u610f\uff1a\u76f4\u63a5\u5b89\u88c5 pip install mysql-python \u4e0d\u6210\u529f\uff0c\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u7684 whl \u6587\u4ef6\uff0c\u672c\u5730\u5b89\u88c5 pip install ...","title":"\u7b2c\u4e8c\u8282 \u5b89\u88c5 mysql-python \u4e2d\u95f4\u4ef6"},{"location":"05-flask/netease/readme/#flask-sqlalchemy","text":"Flask-sqlalchemy \u662f\u4e00\u4e2aORM\u7684\u6846\u67b6\uff08\u6a21\u578b\u5173\u7cfb\u6620\u5c04\uff0cObject relationship mapping\uff09\u628a\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u8868\u5f53\u505apython\u4e2d\u7684\u4e00\u4e2a\u7c7b\uff0c\u589e\u52a0\u8bb0\u5f55\u5c31\u662f\u65b0\u5efa\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5220\u9664\u66f4\u65b0\u6570\u636e\u4e5f\u53ef\u4ee5\u5b8c\u6210\u3002 \u5047\u8bbe\u6211\u4eec\u7684\u8868\u7ed3\u6784\uff1a id(int) name(string) comment(text) 001 Mike This is text. \u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u5bf9\u5e94\u7684\u7c7b\uff0c\u8868\u793a\u8fd9\u4e2a\u8868\u3002 class Comment ( Modal ): id = Int () name = String () comment = Text () comment1 = Comment ( id = '001' , name = 'Mike' , comment = 'This is text' ) # \u5b8c\u6210\u6570\u636e\u5e93\u7684\u589e\u5220\u6539\u67e5 add ( comment1 ) delete ( comment1 ) comment1 . name = 'John' update ( comment1 ) \u6211\u4eec\u64cd\u4f5c\u6570\u636e\u5e93\u5c31\u7c7b\u4f3c\u64cd\u4f5c\u5bf9\u8c61\uff0c\u5f88\u65b9\u4fbf\uff1b\u8fd9\u662f\u4e00\u4e2a\u6570\u636e\u5e93\u7684\u6620\u5c04 \u5728\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u8fd9\u4e2a\u5e93\u5373\u53ef\u4f7f\u7528\uff1apip install falsk-sqlachemy","title":"\u7b2c\u4e09\u8282 flask-sqlalchemy \u7b2c\u4e09\u65b9\u5e93"},{"location":"05-flask/netease/readme/#flask-sqlalchemy_1","text":"\u9996\u5148\u9700\u8981\u914d\u7f6e\u6587\u4ef6\uff08\u8fde\u63a5\u6570\u636e\u5e93\uff09 # dialect+driver://username:password@host:port/database # dialect \u8868\u793a\u6570\u636e\u5e93 mysql # driver \u8868\u793a\u6570\u636e\u5e93\u9a71\u52a8\uff08\u4e2d\u95f4\u4ef6\uff09 # host:port \u8868\u793a\u6570\u636e\u5e93\u7684\u5730\u5740\uff08\u672c\u5730\u5c31\u662fhost\uff09 # database \u8868\u793a\u6570\u636e\u5e93\u7684\u540d\u79f0","title":"\u7b2c\u56db\u8282 flask-sqlalchemy \u8fde\u63a5\u6570\u636e\u5e93"},{"location":"05-flask/netease/readme/#session-cookie","text":"","title":"\u7b2c\u56db\u7ae0 session \u548c cookie \u64cd\u4f5c"},{"location":"05-flask/netease/readme/#_9","text":"","title":"\u7b2c\u4e94\u7ae0 \u7f51\u7edc\u77e5\u8bc6\u70b9\u8865\u5145"},{"location":"05-flask/netease/readme/#_10","text":"","title":"\u7b2c\u516d\u7ae0 \u9879\u76ee\u5b9e\u6218"},{"location":"06-third-part-lib/001-Beautiful-Soup/","text":"Beautiful Soup 4.4.0 \u6587\u6863 \u00b6 \u7528\u9014 \u00b6 Beautiful Soup \u7528\u4e8e\u89e3\u6790 HTML \u5b57\u7b26\u4e32\u5230 python \u5bf9\u8c61\uff0c\u4e3b\u8981\u7528\u4e8e\u722c\u866b\u5206\u6790\u7f51\u9875\u3002 Beautiful Soup \u662f\u4e00\u4e2a\u53ef\u4ee5\u4eceHTML\u6216XML\u6587\u4ef6\u4e2d\u63d0\u53d6\u6570\u636e\u7684Python\u5e93.\u5b83\u80fd\u591f\u901a\u8fc7\u8f6c\u6362\u5668\u5b9e\u73b0\u6587\u6863\u5bfc\u822a,\u67e5\u627e,\u4fee\u6539\u6587\u6863\u7684\u65b9\u5f0f \u5b98\u65b9\u6587\u6863\u94fe\u63a5\uff1a https://beautifulsoup.readthedocs.io/zh-cn/v4.4.0/ \u7248\u672c\u548c\u73af\u5883 \u00b6 \u8fd9\u7bc7\u6587\u6863\u662f BeautifulSoup4\u3002\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u4f8b\u5b50\u5728Python2.7\u548cPython3.2\u4e2d\u7684\u6267\u884c\u7ed3\u679c\u76f8\u540c\u3002 \u4f60\u53ef\u80fd\u5728\u5bfb\u627e Beautiful Soup3 \u7684\u6587\u6863,Beautiful Soup 3 \u76ee\u524d\u5df2\u7ecf\u505c\u6b62\u5f00\u53d1\uff0c\u6211\u4eec\u63a8\u8350\u5728\u73b0\u5728\u7684\u9879\u76ee\u4e2d\u4f7f\u7528Beautiful Soup 4\u3002 \u6848\u4f8b \u00b6 \u4e0b\u9762\u7684\u4e00\u6bb5HTML\u4ee3\u7801\u5c06\u4f5c\u4e3a\u4f8b\u5b50\u88ab\u591a\u6b21\u7528\u5230.\u8fd9\u662f \u7231\u4e3d\u4e1d\u68a6\u6e38\u4ed9\u5883\u7684 \u7684\u4e00\u6bb5\u5185\u5bb9(\u4ee5\u540e\u5185\u5bb9\u4e2d\u7b80\u79f0\u4e3a \u7231\u4e3d\u4e1d \u7684\u6587\u6863): html_doc = \"\"\" <html><head><title>The Dormouse's story</title></head> <body> <p class=\"title\"><b>The Dormouse's story</b></p> <p class=\"story\">Once upon a time there were three little sisters; and their names were <a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>, <a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and <a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>; and they lived at the bottom of a well.</p> <p class=\"story\">...</p> \"\"\" \u4f7f\u7528BeautifulSoup\u89e3\u6790\u8fd9\u6bb5\u4ee3\u7801,\u80fd\u591f\u5f97\u5230\u4e00\u4e2a BeautifulSoup \u7684\u5bf9\u8c61,\u5e76\u80fd\u6309\u7167\u6807\u51c6\u7684\u7f29\u8fdb\u683c\u5f0f\u7684\u7ed3\u6784\u8f93\u51fa: from bs4 import BeautifulSoup soup = BeautifulSoup ( html_doc , 'html.parser' ) print ( soup . prettify ()) # <html> # <head> # <title> # The Dormouse's story # </title> # </head> # <body> # <p class=\"title\"> # <b> # The Dormouse's story # </b> # </p> # <p class=\"story\"> # Once upon a time there were three little sisters; and their names were # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\"> # Elsie # </a> # , # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\"> # Lacie # </a> # and # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link2\"> # Tillie # </a> # ; and they lived at the bottom of a well. # </p> # <p class=\"story\"> # ... # </p> # </body> # </html> \u51e0\u4e2a\u7b80\u5355\u7684\u6d4f\u89c8\u7ed3\u6784\u5316\u6570\u636e\u7684\u65b9\u6cd5: soup . title # <title>The Dormouse's story</title> soup . title . name # u'title' soup . title . string # u'The Dormouse's story' soup . title . parent . name # u'head' soup . p # <p class=\"title\"><b>The Dormouse's story</b></p> soup . p [ 'class' ] # u'title' soup . a # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> soup . find_all ( 'a' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . find ( id = \"link3\" ) # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a> \u4ece\u6587\u6863\u4e2d\u627e\u5230\u6240\u6709 \u6807\u7b7e\u7684\u94fe\u63a5: for link in soup . find_all ( 'a' ): print ( link . get ( 'href' )) # http://example.com/elsie # http://example.com/lacie # http://example.com/tillie \u4ece\u6587\u6863\u4e2d\u83b7\u53d6\u6240\u6709\u6587\u5b57\u5185\u5bb9: print ( soup . get_text ()) # The Dormouse's story # # The Dormouse's story # # Once upon a time there were three little sisters; and their names were # Elsie, # Lacie and # Tillie; # and they lived at the bottom of a well. # # ... \u5b89\u88c5 Beautiful Soup \u00b6 Debain\u6216ubuntu,\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u7cfb\u7edf\u7684\u8f6f\u4ef6\u5305\u7ba1\u7406\u6765\u5b89\u88c5: $ apt-get install Python-bs4 Beautiful Soup 4 \u901a\u8fc7PyPi\u53d1\u5e03,\u6240\u4ee5\u5982\u679c\u4f60\u65e0\u6cd5\u4f7f\u7528\u7cfb\u7edf\u5305\u7ba1\u7406\u5b89\u88c5\u90a3\u4e48\u4e5f\u53ef\u4ee5\u901a\u8fc7 easy_install \u6216 pip \u6765\u5b89\u88c5.\u5305\u7684\u540d\u5b57\u662f beautifulsoup4 ,\u8fd9\u4e2a\u5305\u517c\u5bb9Python2\u548cPython3. $ easy_install beautifulsoup4 $ pip install beautifulsoup4 \u7248\u672c\u8bf4\u660e\uff1a\u5728PyPi\u4e2d\u8fd8\u6709\u4e00\u4e2a\u540d\u5b57\u662f BeautifulSoup \u7684\u5305,\u4f46\u90a3\u53ef\u80fd\u4e0d\u662f\u4f60\u60f3\u8981\u7684,\u90a3\u662f Beautiful Soup3 \u7684\u53d1\u5e03\u7248\u672c,\u56e0\u4e3a\u5f88\u591a\u9879\u76ee\u8fd8\u5728\u4f7f\u7528BS3, \u6240\u4ee5 BeautifulSoup \u5305\u4f9d\u7136\u6709\u6548.\u4f46\u662f\u5982\u679c\u4f60\u5728\u7f16\u5199\u65b0\u9879\u76ee,\u90a3\u4e48\u4f60\u5e94\u8be5\u5b89\u88c5\u7684 beautifulsoup4 \u5b89\u88c5\u540e\u7684\u95ee\u9898 \u00b6 Beautiful Soup\u53d1\u5e03\u65f6\u6253\u5305\u6210Python2\u7248\u672c\u7684\u4ee3\u7801,\u5728Python3\u73af\u5883\u4e0b\u5b89\u88c5\u65f6,\u4f1a\u81ea\u52a8\u8f6c\u6362\u6210Python3\u7684\u4ee3\u7801,\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u5b89\u88c5\u7684\u8fc7\u7a0b,\u90a3\u4e48\u4ee3\u7801\u5c31\u4e0d\u4f1a\u88ab\u8f6c\u6362. \u5982\u679c\u4ee3\u7801\u629b\u51fa\u4e86 ImportError \u7684\u5f02\u5e38: \u201cNo module named HTMLParser\u201d, \u8fd9\u662f\u56e0\u4e3a\u4f60\u5728Python3\u7248\u672c\u4e2d\u6267\u884cPython2\u7248\u672c\u7684\u4ee3\u7801. \u5982\u679c\u4ee3\u7801\u629b\u51fa\u4e86 ImportError \u7684\u5f02\u5e38: \u201cNo module named html.parser\u201d, \u8fd9\u662f\u56e0\u4e3a\u4f60\u5728Python2\u7248\u672c\u4e2d\u6267\u884cPython3\u7248\u672c\u7684\u4ee3\u7801. \u5982\u679c\u9047\u5230\u4e0a\u8ff02\u79cd\u60c5\u51b5,\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u91cd\u65b0\u5b89\u88c5BeautifulSoup4. \u5982\u679c\u5728ROOT_TAG_NAME = u\u2019[document]\u2019\u4ee3\u7801\u5904\u9047\u5230 SyntaxError \u201cInvalid syntax\u201d\u9519\u8bef,\u9700\u8981\u5c06\u628aBS4\u7684Python\u4ee3\u7801\u7248\u672c\u4ecePython2\u8f6c\u6362\u5230Python3. \u53ef\u4ee5\u91cd\u65b0\u5b89\u88c5BS4: $ Python3 setup.py install \u6216\u5728bs4\u7684\u76ee\u5f55\u4e2d\u6267\u884cPython\u4ee3\u7801\u7248\u672c\u8f6c\u6362\u811a\u672c $ 2to3-3.2 -w bs4 \u5b89\u88c5\u89e3\u6790\u5668 \u00b6 Beautiful Soup\u652f\u6301Python\u6807\u51c6\u5e93\u4e2d\u7684HTML\u89e3\u6790\u5668,\u8fd8\u652f\u6301\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u89e3\u6790\u5668,\u5176\u4e2d\u4e00\u4e2a\u662f lxml .\u6839\u636e\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u540c,\u53ef\u4ee5\u9009\u62e9\u4e0b\u5217\u65b9\u6cd5\u6765\u5b89\u88c5lxml: $ apt-get install Python-lxml $ easy_install lxml $ pip install lxml \u53e6\u4e00\u4e2a\u53ef\u4f9b\u9009\u62e9\u7684\u89e3\u6790\u5668\u662f\u7eafPython\u5b9e\u73b0\u7684 html5lib , html5lib\u7684\u89e3\u6790\u65b9\u5f0f\u4e0e\u6d4f\u89c8\u5668\u76f8\u540c,\u53ef\u4ee5\u9009\u62e9\u4e0b\u5217\u65b9\u6cd5\u6765\u5b89\u88c5html5lib: $ apt-get install Python-html5lib $ easy_install html5lib $ pip install html5lib \u4e0b\u8868\u5217\u51fa\u4e86\u4e3b\u8981\u7684\u89e3\u6790\u5668,\u4ee5\u53ca\u5b83\u4eec\u7684\u4f18\u7f3a\u70b9: \u89e3\u6790\u5668 \u4f7f\u7528\u65b9\u6cd5 \u4f18\u52bf \u52a3\u52bf Python\u6807\u51c6\u5e93 BeautifulSoup(markup, \"html.parser\") Python\u7684\u5185\u7f6e\u6807\u51c6\u5e93\u6267\u884c\u901f\u5ea6\u9002\u4e2d\u6587\u6863\u5bb9\u9519\u80fd\u529b\u5f3a Python 2.7.3 or 3.2.2)\u524d \u7684\u7248\u672c\u4e2d\u6587\u6863\u5bb9\u9519\u80fd\u529b\u5dee lxml HTML \u89e3\u6790\u5668 BeautifulSoup(markup, \"lxml\") \u901f\u5ea6\u5feb\u6587\u6863\u5bb9\u9519\u80fd\u529b\u5f3a \u9700\u8981\u5b89\u88c5C\u8bed\u8a00\u5e93 lxml XML \u89e3\u6790\u5668 BeautifulSoup(markup, [\"lxml-xml\"])``BeautifulSoup(markup, \"xml\") \u901f\u5ea6\u5feb\u552f\u4e00\u652f\u6301XML\u7684\u89e3\u6790\u5668 \u9700\u8981\u5b89\u88c5C\u8bed\u8a00\u5e93 html5lib BeautifulSoup(markup, \"html5lib\") \u6700\u597d\u7684\u5bb9\u9519\u6027\u4ee5\u6d4f\u89c8\u5668\u7684\u65b9\u5f0f\u89e3\u6790\u6587\u6863\u751f\u6210HTML5\u683c\u5f0f\u7684\u6587\u6863 \u901f\u5ea6\u6162\u4e0d\u4f9d\u8d56\u5916\u90e8\u6269\u5c55 \u63a8\u8350\u4f7f\u7528lxml\u4f5c\u4e3a\u89e3\u6790\u5668,\u56e0\u4e3a\u6548\u7387\u66f4\u9ad8. \u5728Python2.7.3\u4e4b\u524d\u7684\u7248\u672c\u548cPython3\u4e2d3.2.2\u4e4b\u524d\u7684\u7248\u672c,\u5fc5\u987b\u5b89\u88c5lxml\u6216html5lib, \u56e0\u4e3a\u90a3\u4e9bPython\u7248\u672c\u7684\u6807\u51c6\u5e93\u4e2d\u5185\u7f6e\u7684HTML\u89e3\u6790\u65b9\u6cd5\u4e0d\u591f\u7a33\u5b9a. \u63d0\u793a: \u5982\u679c\u4e00\u6bb5HTML\u6216XML\u6587\u6863\u683c\u5f0f\u4e0d\u6b63\u786e\u7684\u8bdd,\u90a3\u4e48\u5728\u4e0d\u540c\u7684\u89e3\u6790\u5668\u4e2d\u8fd4\u56de\u7684\u7ed3\u679c\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684,\u67e5\u770b \u89e3\u6790\u5668\u4e4b\u95f4\u7684\u533a\u522b \u4e86\u89e3\u66f4\u591a\u7ec6\u8282 \u5982\u4f55\u4f7f\u7528 \u00b6 \u5c06\u4e00\u6bb5\u6587\u6863\u4f20\u5165BeautifulSoup \u7684\u6784\u9020\u65b9\u6cd5,\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u6587\u6863\u7684\u5bf9\u8c61, \u53ef\u4ee5\u4f20\u5165\u4e00\u6bb5\u5b57\u7b26\u4e32\u6216\u4e00\u4e2a\u6587\u4ef6\u53e5\u67c4. from bs4 import BeautifulSoup soup = BeautifulSoup ( open ( \"index.html\" )) soup = BeautifulSoup ( \"<html>data</html>\" ) \u9996\u5148,\u6587\u6863\u88ab\u8f6c\u6362\u6210Unicode,\u5e76\u4e14HTML\u7684\u5b9e\u4f8b\u90fd\u88ab\u8f6c\u6362\u6210Unicode\u7f16\u7801 BeautifulSoup ( \"Sacr&eacute; bleu!\" ) < html >< head ></ head >< body > Sacr\u00e9 bleu ! </ body ></ html > \u7136\u540e,Beautiful Soup\u9009\u62e9\u6700\u5408\u9002\u7684\u89e3\u6790\u5668\u6765\u89e3\u6790\u8fd9\u6bb5\u6587\u6863,\u5982\u679c\u624b\u52a8\u6307\u5b9a\u89e3\u6790\u5668\u90a3\u4e48Beautiful Soup\u4f1a\u9009\u62e9\u6307\u5b9a\u7684\u89e3\u6790\u5668\u6765\u89e3\u6790\u6587\u6863.(\u53c2\u8003 \u89e3\u6790\u6210XML ). \u540e\u9762\u662f\u539f\u59cb\u7684\u6587\u6863\uff0c\u9700\u8981\u65f6\u518d\u770b\u3002 \u5bf9\u8c61\u7684\u79cd\u7c7b \u00b6 Beautiful Soup\u5c06\u590d\u6742HTML\u6587\u6863\u8f6c\u6362\u6210\u4e00\u4e2a\u590d\u6742\u7684\u6811\u5f62\u7ed3\u6784,\u6bcf\u4e2a\u8282\u70b9\u90fd\u662fPython\u5bf9\u8c61,\u6240\u6709\u5bf9\u8c61\u53ef\u4ee5\u5f52\u7eb3\u4e3a4\u79cd: Tag , NavigableString , BeautifulSoup , Comment . Tag \u00b6 Tag \u5bf9\u8c61\u4e0eXML\u6216HTML\u539f\u751f\u6587\u6863\u4e2d\u7684tag\u76f8\u540c: soup = BeautifulSoup ( '<b class=\"boldest\">Extremely bold</b>' ) tag = soup . b type ( tag ) # <class 'bs4.element.Tag'> Tag\u6709\u5f88\u591a\u65b9\u6cd5\u548c\u5c5e\u6027,\u5728 \u904d\u5386\u6587\u6863\u6811 \u548c \u641c\u7d22\u6587\u6863\u6811 \u4e2d\u6709\u8be6\u7ec6\u89e3\u91ca.\u73b0\u5728\u4ecb\u7ecd\u4e00\u4e0btag\u4e2d\u6700\u91cd\u8981\u7684\u5c5e\u6027: name\u548cattributes Name \u00b6 \u6bcf\u4e2atag\u90fd\u6709\u81ea\u5df1\u7684\u540d\u5b57,\u901a\u8fc7 .name \u6765\u83b7\u53d6: tag . name # u'b' \u5982\u679c\u6539\u53d8\u4e86tag\u7684name,\u90a3\u5c06\u5f71\u54cd\u6240\u6709\u901a\u8fc7\u5f53\u524dBeautiful Soup\u5bf9\u8c61\u751f\u6210\u7684HTML\u6587\u6863: tag . name = \"blockquote\" tag # <blockquote class=\"boldest\">Extremely bold</blockquote> Attributes \u00b6 \u4e00\u4e2atag\u53ef\u80fd\u6709\u5f88\u591a\u4e2a\u5c5e\u6027. tag <b class=\"boldest\"> \u6709\u4e00\u4e2a \u201cclass\u201d \u7684\u5c5e\u6027,\u503c\u4e3a \u201cboldest\u201d . tag\u7684\u5c5e\u6027\u7684\u64cd\u4f5c\u65b9\u6cd5\u4e0e\u5b57\u5178\u76f8\u540c: tag [ 'class' ] # u'boldest' \u4e5f\u53ef\u4ee5\u76f4\u63a5\u201d\u70b9\u201d\u53d6\u5c5e\u6027, \u6bd4\u5982: .attrs : tag . attrs # {u'class': u'boldest'} tag\u7684\u5c5e\u6027\u53ef\u4ee5\u88ab\u6dfb\u52a0,\u5220\u9664\u6216\u4fee\u6539. \u518d\u8bf4\u4e00\u6b21, tag\u7684\u5c5e\u6027\u64cd\u4f5c\u65b9\u6cd5\u4e0e\u5b57\u5178\u4e00\u6837 tag [ 'class' ] = 'verybold' tag [ 'id' ] = 1 tag # <blockquote class=\"verybold\" id=\"1\">Extremely bold</blockquote> del tag [ 'class' ] del tag [ 'id' ] tag # <blockquote>Extremely bold</blockquote> tag [ 'class' ] # KeyError: 'class' print ( tag . get ( 'class' )) # None \u591a\u503c\u5c5e\u6027 \u00b6 HTML 4\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u503c\u7684\u5c5e\u6027.\u5728HTML5\u4e2d\u79fb\u9664\u4e86\u4e00\u4e9b,\u5374\u589e\u52a0\u66f4\u591a.\u6700\u5e38\u89c1\u7684\u591a\u503c\u7684\u5c5e\u6027\u662f class (\u4e00\u4e2atag\u53ef\u4ee5\u6709\u591a\u4e2aCSS\u7684class). \u8fd8\u6709\u4e00\u4e9b\u5c5e\u6027 rel , rev , accept-charset , headers , accesskey . \u5728Beautiful Soup\u4e2d\u591a\u503c\u5c5e\u6027\u7684\u8fd4\u56de\u7c7b\u578b\u662flist: css_soup = BeautifulSoup ( '<p class=\"body strikeout\"></p>' ) css_soup . p [ 'class' ] # [\"body\", \"strikeout\"] css_soup = BeautifulSoup ( '<p class=\"body\"></p>' ) css_soup . p [ 'class' ] # [\"body\"] \u5982\u679c\u67d0\u4e2a\u5c5e\u6027\u770b\u8d77\u6765\u597d\u50cf\u6709\u591a\u4e2a\u503c,\u4f46\u5728\u4efb\u4f55\u7248\u672c\u7684HTML\u5b9a\u4e49\u4e2d\u90fd\u6ca1\u6709\u88ab\u5b9a\u4e49\u4e3a\u591a\u503c\u5c5e\u6027,\u90a3\u4e48Beautiful Soup\u4f1a\u5c06\u8fd9\u4e2a\u5c5e\u6027\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de id_soup = BeautifulSoup ( '<p id=\"my id\"></p>' ) id_soup . p [ 'id' ] # 'my id' \u5c06tag\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u65f6,\u591a\u503c\u5c5e\u6027\u4f1a\u5408\u5e76\u4e3a\u4e00\u4e2a\u503c rel_soup = BeautifulSoup ( '<p>Back to the <a rel=\"index\">homepage</a></p>' ) rel_soup . a [ 'rel' ] # ['index'] rel_soup . a [ 'rel' ] = [ 'index' , 'contents' ] print ( rel_soup . p ) # <p>Back to the <a rel=\"index contents\">homepage</a></p> \u5982\u679c\u8f6c\u6362\u7684\u6587\u6863\u662fXML\u683c\u5f0f,\u90a3\u4e48tag\u4e2d\u4e0d\u5305\u542b\u591a\u503c\u5c5e\u6027 xml_soup = BeautifulSoup ( '<p class=\"body strikeout\"></p>' , 'xml' ) xml_soup . p [ 'class' ] # u'body strikeout' \u53ef\u4ee5\u904d\u5386\u7684\u5b57\u7b26\u4e32 \u00b6 \u5b57\u7b26\u4e32\u5e38\u88ab\u5305\u542b\u5728tag\u5185.Beautiful Soup\u7528 NavigableString \u7c7b\u6765\u5305\u88c5tag\u4e2d\u7684\u5b57\u7b26\u4e32: tag . string # u'Extremely bold' type ( tag . string ) # <class 'bs4.element.NavigableString'> \u4e00\u4e2a NavigableString \u5b57\u7b26\u4e32\u4e0ePython\u4e2d\u7684Unicode\u5b57\u7b26\u4e32\u76f8\u540c,\u5e76\u4e14\u8fd8\u652f\u6301\u5305\u542b\u5728 \u904d\u5386\u6587\u6863\u6811 \u548c \u641c\u7d22\u6587\u6863\u6811 \u4e2d\u7684\u4e00\u4e9b\u7279\u6027. \u901a\u8fc7 unicode() \u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u5c06 NavigableString \u5bf9\u8c61\u8f6c\u6362\u6210Unicode\u5b57\u7b26\u4e32: unicode_string = unicode(tag.string) unicode_string # u'Extremely bold' type(unicode_string) # <type 'unicode'> tag\u4e2d\u5305\u542b\u7684\u5b57\u7b26\u4e32\u4e0d\u80fd\u7f16\u8f91,\u4f46\u662f\u53ef\u4ee5\u88ab\u66ff\u6362\u6210\u5176\u5b83\u7684\u5b57\u7b26\u4e32,\u7528 replace_with() \u65b9\u6cd5: tag.string.replace_with(\"No longer bold\") tag # <blockquote>No longer bold</blockquote> NavigableString \u5bf9\u8c61\u652f\u6301 \u904d\u5386\u6587\u6863\u6811 \u548c \u641c\u7d22\u6587\u6863\u6811 \u4e2d\u5b9a\u4e49\u7684\u5927\u90e8\u5206\u5c5e\u6027, \u5e76\u975e\u5168\u90e8.\u5c24\u5176\u662f,\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e0d\u80fd\u5305\u542b\u5176\u5b83\u5185\u5bb9(tag\u80fd\u591f\u5305\u542b\u5b57\u7b26\u4e32\u6216\u662f\u5176\u5b83tag),\u5b57\u7b26\u4e32\u4e0d\u652f\u6301 .contents \u6216 .string \u5c5e\u6027\u6216 find() \u65b9\u6cd5. \u5982\u679c\u60f3\u5728Beautiful Soup\u4e4b\u5916\u4f7f\u7528 NavigableString \u5bf9\u8c61,\u9700\u8981\u8c03\u7528 unicode() \u65b9\u6cd5,\u5c06\u8be5\u5bf9\u8c61\u8f6c\u6362\u6210\u666e\u901a\u7684Unicode\u5b57\u7b26\u4e32,\u5426\u5219\u5c31\u7b97Beautiful Soup\u5df2\u65b9\u6cd5\u5df2\u7ecf\u6267\u884c\u7ed3\u675f,\u8be5\u5bf9\u8c61\u7684\u8f93\u51fa\u4e5f\u4f1a\u5e26\u6709\u5bf9\u8c61\u7684\u5f15\u7528\u5730\u5740.\u8fd9\u6837\u4f1a\u6d6a\u8d39\u5185\u5b58. BeautifulSoup \u00b6 BeautifulSoup \u5bf9\u8c61\u8868\u793a\u7684\u662f\u4e00\u4e2a\u6587\u6863\u7684\u5168\u90e8\u5185\u5bb9.\u5927\u90e8\u5206\u65f6\u5019,\u53ef\u4ee5\u628a\u5b83\u5f53\u4f5c Tag \u5bf9\u8c61,\u5b83\u652f\u6301 \u904d\u5386\u6587\u6863\u6811 \u548c \u641c\u7d22\u6587\u6863\u6811 \u4e2d\u63cf\u8ff0\u7684\u5927\u90e8\u5206\u7684\u65b9\u6cd5. \u56e0\u4e3a BeautifulSoup \u5bf9\u8c61\u5e76\u4e0d\u662f\u771f\u6b63\u7684HTML\u6216XML\u7684tag,\u6240\u4ee5\u5b83\u6ca1\u6709name\u548cattribute\u5c5e\u6027.\u4f46\u6709\u65f6\u67e5\u770b\u5b83\u7684 .name \u5c5e\u6027\u662f\u5f88\u65b9\u4fbf\u7684,\u6240\u4ee5 BeautifulSoup \u5bf9\u8c61\u5305\u542b\u4e86\u4e00\u4e2a\u503c\u4e3a \u201c[document]\u201d \u7684\u7279\u6b8a\u5c5e\u6027 .name soup . name # u'[document]' \u6ce8\u91ca\u53ca\u7279\u6b8a\u5b57\u7b26\u4e32 \u00b6 Tag , NavigableString , BeautifulSoup \u51e0\u4e4e\u8986\u76d6\u4e86html\u548cxml\u4e2d\u7684\u6240\u6709\u5185\u5bb9,\u4f46\u662f\u8fd8\u6709\u4e00\u4e9b\u7279\u6b8a\u5bf9\u8c61.\u5bb9\u6613\u8ba9\u4eba\u62c5\u5fc3\u7684\u5185\u5bb9\u662f\u6587\u6863\u7684\u6ce8\u91ca\u90e8\u5206: markup = \"<b><!--Hey, buddy. Want to buy a used parser?--></b>\" soup = BeautifulSoup ( markup ) comment = soup . b . string type ( comment ) # <class 'bs4.element.Comment'> Comment \u5bf9\u8c61\u662f\u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684 NavigableString \u5bf9\u8c61: comment # u'Hey, buddy. Want to buy a used parser' \u4f46\u662f\u5f53\u5b83\u51fa\u73b0\u5728HTML\u6587\u6863\u4e2d\u65f6, Comment \u5bf9\u8c61\u4f1a\u4f7f\u7528\u7279\u6b8a\u7684\u683c\u5f0f\u8f93\u51fa: print ( soup . b . prettify ()) # <b> # <!--Hey, buddy. Want to buy a used parser?--> # </b> Beautiful Soup\u4e2d\u5b9a\u4e49\u7684\u5176\u5b83\u7c7b\u578b\u90fd\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728XML\u7684\u6587\u6863\u4e2d: CData , ProcessingInstruction , Declaration , Doctype .\u4e0e Comment \u5bf9\u8c61\u7c7b\u4f3c,\u8fd9\u4e9b\u7c7b\u90fd\u662f NavigableString \u7684\u5b50\u7c7b,\u53ea\u662f\u6dfb\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u65b9\u6cd5\u7684\u5b57\u7b26\u4e32\u72ec\u4eab.\u4e0b\u9762\u662f\u7528CDATA\u6765\u66ff\u4ee3\u6ce8\u91ca\u7684\u4f8b\u5b50: from bs4 import CData cdata = CData(\"A CDATA block\") comment.replace_with(cdata) print(soup.b.prettify()) # <b> # <![CDATA[A CDATA block]]> # </b> \u904d\u5386\u6587\u6863\u6811 \u00b6 \u8fd8\u62ff\u201d\u7231\u4e3d\u4e1d\u68a6\u6e38\u4ed9\u5883\u201d\u7684\u6587\u6863\u6765\u505a\u4f8b\u5b50: html_doc = \"\"\" <html><head><title>The Dormouse's story</title></head> <body> <p class=\"title\"><b>The Dormouse's story</b></p> <p class=\"story\">Once upon a time there were three little sisters; and their names were <a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>, <a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and <a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>; and they lived at the bottom of a well.</p> <p class=\"story\">...</p> \"\"\" from bs4 import BeautifulSoup soup = BeautifulSoup ( html_doc , 'html.parser' ) \u901a\u8fc7\u8fd9\u6bb5\u4f8b\u5b50\u6765\u6f14\u793a\u600e\u6837\u4ece\u6587\u6863\u7684\u4e00\u6bb5\u5185\u5bb9\u627e\u5230\u53e6\u4e00\u6bb5\u5185\u5bb9 \u5b50\u8282\u70b9 \u00b6 \u4e00\u4e2aTag\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u5b57\u7b26\u4e32\u6216\u5176\u5b83\u7684Tag,\u8fd9\u4e9b\u90fd\u662f\u8fd9\u4e2aTag\u7684\u5b50\u8282\u70b9.Beautiful Soup\u63d0\u4f9b\u4e86\u8bb8\u591a\u64cd\u4f5c\u548c\u904d\u5386\u5b50\u8282\u70b9\u7684\u5c5e\u6027. \u6ce8\u610f: Beautiful Soup\u4e2d\u5b57\u7b26\u4e32\u8282\u70b9\u4e0d\u652f\u6301\u8fd9\u4e9b\u5c5e\u6027,\u56e0\u4e3a\u5b57\u7b26\u4e32\u6ca1\u6709\u5b50\u8282\u70b9 tag\u7684\u540d\u5b57 \u00b6 \u64cd\u4f5c\u6587\u6863\u6811\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u544a\u8bc9\u5b83\u4f60\u60f3\u83b7\u53d6\u7684tag\u7684name.\u5982\u679c\u60f3\u83b7\u53d6 \u6807\u7b7e,\u53ea\u8981\u7528 soup.head : soup . head # <head><title>The Dormouse's story</title></head> soup . title # <title>The Dormouse's story</title> \u8fd9\u662f\u4e2a\u83b7\u53d6tag\u7684\u5c0f\u7a8d\u95e8,\u53ef\u4ee5\u5728\u6587\u6863\u6811\u7684tag\u4e2d\u591a\u6b21\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5.\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u83b7\u53d6 \u6807\u7b7e\u4e2d\u7684\u7b2c\u4e00\u4e2a \u6807\u7b7e: soup . body . b # <b>The Dormouse's story</b> \u901a\u8fc7\u70b9\u53d6\u5c5e\u6027\u7684\u65b9\u5f0f\u53ea\u80fd\u83b7\u5f97\u5f53\u524d\u540d\u5b57\u7684\u7b2c\u4e00\u4e2atag: soup . a # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> \u5982\u679c\u60f3\u8981\u5f97\u5230\u6240\u6709\u7684 \u6807\u7b7e,\u6216\u662f\u901a\u8fc7\u540d\u5b57\u5f97\u5230\u6bd4\u4e00\u4e2atag\u66f4\u591a\u7684\u5185\u5bb9\u7684\u65f6\u5019,\u5c31\u9700\u8981\u7528\u5230 Searching the tree \u4e2d\u63cf\u8ff0\u7684\u65b9\u6cd5,\u6bd4\u5982: find_all() soup . find_all ( 'a' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] .contents \u548c .children \u00b6 tag\u7684 .contents \u5c5e\u6027\u53ef\u4ee5\u5c06tag\u7684\u5b50\u8282\u70b9\u4ee5\u5217\u8868\u7684\u65b9\u5f0f\u8f93\u51fa: head_tag = soup . head head_tag # <head><title>The Dormouse's story</title></head> head_tag . contents [ < title > The Dormouse 's story</title>] title_tag = head_tag . contents [ 0 ] title_tag # <title>The Dormouse's story</title> title_tag . contents # [u'The Dormouse's story'] BeautifulSoup \u5bf9\u8c61\u672c\u8eab\u4e00\u5b9a\u4f1a\u5305\u542b\u5b50\u8282\u70b9,\u4e5f\u5c31\u662f\u8bf4 \u6807\u7b7e\u4e5f\u662f BeautifulSoup \u5bf9\u8c61\u7684\u5b50\u8282\u70b9: len ( soup . contents ) # 1 soup . contents [ 0 ] . name # u'html' \u5b57\u7b26\u4e32\u6ca1\u6709 .contents \u5c5e\u6027,\u56e0\u4e3a\u5b57\u7b26\u4e32\u6ca1\u6709\u5b50\u8282\u70b9: text = title_tag . contents [ 0 ] text . contents # AttributeError: 'NavigableString' object has no attribute 'contents' \u901a\u8fc7tag\u7684 .children \u751f\u6210\u5668,\u53ef\u4ee5\u5bf9tag\u7684\u5b50\u8282\u70b9\u8fdb\u884c\u5faa\u73af: for child in title_tag . children : print ( child ) # The Dormouse's story .descendants \u00b6 .contents \u548c .children \u5c5e\u6027\u4ec5\u5305\u542btag\u7684\u76f4\u63a5\u5b50\u8282\u70b9.\u4f8b\u5982, \u6807\u7b7e\u53ea\u6709\u4e00\u4e2a\u76f4\u63a5\u5b50\u8282\u70b9 head_tag . contents # [<title>The Dormouse's story</title>] \u4f46\u662f \u6807\u7b7e\u4e5f\u5305\u542b\u4e00\u4e2a\u5b50\u8282\u70b9:\u5b57\u7b26\u4e32 \u201cThe Dormouse\u2019s story\u201d,\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b57\u7b26\u4e32 \u201cThe Dormouse\u2019s story\u201d\u4e5f\u5c5e\u4e8e \u6807\u7b7e\u7684\u5b50\u5b59\u8282\u70b9. .descendants \u5c5e\u6027\u53ef\u4ee5\u5bf9\u6240\u6709tag\u7684\u5b50\u5b59\u8282\u70b9\u8fdb\u884c\u9012\u5f52\u5faa\u73af [ 5] : for child in head_tag . descendants : print ( child ) # <title>The Dormouse's story</title> # The Dormouse's story \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d, \u6807\u7b7e\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9,\u4f46\u662f\u67092\u4e2a\u5b50\u5b59\u8282\u70b9: \u8282\u70b9\u548c \u7684\u5b50\u8282\u70b9, BeautifulSoup \u6709\u4e00\u4e2a\u76f4\u63a5\u5b50\u8282\u70b9( \u8282\u70b9),\u5374\u6709\u5f88\u591a\u5b50\u5b59\u8282\u70b9: len ( list ( soup . children )) # 1 len ( list ( soup . descendants )) # 25 .string \u00b6 \u5982\u679ctag\u53ea\u6709\u4e00\u4e2a NavigableString \u7c7b\u578b\u5b50\u8282\u70b9,\u90a3\u4e48\u8fd9\u4e2atag\u53ef\u4ee5\u4f7f\u7528 .string \u5f97\u5230\u5b50\u8282\u70b9: title_tag . string # u'The Dormouse's story' \u5982\u679c\u4e00\u4e2atag\u4ec5\u6709\u4e00\u4e2a\u5b50\u8282\u70b9,\u90a3\u4e48\u8fd9\u4e2atag\u4e5f\u53ef\u4ee5\u4f7f\u7528 .string \u65b9\u6cd5,\u8f93\u51fa\u7ed3\u679c\u4e0e\u5f53\u524d\u552f\u4e00\u5b50\u8282\u70b9\u7684 .string \u7ed3\u679c\u76f8\u540c: head_tag . contents # [<title>The Dormouse's story</title>] head_tag . string # u'The Dormouse's story' \u5982\u679ctag\u5305\u542b\u4e86\u591a\u4e2a\u5b50\u8282\u70b9,tag\u5c31\u65e0\u6cd5\u786e\u5b9a .string \u65b9\u6cd5\u5e94\u8be5\u8c03\u7528\u54ea\u4e2a\u5b50\u8282\u70b9\u7684\u5185\u5bb9, .string \u7684\u8f93\u51fa\u7ed3\u679c\u662f None : print ( soup . html . string ) # None .strings \u548c stripped_strings \u00b6 \u5982\u679ctag\u4e2d\u5305\u542b\u591a\u4e2a\u5b57\u7b26\u4e32 [ 2] ,\u53ef\u4ee5\u4f7f\u7528 .strings \u6765\u5faa\u73af\u83b7\u53d6: for string in soup . strings : print ( repr ( string )) # u\"The Dormouse's story\" # u'\\n\\n' # u\"The Dormouse's story\" # u'\\n\\n' # u'Once upon a time there were three little sisters; and their names were\\n' # u'Elsie' # u',\\n' # u'Lacie' # u' and\\n' # u'Tillie' # u';\\nand they lived at the bottom of a well.' # u'\\n\\n' # u'...' # u'\\n' \u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u4e86\u5f88\u591a\u7a7a\u683c\u6216\u7a7a\u884c,\u4f7f\u7528 .stripped_strings \u53ef\u4ee5\u53bb\u9664\u591a\u4f59\u7a7a\u767d\u5185\u5bb9: for string in soup . stripped_strings : print ( repr ( string )) # u\"The Dormouse's story\" # u\"The Dormouse's story\" # u'Once upon a time there were three little sisters; and their names were' # u'Elsie' # u',' # u'Lacie' # u'and' # u'Tillie' # u';\\nand they lived at the bottom of a well.' # u'...' \u5168\u90e8\u662f\u7a7a\u683c\u7684\u884c\u4f1a\u88ab\u5ffd\u7565\u6389,\u6bb5\u9996\u548c\u6bb5\u672b\u7684\u7a7a\u767d\u4f1a\u88ab\u5220\u9664 \u7236\u8282\u70b9 \u00b6 \u7ee7\u7eed\u5206\u6790\u6587\u6863\u6811,\u6bcf\u4e2atag\u6216\u5b57\u7b26\u4e32\u90fd\u6709\u7236\u8282\u70b9:\u88ab\u5305\u542b\u5728\u67d0\u4e2atag\u4e2d .parent \u00b6 \u901a\u8fc7 .parent \u5c5e\u6027\u6765\u83b7\u53d6\u67d0\u4e2a\u5143\u7d20\u7684\u7236\u8282\u70b9.\u5728\u4f8b\u5b50\u201c\u7231\u4e3d\u4e1d\u201d\u7684\u6587\u6863\u4e2d, \u6807\u7b7e\u662f \u6807\u7b7e\u7684\u7236\u8282\u70b9: title_tag = soup . title title_tag # <title>The Dormouse's story</title> title_tag . parent # <head><title>The Dormouse's story</title></head> \u6587\u6863title\u7684\u5b57\u7b26\u4e32\u4e5f\u6709\u7236\u8282\u70b9: \u6807\u7b7e title_tag . string . parent # <title>The Dormouse's story</title> \u6587\u6863\u7684\u9876\u5c42\u8282\u70b9\u6bd4\u5982 \u7684\u7236\u8282\u70b9\u662f BeautifulSoup \u5bf9\u8c61: html_tag = soup . html type ( html_tag . parent ) # <class 'bs4.BeautifulSoup'> BeautifulSoup \u5bf9\u8c61\u7684 .parent \u662fNone: print(soup.parent) # None .parents \u00b6 \u901a\u8fc7\u5143\u7d20\u7684 .parents \u5c5e\u6027\u53ef\u4ee5\u9012\u5f52\u5f97\u5230\u5143\u7d20\u7684\u6240\u6709\u7236\u8f88\u8282\u70b9,\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e86 .parents \u65b9\u6cd5\u904d\u5386\u4e86 \u6807\u7b7e\u5230\u6839\u8282\u70b9\u7684\u6240\u6709\u8282\u70b9. link = soup . a link # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> for parent in link . parents : if parent is None : print ( parent ) else : print ( parent . name ) # p # body # html # [document] # None \u5144\u5f1f\u8282\u70b9 \u00b6 \u770b\u4e00\u6bb5\u7b80\u5355\u7684\u4f8b\u5b50: sibling_soup = BeautifulSoup ( \"<a><b>text1</b><c>text2</c></b></a>\" ) print ( sibling_soup . prettify ()) # <html> # <body> # <a> # <b> # text1 # </b> # <c> # text2 # </c> # </a> # </body> # </html> \u56e0\u4e3a \u6807\u7b7e\u548c \u6807\u7b7e\u662f\u540c\u4e00\u5c42:\u4ed6\u4eec\u662f\u540c\u4e00\u4e2a\u5143\u7d20\u7684\u5b50\u8282\u70b9,\u6240\u4ee5 \u548c \u53ef\u4ee5\u88ab\u79f0\u4e3a\u5144\u5f1f\u8282\u70b9.\u4e00\u6bb5\u6587\u6863\u4ee5\u6807\u51c6\u683c\u5f0f\u8f93\u51fa\u65f6,\u5144\u5f1f\u8282\u70b9\u6709\u76f8\u540c\u7684\u7f29\u8fdb\u7ea7\u522b.\u5728\u4ee3\u7801\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u5173\u7cfb. .next_sibling \u548c .previous_sibling \u00b6 \u5728\u6587\u6863\u6811\u4e2d,\u4f7f\u7528 .next_sibling \u548c .previous_sibling \u5c5e\u6027\u6765\u67e5\u8be2\u5144\u5f1f\u8282\u70b9: sibling_soup . b . next_sibling # <c>text2</c> sibling_soup . c . previous_sibling # <b>text1</b> \u6807\u7b7e\u6709 .next_sibling \u5c5e\u6027,\u4f46\u662f\u6ca1\u6709 .previous_sibling \u5c5e\u6027,\u56e0\u4e3a \u6807\u7b7e\u5728\u540c\u7ea7\u8282\u70b9\u4e2d\u662f\u7b2c\u4e00\u4e2a.\u540c\u7406, \u6807\u7b7e\u6709 .previous_sibling \u5c5e\u6027,\u5374\u6ca1\u6709 .next_sibling \u5c5e\u6027: print ( sibling_soup . b . previous_sibling ) # None print ( sibling_soup . c . next_sibling ) # None \u4f8b\u5b50\u4e2d\u7684\u5b57\u7b26\u4e32\u201ctext1\u201d\u548c\u201ctext2\u201d\u4e0d\u662f\u5144\u5f1f\u8282\u70b9,\u56e0\u4e3a\u5b83\u4eec\u7684\u7236\u8282\u70b9\u4e0d\u540c: sibling_soup . b . string # u'text1' print ( sibling_soup . b . string . next_sibling ) # None \u5b9e\u9645\u6587\u6863\u4e2d\u7684tag\u7684 .next_sibling \u548c .previous_sibling \u5c5e\u6027\u901a\u5e38\u662f\u5b57\u7b26\u4e32\u6216\u7a7a\u767d. \u770b\u770b\u201c\u7231\u4e3d\u4e1d\u201d\u6587\u6863: < a href = \"http://example.com/elsie\" class = \"sister\" id = \"link1\" > Elsie </ a > < a href = \"http://example.com/lacie\" class = \"sister\" id = \"link2\" > Lacie </ a > < a href = \"http://example.com/tillie\" class = \"sister\" id = \"link3\" > Tillie </ a > \u5982\u679c\u4ee5\u4e3a\u7b2c\u4e00\u4e2a \u6807\u7b7e\u7684 .next_sibling \u7ed3\u679c\u662f\u7b2c\u4e8c\u4e2a \u6807\u7b7e,\u90a3\u5c31\u9519\u4e86,\u771f\u5b9e\u7ed3\u679c\u662f\u7b2c\u4e00\u4e2a \u6807\u7b7e\u548c\u7b2c\u4e8c\u4e2a \u6807\u7b7e\u4e4b\u95f4\u7684\u987f\u53f7\u548c\u6362\u884c\u7b26: link = soup . a link # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> link . next_sibling # u',\\n' \u7b2c\u4e8c\u4e2a \u6807\u7b7e\u662f\u987f\u53f7\u7684 .next_sibling \u5c5e\u6027: link . next_sibling . next_sibling # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a> .next_siblings \u548c .previous_siblings \u00b6 \u901a\u8fc7 .next_siblings \u548c .previous_siblings \u5c5e\u6027\u53ef\u4ee5\u5bf9\u5f53\u524d\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9\u8fed\u4ee3\u8f93\u51fa: for sibling in soup . a . next_siblings : print ( repr ( sibling )) # u',\\n' # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a> # u' and\\n' # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a> # u'; and they lived at the bottom of a well.' # None for sibling in soup . find ( id = \"link3\" ) . previous_siblings : print ( repr ( sibling )) # ' and\\n' # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a> # u',\\n' # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> # u'Once upon a time there were three little sisters; and their names were\\n' # None \u56de\u9000\u548c\u524d\u8fdb \u00b6 \u770b\u4e00\u4e0b\u201c\u7231\u4e3d\u4e1d\u201d \u6587\u6863: < html >< head >< title > The Dormouse's story </ title ></ head > < p class = \"title\" >< b > The Dormouse's story </ b ></ p > HTML\u89e3\u6790\u5668\u628a\u8fd9\u6bb5\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u4e00\u8fde\u4e32\u7684\u4e8b\u4ef6: \u201c\u6253\u5f00 \u6807\u7b7e\u201d,\u201d\u6253\u5f00\u4e00\u4e2a \u6807\u7b7e\u201d,\u201d\u6253\u5f00\u4e00\u4e2a \u6807\u7b7e\u201d,\u201d\u6dfb\u52a0\u4e00\u6bb5\u5b57\u7b26\u4e32\u201d,\u201d\u5173\u95ed \u6807\u7b7e\u201d,\u201d\u6253\u5f00 \u6807\u7b7e\u201d,\u7b49\u7b49.Beautiful Soup\u63d0\u4f9b\u4e86\u91cd\u73b0\u89e3\u6790\u5668\u521d\u59cb\u5316\u8fc7\u7a0b\u7684\u65b9\u6cd5. .next_element \u548c .previous_element \u00b6 .next_element \u5c5e\u6027\u6307\u5411\u89e3\u6790\u8fc7\u7a0b\u4e2d\u4e0b\u4e00\u4e2a\u88ab\u89e3\u6790\u7684\u5bf9\u8c61(\u5b57\u7b26\u4e32\u6216tag),\u7ed3\u679c\u53ef\u80fd\u4e0e .next_sibling \u76f8\u540c,\u4f46\u901a\u5e38\u662f\u4e0d\u4e00\u6837\u7684. \u8fd9\u662f\u201c\u7231\u4e3d\u4e1d\u201d\u6587\u6863\u4e2d\u6700\u540e\u4e00\u4e2a \u6807\u7b7e,\u5b83\u7684 .next_sibling \u7ed3\u679c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32,\u56e0\u4e3a\u5f53\u524d\u7684\u89e3\u6790\u8fc7\u7a0b [ 2] \u56e0\u4e3a\u5f53\u524d\u7684\u89e3\u6790\u8fc7\u7a0b\u56e0\u4e3a\u9047\u5230\u4e86 \u6807\u7b7e\u800c\u4e2d\u65ad\u4e86: last_a_tag = soup . find ( \"a\" , id = \"link3\" ) last_a_tag # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a> last_a_tag . next_sibling # '; and they lived at the bottom of a well.' \u4f46\u8fd9\u4e2a \u6807\u7b7e\u7684 .next_element \u5c5e\u6027\u7ed3\u679c\u662f\u5728 \u6807\u7b7e\u88ab\u89e3\u6790\u4e4b\u540e\u7684\u89e3\u6790\u5185\u5bb9,\u4e0d\u662f \u6807\u7b7e\u540e\u7684\u53e5\u5b50\u90e8\u5206,\u5e94\u8be5\u662f\u5b57\u7b26\u4e32\u201dTillie\u201d: last_a_tag . next_element # u'Tillie' \u8fd9\u662f\u56e0\u4e3a\u5728\u539f\u59cb\u6587\u6863\u4e2d,\u5b57\u7b26\u4e32\u201cTillie\u201d \u5728\u5206\u53f7\u524d\u51fa\u73b0,\u89e3\u6790\u5668\u5148\u8fdb\u5165 \u6807\u7b7e,\u7136\u540e\u662f\u5b57\u7b26\u4e32\u201cTillie\u201d,\u7136\u540e\u5173\u95ed \u6807\u7b7e,\u7136\u540e\u662f\u5206\u53f7\u548c\u5269\u4f59\u90e8\u5206.\u5206\u53f7\u4e0e \u6807\u7b7e\u5728\u540c\u4e00\u5c42\u7ea7,\u4f46\u662f\u5b57\u7b26\u4e32\u201cTillie\u201d\u4f1a\u88ab\u5148\u89e3\u6790. .previous_element \u5c5e\u6027\u521a\u597d\u4e0e .next_element \u76f8\u53cd,\u5b83\u6307\u5411\u5f53\u524d\u88ab\u89e3\u6790\u7684\u5bf9\u8c61\u7684\u524d\u4e00\u4e2a\u89e3\u6790\u5bf9\u8c61: last_a_tag . previous_element # u' and\\n' last_a_tag . previous_element . next_element # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a> .next_elements \u548c .previous_elements \u00b6 \u901a\u8fc7 .next_elements \u548c .previous_elements \u7684\u8fed\u4ee3\u5668\u5c31\u53ef\u4ee5\u5411\u524d\u6216\u5411\u540e\u8bbf\u95ee\u6587\u6863\u7684\u89e3\u6790\u5185\u5bb9,\u5c31\u597d\u50cf\u6587\u6863\u6b63\u5728\u88ab\u89e3\u6790\u4e00\u6837: for element in last_a_tag . next_elements : print ( repr ( element )) # u'Tillie' # u';\\nand they lived at the bottom of a well.' # u'\\n\\n' # <p class=\"story\">...</p> # u'...' # u'\\n' # None \u641c\u7d22\u6587\u6863\u6811 \u00b6 Beautiful Soup\u5b9a\u4e49\u4e86\u5f88\u591a\u641c\u7d22\u65b9\u6cd5,\u8fd9\u91cc\u7740\u91cd\u4ecb\u7ecd2\u4e2a: find() \u548c find_all() .\u5176\u5b83\u65b9\u6cd5\u7684\u53c2\u6570\u548c\u7528\u6cd5\u7c7b\u4f3c,\u8bf7\u8bfb\u8005\u4e3e\u4e00\u53cd\u4e09. \u518d\u4ee5\u201c\u7231\u4e3d\u4e1d\u201d\u6587\u6863\u4f5c\u4e3a\u4f8b\u5b50: html_doc = \"\"\" <html><head><title>The Dormouse's story</title></head> <body> <p class=\"title\"><b>The Dormouse's story</b></p> <p class=\"story\">Once upon a time there were three little sisters; and their names were <a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>, <a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and <a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>; and they lived at the bottom of a well.</p> <p class=\"story\">...</p> \"\"\" from bs4 import BeautifulSoup soup = BeautifulSoup ( html_doc , 'html.parser' ) \u4f7f\u7528 find_all() \u7c7b\u4f3c\u7684\u65b9\u6cd5\u53ef\u4ee5\u67e5\u627e\u5230\u60f3\u8981\u67e5\u627e\u7684\u6587\u6863\u5185\u5bb9 \u8fc7\u6ee4\u5668 \u00b6 \u4ecb\u7ecd find_all() \u65b9\u6cd5\u524d,\u5148\u4ecb\u7ecd\u4e00\u4e0b\u8fc7\u6ee4\u5668\u7684\u7c7b\u578b [ 3] ,\u8fd9\u4e9b\u8fc7\u6ee4\u5668\u8d2f\u7a7f\u6574\u4e2a\u641c\u7d22\u7684API.\u8fc7\u6ee4\u5668\u53ef\u4ee5\u88ab\u7528\u5728tag\u7684name\u4e2d,\u8282\u70b9\u7684\u5c5e\u6027\u4e2d,\u5b57\u7b26\u4e32\u4e2d\u6216\u4ed6\u4eec\u7684\u6df7\u5408\u4e2d. \u5b57\u7b26\u4e32 \u00b6 \u6700\u7b80\u5355\u7684\u8fc7\u6ee4\u5668\u662f\u5b57\u7b26\u4e32.\u5728\u641c\u7d22\u65b9\u6cd5\u4e2d\u4f20\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570,Beautiful Soup\u4f1a\u67e5\u627e\u4e0e\u5b57\u7b26\u4e32\u5b8c\u6574\u5339\u914d\u7684\u5185\u5bb9,\u4e0b\u9762\u7684\u4f8b\u5b50\u7528\u4e8e\u67e5\u627e\u6587\u6863\u4e2d\u6240\u6709\u7684 \u6807\u7b7e: soup . find_all ( 'b' ) # [<b>The Dormouse's story</b>] \u5982\u679c\u4f20\u5165\u5b57\u8282\u7801\u53c2\u6570,Beautiful Soup\u4f1a\u5f53\u4f5cUTF-8\u7f16\u7801,\u53ef\u4ee5\u4f20\u5165\u4e00\u6bb5Unicode \u7f16\u7801\u6765\u907f\u514dBeautiful Soup\u89e3\u6790\u7f16\u7801\u51fa\u9519 \u6b63\u5219\u8868\u8fbe\u5f0f \u00b6 \u5982\u679c\u4f20\u5165\u6b63\u5219\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u53c2\u6570,Beautiful Soup\u4f1a\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 search() \u6765\u5339\u914d\u5185\u5bb9.\u4e0b\u9762\u4f8b\u5b50\u4e2d\u627e\u51fa\u6240\u6709\u4ee5b\u5f00\u5934\u7684\u6807\u7b7e,\u8fd9\u8868\u793a \u548c \u6807\u7b7e\u90fd\u5e94\u8be5\u88ab\u627e\u5230: import re for tag in soup . find_all ( re . compile ( \"^b\" )): print ( tag . name ) # body # b \u4e0b\u9762\u4ee3\u7801\u627e\u51fa\u6240\u6709\u540d\u5b57\u4e2d\u5305\u542b\u201dt\u201d\u7684\u6807\u7b7e: for tag in soup . find_all ( re . compile ( \"t\" )): print ( tag . name ) # html # title \u5217\u8868 \u00b6 \u5982\u679c\u4f20\u5165\u5217\u8868\u53c2\u6570,Beautiful Soup\u4f1a\u5c06\u4e0e\u5217\u8868\u4e2d\u4efb\u4e00\u5143\u7d20\u5339\u914d\u7684\u5185\u5bb9\u8fd4\u56de.\u4e0b\u9762\u4ee3\u7801\u627e\u5230\u6587\u6863\u4e2d\u6240\u6709 \u6807\u7b7e\u548c \u6807\u7b7e: soup . find_all ([ \"a\" , \"b\" ]) # [<b>The Dormouse's story</b>, # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] True \u00b6 True \u53ef\u4ee5\u5339\u914d\u4efb\u4f55\u503c,\u4e0b\u9762\u4ee3\u7801\u67e5\u627e\u5230\u6240\u6709\u7684tag,\u4f46\u662f\u4e0d\u4f1a\u8fd4\u56de\u5b57\u7b26\u4e32\u8282\u70b9 for tag in soup . find_all ( True ): print ( tag . name ) # html # head # title # body # p # b # p # a # a # a # p \u65b9\u6cd5 \u00b6 \u5982\u679c\u6ca1\u6709\u5408\u9002\u8fc7\u6ee4\u5668,\u90a3\u4e48\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5,\u65b9\u6cd5\u53ea\u63a5\u53d7\u4e00\u4e2a\u5143\u7d20\u53c2\u6570 [ 4] ,\u5982\u679c\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de True \u8868\u793a\u5f53\u524d\u5143\u7d20\u5339\u914d\u5e76\u4e14\u88ab\u627e\u5230,\u5982\u679c\u4e0d\u662f\u5219\u53cd\u56de False \u4e0b\u9762\u65b9\u6cd5\u6821\u9a8c\u4e86\u5f53\u524d\u5143\u7d20,\u5982\u679c\u5305\u542b class \u5c5e\u6027\u5374\u4e0d\u5305\u542b id \u5c5e\u6027,\u90a3\u4e48\u5c06\u8fd4\u56de True : def has_class_but_no_id ( tag ): return tag . has_attr ( 'class' ) and not tag . has_attr ( 'id' ) \u5c06\u8fd9\u4e2a\u65b9\u6cd5\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 find_all() \u65b9\u6cd5,\u5c06\u5f97\u5230\u6240\u6709 \u6807\u7b7e: soup . find_all ( has_class_but_no_id ) # [<p class=\"title\"><b>The Dormouse's story</b></p>, # <p class=\"story\">Once upon a time there were...</p>, # <p class=\"story\">...</p>] \u8fd4\u56de\u7ed3\u679c\u4e2d\u53ea\u6709 \u6807\u7b7e\u6ca1\u6709 \u6807\u7b7e,\u56e0\u4e3a \u6807\u7b7e\u8fd8\u5b9a\u4e49\u4e86\u201did\u201d,\u6ca1\u6709\u8fd4\u56de \u548c ,\u56e0\u4e3a \u548c \u4e2d\u6ca1\u6709\u5b9a\u4e49\u201dclass\u201d\u5c5e\u6027. \u901a\u8fc7\u4e00\u4e2a\u65b9\u6cd5\u6765\u8fc7\u6ee4\u4e00\u7c7b\u6807\u7b7e\u5c5e\u6027\u7684\u65f6\u5019, \u8fd9\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u8981\u88ab\u8fc7\u6ee4\u7684\u5c5e\u6027\u7684\u503c, \u800c\u4e0d\u662f\u8fd9\u4e2a\u6807\u7b7e. \u4e0b\u9762\u7684\u4f8b\u5b50\u662f\u627e\u51fa href \u5c5e\u6027\u4e0d\u7b26\u5408\u6307\u5b9a\u6b63\u5219\u7684 a \u6807\u7b7e. def not_lacie ( href ): return href and not re . compile ( \"lacie\" ) . search ( href ) soup . find_all ( href = not_lacie ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] \u6807\u7b7e\u8fc7\u6ee4\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u590d\u6742\u65b9\u6cd5. \u4e0b\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u8fc7\u6ee4\u51fa\u524d\u540e\u90fd\u6709\u6587\u5b57\u7684\u6807\u7b7e. from bs4 import NavigableString def surrounded_by_strings ( tag ): return ( isinstance ( tag . next_element , NavigableString ) and isinstance ( tag . previous_element , NavigableString )) for tag in soup . find_all ( surrounded_by_strings ): print tag . name # p # a # a # a # p \u73b0\u5728\u6765\u4e86\u89e3\u4e00\u4e0b\u641c\u7d22\u65b9\u6cd5\u7684\u7ec6\u8282 find_all() \u00b6 find_all( name , attrs , recursive , string , **kwargs ) find_all() \u65b9\u6cd5\u641c\u7d22\u5f53\u524dtag\u7684\u6240\u6709tag\u5b50\u8282\u70b9,\u5e76\u5224\u65ad\u662f\u5426\u7b26\u5408\u8fc7\u6ee4\u5668\u7684\u6761\u4ef6.\u8fd9\u91cc\u6709\u51e0\u4e2a\u4f8b\u5b50: soup . find_all ( \"title\" ) # [<title>The Dormouse's story</title>] soup . find_all ( \"p\" , \"title\" ) # [<p class=\"title\"><b>The Dormouse's story</b></p>] soup . find_all ( \"a\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . find_all ( id = \"link2\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] import re soup . find ( string = re . compile ( \"sisters\" )) # u'Once upon a time there were three little sisters; and their names were\\n' \u6709\u51e0\u4e2a\u65b9\u6cd5\u5f88\u76f8\u4f3c,\u8fd8\u6709\u51e0\u4e2a\u65b9\u6cd5\u662f\u65b0\u7684,\u53c2\u6570\u4e2d\u7684 string \u548c id \u662f\u4ec0\u4e48\u542b\u4e49? \u4e3a\u4ec0\u4e48 find_all(\"p\", \"title\") \u8fd4\u56de\u7684\u662fCSS Class\u4e3a\u201dtitle\u201d\u7684 \u6807\u7b7e? \u6211\u4eec\u6765\u4ed4\u7ec6\u770b\u4e00\u4e0b find_all() \u7684\u53c2\u6570 name \u53c2\u6570 \u00b6 name \u53c2\u6570\u53ef\u4ee5\u67e5\u627e\u6240\u6709\u540d\u5b57\u4e3a name \u7684tag,\u5b57\u7b26\u4e32\u5bf9\u8c61\u4f1a\u88ab\u81ea\u52a8\u5ffd\u7565\u6389. \u7b80\u5355\u7684\u7528\u6cd5\u5982\u4e0b: soup . find_all ( \"title\" ) # [<title>The Dormouse's story</title>] \u91cd\u7533: \u641c\u7d22 name \u53c2\u6570\u7684\u503c\u53ef\u4ee5\u4f7f\u4efb\u4e00\u7c7b\u578b\u7684 \u8fc7\u6ee4\u5668 ,\u5b57\u7b26\u7a9c,\u6b63\u5219\u8868\u8fbe\u5f0f,\u5217\u8868,\u65b9\u6cd5\u6216\u662f True . keyword \u53c2\u6570 \u00b6 \u5982\u679c\u4e00\u4e2a\u6307\u5b9a\u540d\u5b57\u7684\u53c2\u6570\u4e0d\u662f\u641c\u7d22\u5185\u7f6e\u7684\u53c2\u6570\u540d,\u641c\u7d22\u65f6\u4f1a\u628a\u8be5\u53c2\u6570\u5f53\u4f5c\u6307\u5b9a\u540d\u5b57tag\u7684\u5c5e\u6027\u6765\u641c\u7d22,\u5982\u679c\u5305\u542b\u4e00\u4e2a\u540d\u5b57\u4e3a id \u7684\u53c2\u6570,Beautiful Soup\u4f1a\u641c\u7d22\u6bcf\u4e2atag\u7684\u201did\u201d\u5c5e\u6027. soup . find_all ( id = 'link2' ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] \u5982\u679c\u4f20\u5165 href \u53c2\u6570,Beautiful Soup\u4f1a\u641c\u7d22\u6bcf\u4e2atag\u7684\u201dhref\u201d\u5c5e\u6027: soup . find_all ( href = re . compile ( \"elsie\" )) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] \u641c\u7d22\u6307\u5b9a\u540d\u5b57\u7684\u5c5e\u6027\u65f6\u53ef\u4ee5\u4f7f\u7528\u7684\u53c2\u6570\u503c\u5305\u62ec \u5b57\u7b26\u4e32 , \u6b63\u5219\u8868\u8fbe\u5f0f , \u5217\u8868 , True . \u4e0b\u9762\u7684\u4f8b\u5b50\u5728\u6587\u6863\u6811\u4e2d\u67e5\u627e\u6240\u6709\u5305\u542b id \u5c5e\u6027\u7684tag,\u65e0\u8bba id \u7684\u503c\u662f\u4ec0\u4e48: soup . find_all ( id = True ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] \u4f7f\u7528\u591a\u4e2a\u6307\u5b9a\u540d\u5b57\u7684\u53c2\u6570\u53ef\u4ee5\u540c\u65f6\u8fc7\u6ee4tag\u7684\u591a\u4e2a\u5c5e\u6027: soup . find_all ( href = re . compile ( \"elsie\" ), id = 'link1' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">three</a>] \u6709\u4e9btag\u5c5e\u6027\u5728\u641c\u7d22\u4e0d\u80fd\u4f7f\u7528,\u6bd4\u5982HTML5\u4e2d\u7684 data-* \u5c5e\u6027: data_soup = BeautifulSoup ( '<div data-foo=\"value\">foo!</div>' ) data_soup . find_all ( data - foo = \"value\" ) # SyntaxError: keyword can't be an expression \u4f46\u662f\u53ef\u4ee5\u901a\u8fc7 find_all() \u65b9\u6cd5\u7684 attrs \u53c2\u6570\u5b9a\u4e49\u4e00\u4e2a\u5b57\u5178\u53c2\u6570\u6765\u641c\u7d22\u5305\u542b\u7279\u6b8a\u5c5e\u6027\u7684tag: data_soup . find_all ( attrs = { \"data-foo\" : \"value\" }) # [<div data-foo=\"value\">foo!</div>] \u6309CSS\u641c\u7d22 \u00b6 \u6309\u7167CSS\u7c7b\u540d\u641c\u7d22tag\u7684\u529f\u80fd\u975e\u5e38\u5b9e\u7528,\u4f46\u6807\u8bc6CSS\u7c7b\u540d\u7684\u5173\u952e\u5b57 class \u5728Python\u4e2d\u662f\u4fdd\u7559\u5b57,\u4f7f\u7528 class \u505a\u53c2\u6570\u4f1a\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef.\u4eceBeautiful Soup\u76844.1.1\u7248\u672c\u5f00\u59cb,\u53ef\u4ee5\u901a\u8fc7 class_ \u53c2\u6570\u641c\u7d22\u6709\u6307\u5b9aCSS\u7c7b\u540d\u7684tag: soup . find_all ( \"a\" , class_ = \"sister\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] class_ \u53c2\u6570\u540c\u6837\u63a5\u53d7\u4e0d\u540c\u7c7b\u578b\u7684 \u8fc7\u6ee4\u5668 ,\u5b57\u7b26\u4e32,\u6b63\u5219\u8868\u8fbe\u5f0f,\u65b9\u6cd5\u6216 True : soup . find_all ( class_ = re . compile ( \"itl\" )) # [<p class=\"title\"><b>The Dormouse's story</b></p>] def has_six_characters ( css_class ): return css_class is not None and len ( css_class ) == 6 soup . find_all ( class_ = has_six_characters ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] tag\u7684 class \u5c5e\u6027\u662f \u591a\u503c\u5c5e\u6027 .\u6309\u7167CSS\u7c7b\u540d\u641c\u7d22tag\u65f6,\u53ef\u4ee5\u5206\u522b\u641c\u7d22tag\u4e2d\u7684\u6bcf\u4e2aCSS\u7c7b\u540d: css_soup = BeautifulSoup ( '<p class=\"body strikeout\"></p>' ) css_soup . find_all ( \"p\" , class_ = \"strikeout\" ) # [<p class=\"body strikeout\"></p>] css_soup . find_all ( \"p\" , class_ = \"body\" ) # [<p class=\"body strikeout\"></p>] \u641c\u7d22 class \u5c5e\u6027\u65f6\u4e5f\u53ef\u4ee5\u901a\u8fc7CSS\u503c\u5b8c\u5168\u5339\u914d: css_soup . find_all ( \"p\" , class_ = \"body strikeout\" ) # [<p class=\"body strikeout\"></p>] \u5b8c\u5168\u5339\u914d class \u7684\u503c\u65f6,\u5982\u679cCSS\u7c7b\u540d\u7684\u987a\u5e8f\u4e0e\u5b9e\u9645\u4e0d\u7b26,\u5c06\u641c\u7d22\u4e0d\u5230\u7ed3\u679c: soup . find_all ( \"a\" , attrs = { \"class\" : \"sister\" }) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] string \u53c2\u6570 \u00b6 \u901a\u8fc7 string \u53c2\u6570\u53ef\u4ee5\u641c\u641c\u6587\u6863\u4e2d\u7684\u5b57\u7b26\u4e32\u5185\u5bb9.\u4e0e name \u53c2\u6570\u7684\u53ef\u9009\u503c\u4e00\u6837, string \u53c2\u6570\u63a5\u53d7 \u5b57\u7b26\u4e32 , \u6b63\u5219\u8868\u8fbe\u5f0f , \u5217\u8868 , True . \u770b\u4f8b\u5b50: soup . find_all ( string = \"Elsie\" ) # [u'Elsie'] soup . find_all ( string = [ \"Tillie\" , \"Elsie\" , \"Lacie\" ]) # [u'Elsie', u'Lacie', u'Tillie'] soup . find_all ( string = re . compile ( \"Dormouse\" )) [ u \"The Dormouse's story\" , u \"The Dormouse's story\" ] def is_the_only_string_within_a_tag ( s ): \"\" Return True if this string is the only child of its parent tag . \"\" return ( s == s . parent . string ) soup . find_all ( string = is_the_only_string_within_a_tag ) # [u\"The Dormouse's story\", u\"The Dormouse's story\", u'Elsie', u'Lacie', u'Tillie', u'...'] \u867d\u7136 string \u53c2\u6570\u7528\u4e8e\u641c\u7d22\u5b57\u7b26\u4e32,\u8fd8\u53ef\u4ee5\u4e0e\u5176\u5b83\u53c2\u6570\u6df7\u5408\u4f7f\u7528\u6765\u8fc7\u6ee4tag.Beautiful Soup\u4f1a\u627e\u5230 .string \u65b9\u6cd5\u4e0e string \u53c2\u6570\u503c\u76f8\u7b26\u7684tag.\u4e0b\u9762\u4ee3\u7801\u7528\u6765\u641c\u7d22\u5185\u5bb9\u91cc\u9762\u5305\u542b\u201cElsie\u201d\u7684 \u6807\u7b7e: soup . find_all ( \"a\" , string = \"Elsie\" ) # [<a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>] limit \u53c2\u6570 \u00b6 find_all() \u65b9\u6cd5\u8fd4\u56de\u5168\u90e8\u7684\u641c\u7d22\u7ed3\u6784,\u5982\u679c\u6587\u6863\u6811\u5f88\u5927\u90a3\u4e48\u641c\u7d22\u4f1a\u5f88\u6162.\u5982\u679c\u6211\u4eec\u4e0d\u9700\u8981\u5168\u90e8\u7ed3\u679c,\u53ef\u4ee5\u4f7f\u7528 limit \u53c2\u6570\u9650\u5236\u8fd4\u56de\u7ed3\u679c\u7684\u6570\u91cf.\u6548\u679c\u4e0eSQL\u4e2d\u7684limit\u5173\u952e\u5b57\u7c7b\u4f3c,\u5f53\u641c\u7d22\u5230\u7684\u7ed3\u679c\u6570\u91cf\u8fbe\u5230 limit \u7684\u9650\u5236\u65f6,\u5c31\u505c\u6b62\u641c\u7d22\u8fd4\u56de\u7ed3\u679c. \u6587\u6863\u6811\u4e2d\u67093\u4e2atag\u7b26\u5408\u641c\u7d22\u6761\u4ef6,\u4f46\u7ed3\u679c\u53ea\u8fd4\u56de\u4e862\u4e2a,\u56e0\u4e3a\u6211\u4eec\u9650\u5236\u4e86\u8fd4\u56de\u6570\u91cf: soup . find_all ( \"a\" , limit = 2 ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] recursive \u53c2\u6570 \u00b6 \u8c03\u7528tag\u7684 find_all() \u65b9\u6cd5\u65f6,Beautiful Soup\u4f1a\u68c0\u7d22\u5f53\u524dtag\u7684\u6240\u6709\u5b50\u5b59\u8282\u70b9,\u5982\u679c\u53ea\u60f3\u641c\u7d22tag\u7684\u76f4\u63a5\u5b50\u8282\u70b9,\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570 recursive=False . \u4e00\u6bb5\u7b80\u5355\u7684\u6587\u6863: < html > < head > < title > The Dormouse's story </ title > </ head > ... \u662f\u5426\u4f7f\u7528 recursive \u53c2\u6570\u7684\u641c\u7d22\u7ed3\u679c: soup . html . find_all ( \"title\" ) # [<title>The Dormouse's story</title>] soup . html . find_all ( \"title\" , recursive = False ) # [] \u8fd9\u662f\u6587\u6863\u7247\u6bb5 < html > < head > < title > The Dormouse's story </ title > </ head > ... \u6807\u7b7e\u5728 \u6807\u7b7e\u4e0b, \u4f46\u5e76\u4e0d\u662f\u76f4\u63a5\u5b50\u8282\u70b9, \u6807\u7b7e\u624d\u662f\u76f4\u63a5\u5b50\u8282\u70b9. \u5728\u5141\u8bb8\u67e5\u8be2\u6240\u6709\u540e\u4ee3\u8282\u70b9\u65f6 Beautiful Soup \u80fd\u591f\u67e5\u627e\u5230 \u6807\u7b7e. \u4f46\u662f\u4f7f\u7528\u4e86 recursive=False \u53c2\u6570\u4e4b\u540e,\u53ea\u80fd\u67e5\u627e\u76f4\u63a5\u5b50\u8282\u70b9,\u8fd9\u6837\u5c31\u67e5\u4e0d\u5230 \u6807\u7b7e\u4e86. Beautiful Soup \u63d0\u4f9b\u4e86\u591a\u79cdDOM\u6811\u641c\u7d22\u65b9\u6cd5. \u8fd9\u4e9b\u65b9\u6cd5\u90fd\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u53c2\u6570\u5b9a\u4e49. \u6bd4\u5982\u8fd9\u4e9b\u65b9\u6cd5: find_all() : name , attrs , text , limit . \u4f46\u662f\u53ea\u6709 find_all() \u548c find() \u652f\u6301 recursive \u53c2\u6570. \u50cf\u8c03\u7528 find_all() \u4e00\u6837\u8c03\u7528tag \u00b6 find_all() \u51e0\u4e4e\u662fBeautiful Soup\u4e2d\u6700\u5e38\u7528\u7684\u641c\u7d22\u65b9\u6cd5,\u6240\u4ee5\u6211\u4eec\u5b9a\u4e49\u4e86\u5b83\u7684\u7b80\u5199\u65b9\u6cd5. BeautifulSoup \u5bf9\u8c61\u548c tag \u5bf9\u8c61\u53ef\u4ee5\u88ab\u5f53\u4f5c\u4e00\u4e2a\u65b9\u6cd5\u6765\u4f7f\u7528,\u8fd9\u4e2a\u65b9\u6cd5\u7684\u6267\u884c\u7ed3\u679c\u4e0e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684 find_all() \u65b9\u6cd5\u76f8\u540c,\u4e0b\u9762\u4e24\u884c\u4ee3\u7801\u662f\u7b49\u4ef7\u7684: soup . find_all ( \"a\" ) soup ( \"a\" ) \u8fd9\u4e24\u884c\u4ee3\u7801\u4e5f\u662f\u7b49\u4ef7\u7684: soup . title . find_all ( string = True ) soup . title ( string = True ) find() \u00b6 find( name , attrs , recursive , string , **kwargs ) find_all() \u65b9\u6cd5\u5c06\u8fd4\u56de\u6587\u6863\u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u6240\u6709tag,\u5c3d\u7ba1\u6709\u65f6\u5019\u6211\u4eec\u53ea\u60f3\u5f97\u5230\u4e00\u4e2a\u7ed3\u679c.\u6bd4\u5982\u6587\u6863\u4e2d\u53ea\u6709\u4e00\u4e2a \u6807\u7b7e,\u90a3\u4e48\u4f7f\u7528 find_all() \u65b9\u6cd5\u6765\u67e5\u627e \u6807\u7b7e\u5c31\u4e0d\u592a\u5408\u9002, \u4f7f\u7528 find_all \u65b9\u6cd5\u5e76\u8bbe\u7f6e limit=1 \u53c2\u6570\u4e0d\u5982\u76f4\u63a5\u4f7f\u7528 find() \u65b9\u6cd5.\u4e0b\u9762\u4e24\u884c\u4ee3\u7801\u662f\u7b49\u4ef7\u7684: soup . find_all ( 'title' , limit = 1 ) # [<title>The Dormouse's story</title>] soup . find ( 'title' ) # <title>The Dormouse's story</title> \u552f\u4e00\u7684\u533a\u522b\u662f find_all() \u65b9\u6cd5\u7684\u8fd4\u56de\u7ed3\u679c\u662f\u503c\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u7684\u5217\u8868,\u800c find() \u65b9\u6cd5\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c. find_all() \u65b9\u6cd5\u6ca1\u6709\u627e\u5230\u76ee\u6807\u662f\u8fd4\u56de\u7a7a\u5217\u8868, find() \u65b9\u6cd5\u627e\u4e0d\u5230\u76ee\u6807\u65f6,\u8fd4\u56de None . print(soup.find(\"nosuchtag\")) # None soup.head.title \u662f tag\u7684\u540d\u5b57 \u65b9\u6cd5\u7684\u7b80\u5199.\u8fd9\u4e2a\u7b80\u5199\u7684\u539f\u7406\u5c31\u662f\u591a\u6b21\u8c03\u7528\u5f53\u524dtag\u7684 find() \u65b9\u6cd5: soup . head . title # <title>The Dormouse's story</title> soup . find ( \"head\" ) . find ( \"title\" ) # <title>The Dormouse's story</title> find_parents() \u548c find_parent() \u00b6 find_parents( name , attrs , recursive , string , **kwargs ) find_parent( name , attrs , recursive , string , **kwargs ) \u6211\u4eec\u5df2\u7ecf\u7528\u4e86\u5f88\u5927\u7bc7\u5e45\u6765\u4ecb\u7ecd find_all() \u548c find() \u65b9\u6cd5,Beautiful Soup\u4e2d\u8fd8\u670910\u4e2a\u7528\u4e8e\u641c\u7d22\u7684API.\u5b83\u4eec\u4e2d\u7684\u4e94\u4e2a\u7528\u7684\u662f\u4e0e find_all() \u76f8\u540c\u7684\u641c\u7d22\u53c2\u6570,\u53e6\u59165\u4e2a\u4e0e find() \u65b9\u6cd5\u7684\u641c\u7d22\u53c2\u6570\u7c7b\u4f3c.\u533a\u522b\u4ec5\u662f\u5b83\u4eec\u641c\u7d22\u6587\u6863\u7684\u4e0d\u540c\u90e8\u5206. \u8bb0\u4f4f: find_all() \u548c find() \u53ea\u641c\u7d22\u5f53\u524d\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9,\u5b59\u5b50\u8282\u70b9\u7b49. find_parents() \u548c find_parent() \u7528\u6765\u641c\u7d22\u5f53\u524d\u8282\u70b9\u7684\u7236\u8f88\u8282\u70b9,\u641c\u7d22\u65b9\u6cd5\u4e0e\u666e\u901atag\u7684\u641c\u7d22\u65b9\u6cd5\u76f8\u540c,\u641c\u7d22\u6587\u6863\u641c\u7d22\u6587\u6863\u5305\u542b\u7684\u5185\u5bb9. \u6211\u4eec\u4ece\u4e00\u4e2a\u6587\u6863\u4e2d\u7684\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5f00\u59cb: a_string = soup . find ( string = \"Lacie\" ) a_string # u'Lacie' a_string . find_parents ( \"a\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] a_string . find_parent ( \"p\" ) # <p class=\"story\">Once upon a time there were three little sisters; and their names were # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a> and # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>; # and they lived at the bottom of a well.</p> a_string . find_parents ( \"p\" , class = \"title\" ) # [] \u6587\u6863\u4e2d\u7684\u4e00\u4e2a \u6807\u7b7e\u662f\u662f\u5f53\u524d\u53f6\u5b50\u8282\u70b9\u7684\u76f4\u63a5\u7236\u8282\u70b9,\u6240\u4ee5\u53ef\u4ee5\u88ab\u627e\u5230.\u8fd8\u6709\u4e00\u4e2a \u6807\u7b7e,\u662f\u76ee\u6807\u53f6\u5b50\u8282\u70b9\u7684\u95f4\u63a5\u7236\u8f88\u8282\u70b9,\u6240\u4ee5\u4e5f\u53ef\u4ee5\u88ab\u627e\u5230.\u5305\u542bclass\u503c\u4e3a\u201dtitle\u201d\u7684 \u6807\u7b7e\u4e0d\u662f\u4e0d\u662f\u76ee\u6807\u53f6\u5b50\u8282\u70b9\u7684\u7236\u8f88\u8282\u70b9,\u6240\u4ee5\u901a\u8fc7 find_parents() \u65b9\u6cd5\u641c\u7d22\u4e0d\u5230. find_parent() \u548c find_parents() \u65b9\u6cd5\u4f1a\u8ba9\u4eba\u8054\u60f3\u5230 .parent \u548c .parents \u5c5e\u6027.\u5b83\u4eec\u4e4b\u95f4\u7684\u8054\u7cfb\u975e\u5e38\u7d27\u5bc6.\u641c\u7d22\u7236\u8f88\u8282\u70b9\u7684\u65b9\u6cd5\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9 .parents \u5c5e\u6027\u7684\u8fed\u4ee3\u641c\u7d22. find_next_siblings() \u548c find_next_sibling() \u00b6 find_next_siblings( name , attrs , recursive , string , **kwargs ) find_next_sibling( name , attrs , recursive , string , **kwargs ) \u8fd92\u4e2a\u65b9\u6cd5\u901a\u8fc7 .next_siblings \u5c5e\u6027\u5bf9\u5f53tag\u7684\u6240\u6709\u540e\u9762\u89e3\u6790 [ 5] \u7684\u5144\u5f1ftag\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3, find_next_siblings() \u65b9\u6cd5\u8fd4\u56de\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u540e\u9762\u7684\u5144\u5f1f\u8282\u70b9, find_next_sibling() \u53ea\u8fd4\u56de\u7b26\u5408\u6761\u4ef6\u7684\u540e\u9762\u7684\u7b2c\u4e00\u4e2atag\u8282\u70b9. first_link = soup . a first_link # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> first_link . find_next_siblings ( \"a\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] first_story_paragraph = soup . find ( \"p\" , \"story\" ) first_story_paragraph . find_next_sibling ( \"p\" ) # <p class=\"story\">...</p> find_previous_siblings() \u548c find_previous_sibling() \u00b6 find_previous_siblings( name , attrs , recursive , string , **kwargs ) find_previous_sibling( name , attrs , recursive , string , **kwargs ) \u8fd92\u4e2a\u65b9\u6cd5\u901a\u8fc7 .previous_siblings \u5c5e\u6027\u5bf9\u5f53\u524dtag\u7684\u524d\u9762\u89e3\u6790 [ 5] \u7684\u5144\u5f1ftag\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3, find_previous_siblings() \u65b9\u6cd5\u8fd4\u56de\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u524d\u9762\u7684\u5144\u5f1f\u8282\u70b9, find_previous_sibling() \u65b9\u6cd5\u8fd4\u56de\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u524d\u9762\u7684\u5144\u5f1f\u8282\u70b9: last_link = soup . find ( \"a\" , id = \"link3\" ) last_link # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a> last_link . find_previous_siblings ( \"a\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] first_story_paragraph = soup . find ( \"p\" , \"story\" ) first_story_paragraph . find_previous_sibling ( \"p\" ) # <p class=\"title\"><b>The Dormouse's story</b></p> find_all_next() \u548c find_next() \u00b6 find_all_next( name , attrs , recursive , string , **kwargs ) find_next( name , attrs , recursive , string , **kwargs ) \u8fd92\u4e2a\u65b9\u6cd5\u901a\u8fc7 .next_elements \u5c5e\u6027\u5bf9\u5f53\u524dtag\u7684\u4e4b\u540e\u7684 [ 5] tag\u548c\u5b57\u7b26\u4e32\u8fdb\u884c\u8fed\u4ee3, find_all_next() \u65b9\u6cd5\u8fd4\u56de\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9, find_next() \u65b9\u6cd5\u8fd4\u56de\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9: first_link = soup . a first_link # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> first_link . find_all_next ( string = True ) # [u'Elsie', u',\\n', u'Lacie', u' and\\n', u'Tillie', # u';\\nand they lived at the bottom of a well.', u'\\n\\n', u'...', u'\\n'] first_link . find_next ( \"p\" ) # <p class=\"story\">...</p> \u7b2c\u4e00\u4e2a\u4f8b\u5b50\u4e2d,\u5b57\u7b26\u4e32 \u201cElsie\u201d\u4e5f\u88ab\u663e\u793a\u51fa\u6765,\u5c3d\u7ba1\u5b83\u88ab\u5305\u542b\u5728\u6211\u4eec\u5f00\u59cb\u67e5\u627e\u7684 \u6807\u7b7e\u7684\u91cc\u9762.\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u4e2d,\u6700\u540e\u4e00\u4e2a \u6807\u7b7e\u4e5f\u88ab\u663e\u793a\u51fa\u6765,\u5c3d\u7ba1\u5b83\u4e0e\u6211\u4eec\u5f00\u59cb\u67e5\u627e\u4f4d\u7f6e\u7684 \u6807\u7b7e\u4e0d\u5c5e\u4e8e\u540c\u4e00\u90e8\u5206.\u4f8b\u5b50\u4e2d,\u641c\u7d22\u7684\u91cd\u70b9\u662f\u8981\u5339\u914d\u8fc7\u6ee4\u5668\u7684\u6761\u4ef6,\u5e76\u4e14\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u800c\u4e0d\u662f\u5f00\u59cb\u67e5\u627e\u7684\u5143\u7d20\u7684\u4f4d\u7f6e. find_all_previous() \u548c find_previous() \u00b6 find_all_previous( name , attrs , recursive , string , **kwargs ) find_previous( name , attrs , recursive , string , **kwargs ) \u8fd92\u4e2a\u65b9\u6cd5\u901a\u8fc7 .previous_elements \u5c5e\u6027\u5bf9\u5f53\u524d\u8282\u70b9\u524d\u9762 [ 5] \u7684tag\u548c\u5b57\u7b26\u4e32\u8fdb\u884c\u8fed\u4ee3, find_all_previous() \u65b9\u6cd5\u8fd4\u56de\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9, find_previous() \u65b9\u6cd5\u8fd4\u56de\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9. first_link = soup . a first_link # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> first_link . find_all_previous ( \"p\" ) # [<p class=\"story\">Once upon a time there were three little sisters; ...</p>, # <p class=\"title\"><b>The Dormouse's story</b></p>] first_link . find_previous ( \"title\" ) # <title>The Dormouse's story</title> find_all_previous(\"p\") \u8fd4\u56de\u4e86\u6587\u6863\u4e2d\u7684\u7b2c\u4e00\u6bb5(class=\u201dtitle\u201d\u7684\u90a3\u6bb5),\u4f46\u8fd8\u8fd4\u56de\u4e86\u7b2c\u4e8c\u6bb5, \u6807\u7b7e\u5305\u542b\u4e86\u6211\u4eec\u5f00\u59cb\u67e5\u627e\u7684 \u6807\u7b7e.\u4e0d\u8981\u60ca\u8bb6,\u8fd9\u6bb5\u4ee3\u7801\u7684\u529f\u80fd\u662f\u67e5\u627e\u6240\u6709\u51fa\u73b0\u5728\u6307\u5b9a \u6807\u7b7e\u4e4b\u524d\u7684 \u6807\u7b7e,\u56e0\u4e3a\u8fd9\u4e2a \u6807\u7b7e\u5305\u542b\u4e86\u5f00\u59cb\u7684 \u6807\u7b7e,\u6240\u4ee5 \u6807\u7b7e\u4e00\u5b9a\u662f\u5728 \u4e4b\u524d\u51fa\u73b0\u7684. CSS\u9009\u62e9\u5668 \u00b6 Beautiful Soup\u652f\u6301\u5927\u90e8\u5206\u7684CSS\u9009\u62e9\u5668 http://www.w3.org/TR/CSS2/selector.html [ 6] , \u5728 Tag \u6216 BeautifulSoup \u5bf9\u8c61\u7684 .select() \u65b9\u6cd5\u4e2d\u4f20\u5165\u5b57\u7b26\u4e32\u53c2\u6570, \u5373\u53ef\u4f7f\u7528CSS\u9009\u62e9\u5668\u7684\u8bed\u6cd5\u627e\u5230tag: soup . select ( \"title\" ) # [<title>The Dormouse's story</title>] soup . select ( \"p:nth-of-type(3)\" ) # [<p class=\"story\">...</p>] \u901a\u8fc7tag\u6807\u7b7e\u9010\u5c42\u67e5\u627e: soup . select ( \"body a\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( \"html head title\" ) # [<title>The Dormouse's story</title>] \u627e\u5230\u67d0\u4e2atag\u6807\u7b7e\u4e0b\u7684\u76f4\u63a5\u5b50\u6807\u7b7e [ 6] : soup . select ( \"head > title\" ) # [<title>The Dormouse's story</title>] soup . select ( \"p > a\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( \"p > a:nth-of-type(2)\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] soup . select ( \"p > #link1\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] soup . select ( \"body > a\" ) # [] \u627e\u5230\u5144\u5f1f\u8282\u70b9\u6807\u7b7e: soup . select ( \"#link1 ~ .sister\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( \"#link1 + .sister\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] \u901a\u8fc7CSS\u7684\u7c7b\u540d\u67e5\u627e: soup . select ( \".sister\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( \"[class~=sister]\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] \u901a\u8fc7tag\u7684id\u67e5\u627e: soup . select ( \"#link1\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] soup . select ( \"a#link2\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] \u540c\u65f6\u7528\u591a\u79cdCSS\u9009\u62e9\u5668\u67e5\u8be2\u5143\u7d20: soup . select ( \"#link1,#link2\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] \u901a\u8fc7\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u5c5e\u6027\u6765\u67e5\u627e: soup . select ( 'a[href]' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] \u901a\u8fc7\u5c5e\u6027\u7684\u503c\u6765\u67e5\u627e: soup . select ( 'a[href=\"http://example.com/elsie\"]' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] soup . select ( 'a[href^=\"http://example.com/\"]' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( 'a[href$=\"tillie\"]' ) # [<a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( 'a[href*=\".com/el\"]' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] \u901a\u8fc7\u8bed\u8a00\u8bbe\u7f6e\u6765\u67e5\u627e: multilingual_markup = \"\"\" <p lang=\"en\">Hello</p> <p lang=\"en-us\">Howdy, y'all</p> <p lang=\"en-gb\">Pip-pip, old fruit</p> <p lang=\"fr\">Bonjour mes amis</p> \"\"\" multilingual_soup = BeautifulSoup ( multilingual_markup ) multilingual_soup . select ( 'p[lang|=en]' ) # [<p lang=\"en\">Hello</p>, # <p lang=\"en-us\">Howdy, y'all</p>, # <p lang=\"en-gb\">Pip-pip, old fruit</p>] \u8fd4\u56de\u67e5\u627e\u5230\u7684\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a soup . select_one ( \".sister\" ) # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> \u5bf9\u4e8e\u719f\u6089CSS\u9009\u62e9\u5668\u8bed\u6cd5\u7684\u4eba\u6765\u8bf4\u8fd9\u662f\u4e2a\u975e\u5e38\u65b9\u4fbf\u7684\u65b9\u6cd5.Beautiful Soup\u4e5f\u652f\u6301CSS\u9009\u62e9\u5668API, \u5982\u679c\u4f60\u4ec5\u4ec5\u9700\u8981CSS\u9009\u62e9\u5668\u7684\u529f\u80fd,\u90a3\u4e48\u76f4\u63a5\u4f7f\u7528 lxml \u4e5f\u53ef\u4ee5, \u800c\u4e14\u901f\u5ea6\u66f4\u5feb,\u652f\u6301\u66f4\u591a\u7684CSS\u9009\u62e9\u5668\u8bed\u6cd5,\u4f46Beautiful Soup\u6574\u5408\u4e86CSS\u9009\u62e9\u5668\u7684\u8bed\u6cd5\u548c\u81ea\u8eab\u65b9\u4fbf\u4f7f\u7528API. \u4fee\u6539\u6587\u6863\u6811 \u00b6 Beautiful Soup\u7684\u5f3a\u9879\u662f\u6587\u6863\u6811\u7684\u641c\u7d22,\u4f46\u540c\u65f6\u4e5f\u53ef\u4ee5\u65b9\u4fbf\u7684\u4fee\u6539\u6587\u6863\u6811 \u4fee\u6539tag\u7684\u540d\u79f0\u548c\u5c5e\u6027 \u00b6 \u5728 Attributes \u7684\u7ae0\u8282\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u8fd9\u4e2a\u529f\u80fd,\u4f46\u662f\u518d\u770b\u4e00\u904d\u4e5f\u65e0\u59a8. \u91cd\u547d\u540d\u4e00\u4e2atag,\u6539\u53d8\u5c5e\u6027\u7684\u503c,\u6dfb\u52a0\u6216\u5220\u9664\u5c5e\u6027: soup = BeautifulSoup ( '<b class=\"boldest\">Extremely bold</b>' ) tag = soup . b tag . name = \"blockquote\" tag [ 'class' ] = 'verybold' tag [ 'id' ] = 1 tag # <blockquote class=\"verybold\" id=\"1\">Extremely bold</blockquote> del tag [ 'class' ] del tag [ 'id' ] tag # <blockquote>Extremely bold</blockquote> \u4fee\u6539 .string \u00b6 \u7ed9tag\u7684 .string \u5c5e\u6027\u8d4b\u503c,\u5c31\u76f8\u5f53\u4e8e\u7528\u5f53\u524d\u7684\u5185\u5bb9\u66ff\u4ee3\u4e86\u539f\u6765\u7684\u5185\u5bb9: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) tag = soup . a tag . string = \"New link text.\" tag # <a href=\"http://example.com/\">New link text.</a> \u6ce8\u610f: \u5982\u679c\u5f53\u524d\u7684tag\u5305\u542b\u4e86\u5176\u5b83tag,\u90a3\u4e48\u7ed9\u5b83\u7684 .string \u5c5e\u6027\u8d4b\u503c\u4f1a\u8986\u76d6\u6389\u539f\u6709\u7684\u6240\u6709\u5185\u5bb9\u5305\u62ec\u5b50tag append() \u00b6 Tag.append() \u65b9\u6cd5\u60f3tag\u4e2d\u6dfb\u52a0\u5185\u5bb9,\u5c31\u597d\u50cfPython\u7684\u5217\u8868\u7684 .append() \u65b9\u6cd5: soup = BeautifulSoup ( \"<a>Foo</a>\" ) soup . a . append ( \"Bar\" ) soup # <html><head></head><body><a>FooBar</a></body></html> soup . a . contents # [u'Foo', u'Bar'] NavigableString() \u548c .new_tag() \u00b6 \u5982\u679c\u60f3\u6dfb\u52a0\u4e00\u6bb5\u6587\u672c\u5185\u5bb9\u5230\u6587\u6863\u4e2d\u4e5f\u6ca1\u95ee\u9898,\u53ef\u4ee5\u8c03\u7528Python\u7684 append() \u65b9\u6cd5 \u6216\u8c03\u7528 NavigableString \u7684\u6784\u9020\u65b9\u6cd5: soup = BeautifulSoup ( \"<b></b>\" ) tag = soup . b tag . append ( \"Hello\" ) new_string = NavigableString ( \" there\" ) tag . append ( new_string ) tag # <b>Hello there.</b> tag . contents # [u'Hello', u' there'] \u5982\u679c\u60f3\u8981\u521b\u5efa\u4e00\u6bb5\u6ce8\u91ca,\u6216 NavigableString \u7684\u4efb\u4f55\u5b50\u7c7b, \u53ea\u8981\u8c03\u7528 NavigableString \u7684\u6784\u9020\u65b9\u6cd5: from bs4 import Comment new_comment = soup . new_string ( \"Nice to see you.\" , Comment ) tag . append ( new_comment ) tag # <b>Hello there<!--Nice to see you.--></b> tag . contents # [u'Hello', u' there', u'Nice to see you.'] # \u8fd9\u662fBeautiful Soup 4.2.1 \u4e2d\u65b0\u589e\u7684\u65b9\u6cd5 \u521b\u5efa\u4e00\u4e2atag\u6700\u597d\u7684\u65b9\u6cd5\u662f\u8c03\u7528\u5de5\u5382\u65b9\u6cd5 BeautifulSoup.new_tag() : soup = BeautifulSoup ( \"<b></b>\" ) original_tag = soup . b new_tag = soup . new_tag ( \"a\" , href = \"http://www.example.com\" ) original_tag . append ( new_tag ) original_tag # <b><a href=\"http://www.example.com\"></a></b> new_tag . string = \"Link text.\" original_tag # <b><a href=\"http://www.example.com\">Link text.</a></b> \u7b2c\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3atag\u7684name,\u662f\u5fc5\u586b,\u5176\u5b83\u53c2\u6570\u9009\u586b insert() \u00b6 Tag.insert() \u65b9\u6cd5\u4e0e Tag.append() \u65b9\u6cd5\u7c7b\u4f3c,\u533a\u522b\u662f\u4e0d\u4f1a\u628a\u65b0\u5143\u7d20\u6dfb\u52a0\u5230\u7236\u8282\u70b9 .contents \u5c5e\u6027\u7684\u6700\u540e,\u800c\u662f\u628a\u5143\u7d20\u63d2\u5165\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e.\u4e0ePython\u5217\u8868\u603b\u7684 .insert() \u65b9\u6cd5\u7684\u7528\u6cd5\u4e0b\u540c: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) tag = soup . a tag . insert ( 1 , \"but did not endorse \" ) tag # <a href=\"http://example.com/\">I linked to but did not endorse <i>example.com</i></a> tag . contents # [u'I linked to ', u'but did not endorse', <i>example.com</i>] insert_before() \u548c insert_after() \u00b6 insert_before() \u65b9\u6cd5\u5728\u5f53\u524dtag\u6216\u6587\u672c\u8282\u70b9\u524d\u63d2\u5165\u5185\u5bb9: soup = BeautifulSoup ( \"<b>stop</b>\" ) tag = soup . new_tag ( \"i\" ) tag . string = \"Don't\" soup . b . string . insert_before ( tag ) soup . b # <b><i>Don't</i>stop</b> insert_after() \u65b9\u6cd5\u5728\u5f53\u524dtag\u6216\u6587\u672c\u8282\u70b9\u540e\u63d2\u5165\u5185\u5bb9: soup . b . i . insert_after ( soup . new_string ( \" ever \" )) soup . b # <b><i>Don't</i> ever stop</b> soup . b . contents # [<i>Don't</i>, u' ever ', u'stop'] clear() \u00b6 Tag.clear() \u65b9\u6cd5\u79fb\u9664\u5f53\u524dtag\u7684\u5185\u5bb9: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) tag = soup . a tag . clear () tag # <a href=\"http://example.com/\"></a> extract() \u00b6 PageElement.extract() \u65b9\u6cd5\u5c06\u5f53\u524dtag\u79fb\u9664\u6587\u6863\u6811,\u5e76\u4f5c\u4e3a\u65b9\u6cd5\u7ed3\u679c\u8fd4\u56de: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) a_tag = soup . a i_tag = soup . i . extract () a_tag # <a href=\"http://example.com/\">I linked to</a> i_tag # <i>example.com</i> print ( i_tag . parent ) None \u8fd9\u4e2a\u65b9\u6cd5\u5b9e\u9645\u4e0a\u4ea7\u751f\u4e862\u4e2a\u6587\u6863\u6811: \u4e00\u4e2a\u662f\u7528\u6765\u89e3\u6790\u539f\u59cb\u6587\u6863\u7684 BeautifulSoup \u5bf9\u8c61,\u53e6\u4e00\u4e2a\u662f\u88ab\u79fb\u9664\u5e76\u4e14\u8fd4\u56de\u7684tag.\u88ab\u79fb\u9664\u5e76\u8fd4\u56de\u7684tag\u53ef\u4ee5\u7ee7\u7eed\u8c03\u7528 extract \u65b9\u6cd5: my_string = i_tag . string . extract () my_string # u'example.com' print ( my_string . parent ) # None i_tag # <i></i> decompose() \u00b6 Tag.decompose() \u65b9\u6cd5\u5c06\u5f53\u524d\u8282\u70b9\u79fb\u9664\u6587\u6863\u6811\u5e76\u5b8c\u5168\u9500\u6bc1: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) a_tag = soup . a soup . i . decompose () a_tag # <a href=\"http://example.com/\">I linked to</a> replace_with() \u00b6 PageElement.replace_with() \u65b9\u6cd5\u79fb\u9664\u6587\u6863\u6811\u4e2d\u7684\u67d0\u6bb5\u5185\u5bb9,\u5e76\u7528\u65b0tag\u6216\u6587\u672c\u8282\u70b9\u66ff\u4ee3\u5b83: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) a_tag = soup . a new_tag = soup . new_tag ( \"b\" ) new_tag . string = \"example.net\" a_tag . i . replace_with ( new_tag ) a_tag # <a href=\"http://example.com/\">I linked to <b>example.net</b></a> replace_with() \u65b9\u6cd5\u8fd4\u56de\u88ab\u66ff\u4ee3\u7684tag\u6216\u6587\u672c\u8282\u70b9,\u53ef\u4ee5\u7528\u6765\u6d4f\u89c8\u6216\u6dfb\u52a0\u5230\u6587\u6863\u6811\u5176\u5b83\u5730\u65b9 wrap() \u00b6 PageElement.wrap() \u65b9\u6cd5\u53ef\u4ee5\u5bf9\u6307\u5b9a\u7684tag\u5143\u7d20\u8fdb\u884c\u5305\u88c5 [ 8] ,\u5e76\u8fd4\u56de\u5305\u88c5\u540e\u7684\u7ed3\u679c: soup = BeautifulSoup ( \"<p>I wish I was bold.</p>\" ) soup . p . string . wrap ( soup . new_tag ( \"b\" )) # <b>I wish I was bold.</b> soup . p . wrap ( soup . new_tag ( \"div\" )) # <div><p><b>I wish I was bold.</b></p></div> \u8be5\u65b9\u6cd5\u5728 Beautiful Soup 4.0.5 \u4e2d\u6dfb\u52a0 unwrap() \u00b6 Tag.unwrap() \u65b9\u6cd5\u4e0e wrap() \u65b9\u6cd5\u76f8\u53cd.\u5c06\u79fb\u9664tag\u5185\u7684\u6240\u6709tag\u6807\u7b7e,\u8be5\u65b9\u6cd5\u5e38\u88ab\u7528\u6765\u8fdb\u884c\u6807\u8bb0\u7684\u89e3\u5305: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) a_tag = soup . a a_tag . i . unwrap () a_tag # <a href=\"http://example.com/\">I linked to example.com</a> \u4e0e replace_with() \u65b9\u6cd5\u76f8\u540c, unwrap() \u65b9\u6cd5\u8fd4\u56de\u88ab\u79fb\u9664\u7684tag \u8f93\u51fa \u00b6 \u683c\u5f0f\u5316\u8f93\u51fa \u00b6 prettify() \u65b9\u6cd5\u5c06Beautiful Soup\u7684\u6587\u6863\u6811\u683c\u5f0f\u5316\u540e\u4ee5Unicode\u7f16\u7801\u8f93\u51fa,\u6bcf\u4e2aXML/HTML\u6807\u7b7e\u90fd\u72ec\u5360\u4e00\u884c markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) soup . prettify () # '<html>\\n <head>\\n </head>\\n <body>\\n <a href=\"http://example.com/\">\\n...' print ( soup . prettify ()) # <html> # <head> # </head> # <body> # <a href=\"http://example.com/\"> # I linked to # <i> # example.com # </i> # </a> # </body> # </html> BeautifulSoup \u5bf9\u8c61\u548c\u5b83\u7684tag\u8282\u70b9\u90fd\u53ef\u4ee5\u8c03\u7528 prettify() \u65b9\u6cd5: print ( soup . a . prettify ()) # <a href=\"http://example.com/\"> # I linked to # <i> # example.com # </i> # </a> \u538b\u7f29\u8f93\u51fa \u00b6 \u5982\u679c\u53ea\u60f3\u5f97\u5230\u7ed3\u679c\u5b57\u7b26\u4e32,\u4e0d\u91cd\u89c6\u683c\u5f0f,\u90a3\u4e48\u53ef\u4ee5\u5bf9\u4e00\u4e2a BeautifulSoup \u5bf9\u8c61\u6216 Tag \u5bf9\u8c61\u4f7f\u7528Python\u7684 unicode() \u6216 str() \u65b9\u6cd5: str ( soup ) # '<html><head></head><body><a href=\"http://example.com/\">I linked to <i>example.com</i></a></body></html>' unicode ( soup . a ) # u'<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' str() \u65b9\u6cd5\u8fd4\u56deUTF-8\u7f16\u7801\u7684\u5b57\u7b26\u4e32,\u53ef\u4ee5\u6307\u5b9a \u7f16\u7801 \u7684\u8bbe\u7f6e. \u8fd8\u53ef\u4ee5\u8c03\u7528 encode() \u65b9\u6cd5\u83b7\u5f97\u5b57\u8282\u7801\u6216\u8c03\u7528 decode() \u65b9\u6cd5\u83b7\u5f97Unicode. \u8f93\u51fa\u683c\u5f0f \u00b6 Beautiful Soup\u8f93\u51fa\u662f\u4f1a\u5c06HTML\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26\u8f6c\u6362\u6210Unicode,\u6bd4\u5982\u201c&lquot;\u201d: soup = BeautifulSoup ( \"&ldquo;Dammit!&rdquo; he said.\" ) unicode ( soup ) # u'<html><head></head><body>\\u201cDammit!\\u201d he said.</body></html>' \u5982\u679c\u5c06\u6587\u6863\u8f6c\u6362\u6210\u5b57\u7b26\u4e32,Unicode\u7f16\u7801\u4f1a\u88ab\u7f16\u7801\u6210UTF-8.\u8fd9\u6837\u5c31\u65e0\u6cd5\u6b63\u786e\u663e\u793aHTML\u7279\u6b8a\u5b57\u7b26\u4e86: str ( soup ) # '<html><head></head><body>\\xe2\\x80\\x9cDammit!\\xe2\\x80\\x9d he said.</body></html>' get_text() \u00b6 \u5982\u679c\u53ea\u60f3\u5f97\u5230tag\u4e2d\u5305\u542b\u7684\u6587\u672c\u5185\u5bb9,\u90a3\u4e48\u53ef\u4ee5\u8c03\u7528 get_text() \u65b9\u6cd5,\u8fd9\u4e2a\u65b9\u6cd5\u83b7\u53d6\u5230tag\u4e2d\u5305\u542b\u7684\u6240\u6709\u6587\u7248\u5185\u5bb9\u5305\u62ec\u5b50\u5b59tag\u4e2d\u7684\u5185\u5bb9,\u5e76\u5c06\u7ed3\u679c\u4f5c\u4e3aUnicode\u5b57\u7b26\u4e32\u8fd4\u56de: markup = '<a href=\"http://example.com/\"> \\n I linked to <i>example.com</i> \\n </a>' soup = BeautifulSoup ( markup ) soup . get_text () u ' \\n I linked to example.com \\n ' soup . i . get_text () u 'example.com' \u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u6307\u5b9atag\u7684\u6587\u672c\u5185\u5bb9\u7684\u5206\u9694\u7b26: # soup.get_text(\"|\") u ' \\n I linked to |example.com| \\n ' \u8fd8\u53ef\u4ee5\u53bb\u9664\u83b7\u5f97\u6587\u672c\u5185\u5bb9\u7684\u524d\u540e\u7a7a\u767d: # soup.get_text(\"|\", strip=True) u 'I linked to|example.com' \u6216\u8005\u4f7f\u7528 .stripped_strings \u751f\u6210\u5668,\u83b7\u5f97\u6587\u672c\u5217\u8868\u540e\u624b\u52a8\u5904\u7406\u5217\u8868: [ text for text in soup . stripped_strings ] # [u'I linked to', u'example.com'] \u6307\u5b9a\u6587\u6863\u89e3\u6790\u5668 \u00b6 \u5982\u679c\u4ec5\u662f\u60f3\u8981\u89e3\u6790HTML\u6587\u6863,\u53ea\u8981\u7528\u6587\u6863\u521b\u5efa BeautifulSoup \u5bf9\u8c61\u5c31\u53ef\u4ee5\u4e86.Beautiful Soup\u4f1a\u81ea\u52a8\u9009\u62e9\u4e00\u4e2a\u89e3\u6790\u5668\u6765\u89e3\u6790\u6587\u6863.\u4f46\u662f\u8fd8\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u6307\u5b9a\u4f7f\u7528\u90a3\u79cd\u89e3\u6790\u5668\u6765\u89e3\u6790\u5f53\u524d\u6587\u6863. BeautifulSoup \u7b2c\u4e00\u4e2a\u53c2\u6570\u5e94\u8be5\u662f\u8981\u88ab\u89e3\u6790\u7684\u6587\u6863\u5b57\u7b26\u4e32\u6216\u662f\u6587\u4ef6\u53e5\u67c4,\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7528\u6765\u6807\u8bc6\u600e\u6837\u89e3\u6790\u6587\u6863.\u5982\u679c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u7a7a,\u90a3\u4e48Beautiful Soup\u6839\u636e\u5f53\u524d\u7cfb\u7edf\u5b89\u88c5\u7684\u5e93\u81ea\u52a8\u9009\u62e9\u89e3\u6790\u5668,\u89e3\u6790\u5668\u7684\u4f18\u5148\u6570\u5e8f: lxml, html5lib, Python\u6807\u51c6\u5e93.\u5728\u4e0b\u9762\u4e24\u79cd\u6761\u4ef6\u4e0b\u89e3\u6790\u5668\u4f18\u5148\u987a\u5e8f\u4f1a\u53d8\u5316: \u8981\u89e3\u6790\u7684\u6587\u6863\u662f\u4ec0\u4e48\u7c7b\u578b: \u76ee\u524d\u652f\u6301, \u201chtml\u201d, \u201cxml\u201d, \u548c \u201chtml5\u201d \u6307\u5b9a\u4f7f\u7528\u54ea\u79cd\u89e3\u6790\u5668: \u76ee\u524d\u652f\u6301, \u201clxml\u201d, \u201chtml5lib\u201d, \u548c \u201chtml.parser\u201d \u5b89\u88c5\u89e3\u6790\u5668 \u7ae0\u8282\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u4f7f\u7528\u54ea\u79cd\u89e3\u6790\u5668,\u4ee5\u53ca\u5982\u4f55\u5b89\u88c5. \u5982\u679c\u6307\u5b9a\u7684\u89e3\u6790\u5668\u6ca1\u6709\u5b89\u88c5,Beautiful Soup\u4f1a\u81ea\u52a8\u9009\u62e9\u5176\u5b83\u65b9\u6848.\u76ee\u524d\u53ea\u6709 lxml \u89e3\u6790\u5668\u652f\u6301XML\u6587\u6863\u7684\u89e3\u6790,\u5728\u6ca1\u6709\u5b89\u88c5lxml\u5e93\u7684\u60c5\u51b5\u4e0b,\u521b\u5efa beautifulsoup \u5bf9\u8c61\u65f6\u65e0\u8bba\u662f\u5426\u6307\u5b9a\u4f7f\u7528lxml,\u90fd\u65e0\u6cd5\u5f97\u5230\u89e3\u6790\u540e\u7684\u5bf9\u8c61 \u89e3\u6790\u5668\u4e4b\u95f4\u7684\u533a\u522b \u00b6 Beautiful Soup\u4e3a\u4e0d\u540c\u7684\u89e3\u6790\u5668\u63d0\u4f9b\u4e86\u76f8\u540c\u7684\u63a5\u53e3,\u4f46\u89e3\u6790\u5668\u672c\u8eab\u65f6\u6709\u533a\u522b\u7684.\u540c\u4e00\u7bc7\u6587\u6863\u88ab\u4e0d\u540c\u7684\u89e3\u6790\u5668\u89e3\u6790\u540e\u53ef\u80fd\u4f1a\u751f\u6210\u4e0d\u540c\u7ed3\u6784\u7684\u6811\u578b\u6587\u6863.\u533a\u522b\u6700\u5927\u7684\u662fHTML\u89e3\u6790\u5668\u548cXML\u89e3\u6790\u5668,\u770b\u4e0b\u9762\u7247\u6bb5\u88ab\u89e3\u6790\u6210HTML\u7ed3\u6784: BeautifulSoup ( \"<a><b /></a>\" ) # <html><head></head><body><a><b></b></a></body></html> \u56e0\u4e3a\u7a7a\u6807\u7b7e \u4e0d\u7b26\u5408HTML\u6807\u51c6,\u6240\u4ee5\u89e3\u6790\u5668\u628a\u5b83\u89e3\u6790\u6210 \u540c\u6837\u7684\u6587\u6863\u4f7f\u7528XML\u89e3\u6790\u5982\u4e0b(\u89e3\u6790XML\u9700\u8981\u5b89\u88c5lxml\u5e93).\u6ce8\u610f,\u7a7a\u6807\u7b7e \u4f9d\u7136\u88ab\u4fdd\u7559,\u5e76\u4e14\u6587\u6863\u524d\u6dfb\u52a0\u4e86XML\u5934,\u800c\u4e0d\u662f\u88ab\u5305\u542b\u5728 \u6807\u7b7e\u5185: BeautifulSoup ( \"<a><b /></a>\" , \"xml\" ) # <?xml version=\"1.0\" encoding=\"utf-8\"?> # <a><b/></a> HTML\u89e3\u6790\u5668\u4e4b\u95f4\u4e5f\u6709\u533a\u522b,\u5982\u679c\u88ab\u89e3\u6790\u7684HTML\u6587\u6863\u662f\u6807\u51c6\u683c\u5f0f,\u90a3\u4e48\u89e3\u6790\u5668\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u5dee\u522b,\u53ea\u662f\u89e3\u6790\u901f\u5ea6\u4e0d\u540c,\u7ed3\u679c\u90fd\u4f1a\u8fd4\u56de\u6b63\u786e\u7684\u6587\u6863\u6811. \u4f46\u662f\u5982\u679c\u88ab\u89e3\u6790\u6587\u6863\u4e0d\u662f\u6807\u51c6\u683c\u5f0f,\u90a3\u4e48\u4e0d\u540c\u7684\u89e3\u6790\u5668\u8fd4\u56de\u7ed3\u679c\u53ef\u80fd\u4e0d\u540c.\u4e0b\u9762\u4f8b\u5b50\u4e2d,\u4f7f\u7528lxml\u89e3\u6790\u9519\u8bef\u683c\u5f0f\u7684\u6587\u6863,\u7ed3\u679c \u6807\u7b7e\u88ab\u76f4\u63a5\u5ffd\u7565\u6389\u4e86: BeautifulSoup ( \"<a></p>\" , \"lxml\" ) # <html><body><a></a></body></html> \u4f7f\u7528html5lib\u5e93\u89e3\u6790\u76f8\u540c\u6587\u6863\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c: BeautifulSoup ( \"<a></p>\" , \"html5lib\" ) # <html><head></head><body><a><p></p></a></body></html> html5lib\u5e93\u6ca1\u6709\u5ffd\u7565\u6389 \u6807\u7b7e,\u800c\u662f\u81ea\u52a8\u8865\u5168\u4e86\u6807\u7b7e,\u8fd8\u7ed9\u6587\u6863\u6811\u6dfb\u52a0\u4e86 \u6807\u7b7e. \u4f7f\u7528pyhton\u5185\u7f6e\u5e93\u89e3\u6790\u7ed3\u679c\u5982\u4e0b: BeautifulSoup ( \"<a></p>\" , \"html.parser\" ) # <a></a> \u4e0elxml [ 7] \u5e93\u7c7b\u4f3c\u7684,Python\u5185\u7f6e\u5e93\u5ffd\u7565\u6389\u4e86 \u6807\u7b7e,\u4e0ehtml5lib\u5e93\u4e0d\u540c\u7684\u662f\u6807\u51c6\u5e93\u6ca1\u6709\u5c1d\u8bd5\u521b\u5efa\u7b26\u5408\u6807\u51c6\u7684\u6587\u6863\u683c\u5f0f\u6216\u5c06\u6587\u6863\u7247\u6bb5\u5305\u542b\u5728 \u6807\u7b7e\u5185,\u4e0elxml\u4e0d\u540c\u7684\u662f\u6807\u51c6\u5e93\u751a\u81f3\u8fde \u6807\u7b7e\u90fd\u6ca1\u6709\u5c1d\u8bd5\u53bb\u6dfb\u52a0. \u56e0\u4e3a\u6587\u6863\u7247\u6bb5\u201c \u201d\u662f\u9519\u8bef\u683c\u5f0f,\u6240\u4ee5\u4ee5\u4e0a\u89e3\u6790\u65b9\u5f0f\u90fd\u80fd\u7b97\u4f5c\u201d\u6b63\u786e\u201d,html5lib\u5e93\u4f7f\u7528\u7684\u662fHTML5\u7684\u90e8\u5206\u6807\u51c6,\u6240\u4ee5\u6700\u63a5\u8fd1\u201d\u6b63\u786e\u201d.\u4e0d\u8fc7\u6240\u6709\u89e3\u6790\u5668\u7684\u7ed3\u6784\u90fd\u80fd\u591f\u88ab\u8ba4\u4e3a\u662f\u201d\u6b63\u5e38\u201d\u7684. \u4e0d\u540c\u7684\u89e3\u6790\u5668\u53ef\u80fd\u5f71\u54cd\u4ee3\u7801\u6267\u884c\u7ed3\u679c,\u5982\u679c\u5728\u5206\u53d1\u7ed9\u522b\u4eba\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 BeautifulSoup ,\u90a3\u4e48\u6700\u597d\u6ce8\u660e\u4f7f\u7528\u4e86\u54ea\u79cd\u89e3\u6790\u5668,\u4ee5\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6. \u7f16\u7801 \u00b6 \u4efb\u4f55HTML\u6216XML\u6587\u6863\u90fd\u6709\u81ea\u5df1\u7684\u7f16\u7801\u65b9\u5f0f,\u6bd4\u5982ASCII \u6216 UTF-8,\u4f46\u662f\u4f7f\u7528Beautiful Soup\u89e3\u6790\u540e,\u6587\u6863\u90fd\u88ab\u8f6c\u6362\u6210\u4e86Unicode: markup = \"<h1>Sacr \\xc3\\xa9 bleu!</h1>\" soup = BeautifulSoup ( markup ) soup . h1 # <h1>Sacr\u00e9 bleu!</h1> soup . h1 . string # u'Sacr\\xe9 bleu!' \u8fd9\u4e0d\u662f\u9b54\u672f(\u4f46\u5f88\u795e\u5947),Beautiful Soup\u7528\u4e86 \u7f16\u7801\u81ea\u52a8\u68c0\u6d4b \u5b50\u5e93\u6765\u8bc6\u522b\u5f53\u524d\u6587\u6863\u7f16\u7801\u5e76\u8f6c\u6362\u6210Unicode\u7f16\u7801. BeautifulSoup \u5bf9\u8c61\u7684 .original_encoding \u5c5e\u6027\u8bb0\u5f55\u4e86\u81ea\u52a8\u8bc6\u522b\u7f16\u7801\u7684\u7ed3\u679c: soup . original_encoding 'utf-8' \u7f16\u7801\u81ea\u52a8\u68c0\u6d4b \u529f\u80fd\u5927\u90e8\u5206\u65f6\u5019\u90fd\u80fd\u731c\u5bf9\u7f16\u7801\u683c\u5f0f,\u4f46\u6709\u65f6\u5019\u4e5f\u4f1a\u51fa\u9519.\u6709\u65f6\u5019\u5373\u4f7f\u731c\u6d4b\u6b63\u786e,\u4e5f\u662f\u5728\u9010\u4e2a\u5b57\u8282\u7684\u904d\u5386\u6574\u4e2a\u6587\u6863\u540e\u624d\u731c\u5bf9\u7684,\u8fd9\u6837\u5f88\u6162.\u5982\u679c\u9884\u5148\u77e5\u9053\u6587\u6863\u7f16\u7801,\u53ef\u4ee5\u8bbe\u7f6e\u7f16\u7801\u53c2\u6570\u6765\u51cf\u5c11\u81ea\u52a8\u68c0\u67e5\u7f16\u7801\u51fa\u9519\u7684\u6982\u7387\u5e76\u4e14\u63d0\u9ad8\u6587\u6863\u89e3\u6790\u901f\u5ea6.\u5728\u521b\u5efa BeautifulSoup \u5bf9\u8c61\u7684\u65f6\u5019\u8bbe\u7f6e from_encoding \u53c2\u6570. \u4e0b\u9762\u4e00\u6bb5\u6587\u6863\u7528\u4e86ISO-8859-8\u7f16\u7801\u65b9\u5f0f,\u8fd9\u6bb5\u6587\u6863\u592a\u77ed,\u7ed3\u679cBeautiful Soup\u4ee5\u4e3a\u6587\u6863\u662f\u7528ISO-8859-7\u7f16\u7801: markup = b \"<h1> \\xed\\xe5\\xec\\xf9 </h1>\" soup = BeautifulSoup ( markup ) soup . h1 < h1 > \u03bd\u03b5\u03bc\u03c9 </ h1 > soup . original_encoding 'ISO-8859-7' \u901a\u8fc7\u4f20\u5165 from_encoding \u53c2\u6570\u6765\u6307\u5b9a\u7f16\u7801\u65b9\u5f0f: soup = BeautifulSoup ( markup , from_encoding = \"iso-8859-8\" ) soup . h1 < h1 > \u05dd\u05d5\u05dc\u05e9 </ h1 > soup . original_encoding 'iso8859-8' \u5982\u679c\u4ec5\u77e5\u9053\u6587\u6863\u91c7\u7528\u4e86Unicode\u7f16\u7801, \u4f46\u4e0d\u77e5\u9053\u5177\u4f53\u7f16\u7801. \u53ef\u4ee5\u5148\u81ea\u5df1\u731c\u6d4b, \u731c\u6d4b\u9519\u8bef(\u4f9d\u65e7\u662f\u4e71\u7801)\u65f6, \u53ef\u4ee5\u628a\u9519\u8bef\u7f16\u7801\u4f5c\u4e3a exclude_encodings \u53c2\u6570, \u8fd9\u6837\u6587\u6863\u5c31\u4e0d\u4f1a\u5c1d\u8bd5\u4f7f\u7528\u8fd9\u79cd\u7f16\u7801\u4e86\u89e3\u7801\u4e86. \u8bd1\u8005\u5907\u6ce8: \u5728\u6ca1\u6709\u6307\u5b9a\u7f16\u7801\u7684\u60c5\u51b5\u4e0b, BS\u4f1a\u81ea\u5df1\u731c\u6d4b\u7f16\u7801, \u628a\u4e0d\u6b63\u786e\u7684\u7f16\u7801\u6392\u9664\u6389, BS\u5c31\u66f4\u5bb9\u6613\u731c\u5230\u6b63\u786e\u7f16\u7801. soup = BeautifulSoup ( markup , exclude_encodings = [ \"ISO-8859-7\" ]) soup . h1 < h1 > \u05dd\u05d5\u05dc\u05e9 </ h1 > soup . original_encoding 'WINDOWS-1255' \u731c\u6d4b\u7ed3\u679c\u662f Windows-1255 \u7f16\u7801, \u731c\u6d4b\u7ed3\u679c\u53ef\u80fd\u4e0d\u591f\u51c6\u786e, \u4f46\u662f Windows-1255 \u7f16\u7801\u662f ISO-8859-8 \u7684\u6269\u5c55\u96c6, \u6240\u4ee5\u731c\u6d4b\u7ed3\u679c\u5df2\u7ecf\u5341\u5206\u63a5\u8fd1\u4e86, \u5e76\u4e14\u4e0d\u5f71\u54cd\u4f7f\u7528. ( exclude_encodings \u53c2\u6570\u662f 4.4.0\u7248\u672c\u7684\u65b0\u529f\u80fd) \u5c11\u6570\u60c5\u51b5\u4e0b(\u901a\u5e38\u662fUTF-8\u7f16\u7801\u7684\u6587\u6863\u4e2d\u5305\u542b\u4e86\u5176\u5b83\u7f16\u7801\u683c\u5f0f\u7684\u6587\u4ef6),\u60f3\u83b7\u5f97\u6b63\u786e\u7684Unicode\u7f16\u7801\u5c31\u4e0d\u5f97\u4e0d\u5c06\u6587\u6863\u4e2d\u5c11\u6570\u7279\u6b8a\u7f16\u7801\u5b57\u7b26\u66ff\u6362\u6210\u7279\u6b8aUnicode\u7f16\u7801,\u201cREPLACEMENT CHARACTER\u201d (U+FFFD, \ufffd) [ 9] . \u5982\u679cBeautifu Soup\u731c\u6d4b\u6587\u6863\u7f16\u7801\u65f6\u4f5c\u4e86\u7279\u6b8a\u5b57\u7b26\u7684\u66ff\u6362,\u90a3\u4e48Beautiful Soup\u4f1a\u628a UnicodeDammit \u6216 BeautifulSoup \u5bf9\u8c61\u7684 .contains_replacement_characters \u5c5e\u6027\u6807\u8bb0\u4e3a True .\u8fd9\u6837\u5c31\u53ef\u4ee5\u77e5\u9053\u5f53\u524d\u6587\u6863\u8fdb\u884cUnicode\u7f16\u7801\u540e\u4e22\u5931\u4e86\u4e00\u90e8\u5206\u7279\u6b8a\u5185\u5bb9\u5b57\u7b26.\u5982\u679c\u6587\u6863\u4e2d\u5305\u542b\ufffd\u800c .contains_replacement_characters \u5c5e\u6027\u662f False ,\u5219\u8868\u793a\ufffd\u5c31\u662f\u6587\u6863\u4e2d\u539f\u6765\u7684\u5b57\u7b26,\u4e0d\u662f\u8f6c\u7801\u5931\u8d25. \u8f93\u51fa\u7f16\u7801 \u00b6 \u901a\u8fc7Beautiful Soup\u8f93\u51fa\u6587\u6863\u65f6,\u4e0d\u7ba1\u8f93\u5165\u6587\u6863\u662f\u4ec0\u4e48\u7f16\u7801\u65b9\u5f0f,\u8f93\u51fa\u7f16\u7801\u5747\u4e3aUTF-8\u7f16\u7801,\u4e0b\u9762\u4f8b\u5b50\u8f93\u5165\u6587\u6863\u662fLatin-1\u7f16\u7801: markup = b ''' <html> <head> <meta content=\"text/html; charset=ISO-Latin-1\" http-equiv=\"Content-type\" /> </head> <body> <p>Sacr \\xe9 bleu!</p> </body> </html> ''' soup = BeautifulSoup ( markup ) print ( soup . prettify ()) # <html> # <head> # <meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-type\" /> # </head> # <body> # <p> # Sacr\u00e9 bleu! # </p> # </body> # </html> \u6ce8\u610f,\u8f93\u51fa\u6587\u6863\u4e2d\u7684 \u6807\u7b7e\u7684\u7f16\u7801\u8bbe\u7f6e\u5df2\u7ecf\u4fee\u6539\u6210\u4e86\u4e0e\u8f93\u51fa\u7f16\u7801\u4e00\u81f4\u7684UTF-8. \u5982\u679c\u4e0d\u60f3\u7528UTF-8\u7f16\u7801\u8f93\u51fa,\u53ef\u4ee5\u5c06\u7f16\u7801\u65b9\u5f0f\u4f20\u5165 prettify() \u65b9\u6cd5: print ( soup . prettify ( \"latin-1\" )) # <html> # <head> # <meta content=\"text/html; charset=latin-1\" http-equiv=\"Content-type\" /> # ... \u8fd8\u53ef\u4ee5\u8c03\u7528 BeautifulSoup \u5bf9\u8c61\u6216\u4efb\u610f\u8282\u70b9\u7684 encode() \u65b9\u6cd5,\u5c31\u50cfPython\u7684\u5b57\u7b26\u4e32\u8c03\u7528 encode() \u65b9\u6cd5\u4e00\u6837: soup . p . encode ( \"latin-1\" ) # '<p>Sacr\\xe9 bleu!</p>' soup . p . encode ( \"utf-8\" ) # '<p>Sacr\\xc3\\xa9 bleu!</p>' \u5982\u679c\u6587\u6863\u4e2d\u5305\u542b\u5f53\u524d\u7f16\u7801\u4e0d\u652f\u6301\u7684\u5b57\u7b26,\u90a3\u4e48\u8fd9\u4e9b\u5b57\u7b26\u5c06\u88ab\u8f6c\u6362\u6210\u4e00\u7cfb\u5217XML\u7279\u6b8a\u5b57\u7b26\u5f15\u7528,\u4e0b\u9762\u4f8b\u5b50\u4e2d\u5305\u542b\u4e86Unicode\u7f16\u7801\u5b57\u7b26SNOWMAN: markup = u \"<b> \\N{SNOWMAN} </b>\" snowman_soup = BeautifulSoup ( markup ) tag = snowman_soup . b SNOWMAN\u5b57\u7b26\u5728UTF-8\u7f16\u7801\u4e2d\u53ef\u4ee5\u6b63\u5e38\u663e\u793a(\u770b\u4e0a\u53bb\u50cf\u662f\u2603),\u4f46\u6709\u4e9b\u7f16\u7801\u4e0d\u652f\u6301SNOWMAN\u5b57\u7b26,\u6bd4\u5982ISO-Latin-1\u6216ASCII,\u90a3\u4e48\u5728\u8fd9\u4e9b\u7f16\u7801\u4e2dSNOWMAN\u5b57\u7b26\u4f1a\u88ab\u8f6c\u6362\u6210\u201c\u2603\u201d: print ( tag . encode ( \"utf-8\" )) # <b>\u2603</b> print tag . encode ( \"latin-1\" ) # <b>&#9731;</b> print tag . encode ( \"ascii\" ) # <b>&#9731;</b> Unicode, Dammit! (\u4e71\u7801, \u9760!) \u00b6 \u8bd1\u8005\u5907\u6ce8: UnicodeDammit \u662fBS\u5185\u7f6e\u5e93, \u4e3b\u8981\u7528\u6765\u731c\u6d4b\u6587\u6863\u7f16\u7801. \u7f16\u7801\u81ea\u52a8\u68c0\u6d4b \u529f\u80fd\u53ef\u4ee5\u5728Beautiful Soup\u4ee5\u5916\u4f7f\u7528,\u68c0\u6d4b\u67d0\u6bb5\u672a\u77e5\u7f16\u7801\u65f6,\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5: from bs4 import UnicodeDammit dammit = UnicodeDammit ( \"Sacr \\xc3\\xa9 bleu!\" ) print ( dammit . unicode_markup ) # Sacr\u00e9 bleu! dammit . original_encoding # 'utf-8' \u5982\u679cPython\u4e2d\u5b89\u88c5\u4e86 chardet \u6216 cchardet \u90a3\u4e48\u7f16\u7801\u68c0\u6d4b\u529f\u80fd\u7684\u51c6\u786e\u7387\u5c06\u5927\u5927\u63d0\u9ad8. \u8f93\u5165\u7684\u5b57\u7b26\u8d8a\u591a,\u68c0\u6d4b\u7ed3\u679c\u8d8a\u7cbe\u786e,\u5982\u679c\u4e8b\u5148\u731c\u6d4b\u5230\u4e00\u4e9b\u53ef\u80fd\u7f16\u7801, \u90a3\u4e48\u53ef\u4ee5\u5c06\u731c\u6d4b\u7684\u7f16\u7801\u4f5c\u4e3a\u53c2\u6570,\u8fd9\u6837\u5c06\u4f18\u5148\u68c0\u6d4b\u8fd9\u4e9b\u7f16\u7801: dammit = UnicodeDammit ( \"Sacr \\xe9 bleu!\" , [ \"latin-1\" , \"iso-8859-1\" ]) print ( dammit . unicode_markup ) # Sacr\u00e9 bleu! dammit . original_encoding # 'latin-1' \u7f16\u7801\u81ea\u52a8\u68c0\u6d4b \u529f\u80fd\u4e2d\u67092\u9879\u529f\u80fd\u662fBeautiful Soup\u5e93\u4e2d\u7528\u4e0d\u5230\u7684 \u667a\u80fd\u5f15\u53f7 \u00b6 \u4f7f\u7528Unicode\u65f6,Beautiful Soup\u8fd8\u4f1a\u667a\u80fd\u7684\u628a\u5f15\u53f7 [ 10] \u8f6c\u6362\u6210HTML\u6216XML\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26: markup = b \"<p>I just \\x93 love \\x94 Microsoft Word \\x92 s smart quotes</p>\" UnicodeDammit ( markup , [ \"windows-1252\" ], smart_quotes_to = \"html\" ) . unicode_markup # u'<p>I just &ldquo;love&rdquo; Microsoft Word&rsquo;s smart quotes</p>' UnicodeDammit ( markup , [ \"windows-1252\" ], smart_quotes_to = \"xml\" ) . unicode_markup # u'<p>I just &#x201C;love&#x201D; Microsoft Word&#x2019;s smart quotes</p>' \u4e5f\u53ef\u4ee5\u628a\u5f15\u53f7\u8f6c\u6362\u4e3aASCII\u7801: UnicodeDammit ( markup , [ \"windows-1252\" ], smart_quotes_to = \"ascii\" ) . unicode_markup # u'<p>I just \"love\" Microsoft Word\\'s smart quotes</p>' \u5f88\u6709\u7528\u7684\u529f\u80fd,\u4f46\u662fBeautiful Soup\u6ca1\u6709\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f.\u9ed8\u8ba4\u60c5\u51b5\u4e0b,Beautiful Soup\u628a\u5f15\u53f7\u8f6c\u6362\u6210Unicode: UnicodeDammit ( markup , [ \"windows-1252\" ]) . unicode_markup # u'<p>I just \\u201clove\\u201d Microsoft Word\\u2019s smart quotes</p>' \u77db\u76fe\u7684\u7f16\u7801 \u00b6 \u6709\u65f6\u6587\u6863\u7684\u5927\u90e8\u5206\u90fd\u662f\u7528UTF-8,\u4f46\u540c\u65f6\u8fd8\u5305\u542b\u4e86Windows-1252\u7f16\u7801\u7684\u5b57\u7b26,\u5c31\u50cf\u5fae\u8f6f\u7684\u667a\u80fd\u5f15\u53f7 [ 10] \u4e00\u6837. \u4e00\u4e9b\u5305\u542b\u591a\u4e2a\u4fe1\u606f\u7684\u6765\u6e90\u7f51\u7ad9\u5bb9\u6613\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5. UnicodeDammit.detwingle() \u65b9\u6cd5\u53ef\u4ee5\u628a\u8fd9\u7c7b\u6587\u6863\u8f6c\u6362\u6210\u7eafUTF-8\u7f16\u7801\u683c\u5f0f,\u770b\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50: snowmen = ( u \" \\N{SNOWMAN} \" * 3 ) quote = ( u \" \\N{LEFT DOUBLE QUOTATION MARK} I like snowmen! \\N{RIGHT DOUBLE QUOTATION MARK} \" ) doc = snowmen . encode ( \"utf8\" ) + quote . encode ( \"windows_1252\" ) \u8fd9\u6bb5\u6587\u6863\u5f88\u6742\u4e71,snowmen\u662fUTF-8\u7f16\u7801,\u5f15\u53f7\u662fWindows-1252\u7f16\u7801,\u76f4\u63a5\u8f93\u51fa\u65f6\u4e0d\u80fd\u540c\u65f6\u663e\u793asnowmen\u548c\u5f15\u53f7,\u56e0\u4e3a\u5b83\u4eec\u7f16\u7801\u4e0d\u540c: print ( doc ) # \u2603\u2603\u2603\ufffdI like snowmen!\ufffd print ( doc . decode ( \"windows-1252\" )) # \u00e2\u02dc\u0192\u00e2\u02dc\u0192\u00e2\u02dc\u0192\u201cI like snowmen!\u201d \u5982\u679c\u5bf9\u8fd9\u6bb5\u6587\u6863\u7528UTF-8\u89e3\u7801\u5c31\u4f1a\u5f97\u5230 UnicodeDecodeError \u5f02\u5e38,\u5982\u679c\u7528Windows-1252\u89e3\u7801\u5c31\u56de\u5f97\u5230\u4e00\u5806\u4e71\u7801. \u5e78\u597d, UnicodeDammit.detwingle() \u65b9\u6cd5\u4f1a\u628a\u8fd9\u6bb5\u5b57\u7b26\u4e32\u8f6c\u6362\u6210UTF-8\u7f16\u7801,\u5141\u8bb8\u6211\u4eec\u540c\u65f6\u663e\u793a\u51fa\u6587\u6863\u4e2d\u7684snowmen\u548c\u5f15\u53f7: new_doc = UnicodeDammit . detwingle ( doc ) print ( new_doc . decode ( \"utf8\" )) # \u2603\u2603\u2603\u201cI like snowmen!\u201d UnicodeDammit.detwingle() \u65b9\u6cd5\u53ea\u80fd\u89e3\u7801\u5305\u542b\u5728UTF-8\u7f16\u7801\u4e2d\u7684Windows-1252\u7f16\u7801\u5185\u5bb9,\u4f46\u8fd9\u89e3\u51b3\u4e86\u6700\u5e38\u89c1\u7684\u4e00\u7c7b\u95ee\u9898. \u5728\u521b\u5efa BeautifulSoup \u6216 UnicodeDammit \u5bf9\u8c61\u524d\u4e00\u5b9a\u8981\u5148\u5bf9\u6587\u6863\u8c03\u7528 UnicodeDammit.detwingle() \u786e\u4fdd\u6587\u6863\u7684\u7f16\u7801\u65b9\u5f0f\u6b63\u786e.\u5982\u679c\u5c1d\u8bd5\u53bb\u89e3\u6790\u4e00\u6bb5\u5305\u542bWindows-1252\u7f16\u7801\u7684UTF-8\u6587\u6863,\u5c31\u4f1a\u5f97\u5230\u4e00\u5806\u4e71\u7801,\u6bd4\u5982: \u00e2\u02dc\u0192\u00e2\u02dc\u0192\u00e2\u02dc\u0192\u201cI like snowmen!\u201d. UnicodeDammit.detwingle() \u65b9\u6cd5\u5728Beautiful Soup 4.1.0\u7248\u672c\u4e2d\u65b0\u589e \u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u76f8\u540c \u00b6 \u4e24\u4e2a NavigableString \u6216 Tag \u5bf9\u8c61\u5177\u6709\u76f8\u540c\u7684HTML\u6216XML\u7ed3\u6784\u65f6, Beautiful Soup\u5c31\u5224\u65ad\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u76f8\u540c. \u8fd9\u4e2a\u4f8b\u5b50\u4e2d, 2\u4e2a \u6807\u7b7e\u5728 BS \u4e2d\u662f\u76f8\u540c\u7684, \u5c3d\u7ba1\u4ed6\u4eec\u5728\u6587\u6863\u6811\u7684\u4e0d\u540c\u4f4d\u7f6e, \u4f46\u662f\u5177\u6709\u76f8\u540c\u7684\u8868\u8c61: \u201c pizza \u201d markup = \"<p>I want <b>pizza</b> and more <b>pizza</b>!</p>\" soup = BeautifulSoup ( markup , 'html.parser' ) first_b , second_b = soup . find_all ( 'b' ) print first_b == second_b # True print first_b . previous_element == second_b . previous_element # False \u5982\u679c\u60f3\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e25\u683c\u7684\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7 is \u6765\u5224\u65ad print first_b is second_b # False \u590d\u5236Beautiful Soup\u5bf9\u8c61 \u00b6 copy.copy() \u65b9\u6cd5\u53ef\u4ee5\u590d\u5236\u4efb\u610f Tag \u6216 NavigableString \u5bf9\u8c61 import copy p_copy = copy . copy ( soup . p ) print p_copy # <p>I want <b>pizza</b> and more <b>pizza</b>!</p> \u590d\u5236\u540e\u7684\u5bf9\u8c61\u8ddf\u4e0e\u5bf9\u8c61\u662f\u76f8\u7b49\u7684, \u4f46\u6307\u5411\u4e0d\u540c\u7684\u5185\u5b58\u5730\u5740 print soup . p == p_copy # True print soup . p is p_copy # False \u6e90\u5bf9\u8c61\u548c\u590d\u5236\u5bf9\u8c61\u7684\u533a\u522b\u662f\u6e90\u5bf9\u8c61\u5728\u6587\u6863\u6811\u4e2d, \u800c\u590d\u5236\u540e\u7684\u5bf9\u8c61\u662f\u72ec\u7acb\u7684\u8fd8\u6ca1\u6709\u6dfb\u52a0\u5230\u6587\u6863\u6811\u4e2d. \u590d\u5236\u540e\u5bf9\u8c61\u7684\u6548\u679c\u8ddf\u8c03\u7528\u4e86 extract() \u65b9\u6cd5\u76f8\u540c. print p_copy . parent # None \u8fd9\u662f\u56e0\u4e3a\u76f8\u7b49\u7684\u5bf9\u8c61\u4e0d\u80fd\u540c\u65f6\u63d2\u5165\u76f8\u540c\u7684\u4f4d\u7f6e \u89e3\u6790\u90e8\u5206\u6587\u6863 \u00b6 \u5982\u679c\u4ec5\u4ec5\u56e0\u4e3a\u60f3\u8981\u67e5\u627e\u6587\u6863\u4e2d\u7684 \u6807\u7b7e\u800c\u5c06\u6574\u7247\u6587\u6863\u8fdb\u884c\u89e3\u6790,\u5b9e\u5728\u662f\u6d6a\u8d39\u5185\u5b58\u548c\u65f6\u95f4.\u6700\u5feb\u7684\u65b9\u6cd5\u662f\u4ece\u4e00\u5f00\u59cb\u5c31\u628a \u6807\u7b7e\u4ee5\u5916\u7684\u4e1c\u897f\u90fd\u5ffd\u7565\u6389. SoupStrainer \u7c7b\u53ef\u4ee5\u5b9a\u4e49\u6587\u6863\u7684\u67d0\u6bb5\u5185\u5bb9,\u8fd9\u6837\u641c\u7d22\u6587\u6863\u65f6\u5c31\u4e0d\u5fc5\u5148\u89e3\u6790\u6574\u7bc7\u6587\u6863,\u53ea\u4f1a\u89e3\u6790\u5728 SoupStrainer \u4e2d\u5b9a\u4e49\u8fc7\u7684\u6587\u6863. \u521b\u5efa\u4e00\u4e2a SoupStrainer \u5bf9\u8c61\u5e76\u4f5c\u4e3a parse_only \u53c2\u6570\u7ed9 BeautifulSoup \u7684\u6784\u9020\u65b9\u6cd5\u5373\u53ef. SoupStrainer \u00b6 SoupStrainer \u7c7b\u63a5\u53d7\u4e0e\u5178\u578b\u641c\u7d22\u65b9\u6cd5\u76f8\u540c\u7684\u53c2\u6570\uff1a name , attrs , recursive , string , **kwargs \u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\u4e09\u79cd SoupStrainer \u5bf9\u8c61\uff1a from bs4 import SoupStrainer only_a_tags = SoupStrainer ( \"a\" ) only_tags_with_id_link2 = SoupStrainer ( id = \"link2\" ) def is_short_string ( string ): return len ( string ) < 10 only_short_strings = SoupStrainer ( string = is_short_string ) \u518d\u62ff\u201c\u7231\u4e3d\u4e1d\u201d\u6587\u6863\u6765\u4e3e\u4f8b\uff0c\u6765\u770b\u770b\u4f7f\u7528\u4e09\u79cd SoupStrainer \u5bf9\u8c61\u505a\u53c2\u6570\u4f1a\u6709\u4ec0\u4e48\u4e0d\u540c: html_doc = \"\"\" <html><head><title>The Dormouse's story</title></head> <body> <p class=\"title\"><b>The Dormouse's story</b></p> <p class=\"story\">Once upon a time there were three little sisters; and their names were <a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>, <a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and <a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>; and they lived at the bottom of a well.</p> <p class=\"story\">...</p> \"\"\" print ( BeautifulSoup ( html_doc , \"html.parser\" , parse_only = only_a_tags ) . prettify ()) # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\"> # Elsie # </a> # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\"> # Lacie # </a> # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\"> # Tillie # </a> print ( BeautifulSoup ( html_doc , \"html.parser\" , parse_only = only_tags_with_id_link2 ) . prettify ()) # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\"> # Lacie # </a> print ( BeautifulSoup ( html_doc , \"html.parser\" , parse_only = only_short_strings ) . prettify ()) # Elsie # , # Lacie # and # Tillie # ... # \u8fd8\u53ef\u4ee5\u5c06 SoupStrainer \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 \u641c\u7d22\u6587\u6863\u6811 \u4e2d\u63d0\u5230\u7684\u65b9\u6cd5.\u8fd9\u53ef\u80fd\u4e0d\u662f\u4e2a\u5e38\u7528\u7528\u6cd5,\u6240\u4ee5\u8fd8\u662f\u63d0\u4e00\u4e0b: soup = BeautifulSoup(html_doc) soup.find_all(only_short_strings) # [u'\\n\\n', u'\\n\\n', u'Elsie', u',\\n', u'Lacie', u' and\\n', u'Tillie', # u'\\n\\n', u'...', u'\\n'] \u5e38\u89c1\u95ee\u9898 \u00b6 \u4ee3\u7801\u8bca\u65ad \u00b6 \u5982\u679c\u60f3\u77e5\u9053Beautiful Soup\u5230\u5e95\u600e\u6837\u5904\u7406\u4e00\u4efd\u6587\u6863,\u53ef\u4ee5\u5c06\u6587\u6863\u4f20\u5165 diagnose() \u65b9\u6cd5(Beautiful Soup 4.2.0\u4e2d\u65b0\u589e),Beautiful Soup\u4f1a\u8f93\u51fa\u4e00\u4efd\u62a5\u544a,\u8bf4\u660e\u4e0d\u540c\u7684\u89e3\u6790\u5668\u4f1a\u600e\u6837\u5904\u7406\u8fd9\u6bb5\u6587\u6863,\u5e76\u6807\u51fa\u5f53\u524d\u7684\u89e3\u6790\u8fc7\u7a0b\u4f1a\u4f7f\u7528\u54ea\u79cd\u89e3\u6790\u5668: from bs4.diagnose import diagnose data = open ( \"bad.html\" ) . read () diagnose ( data ) # Diagnostic running on Beautiful Soup 4.2.0 # Python version 2.7.3 (default, Aug 1 2012, 05:16:07) # I noticed that html5lib is not installed. Installing it may help. # Found lxml version 2.3.2.0 # # Trying to parse your data with html.parser # Here's what html.parser did with the document: # ... diagnose() \u65b9\u6cd5\u7684\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u5e2e\u52a9\u4f60\u627e\u5230\u95ee\u9898\u7684\u539f\u56e0,\u5982\u679c\u4e0d\u884c,\u8fd8\u53ef\u4ee5\u628a\u7ed3\u679c\u590d\u5236\u51fa\u6765\u4ee5\u4fbf\u5bfb\u6c42\u4ed6\u4eba\u7684\u5e2e\u52a9 \u6587\u6863\u89e3\u6790\u9519\u8bef \u00b6 \u6587\u6863\u89e3\u6790\u9519\u8bef\u6709\u4e24\u79cd.\u4e00\u79cd\u662f\u5d29\u6e83,Beautiful Soup\u5c1d\u8bd5\u89e3\u6790\u4e00\u6bb5\u6587\u6863\u7ed3\u679c\u5374\u629b\u9664\u4e86\u5f02\u5e38,\u901a\u5e38\u662f HTMLParser.HTMLParseError .\u8fd8\u6709\u4e00\u79cd\u5f02\u5e38\u60c5\u51b5,\u662fBeautiful Soup\u89e3\u6790\u540e\u7684\u6587\u6863\u6811\u770b\u8d77\u6765\u4e0e\u539f\u6765\u7684\u5185\u5bb9\u76f8\u5dee\u5f88\u591a. \u8fd9\u4e9b\u9519\u8bef\u51e0\u4e4e\u90fd\u4e0d\u662fBeautiful Soup\u7684\u539f\u56e0,\u8fd9\u4e0d\u4f1a\u662f\u56e0\u4e3aBeautiful Soup\u7684\u4ee3\u7801\u5199\u7684\u592a\u4f18\u79c0,\u800c\u662f\u56e0\u4e3aBeautiful Soup\u6ca1\u6709\u5305\u542b\u4efb\u4f55\u6587\u6863\u89e3\u6790\u4ee3\u7801.\u5f02\u5e38\u4ea7\u751f\u81ea\u88ab\u4f9d\u8d56\u7684\u89e3\u6790\u5668,\u5982\u679c\u89e3\u6790\u5668\u4e0d\u80fd\u5f88\u597d\u7684\u89e3\u6790\u51fa\u5f53\u524d\u7684\u6587\u6863,\u90a3\u4e48\u6700\u597d\u7684\u529e\u6cd5\u662f\u6362\u4e00\u4e2a\u89e3\u6790\u5668.\u66f4\u591a\u7ec6\u8282\u67e5\u770b \u5b89\u88c5\u89e3\u6790\u5668 \u7ae0\u8282. \u6700\u5e38\u89c1\u7684\u89e3\u6790\u9519\u8bef\u662f HTMLParser.HTMLParseError: malformed start tag \u548c HTMLParser.HTMLParseError: bad end tag .\u8fd9\u90fd\u662f\u7531Python\u5185\u7f6e\u7684\u89e3\u6790\u5668\u5f15\u8d77\u7684,\u89e3\u51b3\u65b9\u6cd5\u662f \u5b89\u88c5lxml\u6216html5lib \u6700\u5e38\u89c1\u7684\u5f02\u5e38\u73b0\u8c61\u662f\u5f53\u524d\u6587\u6863\u627e\u4e0d\u5230\u6307\u5b9a\u7684Tag,\u800c\u8fd9\u4e2aTag\u5149\u662f\u7528\u773c\u775b\u5c31\u8db3\u591f\u53d1\u73b0\u7684\u4e86. find_all() \u65b9\u6cd5\u8fd4\u56de [] ,\u800c find() \u65b9\u6cd5\u8fd4\u56de None .\u8fd9\u662fPython\u5185\u7f6e\u89e3\u6790\u5668\u7684\u53c8\u4e00\u4e2a\u95ee\u9898: \u89e3\u6790\u5668\u4f1a\u8df3\u8fc7\u90a3\u4e9b\u5b83\u4e0d\u77e5\u9053\u7684tag.\u89e3\u51b3\u65b9\u6cd5\u8fd8\u662f \u5b89\u88c5lxml\u6216html5lib \u7248\u672c\u9519\u8bef \u00b6 SyntaxError: Invalid syntax (\u5f02\u5e38\u4f4d\u7f6e\u5728\u4ee3\u7801\u884c: ROOT_TAG_NAME = u'[document]' ),\u56e0\u4e3aPython2\u8bed\u6cd5\u7684\u4ee3\u7801(\u6ca1\u6709\u7ecf\u8fc7\u8fc1\u79fb)\u76f4\u63a5\u5728Python3\u4e2d\u8fd0\u884c ImportError: No module named HTMLParser \u56e0\u4e3a\u5728Python3\u4e2d\u6267\u884cPython2\u7248\u672c\u7684Beautiful Soup ImportError: No module named html.parser \u56e0\u4e3a\u5728Python2\u4e2d\u6267\u884cPython3\u7248\u672c\u7684Beautiful Soup ImportError: No module named BeautifulSoup \u56e0\u4e3a\u5728\u6ca1\u6709\u5b89\u88c5BeautifulSoup3\u5e93\u7684Python\u73af\u5883\u4e0b\u6267\u884c\u4ee3\u7801,\u6216\u5fd8\u8bb0\u4e86BeautifulSoup4\u7684\u4ee3\u7801\u9700\u8981\u4ece bs4 \u5305\u4e2d\u5f15\u5165 ImportError: No module named bs4 \u56e0\u4e3a\u5f53\u524dPython\u73af\u5883\u4e0b\u8fd8\u6ca1\u6709\u5b89\u88c5BeautifulSoup4 \u89e3\u6790\u6210XML \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b,Beautiful Soup\u4f1a\u5c06\u5f53\u524d\u6587\u6863\u4f5c\u4e3aHTML\u683c\u5f0f\u89e3\u6790,\u5982\u679c\u8981\u89e3\u6790XML\u6587\u6863,\u8981\u5728 BeautifulSoup \u6784\u9020\u65b9\u6cd5\u4e2d\u52a0\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570 \u201cxml\u201d: soup = BeautifulSoup ( markup , \"xml\" ) \u5f53\u7136,\u8fd8\u9700\u8981 \u5b89\u88c5lxml \u89e3\u6790\u5668\u7684\u9519\u8bef \u00b6 \u5982\u679c\u540c\u6837\u7684\u4ee3\u7801\u5728\u4e0d\u540c\u73af\u5883\u4e0b\u7ed3\u679c\u4e0d\u540c,\u53ef\u80fd\u662f\u56e0\u4e3a\u4e24\u4e2a\u73af\u5883\u4e0b\u4f7f\u7528\u4e0d\u540c\u7684\u89e3\u6790\u5668\u9020\u6210\u7684.\u4f8b\u5982\u8fd9\u4e2a\u73af\u5883\u4e2d\u5b89\u88c5\u4e86lxml,\u800c\u53e6\u4e00\u4e2a\u73af\u5883\u4e2d\u53ea\u6709html5lib, \u89e3\u6790\u5668\u4e4b\u95f4\u7684\u533a\u522b \u4e2d\u8bf4\u660e\u4e86\u539f\u56e0.\u4fee\u590d\u65b9\u6cd5\u662f\u5728 BeautifulSoup \u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u4e2d\u6307\u5b9a\u89e3\u6790\u5668 \u56e0\u4e3aHTML\u6807\u7b7e\u662f \u5927\u5c0f\u5199\u654f\u611f \u7684,\u6240\u4ee53\u79cd\u89e3\u6790\u5668\u518d\u51fa\u6765\u6587\u6863\u65f6\u90fd\u5c06tag\u548c\u5c5e\u6027\u8f6c\u6362\u6210\u5c0f\u5199.\u4f8b\u5982\u6587\u6863\u4e2d\u7684 \u4f1a\u88ab\u8f6c\u6362\u4e3a .\u5982\u679c\u60f3\u8981\u4fdd\u7559tag\u7684\u5927\u5199\u7684\u8bdd,\u90a3\u4e48\u5e94\u8be5\u5c06\u6587\u6863 \u89e3\u6790\u6210XML . \u6742\u9879\u9519\u8bef \u00b6 UnicodeEncodeError: 'charmap' codec can't encode character u'\\xfoo' in position bar (\u6216\u5176\u5b83\u7c7b\u578b\u7684 UnicodeEncodeError )\u7684\u9519\u8bef,\u4e3b\u8981\u662f\u4e24\u65b9\u9762\u7684\u9519\u8bef(\u90fd\u4e0d\u662fBeautiful Soup\u7684\u539f\u56e0),\u7b2c\u4e00\u79cd\u662f\u6b63\u5728\u4f7f\u7528\u7684\u7ec8\u7aef(console)\u65e0\u6cd5\u663e\u793a\u90e8\u5206Unicode,\u53c2\u8003 Python wiki ,\u7b2c\u4e8c\u79cd\u662f\u5411\u6587\u4ef6\u5199\u5165\u65f6,\u88ab\u5199\u5165\u6587\u4ef6\u4e0d\u652f\u6301\u90e8\u5206Unicode,\u8fd9\u65f6\u53ea\u8981\u7528 u.encode(\"utf8\") \u65b9\u6cd5\u5c06\u7f16\u7801\u8f6c\u6362\u4e3aUTF-8. KeyError: [attr] \u56e0\u4e3a\u8c03\u7528 tag['attr'] \u65b9\u6cd5\u800c\u5f15\u8d77,\u56e0\u4e3a\u8fd9\u4e2atag\u6ca1\u6709\u5b9a\u4e49\u8be5\u5c5e\u6027.\u51fa\u9519\u6700\u591a\u7684\u662f KeyError: 'href' \u548c KeyError: 'class' .\u5982\u679c\u4e0d\u786e\u5b9a\u67d0\u4e2a\u5c5e\u6027\u662f\u5426\u5b58\u5728\u65f6,\u7528 tag.get('attr') \u65b9\u6cd5\u53bb\u83b7\u53d6\u5b83,\u8ddf\u83b7\u53d6Python\u5b57\u5178\u7684key\u4e00\u6837 AttributeError: 'ResultSet' object has no attribute 'foo' \u9519\u8bef\u901a\u5e38\u662f\u56e0\u4e3a\u628a find_all() \u7684\u8fd4\u56de\u7ed3\u679c\u5f53\u4f5c\u4e00\u4e2atag\u6216\u6587\u672c\u8282\u70b9\u4f7f\u7528,\u5b9e\u9645\u4e0a\u8fd4\u56de\u7ed3\u679c\u662f\u4e00\u4e2a\u5217\u8868\u6216 ResultSet \u5bf9\u8c61\u7684\u5b57\u7b26\u4e32,\u9700\u8981\u5bf9\u7ed3\u679c\u8fdb\u884c\u5faa\u73af\u624d\u80fd\u5f97\u5230\u6bcf\u4e2a\u8282\u70b9\u7684 .foo \u5c5e\u6027.\u6216\u8005\u4f7f\u7528 find() \u65b9\u6cd5\u4ec5\u83b7\u53d6\u5230\u4e00\u4e2a\u8282\u70b9 AttributeError: 'NoneType' object has no attribute 'foo' \u8fd9\u4e2a\u9519\u8bef\u901a\u5e38\u662f\u5728\u8c03\u7528\u4e86 find() \u65b9\u6cd5\u540e\u76f4\u8282\u70b9\u53d6\u67d0\u4e2a\u5c5e\u6027 .foo \u4f46\u662f find() \u65b9\u6cd5\u5e76\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u7ed3\u679c,\u6240\u4ee5\u5b83\u7684\u8fd4\u56de\u503c\u662f None .\u9700\u8981\u627e\u51fa\u4e3a\u4ec0\u4e48 find() \u7684\u8fd4\u56de\u503c\u662f None . \u5982\u4f55\u63d0\u9ad8\u6548\u7387 \u00b6 Beautiful Soup\u5bf9\u6587\u6863\u7684\u89e3\u6790\u901f\u5ea6\u4e0d\u4f1a\u6bd4\u5b83\u6240\u4f9d\u8d56\u7684\u89e3\u6790\u5668\u66f4\u5feb,\u5982\u679c\u5bf9\u8ba1\u7b97\u65f6\u95f4\u8981\u6c42\u5f88\u9ad8\u6216\u8005\u8ba1\u7b97\u673a\u7684\u65f6\u95f4\u6bd4\u7a0b\u5e8f\u5458\u7684\u65f6\u95f4\u66f4\u503c\u94b1,\u90a3\u4e48\u5c31\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528 lxml . \u6362\u53e5\u8bdd\u8bf4,\u8fd8\u6709\u63d0\u9ad8Beautiful Soup\u6548\u7387\u7684\u529e\u6cd5,\u4f7f\u7528lxml\u4f5c\u4e3a\u89e3\u6790\u5668.Beautiful Soup\u7528lxml\u505a\u89e3\u6790\u5668\u6bd4\u7528html5lib\u6216Python\u5185\u7f6e\u89e3\u6790\u5668\u901f\u5ea6\u5feb\u5f88\u591a. \u5b89\u88c5 cchardet \u540e\u6587\u6863\u7684\u89e3\u7801\u7684\u7f16\u7801\u68c0\u6d4b\u4f1a\u901f\u5ea6\u66f4\u5feb \u89e3\u6790\u90e8\u5206\u6587\u6863 \u4e0d\u4f1a\u8282\u7701\u591a\u5c11\u89e3\u6790\u65f6\u95f4,\u4f46\u662f\u4f1a\u8282\u7701\u5f88\u591a\u5185\u5b58,\u5e76\u4e14\u641c\u7d22\u65f6\u4e5f\u4f1a\u53d8\u5f97\u66f4\u5feb.","title":"001-Beautiful-Soup"},{"location":"06-third-part-lib/001-Beautiful-Soup/#beautiful-soup-440","text":"","title":"Beautiful Soup 4.4.0 \u6587\u6863"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_1","text":"Beautiful Soup \u7528\u4e8e\u89e3\u6790 HTML \u5b57\u7b26\u4e32\u5230 python \u5bf9\u8c61\uff0c\u4e3b\u8981\u7528\u4e8e\u722c\u866b\u5206\u6790\u7f51\u9875\u3002 Beautiful Soup \u662f\u4e00\u4e2a\u53ef\u4ee5\u4eceHTML\u6216XML\u6587\u4ef6\u4e2d\u63d0\u53d6\u6570\u636e\u7684Python\u5e93.\u5b83\u80fd\u591f\u901a\u8fc7\u8f6c\u6362\u5668\u5b9e\u73b0\u6587\u6863\u5bfc\u822a,\u67e5\u627e,\u4fee\u6539\u6587\u6863\u7684\u65b9\u5f0f \u5b98\u65b9\u6587\u6863\u94fe\u63a5\uff1a https://beautifulsoup.readthedocs.io/zh-cn/v4.4.0/","title":"\u7528\u9014"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_2","text":"\u8fd9\u7bc7\u6587\u6863\u662f BeautifulSoup4\u3002\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u4f8b\u5b50\u5728Python2.7\u548cPython3.2\u4e2d\u7684\u6267\u884c\u7ed3\u679c\u76f8\u540c\u3002 \u4f60\u53ef\u80fd\u5728\u5bfb\u627e Beautiful Soup3 \u7684\u6587\u6863,Beautiful Soup 3 \u76ee\u524d\u5df2\u7ecf\u505c\u6b62\u5f00\u53d1\uff0c\u6211\u4eec\u63a8\u8350\u5728\u73b0\u5728\u7684\u9879\u76ee\u4e2d\u4f7f\u7528Beautiful Soup 4\u3002","title":"\u7248\u672c\u548c\u73af\u5883"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_3","text":"\u4e0b\u9762\u7684\u4e00\u6bb5HTML\u4ee3\u7801\u5c06\u4f5c\u4e3a\u4f8b\u5b50\u88ab\u591a\u6b21\u7528\u5230.\u8fd9\u662f \u7231\u4e3d\u4e1d\u68a6\u6e38\u4ed9\u5883\u7684 \u7684\u4e00\u6bb5\u5185\u5bb9(\u4ee5\u540e\u5185\u5bb9\u4e2d\u7b80\u79f0\u4e3a \u7231\u4e3d\u4e1d \u7684\u6587\u6863): html_doc = \"\"\" <html><head><title>The Dormouse's story</title></head> <body> <p class=\"title\"><b>The Dormouse's story</b></p> <p class=\"story\">Once upon a time there were three little sisters; and their names were <a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>, <a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and <a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>; and they lived at the bottom of a well.</p> <p class=\"story\">...</p> \"\"\" \u4f7f\u7528BeautifulSoup\u89e3\u6790\u8fd9\u6bb5\u4ee3\u7801,\u80fd\u591f\u5f97\u5230\u4e00\u4e2a BeautifulSoup \u7684\u5bf9\u8c61,\u5e76\u80fd\u6309\u7167\u6807\u51c6\u7684\u7f29\u8fdb\u683c\u5f0f\u7684\u7ed3\u6784\u8f93\u51fa: from bs4 import BeautifulSoup soup = BeautifulSoup ( html_doc , 'html.parser' ) print ( soup . prettify ()) # <html> # <head> # <title> # The Dormouse's story # </title> # </head> # <body> # <p class=\"title\"> # <b> # The Dormouse's story # </b> # </p> # <p class=\"story\"> # Once upon a time there were three little sisters; and their names were # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\"> # Elsie # </a> # , # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\"> # Lacie # </a> # and # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link2\"> # Tillie # </a> # ; and they lived at the bottom of a well. # </p> # <p class=\"story\"> # ... # </p> # </body> # </html> \u51e0\u4e2a\u7b80\u5355\u7684\u6d4f\u89c8\u7ed3\u6784\u5316\u6570\u636e\u7684\u65b9\u6cd5: soup . title # <title>The Dormouse's story</title> soup . title . name # u'title' soup . title . string # u'The Dormouse's story' soup . title . parent . name # u'head' soup . p # <p class=\"title\"><b>The Dormouse's story</b></p> soup . p [ 'class' ] # u'title' soup . a # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> soup . find_all ( 'a' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . find ( id = \"link3\" ) # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a> \u4ece\u6587\u6863\u4e2d\u627e\u5230\u6240\u6709 \u6807\u7b7e\u7684\u94fe\u63a5: for link in soup . find_all ( 'a' ): print ( link . get ( 'href' )) # http://example.com/elsie # http://example.com/lacie # http://example.com/tillie \u4ece\u6587\u6863\u4e2d\u83b7\u53d6\u6240\u6709\u6587\u5b57\u5185\u5bb9: print ( soup . get_text ()) # The Dormouse's story # # The Dormouse's story # # Once upon a time there were three little sisters; and their names were # Elsie, # Lacie and # Tillie; # and they lived at the bottom of a well. # # ...","title":"\u6848\u4f8b"},{"location":"06-third-part-lib/001-Beautiful-Soup/#beautiful-soup","text":"Debain\u6216ubuntu,\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u7cfb\u7edf\u7684\u8f6f\u4ef6\u5305\u7ba1\u7406\u6765\u5b89\u88c5: $ apt-get install Python-bs4 Beautiful Soup 4 \u901a\u8fc7PyPi\u53d1\u5e03,\u6240\u4ee5\u5982\u679c\u4f60\u65e0\u6cd5\u4f7f\u7528\u7cfb\u7edf\u5305\u7ba1\u7406\u5b89\u88c5\u90a3\u4e48\u4e5f\u53ef\u4ee5\u901a\u8fc7 easy_install \u6216 pip \u6765\u5b89\u88c5.\u5305\u7684\u540d\u5b57\u662f beautifulsoup4 ,\u8fd9\u4e2a\u5305\u517c\u5bb9Python2\u548cPython3. $ easy_install beautifulsoup4 $ pip install beautifulsoup4 \u7248\u672c\u8bf4\u660e\uff1a\u5728PyPi\u4e2d\u8fd8\u6709\u4e00\u4e2a\u540d\u5b57\u662f BeautifulSoup \u7684\u5305,\u4f46\u90a3\u53ef\u80fd\u4e0d\u662f\u4f60\u60f3\u8981\u7684,\u90a3\u662f Beautiful Soup3 \u7684\u53d1\u5e03\u7248\u672c,\u56e0\u4e3a\u5f88\u591a\u9879\u76ee\u8fd8\u5728\u4f7f\u7528BS3, \u6240\u4ee5 BeautifulSoup \u5305\u4f9d\u7136\u6709\u6548.\u4f46\u662f\u5982\u679c\u4f60\u5728\u7f16\u5199\u65b0\u9879\u76ee,\u90a3\u4e48\u4f60\u5e94\u8be5\u5b89\u88c5\u7684 beautifulsoup4","title":"\u5b89\u88c5 Beautiful Soup"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_4","text":"Beautiful Soup\u53d1\u5e03\u65f6\u6253\u5305\u6210Python2\u7248\u672c\u7684\u4ee3\u7801,\u5728Python3\u73af\u5883\u4e0b\u5b89\u88c5\u65f6,\u4f1a\u81ea\u52a8\u8f6c\u6362\u6210Python3\u7684\u4ee3\u7801,\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u5b89\u88c5\u7684\u8fc7\u7a0b,\u90a3\u4e48\u4ee3\u7801\u5c31\u4e0d\u4f1a\u88ab\u8f6c\u6362. \u5982\u679c\u4ee3\u7801\u629b\u51fa\u4e86 ImportError \u7684\u5f02\u5e38: \u201cNo module named HTMLParser\u201d, \u8fd9\u662f\u56e0\u4e3a\u4f60\u5728Python3\u7248\u672c\u4e2d\u6267\u884cPython2\u7248\u672c\u7684\u4ee3\u7801. \u5982\u679c\u4ee3\u7801\u629b\u51fa\u4e86 ImportError \u7684\u5f02\u5e38: \u201cNo module named html.parser\u201d, \u8fd9\u662f\u56e0\u4e3a\u4f60\u5728Python2\u7248\u672c\u4e2d\u6267\u884cPython3\u7248\u672c\u7684\u4ee3\u7801. \u5982\u679c\u9047\u5230\u4e0a\u8ff02\u79cd\u60c5\u51b5,\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u91cd\u65b0\u5b89\u88c5BeautifulSoup4. \u5982\u679c\u5728ROOT_TAG_NAME = u\u2019[document]\u2019\u4ee3\u7801\u5904\u9047\u5230 SyntaxError \u201cInvalid syntax\u201d\u9519\u8bef,\u9700\u8981\u5c06\u628aBS4\u7684Python\u4ee3\u7801\u7248\u672c\u4ecePython2\u8f6c\u6362\u5230Python3. \u53ef\u4ee5\u91cd\u65b0\u5b89\u88c5BS4: $ Python3 setup.py install \u6216\u5728bs4\u7684\u76ee\u5f55\u4e2d\u6267\u884cPython\u4ee3\u7801\u7248\u672c\u8f6c\u6362\u811a\u672c $ 2to3-3.2 -w bs4","title":"\u5b89\u88c5\u540e\u7684\u95ee\u9898"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_5","text":"Beautiful Soup\u652f\u6301Python\u6807\u51c6\u5e93\u4e2d\u7684HTML\u89e3\u6790\u5668,\u8fd8\u652f\u6301\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u89e3\u6790\u5668,\u5176\u4e2d\u4e00\u4e2a\u662f lxml .\u6839\u636e\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u540c,\u53ef\u4ee5\u9009\u62e9\u4e0b\u5217\u65b9\u6cd5\u6765\u5b89\u88c5lxml: $ apt-get install Python-lxml $ easy_install lxml $ pip install lxml \u53e6\u4e00\u4e2a\u53ef\u4f9b\u9009\u62e9\u7684\u89e3\u6790\u5668\u662f\u7eafPython\u5b9e\u73b0\u7684 html5lib , html5lib\u7684\u89e3\u6790\u65b9\u5f0f\u4e0e\u6d4f\u89c8\u5668\u76f8\u540c,\u53ef\u4ee5\u9009\u62e9\u4e0b\u5217\u65b9\u6cd5\u6765\u5b89\u88c5html5lib: $ apt-get install Python-html5lib $ easy_install html5lib $ pip install html5lib \u4e0b\u8868\u5217\u51fa\u4e86\u4e3b\u8981\u7684\u89e3\u6790\u5668,\u4ee5\u53ca\u5b83\u4eec\u7684\u4f18\u7f3a\u70b9: \u89e3\u6790\u5668 \u4f7f\u7528\u65b9\u6cd5 \u4f18\u52bf \u52a3\u52bf Python\u6807\u51c6\u5e93 BeautifulSoup(markup, \"html.parser\") Python\u7684\u5185\u7f6e\u6807\u51c6\u5e93\u6267\u884c\u901f\u5ea6\u9002\u4e2d\u6587\u6863\u5bb9\u9519\u80fd\u529b\u5f3a Python 2.7.3 or 3.2.2)\u524d \u7684\u7248\u672c\u4e2d\u6587\u6863\u5bb9\u9519\u80fd\u529b\u5dee lxml HTML \u89e3\u6790\u5668 BeautifulSoup(markup, \"lxml\") \u901f\u5ea6\u5feb\u6587\u6863\u5bb9\u9519\u80fd\u529b\u5f3a \u9700\u8981\u5b89\u88c5C\u8bed\u8a00\u5e93 lxml XML \u89e3\u6790\u5668 BeautifulSoup(markup, [\"lxml-xml\"])``BeautifulSoup(markup, \"xml\") \u901f\u5ea6\u5feb\u552f\u4e00\u652f\u6301XML\u7684\u89e3\u6790\u5668 \u9700\u8981\u5b89\u88c5C\u8bed\u8a00\u5e93 html5lib BeautifulSoup(markup, \"html5lib\") \u6700\u597d\u7684\u5bb9\u9519\u6027\u4ee5\u6d4f\u89c8\u5668\u7684\u65b9\u5f0f\u89e3\u6790\u6587\u6863\u751f\u6210HTML5\u683c\u5f0f\u7684\u6587\u6863 \u901f\u5ea6\u6162\u4e0d\u4f9d\u8d56\u5916\u90e8\u6269\u5c55 \u63a8\u8350\u4f7f\u7528lxml\u4f5c\u4e3a\u89e3\u6790\u5668,\u56e0\u4e3a\u6548\u7387\u66f4\u9ad8. \u5728Python2.7.3\u4e4b\u524d\u7684\u7248\u672c\u548cPython3\u4e2d3.2.2\u4e4b\u524d\u7684\u7248\u672c,\u5fc5\u987b\u5b89\u88c5lxml\u6216html5lib, \u56e0\u4e3a\u90a3\u4e9bPython\u7248\u672c\u7684\u6807\u51c6\u5e93\u4e2d\u5185\u7f6e\u7684HTML\u89e3\u6790\u65b9\u6cd5\u4e0d\u591f\u7a33\u5b9a. \u63d0\u793a: \u5982\u679c\u4e00\u6bb5HTML\u6216XML\u6587\u6863\u683c\u5f0f\u4e0d\u6b63\u786e\u7684\u8bdd,\u90a3\u4e48\u5728\u4e0d\u540c\u7684\u89e3\u6790\u5668\u4e2d\u8fd4\u56de\u7684\u7ed3\u679c\u53ef\u80fd\u662f\u4e0d\u4e00\u6837\u7684,\u67e5\u770b \u89e3\u6790\u5668\u4e4b\u95f4\u7684\u533a\u522b \u4e86\u89e3\u66f4\u591a\u7ec6\u8282","title":"\u5b89\u88c5\u89e3\u6790\u5668"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_6","text":"\u5c06\u4e00\u6bb5\u6587\u6863\u4f20\u5165BeautifulSoup \u7684\u6784\u9020\u65b9\u6cd5,\u5c31\u80fd\u5f97\u5230\u4e00\u4e2a\u6587\u6863\u7684\u5bf9\u8c61, \u53ef\u4ee5\u4f20\u5165\u4e00\u6bb5\u5b57\u7b26\u4e32\u6216\u4e00\u4e2a\u6587\u4ef6\u53e5\u67c4. from bs4 import BeautifulSoup soup = BeautifulSoup ( open ( \"index.html\" )) soup = BeautifulSoup ( \"<html>data</html>\" ) \u9996\u5148,\u6587\u6863\u88ab\u8f6c\u6362\u6210Unicode,\u5e76\u4e14HTML\u7684\u5b9e\u4f8b\u90fd\u88ab\u8f6c\u6362\u6210Unicode\u7f16\u7801 BeautifulSoup ( \"Sacr&eacute; bleu!\" ) < html >< head ></ head >< body > Sacr\u00e9 bleu ! </ body ></ html > \u7136\u540e,Beautiful Soup\u9009\u62e9\u6700\u5408\u9002\u7684\u89e3\u6790\u5668\u6765\u89e3\u6790\u8fd9\u6bb5\u6587\u6863,\u5982\u679c\u624b\u52a8\u6307\u5b9a\u89e3\u6790\u5668\u90a3\u4e48Beautiful Soup\u4f1a\u9009\u62e9\u6307\u5b9a\u7684\u89e3\u6790\u5668\u6765\u89e3\u6790\u6587\u6863.(\u53c2\u8003 \u89e3\u6790\u6210XML ). \u540e\u9762\u662f\u539f\u59cb\u7684\u6587\u6863\uff0c\u9700\u8981\u65f6\u518d\u770b\u3002","title":"\u5982\u4f55\u4f7f\u7528"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_7","text":"Beautiful Soup\u5c06\u590d\u6742HTML\u6587\u6863\u8f6c\u6362\u6210\u4e00\u4e2a\u590d\u6742\u7684\u6811\u5f62\u7ed3\u6784,\u6bcf\u4e2a\u8282\u70b9\u90fd\u662fPython\u5bf9\u8c61,\u6240\u6709\u5bf9\u8c61\u53ef\u4ee5\u5f52\u7eb3\u4e3a4\u79cd: Tag , NavigableString , BeautifulSoup , Comment .","title":"\u5bf9\u8c61\u7684\u79cd\u7c7b"},{"location":"06-third-part-lib/001-Beautiful-Soup/#tag","text":"Tag \u5bf9\u8c61\u4e0eXML\u6216HTML\u539f\u751f\u6587\u6863\u4e2d\u7684tag\u76f8\u540c: soup = BeautifulSoup ( '<b class=\"boldest\">Extremely bold</b>' ) tag = soup . b type ( tag ) # <class 'bs4.element.Tag'> Tag\u6709\u5f88\u591a\u65b9\u6cd5\u548c\u5c5e\u6027,\u5728 \u904d\u5386\u6587\u6863\u6811 \u548c \u641c\u7d22\u6587\u6863\u6811 \u4e2d\u6709\u8be6\u7ec6\u89e3\u91ca.\u73b0\u5728\u4ecb\u7ecd\u4e00\u4e0btag\u4e2d\u6700\u91cd\u8981\u7684\u5c5e\u6027: name\u548cattributes","title":"Tag"},{"location":"06-third-part-lib/001-Beautiful-Soup/#name","text":"\u6bcf\u4e2atag\u90fd\u6709\u81ea\u5df1\u7684\u540d\u5b57,\u901a\u8fc7 .name \u6765\u83b7\u53d6: tag . name # u'b' \u5982\u679c\u6539\u53d8\u4e86tag\u7684name,\u90a3\u5c06\u5f71\u54cd\u6240\u6709\u901a\u8fc7\u5f53\u524dBeautiful Soup\u5bf9\u8c61\u751f\u6210\u7684HTML\u6587\u6863: tag . name = \"blockquote\" tag # <blockquote class=\"boldest\">Extremely bold</blockquote>","title":"Name"},{"location":"06-third-part-lib/001-Beautiful-Soup/#attributes","text":"\u4e00\u4e2atag\u53ef\u80fd\u6709\u5f88\u591a\u4e2a\u5c5e\u6027. tag <b class=\"boldest\"> \u6709\u4e00\u4e2a \u201cclass\u201d \u7684\u5c5e\u6027,\u503c\u4e3a \u201cboldest\u201d . tag\u7684\u5c5e\u6027\u7684\u64cd\u4f5c\u65b9\u6cd5\u4e0e\u5b57\u5178\u76f8\u540c: tag [ 'class' ] # u'boldest' \u4e5f\u53ef\u4ee5\u76f4\u63a5\u201d\u70b9\u201d\u53d6\u5c5e\u6027, \u6bd4\u5982: .attrs : tag . attrs # {u'class': u'boldest'} tag\u7684\u5c5e\u6027\u53ef\u4ee5\u88ab\u6dfb\u52a0,\u5220\u9664\u6216\u4fee\u6539. \u518d\u8bf4\u4e00\u6b21, tag\u7684\u5c5e\u6027\u64cd\u4f5c\u65b9\u6cd5\u4e0e\u5b57\u5178\u4e00\u6837 tag [ 'class' ] = 'verybold' tag [ 'id' ] = 1 tag # <blockquote class=\"verybold\" id=\"1\">Extremely bold</blockquote> del tag [ 'class' ] del tag [ 'id' ] tag # <blockquote>Extremely bold</blockquote> tag [ 'class' ] # KeyError: 'class' print ( tag . get ( 'class' )) # None","title":"Attributes"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_8","text":"HTML 4\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u503c\u7684\u5c5e\u6027.\u5728HTML5\u4e2d\u79fb\u9664\u4e86\u4e00\u4e9b,\u5374\u589e\u52a0\u66f4\u591a.\u6700\u5e38\u89c1\u7684\u591a\u503c\u7684\u5c5e\u6027\u662f class (\u4e00\u4e2atag\u53ef\u4ee5\u6709\u591a\u4e2aCSS\u7684class). \u8fd8\u6709\u4e00\u4e9b\u5c5e\u6027 rel , rev , accept-charset , headers , accesskey . \u5728Beautiful Soup\u4e2d\u591a\u503c\u5c5e\u6027\u7684\u8fd4\u56de\u7c7b\u578b\u662flist: css_soup = BeautifulSoup ( '<p class=\"body strikeout\"></p>' ) css_soup . p [ 'class' ] # [\"body\", \"strikeout\"] css_soup = BeautifulSoup ( '<p class=\"body\"></p>' ) css_soup . p [ 'class' ] # [\"body\"] \u5982\u679c\u67d0\u4e2a\u5c5e\u6027\u770b\u8d77\u6765\u597d\u50cf\u6709\u591a\u4e2a\u503c,\u4f46\u5728\u4efb\u4f55\u7248\u672c\u7684HTML\u5b9a\u4e49\u4e2d\u90fd\u6ca1\u6709\u88ab\u5b9a\u4e49\u4e3a\u591a\u503c\u5c5e\u6027,\u90a3\u4e48Beautiful Soup\u4f1a\u5c06\u8fd9\u4e2a\u5c5e\u6027\u4f5c\u4e3a\u5b57\u7b26\u4e32\u8fd4\u56de id_soup = BeautifulSoup ( '<p id=\"my id\"></p>' ) id_soup . p [ 'id' ] # 'my id' \u5c06tag\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u65f6,\u591a\u503c\u5c5e\u6027\u4f1a\u5408\u5e76\u4e3a\u4e00\u4e2a\u503c rel_soup = BeautifulSoup ( '<p>Back to the <a rel=\"index\">homepage</a></p>' ) rel_soup . a [ 'rel' ] # ['index'] rel_soup . a [ 'rel' ] = [ 'index' , 'contents' ] print ( rel_soup . p ) # <p>Back to the <a rel=\"index contents\">homepage</a></p> \u5982\u679c\u8f6c\u6362\u7684\u6587\u6863\u662fXML\u683c\u5f0f,\u90a3\u4e48tag\u4e2d\u4e0d\u5305\u542b\u591a\u503c\u5c5e\u6027 xml_soup = BeautifulSoup ( '<p class=\"body strikeout\"></p>' , 'xml' ) xml_soup . p [ 'class' ] # u'body strikeout'","title":"\u591a\u503c\u5c5e\u6027"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_9","text":"\u5b57\u7b26\u4e32\u5e38\u88ab\u5305\u542b\u5728tag\u5185.Beautiful Soup\u7528 NavigableString \u7c7b\u6765\u5305\u88c5tag\u4e2d\u7684\u5b57\u7b26\u4e32: tag . string # u'Extremely bold' type ( tag . string ) # <class 'bs4.element.NavigableString'> \u4e00\u4e2a NavigableString \u5b57\u7b26\u4e32\u4e0ePython\u4e2d\u7684Unicode\u5b57\u7b26\u4e32\u76f8\u540c,\u5e76\u4e14\u8fd8\u652f\u6301\u5305\u542b\u5728 \u904d\u5386\u6587\u6863\u6811 \u548c \u641c\u7d22\u6587\u6863\u6811 \u4e2d\u7684\u4e00\u4e9b\u7279\u6027. \u901a\u8fc7 unicode() \u65b9\u6cd5\u53ef\u4ee5\u76f4\u63a5\u5c06 NavigableString \u5bf9\u8c61\u8f6c\u6362\u6210Unicode\u5b57\u7b26\u4e32: unicode_string = unicode(tag.string) unicode_string # u'Extremely bold' type(unicode_string) # <type 'unicode'> tag\u4e2d\u5305\u542b\u7684\u5b57\u7b26\u4e32\u4e0d\u80fd\u7f16\u8f91,\u4f46\u662f\u53ef\u4ee5\u88ab\u66ff\u6362\u6210\u5176\u5b83\u7684\u5b57\u7b26\u4e32,\u7528 replace_with() \u65b9\u6cd5: tag.string.replace_with(\"No longer bold\") tag # <blockquote>No longer bold</blockquote> NavigableString \u5bf9\u8c61\u652f\u6301 \u904d\u5386\u6587\u6863\u6811 \u548c \u641c\u7d22\u6587\u6863\u6811 \u4e2d\u5b9a\u4e49\u7684\u5927\u90e8\u5206\u5c5e\u6027, \u5e76\u975e\u5168\u90e8.\u5c24\u5176\u662f,\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e0d\u80fd\u5305\u542b\u5176\u5b83\u5185\u5bb9(tag\u80fd\u591f\u5305\u542b\u5b57\u7b26\u4e32\u6216\u662f\u5176\u5b83tag),\u5b57\u7b26\u4e32\u4e0d\u652f\u6301 .contents \u6216 .string \u5c5e\u6027\u6216 find() \u65b9\u6cd5. \u5982\u679c\u60f3\u5728Beautiful Soup\u4e4b\u5916\u4f7f\u7528 NavigableString \u5bf9\u8c61,\u9700\u8981\u8c03\u7528 unicode() \u65b9\u6cd5,\u5c06\u8be5\u5bf9\u8c61\u8f6c\u6362\u6210\u666e\u901a\u7684Unicode\u5b57\u7b26\u4e32,\u5426\u5219\u5c31\u7b97Beautiful Soup\u5df2\u65b9\u6cd5\u5df2\u7ecf\u6267\u884c\u7ed3\u675f,\u8be5\u5bf9\u8c61\u7684\u8f93\u51fa\u4e5f\u4f1a\u5e26\u6709\u5bf9\u8c61\u7684\u5f15\u7528\u5730\u5740.\u8fd9\u6837\u4f1a\u6d6a\u8d39\u5185\u5b58.","title":"\u53ef\u4ee5\u904d\u5386\u7684\u5b57\u7b26\u4e32"},{"location":"06-third-part-lib/001-Beautiful-Soup/#beautifulsoup","text":"BeautifulSoup \u5bf9\u8c61\u8868\u793a\u7684\u662f\u4e00\u4e2a\u6587\u6863\u7684\u5168\u90e8\u5185\u5bb9.\u5927\u90e8\u5206\u65f6\u5019,\u53ef\u4ee5\u628a\u5b83\u5f53\u4f5c Tag \u5bf9\u8c61,\u5b83\u652f\u6301 \u904d\u5386\u6587\u6863\u6811 \u548c \u641c\u7d22\u6587\u6863\u6811 \u4e2d\u63cf\u8ff0\u7684\u5927\u90e8\u5206\u7684\u65b9\u6cd5. \u56e0\u4e3a BeautifulSoup \u5bf9\u8c61\u5e76\u4e0d\u662f\u771f\u6b63\u7684HTML\u6216XML\u7684tag,\u6240\u4ee5\u5b83\u6ca1\u6709name\u548cattribute\u5c5e\u6027.\u4f46\u6709\u65f6\u67e5\u770b\u5b83\u7684 .name \u5c5e\u6027\u662f\u5f88\u65b9\u4fbf\u7684,\u6240\u4ee5 BeautifulSoup \u5bf9\u8c61\u5305\u542b\u4e86\u4e00\u4e2a\u503c\u4e3a \u201c[document]\u201d \u7684\u7279\u6b8a\u5c5e\u6027 .name soup . name # u'[document]'","title":"BeautifulSoup"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_10","text":"Tag , NavigableString , BeautifulSoup \u51e0\u4e4e\u8986\u76d6\u4e86html\u548cxml\u4e2d\u7684\u6240\u6709\u5185\u5bb9,\u4f46\u662f\u8fd8\u6709\u4e00\u4e9b\u7279\u6b8a\u5bf9\u8c61.\u5bb9\u6613\u8ba9\u4eba\u62c5\u5fc3\u7684\u5185\u5bb9\u662f\u6587\u6863\u7684\u6ce8\u91ca\u90e8\u5206: markup = \"<b><!--Hey, buddy. Want to buy a used parser?--></b>\" soup = BeautifulSoup ( markup ) comment = soup . b . string type ( comment ) # <class 'bs4.element.Comment'> Comment \u5bf9\u8c61\u662f\u4e00\u4e2a\u7279\u6b8a\u7c7b\u578b\u7684 NavigableString \u5bf9\u8c61: comment # u'Hey, buddy. Want to buy a used parser' \u4f46\u662f\u5f53\u5b83\u51fa\u73b0\u5728HTML\u6587\u6863\u4e2d\u65f6, Comment \u5bf9\u8c61\u4f1a\u4f7f\u7528\u7279\u6b8a\u7684\u683c\u5f0f\u8f93\u51fa: print ( soup . b . prettify ()) # <b> # <!--Hey, buddy. Want to buy a used parser?--> # </b> Beautiful Soup\u4e2d\u5b9a\u4e49\u7684\u5176\u5b83\u7c7b\u578b\u90fd\u53ef\u80fd\u4f1a\u51fa\u73b0\u5728XML\u7684\u6587\u6863\u4e2d: CData , ProcessingInstruction , Declaration , Doctype .\u4e0e Comment \u5bf9\u8c61\u7c7b\u4f3c,\u8fd9\u4e9b\u7c7b\u90fd\u662f NavigableString \u7684\u5b50\u7c7b,\u53ea\u662f\u6dfb\u52a0\u4e86\u4e00\u4e9b\u989d\u5916\u7684\u65b9\u6cd5\u7684\u5b57\u7b26\u4e32\u72ec\u4eab.\u4e0b\u9762\u662f\u7528CDATA\u6765\u66ff\u4ee3\u6ce8\u91ca\u7684\u4f8b\u5b50: from bs4 import CData cdata = CData(\"A CDATA block\") comment.replace_with(cdata) print(soup.b.prettify()) # <b> # <![CDATA[A CDATA block]]> # </b>","title":"\u6ce8\u91ca\u53ca\u7279\u6b8a\u5b57\u7b26\u4e32"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_11","text":"\u8fd8\u62ff\u201d\u7231\u4e3d\u4e1d\u68a6\u6e38\u4ed9\u5883\u201d\u7684\u6587\u6863\u6765\u505a\u4f8b\u5b50: html_doc = \"\"\" <html><head><title>The Dormouse's story</title></head> <body> <p class=\"title\"><b>The Dormouse's story</b></p> <p class=\"story\">Once upon a time there were three little sisters; and their names were <a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>, <a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and <a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>; and they lived at the bottom of a well.</p> <p class=\"story\">...</p> \"\"\" from bs4 import BeautifulSoup soup = BeautifulSoup ( html_doc , 'html.parser' ) \u901a\u8fc7\u8fd9\u6bb5\u4f8b\u5b50\u6765\u6f14\u793a\u600e\u6837\u4ece\u6587\u6863\u7684\u4e00\u6bb5\u5185\u5bb9\u627e\u5230\u53e6\u4e00\u6bb5\u5185\u5bb9","title":"\u904d\u5386\u6587\u6863\u6811"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_12","text":"\u4e00\u4e2aTag\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u5b57\u7b26\u4e32\u6216\u5176\u5b83\u7684Tag,\u8fd9\u4e9b\u90fd\u662f\u8fd9\u4e2aTag\u7684\u5b50\u8282\u70b9.Beautiful Soup\u63d0\u4f9b\u4e86\u8bb8\u591a\u64cd\u4f5c\u548c\u904d\u5386\u5b50\u8282\u70b9\u7684\u5c5e\u6027. \u6ce8\u610f: Beautiful Soup\u4e2d\u5b57\u7b26\u4e32\u8282\u70b9\u4e0d\u652f\u6301\u8fd9\u4e9b\u5c5e\u6027,\u56e0\u4e3a\u5b57\u7b26\u4e32\u6ca1\u6709\u5b50\u8282\u70b9","title":"\u5b50\u8282\u70b9"},{"location":"06-third-part-lib/001-Beautiful-Soup/#tag_1","text":"\u64cd\u4f5c\u6587\u6863\u6811\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u544a\u8bc9\u5b83\u4f60\u60f3\u83b7\u53d6\u7684tag\u7684name.\u5982\u679c\u60f3\u83b7\u53d6 \u6807\u7b7e,\u53ea\u8981\u7528 soup.head : soup . head # <head><title>The Dormouse's story</title></head> soup . title # <title>The Dormouse's story</title> \u8fd9\u662f\u4e2a\u83b7\u53d6tag\u7684\u5c0f\u7a8d\u95e8,\u53ef\u4ee5\u5728\u6587\u6863\u6811\u7684tag\u4e2d\u591a\u6b21\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5.\u4e0b\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u83b7\u53d6 \u6807\u7b7e\u4e2d\u7684\u7b2c\u4e00\u4e2a \u6807\u7b7e: soup . body . b # <b>The Dormouse's story</b> \u901a\u8fc7\u70b9\u53d6\u5c5e\u6027\u7684\u65b9\u5f0f\u53ea\u80fd\u83b7\u5f97\u5f53\u524d\u540d\u5b57\u7684\u7b2c\u4e00\u4e2atag: soup . a # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> \u5982\u679c\u60f3\u8981\u5f97\u5230\u6240\u6709\u7684 \u6807\u7b7e,\u6216\u662f\u901a\u8fc7\u540d\u5b57\u5f97\u5230\u6bd4\u4e00\u4e2atag\u66f4\u591a\u7684\u5185\u5bb9\u7684\u65f6\u5019,\u5c31\u9700\u8981\u7528\u5230 Searching the tree \u4e2d\u63cf\u8ff0\u7684\u65b9\u6cd5,\u6bd4\u5982: find_all() soup . find_all ( 'a' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>]","title":"tag\u7684\u540d\u5b57"},{"location":"06-third-part-lib/001-Beautiful-Soup/#contents-children","text":"tag\u7684 .contents \u5c5e\u6027\u53ef\u4ee5\u5c06tag\u7684\u5b50\u8282\u70b9\u4ee5\u5217\u8868\u7684\u65b9\u5f0f\u8f93\u51fa: head_tag = soup . head head_tag # <head><title>The Dormouse's story</title></head> head_tag . contents [ < title > The Dormouse 's story</title>] title_tag = head_tag . contents [ 0 ] title_tag # <title>The Dormouse's story</title> title_tag . contents # [u'The Dormouse's story'] BeautifulSoup \u5bf9\u8c61\u672c\u8eab\u4e00\u5b9a\u4f1a\u5305\u542b\u5b50\u8282\u70b9,\u4e5f\u5c31\u662f\u8bf4 \u6807\u7b7e\u4e5f\u662f BeautifulSoup \u5bf9\u8c61\u7684\u5b50\u8282\u70b9: len ( soup . contents ) # 1 soup . contents [ 0 ] . name # u'html' \u5b57\u7b26\u4e32\u6ca1\u6709 .contents \u5c5e\u6027,\u56e0\u4e3a\u5b57\u7b26\u4e32\u6ca1\u6709\u5b50\u8282\u70b9: text = title_tag . contents [ 0 ] text . contents # AttributeError: 'NavigableString' object has no attribute 'contents' \u901a\u8fc7tag\u7684 .children \u751f\u6210\u5668,\u53ef\u4ee5\u5bf9tag\u7684\u5b50\u8282\u70b9\u8fdb\u884c\u5faa\u73af: for child in title_tag . children : print ( child ) # The Dormouse's story","title":".contents \u548c .children"},{"location":"06-third-part-lib/001-Beautiful-Soup/#descendants","text":".contents \u548c .children \u5c5e\u6027\u4ec5\u5305\u542btag\u7684\u76f4\u63a5\u5b50\u8282\u70b9.\u4f8b\u5982, \u6807\u7b7e\u53ea\u6709\u4e00\u4e2a\u76f4\u63a5\u5b50\u8282\u70b9 head_tag . contents # [<title>The Dormouse's story</title>] \u4f46\u662f \u6807\u7b7e\u4e5f\u5305\u542b\u4e00\u4e2a\u5b50\u8282\u70b9:\u5b57\u7b26\u4e32 \u201cThe Dormouse\u2019s story\u201d,\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b57\u7b26\u4e32 \u201cThe Dormouse\u2019s story\u201d\u4e5f\u5c5e\u4e8e \u6807\u7b7e\u7684\u5b50\u5b59\u8282\u70b9. .descendants \u5c5e\u6027\u53ef\u4ee5\u5bf9\u6240\u6709tag\u7684\u5b50\u5b59\u8282\u70b9\u8fdb\u884c\u9012\u5f52\u5faa\u73af [ 5] : for child in head_tag . descendants : print ( child ) # <title>The Dormouse's story</title> # The Dormouse's story \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d, \u6807\u7b7e\u53ea\u6709\u4e00\u4e2a\u5b50\u8282\u70b9,\u4f46\u662f\u67092\u4e2a\u5b50\u5b59\u8282\u70b9: \u8282\u70b9\u548c \u7684\u5b50\u8282\u70b9, BeautifulSoup \u6709\u4e00\u4e2a\u76f4\u63a5\u5b50\u8282\u70b9( \u8282\u70b9),\u5374\u6709\u5f88\u591a\u5b50\u5b59\u8282\u70b9: len ( list ( soup . children )) # 1 len ( list ( soup . descendants )) # 25","title":".descendants"},{"location":"06-third-part-lib/001-Beautiful-Soup/#string","text":"\u5982\u679ctag\u53ea\u6709\u4e00\u4e2a NavigableString \u7c7b\u578b\u5b50\u8282\u70b9,\u90a3\u4e48\u8fd9\u4e2atag\u53ef\u4ee5\u4f7f\u7528 .string \u5f97\u5230\u5b50\u8282\u70b9: title_tag . string # u'The Dormouse's story' \u5982\u679c\u4e00\u4e2atag\u4ec5\u6709\u4e00\u4e2a\u5b50\u8282\u70b9,\u90a3\u4e48\u8fd9\u4e2atag\u4e5f\u53ef\u4ee5\u4f7f\u7528 .string \u65b9\u6cd5,\u8f93\u51fa\u7ed3\u679c\u4e0e\u5f53\u524d\u552f\u4e00\u5b50\u8282\u70b9\u7684 .string \u7ed3\u679c\u76f8\u540c: head_tag . contents # [<title>The Dormouse's story</title>] head_tag . string # u'The Dormouse's story' \u5982\u679ctag\u5305\u542b\u4e86\u591a\u4e2a\u5b50\u8282\u70b9,tag\u5c31\u65e0\u6cd5\u786e\u5b9a .string \u65b9\u6cd5\u5e94\u8be5\u8c03\u7528\u54ea\u4e2a\u5b50\u8282\u70b9\u7684\u5185\u5bb9, .string \u7684\u8f93\u51fa\u7ed3\u679c\u662f None : print ( soup . html . string ) # None","title":".string"},{"location":"06-third-part-lib/001-Beautiful-Soup/#strings-stripped_strings","text":"\u5982\u679ctag\u4e2d\u5305\u542b\u591a\u4e2a\u5b57\u7b26\u4e32 [ 2] ,\u53ef\u4ee5\u4f7f\u7528 .strings \u6765\u5faa\u73af\u83b7\u53d6: for string in soup . strings : print ( repr ( string )) # u\"The Dormouse's story\" # u'\\n\\n' # u\"The Dormouse's story\" # u'\\n\\n' # u'Once upon a time there were three little sisters; and their names were\\n' # u'Elsie' # u',\\n' # u'Lacie' # u' and\\n' # u'Tillie' # u';\\nand they lived at the bottom of a well.' # u'\\n\\n' # u'...' # u'\\n' \u8f93\u51fa\u7684\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u5305\u542b\u4e86\u5f88\u591a\u7a7a\u683c\u6216\u7a7a\u884c,\u4f7f\u7528 .stripped_strings \u53ef\u4ee5\u53bb\u9664\u591a\u4f59\u7a7a\u767d\u5185\u5bb9: for string in soup . stripped_strings : print ( repr ( string )) # u\"The Dormouse's story\" # u\"The Dormouse's story\" # u'Once upon a time there were three little sisters; and their names were' # u'Elsie' # u',' # u'Lacie' # u'and' # u'Tillie' # u';\\nand they lived at the bottom of a well.' # u'...' \u5168\u90e8\u662f\u7a7a\u683c\u7684\u884c\u4f1a\u88ab\u5ffd\u7565\u6389,\u6bb5\u9996\u548c\u6bb5\u672b\u7684\u7a7a\u767d\u4f1a\u88ab\u5220\u9664","title":".strings \u548c stripped_strings"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_13","text":"\u7ee7\u7eed\u5206\u6790\u6587\u6863\u6811,\u6bcf\u4e2atag\u6216\u5b57\u7b26\u4e32\u90fd\u6709\u7236\u8282\u70b9:\u88ab\u5305\u542b\u5728\u67d0\u4e2atag\u4e2d","title":"\u7236\u8282\u70b9"},{"location":"06-third-part-lib/001-Beautiful-Soup/#parent","text":"\u901a\u8fc7 .parent \u5c5e\u6027\u6765\u83b7\u53d6\u67d0\u4e2a\u5143\u7d20\u7684\u7236\u8282\u70b9.\u5728\u4f8b\u5b50\u201c\u7231\u4e3d\u4e1d\u201d\u7684\u6587\u6863\u4e2d, \u6807\u7b7e\u662f \u6807\u7b7e\u7684\u7236\u8282\u70b9: title_tag = soup . title title_tag # <title>The Dormouse's story</title> title_tag . parent # <head><title>The Dormouse's story</title></head> \u6587\u6863title\u7684\u5b57\u7b26\u4e32\u4e5f\u6709\u7236\u8282\u70b9: \u6807\u7b7e title_tag . string . parent # <title>The Dormouse's story</title> \u6587\u6863\u7684\u9876\u5c42\u8282\u70b9\u6bd4\u5982 \u7684\u7236\u8282\u70b9\u662f BeautifulSoup \u5bf9\u8c61: html_tag = soup . html type ( html_tag . parent ) # <class 'bs4.BeautifulSoup'> BeautifulSoup \u5bf9\u8c61\u7684 .parent \u662fNone: print(soup.parent) # None","title":".parent"},{"location":"06-third-part-lib/001-Beautiful-Soup/#parents","text":"\u901a\u8fc7\u5143\u7d20\u7684 .parents \u5c5e\u6027\u53ef\u4ee5\u9012\u5f52\u5f97\u5230\u5143\u7d20\u7684\u6240\u6709\u7236\u8f88\u8282\u70b9,\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e86 .parents \u65b9\u6cd5\u904d\u5386\u4e86 \u6807\u7b7e\u5230\u6839\u8282\u70b9\u7684\u6240\u6709\u8282\u70b9. link = soup . a link # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> for parent in link . parents : if parent is None : print ( parent ) else : print ( parent . name ) # p # body # html # [document] # None","title":".parents"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_14","text":"\u770b\u4e00\u6bb5\u7b80\u5355\u7684\u4f8b\u5b50: sibling_soup = BeautifulSoup ( \"<a><b>text1</b><c>text2</c></b></a>\" ) print ( sibling_soup . prettify ()) # <html> # <body> # <a> # <b> # text1 # </b> # <c> # text2 # </c> # </a> # </body> # </html> \u56e0\u4e3a \u6807\u7b7e\u548c \u6807\u7b7e\u662f\u540c\u4e00\u5c42:\u4ed6\u4eec\u662f\u540c\u4e00\u4e2a\u5143\u7d20\u7684\u5b50\u8282\u70b9,\u6240\u4ee5 \u548c \u53ef\u4ee5\u88ab\u79f0\u4e3a\u5144\u5f1f\u8282\u70b9.\u4e00\u6bb5\u6587\u6863\u4ee5\u6807\u51c6\u683c\u5f0f\u8f93\u51fa\u65f6,\u5144\u5f1f\u8282\u70b9\u6709\u76f8\u540c\u7684\u7f29\u8fdb\u7ea7\u522b.\u5728\u4ee3\u7801\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u5173\u7cfb.","title":"\u5144\u5f1f\u8282\u70b9"},{"location":"06-third-part-lib/001-Beautiful-Soup/#next_sibling-previous_sibling","text":"\u5728\u6587\u6863\u6811\u4e2d,\u4f7f\u7528 .next_sibling \u548c .previous_sibling \u5c5e\u6027\u6765\u67e5\u8be2\u5144\u5f1f\u8282\u70b9: sibling_soup . b . next_sibling # <c>text2</c> sibling_soup . c . previous_sibling # <b>text1</b> \u6807\u7b7e\u6709 .next_sibling \u5c5e\u6027,\u4f46\u662f\u6ca1\u6709 .previous_sibling \u5c5e\u6027,\u56e0\u4e3a \u6807\u7b7e\u5728\u540c\u7ea7\u8282\u70b9\u4e2d\u662f\u7b2c\u4e00\u4e2a.\u540c\u7406, \u6807\u7b7e\u6709 .previous_sibling \u5c5e\u6027,\u5374\u6ca1\u6709 .next_sibling \u5c5e\u6027: print ( sibling_soup . b . previous_sibling ) # None print ( sibling_soup . c . next_sibling ) # None \u4f8b\u5b50\u4e2d\u7684\u5b57\u7b26\u4e32\u201ctext1\u201d\u548c\u201ctext2\u201d\u4e0d\u662f\u5144\u5f1f\u8282\u70b9,\u56e0\u4e3a\u5b83\u4eec\u7684\u7236\u8282\u70b9\u4e0d\u540c: sibling_soup . b . string # u'text1' print ( sibling_soup . b . string . next_sibling ) # None \u5b9e\u9645\u6587\u6863\u4e2d\u7684tag\u7684 .next_sibling \u548c .previous_sibling \u5c5e\u6027\u901a\u5e38\u662f\u5b57\u7b26\u4e32\u6216\u7a7a\u767d. \u770b\u770b\u201c\u7231\u4e3d\u4e1d\u201d\u6587\u6863: < a href = \"http://example.com/elsie\" class = \"sister\" id = \"link1\" > Elsie </ a > < a href = \"http://example.com/lacie\" class = \"sister\" id = \"link2\" > Lacie </ a > < a href = \"http://example.com/tillie\" class = \"sister\" id = \"link3\" > Tillie </ a > \u5982\u679c\u4ee5\u4e3a\u7b2c\u4e00\u4e2a \u6807\u7b7e\u7684 .next_sibling \u7ed3\u679c\u662f\u7b2c\u4e8c\u4e2a \u6807\u7b7e,\u90a3\u5c31\u9519\u4e86,\u771f\u5b9e\u7ed3\u679c\u662f\u7b2c\u4e00\u4e2a \u6807\u7b7e\u548c\u7b2c\u4e8c\u4e2a \u6807\u7b7e\u4e4b\u95f4\u7684\u987f\u53f7\u548c\u6362\u884c\u7b26: link = soup . a link # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> link . next_sibling # u',\\n' \u7b2c\u4e8c\u4e2a \u6807\u7b7e\u662f\u987f\u53f7\u7684 .next_sibling \u5c5e\u6027: link . next_sibling . next_sibling # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>","title":".next_sibling \u548c .previous_sibling"},{"location":"06-third-part-lib/001-Beautiful-Soup/#next_siblings-previous_siblings","text":"\u901a\u8fc7 .next_siblings \u548c .previous_siblings \u5c5e\u6027\u53ef\u4ee5\u5bf9\u5f53\u524d\u8282\u70b9\u7684\u5144\u5f1f\u8282\u70b9\u8fed\u4ee3\u8f93\u51fa: for sibling in soup . a . next_siblings : print ( repr ( sibling )) # u',\\n' # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a> # u' and\\n' # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a> # u'; and they lived at the bottom of a well.' # None for sibling in soup . find ( id = \"link3\" ) . previous_siblings : print ( repr ( sibling )) # ' and\\n' # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a> # u',\\n' # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> # u'Once upon a time there were three little sisters; and their names were\\n' # None","title":".next_siblings \u548c .previous_siblings"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_15","text":"\u770b\u4e00\u4e0b\u201c\u7231\u4e3d\u4e1d\u201d \u6587\u6863: < html >< head >< title > The Dormouse's story </ title ></ head > < p class = \"title\" >< b > The Dormouse's story </ b ></ p > HTML\u89e3\u6790\u5668\u628a\u8fd9\u6bb5\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u4e00\u8fde\u4e32\u7684\u4e8b\u4ef6: \u201c\u6253\u5f00 \u6807\u7b7e\u201d,\u201d\u6253\u5f00\u4e00\u4e2a \u6807\u7b7e\u201d,\u201d\u6253\u5f00\u4e00\u4e2a \u6807\u7b7e\u201d,\u201d\u6dfb\u52a0\u4e00\u6bb5\u5b57\u7b26\u4e32\u201d,\u201d\u5173\u95ed \u6807\u7b7e\u201d,\u201d\u6253\u5f00 \u6807\u7b7e\u201d,\u7b49\u7b49.Beautiful Soup\u63d0\u4f9b\u4e86\u91cd\u73b0\u89e3\u6790\u5668\u521d\u59cb\u5316\u8fc7\u7a0b\u7684\u65b9\u6cd5.","title":"\u56de\u9000\u548c\u524d\u8fdb"},{"location":"06-third-part-lib/001-Beautiful-Soup/#next_element-previous_element","text":".next_element \u5c5e\u6027\u6307\u5411\u89e3\u6790\u8fc7\u7a0b\u4e2d\u4e0b\u4e00\u4e2a\u88ab\u89e3\u6790\u7684\u5bf9\u8c61(\u5b57\u7b26\u4e32\u6216tag),\u7ed3\u679c\u53ef\u80fd\u4e0e .next_sibling \u76f8\u540c,\u4f46\u901a\u5e38\u662f\u4e0d\u4e00\u6837\u7684. \u8fd9\u662f\u201c\u7231\u4e3d\u4e1d\u201d\u6587\u6863\u4e2d\u6700\u540e\u4e00\u4e2a \u6807\u7b7e,\u5b83\u7684 .next_sibling \u7ed3\u679c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32,\u56e0\u4e3a\u5f53\u524d\u7684\u89e3\u6790\u8fc7\u7a0b [ 2] \u56e0\u4e3a\u5f53\u524d\u7684\u89e3\u6790\u8fc7\u7a0b\u56e0\u4e3a\u9047\u5230\u4e86 \u6807\u7b7e\u800c\u4e2d\u65ad\u4e86: last_a_tag = soup . find ( \"a\" , id = \"link3\" ) last_a_tag # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a> last_a_tag . next_sibling # '; and they lived at the bottom of a well.' \u4f46\u8fd9\u4e2a \u6807\u7b7e\u7684 .next_element \u5c5e\u6027\u7ed3\u679c\u662f\u5728 \u6807\u7b7e\u88ab\u89e3\u6790\u4e4b\u540e\u7684\u89e3\u6790\u5185\u5bb9,\u4e0d\u662f \u6807\u7b7e\u540e\u7684\u53e5\u5b50\u90e8\u5206,\u5e94\u8be5\u662f\u5b57\u7b26\u4e32\u201dTillie\u201d: last_a_tag . next_element # u'Tillie' \u8fd9\u662f\u56e0\u4e3a\u5728\u539f\u59cb\u6587\u6863\u4e2d,\u5b57\u7b26\u4e32\u201cTillie\u201d \u5728\u5206\u53f7\u524d\u51fa\u73b0,\u89e3\u6790\u5668\u5148\u8fdb\u5165 \u6807\u7b7e,\u7136\u540e\u662f\u5b57\u7b26\u4e32\u201cTillie\u201d,\u7136\u540e\u5173\u95ed \u6807\u7b7e,\u7136\u540e\u662f\u5206\u53f7\u548c\u5269\u4f59\u90e8\u5206.\u5206\u53f7\u4e0e \u6807\u7b7e\u5728\u540c\u4e00\u5c42\u7ea7,\u4f46\u662f\u5b57\u7b26\u4e32\u201cTillie\u201d\u4f1a\u88ab\u5148\u89e3\u6790. .previous_element \u5c5e\u6027\u521a\u597d\u4e0e .next_element \u76f8\u53cd,\u5b83\u6307\u5411\u5f53\u524d\u88ab\u89e3\u6790\u7684\u5bf9\u8c61\u7684\u524d\u4e00\u4e2a\u89e3\u6790\u5bf9\u8c61: last_a_tag . previous_element # u' and\\n' last_a_tag . previous_element . next_element # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>","title":".next_element \u548c .previous_element"},{"location":"06-third-part-lib/001-Beautiful-Soup/#next_elements-previous_elements","text":"\u901a\u8fc7 .next_elements \u548c .previous_elements \u7684\u8fed\u4ee3\u5668\u5c31\u53ef\u4ee5\u5411\u524d\u6216\u5411\u540e\u8bbf\u95ee\u6587\u6863\u7684\u89e3\u6790\u5185\u5bb9,\u5c31\u597d\u50cf\u6587\u6863\u6b63\u5728\u88ab\u89e3\u6790\u4e00\u6837: for element in last_a_tag . next_elements : print ( repr ( element )) # u'Tillie' # u';\\nand they lived at the bottom of a well.' # u'\\n\\n' # <p class=\"story\">...</p> # u'...' # u'\\n' # None","title":".next_elements \u548c .previous_elements"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_16","text":"Beautiful Soup\u5b9a\u4e49\u4e86\u5f88\u591a\u641c\u7d22\u65b9\u6cd5,\u8fd9\u91cc\u7740\u91cd\u4ecb\u7ecd2\u4e2a: find() \u548c find_all() .\u5176\u5b83\u65b9\u6cd5\u7684\u53c2\u6570\u548c\u7528\u6cd5\u7c7b\u4f3c,\u8bf7\u8bfb\u8005\u4e3e\u4e00\u53cd\u4e09. \u518d\u4ee5\u201c\u7231\u4e3d\u4e1d\u201d\u6587\u6863\u4f5c\u4e3a\u4f8b\u5b50: html_doc = \"\"\" <html><head><title>The Dormouse's story</title></head> <body> <p class=\"title\"><b>The Dormouse's story</b></p> <p class=\"story\">Once upon a time there were three little sisters; and their names were <a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>, <a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and <a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>; and they lived at the bottom of a well.</p> <p class=\"story\">...</p> \"\"\" from bs4 import BeautifulSoup soup = BeautifulSoup ( html_doc , 'html.parser' ) \u4f7f\u7528 find_all() \u7c7b\u4f3c\u7684\u65b9\u6cd5\u53ef\u4ee5\u67e5\u627e\u5230\u60f3\u8981\u67e5\u627e\u7684\u6587\u6863\u5185\u5bb9","title":"\u641c\u7d22\u6587\u6863\u6811"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_17","text":"\u4ecb\u7ecd find_all() \u65b9\u6cd5\u524d,\u5148\u4ecb\u7ecd\u4e00\u4e0b\u8fc7\u6ee4\u5668\u7684\u7c7b\u578b [ 3] ,\u8fd9\u4e9b\u8fc7\u6ee4\u5668\u8d2f\u7a7f\u6574\u4e2a\u641c\u7d22\u7684API.\u8fc7\u6ee4\u5668\u53ef\u4ee5\u88ab\u7528\u5728tag\u7684name\u4e2d,\u8282\u70b9\u7684\u5c5e\u6027\u4e2d,\u5b57\u7b26\u4e32\u4e2d\u6216\u4ed6\u4eec\u7684\u6df7\u5408\u4e2d.","title":"\u8fc7\u6ee4\u5668"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_18","text":"\u6700\u7b80\u5355\u7684\u8fc7\u6ee4\u5668\u662f\u5b57\u7b26\u4e32.\u5728\u641c\u7d22\u65b9\u6cd5\u4e2d\u4f20\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\u53c2\u6570,Beautiful Soup\u4f1a\u67e5\u627e\u4e0e\u5b57\u7b26\u4e32\u5b8c\u6574\u5339\u914d\u7684\u5185\u5bb9,\u4e0b\u9762\u7684\u4f8b\u5b50\u7528\u4e8e\u67e5\u627e\u6587\u6863\u4e2d\u6240\u6709\u7684 \u6807\u7b7e: soup . find_all ( 'b' ) # [<b>The Dormouse's story</b>] \u5982\u679c\u4f20\u5165\u5b57\u8282\u7801\u53c2\u6570,Beautiful Soup\u4f1a\u5f53\u4f5cUTF-8\u7f16\u7801,\u53ef\u4ee5\u4f20\u5165\u4e00\u6bb5Unicode \u7f16\u7801\u6765\u907f\u514dBeautiful Soup\u89e3\u6790\u7f16\u7801\u51fa\u9519","title":"\u5b57\u7b26\u4e32"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_19","text":"\u5982\u679c\u4f20\u5165\u6b63\u5219\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u53c2\u6570,Beautiful Soup\u4f1a\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u7684 search() \u6765\u5339\u914d\u5185\u5bb9.\u4e0b\u9762\u4f8b\u5b50\u4e2d\u627e\u51fa\u6240\u6709\u4ee5b\u5f00\u5934\u7684\u6807\u7b7e,\u8fd9\u8868\u793a \u548c \u6807\u7b7e\u90fd\u5e94\u8be5\u88ab\u627e\u5230: import re for tag in soup . find_all ( re . compile ( \"^b\" )): print ( tag . name ) # body # b \u4e0b\u9762\u4ee3\u7801\u627e\u51fa\u6240\u6709\u540d\u5b57\u4e2d\u5305\u542b\u201dt\u201d\u7684\u6807\u7b7e: for tag in soup . find_all ( re . compile ( \"t\" )): print ( tag . name ) # html # title","title":"\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_20","text":"\u5982\u679c\u4f20\u5165\u5217\u8868\u53c2\u6570,Beautiful Soup\u4f1a\u5c06\u4e0e\u5217\u8868\u4e2d\u4efb\u4e00\u5143\u7d20\u5339\u914d\u7684\u5185\u5bb9\u8fd4\u56de.\u4e0b\u9762\u4ee3\u7801\u627e\u5230\u6587\u6863\u4e2d\u6240\u6709 \u6807\u7b7e\u548c \u6807\u7b7e: soup . find_all ([ \"a\" , \"b\" ]) # [<b>The Dormouse's story</b>, # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>]","title":"\u5217\u8868"},{"location":"06-third-part-lib/001-Beautiful-Soup/#true","text":"True \u53ef\u4ee5\u5339\u914d\u4efb\u4f55\u503c,\u4e0b\u9762\u4ee3\u7801\u67e5\u627e\u5230\u6240\u6709\u7684tag,\u4f46\u662f\u4e0d\u4f1a\u8fd4\u56de\u5b57\u7b26\u4e32\u8282\u70b9 for tag in soup . find_all ( True ): print ( tag . name ) # html # head # title # body # p # b # p # a # a # a # p","title":"True"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_21","text":"\u5982\u679c\u6ca1\u6709\u5408\u9002\u8fc7\u6ee4\u5668,\u90a3\u4e48\u8fd8\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5,\u65b9\u6cd5\u53ea\u63a5\u53d7\u4e00\u4e2a\u5143\u7d20\u53c2\u6570 [ 4] ,\u5982\u679c\u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de True \u8868\u793a\u5f53\u524d\u5143\u7d20\u5339\u914d\u5e76\u4e14\u88ab\u627e\u5230,\u5982\u679c\u4e0d\u662f\u5219\u53cd\u56de False \u4e0b\u9762\u65b9\u6cd5\u6821\u9a8c\u4e86\u5f53\u524d\u5143\u7d20,\u5982\u679c\u5305\u542b class \u5c5e\u6027\u5374\u4e0d\u5305\u542b id \u5c5e\u6027,\u90a3\u4e48\u5c06\u8fd4\u56de True : def has_class_but_no_id ( tag ): return tag . has_attr ( 'class' ) and not tag . has_attr ( 'id' ) \u5c06\u8fd9\u4e2a\u65b9\u6cd5\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 find_all() \u65b9\u6cd5,\u5c06\u5f97\u5230\u6240\u6709 \u6807\u7b7e: soup . find_all ( has_class_but_no_id ) # [<p class=\"title\"><b>The Dormouse's story</b></p>, # <p class=\"story\">Once upon a time there were...</p>, # <p class=\"story\">...</p>] \u8fd4\u56de\u7ed3\u679c\u4e2d\u53ea\u6709 \u6807\u7b7e\u6ca1\u6709 \u6807\u7b7e,\u56e0\u4e3a \u6807\u7b7e\u8fd8\u5b9a\u4e49\u4e86\u201did\u201d,\u6ca1\u6709\u8fd4\u56de \u548c ,\u56e0\u4e3a \u548c \u4e2d\u6ca1\u6709\u5b9a\u4e49\u201dclass\u201d\u5c5e\u6027. \u901a\u8fc7\u4e00\u4e2a\u65b9\u6cd5\u6765\u8fc7\u6ee4\u4e00\u7c7b\u6807\u7b7e\u5c5e\u6027\u7684\u65f6\u5019, \u8fd9\u4e2a\u65b9\u6cd5\u7684\u53c2\u6570\u662f\u8981\u88ab\u8fc7\u6ee4\u7684\u5c5e\u6027\u7684\u503c, \u800c\u4e0d\u662f\u8fd9\u4e2a\u6807\u7b7e. \u4e0b\u9762\u7684\u4f8b\u5b50\u662f\u627e\u51fa href \u5c5e\u6027\u4e0d\u7b26\u5408\u6307\u5b9a\u6b63\u5219\u7684 a \u6807\u7b7e. def not_lacie ( href ): return href and not re . compile ( \"lacie\" ) . search ( href ) soup . find_all ( href = not_lacie ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] \u6807\u7b7e\u8fc7\u6ee4\u65b9\u6cd5\u53ef\u4ee5\u4f7f\u7528\u590d\u6742\u65b9\u6cd5. \u4e0b\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u8fc7\u6ee4\u51fa\u524d\u540e\u90fd\u6709\u6587\u5b57\u7684\u6807\u7b7e. from bs4 import NavigableString def surrounded_by_strings ( tag ): return ( isinstance ( tag . next_element , NavigableString ) and isinstance ( tag . previous_element , NavigableString )) for tag in soup . find_all ( surrounded_by_strings ): print tag . name # p # a # a # a # p \u73b0\u5728\u6765\u4e86\u89e3\u4e00\u4e0b\u641c\u7d22\u65b9\u6cd5\u7684\u7ec6\u8282","title":"\u65b9\u6cd5"},{"location":"06-third-part-lib/001-Beautiful-Soup/#find_all","text":"find_all( name , attrs , recursive , string , **kwargs ) find_all() \u65b9\u6cd5\u641c\u7d22\u5f53\u524dtag\u7684\u6240\u6709tag\u5b50\u8282\u70b9,\u5e76\u5224\u65ad\u662f\u5426\u7b26\u5408\u8fc7\u6ee4\u5668\u7684\u6761\u4ef6.\u8fd9\u91cc\u6709\u51e0\u4e2a\u4f8b\u5b50: soup . find_all ( \"title\" ) # [<title>The Dormouse's story</title>] soup . find_all ( \"p\" , \"title\" ) # [<p class=\"title\"><b>The Dormouse's story</b></p>] soup . find_all ( \"a\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . find_all ( id = \"link2\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] import re soup . find ( string = re . compile ( \"sisters\" )) # u'Once upon a time there were three little sisters; and their names were\\n' \u6709\u51e0\u4e2a\u65b9\u6cd5\u5f88\u76f8\u4f3c,\u8fd8\u6709\u51e0\u4e2a\u65b9\u6cd5\u662f\u65b0\u7684,\u53c2\u6570\u4e2d\u7684 string \u548c id \u662f\u4ec0\u4e48\u542b\u4e49? \u4e3a\u4ec0\u4e48 find_all(\"p\", \"title\") \u8fd4\u56de\u7684\u662fCSS Class\u4e3a\u201dtitle\u201d\u7684 \u6807\u7b7e? \u6211\u4eec\u6765\u4ed4\u7ec6\u770b\u4e00\u4e0b find_all() \u7684\u53c2\u6570","title":"find_all()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#name_1","text":"name \u53c2\u6570\u53ef\u4ee5\u67e5\u627e\u6240\u6709\u540d\u5b57\u4e3a name \u7684tag,\u5b57\u7b26\u4e32\u5bf9\u8c61\u4f1a\u88ab\u81ea\u52a8\u5ffd\u7565\u6389. \u7b80\u5355\u7684\u7528\u6cd5\u5982\u4e0b: soup . find_all ( \"title\" ) # [<title>The Dormouse's story</title>] \u91cd\u7533: \u641c\u7d22 name \u53c2\u6570\u7684\u503c\u53ef\u4ee5\u4f7f\u4efb\u4e00\u7c7b\u578b\u7684 \u8fc7\u6ee4\u5668 ,\u5b57\u7b26\u7a9c,\u6b63\u5219\u8868\u8fbe\u5f0f,\u5217\u8868,\u65b9\u6cd5\u6216\u662f True .","title":"name \u53c2\u6570"},{"location":"06-third-part-lib/001-Beautiful-Soup/#keyword","text":"\u5982\u679c\u4e00\u4e2a\u6307\u5b9a\u540d\u5b57\u7684\u53c2\u6570\u4e0d\u662f\u641c\u7d22\u5185\u7f6e\u7684\u53c2\u6570\u540d,\u641c\u7d22\u65f6\u4f1a\u628a\u8be5\u53c2\u6570\u5f53\u4f5c\u6307\u5b9a\u540d\u5b57tag\u7684\u5c5e\u6027\u6765\u641c\u7d22,\u5982\u679c\u5305\u542b\u4e00\u4e2a\u540d\u5b57\u4e3a id \u7684\u53c2\u6570,Beautiful Soup\u4f1a\u641c\u7d22\u6bcf\u4e2atag\u7684\u201did\u201d\u5c5e\u6027. soup . find_all ( id = 'link2' ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] \u5982\u679c\u4f20\u5165 href \u53c2\u6570,Beautiful Soup\u4f1a\u641c\u7d22\u6bcf\u4e2atag\u7684\u201dhref\u201d\u5c5e\u6027: soup . find_all ( href = re . compile ( \"elsie\" )) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] \u641c\u7d22\u6307\u5b9a\u540d\u5b57\u7684\u5c5e\u6027\u65f6\u53ef\u4ee5\u4f7f\u7528\u7684\u53c2\u6570\u503c\u5305\u62ec \u5b57\u7b26\u4e32 , \u6b63\u5219\u8868\u8fbe\u5f0f , \u5217\u8868 , True . \u4e0b\u9762\u7684\u4f8b\u5b50\u5728\u6587\u6863\u6811\u4e2d\u67e5\u627e\u6240\u6709\u5305\u542b id \u5c5e\u6027\u7684tag,\u65e0\u8bba id \u7684\u503c\u662f\u4ec0\u4e48: soup . find_all ( id = True ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] \u4f7f\u7528\u591a\u4e2a\u6307\u5b9a\u540d\u5b57\u7684\u53c2\u6570\u53ef\u4ee5\u540c\u65f6\u8fc7\u6ee4tag\u7684\u591a\u4e2a\u5c5e\u6027: soup . find_all ( href = re . compile ( \"elsie\" ), id = 'link1' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">three</a>] \u6709\u4e9btag\u5c5e\u6027\u5728\u641c\u7d22\u4e0d\u80fd\u4f7f\u7528,\u6bd4\u5982HTML5\u4e2d\u7684 data-* \u5c5e\u6027: data_soup = BeautifulSoup ( '<div data-foo=\"value\">foo!</div>' ) data_soup . find_all ( data - foo = \"value\" ) # SyntaxError: keyword can't be an expression \u4f46\u662f\u53ef\u4ee5\u901a\u8fc7 find_all() \u65b9\u6cd5\u7684 attrs \u53c2\u6570\u5b9a\u4e49\u4e00\u4e2a\u5b57\u5178\u53c2\u6570\u6765\u641c\u7d22\u5305\u542b\u7279\u6b8a\u5c5e\u6027\u7684tag: data_soup . find_all ( attrs = { \"data-foo\" : \"value\" }) # [<div data-foo=\"value\">foo!</div>]","title":"keyword \u53c2\u6570"},{"location":"06-third-part-lib/001-Beautiful-Soup/#css","text":"\u6309\u7167CSS\u7c7b\u540d\u641c\u7d22tag\u7684\u529f\u80fd\u975e\u5e38\u5b9e\u7528,\u4f46\u6807\u8bc6CSS\u7c7b\u540d\u7684\u5173\u952e\u5b57 class \u5728Python\u4e2d\u662f\u4fdd\u7559\u5b57,\u4f7f\u7528 class \u505a\u53c2\u6570\u4f1a\u5bfc\u81f4\u8bed\u6cd5\u9519\u8bef.\u4eceBeautiful Soup\u76844.1.1\u7248\u672c\u5f00\u59cb,\u53ef\u4ee5\u901a\u8fc7 class_ \u53c2\u6570\u641c\u7d22\u6709\u6307\u5b9aCSS\u7c7b\u540d\u7684tag: soup . find_all ( \"a\" , class_ = \"sister\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] class_ \u53c2\u6570\u540c\u6837\u63a5\u53d7\u4e0d\u540c\u7c7b\u578b\u7684 \u8fc7\u6ee4\u5668 ,\u5b57\u7b26\u4e32,\u6b63\u5219\u8868\u8fbe\u5f0f,\u65b9\u6cd5\u6216 True : soup . find_all ( class_ = re . compile ( \"itl\" )) # [<p class=\"title\"><b>The Dormouse's story</b></p>] def has_six_characters ( css_class ): return css_class is not None and len ( css_class ) == 6 soup . find_all ( class_ = has_six_characters ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] tag\u7684 class \u5c5e\u6027\u662f \u591a\u503c\u5c5e\u6027 .\u6309\u7167CSS\u7c7b\u540d\u641c\u7d22tag\u65f6,\u53ef\u4ee5\u5206\u522b\u641c\u7d22tag\u4e2d\u7684\u6bcf\u4e2aCSS\u7c7b\u540d: css_soup = BeautifulSoup ( '<p class=\"body strikeout\"></p>' ) css_soup . find_all ( \"p\" , class_ = \"strikeout\" ) # [<p class=\"body strikeout\"></p>] css_soup . find_all ( \"p\" , class_ = \"body\" ) # [<p class=\"body strikeout\"></p>] \u641c\u7d22 class \u5c5e\u6027\u65f6\u4e5f\u53ef\u4ee5\u901a\u8fc7CSS\u503c\u5b8c\u5168\u5339\u914d: css_soup . find_all ( \"p\" , class_ = \"body strikeout\" ) # [<p class=\"body strikeout\"></p>] \u5b8c\u5168\u5339\u914d class \u7684\u503c\u65f6,\u5982\u679cCSS\u7c7b\u540d\u7684\u987a\u5e8f\u4e0e\u5b9e\u9645\u4e0d\u7b26,\u5c06\u641c\u7d22\u4e0d\u5230\u7ed3\u679c: soup . find_all ( \"a\" , attrs = { \"class\" : \"sister\" }) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>]","title":"\u6309CSS\u641c\u7d22"},{"location":"06-third-part-lib/001-Beautiful-Soup/#string_1","text":"\u901a\u8fc7 string \u53c2\u6570\u53ef\u4ee5\u641c\u641c\u6587\u6863\u4e2d\u7684\u5b57\u7b26\u4e32\u5185\u5bb9.\u4e0e name \u53c2\u6570\u7684\u53ef\u9009\u503c\u4e00\u6837, string \u53c2\u6570\u63a5\u53d7 \u5b57\u7b26\u4e32 , \u6b63\u5219\u8868\u8fbe\u5f0f , \u5217\u8868 , True . \u770b\u4f8b\u5b50: soup . find_all ( string = \"Elsie\" ) # [u'Elsie'] soup . find_all ( string = [ \"Tillie\" , \"Elsie\" , \"Lacie\" ]) # [u'Elsie', u'Lacie', u'Tillie'] soup . find_all ( string = re . compile ( \"Dormouse\" )) [ u \"The Dormouse's story\" , u \"The Dormouse's story\" ] def is_the_only_string_within_a_tag ( s ): \"\" Return True if this string is the only child of its parent tag . \"\" return ( s == s . parent . string ) soup . find_all ( string = is_the_only_string_within_a_tag ) # [u\"The Dormouse's story\", u\"The Dormouse's story\", u'Elsie', u'Lacie', u'Tillie', u'...'] \u867d\u7136 string \u53c2\u6570\u7528\u4e8e\u641c\u7d22\u5b57\u7b26\u4e32,\u8fd8\u53ef\u4ee5\u4e0e\u5176\u5b83\u53c2\u6570\u6df7\u5408\u4f7f\u7528\u6765\u8fc7\u6ee4tag.Beautiful Soup\u4f1a\u627e\u5230 .string \u65b9\u6cd5\u4e0e string \u53c2\u6570\u503c\u76f8\u7b26\u7684tag.\u4e0b\u9762\u4ee3\u7801\u7528\u6765\u641c\u7d22\u5185\u5bb9\u91cc\u9762\u5305\u542b\u201cElsie\u201d\u7684 \u6807\u7b7e: soup . find_all ( \"a\" , string = \"Elsie\" ) # [<a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>]","title":"string \u53c2\u6570"},{"location":"06-third-part-lib/001-Beautiful-Soup/#limit","text":"find_all() \u65b9\u6cd5\u8fd4\u56de\u5168\u90e8\u7684\u641c\u7d22\u7ed3\u6784,\u5982\u679c\u6587\u6863\u6811\u5f88\u5927\u90a3\u4e48\u641c\u7d22\u4f1a\u5f88\u6162.\u5982\u679c\u6211\u4eec\u4e0d\u9700\u8981\u5168\u90e8\u7ed3\u679c,\u53ef\u4ee5\u4f7f\u7528 limit \u53c2\u6570\u9650\u5236\u8fd4\u56de\u7ed3\u679c\u7684\u6570\u91cf.\u6548\u679c\u4e0eSQL\u4e2d\u7684limit\u5173\u952e\u5b57\u7c7b\u4f3c,\u5f53\u641c\u7d22\u5230\u7684\u7ed3\u679c\u6570\u91cf\u8fbe\u5230 limit \u7684\u9650\u5236\u65f6,\u5c31\u505c\u6b62\u641c\u7d22\u8fd4\u56de\u7ed3\u679c. \u6587\u6863\u6811\u4e2d\u67093\u4e2atag\u7b26\u5408\u641c\u7d22\u6761\u4ef6,\u4f46\u7ed3\u679c\u53ea\u8fd4\u56de\u4e862\u4e2a,\u56e0\u4e3a\u6211\u4eec\u9650\u5236\u4e86\u8fd4\u56de\u6570\u91cf: soup . find_all ( \"a\" , limit = 2 ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>]","title":"limit \u53c2\u6570"},{"location":"06-third-part-lib/001-Beautiful-Soup/#recursive","text":"\u8c03\u7528tag\u7684 find_all() \u65b9\u6cd5\u65f6,Beautiful Soup\u4f1a\u68c0\u7d22\u5f53\u524dtag\u7684\u6240\u6709\u5b50\u5b59\u8282\u70b9,\u5982\u679c\u53ea\u60f3\u641c\u7d22tag\u7684\u76f4\u63a5\u5b50\u8282\u70b9,\u53ef\u4ee5\u4f7f\u7528\u53c2\u6570 recursive=False . \u4e00\u6bb5\u7b80\u5355\u7684\u6587\u6863: < html > < head > < title > The Dormouse's story </ title > </ head > ... \u662f\u5426\u4f7f\u7528 recursive \u53c2\u6570\u7684\u641c\u7d22\u7ed3\u679c: soup . html . find_all ( \"title\" ) # [<title>The Dormouse's story</title>] soup . html . find_all ( \"title\" , recursive = False ) # [] \u8fd9\u662f\u6587\u6863\u7247\u6bb5 < html > < head > < title > The Dormouse's story </ title > </ head > ... \u6807\u7b7e\u5728 \u6807\u7b7e\u4e0b, \u4f46\u5e76\u4e0d\u662f\u76f4\u63a5\u5b50\u8282\u70b9, \u6807\u7b7e\u624d\u662f\u76f4\u63a5\u5b50\u8282\u70b9. \u5728\u5141\u8bb8\u67e5\u8be2\u6240\u6709\u540e\u4ee3\u8282\u70b9\u65f6 Beautiful Soup \u80fd\u591f\u67e5\u627e\u5230 \u6807\u7b7e. \u4f46\u662f\u4f7f\u7528\u4e86 recursive=False \u53c2\u6570\u4e4b\u540e,\u53ea\u80fd\u67e5\u627e\u76f4\u63a5\u5b50\u8282\u70b9,\u8fd9\u6837\u5c31\u67e5\u4e0d\u5230 \u6807\u7b7e\u4e86. Beautiful Soup \u63d0\u4f9b\u4e86\u591a\u79cdDOM\u6811\u641c\u7d22\u65b9\u6cd5. \u8fd9\u4e9b\u65b9\u6cd5\u90fd\u4f7f\u7528\u4e86\u7c7b\u4f3c\u7684\u53c2\u6570\u5b9a\u4e49. \u6bd4\u5982\u8fd9\u4e9b\u65b9\u6cd5: find_all() : name , attrs , text , limit . \u4f46\u662f\u53ea\u6709 find_all() \u548c find() \u652f\u6301 recursive \u53c2\u6570.","title":"recursive \u53c2\u6570"},{"location":"06-third-part-lib/001-Beautiful-Soup/#find_all-tag","text":"find_all() \u51e0\u4e4e\u662fBeautiful Soup\u4e2d\u6700\u5e38\u7528\u7684\u641c\u7d22\u65b9\u6cd5,\u6240\u4ee5\u6211\u4eec\u5b9a\u4e49\u4e86\u5b83\u7684\u7b80\u5199\u65b9\u6cd5. BeautifulSoup \u5bf9\u8c61\u548c tag \u5bf9\u8c61\u53ef\u4ee5\u88ab\u5f53\u4f5c\u4e00\u4e2a\u65b9\u6cd5\u6765\u4f7f\u7528,\u8fd9\u4e2a\u65b9\u6cd5\u7684\u6267\u884c\u7ed3\u679c\u4e0e\u8c03\u7528\u8fd9\u4e2a\u5bf9\u8c61\u7684 find_all() \u65b9\u6cd5\u76f8\u540c,\u4e0b\u9762\u4e24\u884c\u4ee3\u7801\u662f\u7b49\u4ef7\u7684: soup . find_all ( \"a\" ) soup ( \"a\" ) \u8fd9\u4e24\u884c\u4ee3\u7801\u4e5f\u662f\u7b49\u4ef7\u7684: soup . title . find_all ( string = True ) soup . title ( string = True )","title":"\u50cf\u8c03\u7528 find_all() \u4e00\u6837\u8c03\u7528tag"},{"location":"06-third-part-lib/001-Beautiful-Soup/#find","text":"find( name , attrs , recursive , string , **kwargs ) find_all() \u65b9\u6cd5\u5c06\u8fd4\u56de\u6587\u6863\u4e2d\u7b26\u5408\u6761\u4ef6\u7684\u6240\u6709tag,\u5c3d\u7ba1\u6709\u65f6\u5019\u6211\u4eec\u53ea\u60f3\u5f97\u5230\u4e00\u4e2a\u7ed3\u679c.\u6bd4\u5982\u6587\u6863\u4e2d\u53ea\u6709\u4e00\u4e2a \u6807\u7b7e,\u90a3\u4e48\u4f7f\u7528 find_all() \u65b9\u6cd5\u6765\u67e5\u627e \u6807\u7b7e\u5c31\u4e0d\u592a\u5408\u9002, \u4f7f\u7528 find_all \u65b9\u6cd5\u5e76\u8bbe\u7f6e limit=1 \u53c2\u6570\u4e0d\u5982\u76f4\u63a5\u4f7f\u7528 find() \u65b9\u6cd5.\u4e0b\u9762\u4e24\u884c\u4ee3\u7801\u662f\u7b49\u4ef7\u7684: soup . find_all ( 'title' , limit = 1 ) # [<title>The Dormouse's story</title>] soup . find ( 'title' ) # <title>The Dormouse's story</title> \u552f\u4e00\u7684\u533a\u522b\u662f find_all() \u65b9\u6cd5\u7684\u8fd4\u56de\u7ed3\u679c\u662f\u503c\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u7684\u5217\u8868,\u800c find() \u65b9\u6cd5\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c. find_all() \u65b9\u6cd5\u6ca1\u6709\u627e\u5230\u76ee\u6807\u662f\u8fd4\u56de\u7a7a\u5217\u8868, find() \u65b9\u6cd5\u627e\u4e0d\u5230\u76ee\u6807\u65f6,\u8fd4\u56de None . print(soup.find(\"nosuchtag\")) # None soup.head.title \u662f tag\u7684\u540d\u5b57 \u65b9\u6cd5\u7684\u7b80\u5199.\u8fd9\u4e2a\u7b80\u5199\u7684\u539f\u7406\u5c31\u662f\u591a\u6b21\u8c03\u7528\u5f53\u524dtag\u7684 find() \u65b9\u6cd5: soup . head . title # <title>The Dormouse's story</title> soup . find ( \"head\" ) . find ( \"title\" ) # <title>The Dormouse's story</title>","title":"find()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#find_parents-find_parent","text":"find_parents( name , attrs , recursive , string , **kwargs ) find_parent( name , attrs , recursive , string , **kwargs ) \u6211\u4eec\u5df2\u7ecf\u7528\u4e86\u5f88\u5927\u7bc7\u5e45\u6765\u4ecb\u7ecd find_all() \u548c find() \u65b9\u6cd5,Beautiful Soup\u4e2d\u8fd8\u670910\u4e2a\u7528\u4e8e\u641c\u7d22\u7684API.\u5b83\u4eec\u4e2d\u7684\u4e94\u4e2a\u7528\u7684\u662f\u4e0e find_all() \u76f8\u540c\u7684\u641c\u7d22\u53c2\u6570,\u53e6\u59165\u4e2a\u4e0e find() \u65b9\u6cd5\u7684\u641c\u7d22\u53c2\u6570\u7c7b\u4f3c.\u533a\u522b\u4ec5\u662f\u5b83\u4eec\u641c\u7d22\u6587\u6863\u7684\u4e0d\u540c\u90e8\u5206. \u8bb0\u4f4f: find_all() \u548c find() \u53ea\u641c\u7d22\u5f53\u524d\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9,\u5b59\u5b50\u8282\u70b9\u7b49. find_parents() \u548c find_parent() \u7528\u6765\u641c\u7d22\u5f53\u524d\u8282\u70b9\u7684\u7236\u8f88\u8282\u70b9,\u641c\u7d22\u65b9\u6cd5\u4e0e\u666e\u901atag\u7684\u641c\u7d22\u65b9\u6cd5\u76f8\u540c,\u641c\u7d22\u6587\u6863\u641c\u7d22\u6587\u6863\u5305\u542b\u7684\u5185\u5bb9. \u6211\u4eec\u4ece\u4e00\u4e2a\u6587\u6863\u4e2d\u7684\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u5f00\u59cb: a_string = soup . find ( string = \"Lacie\" ) a_string # u'Lacie' a_string . find_parents ( \"a\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] a_string . find_parent ( \"p\" ) # <p class=\"story\">Once upon a time there were three little sisters; and their names were # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a> and # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>; # and they lived at the bottom of a well.</p> a_string . find_parents ( \"p\" , class = \"title\" ) # [] \u6587\u6863\u4e2d\u7684\u4e00\u4e2a \u6807\u7b7e\u662f\u662f\u5f53\u524d\u53f6\u5b50\u8282\u70b9\u7684\u76f4\u63a5\u7236\u8282\u70b9,\u6240\u4ee5\u53ef\u4ee5\u88ab\u627e\u5230.\u8fd8\u6709\u4e00\u4e2a \u6807\u7b7e,\u662f\u76ee\u6807\u53f6\u5b50\u8282\u70b9\u7684\u95f4\u63a5\u7236\u8f88\u8282\u70b9,\u6240\u4ee5\u4e5f\u53ef\u4ee5\u88ab\u627e\u5230.\u5305\u542bclass\u503c\u4e3a\u201dtitle\u201d\u7684 \u6807\u7b7e\u4e0d\u662f\u4e0d\u662f\u76ee\u6807\u53f6\u5b50\u8282\u70b9\u7684\u7236\u8f88\u8282\u70b9,\u6240\u4ee5\u901a\u8fc7 find_parents() \u65b9\u6cd5\u641c\u7d22\u4e0d\u5230. find_parent() \u548c find_parents() \u65b9\u6cd5\u4f1a\u8ba9\u4eba\u8054\u60f3\u5230 .parent \u548c .parents \u5c5e\u6027.\u5b83\u4eec\u4e4b\u95f4\u7684\u8054\u7cfb\u975e\u5e38\u7d27\u5bc6.\u641c\u7d22\u7236\u8f88\u8282\u70b9\u7684\u65b9\u6cd5\u5b9e\u9645\u4e0a\u5c31\u662f\u5bf9 .parents \u5c5e\u6027\u7684\u8fed\u4ee3\u641c\u7d22.","title":"find_parents() \u548c find_parent()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#find_next_siblings-find_next_sibling","text":"find_next_siblings( name , attrs , recursive , string , **kwargs ) find_next_sibling( name , attrs , recursive , string , **kwargs ) \u8fd92\u4e2a\u65b9\u6cd5\u901a\u8fc7 .next_siblings \u5c5e\u6027\u5bf9\u5f53tag\u7684\u6240\u6709\u540e\u9762\u89e3\u6790 [ 5] \u7684\u5144\u5f1ftag\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3, find_next_siblings() \u65b9\u6cd5\u8fd4\u56de\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u540e\u9762\u7684\u5144\u5f1f\u8282\u70b9, find_next_sibling() \u53ea\u8fd4\u56de\u7b26\u5408\u6761\u4ef6\u7684\u540e\u9762\u7684\u7b2c\u4e00\u4e2atag\u8282\u70b9. first_link = soup . a first_link # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> first_link . find_next_siblings ( \"a\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] first_story_paragraph = soup . find ( \"p\" , \"story\" ) first_story_paragraph . find_next_sibling ( \"p\" ) # <p class=\"story\">...</p>","title":"find_next_siblings() \u548c find_next_sibling()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#find_previous_siblings-find_previous_sibling","text":"find_previous_siblings( name , attrs , recursive , string , **kwargs ) find_previous_sibling( name , attrs , recursive , string , **kwargs ) \u8fd92\u4e2a\u65b9\u6cd5\u901a\u8fc7 .previous_siblings \u5c5e\u6027\u5bf9\u5f53\u524dtag\u7684\u524d\u9762\u89e3\u6790 [ 5] \u7684\u5144\u5f1ftag\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3, find_previous_siblings() \u65b9\u6cd5\u8fd4\u56de\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u524d\u9762\u7684\u5144\u5f1f\u8282\u70b9, find_previous_sibling() \u65b9\u6cd5\u8fd4\u56de\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u524d\u9762\u7684\u5144\u5f1f\u8282\u70b9: last_link = soup . find ( \"a\" , id = \"link3\" ) last_link # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a> last_link . find_previous_siblings ( \"a\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] first_story_paragraph = soup . find ( \"p\" , \"story\" ) first_story_paragraph . find_previous_sibling ( \"p\" ) # <p class=\"title\"><b>The Dormouse's story</b></p>","title":"find_previous_siblings() \u548c find_previous_sibling()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#find_all_next-find_next","text":"find_all_next( name , attrs , recursive , string , **kwargs ) find_next( name , attrs , recursive , string , **kwargs ) \u8fd92\u4e2a\u65b9\u6cd5\u901a\u8fc7 .next_elements \u5c5e\u6027\u5bf9\u5f53\u524dtag\u7684\u4e4b\u540e\u7684 [ 5] tag\u548c\u5b57\u7b26\u4e32\u8fdb\u884c\u8fed\u4ee3, find_all_next() \u65b9\u6cd5\u8fd4\u56de\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9, find_next() \u65b9\u6cd5\u8fd4\u56de\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9: first_link = soup . a first_link # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> first_link . find_all_next ( string = True ) # [u'Elsie', u',\\n', u'Lacie', u' and\\n', u'Tillie', # u';\\nand they lived at the bottom of a well.', u'\\n\\n', u'...', u'\\n'] first_link . find_next ( \"p\" ) # <p class=\"story\">...</p> \u7b2c\u4e00\u4e2a\u4f8b\u5b50\u4e2d,\u5b57\u7b26\u4e32 \u201cElsie\u201d\u4e5f\u88ab\u663e\u793a\u51fa\u6765,\u5c3d\u7ba1\u5b83\u88ab\u5305\u542b\u5728\u6211\u4eec\u5f00\u59cb\u67e5\u627e\u7684 \u6807\u7b7e\u7684\u91cc\u9762.\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u4e2d,\u6700\u540e\u4e00\u4e2a \u6807\u7b7e\u4e5f\u88ab\u663e\u793a\u51fa\u6765,\u5c3d\u7ba1\u5b83\u4e0e\u6211\u4eec\u5f00\u59cb\u67e5\u627e\u4f4d\u7f6e\u7684 \u6807\u7b7e\u4e0d\u5c5e\u4e8e\u540c\u4e00\u90e8\u5206.\u4f8b\u5b50\u4e2d,\u641c\u7d22\u7684\u91cd\u70b9\u662f\u8981\u5339\u914d\u8fc7\u6ee4\u5668\u7684\u6761\u4ef6,\u5e76\u4e14\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u800c\u4e0d\u662f\u5f00\u59cb\u67e5\u627e\u7684\u5143\u7d20\u7684\u4f4d\u7f6e.","title":"find_all_next() \u548c find_next()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#find_all_previous-find_previous","text":"find_all_previous( name , attrs , recursive , string , **kwargs ) find_previous( name , attrs , recursive , string , **kwargs ) \u8fd92\u4e2a\u65b9\u6cd5\u901a\u8fc7 .previous_elements \u5c5e\u6027\u5bf9\u5f53\u524d\u8282\u70b9\u524d\u9762 [ 5] \u7684tag\u548c\u5b57\u7b26\u4e32\u8fdb\u884c\u8fed\u4ee3, find_all_previous() \u65b9\u6cd5\u8fd4\u56de\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9, find_previous() \u65b9\u6cd5\u8fd4\u56de\u7b2c\u4e00\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u8282\u70b9. first_link = soup . a first_link # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> first_link . find_all_previous ( \"p\" ) # [<p class=\"story\">Once upon a time there were three little sisters; ...</p>, # <p class=\"title\"><b>The Dormouse's story</b></p>] first_link . find_previous ( \"title\" ) # <title>The Dormouse's story</title> find_all_previous(\"p\") \u8fd4\u56de\u4e86\u6587\u6863\u4e2d\u7684\u7b2c\u4e00\u6bb5(class=\u201dtitle\u201d\u7684\u90a3\u6bb5),\u4f46\u8fd8\u8fd4\u56de\u4e86\u7b2c\u4e8c\u6bb5, \u6807\u7b7e\u5305\u542b\u4e86\u6211\u4eec\u5f00\u59cb\u67e5\u627e\u7684 \u6807\u7b7e.\u4e0d\u8981\u60ca\u8bb6,\u8fd9\u6bb5\u4ee3\u7801\u7684\u529f\u80fd\u662f\u67e5\u627e\u6240\u6709\u51fa\u73b0\u5728\u6307\u5b9a \u6807\u7b7e\u4e4b\u524d\u7684 \u6807\u7b7e,\u56e0\u4e3a\u8fd9\u4e2a \u6807\u7b7e\u5305\u542b\u4e86\u5f00\u59cb\u7684 \u6807\u7b7e,\u6240\u4ee5 \u6807\u7b7e\u4e00\u5b9a\u662f\u5728 \u4e4b\u524d\u51fa\u73b0\u7684.","title":"find_all_previous() \u548c find_previous()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#css_1","text":"Beautiful Soup\u652f\u6301\u5927\u90e8\u5206\u7684CSS\u9009\u62e9\u5668 http://www.w3.org/TR/CSS2/selector.html [ 6] , \u5728 Tag \u6216 BeautifulSoup \u5bf9\u8c61\u7684 .select() \u65b9\u6cd5\u4e2d\u4f20\u5165\u5b57\u7b26\u4e32\u53c2\u6570, \u5373\u53ef\u4f7f\u7528CSS\u9009\u62e9\u5668\u7684\u8bed\u6cd5\u627e\u5230tag: soup . select ( \"title\" ) # [<title>The Dormouse's story</title>] soup . select ( \"p:nth-of-type(3)\" ) # [<p class=\"story\">...</p>] \u901a\u8fc7tag\u6807\u7b7e\u9010\u5c42\u67e5\u627e: soup . select ( \"body a\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( \"html head title\" ) # [<title>The Dormouse's story</title>] \u627e\u5230\u67d0\u4e2atag\u6807\u7b7e\u4e0b\u7684\u76f4\u63a5\u5b50\u6807\u7b7e [ 6] : soup . select ( \"head > title\" ) # [<title>The Dormouse's story</title>] soup . select ( \"p > a\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( \"p > a:nth-of-type(2)\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] soup . select ( \"p > #link1\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] soup . select ( \"body > a\" ) # [] \u627e\u5230\u5144\u5f1f\u8282\u70b9\u6807\u7b7e: soup . select ( \"#link1 ~ .sister\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( \"#link1 + .sister\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] \u901a\u8fc7CSS\u7684\u7c7b\u540d\u67e5\u627e: soup . select ( \".sister\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( \"[class~=sister]\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] \u901a\u8fc7tag\u7684id\u67e5\u627e: soup . select ( \"#link1\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] soup . select ( \"a#link2\" ) # [<a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] \u540c\u65f6\u7528\u591a\u79cdCSS\u9009\u62e9\u5668\u67e5\u8be2\u5143\u7d20: soup . select ( \"#link1,#link2\" ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>] \u901a\u8fc7\u662f\u5426\u5b58\u5728\u67d0\u4e2a\u5c5e\u6027\u6765\u67e5\u627e: soup . select ( 'a[href]' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] \u901a\u8fc7\u5c5e\u6027\u7684\u503c\u6765\u67e5\u627e: soup . select ( 'a[href=\"http://example.com/elsie\"]' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] soup . select ( 'a[href^=\"http://example.com/\"]' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>, # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\">Lacie</a>, # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( 'a[href$=\"tillie\"]' ) # [<a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\">Tillie</a>] soup . select ( 'a[href*=\".com/el\"]' ) # [<a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a>] \u901a\u8fc7\u8bed\u8a00\u8bbe\u7f6e\u6765\u67e5\u627e: multilingual_markup = \"\"\" <p lang=\"en\">Hello</p> <p lang=\"en-us\">Howdy, y'all</p> <p lang=\"en-gb\">Pip-pip, old fruit</p> <p lang=\"fr\">Bonjour mes amis</p> \"\"\" multilingual_soup = BeautifulSoup ( multilingual_markup ) multilingual_soup . select ( 'p[lang|=en]' ) # [<p lang=\"en\">Hello</p>, # <p lang=\"en-us\">Howdy, y'all</p>, # <p lang=\"en-gb\">Pip-pip, old fruit</p>] \u8fd4\u56de\u67e5\u627e\u5230\u7684\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a soup . select_one ( \".sister\" ) # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\">Elsie</a> \u5bf9\u4e8e\u719f\u6089CSS\u9009\u62e9\u5668\u8bed\u6cd5\u7684\u4eba\u6765\u8bf4\u8fd9\u662f\u4e2a\u975e\u5e38\u65b9\u4fbf\u7684\u65b9\u6cd5.Beautiful Soup\u4e5f\u652f\u6301CSS\u9009\u62e9\u5668API, \u5982\u679c\u4f60\u4ec5\u4ec5\u9700\u8981CSS\u9009\u62e9\u5668\u7684\u529f\u80fd,\u90a3\u4e48\u76f4\u63a5\u4f7f\u7528 lxml \u4e5f\u53ef\u4ee5, \u800c\u4e14\u901f\u5ea6\u66f4\u5feb,\u652f\u6301\u66f4\u591a\u7684CSS\u9009\u62e9\u5668\u8bed\u6cd5,\u4f46Beautiful Soup\u6574\u5408\u4e86CSS\u9009\u62e9\u5668\u7684\u8bed\u6cd5\u548c\u81ea\u8eab\u65b9\u4fbf\u4f7f\u7528API.","title":"CSS\u9009\u62e9\u5668"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_22","text":"Beautiful Soup\u7684\u5f3a\u9879\u662f\u6587\u6863\u6811\u7684\u641c\u7d22,\u4f46\u540c\u65f6\u4e5f\u53ef\u4ee5\u65b9\u4fbf\u7684\u4fee\u6539\u6587\u6863\u6811","title":"\u4fee\u6539\u6587\u6863\u6811"},{"location":"06-third-part-lib/001-Beautiful-Soup/#tag_2","text":"\u5728 Attributes \u7684\u7ae0\u8282\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\u8fd9\u4e2a\u529f\u80fd,\u4f46\u662f\u518d\u770b\u4e00\u904d\u4e5f\u65e0\u59a8. \u91cd\u547d\u540d\u4e00\u4e2atag,\u6539\u53d8\u5c5e\u6027\u7684\u503c,\u6dfb\u52a0\u6216\u5220\u9664\u5c5e\u6027: soup = BeautifulSoup ( '<b class=\"boldest\">Extremely bold</b>' ) tag = soup . b tag . name = \"blockquote\" tag [ 'class' ] = 'verybold' tag [ 'id' ] = 1 tag # <blockquote class=\"verybold\" id=\"1\">Extremely bold</blockquote> del tag [ 'class' ] del tag [ 'id' ] tag # <blockquote>Extremely bold</blockquote>","title":"\u4fee\u6539tag\u7684\u540d\u79f0\u548c\u5c5e\u6027"},{"location":"06-third-part-lib/001-Beautiful-Soup/#string_2","text":"\u7ed9tag\u7684 .string \u5c5e\u6027\u8d4b\u503c,\u5c31\u76f8\u5f53\u4e8e\u7528\u5f53\u524d\u7684\u5185\u5bb9\u66ff\u4ee3\u4e86\u539f\u6765\u7684\u5185\u5bb9: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) tag = soup . a tag . string = \"New link text.\" tag # <a href=\"http://example.com/\">New link text.</a> \u6ce8\u610f: \u5982\u679c\u5f53\u524d\u7684tag\u5305\u542b\u4e86\u5176\u5b83tag,\u90a3\u4e48\u7ed9\u5b83\u7684 .string \u5c5e\u6027\u8d4b\u503c\u4f1a\u8986\u76d6\u6389\u539f\u6709\u7684\u6240\u6709\u5185\u5bb9\u5305\u62ec\u5b50tag","title":"\u4fee\u6539 .string"},{"location":"06-third-part-lib/001-Beautiful-Soup/#append","text":"Tag.append() \u65b9\u6cd5\u60f3tag\u4e2d\u6dfb\u52a0\u5185\u5bb9,\u5c31\u597d\u50cfPython\u7684\u5217\u8868\u7684 .append() \u65b9\u6cd5: soup = BeautifulSoup ( \"<a>Foo</a>\" ) soup . a . append ( \"Bar\" ) soup # <html><head></head><body><a>FooBar</a></body></html> soup . a . contents # [u'Foo', u'Bar']","title":"append()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#navigablestring-new_tag","text":"\u5982\u679c\u60f3\u6dfb\u52a0\u4e00\u6bb5\u6587\u672c\u5185\u5bb9\u5230\u6587\u6863\u4e2d\u4e5f\u6ca1\u95ee\u9898,\u53ef\u4ee5\u8c03\u7528Python\u7684 append() \u65b9\u6cd5 \u6216\u8c03\u7528 NavigableString \u7684\u6784\u9020\u65b9\u6cd5: soup = BeautifulSoup ( \"<b></b>\" ) tag = soup . b tag . append ( \"Hello\" ) new_string = NavigableString ( \" there\" ) tag . append ( new_string ) tag # <b>Hello there.</b> tag . contents # [u'Hello', u' there'] \u5982\u679c\u60f3\u8981\u521b\u5efa\u4e00\u6bb5\u6ce8\u91ca,\u6216 NavigableString \u7684\u4efb\u4f55\u5b50\u7c7b, \u53ea\u8981\u8c03\u7528 NavigableString \u7684\u6784\u9020\u65b9\u6cd5: from bs4 import Comment new_comment = soup . new_string ( \"Nice to see you.\" , Comment ) tag . append ( new_comment ) tag # <b>Hello there<!--Nice to see you.--></b> tag . contents # [u'Hello', u' there', u'Nice to see you.'] # \u8fd9\u662fBeautiful Soup 4.2.1 \u4e2d\u65b0\u589e\u7684\u65b9\u6cd5 \u521b\u5efa\u4e00\u4e2atag\u6700\u597d\u7684\u65b9\u6cd5\u662f\u8c03\u7528\u5de5\u5382\u65b9\u6cd5 BeautifulSoup.new_tag() : soup = BeautifulSoup ( \"<b></b>\" ) original_tag = soup . b new_tag = soup . new_tag ( \"a\" , href = \"http://www.example.com\" ) original_tag . append ( new_tag ) original_tag # <b><a href=\"http://www.example.com\"></a></b> new_tag . string = \"Link text.\" original_tag # <b><a href=\"http://www.example.com\">Link text.</a></b> \u7b2c\u4e00\u4e2a\u53c2\u6570\u4f5c\u4e3atag\u7684name,\u662f\u5fc5\u586b,\u5176\u5b83\u53c2\u6570\u9009\u586b","title":"NavigableString() \u548c .new_tag()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#insert","text":"Tag.insert() \u65b9\u6cd5\u4e0e Tag.append() \u65b9\u6cd5\u7c7b\u4f3c,\u533a\u522b\u662f\u4e0d\u4f1a\u628a\u65b0\u5143\u7d20\u6dfb\u52a0\u5230\u7236\u8282\u70b9 .contents \u5c5e\u6027\u7684\u6700\u540e,\u800c\u662f\u628a\u5143\u7d20\u63d2\u5165\u5230\u6307\u5b9a\u7684\u4f4d\u7f6e.\u4e0ePython\u5217\u8868\u603b\u7684 .insert() \u65b9\u6cd5\u7684\u7528\u6cd5\u4e0b\u540c: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) tag = soup . a tag . insert ( 1 , \"but did not endorse \" ) tag # <a href=\"http://example.com/\">I linked to but did not endorse <i>example.com</i></a> tag . contents # [u'I linked to ', u'but did not endorse', <i>example.com</i>]","title":"insert()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#insert_before-insert_after","text":"insert_before() \u65b9\u6cd5\u5728\u5f53\u524dtag\u6216\u6587\u672c\u8282\u70b9\u524d\u63d2\u5165\u5185\u5bb9: soup = BeautifulSoup ( \"<b>stop</b>\" ) tag = soup . new_tag ( \"i\" ) tag . string = \"Don't\" soup . b . string . insert_before ( tag ) soup . b # <b><i>Don't</i>stop</b> insert_after() \u65b9\u6cd5\u5728\u5f53\u524dtag\u6216\u6587\u672c\u8282\u70b9\u540e\u63d2\u5165\u5185\u5bb9: soup . b . i . insert_after ( soup . new_string ( \" ever \" )) soup . b # <b><i>Don't</i> ever stop</b> soup . b . contents # [<i>Don't</i>, u' ever ', u'stop']","title":"insert_before() \u548c insert_after()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#clear","text":"Tag.clear() \u65b9\u6cd5\u79fb\u9664\u5f53\u524dtag\u7684\u5185\u5bb9: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) tag = soup . a tag . clear () tag # <a href=\"http://example.com/\"></a>","title":"clear()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#extract","text":"PageElement.extract() \u65b9\u6cd5\u5c06\u5f53\u524dtag\u79fb\u9664\u6587\u6863\u6811,\u5e76\u4f5c\u4e3a\u65b9\u6cd5\u7ed3\u679c\u8fd4\u56de: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) a_tag = soup . a i_tag = soup . i . extract () a_tag # <a href=\"http://example.com/\">I linked to</a> i_tag # <i>example.com</i> print ( i_tag . parent ) None \u8fd9\u4e2a\u65b9\u6cd5\u5b9e\u9645\u4e0a\u4ea7\u751f\u4e862\u4e2a\u6587\u6863\u6811: \u4e00\u4e2a\u662f\u7528\u6765\u89e3\u6790\u539f\u59cb\u6587\u6863\u7684 BeautifulSoup \u5bf9\u8c61,\u53e6\u4e00\u4e2a\u662f\u88ab\u79fb\u9664\u5e76\u4e14\u8fd4\u56de\u7684tag.\u88ab\u79fb\u9664\u5e76\u8fd4\u56de\u7684tag\u53ef\u4ee5\u7ee7\u7eed\u8c03\u7528 extract \u65b9\u6cd5: my_string = i_tag . string . extract () my_string # u'example.com' print ( my_string . parent ) # None i_tag # <i></i>","title":"extract()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#decompose","text":"Tag.decompose() \u65b9\u6cd5\u5c06\u5f53\u524d\u8282\u70b9\u79fb\u9664\u6587\u6863\u6811\u5e76\u5b8c\u5168\u9500\u6bc1: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) a_tag = soup . a soup . i . decompose () a_tag # <a href=\"http://example.com/\">I linked to</a>","title":"decompose()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#replace_with","text":"PageElement.replace_with() \u65b9\u6cd5\u79fb\u9664\u6587\u6863\u6811\u4e2d\u7684\u67d0\u6bb5\u5185\u5bb9,\u5e76\u7528\u65b0tag\u6216\u6587\u672c\u8282\u70b9\u66ff\u4ee3\u5b83: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) a_tag = soup . a new_tag = soup . new_tag ( \"b\" ) new_tag . string = \"example.net\" a_tag . i . replace_with ( new_tag ) a_tag # <a href=\"http://example.com/\">I linked to <b>example.net</b></a> replace_with() \u65b9\u6cd5\u8fd4\u56de\u88ab\u66ff\u4ee3\u7684tag\u6216\u6587\u672c\u8282\u70b9,\u53ef\u4ee5\u7528\u6765\u6d4f\u89c8\u6216\u6dfb\u52a0\u5230\u6587\u6863\u6811\u5176\u5b83\u5730\u65b9","title":"replace_with()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#wrap","text":"PageElement.wrap() \u65b9\u6cd5\u53ef\u4ee5\u5bf9\u6307\u5b9a\u7684tag\u5143\u7d20\u8fdb\u884c\u5305\u88c5 [ 8] ,\u5e76\u8fd4\u56de\u5305\u88c5\u540e\u7684\u7ed3\u679c: soup = BeautifulSoup ( \"<p>I wish I was bold.</p>\" ) soup . p . string . wrap ( soup . new_tag ( \"b\" )) # <b>I wish I was bold.</b> soup . p . wrap ( soup . new_tag ( \"div\" )) # <div><p><b>I wish I was bold.</b></p></div> \u8be5\u65b9\u6cd5\u5728 Beautiful Soup 4.0.5 \u4e2d\u6dfb\u52a0","title":"wrap()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#unwrap","text":"Tag.unwrap() \u65b9\u6cd5\u4e0e wrap() \u65b9\u6cd5\u76f8\u53cd.\u5c06\u79fb\u9664tag\u5185\u7684\u6240\u6709tag\u6807\u7b7e,\u8be5\u65b9\u6cd5\u5e38\u88ab\u7528\u6765\u8fdb\u884c\u6807\u8bb0\u7684\u89e3\u5305: markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) a_tag = soup . a a_tag . i . unwrap () a_tag # <a href=\"http://example.com/\">I linked to example.com</a> \u4e0e replace_with() \u65b9\u6cd5\u76f8\u540c, unwrap() \u65b9\u6cd5\u8fd4\u56de\u88ab\u79fb\u9664\u7684tag","title":"unwrap()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_23","text":"","title":"\u8f93\u51fa"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_24","text":"prettify() \u65b9\u6cd5\u5c06Beautiful Soup\u7684\u6587\u6863\u6811\u683c\u5f0f\u5316\u540e\u4ee5Unicode\u7f16\u7801\u8f93\u51fa,\u6bcf\u4e2aXML/HTML\u6807\u7b7e\u90fd\u72ec\u5360\u4e00\u884c markup = '<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' soup = BeautifulSoup ( markup ) soup . prettify () # '<html>\\n <head>\\n </head>\\n <body>\\n <a href=\"http://example.com/\">\\n...' print ( soup . prettify ()) # <html> # <head> # </head> # <body> # <a href=\"http://example.com/\"> # I linked to # <i> # example.com # </i> # </a> # </body> # </html> BeautifulSoup \u5bf9\u8c61\u548c\u5b83\u7684tag\u8282\u70b9\u90fd\u53ef\u4ee5\u8c03\u7528 prettify() \u65b9\u6cd5: print ( soup . a . prettify ()) # <a href=\"http://example.com/\"> # I linked to # <i> # example.com # </i> # </a>","title":"\u683c\u5f0f\u5316\u8f93\u51fa"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_25","text":"\u5982\u679c\u53ea\u60f3\u5f97\u5230\u7ed3\u679c\u5b57\u7b26\u4e32,\u4e0d\u91cd\u89c6\u683c\u5f0f,\u90a3\u4e48\u53ef\u4ee5\u5bf9\u4e00\u4e2a BeautifulSoup \u5bf9\u8c61\u6216 Tag \u5bf9\u8c61\u4f7f\u7528Python\u7684 unicode() \u6216 str() \u65b9\u6cd5: str ( soup ) # '<html><head></head><body><a href=\"http://example.com/\">I linked to <i>example.com</i></a></body></html>' unicode ( soup . a ) # u'<a href=\"http://example.com/\">I linked to <i>example.com</i></a>' str() \u65b9\u6cd5\u8fd4\u56deUTF-8\u7f16\u7801\u7684\u5b57\u7b26\u4e32,\u53ef\u4ee5\u6307\u5b9a \u7f16\u7801 \u7684\u8bbe\u7f6e. \u8fd8\u53ef\u4ee5\u8c03\u7528 encode() \u65b9\u6cd5\u83b7\u5f97\u5b57\u8282\u7801\u6216\u8c03\u7528 decode() \u65b9\u6cd5\u83b7\u5f97Unicode.","title":"\u538b\u7f29\u8f93\u51fa"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_26","text":"Beautiful Soup\u8f93\u51fa\u662f\u4f1a\u5c06HTML\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26\u8f6c\u6362\u6210Unicode,\u6bd4\u5982\u201c&lquot;\u201d: soup = BeautifulSoup ( \"&ldquo;Dammit!&rdquo; he said.\" ) unicode ( soup ) # u'<html><head></head><body>\\u201cDammit!\\u201d he said.</body></html>' \u5982\u679c\u5c06\u6587\u6863\u8f6c\u6362\u6210\u5b57\u7b26\u4e32,Unicode\u7f16\u7801\u4f1a\u88ab\u7f16\u7801\u6210UTF-8.\u8fd9\u6837\u5c31\u65e0\u6cd5\u6b63\u786e\u663e\u793aHTML\u7279\u6b8a\u5b57\u7b26\u4e86: str ( soup ) # '<html><head></head><body>\\xe2\\x80\\x9cDammit!\\xe2\\x80\\x9d he said.</body></html>'","title":"\u8f93\u51fa\u683c\u5f0f"},{"location":"06-third-part-lib/001-Beautiful-Soup/#get_text","text":"\u5982\u679c\u53ea\u60f3\u5f97\u5230tag\u4e2d\u5305\u542b\u7684\u6587\u672c\u5185\u5bb9,\u90a3\u4e48\u53ef\u4ee5\u8c03\u7528 get_text() \u65b9\u6cd5,\u8fd9\u4e2a\u65b9\u6cd5\u83b7\u53d6\u5230tag\u4e2d\u5305\u542b\u7684\u6240\u6709\u6587\u7248\u5185\u5bb9\u5305\u62ec\u5b50\u5b59tag\u4e2d\u7684\u5185\u5bb9,\u5e76\u5c06\u7ed3\u679c\u4f5c\u4e3aUnicode\u5b57\u7b26\u4e32\u8fd4\u56de: markup = '<a href=\"http://example.com/\"> \\n I linked to <i>example.com</i> \\n </a>' soup = BeautifulSoup ( markup ) soup . get_text () u ' \\n I linked to example.com \\n ' soup . i . get_text () u 'example.com' \u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u6307\u5b9atag\u7684\u6587\u672c\u5185\u5bb9\u7684\u5206\u9694\u7b26: # soup.get_text(\"|\") u ' \\n I linked to |example.com| \\n ' \u8fd8\u53ef\u4ee5\u53bb\u9664\u83b7\u5f97\u6587\u672c\u5185\u5bb9\u7684\u524d\u540e\u7a7a\u767d: # soup.get_text(\"|\", strip=True) u 'I linked to|example.com' \u6216\u8005\u4f7f\u7528 .stripped_strings \u751f\u6210\u5668,\u83b7\u5f97\u6587\u672c\u5217\u8868\u540e\u624b\u52a8\u5904\u7406\u5217\u8868: [ text for text in soup . stripped_strings ] # [u'I linked to', u'example.com']","title":"get_text()"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_27","text":"\u5982\u679c\u4ec5\u662f\u60f3\u8981\u89e3\u6790HTML\u6587\u6863,\u53ea\u8981\u7528\u6587\u6863\u521b\u5efa BeautifulSoup \u5bf9\u8c61\u5c31\u53ef\u4ee5\u4e86.Beautiful Soup\u4f1a\u81ea\u52a8\u9009\u62e9\u4e00\u4e2a\u89e3\u6790\u5668\u6765\u89e3\u6790\u6587\u6863.\u4f46\u662f\u8fd8\u53ef\u4ee5\u901a\u8fc7\u53c2\u6570\u6307\u5b9a\u4f7f\u7528\u90a3\u79cd\u89e3\u6790\u5668\u6765\u89e3\u6790\u5f53\u524d\u6587\u6863. BeautifulSoup \u7b2c\u4e00\u4e2a\u53c2\u6570\u5e94\u8be5\u662f\u8981\u88ab\u89e3\u6790\u7684\u6587\u6863\u5b57\u7b26\u4e32\u6216\u662f\u6587\u4ef6\u53e5\u67c4,\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7528\u6765\u6807\u8bc6\u600e\u6837\u89e3\u6790\u6587\u6863.\u5982\u679c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u7a7a,\u90a3\u4e48Beautiful Soup\u6839\u636e\u5f53\u524d\u7cfb\u7edf\u5b89\u88c5\u7684\u5e93\u81ea\u52a8\u9009\u62e9\u89e3\u6790\u5668,\u89e3\u6790\u5668\u7684\u4f18\u5148\u6570\u5e8f: lxml, html5lib, Python\u6807\u51c6\u5e93.\u5728\u4e0b\u9762\u4e24\u79cd\u6761\u4ef6\u4e0b\u89e3\u6790\u5668\u4f18\u5148\u987a\u5e8f\u4f1a\u53d8\u5316: \u8981\u89e3\u6790\u7684\u6587\u6863\u662f\u4ec0\u4e48\u7c7b\u578b: \u76ee\u524d\u652f\u6301, \u201chtml\u201d, \u201cxml\u201d, \u548c \u201chtml5\u201d \u6307\u5b9a\u4f7f\u7528\u54ea\u79cd\u89e3\u6790\u5668: \u76ee\u524d\u652f\u6301, \u201clxml\u201d, \u201chtml5lib\u201d, \u548c \u201chtml.parser\u201d \u5b89\u88c5\u89e3\u6790\u5668 \u7ae0\u8282\u4ecb\u7ecd\u4e86\u53ef\u4ee5\u4f7f\u7528\u54ea\u79cd\u89e3\u6790\u5668,\u4ee5\u53ca\u5982\u4f55\u5b89\u88c5. \u5982\u679c\u6307\u5b9a\u7684\u89e3\u6790\u5668\u6ca1\u6709\u5b89\u88c5,Beautiful Soup\u4f1a\u81ea\u52a8\u9009\u62e9\u5176\u5b83\u65b9\u6848.\u76ee\u524d\u53ea\u6709 lxml \u89e3\u6790\u5668\u652f\u6301XML\u6587\u6863\u7684\u89e3\u6790,\u5728\u6ca1\u6709\u5b89\u88c5lxml\u5e93\u7684\u60c5\u51b5\u4e0b,\u521b\u5efa beautifulsoup \u5bf9\u8c61\u65f6\u65e0\u8bba\u662f\u5426\u6307\u5b9a\u4f7f\u7528lxml,\u90fd\u65e0\u6cd5\u5f97\u5230\u89e3\u6790\u540e\u7684\u5bf9\u8c61","title":"\u6307\u5b9a\u6587\u6863\u89e3\u6790\u5668"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_28","text":"Beautiful Soup\u4e3a\u4e0d\u540c\u7684\u89e3\u6790\u5668\u63d0\u4f9b\u4e86\u76f8\u540c\u7684\u63a5\u53e3,\u4f46\u89e3\u6790\u5668\u672c\u8eab\u65f6\u6709\u533a\u522b\u7684.\u540c\u4e00\u7bc7\u6587\u6863\u88ab\u4e0d\u540c\u7684\u89e3\u6790\u5668\u89e3\u6790\u540e\u53ef\u80fd\u4f1a\u751f\u6210\u4e0d\u540c\u7ed3\u6784\u7684\u6811\u578b\u6587\u6863.\u533a\u522b\u6700\u5927\u7684\u662fHTML\u89e3\u6790\u5668\u548cXML\u89e3\u6790\u5668,\u770b\u4e0b\u9762\u7247\u6bb5\u88ab\u89e3\u6790\u6210HTML\u7ed3\u6784: BeautifulSoup ( \"<a><b /></a>\" ) # <html><head></head><body><a><b></b></a></body></html> \u56e0\u4e3a\u7a7a\u6807\u7b7e \u4e0d\u7b26\u5408HTML\u6807\u51c6,\u6240\u4ee5\u89e3\u6790\u5668\u628a\u5b83\u89e3\u6790\u6210 \u540c\u6837\u7684\u6587\u6863\u4f7f\u7528XML\u89e3\u6790\u5982\u4e0b(\u89e3\u6790XML\u9700\u8981\u5b89\u88c5lxml\u5e93).\u6ce8\u610f,\u7a7a\u6807\u7b7e \u4f9d\u7136\u88ab\u4fdd\u7559,\u5e76\u4e14\u6587\u6863\u524d\u6dfb\u52a0\u4e86XML\u5934,\u800c\u4e0d\u662f\u88ab\u5305\u542b\u5728 \u6807\u7b7e\u5185: BeautifulSoup ( \"<a><b /></a>\" , \"xml\" ) # <?xml version=\"1.0\" encoding=\"utf-8\"?> # <a><b/></a> HTML\u89e3\u6790\u5668\u4e4b\u95f4\u4e5f\u6709\u533a\u522b,\u5982\u679c\u88ab\u89e3\u6790\u7684HTML\u6587\u6863\u662f\u6807\u51c6\u683c\u5f0f,\u90a3\u4e48\u89e3\u6790\u5668\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u5dee\u522b,\u53ea\u662f\u89e3\u6790\u901f\u5ea6\u4e0d\u540c,\u7ed3\u679c\u90fd\u4f1a\u8fd4\u56de\u6b63\u786e\u7684\u6587\u6863\u6811. \u4f46\u662f\u5982\u679c\u88ab\u89e3\u6790\u6587\u6863\u4e0d\u662f\u6807\u51c6\u683c\u5f0f,\u90a3\u4e48\u4e0d\u540c\u7684\u89e3\u6790\u5668\u8fd4\u56de\u7ed3\u679c\u53ef\u80fd\u4e0d\u540c.\u4e0b\u9762\u4f8b\u5b50\u4e2d,\u4f7f\u7528lxml\u89e3\u6790\u9519\u8bef\u683c\u5f0f\u7684\u6587\u6863,\u7ed3\u679c \u6807\u7b7e\u88ab\u76f4\u63a5\u5ffd\u7565\u6389\u4e86: BeautifulSoup ( \"<a></p>\" , \"lxml\" ) # <html><body><a></a></body></html> \u4f7f\u7528html5lib\u5e93\u89e3\u6790\u76f8\u540c\u6587\u6863\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c: BeautifulSoup ( \"<a></p>\" , \"html5lib\" ) # <html><head></head><body><a><p></p></a></body></html> html5lib\u5e93\u6ca1\u6709\u5ffd\u7565\u6389 \u6807\u7b7e,\u800c\u662f\u81ea\u52a8\u8865\u5168\u4e86\u6807\u7b7e,\u8fd8\u7ed9\u6587\u6863\u6811\u6dfb\u52a0\u4e86 \u6807\u7b7e. \u4f7f\u7528pyhton\u5185\u7f6e\u5e93\u89e3\u6790\u7ed3\u679c\u5982\u4e0b: BeautifulSoup ( \"<a></p>\" , \"html.parser\" ) # <a></a> \u4e0elxml [ 7] \u5e93\u7c7b\u4f3c\u7684,Python\u5185\u7f6e\u5e93\u5ffd\u7565\u6389\u4e86 \u6807\u7b7e,\u4e0ehtml5lib\u5e93\u4e0d\u540c\u7684\u662f\u6807\u51c6\u5e93\u6ca1\u6709\u5c1d\u8bd5\u521b\u5efa\u7b26\u5408\u6807\u51c6\u7684\u6587\u6863\u683c\u5f0f\u6216\u5c06\u6587\u6863\u7247\u6bb5\u5305\u542b\u5728 \u6807\u7b7e\u5185,\u4e0elxml\u4e0d\u540c\u7684\u662f\u6807\u51c6\u5e93\u751a\u81f3\u8fde \u6807\u7b7e\u90fd\u6ca1\u6709\u5c1d\u8bd5\u53bb\u6dfb\u52a0. \u56e0\u4e3a\u6587\u6863\u7247\u6bb5\u201c \u201d\u662f\u9519\u8bef\u683c\u5f0f,\u6240\u4ee5\u4ee5\u4e0a\u89e3\u6790\u65b9\u5f0f\u90fd\u80fd\u7b97\u4f5c\u201d\u6b63\u786e\u201d,html5lib\u5e93\u4f7f\u7528\u7684\u662fHTML5\u7684\u90e8\u5206\u6807\u51c6,\u6240\u4ee5\u6700\u63a5\u8fd1\u201d\u6b63\u786e\u201d.\u4e0d\u8fc7\u6240\u6709\u89e3\u6790\u5668\u7684\u7ed3\u6784\u90fd\u80fd\u591f\u88ab\u8ba4\u4e3a\u662f\u201d\u6b63\u5e38\u201d\u7684. \u4e0d\u540c\u7684\u89e3\u6790\u5668\u53ef\u80fd\u5f71\u54cd\u4ee3\u7801\u6267\u884c\u7ed3\u679c,\u5982\u679c\u5728\u5206\u53d1\u7ed9\u522b\u4eba\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86 BeautifulSoup ,\u90a3\u4e48\u6700\u597d\u6ce8\u660e\u4f7f\u7528\u4e86\u54ea\u79cd\u89e3\u6790\u5668,\u4ee5\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u9ebb\u70e6.","title":"\u89e3\u6790\u5668\u4e4b\u95f4\u7684\u533a\u522b"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_29","text":"\u4efb\u4f55HTML\u6216XML\u6587\u6863\u90fd\u6709\u81ea\u5df1\u7684\u7f16\u7801\u65b9\u5f0f,\u6bd4\u5982ASCII \u6216 UTF-8,\u4f46\u662f\u4f7f\u7528Beautiful Soup\u89e3\u6790\u540e,\u6587\u6863\u90fd\u88ab\u8f6c\u6362\u6210\u4e86Unicode: markup = \"<h1>Sacr \\xc3\\xa9 bleu!</h1>\" soup = BeautifulSoup ( markup ) soup . h1 # <h1>Sacr\u00e9 bleu!</h1> soup . h1 . string # u'Sacr\\xe9 bleu!' \u8fd9\u4e0d\u662f\u9b54\u672f(\u4f46\u5f88\u795e\u5947),Beautiful Soup\u7528\u4e86 \u7f16\u7801\u81ea\u52a8\u68c0\u6d4b \u5b50\u5e93\u6765\u8bc6\u522b\u5f53\u524d\u6587\u6863\u7f16\u7801\u5e76\u8f6c\u6362\u6210Unicode\u7f16\u7801. BeautifulSoup \u5bf9\u8c61\u7684 .original_encoding \u5c5e\u6027\u8bb0\u5f55\u4e86\u81ea\u52a8\u8bc6\u522b\u7f16\u7801\u7684\u7ed3\u679c: soup . original_encoding 'utf-8' \u7f16\u7801\u81ea\u52a8\u68c0\u6d4b \u529f\u80fd\u5927\u90e8\u5206\u65f6\u5019\u90fd\u80fd\u731c\u5bf9\u7f16\u7801\u683c\u5f0f,\u4f46\u6709\u65f6\u5019\u4e5f\u4f1a\u51fa\u9519.\u6709\u65f6\u5019\u5373\u4f7f\u731c\u6d4b\u6b63\u786e,\u4e5f\u662f\u5728\u9010\u4e2a\u5b57\u8282\u7684\u904d\u5386\u6574\u4e2a\u6587\u6863\u540e\u624d\u731c\u5bf9\u7684,\u8fd9\u6837\u5f88\u6162.\u5982\u679c\u9884\u5148\u77e5\u9053\u6587\u6863\u7f16\u7801,\u53ef\u4ee5\u8bbe\u7f6e\u7f16\u7801\u53c2\u6570\u6765\u51cf\u5c11\u81ea\u52a8\u68c0\u67e5\u7f16\u7801\u51fa\u9519\u7684\u6982\u7387\u5e76\u4e14\u63d0\u9ad8\u6587\u6863\u89e3\u6790\u901f\u5ea6.\u5728\u521b\u5efa BeautifulSoup \u5bf9\u8c61\u7684\u65f6\u5019\u8bbe\u7f6e from_encoding \u53c2\u6570. \u4e0b\u9762\u4e00\u6bb5\u6587\u6863\u7528\u4e86ISO-8859-8\u7f16\u7801\u65b9\u5f0f,\u8fd9\u6bb5\u6587\u6863\u592a\u77ed,\u7ed3\u679cBeautiful Soup\u4ee5\u4e3a\u6587\u6863\u662f\u7528ISO-8859-7\u7f16\u7801: markup = b \"<h1> \\xed\\xe5\\xec\\xf9 </h1>\" soup = BeautifulSoup ( markup ) soup . h1 < h1 > \u03bd\u03b5\u03bc\u03c9 </ h1 > soup . original_encoding 'ISO-8859-7' \u901a\u8fc7\u4f20\u5165 from_encoding \u53c2\u6570\u6765\u6307\u5b9a\u7f16\u7801\u65b9\u5f0f: soup = BeautifulSoup ( markup , from_encoding = \"iso-8859-8\" ) soup . h1 < h1 > \u05dd\u05d5\u05dc\u05e9 </ h1 > soup . original_encoding 'iso8859-8' \u5982\u679c\u4ec5\u77e5\u9053\u6587\u6863\u91c7\u7528\u4e86Unicode\u7f16\u7801, \u4f46\u4e0d\u77e5\u9053\u5177\u4f53\u7f16\u7801. \u53ef\u4ee5\u5148\u81ea\u5df1\u731c\u6d4b, \u731c\u6d4b\u9519\u8bef(\u4f9d\u65e7\u662f\u4e71\u7801)\u65f6, \u53ef\u4ee5\u628a\u9519\u8bef\u7f16\u7801\u4f5c\u4e3a exclude_encodings \u53c2\u6570, \u8fd9\u6837\u6587\u6863\u5c31\u4e0d\u4f1a\u5c1d\u8bd5\u4f7f\u7528\u8fd9\u79cd\u7f16\u7801\u4e86\u89e3\u7801\u4e86. \u8bd1\u8005\u5907\u6ce8: \u5728\u6ca1\u6709\u6307\u5b9a\u7f16\u7801\u7684\u60c5\u51b5\u4e0b, BS\u4f1a\u81ea\u5df1\u731c\u6d4b\u7f16\u7801, \u628a\u4e0d\u6b63\u786e\u7684\u7f16\u7801\u6392\u9664\u6389, BS\u5c31\u66f4\u5bb9\u6613\u731c\u5230\u6b63\u786e\u7f16\u7801. soup = BeautifulSoup ( markup , exclude_encodings = [ \"ISO-8859-7\" ]) soup . h1 < h1 > \u05dd\u05d5\u05dc\u05e9 </ h1 > soup . original_encoding 'WINDOWS-1255' \u731c\u6d4b\u7ed3\u679c\u662f Windows-1255 \u7f16\u7801, \u731c\u6d4b\u7ed3\u679c\u53ef\u80fd\u4e0d\u591f\u51c6\u786e, \u4f46\u662f Windows-1255 \u7f16\u7801\u662f ISO-8859-8 \u7684\u6269\u5c55\u96c6, \u6240\u4ee5\u731c\u6d4b\u7ed3\u679c\u5df2\u7ecf\u5341\u5206\u63a5\u8fd1\u4e86, \u5e76\u4e14\u4e0d\u5f71\u54cd\u4f7f\u7528. ( exclude_encodings \u53c2\u6570\u662f 4.4.0\u7248\u672c\u7684\u65b0\u529f\u80fd) \u5c11\u6570\u60c5\u51b5\u4e0b(\u901a\u5e38\u662fUTF-8\u7f16\u7801\u7684\u6587\u6863\u4e2d\u5305\u542b\u4e86\u5176\u5b83\u7f16\u7801\u683c\u5f0f\u7684\u6587\u4ef6),\u60f3\u83b7\u5f97\u6b63\u786e\u7684Unicode\u7f16\u7801\u5c31\u4e0d\u5f97\u4e0d\u5c06\u6587\u6863\u4e2d\u5c11\u6570\u7279\u6b8a\u7f16\u7801\u5b57\u7b26\u66ff\u6362\u6210\u7279\u6b8aUnicode\u7f16\u7801,\u201cREPLACEMENT CHARACTER\u201d (U+FFFD, \ufffd) [ 9] . \u5982\u679cBeautifu Soup\u731c\u6d4b\u6587\u6863\u7f16\u7801\u65f6\u4f5c\u4e86\u7279\u6b8a\u5b57\u7b26\u7684\u66ff\u6362,\u90a3\u4e48Beautiful Soup\u4f1a\u628a UnicodeDammit \u6216 BeautifulSoup \u5bf9\u8c61\u7684 .contains_replacement_characters \u5c5e\u6027\u6807\u8bb0\u4e3a True .\u8fd9\u6837\u5c31\u53ef\u4ee5\u77e5\u9053\u5f53\u524d\u6587\u6863\u8fdb\u884cUnicode\u7f16\u7801\u540e\u4e22\u5931\u4e86\u4e00\u90e8\u5206\u7279\u6b8a\u5185\u5bb9\u5b57\u7b26.\u5982\u679c\u6587\u6863\u4e2d\u5305\u542b\ufffd\u800c .contains_replacement_characters \u5c5e\u6027\u662f False ,\u5219\u8868\u793a\ufffd\u5c31\u662f\u6587\u6863\u4e2d\u539f\u6765\u7684\u5b57\u7b26,\u4e0d\u662f\u8f6c\u7801\u5931\u8d25.","title":"\u7f16\u7801"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_30","text":"\u901a\u8fc7Beautiful Soup\u8f93\u51fa\u6587\u6863\u65f6,\u4e0d\u7ba1\u8f93\u5165\u6587\u6863\u662f\u4ec0\u4e48\u7f16\u7801\u65b9\u5f0f,\u8f93\u51fa\u7f16\u7801\u5747\u4e3aUTF-8\u7f16\u7801,\u4e0b\u9762\u4f8b\u5b50\u8f93\u5165\u6587\u6863\u662fLatin-1\u7f16\u7801: markup = b ''' <html> <head> <meta content=\"text/html; charset=ISO-Latin-1\" http-equiv=\"Content-type\" /> </head> <body> <p>Sacr \\xe9 bleu!</p> </body> </html> ''' soup = BeautifulSoup ( markup ) print ( soup . prettify ()) # <html> # <head> # <meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-type\" /> # </head> # <body> # <p> # Sacr\u00e9 bleu! # </p> # </body> # </html> \u6ce8\u610f,\u8f93\u51fa\u6587\u6863\u4e2d\u7684 \u6807\u7b7e\u7684\u7f16\u7801\u8bbe\u7f6e\u5df2\u7ecf\u4fee\u6539\u6210\u4e86\u4e0e\u8f93\u51fa\u7f16\u7801\u4e00\u81f4\u7684UTF-8. \u5982\u679c\u4e0d\u60f3\u7528UTF-8\u7f16\u7801\u8f93\u51fa,\u53ef\u4ee5\u5c06\u7f16\u7801\u65b9\u5f0f\u4f20\u5165 prettify() \u65b9\u6cd5: print ( soup . prettify ( \"latin-1\" )) # <html> # <head> # <meta content=\"text/html; charset=latin-1\" http-equiv=\"Content-type\" /> # ... \u8fd8\u53ef\u4ee5\u8c03\u7528 BeautifulSoup \u5bf9\u8c61\u6216\u4efb\u610f\u8282\u70b9\u7684 encode() \u65b9\u6cd5,\u5c31\u50cfPython\u7684\u5b57\u7b26\u4e32\u8c03\u7528 encode() \u65b9\u6cd5\u4e00\u6837: soup . p . encode ( \"latin-1\" ) # '<p>Sacr\\xe9 bleu!</p>' soup . p . encode ( \"utf-8\" ) # '<p>Sacr\\xc3\\xa9 bleu!</p>' \u5982\u679c\u6587\u6863\u4e2d\u5305\u542b\u5f53\u524d\u7f16\u7801\u4e0d\u652f\u6301\u7684\u5b57\u7b26,\u90a3\u4e48\u8fd9\u4e9b\u5b57\u7b26\u5c06\u88ab\u8f6c\u6362\u6210\u4e00\u7cfb\u5217XML\u7279\u6b8a\u5b57\u7b26\u5f15\u7528,\u4e0b\u9762\u4f8b\u5b50\u4e2d\u5305\u542b\u4e86Unicode\u7f16\u7801\u5b57\u7b26SNOWMAN: markup = u \"<b> \\N{SNOWMAN} </b>\" snowman_soup = BeautifulSoup ( markup ) tag = snowman_soup . b SNOWMAN\u5b57\u7b26\u5728UTF-8\u7f16\u7801\u4e2d\u53ef\u4ee5\u6b63\u5e38\u663e\u793a(\u770b\u4e0a\u53bb\u50cf\u662f\u2603),\u4f46\u6709\u4e9b\u7f16\u7801\u4e0d\u652f\u6301SNOWMAN\u5b57\u7b26,\u6bd4\u5982ISO-Latin-1\u6216ASCII,\u90a3\u4e48\u5728\u8fd9\u4e9b\u7f16\u7801\u4e2dSNOWMAN\u5b57\u7b26\u4f1a\u88ab\u8f6c\u6362\u6210\u201c\u2603\u201d: print ( tag . encode ( \"utf-8\" )) # <b>\u2603</b> print tag . encode ( \"latin-1\" ) # <b>&#9731;</b> print tag . encode ( \"ascii\" ) # <b>&#9731;</b>","title":"\u8f93\u51fa\u7f16\u7801"},{"location":"06-third-part-lib/001-Beautiful-Soup/#unicode-dammit","text":"\u8bd1\u8005\u5907\u6ce8: UnicodeDammit \u662fBS\u5185\u7f6e\u5e93, \u4e3b\u8981\u7528\u6765\u731c\u6d4b\u6587\u6863\u7f16\u7801. \u7f16\u7801\u81ea\u52a8\u68c0\u6d4b \u529f\u80fd\u53ef\u4ee5\u5728Beautiful Soup\u4ee5\u5916\u4f7f\u7528,\u68c0\u6d4b\u67d0\u6bb5\u672a\u77e5\u7f16\u7801\u65f6,\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5: from bs4 import UnicodeDammit dammit = UnicodeDammit ( \"Sacr \\xc3\\xa9 bleu!\" ) print ( dammit . unicode_markup ) # Sacr\u00e9 bleu! dammit . original_encoding # 'utf-8' \u5982\u679cPython\u4e2d\u5b89\u88c5\u4e86 chardet \u6216 cchardet \u90a3\u4e48\u7f16\u7801\u68c0\u6d4b\u529f\u80fd\u7684\u51c6\u786e\u7387\u5c06\u5927\u5927\u63d0\u9ad8. \u8f93\u5165\u7684\u5b57\u7b26\u8d8a\u591a,\u68c0\u6d4b\u7ed3\u679c\u8d8a\u7cbe\u786e,\u5982\u679c\u4e8b\u5148\u731c\u6d4b\u5230\u4e00\u4e9b\u53ef\u80fd\u7f16\u7801, \u90a3\u4e48\u53ef\u4ee5\u5c06\u731c\u6d4b\u7684\u7f16\u7801\u4f5c\u4e3a\u53c2\u6570,\u8fd9\u6837\u5c06\u4f18\u5148\u68c0\u6d4b\u8fd9\u4e9b\u7f16\u7801: dammit = UnicodeDammit ( \"Sacr \\xe9 bleu!\" , [ \"latin-1\" , \"iso-8859-1\" ]) print ( dammit . unicode_markup ) # Sacr\u00e9 bleu! dammit . original_encoding # 'latin-1' \u7f16\u7801\u81ea\u52a8\u68c0\u6d4b \u529f\u80fd\u4e2d\u67092\u9879\u529f\u80fd\u662fBeautiful Soup\u5e93\u4e2d\u7528\u4e0d\u5230\u7684","title":"Unicode, Dammit! (\u4e71\u7801, \u9760!)"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_31","text":"\u4f7f\u7528Unicode\u65f6,Beautiful Soup\u8fd8\u4f1a\u667a\u80fd\u7684\u628a\u5f15\u53f7 [ 10] \u8f6c\u6362\u6210HTML\u6216XML\u4e2d\u7684\u7279\u6b8a\u5b57\u7b26: markup = b \"<p>I just \\x93 love \\x94 Microsoft Word \\x92 s smart quotes</p>\" UnicodeDammit ( markup , [ \"windows-1252\" ], smart_quotes_to = \"html\" ) . unicode_markup # u'<p>I just &ldquo;love&rdquo; Microsoft Word&rsquo;s smart quotes</p>' UnicodeDammit ( markup , [ \"windows-1252\" ], smart_quotes_to = \"xml\" ) . unicode_markup # u'<p>I just &#x201C;love&#x201D; Microsoft Word&#x2019;s smart quotes</p>' \u4e5f\u53ef\u4ee5\u628a\u5f15\u53f7\u8f6c\u6362\u4e3aASCII\u7801: UnicodeDammit ( markup , [ \"windows-1252\" ], smart_quotes_to = \"ascii\" ) . unicode_markup # u'<p>I just \"love\" Microsoft Word\\'s smart quotes</p>' \u5f88\u6709\u7528\u7684\u529f\u80fd,\u4f46\u662fBeautiful Soup\u6ca1\u6709\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f.\u9ed8\u8ba4\u60c5\u51b5\u4e0b,Beautiful Soup\u628a\u5f15\u53f7\u8f6c\u6362\u6210Unicode: UnicodeDammit ( markup , [ \"windows-1252\" ]) . unicode_markup # u'<p>I just \\u201clove\\u201d Microsoft Word\\u2019s smart quotes</p>'","title":"\u667a\u80fd\u5f15\u53f7"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_32","text":"\u6709\u65f6\u6587\u6863\u7684\u5927\u90e8\u5206\u90fd\u662f\u7528UTF-8,\u4f46\u540c\u65f6\u8fd8\u5305\u542b\u4e86Windows-1252\u7f16\u7801\u7684\u5b57\u7b26,\u5c31\u50cf\u5fae\u8f6f\u7684\u667a\u80fd\u5f15\u53f7 [ 10] \u4e00\u6837. \u4e00\u4e9b\u5305\u542b\u591a\u4e2a\u4fe1\u606f\u7684\u6765\u6e90\u7f51\u7ad9\u5bb9\u6613\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5. UnicodeDammit.detwingle() \u65b9\u6cd5\u53ef\u4ee5\u628a\u8fd9\u7c7b\u6587\u6863\u8f6c\u6362\u6210\u7eafUTF-8\u7f16\u7801\u683c\u5f0f,\u770b\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50: snowmen = ( u \" \\N{SNOWMAN} \" * 3 ) quote = ( u \" \\N{LEFT DOUBLE QUOTATION MARK} I like snowmen! \\N{RIGHT DOUBLE QUOTATION MARK} \" ) doc = snowmen . encode ( \"utf8\" ) + quote . encode ( \"windows_1252\" ) \u8fd9\u6bb5\u6587\u6863\u5f88\u6742\u4e71,snowmen\u662fUTF-8\u7f16\u7801,\u5f15\u53f7\u662fWindows-1252\u7f16\u7801,\u76f4\u63a5\u8f93\u51fa\u65f6\u4e0d\u80fd\u540c\u65f6\u663e\u793asnowmen\u548c\u5f15\u53f7,\u56e0\u4e3a\u5b83\u4eec\u7f16\u7801\u4e0d\u540c: print ( doc ) # \u2603\u2603\u2603\ufffdI like snowmen!\ufffd print ( doc . decode ( \"windows-1252\" )) # \u00e2\u02dc\u0192\u00e2\u02dc\u0192\u00e2\u02dc\u0192\u201cI like snowmen!\u201d \u5982\u679c\u5bf9\u8fd9\u6bb5\u6587\u6863\u7528UTF-8\u89e3\u7801\u5c31\u4f1a\u5f97\u5230 UnicodeDecodeError \u5f02\u5e38,\u5982\u679c\u7528Windows-1252\u89e3\u7801\u5c31\u56de\u5f97\u5230\u4e00\u5806\u4e71\u7801. \u5e78\u597d, UnicodeDammit.detwingle() \u65b9\u6cd5\u4f1a\u628a\u8fd9\u6bb5\u5b57\u7b26\u4e32\u8f6c\u6362\u6210UTF-8\u7f16\u7801,\u5141\u8bb8\u6211\u4eec\u540c\u65f6\u663e\u793a\u51fa\u6587\u6863\u4e2d\u7684snowmen\u548c\u5f15\u53f7: new_doc = UnicodeDammit . detwingle ( doc ) print ( new_doc . decode ( \"utf8\" )) # \u2603\u2603\u2603\u201cI like snowmen!\u201d UnicodeDammit.detwingle() \u65b9\u6cd5\u53ea\u80fd\u89e3\u7801\u5305\u542b\u5728UTF-8\u7f16\u7801\u4e2d\u7684Windows-1252\u7f16\u7801\u5185\u5bb9,\u4f46\u8fd9\u89e3\u51b3\u4e86\u6700\u5e38\u89c1\u7684\u4e00\u7c7b\u95ee\u9898. \u5728\u521b\u5efa BeautifulSoup \u6216 UnicodeDammit \u5bf9\u8c61\u524d\u4e00\u5b9a\u8981\u5148\u5bf9\u6587\u6863\u8c03\u7528 UnicodeDammit.detwingle() \u786e\u4fdd\u6587\u6863\u7684\u7f16\u7801\u65b9\u5f0f\u6b63\u786e.\u5982\u679c\u5c1d\u8bd5\u53bb\u89e3\u6790\u4e00\u6bb5\u5305\u542bWindows-1252\u7f16\u7801\u7684UTF-8\u6587\u6863,\u5c31\u4f1a\u5f97\u5230\u4e00\u5806\u4e71\u7801,\u6bd4\u5982: \u00e2\u02dc\u0192\u00e2\u02dc\u0192\u00e2\u02dc\u0192\u201cI like snowmen!\u201d. UnicodeDammit.detwingle() \u65b9\u6cd5\u5728Beautiful Soup 4.1.0\u7248\u672c\u4e2d\u65b0\u589e","title":"\u77db\u76fe\u7684\u7f16\u7801"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_33","text":"\u4e24\u4e2a NavigableString \u6216 Tag \u5bf9\u8c61\u5177\u6709\u76f8\u540c\u7684HTML\u6216XML\u7ed3\u6784\u65f6, Beautiful Soup\u5c31\u5224\u65ad\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u76f8\u540c. \u8fd9\u4e2a\u4f8b\u5b50\u4e2d, 2\u4e2a \u6807\u7b7e\u5728 BS \u4e2d\u662f\u76f8\u540c\u7684, \u5c3d\u7ba1\u4ed6\u4eec\u5728\u6587\u6863\u6811\u7684\u4e0d\u540c\u4f4d\u7f6e, \u4f46\u662f\u5177\u6709\u76f8\u540c\u7684\u8868\u8c61: \u201c pizza \u201d markup = \"<p>I want <b>pizza</b> and more <b>pizza</b>!</p>\" soup = BeautifulSoup ( markup , 'html.parser' ) first_b , second_b = soup . find_all ( 'b' ) print first_b == second_b # True print first_b . previous_element == second_b . previous_element # False \u5982\u679c\u60f3\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e25\u683c\u7684\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u53ef\u4ee5\u901a\u8fc7 is \u6765\u5224\u65ad print first_b is second_b # False","title":"\u6bd4\u8f83\u5bf9\u8c61\u662f\u5426\u76f8\u540c"},{"location":"06-third-part-lib/001-Beautiful-Soup/#beautiful-soup_1","text":"copy.copy() \u65b9\u6cd5\u53ef\u4ee5\u590d\u5236\u4efb\u610f Tag \u6216 NavigableString \u5bf9\u8c61 import copy p_copy = copy . copy ( soup . p ) print p_copy # <p>I want <b>pizza</b> and more <b>pizza</b>!</p> \u590d\u5236\u540e\u7684\u5bf9\u8c61\u8ddf\u4e0e\u5bf9\u8c61\u662f\u76f8\u7b49\u7684, \u4f46\u6307\u5411\u4e0d\u540c\u7684\u5185\u5b58\u5730\u5740 print soup . p == p_copy # True print soup . p is p_copy # False \u6e90\u5bf9\u8c61\u548c\u590d\u5236\u5bf9\u8c61\u7684\u533a\u522b\u662f\u6e90\u5bf9\u8c61\u5728\u6587\u6863\u6811\u4e2d, \u800c\u590d\u5236\u540e\u7684\u5bf9\u8c61\u662f\u72ec\u7acb\u7684\u8fd8\u6ca1\u6709\u6dfb\u52a0\u5230\u6587\u6863\u6811\u4e2d. \u590d\u5236\u540e\u5bf9\u8c61\u7684\u6548\u679c\u8ddf\u8c03\u7528\u4e86 extract() \u65b9\u6cd5\u76f8\u540c. print p_copy . parent # None \u8fd9\u662f\u56e0\u4e3a\u76f8\u7b49\u7684\u5bf9\u8c61\u4e0d\u80fd\u540c\u65f6\u63d2\u5165\u76f8\u540c\u7684\u4f4d\u7f6e","title":"\u590d\u5236Beautiful Soup\u5bf9\u8c61"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_34","text":"\u5982\u679c\u4ec5\u4ec5\u56e0\u4e3a\u60f3\u8981\u67e5\u627e\u6587\u6863\u4e2d\u7684 \u6807\u7b7e\u800c\u5c06\u6574\u7247\u6587\u6863\u8fdb\u884c\u89e3\u6790,\u5b9e\u5728\u662f\u6d6a\u8d39\u5185\u5b58\u548c\u65f6\u95f4.\u6700\u5feb\u7684\u65b9\u6cd5\u662f\u4ece\u4e00\u5f00\u59cb\u5c31\u628a \u6807\u7b7e\u4ee5\u5916\u7684\u4e1c\u897f\u90fd\u5ffd\u7565\u6389. SoupStrainer \u7c7b\u53ef\u4ee5\u5b9a\u4e49\u6587\u6863\u7684\u67d0\u6bb5\u5185\u5bb9,\u8fd9\u6837\u641c\u7d22\u6587\u6863\u65f6\u5c31\u4e0d\u5fc5\u5148\u89e3\u6790\u6574\u7bc7\u6587\u6863,\u53ea\u4f1a\u89e3\u6790\u5728 SoupStrainer \u4e2d\u5b9a\u4e49\u8fc7\u7684\u6587\u6863. \u521b\u5efa\u4e00\u4e2a SoupStrainer \u5bf9\u8c61\u5e76\u4f5c\u4e3a parse_only \u53c2\u6570\u7ed9 BeautifulSoup \u7684\u6784\u9020\u65b9\u6cd5\u5373\u53ef.","title":"\u89e3\u6790\u90e8\u5206\u6587\u6863"},{"location":"06-third-part-lib/001-Beautiful-Soup/#soupstrainer","text":"SoupStrainer \u7c7b\u63a5\u53d7\u4e0e\u5178\u578b\u641c\u7d22\u65b9\u6cd5\u76f8\u540c\u7684\u53c2\u6570\uff1a name , attrs , recursive , string , **kwargs \u3002\u4e0b\u9762\u4e3e\u4f8b\u8bf4\u660e\u4e09\u79cd SoupStrainer \u5bf9\u8c61\uff1a from bs4 import SoupStrainer only_a_tags = SoupStrainer ( \"a\" ) only_tags_with_id_link2 = SoupStrainer ( id = \"link2\" ) def is_short_string ( string ): return len ( string ) < 10 only_short_strings = SoupStrainer ( string = is_short_string ) \u518d\u62ff\u201c\u7231\u4e3d\u4e1d\u201d\u6587\u6863\u6765\u4e3e\u4f8b\uff0c\u6765\u770b\u770b\u4f7f\u7528\u4e09\u79cd SoupStrainer \u5bf9\u8c61\u505a\u53c2\u6570\u4f1a\u6709\u4ec0\u4e48\u4e0d\u540c: html_doc = \"\"\" <html><head><title>The Dormouse's story</title></head> <body> <p class=\"title\"><b>The Dormouse's story</b></p> <p class=\"story\">Once upon a time there were three little sisters; and their names were <a href=\"http://example.com/elsie\" class=\"sister\" id=\"link1\">Elsie</a>, <a href=\"http://example.com/lacie\" class=\"sister\" id=\"link2\">Lacie</a> and <a href=\"http://example.com/tillie\" class=\"sister\" id=\"link3\">Tillie</a>; and they lived at the bottom of a well.</p> <p class=\"story\">...</p> \"\"\" print ( BeautifulSoup ( html_doc , \"html.parser\" , parse_only = only_a_tags ) . prettify ()) # <a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\"> # Elsie # </a> # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\"> # Lacie # </a> # <a class=\"sister\" href=\"http://example.com/tillie\" id=\"link3\"> # Tillie # </a> print ( BeautifulSoup ( html_doc , \"html.parser\" , parse_only = only_tags_with_id_link2 ) . prettify ()) # <a class=\"sister\" href=\"http://example.com/lacie\" id=\"link2\"> # Lacie # </a> print ( BeautifulSoup ( html_doc , \"html.parser\" , parse_only = only_short_strings ) . prettify ()) # Elsie # , # Lacie # and # Tillie # ... # \u8fd8\u53ef\u4ee5\u5c06 SoupStrainer \u4f5c\u4e3a\u53c2\u6570\u4f20\u5165 \u641c\u7d22\u6587\u6863\u6811 \u4e2d\u63d0\u5230\u7684\u65b9\u6cd5.\u8fd9\u53ef\u80fd\u4e0d\u662f\u4e2a\u5e38\u7528\u7528\u6cd5,\u6240\u4ee5\u8fd8\u662f\u63d0\u4e00\u4e0b: soup = BeautifulSoup(html_doc) soup.find_all(only_short_strings) # [u'\\n\\n', u'\\n\\n', u'Elsie', u',\\n', u'Lacie', u' and\\n', u'Tillie', # u'\\n\\n', u'...', u'\\n']","title":"SoupStrainer"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_35","text":"","title":"\u5e38\u89c1\u95ee\u9898"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_36","text":"\u5982\u679c\u60f3\u77e5\u9053Beautiful Soup\u5230\u5e95\u600e\u6837\u5904\u7406\u4e00\u4efd\u6587\u6863,\u53ef\u4ee5\u5c06\u6587\u6863\u4f20\u5165 diagnose() \u65b9\u6cd5(Beautiful Soup 4.2.0\u4e2d\u65b0\u589e),Beautiful Soup\u4f1a\u8f93\u51fa\u4e00\u4efd\u62a5\u544a,\u8bf4\u660e\u4e0d\u540c\u7684\u89e3\u6790\u5668\u4f1a\u600e\u6837\u5904\u7406\u8fd9\u6bb5\u6587\u6863,\u5e76\u6807\u51fa\u5f53\u524d\u7684\u89e3\u6790\u8fc7\u7a0b\u4f1a\u4f7f\u7528\u54ea\u79cd\u89e3\u6790\u5668: from bs4.diagnose import diagnose data = open ( \"bad.html\" ) . read () diagnose ( data ) # Diagnostic running on Beautiful Soup 4.2.0 # Python version 2.7.3 (default, Aug 1 2012, 05:16:07) # I noticed that html5lib is not installed. Installing it may help. # Found lxml version 2.3.2.0 # # Trying to parse your data with html.parser # Here's what html.parser did with the document: # ... diagnose() \u65b9\u6cd5\u7684\u8f93\u51fa\u7ed3\u679c\u53ef\u80fd\u5e2e\u52a9\u4f60\u627e\u5230\u95ee\u9898\u7684\u539f\u56e0,\u5982\u679c\u4e0d\u884c,\u8fd8\u53ef\u4ee5\u628a\u7ed3\u679c\u590d\u5236\u51fa\u6765\u4ee5\u4fbf\u5bfb\u6c42\u4ed6\u4eba\u7684\u5e2e\u52a9","title":"\u4ee3\u7801\u8bca\u65ad"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_37","text":"\u6587\u6863\u89e3\u6790\u9519\u8bef\u6709\u4e24\u79cd.\u4e00\u79cd\u662f\u5d29\u6e83,Beautiful Soup\u5c1d\u8bd5\u89e3\u6790\u4e00\u6bb5\u6587\u6863\u7ed3\u679c\u5374\u629b\u9664\u4e86\u5f02\u5e38,\u901a\u5e38\u662f HTMLParser.HTMLParseError .\u8fd8\u6709\u4e00\u79cd\u5f02\u5e38\u60c5\u51b5,\u662fBeautiful Soup\u89e3\u6790\u540e\u7684\u6587\u6863\u6811\u770b\u8d77\u6765\u4e0e\u539f\u6765\u7684\u5185\u5bb9\u76f8\u5dee\u5f88\u591a. \u8fd9\u4e9b\u9519\u8bef\u51e0\u4e4e\u90fd\u4e0d\u662fBeautiful Soup\u7684\u539f\u56e0,\u8fd9\u4e0d\u4f1a\u662f\u56e0\u4e3aBeautiful Soup\u7684\u4ee3\u7801\u5199\u7684\u592a\u4f18\u79c0,\u800c\u662f\u56e0\u4e3aBeautiful Soup\u6ca1\u6709\u5305\u542b\u4efb\u4f55\u6587\u6863\u89e3\u6790\u4ee3\u7801.\u5f02\u5e38\u4ea7\u751f\u81ea\u88ab\u4f9d\u8d56\u7684\u89e3\u6790\u5668,\u5982\u679c\u89e3\u6790\u5668\u4e0d\u80fd\u5f88\u597d\u7684\u89e3\u6790\u51fa\u5f53\u524d\u7684\u6587\u6863,\u90a3\u4e48\u6700\u597d\u7684\u529e\u6cd5\u662f\u6362\u4e00\u4e2a\u89e3\u6790\u5668.\u66f4\u591a\u7ec6\u8282\u67e5\u770b \u5b89\u88c5\u89e3\u6790\u5668 \u7ae0\u8282. \u6700\u5e38\u89c1\u7684\u89e3\u6790\u9519\u8bef\u662f HTMLParser.HTMLParseError: malformed start tag \u548c HTMLParser.HTMLParseError: bad end tag .\u8fd9\u90fd\u662f\u7531Python\u5185\u7f6e\u7684\u89e3\u6790\u5668\u5f15\u8d77\u7684,\u89e3\u51b3\u65b9\u6cd5\u662f \u5b89\u88c5lxml\u6216html5lib \u6700\u5e38\u89c1\u7684\u5f02\u5e38\u73b0\u8c61\u662f\u5f53\u524d\u6587\u6863\u627e\u4e0d\u5230\u6307\u5b9a\u7684Tag,\u800c\u8fd9\u4e2aTag\u5149\u662f\u7528\u773c\u775b\u5c31\u8db3\u591f\u53d1\u73b0\u7684\u4e86. find_all() \u65b9\u6cd5\u8fd4\u56de [] ,\u800c find() \u65b9\u6cd5\u8fd4\u56de None .\u8fd9\u662fPython\u5185\u7f6e\u89e3\u6790\u5668\u7684\u53c8\u4e00\u4e2a\u95ee\u9898: \u89e3\u6790\u5668\u4f1a\u8df3\u8fc7\u90a3\u4e9b\u5b83\u4e0d\u77e5\u9053\u7684tag.\u89e3\u51b3\u65b9\u6cd5\u8fd8\u662f \u5b89\u88c5lxml\u6216html5lib","title":"\u6587\u6863\u89e3\u6790\u9519\u8bef"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_38","text":"SyntaxError: Invalid syntax (\u5f02\u5e38\u4f4d\u7f6e\u5728\u4ee3\u7801\u884c: ROOT_TAG_NAME = u'[document]' ),\u56e0\u4e3aPython2\u8bed\u6cd5\u7684\u4ee3\u7801(\u6ca1\u6709\u7ecf\u8fc7\u8fc1\u79fb)\u76f4\u63a5\u5728Python3\u4e2d\u8fd0\u884c ImportError: No module named HTMLParser \u56e0\u4e3a\u5728Python3\u4e2d\u6267\u884cPython2\u7248\u672c\u7684Beautiful Soup ImportError: No module named html.parser \u56e0\u4e3a\u5728Python2\u4e2d\u6267\u884cPython3\u7248\u672c\u7684Beautiful Soup ImportError: No module named BeautifulSoup \u56e0\u4e3a\u5728\u6ca1\u6709\u5b89\u88c5BeautifulSoup3\u5e93\u7684Python\u73af\u5883\u4e0b\u6267\u884c\u4ee3\u7801,\u6216\u5fd8\u8bb0\u4e86BeautifulSoup4\u7684\u4ee3\u7801\u9700\u8981\u4ece bs4 \u5305\u4e2d\u5f15\u5165 ImportError: No module named bs4 \u56e0\u4e3a\u5f53\u524dPython\u73af\u5883\u4e0b\u8fd8\u6ca1\u6709\u5b89\u88c5BeautifulSoup4","title":"\u7248\u672c\u9519\u8bef"},{"location":"06-third-part-lib/001-Beautiful-Soup/#xml","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b,Beautiful Soup\u4f1a\u5c06\u5f53\u524d\u6587\u6863\u4f5c\u4e3aHTML\u683c\u5f0f\u89e3\u6790,\u5982\u679c\u8981\u89e3\u6790XML\u6587\u6863,\u8981\u5728 BeautifulSoup \u6784\u9020\u65b9\u6cd5\u4e2d\u52a0\u5165\u7b2c\u4e8c\u4e2a\u53c2\u6570 \u201cxml\u201d: soup = BeautifulSoup ( markup , \"xml\" ) \u5f53\u7136,\u8fd8\u9700\u8981 \u5b89\u88c5lxml","title":"\u89e3\u6790\u6210XML"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_39","text":"\u5982\u679c\u540c\u6837\u7684\u4ee3\u7801\u5728\u4e0d\u540c\u73af\u5883\u4e0b\u7ed3\u679c\u4e0d\u540c,\u53ef\u80fd\u662f\u56e0\u4e3a\u4e24\u4e2a\u73af\u5883\u4e0b\u4f7f\u7528\u4e0d\u540c\u7684\u89e3\u6790\u5668\u9020\u6210\u7684.\u4f8b\u5982\u8fd9\u4e2a\u73af\u5883\u4e2d\u5b89\u88c5\u4e86lxml,\u800c\u53e6\u4e00\u4e2a\u73af\u5883\u4e2d\u53ea\u6709html5lib, \u89e3\u6790\u5668\u4e4b\u95f4\u7684\u533a\u522b \u4e2d\u8bf4\u660e\u4e86\u539f\u56e0.\u4fee\u590d\u65b9\u6cd5\u662f\u5728 BeautifulSoup \u7684\u6784\u9020\u65b9\u6cd5\u4e2d\u4e2d\u6307\u5b9a\u89e3\u6790\u5668 \u56e0\u4e3aHTML\u6807\u7b7e\u662f \u5927\u5c0f\u5199\u654f\u611f \u7684,\u6240\u4ee53\u79cd\u89e3\u6790\u5668\u518d\u51fa\u6765\u6587\u6863\u65f6\u90fd\u5c06tag\u548c\u5c5e\u6027\u8f6c\u6362\u6210\u5c0f\u5199.\u4f8b\u5982\u6587\u6863\u4e2d\u7684 \u4f1a\u88ab\u8f6c\u6362\u4e3a .\u5982\u679c\u60f3\u8981\u4fdd\u7559tag\u7684\u5927\u5199\u7684\u8bdd,\u90a3\u4e48\u5e94\u8be5\u5c06\u6587\u6863 \u89e3\u6790\u6210XML .","title":"\u89e3\u6790\u5668\u7684\u9519\u8bef"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_40","text":"UnicodeEncodeError: 'charmap' codec can't encode character u'\\xfoo' in position bar (\u6216\u5176\u5b83\u7c7b\u578b\u7684 UnicodeEncodeError )\u7684\u9519\u8bef,\u4e3b\u8981\u662f\u4e24\u65b9\u9762\u7684\u9519\u8bef(\u90fd\u4e0d\u662fBeautiful Soup\u7684\u539f\u56e0),\u7b2c\u4e00\u79cd\u662f\u6b63\u5728\u4f7f\u7528\u7684\u7ec8\u7aef(console)\u65e0\u6cd5\u663e\u793a\u90e8\u5206Unicode,\u53c2\u8003 Python wiki ,\u7b2c\u4e8c\u79cd\u662f\u5411\u6587\u4ef6\u5199\u5165\u65f6,\u88ab\u5199\u5165\u6587\u4ef6\u4e0d\u652f\u6301\u90e8\u5206Unicode,\u8fd9\u65f6\u53ea\u8981\u7528 u.encode(\"utf8\") \u65b9\u6cd5\u5c06\u7f16\u7801\u8f6c\u6362\u4e3aUTF-8. KeyError: [attr] \u56e0\u4e3a\u8c03\u7528 tag['attr'] \u65b9\u6cd5\u800c\u5f15\u8d77,\u56e0\u4e3a\u8fd9\u4e2atag\u6ca1\u6709\u5b9a\u4e49\u8be5\u5c5e\u6027.\u51fa\u9519\u6700\u591a\u7684\u662f KeyError: 'href' \u548c KeyError: 'class' .\u5982\u679c\u4e0d\u786e\u5b9a\u67d0\u4e2a\u5c5e\u6027\u662f\u5426\u5b58\u5728\u65f6,\u7528 tag.get('attr') \u65b9\u6cd5\u53bb\u83b7\u53d6\u5b83,\u8ddf\u83b7\u53d6Python\u5b57\u5178\u7684key\u4e00\u6837 AttributeError: 'ResultSet' object has no attribute 'foo' \u9519\u8bef\u901a\u5e38\u662f\u56e0\u4e3a\u628a find_all() \u7684\u8fd4\u56de\u7ed3\u679c\u5f53\u4f5c\u4e00\u4e2atag\u6216\u6587\u672c\u8282\u70b9\u4f7f\u7528,\u5b9e\u9645\u4e0a\u8fd4\u56de\u7ed3\u679c\u662f\u4e00\u4e2a\u5217\u8868\u6216 ResultSet \u5bf9\u8c61\u7684\u5b57\u7b26\u4e32,\u9700\u8981\u5bf9\u7ed3\u679c\u8fdb\u884c\u5faa\u73af\u624d\u80fd\u5f97\u5230\u6bcf\u4e2a\u8282\u70b9\u7684 .foo \u5c5e\u6027.\u6216\u8005\u4f7f\u7528 find() \u65b9\u6cd5\u4ec5\u83b7\u53d6\u5230\u4e00\u4e2a\u8282\u70b9 AttributeError: 'NoneType' object has no attribute 'foo' \u8fd9\u4e2a\u9519\u8bef\u901a\u5e38\u662f\u5728\u8c03\u7528\u4e86 find() \u65b9\u6cd5\u540e\u76f4\u8282\u70b9\u53d6\u67d0\u4e2a\u5c5e\u6027 .foo \u4f46\u662f find() \u65b9\u6cd5\u5e76\u6ca1\u6709\u627e\u5230\u4efb\u4f55\u7ed3\u679c,\u6240\u4ee5\u5b83\u7684\u8fd4\u56de\u503c\u662f None .\u9700\u8981\u627e\u51fa\u4e3a\u4ec0\u4e48 find() \u7684\u8fd4\u56de\u503c\u662f None .","title":"\u6742\u9879\u9519\u8bef"},{"location":"06-third-part-lib/001-Beautiful-Soup/#_41","text":"Beautiful Soup\u5bf9\u6587\u6863\u7684\u89e3\u6790\u901f\u5ea6\u4e0d\u4f1a\u6bd4\u5b83\u6240\u4f9d\u8d56\u7684\u89e3\u6790\u5668\u66f4\u5feb,\u5982\u679c\u5bf9\u8ba1\u7b97\u65f6\u95f4\u8981\u6c42\u5f88\u9ad8\u6216\u8005\u8ba1\u7b97\u673a\u7684\u65f6\u95f4\u6bd4\u7a0b\u5e8f\u5458\u7684\u65f6\u95f4\u66f4\u503c\u94b1,\u90a3\u4e48\u5c31\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528 lxml . \u6362\u53e5\u8bdd\u8bf4,\u8fd8\u6709\u63d0\u9ad8Beautiful Soup\u6548\u7387\u7684\u529e\u6cd5,\u4f7f\u7528lxml\u4f5c\u4e3a\u89e3\u6790\u5668.Beautiful Soup\u7528lxml\u505a\u89e3\u6790\u5668\u6bd4\u7528html5lib\u6216Python\u5185\u7f6e\u89e3\u6790\u5668\u901f\u5ea6\u5feb\u5f88\u591a. \u5b89\u88c5 cchardet \u540e\u6587\u6863\u7684\u89e3\u7801\u7684\u7f16\u7801\u68c0\u6d4b\u4f1a\u901f\u5ea6\u66f4\u5feb \u89e3\u6790\u90e8\u5206\u6587\u6863 \u4e0d\u4f1a\u8282\u7701\u591a\u5c11\u89e3\u6790\u65f6\u95f4,\u4f46\u662f\u4f1a\u8282\u7701\u5f88\u591a\u5185\u5b58,\u5e76\u4e14\u641c\u7d22\u65f6\u4e5f\u4f1a\u53d8\u5f97\u66f4\u5feb.","title":"\u5982\u4f55\u63d0\u9ad8\u6548\u7387"},{"location":"06-third-part-lib/002-Requests/","text":"Requests \u5b98\u65b9\u6587\u6863 \u00b6 \u4f5c\u7528\uff1a\u6a21\u62df\u7f51\u7edc\u8bf7\u6c42\uff0c\u7c7b\u4f3c urllib2 \u529f\u80fd\uff0c\u66f4\u597d\u7528 Requests \u552f\u4e00\u7684\u4e00\u4e2a\u7684 Python HTTP \u5e93\uff0c\u4eba\u7c7b\u53ef\u4ee5\u5b89\u5168\u4eab\u7528\u3002 >>> r = requests.get ( 'https://api.github.com/user' , auth =( 'user' , 'pass' )) >>> r.status_code 200 >>> r.headers [ 'content-type' ] 'application/json; charset=utf8' >>> r.encoding 'utf-8' >>> r.text u '{\"type\":\"User\"...' >>> r.json () { u 'private_gists' : 419 , u 'total_private_repos' : 77 , ... } \u53c2\u89c1 \u672a\u4f7f\u7528 Requests \u7684\u76f8\u4f3c\u4ee3\u7801 . Requests \u5141\u8bb8\u4f60\u53d1\u9001**\u7eaf\u5929\u7136\uff0c\u690d\u7269\u9972\u517b**\u7684 HTTP/1.1 \u8bf7\u6c42\uff0c\u65e0\u9700\u624b\u5de5\u52b3\u52a8\u3002\u4f60\u4e0d\u9700\u8981\u624b\u52a8\u4e3a URL \u6dfb\u52a0\u67e5\u8be2\u5b57\u4e32\uff0c\u4e5f\u4e0d\u9700\u8981\u5bf9 POST \u6570\u636e\u8fdb\u884c\u8868\u5355\u7f16\u7801\u3002Keep-alive \u548c HTTP \u8fde\u63a5\u6c60\u7684\u529f\u80fd\u662f 100% \u81ea\u52a8\u5316\u7684\uff0c\u4e00\u5207\u52a8\u529b\u90fd\u6765\u81ea\u4e8e\u6839\u690d\u5728 Requests \u5185\u90e8\u7684 urllib3 \u3002 \u529f\u80fd\u7279\u6027 \u00b6 Requests \u5b8c\u5168\u6ee1\u8db3\u4eca\u65e5 web \u7684\u9700\u6c42\u3002 Keep-Alive & \u8fde\u63a5\u6c60 \u56fd\u9645\u5316\u57df\u540d\u548c URL \u5e26\u6301\u4e45 Cookie \u7684\u4f1a\u8bdd \u6d4f\u89c8\u5668\u5f0f\u7684 SSL \u8ba4\u8bc1 \u81ea\u52a8\u5185\u5bb9\u89e3\u7801 \u57fa\u672c/\u6458\u8981\u5f0f\u7684\u8eab\u4efd\u8ba4\u8bc1 \u4f18\u96c5\u7684 key/value Cookie \u81ea\u52a8\u89e3\u538b Unicode \u54cd\u5e94\u4f53 HTTP(S) \u4ee3\u7406\u652f\u6301 \u6587\u4ef6\u5206\u5757\u4e0a\u4f20 \u6d41\u4e0b\u8f7d \u8fde\u63a5\u8d85\u65f6 \u5206\u5757\u8bf7\u6c42 \u652f\u6301 .netrc Requests \u652f\u6301 Python 2.6\u20142.7\u4ee5\u53ca3.3\u20143.7\uff0c\u800c\u4e14\u80fd\u5728 PyPy \u4e0b\u5b8c\u7f8e\u8fd0\u884c\u3002 \u7528\u6237\u6307\u5357 \u00b6 \u8fd9\u90e8\u5206\u6587\u6863\u662f\u4ee5\u6587\u5b57\u4e3a\u4e3b\uff0c\u4ece Requests \u7684\u80cc\u666f\u8bb2\u8d77\uff0c\u7136\u540e\u5bf9 Requests \u7684\u91cd\u70b9\u529f\u80fd\u505a\u4e86\u9010\u4e00\u7684\u4ecb\u7ecd\u3002 \u7b80\u4ecb \u5f00\u53d1\u54f2\u5b66 Apache2 \u534f\u8bae Requests \u534f\u8bae \u5b89\u88c5 Requests pip install requests \u83b7\u5f97\u6e90\u7801 \u5feb\u901f\u4e0a\u624b \u53d1\u9001\u8bf7\u6c42 \u4f20\u9012 URL \u53c2\u6570 \u54cd\u5e94\u5185\u5bb9 \u4e8c\u8fdb\u5236\u54cd\u5e94\u5185\u5bb9 JSON \u54cd\u5e94\u5185\u5bb9 \u539f\u59cb\u54cd\u5e94\u5185\u5bb9 \u5b9a\u5236\u8bf7\u6c42\u5934 \u66f4\u52a0\u590d\u6742\u7684 POST \u8bf7\u6c42 POST\u4e00\u4e2a\u591a\u90e8\u5206\u7f16\u7801(Multipart-Encoded)\u7684\u6587\u4ef6 \u54cd\u5e94\u72b6\u6001\u7801 \u54cd\u5e94\u5934 Cookie \u91cd\u5b9a\u5411\u4e0e\u8bf7\u6c42\u5386\u53f2 \u8d85\u65f6 \u9519\u8bef\u4e0e\u5f02\u5e38 \u9ad8\u7ea7\u7528\u6cd5 \u4f1a\u8bdd\u5bf9\u8c61 \u8bf7\u6c42\u4e0e\u54cd\u5e94\u5bf9\u8c61 \u51c6\u5907\u7684\u8bf7\u6c42 \uff08Prepared Request\uff09 SSL \u8bc1\u4e66\u9a8c\u8bc1 \u5ba2\u6237\u7aef\u8bc1\u4e66 CA \u8bc1\u4e66 \u54cd\u5e94\u4f53\u5185\u5bb9\u5de5\u4f5c\u6d41 \u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\uff08\u6301\u4e45\u8fde\u63a5\uff09 \u6d41\u5f0f\u4e0a\u4f20 \u5757\u7f16\u7801\u8bf7\u6c42 POST \u591a\u4e2a\u5206\u5757\u7f16\u7801\u7684\u6587\u4ef6 \u4e8b\u4ef6\u6302\u94a9 \u81ea\u5b9a\u4e49\u8eab\u4efd\u9a8c\u8bc1 \u6d41\u5f0f\u8bf7\u6c42 \u4ee3\u7406 \u5408\u89c4\u6027 HTTP\u52a8\u8bcd \u5b9a\u5236\u52a8\u8bcd \u54cd\u5e94\u5934\u94fe\u63a5\u5b57\u6bb5 \u4f20\u8f93\u9002\u914d\u5668 \u963b\u585e\u548c\u975e\u963b\u585e Header \u6392\u5e8f \u8d85\u65f6\uff08timeout\uff09 \u8eab\u4efd\u8ba4\u8bc1 \u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1 \u6458\u8981\u5f0f\u8eab\u4efd\u8ba4\u8bc1 OAuth 1 \u8ba4\u8bc1 OAuth 2 \u4e0e OpenID \u8fde\u63a5\u8ba4\u8bc1 \u5176\u4ed6\u8eab\u4efd\u8ba4\u8bc1\u5f62\u5f0f \u65b0\u7684\u8eab\u4efd\u8ba4\u8bc1\u5f62\u5f0f \u793e\u533a\u6307\u5357 \u00b6 \u8fd9\u90e8\u5206\u6587\u6863\u4e5f\u662f\u6587\u5b57\u4e3a\u4e3b\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u4e86 Requests \u7684\u751f\u6001\u548c\u793e\u533a\u3002 \u5e38\u89c1\u95ee\u9898 \u63a8\u8350\u7684\u5e93\u548c\u6269\u5c55 Integrations Articles & Talks \u652f\u6301 Vulnerability Disclosure \u66f4\u65b0 \u7248\u672c\u5386\u53f2 Release Process and Rules API \u6587\u6863/\u6307\u5357 \u00b6 \u5982\u679c\u4f60\u8981\u4e86\u89e3\u5177\u4f53\u7684\u51fd\u6570\u3001\u7c7b\u3001\u65b9\u6cd5\uff0c\u8fd9\u90e8\u5206\u6587\u6863\u5c31\u662f\u4e3a\u4f60\u51c6\u5907\u7684\u3002 \u5f00\u53d1\u63a5\u53e3 \u4e3b\u8981\u63a5\u53e3 \u5f02\u5e38 \u8bf7\u6c42\u4f1a\u8bdd \u4f4e\u7ea7\u7c7b \u66f4\u4f4e\u7ea7\u7684\u7c7b \u8eab\u4efd\u9a8c\u8bc1 \u7f16\u7801 Cookie \u72b6\u6001\u7801\u67e5\u8be2 \u8fc1\u79fb\u5230 1.x \u8fc1\u79fb\u5230 2.x requests\u5e93\u7684\u7528\u6cd5 \u00b6 \u7528\u9014\uff1apython \u6a21\u62df\u8bf7\u6c42\u722c\u53d6\u7f51\u9875 \u5b98\u65b9\u94fe\u63a5\uff1a https://requests.readthedocs.io/en/latest/ \u5176\u4ed6\u94fe\u63a5\uff1a https://blog.csdn.net/qq_37616069/article/details/80376776 requests\u662fpython\u5b9e\u73b0\u7684\u7b80\u5355\u6613\u7528\u7684HTTP\u5e93\uff0c\u4f7f\u7528\u8d77\u6765\u6bd4urllib\u7b80\u6d01\u5f88\u591a \u56e0\u4e3a\u662f\u7b2c\u4e09\u65b9\u5e93\uff0c\u6240\u4ee5\u4f7f\u7528\u524d\u9700\u8981cmd\u5b89\u88c5 pip install requests \u5b89\u88c5\u5b8c\u6210\u540eimport\u4e00\u4e0b\uff0c\u6b63\u5e38\u5219\u8bf4\u660e\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e86\u3002 \u57fa\u672c\u7528\u6cd5\uff1a requests.get()\u7528\u4e8e\u8bf7\u6c42\u76ee\u6807\u7f51\u7ad9\uff0c\u7c7b\u578b\u662f\u4e00\u4e2aHTTPresponse\u7c7b\u578b import requests response = requests . get ( 'http://www.baidu.com' ) print ( response . status_code ) # \u6253\u5370\u72b6\u6001\u7801 print ( response . url ) # \u6253\u5370\u8bf7\u6c42url print ( response . headers ) # \u6253\u5370\u5934\u4fe1\u606f print ( response . cookies ) # \u6253\u5370cookie\u4fe1\u606f print ( response . text ) #\u4ee5\u6587\u672c\u5f62\u5f0f\u6253\u5370\u7f51\u9875\u6e90\u7801 print ( response . content ) #\u4ee5\u5b57\u8282\u6d41\u5f62\u5f0f\u6253\u5370 \u8fd0\u884c\u7ed3\u679c\uff1a \u72b6\u6001\u7801\uff1a200 url\uff1a www.baidu.com headers\u4fe1\u606f \u5404\u79cd\u8bf7\u6c42\u65b9\u5f0f\uff1a import requests requests . get ( 'http://httpbin.org/get' ) requests . post ( 'http://httpbin.org/post' ) requests . put ( 'http://httpbin.org/put' ) requests . delete ( 'http://httpbin.org/delete' ) requests . head ( 'http://httpbin.org/get' ) requests . options ( 'http://httpbin.org/get' ) \u57fa\u672c\u7684get\u8bf7\u6c42 import requests response = requests . get ( 'http://httpbin.org/get' ) print ( response . text ) \u7ed3\u679c \u5e26\u53c2\u6570\u7684GET\u8bf7\u6c42\uff1a \u7b2c\u4e00\u79cd\u76f4\u63a5\u5c06\u53c2\u6570\u653e\u5728url\u5185 import requests response = requests . get ( http : // httpbin . org / get ? name = gemey & age = 22 ) print ( response . text ) \u7ed3\u679c \u53e6\u4e00\u79cd\u5148\u5c06\u53c2\u6570\u586b\u5199\u5728dict\u4e2d\uff0c\u53d1\u8d77\u8bf7\u6c42\u65f6params\u53c2\u6570\u6307\u5b9a\u4e3adict import requests data = { 'name' : 'tom' , 'age' : 20 } response = requests . get ( 'http://httpbin.org/get' , params = data ) print ( response . text ) \u7ed3\u679c\u540c\u4e0a \u89e3\u6790json import requests response = requests . get ( 'http://httpbin.org/get' ) print ( response . text ) print ( response . json ()) #response.json()\u65b9\u6cd5\u540cjson.loads(response.text) print ( type ( response . json ())) \u7ed3\u679c \u7b80\u5355\u4fdd\u5b58\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6 \u4e8c\u8fdb\u5236\u5185\u5bb9\u4e3aresponse.content import requests response = requests . get ( 'http://img.ivsky.com/img/tupian/pre/201708/30/kekeersitao-002.jpg' ) b = response . content with open ( 'F://fengjing.jpg' , 'wb' ) as f : f . write ( b ) \u4e3a\u4f60\u7684\u8bf7\u6c42\u6dfb\u52a0\u5934\u4fe1\u606f import requests heads = {} heads [ 'User-Agent' ] = 'Mozilla/5.0 ' \\ '(Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 ' \\ '(KHTML, like Gecko) Version/5.1 Safari/534.50' response = requests . get ( 'http://www.baidu.com' , headers = headers ) \u4f7f\u7528\u4ee3\u7406 \u540c\u6dfb\u52a0headers\u65b9\u6cd5\uff0c\u4ee3\u7406\u53c2\u6570\u4e5f\u8981\u662f\u4e00\u4e2adict \u8fd9\u91cc\u4f7f\u7528requests\u5e93\u722c\u53d6\u4e86IP\u4ee3\u7406\u7f51\u7ad9\u7684IP\u4e0e\u7aef\u53e3\u548c\u7c7b\u578b \u56e0\u4e3a\u662f\u514d\u8d39\u7684\uff0c\u4f7f\u7528\u7684\u4ee3\u7406\u5730\u5740\u5f88\u5feb\u5c31\u5931\u6548\u4e86\u3002 import requests import re def get_html ( url ): proxy = { 'http' : '120.25.253.234:812' , 'https' '163.125.222.244:8123' } heads = {} heads [ 'User-Agent' ] = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.221 Safari/537.36 SE 2.X MetaSr 1.0' req = requests . get ( url , headers = heads , proxies = proxy ) html = req . text return html def get_ipport ( html ): regex = r '<td data-title=\"IP\">(.+)</td>' iplist = re . findall ( regex , html ) regex2 = '<td data-title=\"PORT\">(.+)</td>' portlist = re . findall ( regex2 , html ) regex3 = r '<td data-title=\"\u7c7b\u578b\">(.+)</td>' typelist = re . findall ( regex3 , html ) sumray = [] for i in iplist : for p in portlist : for t in typelist : pass pass a = t + ',' + i + ':' + p sumray . append ( a ) print ( '\u9ad8\u533f\u4ee3\u7406' ) print ( sumray ) if __name__ == '__main__' : url = 'http://www.kuaidaili.com/free/' get_ipport ( get_html ( url )) \u7ed3\u679c\uff1a \u57fa\u672cPOST\u8bf7\u6c42\uff1a import requests data = { 'name' : 'tom' , 'age' : '22' } response = requests . post ( 'http://httpbin.org/post' , data = data ) \u83b7\u53d6cookie # \u83b7\u53d6cookie import requests response = requests . get ( 'http://www.baidu.com' ) print ( response . cookies ) print ( type ( response . cookies )) for k , v in response . cookies . items (): print ( k + ':' + v ) \u7ed3\u679c\uff1a \u4f1a\u8bdd\u7ef4\u6301 import requests session = requests . Session () session . get ( 'http://httpbin.org/cookies/set/number/12345' ) response = session . get ( 'http://httpbin.org/cookies' ) print ( response . text ) \u7ed3\u679c\uff1a \u8bc1\u4e66\u9a8c\u8bc1\u8bbe\u7f6e import requests from requests.packages import urllib3 urllib3 . disable_warnings () #\u4eceurllib3\u4e2d\u6d88\u9664\u8b66\u544a response = requests . get ( 'https://www.12306.cn' , verify = False ) #\u8bc1\u4e66\u9a8c\u8bc1\u8bbe\u4e3aFALSE print ( response . status_code ) \u6253\u5370\u7ed3\u679c \uff1a 200 \u8d85\u65f6\u5f02\u5e38\u6355\u83b7 import requests from requests.exceptions import ReadTimeout try : res = requests . get ( 'http://httpbin.org' , timeout = 0.1 ) print ( res . status_code ) except ReadTimeout : print ( timeout ) \u5f02\u5e38\u5904\u7406 \u5728\u4f60\u4e0d\u786e\u5b9a\u4f1a\u53d1\u751f\u4ec0\u4e48\u9519\u8bef\u65f6\uff0c\u5c3d\u91cf\u4f7f\u7528try...except\u6765\u6355\u83b7\u5f02\u5e38 \u6240\u6709\u7684requests exception\uff1a Exceptions \u00b6 import requests from requests.exceptions import ReadTimeout , HTTPError , RequestException try : response = requests . get ( 'http://www.baidu.com' , timeout = 0.5 ) print ( response . status_code ) except ReadTimeout : print ( 'timeout' ) except HTTPError : print ( 'httperror' ) except RequestException : print ( 'reqerror' )","title":"002-Requests"},{"location":"06-third-part-lib/002-Requests/#requests","text":"\u4f5c\u7528\uff1a\u6a21\u62df\u7f51\u7edc\u8bf7\u6c42\uff0c\u7c7b\u4f3c urllib2 \u529f\u80fd\uff0c\u66f4\u597d\u7528 Requests \u552f\u4e00\u7684\u4e00\u4e2a\u7684 Python HTTP \u5e93\uff0c\u4eba\u7c7b\u53ef\u4ee5\u5b89\u5168\u4eab\u7528\u3002 >>> r = requests.get ( 'https://api.github.com/user' , auth =( 'user' , 'pass' )) >>> r.status_code 200 >>> r.headers [ 'content-type' ] 'application/json; charset=utf8' >>> r.encoding 'utf-8' >>> r.text u '{\"type\":\"User\"...' >>> r.json () { u 'private_gists' : 419 , u 'total_private_repos' : 77 , ... } \u53c2\u89c1 \u672a\u4f7f\u7528 Requests \u7684\u76f8\u4f3c\u4ee3\u7801 . Requests \u5141\u8bb8\u4f60\u53d1\u9001**\u7eaf\u5929\u7136\uff0c\u690d\u7269\u9972\u517b**\u7684 HTTP/1.1 \u8bf7\u6c42\uff0c\u65e0\u9700\u624b\u5de5\u52b3\u52a8\u3002\u4f60\u4e0d\u9700\u8981\u624b\u52a8\u4e3a URL \u6dfb\u52a0\u67e5\u8be2\u5b57\u4e32\uff0c\u4e5f\u4e0d\u9700\u8981\u5bf9 POST \u6570\u636e\u8fdb\u884c\u8868\u5355\u7f16\u7801\u3002Keep-alive \u548c HTTP \u8fde\u63a5\u6c60\u7684\u529f\u80fd\u662f 100% \u81ea\u52a8\u5316\u7684\uff0c\u4e00\u5207\u52a8\u529b\u90fd\u6765\u81ea\u4e8e\u6839\u690d\u5728 Requests \u5185\u90e8\u7684 urllib3 \u3002","title":"Requests \u5b98\u65b9\u6587\u6863"},{"location":"06-third-part-lib/002-Requests/#_1","text":"Requests \u5b8c\u5168\u6ee1\u8db3\u4eca\u65e5 web \u7684\u9700\u6c42\u3002 Keep-Alive & \u8fde\u63a5\u6c60 \u56fd\u9645\u5316\u57df\u540d\u548c URL \u5e26\u6301\u4e45 Cookie \u7684\u4f1a\u8bdd \u6d4f\u89c8\u5668\u5f0f\u7684 SSL \u8ba4\u8bc1 \u81ea\u52a8\u5185\u5bb9\u89e3\u7801 \u57fa\u672c/\u6458\u8981\u5f0f\u7684\u8eab\u4efd\u8ba4\u8bc1 \u4f18\u96c5\u7684 key/value Cookie \u81ea\u52a8\u89e3\u538b Unicode \u54cd\u5e94\u4f53 HTTP(S) \u4ee3\u7406\u652f\u6301 \u6587\u4ef6\u5206\u5757\u4e0a\u4f20 \u6d41\u4e0b\u8f7d \u8fde\u63a5\u8d85\u65f6 \u5206\u5757\u8bf7\u6c42 \u652f\u6301 .netrc Requests \u652f\u6301 Python 2.6\u20142.7\u4ee5\u53ca3.3\u20143.7\uff0c\u800c\u4e14\u80fd\u5728 PyPy \u4e0b\u5b8c\u7f8e\u8fd0\u884c\u3002","title":"\u529f\u80fd\u7279\u6027"},{"location":"06-third-part-lib/002-Requests/#_2","text":"\u8fd9\u90e8\u5206\u6587\u6863\u662f\u4ee5\u6587\u5b57\u4e3a\u4e3b\uff0c\u4ece Requests \u7684\u80cc\u666f\u8bb2\u8d77\uff0c\u7136\u540e\u5bf9 Requests \u7684\u91cd\u70b9\u529f\u80fd\u505a\u4e86\u9010\u4e00\u7684\u4ecb\u7ecd\u3002 \u7b80\u4ecb \u5f00\u53d1\u54f2\u5b66 Apache2 \u534f\u8bae Requests \u534f\u8bae \u5b89\u88c5 Requests pip install requests \u83b7\u5f97\u6e90\u7801 \u5feb\u901f\u4e0a\u624b \u53d1\u9001\u8bf7\u6c42 \u4f20\u9012 URL \u53c2\u6570 \u54cd\u5e94\u5185\u5bb9 \u4e8c\u8fdb\u5236\u54cd\u5e94\u5185\u5bb9 JSON \u54cd\u5e94\u5185\u5bb9 \u539f\u59cb\u54cd\u5e94\u5185\u5bb9 \u5b9a\u5236\u8bf7\u6c42\u5934 \u66f4\u52a0\u590d\u6742\u7684 POST \u8bf7\u6c42 POST\u4e00\u4e2a\u591a\u90e8\u5206\u7f16\u7801(Multipart-Encoded)\u7684\u6587\u4ef6 \u54cd\u5e94\u72b6\u6001\u7801 \u54cd\u5e94\u5934 Cookie \u91cd\u5b9a\u5411\u4e0e\u8bf7\u6c42\u5386\u53f2 \u8d85\u65f6 \u9519\u8bef\u4e0e\u5f02\u5e38 \u9ad8\u7ea7\u7528\u6cd5 \u4f1a\u8bdd\u5bf9\u8c61 \u8bf7\u6c42\u4e0e\u54cd\u5e94\u5bf9\u8c61 \u51c6\u5907\u7684\u8bf7\u6c42 \uff08Prepared Request\uff09 SSL \u8bc1\u4e66\u9a8c\u8bc1 \u5ba2\u6237\u7aef\u8bc1\u4e66 CA \u8bc1\u4e66 \u54cd\u5e94\u4f53\u5185\u5bb9\u5de5\u4f5c\u6d41 \u4fdd\u6301\u6d3b\u52a8\u72b6\u6001\uff08\u6301\u4e45\u8fde\u63a5\uff09 \u6d41\u5f0f\u4e0a\u4f20 \u5757\u7f16\u7801\u8bf7\u6c42 POST \u591a\u4e2a\u5206\u5757\u7f16\u7801\u7684\u6587\u4ef6 \u4e8b\u4ef6\u6302\u94a9 \u81ea\u5b9a\u4e49\u8eab\u4efd\u9a8c\u8bc1 \u6d41\u5f0f\u8bf7\u6c42 \u4ee3\u7406 \u5408\u89c4\u6027 HTTP\u52a8\u8bcd \u5b9a\u5236\u52a8\u8bcd \u54cd\u5e94\u5934\u94fe\u63a5\u5b57\u6bb5 \u4f20\u8f93\u9002\u914d\u5668 \u963b\u585e\u548c\u975e\u963b\u585e Header \u6392\u5e8f \u8d85\u65f6\uff08timeout\uff09 \u8eab\u4efd\u8ba4\u8bc1 \u57fa\u672c\u8eab\u4efd\u8ba4\u8bc1 \u6458\u8981\u5f0f\u8eab\u4efd\u8ba4\u8bc1 OAuth 1 \u8ba4\u8bc1 OAuth 2 \u4e0e OpenID \u8fde\u63a5\u8ba4\u8bc1 \u5176\u4ed6\u8eab\u4efd\u8ba4\u8bc1\u5f62\u5f0f \u65b0\u7684\u8eab\u4efd\u8ba4\u8bc1\u5f62\u5f0f","title":"\u7528\u6237\u6307\u5357"},{"location":"06-third-part-lib/002-Requests/#_3","text":"\u8fd9\u90e8\u5206\u6587\u6863\u4e5f\u662f\u6587\u5b57\u4e3a\u4e3b\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u4e86 Requests \u7684\u751f\u6001\u548c\u793e\u533a\u3002 \u5e38\u89c1\u95ee\u9898 \u63a8\u8350\u7684\u5e93\u548c\u6269\u5c55 Integrations Articles & Talks \u652f\u6301 Vulnerability Disclosure \u66f4\u65b0 \u7248\u672c\u5386\u53f2 Release Process and Rules","title":"\u793e\u533a\u6307\u5357"},{"location":"06-third-part-lib/002-Requests/#api","text":"\u5982\u679c\u4f60\u8981\u4e86\u89e3\u5177\u4f53\u7684\u51fd\u6570\u3001\u7c7b\u3001\u65b9\u6cd5\uff0c\u8fd9\u90e8\u5206\u6587\u6863\u5c31\u662f\u4e3a\u4f60\u51c6\u5907\u7684\u3002 \u5f00\u53d1\u63a5\u53e3 \u4e3b\u8981\u63a5\u53e3 \u5f02\u5e38 \u8bf7\u6c42\u4f1a\u8bdd \u4f4e\u7ea7\u7c7b \u66f4\u4f4e\u7ea7\u7684\u7c7b \u8eab\u4efd\u9a8c\u8bc1 \u7f16\u7801 Cookie \u72b6\u6001\u7801\u67e5\u8be2 \u8fc1\u79fb\u5230 1.x \u8fc1\u79fb\u5230 2.x","title":"API \u6587\u6863/\u6307\u5357"},{"location":"06-third-part-lib/002-Requests/#requests_1","text":"\u7528\u9014\uff1apython \u6a21\u62df\u8bf7\u6c42\u722c\u53d6\u7f51\u9875 \u5b98\u65b9\u94fe\u63a5\uff1a https://requests.readthedocs.io/en/latest/ \u5176\u4ed6\u94fe\u63a5\uff1a https://blog.csdn.net/qq_37616069/article/details/80376776 requests\u662fpython\u5b9e\u73b0\u7684\u7b80\u5355\u6613\u7528\u7684HTTP\u5e93\uff0c\u4f7f\u7528\u8d77\u6765\u6bd4urllib\u7b80\u6d01\u5f88\u591a \u56e0\u4e3a\u662f\u7b2c\u4e09\u65b9\u5e93\uff0c\u6240\u4ee5\u4f7f\u7528\u524d\u9700\u8981cmd\u5b89\u88c5 pip install requests \u5b89\u88c5\u5b8c\u6210\u540eimport\u4e00\u4e0b\uff0c\u6b63\u5e38\u5219\u8bf4\u660e\u53ef\u4ee5\u5f00\u59cb\u4f7f\u7528\u4e86\u3002 \u57fa\u672c\u7528\u6cd5\uff1a requests.get()\u7528\u4e8e\u8bf7\u6c42\u76ee\u6807\u7f51\u7ad9\uff0c\u7c7b\u578b\u662f\u4e00\u4e2aHTTPresponse\u7c7b\u578b import requests response = requests . get ( 'http://www.baidu.com' ) print ( response . status_code ) # \u6253\u5370\u72b6\u6001\u7801 print ( response . url ) # \u6253\u5370\u8bf7\u6c42url print ( response . headers ) # \u6253\u5370\u5934\u4fe1\u606f print ( response . cookies ) # \u6253\u5370cookie\u4fe1\u606f print ( response . text ) #\u4ee5\u6587\u672c\u5f62\u5f0f\u6253\u5370\u7f51\u9875\u6e90\u7801 print ( response . content ) #\u4ee5\u5b57\u8282\u6d41\u5f62\u5f0f\u6253\u5370 \u8fd0\u884c\u7ed3\u679c\uff1a \u72b6\u6001\u7801\uff1a200 url\uff1a www.baidu.com headers\u4fe1\u606f \u5404\u79cd\u8bf7\u6c42\u65b9\u5f0f\uff1a import requests requests . get ( 'http://httpbin.org/get' ) requests . post ( 'http://httpbin.org/post' ) requests . put ( 'http://httpbin.org/put' ) requests . delete ( 'http://httpbin.org/delete' ) requests . head ( 'http://httpbin.org/get' ) requests . options ( 'http://httpbin.org/get' ) \u57fa\u672c\u7684get\u8bf7\u6c42 import requests response = requests . get ( 'http://httpbin.org/get' ) print ( response . text ) \u7ed3\u679c \u5e26\u53c2\u6570\u7684GET\u8bf7\u6c42\uff1a \u7b2c\u4e00\u79cd\u76f4\u63a5\u5c06\u53c2\u6570\u653e\u5728url\u5185 import requests response = requests . get ( http : // httpbin . org / get ? name = gemey & age = 22 ) print ( response . text ) \u7ed3\u679c \u53e6\u4e00\u79cd\u5148\u5c06\u53c2\u6570\u586b\u5199\u5728dict\u4e2d\uff0c\u53d1\u8d77\u8bf7\u6c42\u65f6params\u53c2\u6570\u6307\u5b9a\u4e3adict import requests data = { 'name' : 'tom' , 'age' : 20 } response = requests . get ( 'http://httpbin.org/get' , params = data ) print ( response . text ) \u7ed3\u679c\u540c\u4e0a \u89e3\u6790json import requests response = requests . get ( 'http://httpbin.org/get' ) print ( response . text ) print ( response . json ()) #response.json()\u65b9\u6cd5\u540cjson.loads(response.text) print ( type ( response . json ())) \u7ed3\u679c \u7b80\u5355\u4fdd\u5b58\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6 \u4e8c\u8fdb\u5236\u5185\u5bb9\u4e3aresponse.content import requests response = requests . get ( 'http://img.ivsky.com/img/tupian/pre/201708/30/kekeersitao-002.jpg' ) b = response . content with open ( 'F://fengjing.jpg' , 'wb' ) as f : f . write ( b ) \u4e3a\u4f60\u7684\u8bf7\u6c42\u6dfb\u52a0\u5934\u4fe1\u606f import requests heads = {} heads [ 'User-Agent' ] = 'Mozilla/5.0 ' \\ '(Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 ' \\ '(KHTML, like Gecko) Version/5.1 Safari/534.50' response = requests . get ( 'http://www.baidu.com' , headers = headers ) \u4f7f\u7528\u4ee3\u7406 \u540c\u6dfb\u52a0headers\u65b9\u6cd5\uff0c\u4ee3\u7406\u53c2\u6570\u4e5f\u8981\u662f\u4e00\u4e2adict \u8fd9\u91cc\u4f7f\u7528requests\u5e93\u722c\u53d6\u4e86IP\u4ee3\u7406\u7f51\u7ad9\u7684IP\u4e0e\u7aef\u53e3\u548c\u7c7b\u578b \u56e0\u4e3a\u662f\u514d\u8d39\u7684\uff0c\u4f7f\u7528\u7684\u4ee3\u7406\u5730\u5740\u5f88\u5feb\u5c31\u5931\u6548\u4e86\u3002 import requests import re def get_html ( url ): proxy = { 'http' : '120.25.253.234:812' , 'https' '163.125.222.244:8123' } heads = {} heads [ 'User-Agent' ] = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.221 Safari/537.36 SE 2.X MetaSr 1.0' req = requests . get ( url , headers = heads , proxies = proxy ) html = req . text return html def get_ipport ( html ): regex = r '<td data-title=\"IP\">(.+)</td>' iplist = re . findall ( regex , html ) regex2 = '<td data-title=\"PORT\">(.+)</td>' portlist = re . findall ( regex2 , html ) regex3 = r '<td data-title=\"\u7c7b\u578b\">(.+)</td>' typelist = re . findall ( regex3 , html ) sumray = [] for i in iplist : for p in portlist : for t in typelist : pass pass a = t + ',' + i + ':' + p sumray . append ( a ) print ( '\u9ad8\u533f\u4ee3\u7406' ) print ( sumray ) if __name__ == '__main__' : url = 'http://www.kuaidaili.com/free/' get_ipport ( get_html ( url )) \u7ed3\u679c\uff1a \u57fa\u672cPOST\u8bf7\u6c42\uff1a import requests data = { 'name' : 'tom' , 'age' : '22' } response = requests . post ( 'http://httpbin.org/post' , data = data ) \u83b7\u53d6cookie # \u83b7\u53d6cookie import requests response = requests . get ( 'http://www.baidu.com' ) print ( response . cookies ) print ( type ( response . cookies )) for k , v in response . cookies . items (): print ( k + ':' + v ) \u7ed3\u679c\uff1a \u4f1a\u8bdd\u7ef4\u6301 import requests session = requests . Session () session . get ( 'http://httpbin.org/cookies/set/number/12345' ) response = session . get ( 'http://httpbin.org/cookies' ) print ( response . text ) \u7ed3\u679c\uff1a \u8bc1\u4e66\u9a8c\u8bc1\u8bbe\u7f6e import requests from requests.packages import urllib3 urllib3 . disable_warnings () #\u4eceurllib3\u4e2d\u6d88\u9664\u8b66\u544a response = requests . get ( 'https://www.12306.cn' , verify = False ) #\u8bc1\u4e66\u9a8c\u8bc1\u8bbe\u4e3aFALSE print ( response . status_code ) \u6253\u5370\u7ed3\u679c \uff1a 200 \u8d85\u65f6\u5f02\u5e38\u6355\u83b7 import requests from requests.exceptions import ReadTimeout try : res = requests . get ( 'http://httpbin.org' , timeout = 0.1 ) print ( res . status_code ) except ReadTimeout : print ( timeout ) \u5f02\u5e38\u5904\u7406 \u5728\u4f60\u4e0d\u786e\u5b9a\u4f1a\u53d1\u751f\u4ec0\u4e48\u9519\u8bef\u65f6\uff0c\u5c3d\u91cf\u4f7f\u7528try...except\u6765\u6355\u83b7\u5f02\u5e38 \u6240\u6709\u7684requests exception\uff1a","title":"requests\u5e93\u7684\u7528\u6cd5"},{"location":"06-third-part-lib/002-Requests/#exceptions","text":"import requests from requests.exceptions import ReadTimeout , HTTPError , RequestException try : response = requests . get ( 'http://www.baidu.com' , timeout = 0.5 ) print ( response . status_code ) except ReadTimeout : print ( 'timeout' ) except HTTPError : print ( 'httperror' ) except RequestException : print ( 'reqerror' )","title":"Exceptions"},{"location":"06-third-part-lib/003-pandas/","text":"pandas \u00b6 2021-08-30 Python \u7edf\u8ba1\u5e93\uff0cpandas \u662f\u4e00\u4e2a\u5feb\u901f\u3001\u5f3a\u5927\u3001\u7075\u6d3b\u4e14\u6613\u4e8e\u4f7f\u7528\u7684\u5f00\u6e90\u6570\u636e\u5206\u6790\u548c\u64cd\u4f5c\u5de5\u5177\u3002 https://pandas.pydata.org/getting_started.html \u95ee\u9898 1\uff1a\u5b89\u88c5 pandas \u65f6\u51fa\u73b0\u73af\u5883\u9519\u8bef \u00b6 \u5728\u5b89\u88c5 pandas \u65f6\u51fa\u73b0 Could not install packages due to an EnvironmentError Consider using the ` --user ` option or check the permissions \u6b64\u65f6\u5728 install \u540e\u9762\u52a0--user \u5373\u53ef pip install --user pandas \u53c2\u8003\u94fe\u63a5\uff1a https://www.cnblogs.com/ConnorShip/category/1347491.html \u95ee\u9898 2\uff1aValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements \u00b6 \u9519\u8bef\u5982\u4e0b\uff1a ValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements \u4ee3\u7801\uff1a import pandas as pd out_pred_rows = [] sub = pd . DataFrame ( out_pred_rows ) sub . columns = [ 'ImageId' , 'EncodedPixels' ] # \u5982\u679cout_pred_rows\u4e3a\u7a7a\uff0c\u5219\u62a5\u9519 sub = sub [ sub . EncodedPixels . notnull ()] \u89e3\u51b3\u65b9\u6848\uff1a\u4fdd\u8bc1 out_pred_rows \u4e0d\u4e3a\u7a7a \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/wangdongwei0/article/details/83863533","title":"003-pandas"},{"location":"06-third-part-lib/003-pandas/#pandas","text":"2021-08-30 Python \u7edf\u8ba1\u5e93\uff0cpandas \u662f\u4e00\u4e2a\u5feb\u901f\u3001\u5f3a\u5927\u3001\u7075\u6d3b\u4e14\u6613\u4e8e\u4f7f\u7528\u7684\u5f00\u6e90\u6570\u636e\u5206\u6790\u548c\u64cd\u4f5c\u5de5\u5177\u3002 https://pandas.pydata.org/getting_started.html","title":"pandas"},{"location":"06-third-part-lib/003-pandas/#1-pandas","text":"\u5728\u5b89\u88c5 pandas \u65f6\u51fa\u73b0 Could not install packages due to an EnvironmentError Consider using the ` --user ` option or check the permissions \u6b64\u65f6\u5728 install \u540e\u9762\u52a0--user \u5373\u53ef pip install --user pandas \u53c2\u8003\u94fe\u63a5\uff1a https://www.cnblogs.com/ConnorShip/category/1347491.html","title":"\u95ee\u9898 1\uff1a\u5b89\u88c5 pandas \u65f6\u51fa\u73b0\u73af\u5883\u9519\u8bef"},{"location":"06-third-part-lib/003-pandas/#2valueerror-length-mismatch-expected-axis-has-0-elements-new-values-have-2-elements","text":"\u9519\u8bef\u5982\u4e0b\uff1a ValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements \u4ee3\u7801\uff1a import pandas as pd out_pred_rows = [] sub = pd . DataFrame ( out_pred_rows ) sub . columns = [ 'ImageId' , 'EncodedPixels' ] # \u5982\u679cout_pred_rows\u4e3a\u7a7a\uff0c\u5219\u62a5\u9519 sub = sub [ sub . EncodedPixels . notnull ()] \u89e3\u51b3\u65b9\u6848\uff1a\u4fdd\u8bc1 out_pred_rows \u4e0d\u4e3a\u7a7a \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/wangdongwei0/article/details/83863533","title":"\u95ee\u9898 2\uff1aValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements"},{"location":"06-third-part-lib/004-matplotlib/","text":"matplotlib \u00b6 Matplotlib: Visualization with Python\uff08Matplotlib\uff1a\u4f7f\u7528 Python \u8fdb\u884c\u53ef\u89c6\u5316\uff09 \u83dc\u9e1f\u6559\u7a0b\uff1a https://www.runoob.com/numpy/numpy-matplotlib.html \u5b98\u65b9\u6587\u6863\uff1a https://matplotlib.org/index.html \u7b80\u4ecb \u00b6 Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python.Matplotlib makes easy things easy and hard things possible. Matplotlib \u662f\u4e00\u4e2a\u7efc\u5408\u6027\u7684\u5e93\uff0c\u7528\u4e8e\u5728 Python \u4e2d\u521b\u5efa\u9759\u6001\u3001\u52a8\u753b\u548c\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u3002Matplotlib \u4f7f\u7b80\u5355\u7684\u4e8b\u60c5\u53d8\u5f97\u5bb9\u6613\uff0c\u4f7f\u56f0\u96be\u7684\u4e8b\u60c5\u6210\u4e3a\u53ef\u80fd\u3002 Matplotlib \u662f Python \u7684\u7ed8\u56fe\u5e93\u3002 \u5b83\u53ef\u4e0e NumPy \u4e00\u8d77\u4f7f\u7528\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u6709\u6548\u7684 MatLab \u5f00\u6e90\u66ff\u4ee3\u65b9\u6848\u3002 \u5b83\u4e5f\u53ef\u4ee5\u548c\u56fe\u5f62\u5de5\u5177\u5305\u4e00\u8d77\u4f7f\u7528\uff0c\u5982 PyQt \u548c wxPython\u3002 Create Develop publication quality plots with just a few lines of code Use interactive figures that can zoom, pan, update... Customize Take full control of line styles, font properties, axes properties... Export and embed to a number of file formats and interactive environments Extend Explore tailored functionality provided by third party packages Learn more about Matplotlib through the many external learning resources \u521b\u5efa \u53ea\u9700\u51e0\u884c\u4ee3\u7801\u5373\u53ef\u5f00\u53d1\u51fa\u7248\u8d28\u91cf\u7684\u56fe \u4f7f\u7528\u53ef\u4ee5\u7f29\u653e\u3001\u5e73\u79fb\u3001\u66f4\u65b0... \u5b9a\u5236 \u5b8c\u5168\u63a7\u5236\u7ebf\u6761\u6837\u5f0f\u3001\u5b57\u4f53\u5c5e\u6027\u3001\u8f74\u5c5e\u6027... \u5bfc\u51fa\u5e76\u5d4c\u5165\u5230\u591a\u79cd\u6587\u4ef6\u683c\u5f0f\u548c\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d \u5ef6\u957f \u63a2\u7d22\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u5305\u63d0\u4f9b\u7684\u5b9a\u5236\u529f\u80fd \u901a\u8fc7\u8bb8\u591a\u5916\u90e8\u5b66\u4e60\u8d44\u6e90\u4e86\u89e3\u6709\u5173 Matplotlib \u7684\u66f4\u591a\u4fe1\u606f \u6848\u4f8b \u00b6 import numpy as np from matplotlib import pyplot as plt x = np . arange ( 1 , 11 ) y = 2 * x + 5 plt . title ( \"Matplotlib demo\" ) plt . xlabel ( \"x axis caption\" ) plt . ylabel ( \"y axis caption\" ) plt . plot ( x , y ) plt . show () \u8fd9\u91cc\u663e\u793a\u4e00\u4e2a\u51fd\u6570\u56fe\u50cf\uff08\u4e5f\u652f\u6301\u5404\u79cd\u56fe\u8868\u7b49\uff09","title":"004-matplotlib"},{"location":"06-third-part-lib/004-matplotlib/#matplotlib","text":"Matplotlib: Visualization with Python\uff08Matplotlib\uff1a\u4f7f\u7528 Python \u8fdb\u884c\u53ef\u89c6\u5316\uff09 \u83dc\u9e1f\u6559\u7a0b\uff1a https://www.runoob.com/numpy/numpy-matplotlib.html \u5b98\u65b9\u6587\u6863\uff1a https://matplotlib.org/index.html","title":"matplotlib"},{"location":"06-third-part-lib/004-matplotlib/#_1","text":"Matplotlib is a comprehensive library for creating static, animated, and interactive visualizations in Python.Matplotlib makes easy things easy and hard things possible. Matplotlib \u662f\u4e00\u4e2a\u7efc\u5408\u6027\u7684\u5e93\uff0c\u7528\u4e8e\u5728 Python \u4e2d\u521b\u5efa\u9759\u6001\u3001\u52a8\u753b\u548c\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u3002Matplotlib \u4f7f\u7b80\u5355\u7684\u4e8b\u60c5\u53d8\u5f97\u5bb9\u6613\uff0c\u4f7f\u56f0\u96be\u7684\u4e8b\u60c5\u6210\u4e3a\u53ef\u80fd\u3002 Matplotlib \u662f Python \u7684\u7ed8\u56fe\u5e93\u3002 \u5b83\u53ef\u4e0e NumPy \u4e00\u8d77\u4f7f\u7528\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u6709\u6548\u7684 MatLab \u5f00\u6e90\u66ff\u4ee3\u65b9\u6848\u3002 \u5b83\u4e5f\u53ef\u4ee5\u548c\u56fe\u5f62\u5de5\u5177\u5305\u4e00\u8d77\u4f7f\u7528\uff0c\u5982 PyQt \u548c wxPython\u3002 Create Develop publication quality plots with just a few lines of code Use interactive figures that can zoom, pan, update... Customize Take full control of line styles, font properties, axes properties... Export and embed to a number of file formats and interactive environments Extend Explore tailored functionality provided by third party packages Learn more about Matplotlib through the many external learning resources \u521b\u5efa \u53ea\u9700\u51e0\u884c\u4ee3\u7801\u5373\u53ef\u5f00\u53d1\u51fa\u7248\u8d28\u91cf\u7684\u56fe \u4f7f\u7528\u53ef\u4ee5\u7f29\u653e\u3001\u5e73\u79fb\u3001\u66f4\u65b0... \u5b9a\u5236 \u5b8c\u5168\u63a7\u5236\u7ebf\u6761\u6837\u5f0f\u3001\u5b57\u4f53\u5c5e\u6027\u3001\u8f74\u5c5e\u6027... \u5bfc\u51fa\u5e76\u5d4c\u5165\u5230\u591a\u79cd\u6587\u4ef6\u683c\u5f0f\u548c\u4ea4\u4e92\u5f0f\u73af\u5883\u4e2d \u5ef6\u957f \u63a2\u7d22\u7b2c\u4e09\u65b9\u8f6f\u4ef6\u5305\u63d0\u4f9b\u7684\u5b9a\u5236\u529f\u80fd \u901a\u8fc7\u8bb8\u591a\u5916\u90e8\u5b66\u4e60\u8d44\u6e90\u4e86\u89e3\u6709\u5173 Matplotlib \u7684\u66f4\u591a\u4fe1\u606f","title":"\u7b80\u4ecb"},{"location":"06-third-part-lib/004-matplotlib/#_2","text":"import numpy as np from matplotlib import pyplot as plt x = np . arange ( 1 , 11 ) y = 2 * x + 5 plt . title ( \"Matplotlib demo\" ) plt . xlabel ( \"x axis caption\" ) plt . ylabel ( \"y axis caption\" ) plt . plot ( x , y ) plt . show () \u8fd9\u91cc\u663e\u793a\u4e00\u4e2a\u51fd\u6570\u56fe\u50cf\uff08\u4e5f\u652f\u6301\u5404\u79cd\u56fe\u8868\u7b49\uff09","title":"\u6848\u4f8b"},{"location":"06-third-part-lib/005-numpy/","text":"numpy \u00b6 NumPy \u662f\u4f7f\u7528 Python \u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u5305\u3002 \u5b83\u5305\u542b\u9664\u5176\u4ed6\u5916 \u5f3a\u5927\u7684 N \u7ef4\u6570\u7ec4\u5bf9\u8c61 \u590d\u6742\u7684\uff08\u5e7f\u64ad\uff09\u529f\u80fd \u7528\u4e8e\u96c6\u6210 C/C++ \u548c Fortran \u4ee3\u7801\u7684\u5de5\u5177 \u7ebf\u6027\u4ee3\u6570\u3001\u5085\u7acb\u53f6\u53d8\u6362\u548c\u968f\u673a\u6570\u529f\u80fd \u9664\u4e86\u660e\u663e\u7684\u79d1\u5b66\u7528\u9014\u5916\uff0cNumPy \u8fd8\u53ef\u4ee5\u7528\u4f5c\u901a\u7528\u6570\u636e\u7684\u9ad8\u6548\u591a\u7ef4\u5bb9\u5668\u3002 \u53ef\u4ee5\u5b9a\u4e49\u4efb\u610f\u6570\u636e\u7c7b\u578b\u3002 \u8fd9\u4f7f NumPy \u80fd\u591f\u65e0\u7f1d\u4e14\u5feb\u901f\u5730\u4e0e\u5404\u79cd\u6570\u636e\u5e93\u96c6\u6210\u3002 \u83dc\u9e1f\u6559\u7a0b\uff1a https://www.runoob.com/numpy/numpy-tutorial.html \u5b98\u7f51\u94fe\u63a5\uff1a https://numpy.org/","title":"005-numpy"},{"location":"06-third-part-lib/005-numpy/#numpy","text":"NumPy \u662f\u4f7f\u7528 Python \u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u5305\u3002 \u5b83\u5305\u542b\u9664\u5176\u4ed6\u5916 \u5f3a\u5927\u7684 N \u7ef4\u6570\u7ec4\u5bf9\u8c61 \u590d\u6742\u7684\uff08\u5e7f\u64ad\uff09\u529f\u80fd \u7528\u4e8e\u96c6\u6210 C/C++ \u548c Fortran \u4ee3\u7801\u7684\u5de5\u5177 \u7ebf\u6027\u4ee3\u6570\u3001\u5085\u7acb\u53f6\u53d8\u6362\u548c\u968f\u673a\u6570\u529f\u80fd \u9664\u4e86\u660e\u663e\u7684\u79d1\u5b66\u7528\u9014\u5916\uff0cNumPy \u8fd8\u53ef\u4ee5\u7528\u4f5c\u901a\u7528\u6570\u636e\u7684\u9ad8\u6548\u591a\u7ef4\u5bb9\u5668\u3002 \u53ef\u4ee5\u5b9a\u4e49\u4efb\u610f\u6570\u636e\u7c7b\u578b\u3002 \u8fd9\u4f7f NumPy \u80fd\u591f\u65e0\u7f1d\u4e14\u5feb\u901f\u5730\u4e0e\u5404\u79cd\u6570\u636e\u5e93\u96c6\u6210\u3002 \u83dc\u9e1f\u6559\u7a0b\uff1a https://www.runoob.com/numpy/numpy-tutorial.html \u5b98\u7f51\u94fe\u63a5\uff1a https://numpy.org/","title":"numpy"},{"location":"06-third-part-lib/006-seaborn/","text":"seaborn \u00b6 2021-08-30 seaborn: statistical data visualization\uff08\u7edf\u8ba1\u6570\u636e\u53ef\u89c6\u5316\uff09 Seaborn \u662f\u4e00\u4e2a\u57fa\u4e8e matplotlib \u7684 Python \u6570\u636e\u53ef\u89c6\u5316\u5e93\u3002 \u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u7ed8\u5236\u6709\u5438\u5f15\u529b\u548c\u4fe1\u606f\u4e30\u5bcc\u7684\u7edf\u8ba1\u56fe\u5f62\u7684\u9ad8\u7ea7\u754c\u9762\u3002 \u6709\u5173\u5e93\u80cc\u540e\u601d\u60f3\u7684\u7b80\u8981\u4ecb\u7ecd\uff0c\u60a8\u53ef\u4ee5\u9605\u8bfb\u4ecb\u7ecd\u6027\u8bf4\u660e\u3002 \u8bbf\u95ee\u5b89\u88c5\u9875\u9762\u4ee5\u67e5\u770b\u5982\u4f55\u4e0b\u8f7d\u8f6f\u4ef6\u5305\u3002 \u60a8\u53ef\u4ee5\u6d4f\u89c8\u793a\u4f8b\u5e93\u4ee5\u4e86\u89e3\u60a8\u53ef\u4ee5\u4f7f\u7528 seaborn \u505a\u4ec0\u4e48\uff0c\u7136\u540e\u67e5\u770b\u6559\u7a0b\u548c API \u53c2\u8003\u4ee5\u4e86\u89e3\u64cd\u4f5c\u65b9\u6cd5\u3002 \u5b98\u7f51\u94fe\u63a5\uff1a http://seaborn.pydata.org/ Github: https://github.com/mwaskom/seaborn \u4ecb\u7ecd\uff1a https://seaborn.pydata.org/introduction.html \u6559\u7a0b\uff1a http://seaborn.pydata.org/tutorial.html API: http://seaborn.pydata.org/api.html \u6848\u4f8b \u00b6 # Import seaborn import seaborn as sns # Apply the default theme sns . set_theme () # Load an example dataset tips = sns . load_dataset ( \"tips\" ) # Create a visualization sns . relplot ( data = tips , x = \"total_bill\" , y = \"tip\" , col = \"time\" , hue = \"smoker\" , style = \"smoker\" , size = \"size\" , ) \u6ce8\uff1a\u6267\u884c\u65f6\uff0c\u53ef\u80fd\u52a0\u8f7d\u6570\u636e\u6709\u95ee\u9898\uff0c\u62a5\u4e0b\u9762\u7684\u9519\u8bef urllib.error.URLError: <urlopen error [ SSL: CERTIFICATE_VERIFY_FAILED ] certificate verify failed: unable to get local issuer certificate ( _ssl.c:1045 ) > \u56e0\u4e3a sns.load_dataset(\"tips\") \u9700\u8981\u4ece github \u8054\u7f51\u52a0\u8f7d\u6d4b\u8bd5\u6570\u636e\u96c6\uff0c\u5982\u679c\u7f51\u7edc\u4e0d\u597d\u6216\u8005\u6ca1\u6709\u7ffb\u5899\uff0c\u8fd9\u91cc\u4f1a\u62a5\u9519 \u53c2\u8003\uff1a https://blog.csdn.net/weixin_41571493/article/details/82528742","title":"006-seaborn"},{"location":"06-third-part-lib/006-seaborn/#seaborn","text":"2021-08-30 seaborn: statistical data visualization\uff08\u7edf\u8ba1\u6570\u636e\u53ef\u89c6\u5316\uff09 Seaborn \u662f\u4e00\u4e2a\u57fa\u4e8e matplotlib \u7684 Python \u6570\u636e\u53ef\u89c6\u5316\u5e93\u3002 \u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u7ed8\u5236\u6709\u5438\u5f15\u529b\u548c\u4fe1\u606f\u4e30\u5bcc\u7684\u7edf\u8ba1\u56fe\u5f62\u7684\u9ad8\u7ea7\u754c\u9762\u3002 \u6709\u5173\u5e93\u80cc\u540e\u601d\u60f3\u7684\u7b80\u8981\u4ecb\u7ecd\uff0c\u60a8\u53ef\u4ee5\u9605\u8bfb\u4ecb\u7ecd\u6027\u8bf4\u660e\u3002 \u8bbf\u95ee\u5b89\u88c5\u9875\u9762\u4ee5\u67e5\u770b\u5982\u4f55\u4e0b\u8f7d\u8f6f\u4ef6\u5305\u3002 \u60a8\u53ef\u4ee5\u6d4f\u89c8\u793a\u4f8b\u5e93\u4ee5\u4e86\u89e3\u60a8\u53ef\u4ee5\u4f7f\u7528 seaborn \u505a\u4ec0\u4e48\uff0c\u7136\u540e\u67e5\u770b\u6559\u7a0b\u548c API \u53c2\u8003\u4ee5\u4e86\u89e3\u64cd\u4f5c\u65b9\u6cd5\u3002 \u5b98\u7f51\u94fe\u63a5\uff1a http://seaborn.pydata.org/ Github: https://github.com/mwaskom/seaborn \u4ecb\u7ecd\uff1a https://seaborn.pydata.org/introduction.html \u6559\u7a0b\uff1a http://seaborn.pydata.org/tutorial.html API: http://seaborn.pydata.org/api.html","title":"seaborn"},{"location":"06-third-part-lib/006-seaborn/#_1","text":"# Import seaborn import seaborn as sns # Apply the default theme sns . set_theme () # Load an example dataset tips = sns . load_dataset ( \"tips\" ) # Create a visualization sns . relplot ( data = tips , x = \"total_bill\" , y = \"tip\" , col = \"time\" , hue = \"smoker\" , style = \"smoker\" , size = \"size\" , ) \u6ce8\uff1a\u6267\u884c\u65f6\uff0c\u53ef\u80fd\u52a0\u8f7d\u6570\u636e\u6709\u95ee\u9898\uff0c\u62a5\u4e0b\u9762\u7684\u9519\u8bef urllib.error.URLError: <urlopen error [ SSL: CERTIFICATE_VERIFY_FAILED ] certificate verify failed: unable to get local issuer certificate ( _ssl.c:1045 ) > \u56e0\u4e3a sns.load_dataset(\"tips\") \u9700\u8981\u4ece github \u8054\u7f51\u52a0\u8f7d\u6d4b\u8bd5\u6570\u636e\u96c6\uff0c\u5982\u679c\u7f51\u7edc\u4e0d\u597d\u6216\u8005\u6ca1\u6709\u7ffb\u5899\uff0c\u8fd9\u91cc\u4f1a\u62a5\u9519 \u53c2\u8003\uff1a https://blog.csdn.net/weixin_41571493/article/details/82528742","title":"\u6848\u4f8b"},{"location":"06-third-part-lib/007-autopep8/","text":"autopep8 \u00b6 \u81ea\u52a8\u7f8e\u5316 python \u683c\u5f0f\u7684\u5de5\u5177\uff08auto python code style\uff09 https://github.com/hhatto/autopep8 pip install --upgrade autopep8 autopep8 --in-place --aggressive --aggressive <filename> autopep8 --in-place --aggressive ./docs/**/*.py \u53c2\u8003\u94fe\u63a5\uff1a https://github.com/hhatto/autopep8 https://blog.csdn.net/viny262/article/details/125917231","title":"007-autopep8"},{"location":"06-third-part-lib/007-autopep8/#autopep8","text":"\u81ea\u52a8\u7f8e\u5316 python \u683c\u5f0f\u7684\u5de5\u5177\uff08auto python code style\uff09 https://github.com/hhatto/autopep8 pip install --upgrade autopep8 autopep8 --in-place --aggressive --aggressive <filename> autopep8 --in-place --aggressive ./docs/**/*.py \u53c2\u8003\u94fe\u63a5\uff1a https://github.com/hhatto/autopep8 https://blog.csdn.net/viny262/article/details/125917231","title":"autopep8"},{"location":"06-third-part-lib/008-virtualenv/","text":"008-virtualenv \u00b6 python\u5f00\u53d1\u4e2d\uff0c\u4e0d\u540c\u9879\u76ee\u4f9d\u8d56\u7684\u73af\u5883\u4e0d\u540c\uff0c\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u5e93\u7248\u672c\u4e0d\u540c\uff0c\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u4f9d\u8d56\u51b2\u7a81\uff0c\u800cvirtualenv\u5c31\u662f\u89e3\u51b3\u8fd9\u79cd\u60c5\u51b5\u7684\uff0cvirtualenv\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u5316\u7684python\u8fd0\u884c\u73af\u5883\uff0c\u5c06\u6211\u4eec\u6240\u9700\u7684\u4f9d\u8d56\u5b89\u88c5\u8fdb\u53bb\u7684\uff0c\u4e0d\u540c\u9879\u76ee\u4e4b\u95f4\u76f8\u4e92\u4e0d\u5e72\u6270\u3002 \u5b89\u88c5 virtualenv \u00b6 pip install virtualenv apt-get install virtualenv \u521b\u5efa\u865a\u62df\u73af\u5883 \u00b6 virtualenv venv # \u8fd9\u65f6\u5019\u4fbf\u4f1a\u5728\u5f53\u524d\u7684\u9879\u76ee\u4e2d\u521b\u5efavenv\u6587\u4ef6\u5939\uff0c\u4e3a\u5f53\u524d\u9879\u76ee\u7684\u865a\u62df python \u8fd0\u884c\u73af\u5883\uff1b\u6b64\u65f6\u521b\u5efa\u7684\u9879\u76ee\u7684 python \u73af\u5883\u548c\u5f53\u524d\u673a\u5668\u7684 python \u73af\u5883\u4e00\u81f4 \u6307\u5b9a\u7279\u5b9a python \u7248\u672c\u547d\u4ee4 \u00b6 virtualenv -p /usr/bin/python3.9 python39-venv \u5982\u679c python3 \u8def\u5f84\u9519\u8bef\uff0c\u53ef\u4ee5\u4f7f\u7528 which python3.9 \u67e5\u770b\u5b89\u88c5\u76ee\u5f55 /opt/homebrew/bin/python3.9 \u6fc0\u6d3b\u865a\u62df\u5316\u73af\u5883 \u00b6 source venv/bin/activate \u6fc0\u6d3b\u540e\uff0c\u5728\u63a7\u5236\u53f0\u4f1a\u6709\u4e00\u4e2a\u5e26\u6709(venv)\u7684\u6807\u5fd7\u3002 \u5728venv\u7684\u73af\u5883\u4e2d\uff0c\u4f7f\u7528pip\u5b89\u88c5\u7684\u5305\u90fd\u4e0d\u4f1a\u518d\u662f\u5168\u5c40\u6027\u7684\u5305\uff0c\u53ea\u4f1a\u5728\u5f53\u524d\u7684\u865a\u62df\u73af\u5883\u4e2d\u8d77\u4f5c\u7528\uff0c\u907f\u514d\u4e86\u6c61\u67d3\u7cfb\u7edf\u73af\u5883\u3002 \u9000\u51fa\u865a\u62df\u73af\u5883 \u00b6 deactivate \u5220\u9664\u865a\u62df\u73af\u5883\uff0c\u8fdb\u5165\u5230\u521b\u5efa\u73af\u5883\u7684\u76ee\u5f55\uff0crm -rf \u5220\u9664venv\u5373\u53ef\u3002 \u5176\u4ed6\u53c2\u6570 \u00b6 $ virtualenv [ OPTIONS ] DEST_DIR -q, \u2013quiet \u4e0d\u663e\u793a\u8be6\u7ec6\u4fe1\u606f\u3002 -p PYTHON_EXE, \u2013python = PYTHON_EXE \u6307\u5b9a\u6240\u7528\u7684python\u89e3\u6790\u5668\u7684\u7248\u672c\uff0c\u6bd4\u5982 \u2013python = python2.5 \u5c31\u4f7f\u75282.5\u7248\u672c\u7684\u89e3\u6790\u5668\u521b\u5efa\u65b0\u7684\u9694\u79bb\u73af\u5883\u3002 \u9ed8\u8ba4\u4f7f\u7528\u7684\u662f\u5f53\u524d\u7cfb\u7edf\u5b89\u88c5 ( /usr/bin/python ) \u7684python\u89e3\u6790\u5668 \u2013clear \u6e05\u7a7a\u975eroot\u7528\u6237\u7684\u5b89\u88c5\uff0c\u5e76\u91cd\u5934\u5f00\u59cb\u521b\u5efa\u9694\u79bb\u73af\u5883\u3002 \u2013no-site-packages \u4ee4\u9694\u79bb\u73af\u5883\u4e0d\u80fd\u8bbf\u95ee\u7cfb\u7edf\u5168\u5c40\u7684site-packages\u76ee\u5f55\u3002 \u2013system-site-packages \u4ee4\u9694\u79bb\u73af\u5883\u53ef\u4ee5\u8bbf\u95ee\u7cfb\u7edf\u5168\u5c40\u7684site-packages\u76ee\u5f55\u3002 \u2013unzip-setuptools \u5b89\u88c5\u65f6\u89e3\u538bSetuptools\u6216Distribute \u2013relocatable \u91cd\u5b9a\u4f4d\u67d0\u4e2a\u5df2\u5b58\u5728\u7684\u9694\u79bb\u73af\u5883\u3002\u4f7f\u7528\u8be5\u9009\u9879\u5c06\u4fee\u6b63\u811a\u672c\u5e76\u4ee4\u6240\u6709.pth\u6587\u4ef6\u4f7f\u7528\u76f8\u5f53\u8def\u5f84\u3002 \u2013distribute \u4f7f\u7528Distribute\u4ee3\u66ffSetuptools\uff0c\u4e5f\u53ef\u8bbe\u7f6e\u73af\u5883\u53d8\u91cfVIRTUALENV_DISTRIBUTE\u8fbe\u5230\u540c\u6837\u6548\u8981\u3002 \u2013extra-search-dir = SEARCH_DIRS \u7528\u4e8e\u67e5\u627esetuptools/distribute/pip\u53d1\u5e03\u5305\u7684\u76ee\u5f55\u3002\u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u6570\u91cf\u7684\u2013extra-search-dir\u8def\u5f84\u3002 \u2013never-download \u7981\u6b62\u4ece\u7f51\u4e0a\u4e0b\u8f7d\u4efb\u4f55\u6570\u636e\u3002\u6b64\u65f6\uff0c\u5982\u679c\u5728\u672c\u5730\u641c\u7d22\u53d1\u5e03\u5305\u5931\u8d25\uff0cvirtualenv\u5c31\u4f1a\u62a5\u9519\u3002 \u2013prompt == PROMPT \u5b9a\u4e49\u9694\u79bb\u73af\u5883\u7684\u547d\u4ee4\u884c\u524d\u7f00\u3002 \u603b\u7ed3 \u00b6 virtualenv\u5c31\u662f\u4e00\u4e2a\u642d\u5efa\u865a\u62df\u5316\u7684python\u73af\u5883\uff0c\u4fbf\u4e8e\u4e0d\u540c\u7684\u9879\u76ee\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u5f00\u53d1\u8fd0\u884c\u3002 virtualenv\u66f4\u591a\u7684\u8fd8\u662f\u9002\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u4e0d\u540c\u7684\u9879\u76ee\uff0c\u4f46\u662f\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8fd8\u662f\u4f7f\u7528docker\u7ed9\u4e0d\u540c\u7684\u9879\u76ee\u521b\u5efa\u4e0d\u540c\u7684\u5bb9\u5668\uff0c\u5404\u81ea\u5206\u5f00\u8fd0\u884c\u4e3a\u597d\uff0c\u4e0d\u5b9c\u653e\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u7269\u7406\u673a\u4e2d\u8fd0\u884c\u3002 \u76f8\u5173\u8d44\u6599 \u00b6 \u5b98\u65b9\u94fe\u63a5\uff1a https://virtualenv.pypa.io/en/latest/index.html \u5b98\u65b9\u94fe\u63a5\uff1a https://virtualenv.pypa.io/en/latest/user_guide.html \u4e2d\u6587\u53c2\u8003\uff1a https://blog.csdn.net/u012206617/article/details/90294421","title":"008-virtualenv"},{"location":"06-third-part-lib/008-virtualenv/#008-virtualenv","text":"python\u5f00\u53d1\u4e2d\uff0c\u4e0d\u540c\u9879\u76ee\u4f9d\u8d56\u7684\u73af\u5883\u4e0d\u540c\uff0c\u4f9d\u8d56\u7684\u7b2c\u4e09\u65b9\u5e93\u7248\u672c\u4e0d\u540c\uff0c\u8fd9\u6837\u5c31\u4f1a\u9020\u6210\u4f9d\u8d56\u51b2\u7a81\uff0c\u800cvirtualenv\u5c31\u662f\u89e3\u51b3\u8fd9\u79cd\u60c5\u51b5\u7684\uff0cvirtualenv\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a\u865a\u62df\u5316\u7684python\u8fd0\u884c\u73af\u5883\uff0c\u5c06\u6211\u4eec\u6240\u9700\u7684\u4f9d\u8d56\u5b89\u88c5\u8fdb\u53bb\u7684\uff0c\u4e0d\u540c\u9879\u76ee\u4e4b\u95f4\u76f8\u4e92\u4e0d\u5e72\u6270\u3002","title":"008-virtualenv"},{"location":"06-third-part-lib/008-virtualenv/#virtualenv","text":"pip install virtualenv apt-get install virtualenv","title":"\u5b89\u88c5 virtualenv"},{"location":"06-third-part-lib/008-virtualenv/#_1","text":"virtualenv venv # \u8fd9\u65f6\u5019\u4fbf\u4f1a\u5728\u5f53\u524d\u7684\u9879\u76ee\u4e2d\u521b\u5efavenv\u6587\u4ef6\u5939\uff0c\u4e3a\u5f53\u524d\u9879\u76ee\u7684\u865a\u62df python \u8fd0\u884c\u73af\u5883\uff1b\u6b64\u65f6\u521b\u5efa\u7684\u9879\u76ee\u7684 python \u73af\u5883\u548c\u5f53\u524d\u673a\u5668\u7684 python \u73af\u5883\u4e00\u81f4","title":"\u521b\u5efa\u865a\u62df\u73af\u5883"},{"location":"06-third-part-lib/008-virtualenv/#python","text":"virtualenv -p /usr/bin/python3.9 python39-venv \u5982\u679c python3 \u8def\u5f84\u9519\u8bef\uff0c\u53ef\u4ee5\u4f7f\u7528 which python3.9 \u67e5\u770b\u5b89\u88c5\u76ee\u5f55 /opt/homebrew/bin/python3.9","title":"\u6307\u5b9a\u7279\u5b9a python \u7248\u672c\u547d\u4ee4"},{"location":"06-third-part-lib/008-virtualenv/#_2","text":"source venv/bin/activate \u6fc0\u6d3b\u540e\uff0c\u5728\u63a7\u5236\u53f0\u4f1a\u6709\u4e00\u4e2a\u5e26\u6709(venv)\u7684\u6807\u5fd7\u3002 \u5728venv\u7684\u73af\u5883\u4e2d\uff0c\u4f7f\u7528pip\u5b89\u88c5\u7684\u5305\u90fd\u4e0d\u4f1a\u518d\u662f\u5168\u5c40\u6027\u7684\u5305\uff0c\u53ea\u4f1a\u5728\u5f53\u524d\u7684\u865a\u62df\u73af\u5883\u4e2d\u8d77\u4f5c\u7528\uff0c\u907f\u514d\u4e86\u6c61\u67d3\u7cfb\u7edf\u73af\u5883\u3002","title":"\u6fc0\u6d3b\u865a\u62df\u5316\u73af\u5883"},{"location":"06-third-part-lib/008-virtualenv/#_3","text":"deactivate \u5220\u9664\u865a\u62df\u73af\u5883\uff0c\u8fdb\u5165\u5230\u521b\u5efa\u73af\u5883\u7684\u76ee\u5f55\uff0crm -rf \u5220\u9664venv\u5373\u53ef\u3002","title":"\u9000\u51fa\u865a\u62df\u73af\u5883"},{"location":"06-third-part-lib/008-virtualenv/#_4","text":"$ virtualenv [ OPTIONS ] DEST_DIR -q, \u2013quiet \u4e0d\u663e\u793a\u8be6\u7ec6\u4fe1\u606f\u3002 -p PYTHON_EXE, \u2013python = PYTHON_EXE \u6307\u5b9a\u6240\u7528\u7684python\u89e3\u6790\u5668\u7684\u7248\u672c\uff0c\u6bd4\u5982 \u2013python = python2.5 \u5c31\u4f7f\u75282.5\u7248\u672c\u7684\u89e3\u6790\u5668\u521b\u5efa\u65b0\u7684\u9694\u79bb\u73af\u5883\u3002 \u9ed8\u8ba4\u4f7f\u7528\u7684\u662f\u5f53\u524d\u7cfb\u7edf\u5b89\u88c5 ( /usr/bin/python ) \u7684python\u89e3\u6790\u5668 \u2013clear \u6e05\u7a7a\u975eroot\u7528\u6237\u7684\u5b89\u88c5\uff0c\u5e76\u91cd\u5934\u5f00\u59cb\u521b\u5efa\u9694\u79bb\u73af\u5883\u3002 \u2013no-site-packages \u4ee4\u9694\u79bb\u73af\u5883\u4e0d\u80fd\u8bbf\u95ee\u7cfb\u7edf\u5168\u5c40\u7684site-packages\u76ee\u5f55\u3002 \u2013system-site-packages \u4ee4\u9694\u79bb\u73af\u5883\u53ef\u4ee5\u8bbf\u95ee\u7cfb\u7edf\u5168\u5c40\u7684site-packages\u76ee\u5f55\u3002 \u2013unzip-setuptools \u5b89\u88c5\u65f6\u89e3\u538bSetuptools\u6216Distribute \u2013relocatable \u91cd\u5b9a\u4f4d\u67d0\u4e2a\u5df2\u5b58\u5728\u7684\u9694\u79bb\u73af\u5883\u3002\u4f7f\u7528\u8be5\u9009\u9879\u5c06\u4fee\u6b63\u811a\u672c\u5e76\u4ee4\u6240\u6709.pth\u6587\u4ef6\u4f7f\u7528\u76f8\u5f53\u8def\u5f84\u3002 \u2013distribute \u4f7f\u7528Distribute\u4ee3\u66ffSetuptools\uff0c\u4e5f\u53ef\u8bbe\u7f6e\u73af\u5883\u53d8\u91cfVIRTUALENV_DISTRIBUTE\u8fbe\u5230\u540c\u6837\u6548\u8981\u3002 \u2013extra-search-dir = SEARCH_DIRS \u7528\u4e8e\u67e5\u627esetuptools/distribute/pip\u53d1\u5e03\u5305\u7684\u76ee\u5f55\u3002\u53ef\u4ee5\u6dfb\u52a0\u4efb\u610f\u6570\u91cf\u7684\u2013extra-search-dir\u8def\u5f84\u3002 \u2013never-download \u7981\u6b62\u4ece\u7f51\u4e0a\u4e0b\u8f7d\u4efb\u4f55\u6570\u636e\u3002\u6b64\u65f6\uff0c\u5982\u679c\u5728\u672c\u5730\u641c\u7d22\u53d1\u5e03\u5305\u5931\u8d25\uff0cvirtualenv\u5c31\u4f1a\u62a5\u9519\u3002 \u2013prompt == PROMPT \u5b9a\u4e49\u9694\u79bb\u73af\u5883\u7684\u547d\u4ee4\u884c\u524d\u7f00\u3002","title":"\u5176\u4ed6\u53c2\u6570"},{"location":"06-third-part-lib/008-virtualenv/#_5","text":"virtualenv\u5c31\u662f\u4e00\u4e2a\u642d\u5efa\u865a\u62df\u5316\u7684python\u73af\u5883\uff0c\u4fbf\u4e8e\u4e0d\u540c\u7684\u9879\u76ee\u5728\u540c\u4e00\u53f0\u673a\u5668\u4e0a\u5f00\u53d1\u8fd0\u884c\u3002 virtualenv\u66f4\u591a\u7684\u8fd8\u662f\u9002\u7528\u4e8e\u672c\u5730\u5f00\u53d1\u4e0d\u540c\u7684\u9879\u76ee\uff0c\u4f46\u662f\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u8fd8\u662f\u4f7f\u7528docker\u7ed9\u4e0d\u540c\u7684\u9879\u76ee\u521b\u5efa\u4e0d\u540c\u7684\u5bb9\u5668\uff0c\u5404\u81ea\u5206\u5f00\u8fd0\u884c\u4e3a\u597d\uff0c\u4e0d\u5b9c\u653e\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u7269\u7406\u673a\u4e2d\u8fd0\u884c\u3002","title":"\u603b\u7ed3"},{"location":"06-third-part-lib/008-virtualenv/#_6","text":"\u5b98\u65b9\u94fe\u63a5\uff1a https://virtualenv.pypa.io/en/latest/index.html \u5b98\u65b9\u94fe\u63a5\uff1a https://virtualenv.pypa.io/en/latest/user_guide.html \u4e2d\u6587\u53c2\u8003\uff1a https://blog.csdn.net/u012206617/article/details/90294421","title":"\u76f8\u5173\u8d44\u6599"},{"location":"06-third-part-lib/009-Black/","text":"009-Python Black\u4ee3\u7801\u683c\u5f0f\u5316 \u00b6 Black\u662f\u4e00\u6b3e\u81ea\u52a8\u5316\u7684Python\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177,\u65e8\u5728\u901a\u8fc7\u5f3a\u5236\u4e00\u81f4\u7684\u4ee3\u7801\u683c\u5f0f\u6765\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7ef4\u62a4\u6027,\u672c\u6587\u5c06\u6df1\u5165\u63a2\u8ba8Black\u7684\u4f7f\u7528\u65b9\u6cd5\u3001\u9ad8\u7ea7\u7279\u6027\u4ee5\u53ca\u4e0e\u5176\u4ed6\u683c\u5f0f\u5316\u5de5\u5177\u7684\u6bd4\u8f83,\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u7406\u89e3\u5e76\u6210\u529f\u5e94\u7528Black\u5728\u4f60\u7684\u9879\u76ee\u4e2d Black\u7684\u80cc\u666f \u00b6 Black\u7684\u8d77\u6e90 \u00b6 Black\u662f\u7531\u610f\u5927\u5229\u7a0b\u5e8f\u5458\u8d3e\u5e93\u4f26\u00b7\u745e\u79d1\u4e8e2018\u5e74\u521b\u5efa\u7684\u4e00\u6b3e\u5f00\u6e90Python\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\u3002\u4ed6\u7684\u521d\u8877\u662f\u901a\u8fc7\u5f3a\u5236\u4e00\u81f4\u7684\u4ee3\u7801\u98ce\u683c\u6765\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u51cf\u5c11\u5f00\u53d1\u8005\u4e4b\u95f4\u5173\u4e8e\u4ee3\u7801\u683c\u5f0f\u7684\u4e89\u8bba\uff0c\u4ece\u800c\u4f7f\u56e2\u961f\u66f4\u5bb9\u6613\u534f\u4f5c\u3002 \u5728\u8d77\u521d\u7684\u51e0\u4e2a\u7248\u672c\u4e2d\uff0cBlack\u53d7\u5230\u4e86\u4e00\u4e9b\u4e89\u8bae\uff0c\u56e0\u4e3a\u5b83\u91c7\u7528\u4e86\u4e00\u79cd\u975e\u5e38\u4e25\u683c\u7684\u98ce\u683c\uff0c\u4f8b\u5982\u4f7f\u7528\u5355\u5f15\u53f7\u800c\u4e0d\u662f\u53cc\u5f15\u53f7\uff0c\u4ee5\u53ca\u5f3a\u5236\u884c\u957f\u9650\u5236\u7b49\u3002\u7136\u800c\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0cBlack\u5728\u793e\u533a\u4e2d\u9010\u6e10\u83b7\u5f97\u4e86\u8ba4\u53ef\uff0c\u56e0\u4e3a\u5b83\u7684\u8bbe\u8ba1\u54f2\u5b66\u66f4\u52a0\u6ce8\u91cd\u4e00\u81f4\u6027\u548c\u7b80\u6d01\u3002 Black\u7684\u57fa\u672c\u683c\u5f0f\u5316\u6548\u679c \u00b6 \u4e00\u4e2a\u7b80\u5355\u7684Python\u51fd\u6570\u793a\u4f8b\u6f14\u793aBlack\u7684\u57fa\u672c\u683c\u5f0f\u5316\u6548\u679c\uff1a # \u672a\u683c\u5f0f\u5316\u7684\u4ee3\u7801 def add ( x , y ) : return x + y \u8fd0\u884cBlack\u8fdb\u884c\u683c\u5f0f\u5316\uff1a black example . py \u683c\u5f0f\u5316\u540e\u7684\u4ee3\u7801\uff1a # \u683c\u5f0f\u5316\u540e\u7684\u4ee3\u7801 def add ( x , y ): return x + y \u4ece\u8fd9\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u4e2d\u53ef\u4ee5\u770b\u5230\uff0cBlack\u4f1a\u81ea\u52a8\u8c03\u6574\u7f29\u8fdb\u3001\u6dfb\u52a0\u9002\u5f53\u7684\u7a7a\u683c\uff0c\u4f7f\u4ee3\u7801\u66f4\u52a0\u4e00\u81f4\u548c\u6613\u8bfb\u3002 \u5b89\u88c5\u4e0e\u914d\u7f6e \u00b6 1. \u5b89\u88c5Black \u00b6 \u9996\u5148\uff0c\u9700\u8981\u4f7f\u7528pip\u5b89\u88c5Black\u3002\u5728\u7ec8\u7aef\u6216\u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a pip install black \u8fd9\u5c06\u4f1a\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684Black\u3002 2. \u521b\u5efa\u914d\u7f6e\u6587\u4ef6 \u00b6 \u4e3a\u4e86\u5b9a\u5236Black\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a pyproject.toml \u7684\u914d\u7f6e\u6587\u4ef6\u3002\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a touch pyproject.toml 3. \u57fa\u672c\u914d\u7f6e\u9009\u9879 \u00b6 \u5728 pyproject.toml \u4e2d\uff0c\u53ef\u4ee5\u914d\u7f6eBlack\u7684\u4e00\u4e9b\u57fa\u672c\u9009\u9879\uff0c\u4f8b\u5982\u884c\u5bbd\u5ea6\uff08 line-length \uff09\u548c\u76ee\u6807Python\u7248\u672c\uff08 target-version \uff09\u3002 # pyproject.toml [tool.black] line-length = 88 target-version = [ 'py38' ] \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u5c06\u884c\u5bbd\u5ea6\u8bbe\u7f6e\u4e3a88\u4e2a\u5b57\u7b26\uff0c\u5e76\u6307\u5b9a\u76ee\u6807Python\u7248\u672c\u4e3a3.8\u3002\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u9700\u6c42\u8fdb\u884c\u76f8\u5e94\u7684\u8c03\u6574\u3002 4. \u66f4\u591a\u914d\u7f6e\u9009\u9879 \u00b6 \u9664\u4e86\u57fa\u672c\u9009\u9879\u4e4b\u5916\uff0cBlack\u8fd8\u63d0\u4f9b\u4e86\u8bb8\u591a\u5176\u4ed6\u914d\u7f6e\u9009\u9879\uff0c\u4ee5\u6ee1\u8db3\u4e0d\u540c\u9879\u76ee\u7684\u9700\u6c42\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u793a\u4f8b\uff1a exclude \uff1a \u7528\u4e8e\u6307\u5b9a\u8981\u5ffd\u7565\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u3002\u4f8b\u5982\uff1a # pyproject.toml [tool.black] exclude = ''' /tests/ /docs/ ''' skip-string-normalization \uff1a \u5982\u679c\u4e0d\u5e0c\u671b\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u89c4\u8303\u5316\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b64\u9009\u9879\u3002\u4f8b\u5982\uff1a # pyproject.toml [tool.black] skip-string-normalization = true use-tabs \uff1a \u5982\u679c\u9879\u76ee\u4f7f\u7528\u5236\u8868\u7b26\u800c\u4e0d\u662f\u7a7a\u683c\uff0c\u8bf7\u542f\u7528\u6b64\u9009\u9879\u3002\u4f8b\u5982\uff1a # pyproject.toml [tool.black] use-tabs = true 5. \u8fd0\u884cBlack \u00b6 \u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884cBlack\uff0c\u4ee5\u683c\u5f0f\u5316\u9879\u76ee\u4e2d\u7684\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684Python\u6587\u4ef6\u3002 black . \u4ee5\u4e0a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5b89\u88c5Black\u5e76\u914d\u7f6e\u4e00\u4e9b\u57fa\u672c\u9009\u9879\u3002\u901a\u8fc7\u5728 pyproject.toml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u9002\u5f53\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u7684\u9700\u6c42\u5b9a\u5236Black\u7684\u884c\u4e3a\u3002 \u57fa\u672c\u7528\u6cd5 \u00b6 Black\u7684\u57fa\u672c\u7528\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u5728\u7ec8\u7aef\u6216\u547d\u4ee4\u884c\u4e2d\u8fd0\u884cBlack\uff0c\u5e76\u6307\u5b9a\u8981\u683c\u5f0f\u5316\u7684\u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55\u3002 1. \u5b89\u88c5Black \u00b6 \u9996\u5148\uff0c\u786e\u4fdd\u5df2\u7ecf\u5b89\u88c5\u4e86Black\u3002\u5982\u679c\u6ca1\u6709\u5b89\u88c5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\uff1a pip install black 2. \u8fd0\u884cBlack \u00b6 \u5728\u7ec8\u7aef\u4e2d\uff0c\u8fdb\u5165\u9879\u76ee\u76ee\u5f55\uff0c\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a black . \u8fd9\u4e2a\u547d\u4ee4\u5c06\u4f1a\u683c\u5f0f\u5316\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684Python\u6587\u4ef6\u3002\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5177\u4f53\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a black my_file.py my_directory/ 3. \u81ea\u52a8\u9012\u5f52 \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cBlack\u4f1a\u9012\u5f52\u5730\u683c\u5f0f\u5316\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u3002\u5982\u679c\u60f3\u8981\u663e\u793a\u54ea\u4e9b\u6587\u4ef6\u88ab\u683c\u5f0f\u5316\u4e86\uff0c\u53ef\u4ee5\u52a0\u4e0a --check \u9009\u9879\uff0cBlack\u5c06\u53ea\u68c0\u67e5\u683c\u5f0f\u800c\u4e0d\u8fdb\u884c\u5b9e\u9645\u7684\u4fee\u6539\u3002 black --check . 4. \u68c0\u67e5\u683c\u5f0f\u5dee\u5f02 \u00b6 \u5982\u679c\u60f3\u67e5\u770b\u683c\u5f0f\u5316\u524d\u540e\u7684\u5177\u4f53\u5dee\u5f02\uff0c\u53ef\u4ee5\u4f7f\u7528 --diff \u9009\u9879\uff1a black --diff . \u8fd9\u4e2a\u9009\u9879\u4f1a\u663e\u793a\u683c\u5f0f\u5316\u524d\u540e\u7684\u5dee\u5f02\uff0c\u4f46\u5e76\u4e0d\u4f1a\u5b9e\u9645\u4fee\u6539\u6587\u4ef6\u3002 5. \u5728\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528 \u00b6 \u8bb8\u591a\u4ee3\u7801\u7f16\u8f91\u5668\u90fd\u652f\u6301Black\u7684\u96c6\u6210\uff0c\u4f7f\u5f97\u5728\u7f16\u8f91\u5668\u4e2d\u76f4\u63a5\u5e94\u7528\u683c\u5f0f\u5316\u53d8\u5f97\u66f4\u52a0\u65b9\u4fbf\u3002\u4f8b\u5982\uff0c\u5728VSCode\u4e2d\uff0c\u53ef\u4ee5\u5b89\u88c5\u63d2\u4ef6\u5e76\u914d\u7f6e\u4ee5\u5728\u4fdd\u5b58\u6587\u4ef6\u65f6\u81ea\u52a8\u8fd0\u884cBlack\u3002 Black\u7684\u7279\u6027 \u00b6 Black\u4f5c\u4e3a\u4e00\u6b3e\u5f3a\u5927\u7684Python\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u683c\u5f0f\u5316\u529f\u80fd\uff0c\u8fd8\u652f\u6301\u4e00\u4e9b\u9ad8\u7ea7\u7279\u6027\uff0c\u4f7f\u5176\u66f4\u52a0\u7075\u6d3b\u548c\u9002\u5e94\u4e0d\u540c\u7684\u9879\u76ee\u9700\u6c42\u3002 1. \u5ffd\u7565\u6587\u4ef6\u548c\u76ee\u5f55 \u00b6 Black\u5141\u8bb8\u4f60\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u6765\u6307\u5b9a\u8981\u5ffd\u7565\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u4ee5\u4fbf\u5728\u683c\u5f0f\u5316\u65f6\u6392\u9664\u7279\u5b9a\u7684\u90e8\u5206\u3002\u5728 pyproject.toml \u4e2d\u4f7f\u7528 exclude \u9009\u9879\uff1a # pyproject.toml [tool.black] exclude = ''' /tests/ /docs/ ''' \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cBlack\u5c06\u5ffd\u7565\u9879\u76ee\u4e2d\u7684 /tests/ \u548c /docs/ \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u3002 2. \u81ea\u5b9a\u4e49\u884c\u5bbd\u548c\u7f29\u8fdb \u00b6 \u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u8c03\u6574Black\u7684\u4e00\u4e9b\u683c\u5f0f\u5316\u8bbe\u7f6e\uff0c\u5982\u884c\u5bbd\u5ea6\u548c\u7f29\u8fdb\u3002\u4f8b\u5982\uff0c\u5c06\u884c\u5bbd\u5ea6\u8bbe\u7f6e\u4e3a120\uff0c\u4f7f\u7528\u5236\u8868\u7b26\u800c\u4e0d\u662f\u7a7a\u683c\uff1a # pyproject.toml [tool.black] line-length = 120 use-tabs = true \u8fd9\u4e2a\u914d\u7f6e\u5c06\u4f7fBlack\u5728\u683c\u5f0f\u5316\u65f6\u5c06\u884c\u5bbd\u5ea6\u9650\u5236\u4e3a120\u4e2a\u5b57\u7b26\uff0c\u5e76\u4f7f\u7528\u5236\u8868\u7b26\u8fdb\u884c\u7f29\u8fdb\u3002 3. \u7f16\u8f91\u5668\u96c6\u6210 \u00b6 Black\u4e0e\u8bb8\u591a\u6d41\u884c\u7684\u4ee3\u7801\u7f16\u8f91\u5668\u96c6\u6210\u5f97\u5f88\u597d\u3002\u5728\u8bb8\u591a\u7f16\u8f91\u5668\u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u4f7fBlack\u5728\u4fdd\u5b58\u6587\u4ef6\u65f6\u81ea\u52a8\u8fd0\u884c\u3002\u4ee5VSCode\u4e3a\u4f8b\uff0c\u5728 settings.json \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\uff1a // settings.json \"editor.formatOnSave\": true, \"python.formatting.provider\": \"black\" \u8fd9\u6837\u914d\u7f6e\u540e\uff0c\u6bcf\u6b21\u4fdd\u5b58Python\u6587\u4ef6\u65f6\uff0cBlack\u90fd\u4f1a\u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801\u3002 4. \u989d\u5916\u7684\u547d\u4ee4\u884c\u9009\u9879 \u00b6 \u9664\u4e86\u914d\u7f6e\u6587\u4ef6\u4e4b\u5916\uff0cBlack\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u547d\u4ee4\u884c\u9009\u9879\uff0c\u5141\u8bb8\u4f60\u5728\u8fd0\u884c\u65f6\u8986\u76d6\u7279\u5b9a\u7684\u8bbe\u7f6e\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 --check \u9009\u9879\u6765\u68c0\u67e5\u4ee3\u7801\u662f\u5426\u7b26\u5408Black\u7684\u683c\u5f0f\uff0c\u800c\u4e0d\u8fdb\u884c\u5b9e\u9645\u7684\u683c\u5f0f\u5316\u3002 black --check . 5. \u5728\u7248\u672c\u63a7\u5236\u4e2d\u4f7f\u7528 \u00b6 Black\u7684\u683c\u5f0f\u5316\u8f93\u51fa\u901a\u5e38\u4f1a\u4fee\u6539\u6587\u4ef6\uff0c\u56e0\u6b64\u5728\u7248\u672c\u63a7\u5236\u4e2d\u4f7f\u7528\u65f6\u9700\u8981\u5c0f\u5fc3\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 --diff \u9009\u9879\u6765\u67e5\u770b\u683c\u5f0f\u5316\u524d\u540e\u7684\u5dee\u5f02\uff0c\u800c\u4e0d\u5b9e\u9645\u4fee\u6539\u6587\u4ef6\uff1a black --diff . \u8fd9\u80fd\u591f\u5728\u63d0\u4ea4\u4ee3\u7801\u4e4b\u524d\u68c0\u67e5\u6f5c\u5728\u7684\u66f4\u6539\u3002 \u901a\u8fc7\u6df1\u5165\u4e86\u89e3Black\u7684\u9ad8\u7ea7\u7279\u6027\uff0c\u4f60\u53ef\u4ee5\u66f4\u597d\u5730\u5b9a\u5236\u5de5\u5177\u4ee5\u9002\u5e94\u4f60\u7684\u9879\u76ee\u9700\u6c42\u3002\u8fd9\u4e9b\u7279\u6027\u4f7fBlack\u6210\u4e3a\u4e00\u4e2a\u5f3a\u5927\u800c\u7075\u6d3b\u7684\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u9002\u7528\u4e8e\u5404\u79cdPython\u9879\u76ee\u3002 Black\u4e0e\u5176\u4ed6\u683c\u5f0f\u5316\u5de5\u5177\u7684\u6bd4\u8f83 \u00b6 Black\u3001YAPF\u548cautopep8\u90fd\u662fPython\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u5b83\u4eec\u5404\u81ea\u6709\u7740\u72ec\u7279\u7684\u8bbe\u8ba1\u7406\u5ff5\u548c\u7279\u70b9\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u4e00\u4e9b\u6bd4\u8f83\uff1a 1. \u8bbe\u8ba1\u7406\u5ff5 \u00b6 Black\uff1a Black\u7684\u8bbe\u8ba1\u7406\u5ff5\u5f3a\u8c03\u4e00\u81f4\u6027\u548c\u7b80\u6d01\u3002\u5b83\u91c7\u7528\u4e86\u4e00\u79cd\u201c\u4e0d\u5bb9\u5546\u91cf\u201d\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u5f3a\u5236\u4e00\u79cd\u56fa\u5b9a\u7684\u4ee3\u7801\u98ce\u683c\u6765\u51cf\u5c11\u5f00\u53d1\u8005\u4e4b\u95f4\u7684\u4e89\u8bba\uff0c\u786e\u4fdd\u6574\u4e2a\u9879\u76ee\u7684\u4ee3\u7801\u5177\u6709\u4e00\u81f4\u6027\u3002 YAPF\uff1a YAPF\uff08Yet Another Python Formatter\uff09\u4e5f\u6ce8\u91cd\u4e00\u81f4\u6027\uff0c\u4f46\u76f8\u5bf9\u4e8eBlack\uff0c\u5b83\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u914d\u7f6e\u9009\u9879\uff0c\u5141\u8bb8\u7528\u6237\u6839\u636e\u81ea\u5df1\u7684\u504f\u597d\u8c03\u6574\u683c\u5f0f\u5316\u7684\u7ec6\u8282\u3002 autopep8\uff1a autopep8\u7684\u76ee\u6807\u662f\u81ea\u52a8\u4fee\u590dPEP 8\u89c4\u8303\u4e2d\u7684\u95ee\u9898\u3002\u5b83\u4fa7\u91cd\u4e8e\u901a\u8fc7\u8c03\u6574\u7a7a\u683c\u3001\u7f29\u8fdb\u7b49\u65b9\u5f0f\u6765\u4f7f\u4ee3\u7801\u7b26\u5408PEP 8\u6807\u51c6\uff0c\u4f46\u5e76\u4e0d\u5f3a\u5236\u4e00\u79cd\u7279\u5b9a\u7684\u98ce\u683c\u3002 2. \u914d\u7f6e\u9009\u9879 \u00b6 Black\uff1a Black\u7684\u914d\u7f6e\u9009\u9879\u76f8\u5bf9\u8f83\u5c11\u3002\u5b83\u66f4\u503e\u5411\u4e8e\u91c7\u7528\u4e00\u7ec4\u9ed8\u8ba4\u7684\u98ce\u683c\u89c4\u5219\uff0c\u4ee5\u7b80\u5316\u914d\u7f6e\uff0c\u5e76\u9f13\u52b1\u9879\u76ee\u4e2d\u6240\u6709\u7684\u4ee3\u7801\u90fd\u91c7\u7528\u76f8\u540c\u7684\u98ce\u683c\u3002 YAPF\uff1a YAPF\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u914d\u7f6e\u9009\u9879\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u7cbe\u7ec6\u8c03\u6574\u683c\u5f0f\u5316\u7684\u884c\u4e3a\u3002\u8fd9\u4f7f\u5f97YAPF\u66f4\u52a0\u9002\u7528\u4e8e\u90a3\u4e9b\u9700\u8981\u9ad8\u5ea6\u5b9a\u5236\u7684\u9879\u76ee\u3002 autopep8\uff1a autopep8\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u914d\u7f6e\u9009\u9879\uff0c\u5141\u8bb8\u7528\u6237\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8c03\u6574\u683c\u5f0f\u5316\u89c4\u5219\uff0c\u4f46\u76f8\u8f83\u4e8eYAPF\uff0c\u5b83\u7684\u914d\u7f6e\u76f8\u5bf9\u7b80\u5355\u3002 3. \u81ea\u52a8\u5316\u7a0b\u5ea6 \u00b6 Black\uff1a Black\u7684\u81ea\u52a8\u5316\u7a0b\u5ea6\u975e\u5e38\u9ad8\u3002\u5b83\u51e0\u4e4e\u6ca1\u6709\u4eba\u4e3a\u5e72\u9884\u7684\u4f59\u5730\uff0c\u901a\u8fc7\u8fd0\u884c\u4e00\u6b21\u547d\u4ee4\u5373\u53ef\u5b8c\u6210\u6574\u4e2a\u9879\u76ee\u7684\u4ee3\u7801\u683c\u5f0f\u5316\u3002 YAPF\uff1a YAPF\u5728\u81ea\u52a8\u5316\u7a0b\u5ea6\u4e0a\u4e5f\u5f88\u9ad8\uff0c\u4f46\u76f8\u5bf9\u4e8eBlack\uff0c\u5b83\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u914d\u7f6e\u9009\u9879\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u66f4\u7075\u6d3b\u5730\u8c03\u6574\u4ee3\u7801\u98ce\u683c\u3002 autopep8\uff1a autopep8\u7684\u81ea\u52a8\u5316\u7a0b\u5ea6\u8f83\u9ad8\uff0c\u4f46\u7528\u6237\u5728\u4f7f\u7528\u65f6\u4ecd\u6709\u4e00\u5b9a\u7684\u63a7\u5236\u6743\uff0c\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u5e94\u7528\u6216\u5ffd\u7565\u67d0\u4e9b\u4fee\u590d\u3002 4. \u901f\u5ea6 \u00b6 Black\uff1a Black\u5728\u901f\u5ea6\u4e0a\u901a\u5e38\u8f83\u5feb\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u5927\u578b\u9879\u76ee\u3002\u5b83\u901a\u8fc7\u5f3a\u5236\u4e00\u81f4\u7684\u89c4\u5219\u6765\u63d0\u9ad8\u5904\u7406\u901f\u5ea6\u3002 YAPF\uff1a YAPF\u7684\u901f\u5ea6\u4e5f\u8f83\u5feb\uff0c\u4f46\u7531\u4e8e\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u914d\u7f6e\u9009\u9879\uff0c\u53ef\u80fd\u5728\u5904\u7406\u590d\u6742\u683c\u5f0f\u65f6\u7a0d\u663e\u8017\u65f6\u3002 autopep8\uff1a autopep8\u901a\u5e38\u4e5f\u80fd\u591f\u5feb\u901f\u5904\u7406\u683c\u5f0f\u5316\uff0c\u4f46\u5728\u5904\u7406\u590d\u6742\u4ee3\u7801\u65f6\u53ef\u80fd\u7565\u663e\u7f13\u6162\u3002 5. \u793e\u533a\u652f\u6301\u4e0e\u6d3b\u8dc3\u5ea6 \u00b6 Black\uff1a Black\u5728Python\u793e\u533a\u4e2d\u9010\u6e10\u83b7\u5f97\u4e86\u5e7f\u6cdb\u7684\u8ba4\u53ef\uff0c\u5f97\u5230\u4e86\u8bb8\u591a\u9879\u76ee\u7684\u91c7\u7528\uff0c\u5e76\u4e14\u5176\u5f00\u53d1\u4ecd\u7136\u975e\u5e38\u6d3b\u8dc3\u3002 YAPF\uff1a YAPF\u540c\u6837\u53d7\u5230\u4e86\u8f83\u591a\u9879\u76ee\u7684\u9752\u7750\uff0c\u5177\u6709\u4e00\u5b9a\u7684\u793e\u533a\u652f\u6301\u548c\u6d3b\u8dc3\u5ea6\u3002 autopep8\uff1a autopep8\u4f5c\u4e3a\u4e00\u4e2a\u89e3\u51b3PEP 8\u89c4\u8303\u7684\u5de5\u5177\uff0c\u4e5f\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u4f46\u5728\u4e00\u4e9b\u65b0\u9879\u76ee\u4e2d\u53ef\u80fd\u53d7\u5230Black\u548cYAPF\u7684\u7ade\u4e89\u3002 \u603b\u7ed3 \u00b6 Black\u4f5c\u4e3a\u4e00\u6b3ePython\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u5728\u9879\u76ee\u4e2d\u6709\u5176\u72ec\u7279\u7684\u4f18\u52bf\u3002\u5176\u8bbe\u8ba1\u7406\u5ff5\u6ce8\u91cd\u4e00\u81f4\u6027\u548c\u7b80\u6d01\uff0c\u901a\u8fc7\u5f3a\u5236\u4e00\u79cd\u89c4\u8303\u7684\u4ee3\u7801\u98ce\u683c\uff0c\u51cf\u5c11\u4e86\u5f00\u53d1\u8005\u95f4\u7684\u4e89\u8bae\uff0c\u63d0\u9ad8\u4e86\u6574\u4f53\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002Black\u7684\u81ea\u52a8\u5316\u7a0b\u5ea6\u6781\u9ad8\uff0c\u7b80\u5355\u7684\u547d\u4ee4\u5373\u53ef\u5b8c\u6210\u6574\u4e2a\u9879\u76ee\u7684\u4ee3\u7801\u683c\u5f0f\u5316\uff0c\u4f7f\u5f97\u56e2\u961f\u80fd\u591f\u66f4\u8f7b\u677e\u5730\u7ef4\u6301\u4e00\u81f4\u7684\u4ee3\u7801\u89c4\u8303\u3002 \u76f8\u8f83\u4e8e\u5176\u4ed6\u683c\u5f0f\u5316\u5de5\u5177\u5982YAPF\u548cautopep8\uff0cBlack\u5728\u901f\u5ea6\u4e0a\u8868\u73b0\u51fa\u8272\uff0c\u7279\u522b\u9002\u5408\u5904\u7406\u5927\u578b\u9879\u76ee\u3002\u5c3d\u7ba1\u914d\u7f6e\u9009\u9879\u76f8\u5bf9\u8f83\u5c11\uff0c\u4f46\u8fd9\u4e5f\u6709\u52a9\u4e8e\u9879\u76ee\u5185\u90e8\u7684\u4e00\u81f4\u6027\u3002Black\u5728Python\u793e\u533a\u4e2d\u5f97\u5230\u5e7f\u6cdb\u8ba4\u53ef\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u9879\u76ee\u91c7\u7528\u5b83\u4f5c\u4e3a\u9996\u9009\u683c\u5f0f\u5316\u5de5\u5177\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u9700\u8981\u66f4\u591a\u5b9a\u5236\u9009\u9879\u7684\u9879\u76ee\uff0cYAPF\u548cautopep8\u53ef\u80fd\u66f4\u4e3a\u9002\u7528\u3002 \u5728\u9009\u62e9\u683c\u5f0f\u5316\u5de5\u5177\u65f6\uff0c\u56e2\u961f\u5e94\u6743\u8861\u5de5\u5177\u7684\u81ea\u52a8\u5316\u7a0b\u5ea6\u3001\u7075\u6d3b\u6027\u4ee5\u53ca\u4e0e\u9879\u76ee\u9700\u6c42\u7684\u5951\u5408\u5ea6\u3002Black\u7684\u7b80\u6d01\u548c\u9ad8\u6548\u4f7f\u5176\u6210\u4e3a\u8bb8\u591a\u56e2\u961f\u7684\u9009\u62e9\uff0c\u4e3a\u9879\u76ee\u63d0\u4f9b\u4e86\u4e00\u81f4\u7684\u3001\u6613\u8bfb\u7684\u4ee3\u7801\u98ce\u683c\u3002 \u53c2\u8003\u94fe\u63a5 \u00b6 http://ipengtao.com/1013.html","title":"009-Black"},{"location":"06-third-part-lib/009-Black/#009-python-black","text":"Black\u662f\u4e00\u6b3e\u81ea\u52a8\u5316\u7684Python\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177,\u65e8\u5728\u901a\u8fc7\u5f3a\u5236\u4e00\u81f4\u7684\u4ee3\u7801\u683c\u5f0f\u6765\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u7ef4\u62a4\u6027,\u672c\u6587\u5c06\u6df1\u5165\u63a2\u8ba8Black\u7684\u4f7f\u7528\u65b9\u6cd5\u3001\u9ad8\u7ea7\u7279\u6027\u4ee5\u53ca\u4e0e\u5176\u4ed6\u683c\u5f0f\u5316\u5de5\u5177\u7684\u6bd4\u8f83,\u5e2e\u52a9\u4f60\u66f4\u597d\u5730\u7406\u89e3\u5e76\u6210\u529f\u5e94\u7528Black\u5728\u4f60\u7684\u9879\u76ee\u4e2d","title":"009-Python Black\u4ee3\u7801\u683c\u5f0f\u5316"},{"location":"06-third-part-lib/009-Black/#black","text":"","title":"Black\u7684\u80cc\u666f"},{"location":"06-third-part-lib/009-Black/#black_1","text":"Black\u662f\u7531\u610f\u5927\u5229\u7a0b\u5e8f\u5458\u8d3e\u5e93\u4f26\u00b7\u745e\u79d1\u4e8e2018\u5e74\u521b\u5efa\u7684\u4e00\u6b3e\u5f00\u6e90Python\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\u3002\u4ed6\u7684\u521d\u8877\u662f\u901a\u8fc7\u5f3a\u5236\u4e00\u81f4\u7684\u4ee3\u7801\u98ce\u683c\u6765\u63d0\u9ad8\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\uff0c\u51cf\u5c11\u5f00\u53d1\u8005\u4e4b\u95f4\u5173\u4e8e\u4ee3\u7801\u683c\u5f0f\u7684\u4e89\u8bba\uff0c\u4ece\u800c\u4f7f\u56e2\u961f\u66f4\u5bb9\u6613\u534f\u4f5c\u3002 \u5728\u8d77\u521d\u7684\u51e0\u4e2a\u7248\u672c\u4e2d\uff0cBlack\u53d7\u5230\u4e86\u4e00\u4e9b\u4e89\u8bae\uff0c\u56e0\u4e3a\u5b83\u91c7\u7528\u4e86\u4e00\u79cd\u975e\u5e38\u4e25\u683c\u7684\u98ce\u683c\uff0c\u4f8b\u5982\u4f7f\u7528\u5355\u5f15\u53f7\u800c\u4e0d\u662f\u53cc\u5f15\u53f7\uff0c\u4ee5\u53ca\u5f3a\u5236\u884c\u957f\u9650\u5236\u7b49\u3002\u7136\u800c\uff0c\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0cBlack\u5728\u793e\u533a\u4e2d\u9010\u6e10\u83b7\u5f97\u4e86\u8ba4\u53ef\uff0c\u56e0\u4e3a\u5b83\u7684\u8bbe\u8ba1\u54f2\u5b66\u66f4\u52a0\u6ce8\u91cd\u4e00\u81f4\u6027\u548c\u7b80\u6d01\u3002","title":"Black\u7684\u8d77\u6e90"},{"location":"06-third-part-lib/009-Black/#black_2","text":"\u4e00\u4e2a\u7b80\u5355\u7684Python\u51fd\u6570\u793a\u4f8b\u6f14\u793aBlack\u7684\u57fa\u672c\u683c\u5f0f\u5316\u6548\u679c\uff1a # \u672a\u683c\u5f0f\u5316\u7684\u4ee3\u7801 def add ( x , y ) : return x + y \u8fd0\u884cBlack\u8fdb\u884c\u683c\u5f0f\u5316\uff1a black example . py \u683c\u5f0f\u5316\u540e\u7684\u4ee3\u7801\uff1a # \u683c\u5f0f\u5316\u540e\u7684\u4ee3\u7801 def add ( x , y ): return x + y \u4ece\u8fd9\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u4e2d\u53ef\u4ee5\u770b\u5230\uff0cBlack\u4f1a\u81ea\u52a8\u8c03\u6574\u7f29\u8fdb\u3001\u6dfb\u52a0\u9002\u5f53\u7684\u7a7a\u683c\uff0c\u4f7f\u4ee3\u7801\u66f4\u52a0\u4e00\u81f4\u548c\u6613\u8bfb\u3002","title":"Black\u7684\u57fa\u672c\u683c\u5f0f\u5316\u6548\u679c"},{"location":"06-third-part-lib/009-Black/#_1","text":"","title":"\u5b89\u88c5\u4e0e\u914d\u7f6e"},{"location":"06-third-part-lib/009-Black/#1-black","text":"\u9996\u5148\uff0c\u9700\u8981\u4f7f\u7528pip\u5b89\u88c5Black\u3002\u5728\u7ec8\u7aef\u6216\u547d\u4ee4\u63d0\u793a\u7b26\u4e2d\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a pip install black \u8fd9\u5c06\u4f1a\u5b89\u88c5\u6700\u65b0\u7248\u672c\u7684Black\u3002","title":"1. \u5b89\u88c5Black"},{"location":"06-third-part-lib/009-Black/#2","text":"\u4e3a\u4e86\u5b9a\u5236Black\u7684\u884c\u4e3a\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a pyproject.toml \u7684\u914d\u7f6e\u6587\u4ef6\u3002\u5728\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a touch pyproject.toml","title":"2. \u521b\u5efa\u914d\u7f6e\u6587\u4ef6"},{"location":"06-third-part-lib/009-Black/#3","text":"\u5728 pyproject.toml \u4e2d\uff0c\u53ef\u4ee5\u914d\u7f6eBlack\u7684\u4e00\u4e9b\u57fa\u672c\u9009\u9879\uff0c\u4f8b\u5982\u884c\u5bbd\u5ea6\uff08 line-length \uff09\u548c\u76ee\u6807Python\u7248\u672c\uff08 target-version \uff09\u3002 # pyproject.toml [tool.black] line-length = 88 target-version = [ 'py38' ] \u5728\u8fd9\u4e2a\u793a\u4f8b\u4e2d\uff0c\u5c06\u884c\u5bbd\u5ea6\u8bbe\u7f6e\u4e3a88\u4e2a\u5b57\u7b26\uff0c\u5e76\u6307\u5b9a\u76ee\u6807Python\u7248\u672c\u4e3a3.8\u3002\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u9700\u6c42\u8fdb\u884c\u76f8\u5e94\u7684\u8c03\u6574\u3002","title":"3. \u57fa\u672c\u914d\u7f6e\u9009\u9879"},{"location":"06-third-part-lib/009-Black/#4","text":"\u9664\u4e86\u57fa\u672c\u9009\u9879\u4e4b\u5916\uff0cBlack\u8fd8\u63d0\u4f9b\u4e86\u8bb8\u591a\u5176\u4ed6\u914d\u7f6e\u9009\u9879\uff0c\u4ee5\u6ee1\u8db3\u4e0d\u540c\u9879\u76ee\u7684\u9700\u6c42\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u793a\u4f8b\uff1a exclude \uff1a \u7528\u4e8e\u6307\u5b9a\u8981\u5ffd\u7565\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u3002\u4f8b\u5982\uff1a # pyproject.toml [tool.black] exclude = ''' /tests/ /docs/ ''' skip-string-normalization \uff1a \u5982\u679c\u4e0d\u5e0c\u671b\u5bf9\u5b57\u7b26\u4e32\u8fdb\u884c\u89c4\u8303\u5316\uff0c\u53ef\u4ee5\u4f7f\u7528\u6b64\u9009\u9879\u3002\u4f8b\u5982\uff1a # pyproject.toml [tool.black] skip-string-normalization = true use-tabs \uff1a \u5982\u679c\u9879\u76ee\u4f7f\u7528\u5236\u8868\u7b26\u800c\u4e0d\u662f\u7a7a\u683c\uff0c\u8bf7\u542f\u7528\u6b64\u9009\u9879\u3002\u4f8b\u5982\uff1a # pyproject.toml [tool.black] use-tabs = true","title":"4. \u66f4\u591a\u914d\u7f6e\u9009\u9879"},{"location":"06-third-part-lib/009-Black/#5-black","text":"\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884cBlack\uff0c\u4ee5\u683c\u5f0f\u5316\u9879\u76ee\u4e2d\u7684\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684Python\u6587\u4ef6\u3002 black . \u4ee5\u4e0a\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5b89\u88c5Black\u5e76\u914d\u7f6e\u4e00\u4e9b\u57fa\u672c\u9009\u9879\u3002\u901a\u8fc7\u5728 pyproject.toml \u6587\u4ef6\u4e2d\u6dfb\u52a0\u9002\u5f53\u7684\u914d\u7f6e\uff0c\u53ef\u4ee5\u6839\u636e\u9879\u76ee\u7684\u9700\u6c42\u5b9a\u5236Black\u7684\u884c\u4e3a\u3002","title":"5. \u8fd0\u884cBlack"},{"location":"06-third-part-lib/009-Black/#_2","text":"Black\u7684\u57fa\u672c\u7528\u6cd5\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u9700\u5728\u7ec8\u7aef\u6216\u547d\u4ee4\u884c\u4e2d\u8fd0\u884cBlack\uff0c\u5e76\u6307\u5b9a\u8981\u683c\u5f0f\u5316\u7684\u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55\u3002","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"06-third-part-lib/009-Black/#1-black_1","text":"\u9996\u5148\uff0c\u786e\u4fdd\u5df2\u7ecf\u5b89\u88c5\u4e86Black\u3002\u5982\u679c\u6ca1\u6709\u5b89\u88c5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u8fdb\u884c\u5b89\u88c5\uff1a pip install black","title":"1. \u5b89\u88c5Black"},{"location":"06-third-part-lib/009-Black/#2-black","text":"\u5728\u7ec8\u7aef\u4e2d\uff0c\u8fdb\u5165\u9879\u76ee\u76ee\u5f55\uff0c\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a black . \u8fd9\u4e2a\u547d\u4ee4\u5c06\u4f1a\u683c\u5f0f\u5316\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684Python\u6587\u4ef6\u3002\u4e5f\u53ef\u4ee5\u6307\u5b9a\u5177\u4f53\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a black my_file.py my_directory/","title":"2. \u8fd0\u884cBlack"},{"location":"06-third-part-lib/009-Black/#3_1","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cBlack\u4f1a\u9012\u5f52\u5730\u683c\u5f0f\u5316\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u3002\u5982\u679c\u60f3\u8981\u663e\u793a\u54ea\u4e9b\u6587\u4ef6\u88ab\u683c\u5f0f\u5316\u4e86\uff0c\u53ef\u4ee5\u52a0\u4e0a --check \u9009\u9879\uff0cBlack\u5c06\u53ea\u68c0\u67e5\u683c\u5f0f\u800c\u4e0d\u8fdb\u884c\u5b9e\u9645\u7684\u4fee\u6539\u3002 black --check .","title":"3. \u81ea\u52a8\u9012\u5f52"},{"location":"06-third-part-lib/009-Black/#4_1","text":"\u5982\u679c\u60f3\u67e5\u770b\u683c\u5f0f\u5316\u524d\u540e\u7684\u5177\u4f53\u5dee\u5f02\uff0c\u53ef\u4ee5\u4f7f\u7528 --diff \u9009\u9879\uff1a black --diff . \u8fd9\u4e2a\u9009\u9879\u4f1a\u663e\u793a\u683c\u5f0f\u5316\u524d\u540e\u7684\u5dee\u5f02\uff0c\u4f46\u5e76\u4e0d\u4f1a\u5b9e\u9645\u4fee\u6539\u6587\u4ef6\u3002","title":"4. \u68c0\u67e5\u683c\u5f0f\u5dee\u5f02"},{"location":"06-third-part-lib/009-Black/#5","text":"\u8bb8\u591a\u4ee3\u7801\u7f16\u8f91\u5668\u90fd\u652f\u6301Black\u7684\u96c6\u6210\uff0c\u4f7f\u5f97\u5728\u7f16\u8f91\u5668\u4e2d\u76f4\u63a5\u5e94\u7528\u683c\u5f0f\u5316\u53d8\u5f97\u66f4\u52a0\u65b9\u4fbf\u3002\u4f8b\u5982\uff0c\u5728VSCode\u4e2d\uff0c\u53ef\u4ee5\u5b89\u88c5\u63d2\u4ef6\u5e76\u914d\u7f6e\u4ee5\u5728\u4fdd\u5b58\u6587\u4ef6\u65f6\u81ea\u52a8\u8fd0\u884cBlack\u3002","title":"5. \u5728\u7f16\u8f91\u5668\u4e2d\u4f7f\u7528"},{"location":"06-third-part-lib/009-Black/#black_3","text":"Black\u4f5c\u4e3a\u4e00\u6b3e\u5f3a\u5927\u7684Python\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u57fa\u672c\u7684\u683c\u5f0f\u5316\u529f\u80fd\uff0c\u8fd8\u652f\u6301\u4e00\u4e9b\u9ad8\u7ea7\u7279\u6027\uff0c\u4f7f\u5176\u66f4\u52a0\u7075\u6d3b\u548c\u9002\u5e94\u4e0d\u540c\u7684\u9879\u76ee\u9700\u6c42\u3002","title":"Black\u7684\u7279\u6027"},{"location":"06-third-part-lib/009-Black/#1","text":"Black\u5141\u8bb8\u4f60\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u6765\u6307\u5b9a\u8981\u5ffd\u7565\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u4ee5\u4fbf\u5728\u683c\u5f0f\u5316\u65f6\u6392\u9664\u7279\u5b9a\u7684\u90e8\u5206\u3002\u5728 pyproject.toml \u4e2d\u4f7f\u7528 exclude \u9009\u9879\uff1a # pyproject.toml [tool.black] exclude = ''' /tests/ /docs/ ''' \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cBlack\u5c06\u5ffd\u7565\u9879\u76ee\u4e2d\u7684 /tests/ \u548c /docs/ \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u3002","title":"1. \u5ffd\u7565\u6587\u4ef6\u548c\u76ee\u5f55"},{"location":"06-third-part-lib/009-Black/#2_1","text":"\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u8f7b\u677e\u5730\u8c03\u6574Black\u7684\u4e00\u4e9b\u683c\u5f0f\u5316\u8bbe\u7f6e\uff0c\u5982\u884c\u5bbd\u5ea6\u548c\u7f29\u8fdb\u3002\u4f8b\u5982\uff0c\u5c06\u884c\u5bbd\u5ea6\u8bbe\u7f6e\u4e3a120\uff0c\u4f7f\u7528\u5236\u8868\u7b26\u800c\u4e0d\u662f\u7a7a\u683c\uff1a # pyproject.toml [tool.black] line-length = 120 use-tabs = true \u8fd9\u4e2a\u914d\u7f6e\u5c06\u4f7fBlack\u5728\u683c\u5f0f\u5316\u65f6\u5c06\u884c\u5bbd\u5ea6\u9650\u5236\u4e3a120\u4e2a\u5b57\u7b26\uff0c\u5e76\u4f7f\u7528\u5236\u8868\u7b26\u8fdb\u884c\u7f29\u8fdb\u3002","title":"2. \u81ea\u5b9a\u4e49\u884c\u5bbd\u548c\u7f29\u8fdb"},{"location":"06-third-part-lib/009-Black/#3_2","text":"Black\u4e0e\u8bb8\u591a\u6d41\u884c\u7684\u4ee3\u7801\u7f16\u8f91\u5668\u96c6\u6210\u5f97\u5f88\u597d\u3002\u5728\u8bb8\u591a\u7f16\u8f91\u5668\u4e2d\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u4f7fBlack\u5728\u4fdd\u5b58\u6587\u4ef6\u65f6\u81ea\u52a8\u8fd0\u884c\u3002\u4ee5VSCode\u4e3a\u4f8b\uff0c\u5728 settings.json \u6587\u4ef6\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\uff1a // settings.json \"editor.formatOnSave\": true, \"python.formatting.provider\": \"black\" \u8fd9\u6837\u914d\u7f6e\u540e\uff0c\u6bcf\u6b21\u4fdd\u5b58Python\u6587\u4ef6\u65f6\uff0cBlack\u90fd\u4f1a\u81ea\u52a8\u683c\u5f0f\u5316\u4ee3\u7801\u3002","title":"3. \u7f16\u8f91\u5668\u96c6\u6210"},{"location":"06-third-part-lib/009-Black/#4_2","text":"\u9664\u4e86\u914d\u7f6e\u6587\u4ef6\u4e4b\u5916\uff0cBlack\u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u547d\u4ee4\u884c\u9009\u9879\uff0c\u5141\u8bb8\u4f60\u5728\u8fd0\u884c\u65f6\u8986\u76d6\u7279\u5b9a\u7684\u8bbe\u7f6e\u3002\u4f8b\u5982\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 --check \u9009\u9879\u6765\u68c0\u67e5\u4ee3\u7801\u662f\u5426\u7b26\u5408Black\u7684\u683c\u5f0f\uff0c\u800c\u4e0d\u8fdb\u884c\u5b9e\u9645\u7684\u683c\u5f0f\u5316\u3002 black --check .","title":"4. \u989d\u5916\u7684\u547d\u4ee4\u884c\u9009\u9879"},{"location":"06-third-part-lib/009-Black/#5_1","text":"Black\u7684\u683c\u5f0f\u5316\u8f93\u51fa\u901a\u5e38\u4f1a\u4fee\u6539\u6587\u4ef6\uff0c\u56e0\u6b64\u5728\u7248\u672c\u63a7\u5236\u4e2d\u4f7f\u7528\u65f6\u9700\u8981\u5c0f\u5fc3\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 --diff \u9009\u9879\u6765\u67e5\u770b\u683c\u5f0f\u5316\u524d\u540e\u7684\u5dee\u5f02\uff0c\u800c\u4e0d\u5b9e\u9645\u4fee\u6539\u6587\u4ef6\uff1a black --diff . \u8fd9\u80fd\u591f\u5728\u63d0\u4ea4\u4ee3\u7801\u4e4b\u524d\u68c0\u67e5\u6f5c\u5728\u7684\u66f4\u6539\u3002 \u901a\u8fc7\u6df1\u5165\u4e86\u89e3Black\u7684\u9ad8\u7ea7\u7279\u6027\uff0c\u4f60\u53ef\u4ee5\u66f4\u597d\u5730\u5b9a\u5236\u5de5\u5177\u4ee5\u9002\u5e94\u4f60\u7684\u9879\u76ee\u9700\u6c42\u3002\u8fd9\u4e9b\u7279\u6027\u4f7fBlack\u6210\u4e3a\u4e00\u4e2a\u5f3a\u5927\u800c\u7075\u6d3b\u7684\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u9002\u7528\u4e8e\u5404\u79cdPython\u9879\u76ee\u3002","title":"5. \u5728\u7248\u672c\u63a7\u5236\u4e2d\u4f7f\u7528"},{"location":"06-third-part-lib/009-Black/#black_4","text":"Black\u3001YAPF\u548cautopep8\u90fd\u662fPython\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u5b83\u4eec\u5404\u81ea\u6709\u7740\u72ec\u7279\u7684\u8bbe\u8ba1\u7406\u5ff5\u548c\u7279\u70b9\u3002\u4ee5\u4e0b\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u4e00\u4e9b\u6bd4\u8f83\uff1a","title":"Black\u4e0e\u5176\u4ed6\u683c\u5f0f\u5316\u5de5\u5177\u7684\u6bd4\u8f83"},{"location":"06-third-part-lib/009-Black/#1_1","text":"Black\uff1a Black\u7684\u8bbe\u8ba1\u7406\u5ff5\u5f3a\u8c03\u4e00\u81f4\u6027\u548c\u7b80\u6d01\u3002\u5b83\u91c7\u7528\u4e86\u4e00\u79cd\u201c\u4e0d\u5bb9\u5546\u91cf\u201d\u7684\u65b9\u5f0f\uff0c\u901a\u8fc7\u5f3a\u5236\u4e00\u79cd\u56fa\u5b9a\u7684\u4ee3\u7801\u98ce\u683c\u6765\u51cf\u5c11\u5f00\u53d1\u8005\u4e4b\u95f4\u7684\u4e89\u8bba\uff0c\u786e\u4fdd\u6574\u4e2a\u9879\u76ee\u7684\u4ee3\u7801\u5177\u6709\u4e00\u81f4\u6027\u3002 YAPF\uff1a YAPF\uff08Yet Another Python Formatter\uff09\u4e5f\u6ce8\u91cd\u4e00\u81f4\u6027\uff0c\u4f46\u76f8\u5bf9\u4e8eBlack\uff0c\u5b83\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u914d\u7f6e\u9009\u9879\uff0c\u5141\u8bb8\u7528\u6237\u6839\u636e\u81ea\u5df1\u7684\u504f\u597d\u8c03\u6574\u683c\u5f0f\u5316\u7684\u7ec6\u8282\u3002 autopep8\uff1a autopep8\u7684\u76ee\u6807\u662f\u81ea\u52a8\u4fee\u590dPEP 8\u89c4\u8303\u4e2d\u7684\u95ee\u9898\u3002\u5b83\u4fa7\u91cd\u4e8e\u901a\u8fc7\u8c03\u6574\u7a7a\u683c\u3001\u7f29\u8fdb\u7b49\u65b9\u5f0f\u6765\u4f7f\u4ee3\u7801\u7b26\u5408PEP 8\u6807\u51c6\uff0c\u4f46\u5e76\u4e0d\u5f3a\u5236\u4e00\u79cd\u7279\u5b9a\u7684\u98ce\u683c\u3002","title":"1. \u8bbe\u8ba1\u7406\u5ff5"},{"location":"06-third-part-lib/009-Black/#2_2","text":"Black\uff1a Black\u7684\u914d\u7f6e\u9009\u9879\u76f8\u5bf9\u8f83\u5c11\u3002\u5b83\u66f4\u503e\u5411\u4e8e\u91c7\u7528\u4e00\u7ec4\u9ed8\u8ba4\u7684\u98ce\u683c\u89c4\u5219\uff0c\u4ee5\u7b80\u5316\u914d\u7f6e\uff0c\u5e76\u9f13\u52b1\u9879\u76ee\u4e2d\u6240\u6709\u7684\u4ee3\u7801\u90fd\u91c7\u7528\u76f8\u540c\u7684\u98ce\u683c\u3002 YAPF\uff1a YAPF\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u914d\u7f6e\u9009\u9879\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u7cbe\u7ec6\u8c03\u6574\u683c\u5f0f\u5316\u7684\u884c\u4e3a\u3002\u8fd9\u4f7f\u5f97YAPF\u66f4\u52a0\u9002\u7528\u4e8e\u90a3\u4e9b\u9700\u8981\u9ad8\u5ea6\u5b9a\u5236\u7684\u9879\u76ee\u3002 autopep8\uff1a autopep8\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u914d\u7f6e\u9009\u9879\uff0c\u5141\u8bb8\u7528\u6237\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8c03\u6574\u683c\u5f0f\u5316\u89c4\u5219\uff0c\u4f46\u76f8\u8f83\u4e8eYAPF\uff0c\u5b83\u7684\u914d\u7f6e\u76f8\u5bf9\u7b80\u5355\u3002","title":"2. \u914d\u7f6e\u9009\u9879"},{"location":"06-third-part-lib/009-Black/#3_3","text":"Black\uff1a Black\u7684\u81ea\u52a8\u5316\u7a0b\u5ea6\u975e\u5e38\u9ad8\u3002\u5b83\u51e0\u4e4e\u6ca1\u6709\u4eba\u4e3a\u5e72\u9884\u7684\u4f59\u5730\uff0c\u901a\u8fc7\u8fd0\u884c\u4e00\u6b21\u547d\u4ee4\u5373\u53ef\u5b8c\u6210\u6574\u4e2a\u9879\u76ee\u7684\u4ee3\u7801\u683c\u5f0f\u5316\u3002 YAPF\uff1a YAPF\u5728\u81ea\u52a8\u5316\u7a0b\u5ea6\u4e0a\u4e5f\u5f88\u9ad8\uff0c\u4f46\u76f8\u5bf9\u4e8eBlack\uff0c\u5b83\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u914d\u7f6e\u9009\u9879\uff0c\u4f7f\u7528\u6237\u53ef\u4ee5\u66f4\u7075\u6d3b\u5730\u8c03\u6574\u4ee3\u7801\u98ce\u683c\u3002 autopep8\uff1a autopep8\u7684\u81ea\u52a8\u5316\u7a0b\u5ea6\u8f83\u9ad8\uff0c\u4f46\u7528\u6237\u5728\u4f7f\u7528\u65f6\u4ecd\u6709\u4e00\u5b9a\u7684\u63a7\u5236\u6743\uff0c\u53ef\u4ee5\u9009\u62e9\u6027\u5730\u5e94\u7528\u6216\u5ffd\u7565\u67d0\u4e9b\u4fee\u590d\u3002","title":"3. \u81ea\u52a8\u5316\u7a0b\u5ea6"},{"location":"06-third-part-lib/009-Black/#4_3","text":"Black\uff1a Black\u5728\u901f\u5ea6\u4e0a\u901a\u5e38\u8f83\u5feb\uff0c\u5c24\u5176\u662f\u5bf9\u4e8e\u5927\u578b\u9879\u76ee\u3002\u5b83\u901a\u8fc7\u5f3a\u5236\u4e00\u81f4\u7684\u89c4\u5219\u6765\u63d0\u9ad8\u5904\u7406\u901f\u5ea6\u3002 YAPF\uff1a YAPF\u7684\u901f\u5ea6\u4e5f\u8f83\u5feb\uff0c\u4f46\u7531\u4e8e\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u914d\u7f6e\u9009\u9879\uff0c\u53ef\u80fd\u5728\u5904\u7406\u590d\u6742\u683c\u5f0f\u65f6\u7a0d\u663e\u8017\u65f6\u3002 autopep8\uff1a autopep8\u901a\u5e38\u4e5f\u80fd\u591f\u5feb\u901f\u5904\u7406\u683c\u5f0f\u5316\uff0c\u4f46\u5728\u5904\u7406\u590d\u6742\u4ee3\u7801\u65f6\u53ef\u80fd\u7565\u663e\u7f13\u6162\u3002","title":"4. \u901f\u5ea6"},{"location":"06-third-part-lib/009-Black/#5_2","text":"Black\uff1a Black\u5728Python\u793e\u533a\u4e2d\u9010\u6e10\u83b7\u5f97\u4e86\u5e7f\u6cdb\u7684\u8ba4\u53ef\uff0c\u5f97\u5230\u4e86\u8bb8\u591a\u9879\u76ee\u7684\u91c7\u7528\uff0c\u5e76\u4e14\u5176\u5f00\u53d1\u4ecd\u7136\u975e\u5e38\u6d3b\u8dc3\u3002 YAPF\uff1a YAPF\u540c\u6837\u53d7\u5230\u4e86\u8f83\u591a\u9879\u76ee\u7684\u9752\u7750\uff0c\u5177\u6709\u4e00\u5b9a\u7684\u793e\u533a\u652f\u6301\u548c\u6d3b\u8dc3\u5ea6\u3002 autopep8\uff1a autopep8\u4f5c\u4e3a\u4e00\u4e2a\u89e3\u51b3PEP 8\u89c4\u8303\u7684\u5de5\u5177\uff0c\u4e5f\u5f97\u5230\u4e86\u5e7f\u6cdb\u7684\u5e94\u7528\uff0c\u4f46\u5728\u4e00\u4e9b\u65b0\u9879\u76ee\u4e2d\u53ef\u80fd\u53d7\u5230Black\u548cYAPF\u7684\u7ade\u4e89\u3002","title":"5. \u793e\u533a\u652f\u6301\u4e0e\u6d3b\u8dc3\u5ea6"},{"location":"06-third-part-lib/009-Black/#_3","text":"Black\u4f5c\u4e3a\u4e00\u6b3ePython\u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177\uff0c\u5728\u9879\u76ee\u4e2d\u6709\u5176\u72ec\u7279\u7684\u4f18\u52bf\u3002\u5176\u8bbe\u8ba1\u7406\u5ff5\u6ce8\u91cd\u4e00\u81f4\u6027\u548c\u7b80\u6d01\uff0c\u901a\u8fc7\u5f3a\u5236\u4e00\u79cd\u89c4\u8303\u7684\u4ee3\u7801\u98ce\u683c\uff0c\u51cf\u5c11\u4e86\u5f00\u53d1\u8005\u95f4\u7684\u4e89\u8bae\uff0c\u63d0\u9ad8\u4e86\u6574\u4f53\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u3002Black\u7684\u81ea\u52a8\u5316\u7a0b\u5ea6\u6781\u9ad8\uff0c\u7b80\u5355\u7684\u547d\u4ee4\u5373\u53ef\u5b8c\u6210\u6574\u4e2a\u9879\u76ee\u7684\u4ee3\u7801\u683c\u5f0f\u5316\uff0c\u4f7f\u5f97\u56e2\u961f\u80fd\u591f\u66f4\u8f7b\u677e\u5730\u7ef4\u6301\u4e00\u81f4\u7684\u4ee3\u7801\u89c4\u8303\u3002 \u76f8\u8f83\u4e8e\u5176\u4ed6\u683c\u5f0f\u5316\u5de5\u5177\u5982YAPF\u548cautopep8\uff0cBlack\u5728\u901f\u5ea6\u4e0a\u8868\u73b0\u51fa\u8272\uff0c\u7279\u522b\u9002\u5408\u5904\u7406\u5927\u578b\u9879\u76ee\u3002\u5c3d\u7ba1\u914d\u7f6e\u9009\u9879\u76f8\u5bf9\u8f83\u5c11\uff0c\u4f46\u8fd9\u4e5f\u6709\u52a9\u4e8e\u9879\u76ee\u5185\u90e8\u7684\u4e00\u81f4\u6027\u3002Black\u5728Python\u793e\u533a\u4e2d\u5f97\u5230\u5e7f\u6cdb\u8ba4\u53ef\uff0c\u8d8a\u6765\u8d8a\u591a\u7684\u9879\u76ee\u91c7\u7528\u5b83\u4f5c\u4e3a\u9996\u9009\u683c\u5f0f\u5316\u5de5\u5177\u3002\u7136\u800c\uff0c\u5bf9\u4e8e\u4e00\u4e9b\u9700\u8981\u66f4\u591a\u5b9a\u5236\u9009\u9879\u7684\u9879\u76ee\uff0cYAPF\u548cautopep8\u53ef\u80fd\u66f4\u4e3a\u9002\u7528\u3002 \u5728\u9009\u62e9\u683c\u5f0f\u5316\u5de5\u5177\u65f6\uff0c\u56e2\u961f\u5e94\u6743\u8861\u5de5\u5177\u7684\u81ea\u52a8\u5316\u7a0b\u5ea6\u3001\u7075\u6d3b\u6027\u4ee5\u53ca\u4e0e\u9879\u76ee\u9700\u6c42\u7684\u5951\u5408\u5ea6\u3002Black\u7684\u7b80\u6d01\u548c\u9ad8\u6548\u4f7f\u5176\u6210\u4e3a\u8bb8\u591a\u56e2\u961f\u7684\u9009\u62e9\uff0c\u4e3a\u9879\u76ee\u63d0\u4f9b\u4e86\u4e00\u81f4\u7684\u3001\u6613\u8bfb\u7684\u4ee3\u7801\u98ce\u683c\u3002","title":"\u603b\u7ed3"},{"location":"06-third-part-lib/009-Black/#_4","text":"http://ipengtao.com/1013.html","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"06-third-part-lib/01-Detect%20mobile%20devices%20with%20Django%20and%20Python%203/","text":"Detect mobile devices with Django and Python 3 \u00b6 \u5982\u4f55\u5728 python3 + django \u4e0b\u68c0\u6d4b\u79fb\u52a8\u7aef\u8bbe\u5907\uff1f \u00b6 ctime: 2021-08-30 mtime: 2024-03-25 \u539f\u6587\u94fe\u63a5\uff1a https://stackoverflow.com/questions/42273319/detect-mobile-devices-with-django-and-python-3 \u5728 Django \u548c python3 \u5982\u4f55\u76d1\u6d4b\u79fb\u52a8\u7aef\u8bbe\u5907\uff1f\u89e3\u51b3\uff1a\u4f7f\u7528\u5e93 django user agents \u6216\u8005\u76f4\u63a5\u6b63\u5219\u8868\u8fbe\u5f0f\u5224\u65ad\u7528\u6237\u4ee3\u7406\u3002 \u95ee\u9898 \u00b6 I am struggling to find an easy way to detect if the request comes from a mobile device in my Django views. I am trying to implement something like this: #views.py def myfunction ( request ): ... if request . mobile : is_mobile = True else : is_mobile = False context = { ... , 'is_mobile' : is_mobile , } return render ( request , 'mytemplate.html' , context ) And in mytemplate.html : {% if is_mobile %} show something {% else %} show something else {% endif %} Everywhere I checked (for instance here or here ), minidetector is recommended. I have installed different versions: pip install minidetector , pip install minidetector2 , as well as directly a couple of github repositories, but none of them are compatible with Python 3. \u5728 python 2 \u4e2d\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u4e24\u4e2a\u5e93\uff0c\u4f46\u662f python3 \u4e2d\u4e0d\u80fd\u4f7f\u7528\u8fd9\u4e24\u4e2a\u5e93\u4e86\u3002\u600e\u4e48\u5904\u7406\uff1f So here my question: Is there any version/fork of minidetector that is compatible with Python 3? If not, what are the alternatives? \u89e3\u51b3 \u00b6 Django User Agents package is compatible with Python 3. \u4f7f\u7528 django user agents \u5305\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff08\u4e2d\u95f4\u4ef6\uff09 def my_view ( request ): # Let's assume that the visitor uses an iPhone... request . user_agent . is_mobile # returns True request . user_agent . is_tablet # returns False request . user_agent . is_touch_capable # returns True request . user_agent . is_pc # returns False request . user_agent . is_bot # returns False # Accessing user agent's browser attributes request . user_agent . browser # returns Browser(family=u'Mobile Safari', version=(5, 1), version_string='5.1') request . user_agent . browser . family # returns 'Mobile Safari' request . user_agent . browser . version # returns (5, 1) request . user_agent . browser . version_string # returns '5.1' # Operating System properties request . user_agent . os # returns OperatingSystem(family=u'iOS', version=(5, 1), version_string='5.1') request . user_agent . os . family # returns 'iOS' request . user_agent . os . version # returns (5, 1) request . user_agent . os . version_string # returns '5.1' # Device properties request . user_agent . device # returns Device(family='iPhone') request . user_agent . device . family # returns 'iPhone' The usage in template is as follows: {% if request.user_agent.is_mobile %} Do stuff here... {% endif %} However, note that the middleware class has changed in Django 1.10. So if you are using Django 1.10 +, you will have to modify the middleware class definition in this Package as given in this GitHub issue tracker page . \u89e3\u51b3 \u00b6 I found an alternative way, starting from this answer . By adding an additional function into views.py : \u76f4\u63a5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u9a8c\u8bc1 request import re def mobile ( request ): \"\"\"Return True if the request comes from a mobile device.\"\"\" MOBILE_AGENT_RE = re . compile ( r \".*(iphone|mobile|androidtouch)\" , re . IGNORECASE ) if MOBILE_AGENT_RE . match ( request . META [ 'HTTP_USER_AGENT' ]): return True else : return False def myfunction ( request ): ... if mobile ( request ): is_mobile = True else : is_mobile = False context = { ... , 'is_mobile' : is_mobile , } return render ( request , 'mytemplate.html' , context )","title":"01-Detect mobile devices with Django and Python 3"},{"location":"06-third-part-lib/01-Detect%20mobile%20devices%20with%20Django%20and%20Python%203/#detect-mobile-devices-with-django-and-python-3","text":"","title":"Detect mobile devices with Django and Python 3"},{"location":"06-third-part-lib/01-Detect%20mobile%20devices%20with%20Django%20and%20Python%203/#python3-django","text":"ctime: 2021-08-30 mtime: 2024-03-25 \u539f\u6587\u94fe\u63a5\uff1a https://stackoverflow.com/questions/42273319/detect-mobile-devices-with-django-and-python-3 \u5728 Django \u548c python3 \u5982\u4f55\u76d1\u6d4b\u79fb\u52a8\u7aef\u8bbe\u5907\uff1f\u89e3\u51b3\uff1a\u4f7f\u7528\u5e93 django user agents \u6216\u8005\u76f4\u63a5\u6b63\u5219\u8868\u8fbe\u5f0f\u5224\u65ad\u7528\u6237\u4ee3\u7406\u3002","title":"\u5982\u4f55\u5728 python3 + django \u4e0b\u68c0\u6d4b\u79fb\u52a8\u7aef\u8bbe\u5907\uff1f"},{"location":"06-third-part-lib/01-Detect%20mobile%20devices%20with%20Django%20and%20Python%203/#_1","text":"I am struggling to find an easy way to detect if the request comes from a mobile device in my Django views. I am trying to implement something like this: #views.py def myfunction ( request ): ... if request . mobile : is_mobile = True else : is_mobile = False context = { ... , 'is_mobile' : is_mobile , } return render ( request , 'mytemplate.html' , context ) And in mytemplate.html : {% if is_mobile %} show something {% else %} show something else {% endif %} Everywhere I checked (for instance here or here ), minidetector is recommended. I have installed different versions: pip install minidetector , pip install minidetector2 , as well as directly a couple of github repositories, but none of them are compatible with Python 3. \u5728 python 2 \u4e2d\u53ef\u4ee5\u4f7f\u7528\u4e0a\u9762\u4e24\u4e2a\u5e93\uff0c\u4f46\u662f python3 \u4e2d\u4e0d\u80fd\u4f7f\u7528\u8fd9\u4e24\u4e2a\u5e93\u4e86\u3002\u600e\u4e48\u5904\u7406\uff1f So here my question: Is there any version/fork of minidetector that is compatible with Python 3? If not, what are the alternatives?","title":"\u95ee\u9898"},{"location":"06-third-part-lib/01-Detect%20mobile%20devices%20with%20Django%20and%20Python%203/#_2","text":"Django User Agents package is compatible with Python 3. \u4f7f\u7528 django user agents \u5305\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff08\u4e2d\u95f4\u4ef6\uff09 def my_view ( request ): # Let's assume that the visitor uses an iPhone... request . user_agent . is_mobile # returns True request . user_agent . is_tablet # returns False request . user_agent . is_touch_capable # returns True request . user_agent . is_pc # returns False request . user_agent . is_bot # returns False # Accessing user agent's browser attributes request . user_agent . browser # returns Browser(family=u'Mobile Safari', version=(5, 1), version_string='5.1') request . user_agent . browser . family # returns 'Mobile Safari' request . user_agent . browser . version # returns (5, 1) request . user_agent . browser . version_string # returns '5.1' # Operating System properties request . user_agent . os # returns OperatingSystem(family=u'iOS', version=(5, 1), version_string='5.1') request . user_agent . os . family # returns 'iOS' request . user_agent . os . version # returns (5, 1) request . user_agent . os . version_string # returns '5.1' # Device properties request . user_agent . device # returns Device(family='iPhone') request . user_agent . device . family # returns 'iPhone' The usage in template is as follows: {% if request.user_agent.is_mobile %} Do stuff here... {% endif %} However, note that the middleware class has changed in Django 1.10. So if you are using Django 1.10 +, you will have to modify the middleware class definition in this Package as given in this GitHub issue tracker page .","title":"\u89e3\u51b3"},{"location":"06-third-part-lib/01-Detect%20mobile%20devices%20with%20Django%20and%20Python%203/#_3","text":"I found an alternative way, starting from this answer . By adding an additional function into views.py : \u76f4\u63a5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u9a8c\u8bc1 request import re def mobile ( request ): \"\"\"Return True if the request comes from a mobile device.\"\"\" MOBILE_AGENT_RE = re . compile ( r \".*(iphone|mobile|androidtouch)\" , re . IGNORECASE ) if MOBILE_AGENT_RE . match ( request . META [ 'HTTP_USER_AGENT' ]): return True else : return False def myfunction ( request ): ... if mobile ( request ): is_mobile = True else : is_mobile = False context = { ... , 'is_mobile' : is_mobile , } return render ( request , 'mytemplate.html' , context )","title":"\u89e3\u51b3"},{"location":"06-third-part-lib/010-pypinyin/","text":"010-pypinyin\uff1a\u6c49\u5b57\u62fc\u97f3\u8f6c\u6362\u5de5\u5177 Python \u7248 \u00b6 \u5b98\u65b9\u94fe\u63a5\uff1a https://pypi.org/project/pypinyin/ \u9879\u76ee\u5730\u5740\uff1a https://github.com/mozillazg/python-pinyin \u4e2d\u6587\u535a\u5ba2\uff1a https://mp.weixin.qq.com/s/ByhjX_6ugsfsdQiqkH-FoA \u4ec0\u4e48\u662f pypinyin \u00b6 pypinyin \u662f\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684 Python \u5e93\uff0c\u7528\u4e8e\u5c06\u6c49\u5b57\u8f6c\u6362\u4e3a\u62fc\u97f3\u3002\u5b83\u53ef\u4ee5\u6839\u636e\u6c49\u5b57\u8f93\u51fa\u5bf9\u5e94\u7684\u62fc\u97f3\uff0c\u5e76\u652f\u6301\u591a\u97f3\u5b57\u548c\u8c03\u5f0f\u9009\u9879\u3002 pypinyin \u5df2\u7ecf\u5728\u8bb8\u591a\u6c49\u8bed\u5904\u7406\u9879\u76ee\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u8bc1\u660e\u4e86\u5b83\u7684\u5b9e\u7528\u6027\u548c\u7a33\u5b9a\u6027\u3002\u5b83\u7684\u51fa\u73b0\u5927\u5927\u7b80\u5316\u4e86\u5904\u7406\u4e2d\u6587\u6570\u636e\u7684\u590d\u6742\u6027\uff0c\u63d0\u9ad8\u4e86\u5f00\u53d1\u8005\u5de5\u4f5c\u7684\u6548\u7387\u3002 \u652f\u6301 Python 3.x \u7248\u672c\u3002 \u867d\u7136\u8fd8\u6709\u5176\u4ed6\u4e00\u4e9b\u5e93\u63d0\u4f9b\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4f8b\u5982 jieba \u5185\u5d4c\u6709\u62fc\u97f3\u8f6c\u6362\u529f\u80fd\uff0c\u4f46 pypinyin \u4ee5\u5176\u4e13\u6ce8\u9ad8\u6548\u7684\u7279\u70b9\u8131\u9896\u800c\u51fa\uff0c\u5e76\u4e14\u7531\u4e8e\u5b83\u7b80\u5355\u6613\u7528\u800c\u83b7\u5f97\u9752\u7750\u3002 \u5b89\u88c5 \u00b6 pip install pypinyin \u57fa\u672c\u7528\u6cd5 \u00b6 \u4f7f\u7528 pypinyin \u975e\u5e38\u76f4\u89c2\uff0c\u51fd\u6570\u8c03\u7528\u7b80\u5355\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u793a\u4f8b\u4ee3\u7801\u6765\u770b\u770b\u5b83\u7684\u57fa\u672c\u7528\u6cd5\u3002 \u5bfc\u5165\u5e93\uff1a from pypinyin import pinyin , lazy_pinyin \u5c06\u4e00\u4e2a\u6c49\u5b57\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u62fc\u97f3\u5217\u8868\uff1a hanzi = '\u6c49\u5b57\u8f6c\u62fc\u97f3\u771f\u65b9\u4fbf\uff01' pinyin_list = pinyin ( hanzi ) print ( pinyin_list ) \u6267\u884c\u7ed3\u679c\uff1a [[ 'h\u00e0n' ], [ 'z\u00ec' ], [ 'zhu\u01cen' ], [ 'p\u012bn' ], [ 'y\u012bn' ], [ 'zh\u0113n' ], [ 'f\u0101ng' ], [ 'bi\u00e0n' ], [ '\uff01' ]] \u6bcf\u4e2a\u6c49\u5b57\u7684\u62fc\u97f3\u88ab\u653e\u5728\u4e00\u4e2a\u5c0f\u5217\u8868\u91cc\uff0c\u591a\u97f3\u5b57\u4e5f\u80fd\u5f97\u5230\u6b63\u786e\u7684\u62fc\u97f3\u3002 \u5982\u679c\u4f60\u53ea\u9700\u8981\u62fc\u97f3\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u800c\u4e0d\u662f\u5d4c\u5957\u5217\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 lazy_pinyin \u65b9\u6cd5\uff1a pinyin_str_list = lazy_pinyin ( hanzi ) print ( pinyin_str_list ) \u6267\u884c\u7ed3\u679c\uff1a [ 'han' , 'zi' , 'zhuan' , 'pin' , 'yin' , 'zhen' , 'fang' , 'bian' , '\uff01' ] \u591a\u97f3\u5b57\u5904\u7406 \u00b6 \u5bf9\u4e8e\u591a\u97f3\u5b57\uff0cpypinyin \u8fd8\u53ef\u4ee5\u6839\u636e\u4e0a\u4e0b\u6587\u667a\u80fd\u8bc6\u522b\u6b63\u786e\u7684\u8bfb\u97f3\uff1a sentence = '\u91cd\u9633\u8282\u7684\u91cd\uff0c\u548c\u91cd\u91cf\u7684\u91cd\uff0c\u8bfb\u97f3\u4e0d\u4e00\u6837\u3002' for word in pinyin ( sentence , heteronym = True ): # heteronym \u53c2\u6570\u542f\u7528\u591a\u97f3\u5b57\u6a21\u5f0f print ( word ) \u6267\u884c\u7ed3\u679c\uff1a [ 'ch\u00f3ng' ] [ 'y\u00e1ng' ] [ 'ji\u00e9' , 'ji\u0113' ] [ 'de' , 'd\u012b' , 'd\u00ed' , 'd\u00ec' ] [ 'zh\u00f2ng' , 'ch\u00f3ng' , 't\u00f3ng' ] [ '\uff0c' ] [ 'h\u00e9' , 'h\u00e8' , 'h\u00fa' , 'hu\u00f3' , 'hu\u00f2' , 'huo' ] [ 'zh\u00f2ng' ] [ 'li\u00e0ng' ] [ 'de' , 'd\u012b' , 'd\u00ed' , 'd\u00ec' ] [ 'zh\u00f2ng' , 'ch\u00f3ng' , 't\u00f3ng' ] [ '\uff0c' ] [ 'd\u00fa' ] [ 'y\u012bn' ] [ 'b\u00f9' ] [ 'y\u00ed' ] [ 'y\u00e0ng' ] [ '\u3002' ] \u62fc\u97f3\u98ce\u683c \u00b6 pypinyin \u652f\u6301\u591a\u79cd\u98ce\u683c\u7684\u62fc\u97f3\u5448\u73b0\uff0c\u6bd4\u5982 TONAL\uff08\u5e26\u58f0\u8c03\u7684\u62fc\u97f3\uff09\uff0c INITIALS\uff08\u58f0\u6bcd\uff09\uff0c NORMAL\uff08\u4e0d\u5e26\u58f0\u8c03\u7684\u62fc\u97f3\uff09\uff0c\u7b49\u7b49\u3002\u5c31\u50cf\u662f\u53d8\u5316\u591a\u7aef\u7684\u53d8\u8272\u9f99\uff0c\u4ee5\u9002\u5e94\u4f60\u7684\u4e0d\u540c\u9700\u6c42\u3002 from pypinyin import Style pinyin_initials = pinyin ( '\u62fc\u97f3' , style = Style . INITIALS , strict = False ) # \u58f0\u6bcd print ( pinyin_initials ) pinyin_normal = pinyin ( '\u62fc\u97f3' , style = Style . NORMAL ) # \u65e0\u58f0\u8c03 print ( pinyin_normal ) pinyin_tone = pinyin ( '\u62fc\u97f3' , style = Style . TONE ) # \u666e\u901a\u58f0\u8c03 print ( pinyin_tone ) pinyin_tone2 = pinyin ( '\u62fc\u97f3' , style = Style . TONE2 ) # \u6570\u5b57\u58f0\u8c03 print ( pinyin_tone2 ) \u6267\u884c\u7ed3\u679c\uff1a [[ 'p' ], [ 'y' ]] # \u58f0\u6bcd [[ 'pin' ], [ 'yin' ]] # \u65e0\u58f0\u8c03 [[ 'p\u012bn' ], [ 'y\u012bn' ]] # \u666e\u901a\u58f0\u8c03 [[ 'pi1n' ], [ 'yi1n' ]] # \u6570\u5b57\u58f0\u8c03 \u98ce\u683c\u4e3a\u58f0\u6bcd Style.INITIALS \u65f6\uff0c\u4e0d\u4f1a\u663e\u793a\u51fa y \uff0c\u56e0\u4e3a\u6839\u636e \u300a\u6c49\u8bed\u62fc\u97f3\u65b9\u6848\u300b \uff0c y \uff0c w \uff0c \u00fc (yu) \u90fd\u4e0d\u662f\u58f0\u6bcd\uff0c\u5728\u67d0\u4e9b\u7279\u5b9a\u97f5\u6bcd\u65e0\u58f0\u6bcd\u65f6\uff0c\u624d\u52a0\u4e0a y \u6216 w \uff0c\u800c \u00fc \u4e5f\u6709\u5176\u7279\u5b9a\u89c4\u5219\u3002 \u5982\u679c\u9700\u8981\u663e\u793a\uff0c\u5c31\u5c06 strict \u8bbe\u7f6e\u4e3a False \uff0c\u5982\u4e0a\u9762\u4f8b\u5b50\u6240\u793a\u3002 \u5b9a\u5236\u62fc\u97f3\u5e93 \u00b6 \u5982\u679c\u4f60\u6709\u7279\u6b8a\u9700\u6c42\uff0c\u6bd4\u5982\u67d0\u4e2a\u6c49\u5b57\u8f6c\u6362\u4e3a\u7279\u5b9a\u7684\u62fc\u97f3\uff0cpypinyin \u652f\u6301\u5b9a\u5236\u62fc\u97f3\u5e93\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a\u8bcd\u5178\u6765\u81ea\u5b9a\u4e49\u8bfb\u97f3\u3002 \u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u8bcd\u7ec4\u62fc\u97f3\u5e93\u6216\u8005\u5355\u5b57\u62fc\u97f3\u5e93\u7684\u65b9\u5f0f\u4fee\u6b63\u62fc\u97f3\u7ed3\u679c from pypinyin import load_phrases_dict , load_single_dict load_phrases_dict ({ '\u6854\u5b50' : [[ 'j\u00fa' ], [ 'z\u01d0' ]]}) # \u589e\u52a0 \"\u6854\u5b50\" \u8bcd\u7ec4 load_single_dict ({ ord ( '\u8fd8' ): 'h\u00e1i,hu\u00e1n' }) # \u8c03\u6574 \"\u8fd8\" \u5b57\u7684\u62fc\u97f3\u987a\u5e8f\u6216\u8986\u76d6\u9ed8\u8ba4\u62fc\u97f3 \u4e5f\u53ef\u4ee5\u4f7f\u7528 pypinyin-dict \u9879\u76ee\u63d0\u4f9b\u7684\u81ea\u5b9a\u4e49\u62fc\u97f3\u5e93\u6765\u7ea0\u6b63\u7ed3\u679c\u3002 # \u4f7f\u7528 phrase-pinyin-data \u9879\u76ee\u4e2d cc_cedict.txt \u6587\u4ef6\u4e2d\u7684\u62fc\u97f3\u6570\u636e\u4f18\u5316\u7ed3\u679c from pypinyin_dict.phrase_pinyin_data import cc_cedict cc_cedict . load () # \u4f7f\u7528 pinyin-data \u9879\u76ee\u4e2d kXHC1983.txt \u6587\u4ef6\u4e2d\u7684\u62fc\u97f3\u6570\u636e\u4f18\u5316\u7ed3\u679c from pypinyin_dict.pinyin_data import kxhc1983 kxhc1983 . load () CLI \u547d\u4ee4\u884c\u5de5\u5177 \u00b6 \u9664\u4e86\u5728 Python \u4ee3\u7801\u4e2d\u4f7f\u7528\uff0cpypinyin \u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u547d\u4ee4\u884c\u5de5\u5177\u4f7f\u7528\uff1a $ pypinyin \u97f3\u4e50 y\u012bn yu\u00e8 $ pypinyin -h \u5b9e\u8df5 \u00b6 \u73b0\u5728\uff0c\u6765\u70b9\u513f\u5b9e\u8df5\u73af\u8282\u5c06\u66f4\u5177\u6709\u5b66\u4e60\u6548\u679c\uff1a \u5c1d\u8bd5\u7528 pypinyin \u5c06\u4e00\u9996\u4e2d\u6587\u8bd7\u6b4c\u8f6c\u6362\u6210\u62fc\u97f3\u3002 \u5199\u4e00\u4e2a\u5c0f\u5de5\u5177\uff0c\u6bd4\u5982\u540d\u5b57\u751f\u6210\u5668\uff0c\u8f93\u5165\u4e2d\u6587\u540d\u5b57\uff0c\u81ea\u52a8\u751f\u6210\u5bf9\u5e94\u7684\u62fc\u97f3\u3002 \u8bf7\u5728\u4e0b\u5217\u4ee3\u7801\u7247\u6bb5\u4e2d\u8865\u5145\u4f60\u7684\u5b9e\u8df5\u5185\u5bb9\uff1a # \u5c06\u6307\u5b9a\u7684\u4e2d\u6587\u8bd7\u6b4c\u8f6c\u6362\u4e3a\u62fc\u97f3 poem = '\u5e8a\u524d\u660e\u6708\u5149\uff0c\u7591\u662f\u5730\u4e0a\u971c\u3002' poem_pinyin = pinyin ( poem ) print ( poem_pinyin ) # \u540d\u5b57\u751f\u6210\u5668 def name_to_pinyin ( name ): # \u8865\u5145\u4ee3\u7801\uff0c\u8fd4\u56de\u59d3\u540d\u7684\u62fc\u97f3 return lazy_pinyin ( name ) print ( name_to_pinyin ( '\u5f20\u4e09' )) \u76f8\u5173\u9879\u76ee \u00b6 hotoo/pinyin : \u6c49\u5b57\u62fc\u97f3\u8f6c\u6362\u5de5\u5177 Node.js/JavaScript \u7248\u3002 mozillazg/go-pinyin : \u6c49\u5b57\u62fc\u97f3\u8f6c\u6362\u5de5\u5177 Go \u7248\u3002 mozillazg/rust-pinyin : \u6c49\u5b57\u62fc\u97f3\u8f6c\u6362\u5de5\u5177 Rust \u7248\u3002","title":"010-pypinyin"},{"location":"06-third-part-lib/010-pypinyin/#010-pypinyin-python","text":"\u5b98\u65b9\u94fe\u63a5\uff1a https://pypi.org/project/pypinyin/ \u9879\u76ee\u5730\u5740\uff1a https://github.com/mozillazg/python-pinyin \u4e2d\u6587\u535a\u5ba2\uff1a https://mp.weixin.qq.com/s/ByhjX_6ugsfsdQiqkH-FoA","title":"010-pypinyin\uff1a\u6c49\u5b57\u62fc\u97f3\u8f6c\u6362\u5de5\u5177 Python \u7248"},{"location":"06-third-part-lib/010-pypinyin/#pypinyin","text":"pypinyin \u662f\u4e00\u4e2a\u975e\u5e38\u6d41\u884c\u7684 Python \u5e93\uff0c\u7528\u4e8e\u5c06\u6c49\u5b57\u8f6c\u6362\u4e3a\u62fc\u97f3\u3002\u5b83\u53ef\u4ee5\u6839\u636e\u6c49\u5b57\u8f93\u51fa\u5bf9\u5e94\u7684\u62fc\u97f3\uff0c\u5e76\u652f\u6301\u591a\u97f3\u5b57\u548c\u8c03\u5f0f\u9009\u9879\u3002 pypinyin \u5df2\u7ecf\u5728\u8bb8\u591a\u6c49\u8bed\u5904\u7406\u9879\u76ee\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\uff0c\u8bc1\u660e\u4e86\u5b83\u7684\u5b9e\u7528\u6027\u548c\u7a33\u5b9a\u6027\u3002\u5b83\u7684\u51fa\u73b0\u5927\u5927\u7b80\u5316\u4e86\u5904\u7406\u4e2d\u6587\u6570\u636e\u7684\u590d\u6742\u6027\uff0c\u63d0\u9ad8\u4e86\u5f00\u53d1\u8005\u5de5\u4f5c\u7684\u6548\u7387\u3002 \u652f\u6301 Python 3.x \u7248\u672c\u3002 \u867d\u7136\u8fd8\u6709\u5176\u4ed6\u4e00\u4e9b\u5e93\u63d0\u4f9b\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4f8b\u5982 jieba \u5185\u5d4c\u6709\u62fc\u97f3\u8f6c\u6362\u529f\u80fd\uff0c\u4f46 pypinyin \u4ee5\u5176\u4e13\u6ce8\u9ad8\u6548\u7684\u7279\u70b9\u8131\u9896\u800c\u51fa\uff0c\u5e76\u4e14\u7531\u4e8e\u5b83\u7b80\u5355\u6613\u7528\u800c\u83b7\u5f97\u9752\u7750\u3002","title":"\u4ec0\u4e48\u662f  pypinyin"},{"location":"06-third-part-lib/010-pypinyin/#_1","text":"pip install pypinyin","title":"\u5b89\u88c5"},{"location":"06-third-part-lib/010-pypinyin/#_2","text":"\u4f7f\u7528 pypinyin \u975e\u5e38\u76f4\u89c2\uff0c\u51fd\u6570\u8c03\u7528\u7b80\u5355\uff0c\u8ba9\u6211\u4eec\u901a\u8fc7\u4e00\u4e9b\u793a\u4f8b\u4ee3\u7801\u6765\u770b\u770b\u5b83\u7684\u57fa\u672c\u7528\u6cd5\u3002 \u5bfc\u5165\u5e93\uff1a from pypinyin import pinyin , lazy_pinyin \u5c06\u4e00\u4e2a\u6c49\u5b57\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u62fc\u97f3\u5217\u8868\uff1a hanzi = '\u6c49\u5b57\u8f6c\u62fc\u97f3\u771f\u65b9\u4fbf\uff01' pinyin_list = pinyin ( hanzi ) print ( pinyin_list ) \u6267\u884c\u7ed3\u679c\uff1a [[ 'h\u00e0n' ], [ 'z\u00ec' ], [ 'zhu\u01cen' ], [ 'p\u012bn' ], [ 'y\u012bn' ], [ 'zh\u0113n' ], [ 'f\u0101ng' ], [ 'bi\u00e0n' ], [ '\uff01' ]] \u6bcf\u4e2a\u6c49\u5b57\u7684\u62fc\u97f3\u88ab\u653e\u5728\u4e00\u4e2a\u5c0f\u5217\u8868\u91cc\uff0c\u591a\u97f3\u5b57\u4e5f\u80fd\u5f97\u5230\u6b63\u786e\u7684\u62fc\u97f3\u3002 \u5982\u679c\u4f60\u53ea\u9700\u8981\u62fc\u97f3\u5b57\u7b26\u4e32\u5217\u8868\uff0c\u800c\u4e0d\u662f\u5d4c\u5957\u5217\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 lazy_pinyin \u65b9\u6cd5\uff1a pinyin_str_list = lazy_pinyin ( hanzi ) print ( pinyin_str_list ) \u6267\u884c\u7ed3\u679c\uff1a [ 'han' , 'zi' , 'zhuan' , 'pin' , 'yin' , 'zhen' , 'fang' , 'bian' , '\uff01' ]","title":"\u57fa\u672c\u7528\u6cd5"},{"location":"06-third-part-lib/010-pypinyin/#_3","text":"\u5bf9\u4e8e\u591a\u97f3\u5b57\uff0cpypinyin \u8fd8\u53ef\u4ee5\u6839\u636e\u4e0a\u4e0b\u6587\u667a\u80fd\u8bc6\u522b\u6b63\u786e\u7684\u8bfb\u97f3\uff1a sentence = '\u91cd\u9633\u8282\u7684\u91cd\uff0c\u548c\u91cd\u91cf\u7684\u91cd\uff0c\u8bfb\u97f3\u4e0d\u4e00\u6837\u3002' for word in pinyin ( sentence , heteronym = True ): # heteronym \u53c2\u6570\u542f\u7528\u591a\u97f3\u5b57\u6a21\u5f0f print ( word ) \u6267\u884c\u7ed3\u679c\uff1a [ 'ch\u00f3ng' ] [ 'y\u00e1ng' ] [ 'ji\u00e9' , 'ji\u0113' ] [ 'de' , 'd\u012b' , 'd\u00ed' , 'd\u00ec' ] [ 'zh\u00f2ng' , 'ch\u00f3ng' , 't\u00f3ng' ] [ '\uff0c' ] [ 'h\u00e9' , 'h\u00e8' , 'h\u00fa' , 'hu\u00f3' , 'hu\u00f2' , 'huo' ] [ 'zh\u00f2ng' ] [ 'li\u00e0ng' ] [ 'de' , 'd\u012b' , 'd\u00ed' , 'd\u00ec' ] [ 'zh\u00f2ng' , 'ch\u00f3ng' , 't\u00f3ng' ] [ '\uff0c' ] [ 'd\u00fa' ] [ 'y\u012bn' ] [ 'b\u00f9' ] [ 'y\u00ed' ] [ 'y\u00e0ng' ] [ '\u3002' ]","title":"\u591a\u97f3\u5b57\u5904\u7406"},{"location":"06-third-part-lib/010-pypinyin/#_4","text":"pypinyin \u652f\u6301\u591a\u79cd\u98ce\u683c\u7684\u62fc\u97f3\u5448\u73b0\uff0c\u6bd4\u5982 TONAL\uff08\u5e26\u58f0\u8c03\u7684\u62fc\u97f3\uff09\uff0c INITIALS\uff08\u58f0\u6bcd\uff09\uff0c NORMAL\uff08\u4e0d\u5e26\u58f0\u8c03\u7684\u62fc\u97f3\uff09\uff0c\u7b49\u7b49\u3002\u5c31\u50cf\u662f\u53d8\u5316\u591a\u7aef\u7684\u53d8\u8272\u9f99\uff0c\u4ee5\u9002\u5e94\u4f60\u7684\u4e0d\u540c\u9700\u6c42\u3002 from pypinyin import Style pinyin_initials = pinyin ( '\u62fc\u97f3' , style = Style . INITIALS , strict = False ) # \u58f0\u6bcd print ( pinyin_initials ) pinyin_normal = pinyin ( '\u62fc\u97f3' , style = Style . NORMAL ) # \u65e0\u58f0\u8c03 print ( pinyin_normal ) pinyin_tone = pinyin ( '\u62fc\u97f3' , style = Style . TONE ) # \u666e\u901a\u58f0\u8c03 print ( pinyin_tone ) pinyin_tone2 = pinyin ( '\u62fc\u97f3' , style = Style . TONE2 ) # \u6570\u5b57\u58f0\u8c03 print ( pinyin_tone2 ) \u6267\u884c\u7ed3\u679c\uff1a [[ 'p' ], [ 'y' ]] # \u58f0\u6bcd [[ 'pin' ], [ 'yin' ]] # \u65e0\u58f0\u8c03 [[ 'p\u012bn' ], [ 'y\u012bn' ]] # \u666e\u901a\u58f0\u8c03 [[ 'pi1n' ], [ 'yi1n' ]] # \u6570\u5b57\u58f0\u8c03 \u98ce\u683c\u4e3a\u58f0\u6bcd Style.INITIALS \u65f6\uff0c\u4e0d\u4f1a\u663e\u793a\u51fa y \uff0c\u56e0\u4e3a\u6839\u636e \u300a\u6c49\u8bed\u62fc\u97f3\u65b9\u6848\u300b \uff0c y \uff0c w \uff0c \u00fc (yu) \u90fd\u4e0d\u662f\u58f0\u6bcd\uff0c\u5728\u67d0\u4e9b\u7279\u5b9a\u97f5\u6bcd\u65e0\u58f0\u6bcd\u65f6\uff0c\u624d\u52a0\u4e0a y \u6216 w \uff0c\u800c \u00fc \u4e5f\u6709\u5176\u7279\u5b9a\u89c4\u5219\u3002 \u5982\u679c\u9700\u8981\u663e\u793a\uff0c\u5c31\u5c06 strict \u8bbe\u7f6e\u4e3a False \uff0c\u5982\u4e0a\u9762\u4f8b\u5b50\u6240\u793a\u3002","title":"\u62fc\u97f3\u98ce\u683c"},{"location":"06-third-part-lib/010-pypinyin/#_5","text":"\u5982\u679c\u4f60\u6709\u7279\u6b8a\u9700\u6c42\uff0c\u6bd4\u5982\u67d0\u4e2a\u6c49\u5b57\u8f6c\u6362\u4e3a\u7279\u5b9a\u7684\u62fc\u97f3\uff0cpypinyin \u652f\u6301\u5b9a\u5236\u62fc\u97f3\u5e93\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a\u8bcd\u5178\u6765\u81ea\u5b9a\u4e49\u8bfb\u97f3\u3002 \u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u8bcd\u7ec4\u62fc\u97f3\u5e93\u6216\u8005\u5355\u5b57\u62fc\u97f3\u5e93\u7684\u65b9\u5f0f\u4fee\u6b63\u62fc\u97f3\u7ed3\u679c from pypinyin import load_phrases_dict , load_single_dict load_phrases_dict ({ '\u6854\u5b50' : [[ 'j\u00fa' ], [ 'z\u01d0' ]]}) # \u589e\u52a0 \"\u6854\u5b50\" \u8bcd\u7ec4 load_single_dict ({ ord ( '\u8fd8' ): 'h\u00e1i,hu\u00e1n' }) # \u8c03\u6574 \"\u8fd8\" \u5b57\u7684\u62fc\u97f3\u987a\u5e8f\u6216\u8986\u76d6\u9ed8\u8ba4\u62fc\u97f3 \u4e5f\u53ef\u4ee5\u4f7f\u7528 pypinyin-dict \u9879\u76ee\u63d0\u4f9b\u7684\u81ea\u5b9a\u4e49\u62fc\u97f3\u5e93\u6765\u7ea0\u6b63\u7ed3\u679c\u3002 # \u4f7f\u7528 phrase-pinyin-data \u9879\u76ee\u4e2d cc_cedict.txt \u6587\u4ef6\u4e2d\u7684\u62fc\u97f3\u6570\u636e\u4f18\u5316\u7ed3\u679c from pypinyin_dict.phrase_pinyin_data import cc_cedict cc_cedict . load () # \u4f7f\u7528 pinyin-data \u9879\u76ee\u4e2d kXHC1983.txt \u6587\u4ef6\u4e2d\u7684\u62fc\u97f3\u6570\u636e\u4f18\u5316\u7ed3\u679c from pypinyin_dict.pinyin_data import kxhc1983 kxhc1983 . load ()","title":"\u5b9a\u5236\u62fc\u97f3\u5e93"},{"location":"06-third-part-lib/010-pypinyin/#cli","text":"\u9664\u4e86\u5728 Python \u4ee3\u7801\u4e2d\u4f7f\u7528\uff0cpypinyin \u8fd8\u53ef\u4ee5\u4f5c\u4e3a\u547d\u4ee4\u884c\u5de5\u5177\u4f7f\u7528\uff1a $ pypinyin \u97f3\u4e50 y\u012bn yu\u00e8 $ pypinyin -h","title":"CLI \u547d\u4ee4\u884c\u5de5\u5177"},{"location":"06-third-part-lib/010-pypinyin/#_6","text":"\u73b0\u5728\uff0c\u6765\u70b9\u513f\u5b9e\u8df5\u73af\u8282\u5c06\u66f4\u5177\u6709\u5b66\u4e60\u6548\u679c\uff1a \u5c1d\u8bd5\u7528 pypinyin \u5c06\u4e00\u9996\u4e2d\u6587\u8bd7\u6b4c\u8f6c\u6362\u6210\u62fc\u97f3\u3002 \u5199\u4e00\u4e2a\u5c0f\u5de5\u5177\uff0c\u6bd4\u5982\u540d\u5b57\u751f\u6210\u5668\uff0c\u8f93\u5165\u4e2d\u6587\u540d\u5b57\uff0c\u81ea\u52a8\u751f\u6210\u5bf9\u5e94\u7684\u62fc\u97f3\u3002 \u8bf7\u5728\u4e0b\u5217\u4ee3\u7801\u7247\u6bb5\u4e2d\u8865\u5145\u4f60\u7684\u5b9e\u8df5\u5185\u5bb9\uff1a # \u5c06\u6307\u5b9a\u7684\u4e2d\u6587\u8bd7\u6b4c\u8f6c\u6362\u4e3a\u62fc\u97f3 poem = '\u5e8a\u524d\u660e\u6708\u5149\uff0c\u7591\u662f\u5730\u4e0a\u971c\u3002' poem_pinyin = pinyin ( poem ) print ( poem_pinyin ) # \u540d\u5b57\u751f\u6210\u5668 def name_to_pinyin ( name ): # \u8865\u5145\u4ee3\u7801\uff0c\u8fd4\u56de\u59d3\u540d\u7684\u62fc\u97f3 return lazy_pinyin ( name ) print ( name_to_pinyin ( '\u5f20\u4e09' ))","title":"\u5b9e\u8df5"},{"location":"06-third-part-lib/010-pypinyin/#_7","text":"hotoo/pinyin : \u6c49\u5b57\u62fc\u97f3\u8f6c\u6362\u5de5\u5177 Node.js/JavaScript \u7248\u3002 mozillazg/go-pinyin : \u6c49\u5b57\u62fc\u97f3\u8f6c\u6362\u5de5\u5177 Go \u7248\u3002 mozillazg/rust-pinyin : \u6c49\u5b57\u62fc\u97f3\u8f6c\u6362\u5de5\u5177 Rust \u7248\u3002","title":"\u76f8\u5173\u9879\u76ee"},{"location":"06-third-part-lib/011-Jinja2/","text":"011-Jinja2 \u00b6 A very fast and expressive template engine. https://pypi.org/project/Jinja2/ https://github.com/pallets/jinja jinja.palletsprojects.com Jinja2\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u6a21\u677f\u5f15\u64ce\uff0c\u5e38\u7528\u4e8ePython Web\u5f00\u53d1\u4e2d\uff0c\u5c24\u5176\u662fFlask\u548cDjango\u7b49\u6846\u67b6\u3002\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u5c06HTML\u7ed3\u6784\u4e0e\u6570\u636e\u903b\u8f91\u5206\u79bb\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u6613\u4e8e\u7ef4\u62a4\u548c\u590d\u7528\u3002\u4ee5\u4e0b\u662f\u4f7f\u7528Jinja2\u7684\u57fa\u672c\u6b65\u9aa4\uff1a \u5b89\u88c5Jinja2\uff1a\u5728Python\u73af\u5883\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528pip\u6765\u5b89\u88c5\uff0c\u547d\u4ee4\u662f pip install Jinja2 \u3002 \u5728\u9879\u76ee\u4e2d\u5f15\u5165\uff1a\u5728\u4f60\u7684Python\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7 from jinja2 import Environment, FileSystemLoader \u5bfc\u5165\u73af\u5883\u548c\u52a0\u8f7d\u5668\u3002 \u521d\u59cb\u5316\u73af\u5883\uff1a\u521b\u5efa\u4e00\u4e2a Environment \u5b9e\u4f8b\uff0c\u5e76\u6307\u5b9a\u6a21\u677f\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u5982 loader = FileSystemLoader('templates') \u3002 \u6e32\u67d3\u6a21\u677f\uff1a\u8c03\u7528 template = Environment(loader=loader).get_template('template_name.html') \uff0c\u8fd9\u91cc\u66ff\u6362\u4e3a\u4f60\u7684\u6a21\u677f\u6587\u4ef6\u540d\u3002 \u6570\u636e\u7ed1\u5b9a\uff1a\u5c06\u6570\u636e\u4f20\u9012\u7ed9\u6a21\u677f\uff0c\u901a\u5e38\u901a\u8fc7 context = {'variable_name': value} \u521b\u5efa\u4e00\u4e2a\u5b57\u5178\u3002 \u6e32\u67d3\u6a21\u677f\uff1a\u6700\u540e\uff0c\u4f7f\u7528 html = template.render(context) \u751f\u6210\u6e32\u67d3\u540e\u7684HTML\u5b57\u7b26\u4e32\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a from jinja2 import Environment , FileSystemLoader # \u521b\u5efa\u52a0\u8f7d\u5668 loader = FileSystemLoader ( 'templates' ) # \u521b\u5efa\u73af\u5883 env = Environment ( loader = loader ) # \u52a0\u8f7d\u6a21\u677f template = env . get_template ( 'index.html' ) # \u6570\u636e\u5b57\u5178 context = { 'name' : 'John Doe' , 'age' : 30 , 'message' : 'Welcome to our site!' } # \u6e32\u67d3\u5e76\u8f93\u51fa html_output = template . render ( context ) print ( html_output )","title":"011-Jinja2"},{"location":"06-third-part-lib/011-Jinja2/#011-jinja2","text":"A very fast and expressive template engine. https://pypi.org/project/Jinja2/ https://github.com/pallets/jinja jinja.palletsprojects.com Jinja2\u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u6a21\u677f\u5f15\u64ce\uff0c\u5e38\u7528\u4e8ePython Web\u5f00\u53d1\u4e2d\uff0c\u5c24\u5176\u662fFlask\u548cDjango\u7b49\u6846\u67b6\u3002\u5b83\u5141\u8bb8\u5f00\u53d1\u8005\u5c06HTML\u7ed3\u6784\u4e0e\u6570\u636e\u903b\u8f91\u5206\u79bb\uff0c\u4f7f\u5f97\u4ee3\u7801\u66f4\u6613\u4e8e\u7ef4\u62a4\u548c\u590d\u7528\u3002\u4ee5\u4e0b\u662f\u4f7f\u7528Jinja2\u7684\u57fa\u672c\u6b65\u9aa4\uff1a \u5b89\u88c5Jinja2\uff1a\u5728Python\u73af\u5883\u4e2d\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528pip\u6765\u5b89\u88c5\uff0c\u547d\u4ee4\u662f pip install Jinja2 \u3002 \u5728\u9879\u76ee\u4e2d\u5f15\u5165\uff1a\u5728\u4f60\u7684Python\u4ee3\u7801\u4e2d\uff0c\u901a\u8fc7 from jinja2 import Environment, FileSystemLoader \u5bfc\u5165\u73af\u5883\u548c\u52a0\u8f7d\u5668\u3002 \u521d\u59cb\u5316\u73af\u5883\uff1a\u521b\u5efa\u4e00\u4e2a Environment \u5b9e\u4f8b\uff0c\u5e76\u6307\u5b9a\u6a21\u677f\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u5982 loader = FileSystemLoader('templates') \u3002 \u6e32\u67d3\u6a21\u677f\uff1a\u8c03\u7528 template = Environment(loader=loader).get_template('template_name.html') \uff0c\u8fd9\u91cc\u66ff\u6362\u4e3a\u4f60\u7684\u6a21\u677f\u6587\u4ef6\u540d\u3002 \u6570\u636e\u7ed1\u5b9a\uff1a\u5c06\u6570\u636e\u4f20\u9012\u7ed9\u6a21\u677f\uff0c\u901a\u5e38\u901a\u8fc7 context = {'variable_name': value} \u521b\u5efa\u4e00\u4e2a\u5b57\u5178\u3002 \u6e32\u67d3\u6a21\u677f\uff1a\u6700\u540e\uff0c\u4f7f\u7528 html = template.render(context) \u751f\u6210\u6e32\u67d3\u540e\u7684HTML\u5b57\u7b26\u4e32\u3002 \u4ee5\u4e0b\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a from jinja2 import Environment , FileSystemLoader # \u521b\u5efa\u52a0\u8f7d\u5668 loader = FileSystemLoader ( 'templates' ) # \u521b\u5efa\u73af\u5883 env = Environment ( loader = loader ) # \u52a0\u8f7d\u6a21\u677f template = env . get_template ( 'index.html' ) # \u6570\u636e\u5b57\u5178 context = { 'name' : 'John Doe' , 'age' : 30 , 'message' : 'Welcome to our site!' } # \u6e32\u67d3\u5e76\u8f93\u51fa html_output = template . render ( context ) print ( html_output )","title":"011-Jinja2"},{"location":"06-third-part-lib/012-UnicodeDecodeError%20utf8%20codec%20cant%20decode%20invalid%20start%20byte/","text":"UnicodeDecodeError: 'utf8' codec can't decode byte 0x80 in position 3131: invalid start byte \u00b6 ctime: 2021-08-30 mtime: 2024-03-25 \u4e00\u3001\u4ea7\u751f\u95ee\u9898\u7684\u539f\u56e0 \u00b6 \u5728\u6211\u4f7f\u7528 python \u8bfb\u53d6\u6587\u672c\u5217\u8868\u540e\uff0c\u7136\u540e\u518d\u8bfb\u53d6\u6bcf\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u4ea7\u751f\u4e86\u4e0a\u9762\u7684\u9519\u8bef\uff0c \u5982\u679c\u4f60\u662f\u5728 Mac \u4e0a\u5199\u7684\u4ee3\u7801\uff0c\u80af\u5b9a\u662f\u5c06 .DS_store \u6587\u4ef6\u4e5f\u8bfb\u5230\u5217\u8868\u91cc\u4e86\uff0c\u624d\u4ea7\u751f\u7684\u9519\u8bef\u3002 .DS_Store \u662f Mac OS \u4fdd\u5b58\u6587\u4ef6\u5939\u7684\u81ea\u5b9a\u4e49\u5c5e\u6027\u7684\u9690\u85cf\u6587\u4ef6\uff0c\u5982\u6587\u4ef6\u7684\u56fe\u6807\u4f4d\u7f6e\u6216\u80cc\u666f\u8272\u3002 \u4e8c\u3001\u89e3\u51b3\u65b9\u6cd5 \u00b6 \u901a\u8fc7\u7ec8\u7aef cd \u5230\u4f60\u7684\u90a3\u4e2a\u76ee\u5f55\uff0c\u7136\u540e ls -a .DS_store \uff0c\u67e5\u770b\u6587\u4ef6\u662f\u5426\u771f\u7684\u5b58\u5728\uff0c rm .DS_store \u4e4b\u540e\uff0c\u95ee\u9898\u89e3\u51b3\u3002 \u53c2\u8003\u94fe\u63a5 \u00b6 https://stackoverflow.com/questions/38518023/unicodedecodeerror-utf8-codec-cant-decode-byte-0x80-in-position-3131-invali https://blog.csdn.net/qq_34149581/article/details/83418047","title":"012-UnicodeDecodeError utf8 codec cant decode invalid start byte"},{"location":"06-third-part-lib/012-UnicodeDecodeError%20utf8%20codec%20cant%20decode%20invalid%20start%20byte/#unicodedecodeerror-utf8-codec-cant-decode-byte-0x80-in-position-3131-invalid-start-byte","text":"ctime: 2021-08-30 mtime: 2024-03-25","title":"UnicodeDecodeError: 'utf8' codec can't decode byte 0x80 in position 3131: invalid start byte"},{"location":"06-third-part-lib/012-UnicodeDecodeError%20utf8%20codec%20cant%20decode%20invalid%20start%20byte/#_1","text":"\u5728\u6211\u4f7f\u7528 python \u8bfb\u53d6\u6587\u672c\u5217\u8868\u540e\uff0c\u7136\u540e\u518d\u8bfb\u53d6\u6bcf\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u4ea7\u751f\u4e86\u4e0a\u9762\u7684\u9519\u8bef\uff0c \u5982\u679c\u4f60\u662f\u5728 Mac \u4e0a\u5199\u7684\u4ee3\u7801\uff0c\u80af\u5b9a\u662f\u5c06 .DS_store \u6587\u4ef6\u4e5f\u8bfb\u5230\u5217\u8868\u91cc\u4e86\uff0c\u624d\u4ea7\u751f\u7684\u9519\u8bef\u3002 .DS_Store \u662f Mac OS \u4fdd\u5b58\u6587\u4ef6\u5939\u7684\u81ea\u5b9a\u4e49\u5c5e\u6027\u7684\u9690\u85cf\u6587\u4ef6\uff0c\u5982\u6587\u4ef6\u7684\u56fe\u6807\u4f4d\u7f6e\u6216\u80cc\u666f\u8272\u3002","title":"\u4e00\u3001\u4ea7\u751f\u95ee\u9898\u7684\u539f\u56e0"},{"location":"06-third-part-lib/012-UnicodeDecodeError%20utf8%20codec%20cant%20decode%20invalid%20start%20byte/#_2","text":"\u901a\u8fc7\u7ec8\u7aef cd \u5230\u4f60\u7684\u90a3\u4e2a\u76ee\u5f55\uff0c\u7136\u540e ls -a .DS_store \uff0c\u67e5\u770b\u6587\u4ef6\u662f\u5426\u771f\u7684\u5b58\u5728\uff0c rm .DS_store \u4e4b\u540e\uff0c\u95ee\u9898\u89e3\u51b3\u3002","title":"\u4e8c\u3001\u89e3\u51b3\u65b9\u6cd5"},{"location":"06-third-part-lib/012-UnicodeDecodeError%20utf8%20codec%20cant%20decode%20invalid%20start%20byte/#_3","text":"https://stackoverflow.com/questions/38518023/unicodedecodeerror-utf8-codec-cant-decode-byte-0x80-in-position-3131-invali https://blog.csdn.net/qq_34149581/article/details/83418047","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/","text":"Python\u6709\u54ea\u4e9b\u7ecf\u5178\u7684\u5e38\u7528\u5e93 \u00b6 python \u4f7f\u7528\u8303\u56f4\u5f88\u5e7f\uff0c\u5e38\u7528\u7684\u5e93\u5f88\u591a\u5f88\u591a\uff0c\u9700\u8981\u4ec0\u4e48\u518d\u67e5\u627e\u3002 \u539f\u59cb\u4f5c\u8005\uff1a\u841d\u535c\u5927\u6742\u70e9 \u94fe\u63a5\uff1a https://www.zhihu.com/question/600933380/answer/3085494590 \u6570\u636e\u5904\u7406 \u00b6 \u6587\u672c\u5904\u7406 \u00b6 chardet\uff1a\u5b57\u7b26\u7f16\u7801\u68c0\u6d4b\u5668\uff0c\u53ef\u4ee5\u81ea\u52a8\u68c0\u6d4b\u6587\u672c\u3001\u7f51\u9875\u3001xml\u7684\u7f16\u7801 difflib\uff1a(Python \u6807\u51c6\u5e93)\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u5dee\u5f02\u5316\u6bd4\u8f83 ftfy\uff1a\u8ba9 Unicode \u6587\u672c\u66f4\u5b8c\u6574\u66f4\u8fde\u8d2f fuzzywuzzy\uff1a\u6a21\u7cca\u5b57\u7b26\u4e32\u5339\u914d Levenshtein\uff1a\u5feb\u901f\u8ba1\u7b97\u7f16\u8f91\u8ddd\u79bb\u4ee5\u53ca\u5b57\u7b26\u4e32\u7684\u76f8\u4f3c\u5ea6 pangu.py\uff1a\u5728\u4e2d\u65e5\u97e9\u8bed\u5b57\u7b26\u548c\u6570\u5b57\u5b57\u6bcd\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u683c shortuuid\uff1a\u4e00\u4e2a\u751f\u6210\u5668\u5e93\uff0c\u7528\u4ee5\u751f\u6210\u7b80\u6d01\u7684\uff0c\u660e\u767d\u7684\uff0cURL \u5b89\u5168\u7684 UUID simplejson\uff1aPython \u7684 JSON \u7f16\u7801\u3001\u89e3\u7801\u5668 unidecode\uff1aUnicode \u6587\u672c\u7684 ASCII \u8f6c\u6362\u5f62\u5f0f uniout\uff1a\u6253\u5370\u53ef\u8bfb\u7684\u5b57\u7b26\uff0c\u800c\u4e0d\u662f\u8f6c\u4e49\u7684\u5b57\u7b26\u4e32 xpinyin\uff1a\u4e00\u4e2a\u7528\u4e8e\u628a\u6c49\u5b57\u8f6c\u6362\u4e3a\u62fc\u97f3\u7684\u5e93 yfiglet-figlet\uff1apyfiglet -figlet \u7684 Python \u5b9e\u73b0 flashtext: \u4e00\u4e2a\u9ad8\u6548\u7684\u6587\u672c\u67e5\u627e\u66ff\u6362\u5e93 esmre\uff1a \u6b63\u5219\u8868\u8fbe\u5f0f \u7684\u52a0\u901f\u5668 awesome slugify \uff1a\u4e00\u4e2a Python slugify \u5e93\uff0c\u7528\u4e8e\u5904\u7406 Unicode python-slugify\uff1aPython slug \u5316\u5e93\uff0c\u53ef\u4ee5\u628a unicode \u8f6c\u5316\u4e3a ASCII unicode-slugify \uff1a\u4e00\u4e2a slug \u5de5\u5177\uff0c\u53ef\u4ee5\u751f\u6210 unicode slugs\uff0c\u9700\u8981\u4f9d\u8d56 Django phonenumbers \uff1a\u89e3\u6790\uff0c\u683c\u5f0f\u5316\uff0c\u50a8\u5b58\uff0c\u9a8c\u8bc1\u7535\u8bdd\u53f7\u7801 PLY\uff1alex \u548c yacc \u89e3\u6790\u5de5\u5177\u7684 Python \u5b9e\u73b0 Pygments\uff1a\u901a\u7528\u8bed\u6cd5\u9ad8\u4eae\u5de5\u5177 pyparsing\uff1a\u751f\u6210\u901a\u7528\u89e3\u6790\u5668\u7684\u6846\u67b6 python-nameparser \uff1a\u628a\u4e00\u4e2a\u4eba\u540d\u5206\u89e3\u4e3a\u51e0\u4e2a\u72ec\u7acb\u7684\u90e8\u5206 python-user-agents\uff1a\u6d4f\u89c8\u5668 user agent \u89e3\u6790\u5668 sqlparse\uff1a\u4e00\u4e2a\u65e0\u9a8c\u8bc1\u7684 SQL \u89e3\u6790\u5668 \u7279\u6b8a\u6587\u672c\u5904\u7406 \u00b6 tablib\uff1a\u7528\u6765\u5904\u7406\u8868\u683c\u6570\u636e\u7684\u6a21\u5757 Marmir\uff1a\u628a\u8f93\u5165\u7684 Python \u6570\u636e\u7ed3\u6784\u8f6c\u6362\u4e3a\u7535\u5b50\u8868\u5355 openpyxl\uff1a\u4e00\u4e2a\u7528\u6765\u8bfb\u5199 Excel 2010 xlsx/xlsm/xltx/xltm \u6587\u4ef6\u7684\u5e93 pyexcel \uff1a\u4e00\u4e2a\u63d0\u4f9b\u7edf\u4e00 API\uff0c\u7528\u6765\u8bfb\u5199\u3001\u64cd\u4f5c Excel \u6587\u4ef6\u7684\u5e93 python-docx \uff1a\u8bfb\u53d6\uff0c\u67e5\u8be2\u4ee5\u53ca\u4fee\u6539 Microsoft Word 2007/2008 docx \u6587\u4ef6 relatorio\uff1a\u6a21\u677f\u5316 OpenDocument \u6587\u4ef6 unoconv\uff1a\u5728 LibreOffice/OpenOffice \u652f\u6301\u7684\u4efb\u610f\u6587\u4ef6\u683c\u5f0f\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362 XlsxWriter\uff1a\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa Excel.xlsx \u6587\u4ef6\u7684 Python \u6a21\u5757 xlwings\uff1a\u4e00\u4e2a\u4f7f\u5f97\u5728 Excel \u4e2d\u65b9\u4fbf\u8c03\u7528 Python \u7684\u5e93\uff08\u53cd\u4e4b\u4ea6\u7136\uff09\uff0c\u57fa\u4e8e BSD \u534f\u8bae xlwt/xlrd\uff1a\u8bfb\u5199 Excel \u6587\u4ef6\u7684\u6570\u636e\u548c\u683c\u5f0f\u4fe1\u606f PDFMiner\uff1a\u4e00\u4e2a\u7528\u4e8e\u4ece PDF \u6587\u6863\u4e2d\u62bd\u53d6\u4fe1\u606f\u7684\u5de5\u5177 PyPDF2\uff1a\u4e00\u4e2a\u53ef\u4ee5\u5206\u5272\uff0c\u5408\u5e76\u548c\u8f6c\u6362 PDF \u9875\u9762\u7684\u5e93 ReportLab\uff1a\u5feb\u901f\u521b\u5efa\u5bcc\u6587\u672c PDF \u6587\u6863 Mistune\uff1a\u5feb\u901f\u5e76\u4e14\u529f\u80fd\u9f50\u5168\u7684\u7eaf Python \u5b9e\u73b0\u7684 Markdown \u89e3\u6790\u5668 Python-Markdown \uff1aJohn Gruber\u2019s Markdown \u7684 Python \u7248\u5b9e\u73b0 Python-Markdown2 \uff1a\u7eaf Python \u5b9e\u73b0\u7684 Markdown \u89e3\u6790\u5668\uff0c\u6bd4 Python-Markdown \u66f4\u5feb\uff0c\u66f4\u51c6\u786e\uff0c\u53ef\u6269\u5c55 PyYAML\uff1aPython \u7248\u672c\u7684 YAML \u89e3\u6790\u5668 csvkit\uff1a\u7528\u4e8e\u8f6c\u6362\u548c\u64cd\u4f5c CSV \u7684\u5de5\u5177 unp\uff1a\u4e00\u4e2a\u7528\u6765\u65b9\u4fbf\u89e3\u5305\u5f52\u6863\u6587\u4ef6\u7684\u547d\u4ee4\u884c\u5de5\u5177 HTML/XML \u89e3\u6790 \u00b6 BeautifulSoup\uff1a\u4ee5 Python \u98ce\u683c\u7684\u65b9\u5f0f\u6765\u5bf9 HTML \u6216 XML \u8fdb\u884c\u8fed\u4ee3\uff0c\u641c\u7d22\u548c\u4fee\u6539 bleach\uff1a\u4e00\u4e2a\u57fa\u4e8e\u767d\u540d\u5355\u7684 HTML \u6e05\u7406\u548c\u6587\u672c\u94fe\u63a5\u5e93 cssutils\uff1a\u4e00\u4e2a Python \u7684 CSS \u5e93 html5lib\uff1a\u4e00\u4e2a\u517c\u5bb9\u6807\u51c6\u7684 HTML \u6587\u6863\u548c\u7247\u6bb5\u89e3\u6790\u53ca\u5e8f\u5217\u5316\u5e93 lxml\uff1a\u4e00\u4e2a\u975e\u5e38\u5feb\u901f\uff0c\u7b80\u5355\u6613\u7528\uff0c\u529f\u80fd\u9f50\u5168\u7684\u5e93\uff0c\u7528\u6765\u5904\u7406 HTML \u548c XML MarkupSafe\uff1a\u4e3a Python \u5b9e\u73b0 XML/HTML/XHTML \u6807\u8bb0\u5b89\u5168\u5b57\u7b26\u4e32 pyquery \uff1a\u4e00\u4e2a\u89e3\u6790 HTML \u7684\u5e93\uff0c\u7c7b\u4f3c jQuery requests-html\uff1a\u4eba\u6027\u5316\u7684\uff0cPythonic \u7684 HTML \u89e3\u6790\u5e93 untangle\uff1a\u5c06 XML \u6587\u6863\u8f6c\u6362\u4e3a Python \u5bf9\u8c61\uff0c\u4f7f\u5176\u53ef\u4ee5\u65b9\u4fbf\u7684\u8bbf\u95ee xhtml2pdf\uff1aHTML/CSS \u8f6c PDF \u5de5\u5177 xmltodict\uff1a\u50cf\u5904\u7406 JSON \u4e00\u6837\u5904\u7406 XML htmlparser\uff0c\u5b98\u65b9\u7248\u89e3\u6790 HTML DOM \u6811 \u6587\u4ef6\u5904\u7406 \u00b6 aiofiles\uff1a\u57fa\u4e8e asyncio\uff0c\u63d0\u4f9b\u6587\u4ef6\u5f02\u6b65\u64cd\u4f5c imghdr\uff1a\uff08Python \u6807\u51c6\u5e93\uff09\u68c0\u6d4b\u56fe\u7247\u7c7b\u578b mimetypes\uff1a\uff08Python \u6807\u51c6\u5e93\uff09\u5c06\u6587\u4ef6\u540d\u6620\u5c04\u4e3a MIME \u7c7b\u578b path.py\uff1a\u5bf9 os.path \u8fdb\u884c\u5c01\u88c5\u7684\u6a21\u5757 pathlib\uff1a\uff08Python3.4+ \u6807\u51c6\u5e93\uff09\u8de8\u5e73\u53f0\u7684\u3001\u9762\u5411\u5bf9\u8c61\u7684\u8def\u5f84\u64cd\u4f5c\u5e93 python-magic\uff1a\u6587\u4ef6\u7c7b\u578b\u68c0\u6d4b\u7684\u7b2c\u4e09\u65b9\u5e93 libmagic \u7684 Python \u63a5\u53e3 Unipath\uff1a\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u64cd\u4f5c\u6587\u4ef6\u548c\u76ee\u5f55 watchdog \uff1a\u7ba1\u7406\u6587\u4ef6\u7cfb\u7edf\u4e8b\u4ef6\u7684 API \u548c shell \u5de5\u5177 Unipath\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u6587\u4ef6/\u76ee\u5f55\u7684\u64cd\u4f5c\u5de5\u5177\u5305 pathlib \uff1a\uff08Python 3.4\u7248\u5df2\u7ecf\u4f5c\u4e3aPython\u6807\u51c6\u5e93\uff09\uff0c\u4e00\u4e2a\u8de8\u5e73\u53f0\uff0c\u9762\u5411 path \u7684\u51fd\u6570\u5e93 pickle/cPickle\uff1aPython \u7684 pickle \u6a21\u5757\u5b9e\u73b0\u4e86\u57fa\u672c\u7684\u6570\u636e\u5e8f\u5217\u548c\u53cd\u5e8f\u5217\u5316 \u914d\u7f6e\u6587\u4ef6\u5904\u7406 \u00b6 ConfigParser\uff1aPython \u6807\u51c6\u5e93\uff0cini \u6587\u4ef6\u89e3\u6790\u5668 configobj\uff1aini \u6587\u4ef6\u89e3\u6790\u5668 profig\uff1a\u591a\u683c\u5f0f\u914d\u7f6e\u8f6c\u6362\u5de5\u5177 config\uff1alogging \u6a21\u5757\u4f5c\u8005\u5199\u7684\u5206\u7ea7\u914d\u7f6e\u6a21\u5757 python-decouple\uff1a\u5c06\u8bbe\u7f6e\u548c\u4ee3\u7801\u5b8c\u5168\u9694\u79bb \u6587\u6863\u76f8\u5173 \u00b6 Sphinx\uff1aPython \u6587\u6863\u751f\u6210\u5668 pycco \uff1a\u7b80\u5355\u5feb\u901f\u3001\u7f16\u7a0b\u98ce\u683c\u7684\u6587\u6863\u751f\u6210\u5668 pdoc\uff1a\u81ea\u52a8\u751f\u6210\u7684 Python \u5e93 API \u6587\u6863 epydoc\uff0c\u4ece\u6e90\u7801\u6ce8\u91ca\u4e2d\u751f\u6210\u5404\u79cd\u683c\u5f0f\u6587\u6863\u7684\u5de5\u5177 readthedocs \uff1a\u4e00\u4e2a\u57fa\u4e8e Sphinx/MkDocs \u7684\u5728\u7ebf\u6587\u6863\u6258\u7ba1\u7cfb\u7edf\uff0c\u5bf9 \u5f00\u6e90\u9879\u76ee \u514d\u8d39\u5f00\u653e\u4f7f\u7528 \u65e5\u5fd7\u7ba1\u7406 \u00b6 logging\uff1a(Python \u6807\u51c6\u5e93) \u4e3a Python \u63d0\u4f9b\u65e5\u5fd7\u529f\u80fd logbook\uff1aLogging \u5e93\u7684\u66ff\u4ee3\u54c1 Eliot\uff1a\u4e3a\u590d\u6742\u7684\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u521b\u5efa\u65e5\u5fd7 Raven\uff1aSentry \u7684 Python \u5ba2\u6237\u7aef Sentry\uff1a\u5b9e\u65f6\u8bb0\u5f55\u548c\u6536\u96c6\u65e5\u5fd7\u7684\u670d\u52a1\u5668 \u65e5\u671f\u548c\u65f6\u95f4 \u00b6 arrow\uff1a\u975e\u5e38\u597d\u7684 Python \u65e5\u671f\u65f6\u95f4\u64cd\u4f5c\u7c7b\u5e93 Chronyk\uff1aPython 3 \u7684\u7c7b\u5e93\uff0c\u7528\u4e8e\u89e3\u6790\u624b\u5199\u683c\u5f0f\u7684\u65f6\u95f4\u548c\u65e5\u671f dateutil\uff1aPython datetime \u6a21\u5757\u7684\u6269\u5c55 delorean\uff1a\u89e3\u51b3 Python \u4e2d\u6709\u5173\u65e5\u671f\u5904\u7406\u7684\u68d8\u624b\u95ee\u9898\u7684\u5e93 maya\uff1a\u4eba\u6027\u5316\u7684\u65f6\u95f4\u5904\u7406\u5e93 moment\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406\u65f6\u95f4\u548c\u65e5\u671f\u7684 Python \u5e93\uff0c\u7075\u611f\u6765\u81ea\u4e8e Moment.js pendulum \uff1a\u4e00\u4e2a\u6bd4 arrow \u66f4\u5177\u6709\u660e\u786e\u7684\u3001\u53ef\u9884\u6d4b\u884c\u4e3a\u7684\u65f6\u95f4\u64cd\u4f5c\u5e93 PyTime\uff1a\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684 Python \u6a21\u5757\uff0c\u7528\u4e8e\u901a\u8fc7\u5b57\u7b26\u4e32\u6765\u64cd\u4f5c\u65e5\u671f/\u65f6\u95f4 pytz\uff1a\u73b0\u4ee3\u4ee5\u53ca\u5386\u53f2\u7248\u672c\u7684\u4e16\u754c\u65f6\u533a\u5b9a\u4e49\uff0c\u5c06\u65f6\u533a\u6570\u636e\u5e93\u5f15\u5165 Python when.py\uff1a\u63d0\u4f9b\u7528\u6237\u53cb\u597d\u7684\u51fd\u6570\u6765\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u5e38\u7528\u7684\u65e5\u671f\u548c\u65f6\u95f4\u64cd\u4f5c \u56fe\u50cf \u00b6 \u56fe\u50cf\u5904\u7406 \u00b6 pillow \uff1aPillow \u662f\u4e00\u4e2a\u66f4\u52a0\u6613\u7528\u7248\u7684 PIL hmap\uff1a\u56fe\u50cf\u76f4\u65b9\u56fe\u6620\u5c04 imgSeek\uff1a\u4e00\u4e2a\u4f7f\u7528\u89c6\u89c9\u76f8\u4f3c\u6027\u641c\u7d22\u4e00\u7ec4\u56fe\u7247\u96c6\u5408\u7684\u9879\u76ee nude.py\uff1a\u88f8\u4f53\u68c0\u6d4b pyBarcode\uff1a\u4e0d\u501f\u52a9 PIL \u5e93\u5728 Python \u7a0b\u5e8f\u4e2d\u751f\u6210\u6761\u5f62\u7801 pygram\uff1a\u7c7b\u4f3c Instagram \u7684\u56fe\u50cf\u6ee4\u955c python-qrcode \uff1a\u4e00\u4e2a\u7eaf Python \u5b9e\u73b0\u7684 \u4e8c\u7ef4\u7801\u751f\u6210\u5668 Quads\uff1a\u57fa\u4e8e\u56db\u53c9\u6811\u7684\u8ba1\u7b97\u673a\u827a\u672f scikit-image\uff1a\u4e00\u4e2a\u7528\u4e8e\uff08\u79d1\u5b66\uff09\u56fe\u50cf\u5904\u7406\u7684 Python \u5e93 thumbor\uff1a\u4e00\u4e2a\u5c0f\u578b\u56fe\u50cf\u670d\u52a1\uff0c\u5177\u6709\u526a\u88c1\uff0c\u5c3a\u5bf8\u91cd\u8bbe\u548c\u7ffb\u8f6c\u529f\u80fd wand\uff1aMagickWand\u7684 Python \u7ed1\u5b9a\u3002MagickWand \u662f ImageMagick \u7684 C API face_recognition \uff1a\u7b80\u5355\u6613\u7528\u7684 python \u4eba\u8138\u8bc6\u522b\u5e93 OCR \u00b6 pyocr\uff1aTesseract \u548c Cuneiform \u7684\u4e00\u4e2a\u5c01\u88c5(wrapper) pytesseract \uff1aGoogle Tesseract OCR \u7684\u53e6\u4e00\u4e2a\u5c01\u88c5(wrapper) python-tesseract \uff1aGoogle Tesseract OCR \u7684\u4e00\u4e2a\u5305\u88c5\u7c7b \u7f51\u7edc\u76f8\u5173 \u00b6 \u4e0b\u8f7d \u00b6 s3cmd\uff1a\u4e00\u4e2a\u7528\u6765\u7ba1\u7406 Amazon S3 \u548c CloudFront \u7684\u547d\u4ee4\u884c\u5de5\u5177 s4cmd\uff1a\u8d85\u7ea7 S3 \u547d\u4ee4\u884c\u5de5\u5177\uff0c\u6027\u80fd\u66f4\u52a0\u5f3a\u52b2 you-get\uff1a\u4e00\u4e2a YouTube/Youku/Niconico \u89c6\u9891\u4e0b\u8f7d\u5668\uff0c\u4f7f\u7528 Python3 \u7f16\u5199 youtube-dl \uff1a\u4e00\u4e2a\u5c0f\u5de7\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\uff0c\u7528\u6765\u4e0b\u8f7d YouTube \u89c6\u9891 Coursera\uff1a\u53ef\u4ee5\u4ece http://coursera.org \u4e0b\u8f7d\u89c6\u9891 subliminal\uff0c\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u641c\u7d22\u548c\u4e0b\u8f7d\u5b57\u5e55\u7684\u51fd\u6570\u5e93 HTTP \u00b6 aiohttp\uff1a\u57fa\u4e8e asyncio \u7684\u5f02\u6b65 HTTP \u7f51\u7edc\u5e93 grequests\uff1arequests \u5e93 + gevent \uff0c\u7528\u4e8e\u5f02\u6b65 HTTP \u8bf7\u6c42 httplib2\uff1a\u5168\u9762\u7684 HTTP \u5ba2\u6237\u7aef\u5e93 treq\uff1a\u7c7b\u4f3c requests \u7684 Python API \u6784\u5efa\u4e8e Twisted HTTP \u5ba2\u6237\u7aef\u4e4b\u4e0a urllib3 \uff1a\u4e00\u4e2a\u5177\u6709\u7ebf\u7a0b\u5b89\u5168\u8fde\u63a5\u6c60\uff0c\u652f\u6301\u6587\u4ef6 post\uff0c\u6e05\u6670\u53cb\u597d\u7684 HTTP \u5e93 \u7f51\u7edc\u53ef\u89c6\u5316 \u00b6 Mininet\uff1a\u4e00\u6b3e\u6d41\u884c\u7684\u7f51\u7edc\u6a21\u62df\u5668\u4ee5\u53ca\u7528 Python \u7f16\u5199\u7684 API POX\uff1a\u4e00\u4e2a\u9488\u5bf9\u57fa\u4e8e Python \u7684\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc\u5e94\u7528\uff08\u4f8b\u5982 OpenFlow SDN \u63a7\u5236\u5668\uff09\u7684\u5f00\u6e90\u5f00\u53d1\u5e73\u53f0 Pyretic\uff1a\u706b\u70ed\u7684 SDN \u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u4e00\u5458\uff0c\u4e3a\u7f51\u7edc\u4ea4\u6362\u673a\u548c\u6a21\u62df\u5668\u63d0\u4f9b\u5f3a\u5927\u7684\u62bd\u8c61\u80fd\u529b SDX Platform\uff1a\u57fa\u4e8e SDN \u7684 IXP \u5b9e\u73b0\uff0c\u5f71\u54cd\u4e86 Mininet, POX \u548c Pyretic NRU\uff1a\u4e00\u4e2a\u57fa\u4e8e\u7ec4\u4ef6\u7684\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc\u6846\u67b6 URL \u5904\u7406 \u00b6 furl\uff1a\u4e00\u4e2a\u8ba9\u5904\u7406 URL \u66f4\u7b80\u5355\u5c0f\u578b Python \u5e93 purl\uff1a\u4e00\u4e2a\u7b80\u5355\u7684\u3001\u4e0d\u53ef\u53d8\u7684 URL \u7c7b\uff0c\u5177\u6709\u7b80\u6d01\u7684 API \u6765\u8fdb\u884c\u8be2\u95ee\u548c\u5904\u7406 pyshorteners\uff1a\u4e00\u4e2a\u7eaf Python URL \u7f29\u77ed\u5e93 shorturl\uff1a\u751f\u6210\u77ed\u5c0f URL \u548c\u7c7b\u4f3c http://bit.ly \u77ed\u94fe\u7684 Python \u5b9e\u73b0 \u7f51\u7edc\u722c\u866b \u00b6 Scrapy\uff1a\u4e00\u4e2a\u5feb\u901f\u9ad8\u7ea7\u7684\u5c4f\u5e55\u722c\u53d6\u53ca\u7f51\u9875\u91c7\u96c6\u6846\u67b6 cola\uff1a\u4e00\u4e2a\u5206\u5e03\u5f0f\u722c\u866b\u6846\u67b6 Demiurge\uff1a\u57fa\u4e8e PyQuery \u7684\u722c\u866b\u5fae\u578b\u6846\u67b6 feedparser\uff1a\u901a\u7528 feed \u89e3\u6790\u5668 Grab\uff1a\u7ad9\u70b9\u722c\u53d6\u6846\u67b6 MechanicalSoup\uff1a\u7528\u4e8e\u81ea\u52a8\u548c\u7f51\u7edc\u7ad9\u70b9\u4ea4\u4e92\u7684 Python \u5e93 portia\uff1aScrapy \u53ef\u89c6\u5316\u722c\u53d6 pyspider\uff1a\u4e00\u4e2a\u5f3a\u5927\u7684\u722c\u866b\u7cfb\u7edf RoboBrowser\uff1a\u4e00\u4e2a\u7b80\u5355\u7684\uff0cPython \u98ce\u683c\u7684\u5e93\uff0c\u7528\u6765\u6d4f\u89c8\u7f51\u7ad9\uff0c\u800c\u4e0d\u9700\u8981\u4e00\u4e2a\u72ec\u7acb\u5b89\u88c5\u7684\u6d4f\u89c8\u5668 \u7f51\u9875\u5185\u5bb9\u63d0\u53d6 \u00b6 Haul\uff1a\u4e00\u4e2a\u53ef\u4ee5\u6269\u5c55\u7684\u56fe\u50cf\u722c\u53d6\u5de5\u5177 html2text\uff1a\u5c06 HTML \u8f6c\u6362\u4e3a Markdown \u683c\u5f0f\u6587\u672c lassie\uff1a\u4eba\u6027\u5316\u7684\u7f51\u9875\u5185\u5bb9\u68c0\u7d22\u5e93 micawber\uff1a\u4e00\u4e2a\u5c0f\u578b\u7f51\u9875\u5185\u5bb9\u63d0\u53d6\u5e93\uff0c\u7528\u6765\u4ece URLs \u63d0\u53d6\u5bcc\u5185\u5bb9 newspaper\uff1a\u4f7f\u7528 Python \u8fdb\u884c\u65b0\u95fb\u63d0\u53d6\uff0c\u6587\u7ae0\u63d0\u53d6\u4ee5\u53ca\u5185\u5bb9\u7b56\u5c55 opengraph\uff1a\u4e00\u4e2a\u7528\u6765\u89e3\u6790\u5f00\u653e\u5185\u5bb9\u534f\u8bae(Open Graph Protocol)\u7684 Python \u6a21\u5757 python-goose \uff1aHTML \u5185\u5bb9/\u6587\u7ae0\u63d0\u53d6\u5668 python-readability\uff1aarc90 \u516c\u53f8 readability \u5de5\u5177\u7684 Python \u9ad8\u901f\u7aef\u53e3 sanitize\uff1a\u4e3a\u6742\u4e71\u7684\u6570\u636e\u4e16\u754c\u5e26\u6765\u8c03\u7406\u6027 sumy \uff1a\u4e00\u4e2a\u4e3a\u6587\u672c\u6587\u4ef6\u548c HTML \u9875\u9762\u8fdb\u884c\u81ea\u52a8\u6458\u8981\u7684\u6a21\u5757 textract\uff1a\u4ece\u4efb\u4f55\u683c\u5f0f\u7684\u6587\u6863\u4e2d\u63d0\u53d6\u6587\u672c\uff0cWord\uff0cPowerPoint\uff0cPDFs \u7b49\u7b49 mechanize\uff1a\u7f51\u9875\u6d4f\u89c8\u7f16\u7a0b\u5de5\u5177 WebSocket \u00b6 AutobahnPython\uff1a\u7ed9 Python \u3001\u4f7f\u7528\u7684 WebSocket & WAMP \u57fa\u4e8e Twisted \u548c asyncio Crossbar\uff1a\u5f00\u6e90\u7edf\u4e00\u5e94\u7528\u8def\u7531(Websocket & WAMP for Python on Autobahn) django-socketio\uff1a\u7ed9 Django \u7528\u7684 WebSockets WebSocket-for-Python\uff1a\u4e3a Python\u2154 \u4ee5\u53ca PyPy \u7f16\u5199\u7684 WebSocket \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5e93 RPC \u00b6 SimpleJSONRPCServer\uff1a\u8fd9\u4e2a\u5e93\u662f JSON-RPC \u89c4\u8303\u7684\u4e00\u4e2a\u5b9e\u73b0 SimpleXMLRPCServer\uff1a(Python \u6807\u51c6\u5e93) \u7b80\u5355\u7684 XML-RPC \u670d\u52a1\u5668\u5b9e\u73b0\uff0c\u5355\u7ebf\u7a0b zeroRPC\uff1azerorpc \u662f\u4e00\u4e2a\u7075\u6d3b\u7684 RPC \u5b9e\u73b0\uff0c\u57fa\u4e8e ZeroMQ \u548c MessagePack Web \u6846\u67b6 \u00b6 \u5168\u6808\u6846\u67b6 \u00b6 Django\uff1aPython \u754c\u6700\u6d41\u884c\u7684 web \u6846\u67b6 Flask\uff1a\u4e00\u4e2a Python \u5fae\u578b\u6846\u67b6 pyramid\uff1a\u4e00\u4e2a\u5c0f\u5de7\u5feb\u901f\uff0c\u63a5\u5730\u6c14\u7684\u5f00\u6e90 Python web \u6846\u67b6 Bottle\uff1a\u4e00\u4e2a\u5feb\u901f\u5c0f\u5de7\uff0c\u8f7b\u91cf\u7ea7\u7684 WSGI \u5fae\u578b web \u6846\u67b6 CherryPy\uff1a\u4e00\u4e2a\u6781\u7b80\u7684 Python web \u6846\u67b6\uff0c\u670d\u4ece HTTP/1.1 \u534f\u8bae\u4e14\u5177\u6709 WSGI \u7ebf\u7a0b\u6c60 TurboGears\uff1a\u4e00\u4e2a\u53ef\u4ee5\u6269\u5c55\u4e3a\u5168\u6808\u89e3\u51b3\u65b9\u6848\u7684\u5fae\u578b\u6846\u67b6 web.py\uff1a\u4e00\u4e2a Python \u7684 web \u6846\u67b6\uff0c\u65e2\u7b80\u5355\uff0c\u53c8\u5f3a\u5927 web2py\uff1a\u4e00\u4e2a\u5168\u6808 web \u6846\u67b6\u548c\u5e73\u53f0\uff0c\u4e13\u6ce8\u4e8e\u7b80\u5355\u6613\u7528 Tornado\uff1a\u4e00\u4e2a web \u6846\u67b6\u548c\u5f02\u6b65\u7f51\u7edc\u5e93 sanic\uff1a\u57fa\u4e8e Python3.5+ \u7684\u5f02\u6b65\u7f51\u7edc\u6846\u67b6 Karrigell\uff1a\u7b80\u5355\u7684Web\u6846\u67b6\uff0c\u81ea\u8eab\u5305\u542b\u4e86Web\u670d\u52a1\uff0cpy\u811a\u672c\u5f15\u64ce\u548c\u7eafpython\u7684\u6570\u636e\u5e93 PyDBLitewebpy\uff1a\u4e00\u4e2a\u5c0f\u5de7\u7075\u6d3b\u7684 Web \u6846\u67b6\uff0c\u867d\u7136\u7b80\u5355\u4f46\u662f\u529f\u80fd\u5f3a\u5927 Quixote\uff1a\u4e00\u4e2a Web \u5f00\u53d1\u6846\u67b6 Grok\uff1a\u57fa\u4e8e Zope3 \u7684 Web \u6846\u67b6 Bluebream\uff1a\u5f00\u6e90\u7684 Web \u5e94\u7528\u670d\u52a1\u5668\uff0c\u539f\u540dZope3 guava\uff1a\u8f7b\u91cf\u7ea7\uff0c\u9ad8\u6027\u80fd\u7684 Python Web \u6846\u67b6\uff0c\u91c7\u7528 c \u8bed\u8a00\u7f16\u5199 CMS \u00b6 odoo-cms : \u4e00\u4e2a\u5f00\u6e90\u7684\u4f01\u4e1a\u7ea7 CMS\uff0c\u57fa\u4e8e odoo django-cms \uff1a\u4e00\u4e2a\u5f00\u6e90\u7684\u4f01\u4e1a\u7ea7 CMS\uff0c\u57fa\u4e8e Django djedi-cms\uff1a\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u4f46\u5374\u975e\u5e38\u5f3a\u5927\u7684 Django CMS \uff0c\u8003\u8651\u5230\u4e86\u63d2\u4ef6\uff0c\u5185\u8054\u7f16\u8f91\u4ee5\u53ca\u6027\u80fd FeinCMS\uff1a\u57fa\u4e8e Django \u6784\u5efa\u7684\u6700\u5148\u8fdb\u7684 \u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf \u4e4b\u4e00 Kotti\uff1a\u4e00\u4e2a\u9ad8\u7ea7\u7684\uff0cPython \u89c4\u8303\u7684 web \u5e94\u7528\u6846\u67b6\uff0c\u57fa\u4e8e Pyramid \u6784\u5efa Mezzanine\uff1a\u4e00\u4e2a\u5f3a\u5927\u7684\u3001\u6301\u7eed\u7684\uff0c\u7075\u6d3b\u7684\u5185\u5bb9\u7ba1\u7406\u5e73\u53f0 Opps\uff1a\u4e00\u4e2a\u4e3a\u6742\u5fd7\uff0c\u62a5\u7eb8\u7f51\u7ad9\u4ee5\u53ca\u5927\u6d41\u91cf\u95e8\u6237\u7f51\u7ad9\u8bbe\u8ba1\u7684 CMS \u5e73\u53f0\uff0c\u57fa\u4e8e Django Plone\uff1a\u4e00\u4e2a\u6784\u5efa\u4e8e\u5f00\u6e90\u5e94\u7528\u670d\u52a1\u5668 Zope \u4e4b\u4e0a\u7684 CMS Quokka\uff1a\u7075\u6d3b\u53ef\u6269\u5c55\u7684\u5c0f\u578b CMS\uff0c\u57fa\u4e8e Flask \u548c MongoDB Wagtail\uff1a\u4e00\u4e2a Django \u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf Widgy\uff1a\u6700\u65b0\u7684 CMS \u6846\u67b6\uff0c\u57fa\u4e8e Django Web \u6743\u9650/\u5b89\u5168 \u00b6 Carteblanche\uff1a\u7ad9\u5728\u7528\u6237\u548c\u8bbe\u8ba1\u8005\u89d2\u5ea6\u5f00\u53d1\u7684\u4e00\u4e2a\u4ee3\u7801\u5bf9\u9f50\u6a21\u5757\uff0c\u5f88\u597d\u5730\u5904\u7406\u4e86\u4ee3\u7801\u5bfc\u822a\u53ca\u6743\u9650 django-guardian\uff1aDjango 1.2+ \u5b9e\u73b0\u4e86\u5355\u4e2a\u5bf9\u8c61\u6743\u9650 django-rules\uff1a\u4e00\u4e2a\u5c0f\u5de7\u4f46\u662f\u5f3a\u5927\u7684\u5e94\u7528\uff0c\u63d0\u4f9b\u5bf9\u8c61\u7ea7\u522b\u7684\u6743\u9650\u7ba1\u7406\uff0c\u4e14\u4e0d\u9700\u8981\u4f7f\u7528\u6570\u636e\u5e93 Flask-OAuthlib\uff1aFlask\u7684OAuth\u5de5\u5177\u5305sanction\uff0c\u5236\u88c1\uff0c\u7b80\u5355\u7684oauth2\u5ba2\u6237\u7aef django-oauth-toolkit \uff1a\u4e3a Django \u7528\u6237\u51c6\u5907\u7684 OAuth2 django-allauth\uff1aDjango \u7684\u9a8c\u8bc1\u5e94\u7528 Authomatic\uff1a\u7b80\u5355\u4f46\u662f\u5f3a\u5927\u7684\u6846\u67b6\uff0c\u8eab\u4efd\u9a8c\u8bc1/\u6388\u6743\u5ba2\u6237\u7aef \u5546\u52a1\u6846\u67b6 \u00b6 django-oscar \uff1a\u4e00\u4e2a\u7528\u4e8e Django \u7684\u5f00\u6e90\u7684\u7535\u5b50\u5546\u52a1\u6846\u67b6 django-shop \uff1a\u4e00\u4e2a\u57fa\u4e8e Django \u7684\u5e97\u94fa\u7cfb\u7edf Cartridge\uff1a\u4e00\u4e2a\u57fa\u4e8e Mezzanine \u6784\u5efa\u7684\u8d2d\u7269\u8f66\u5e94\u7528 shoop \uff1a\u4e00\u4e2a\u57fa\u4e8e Django \u7684\u5f00\u6e90\u7535\u5b50\u5546\u52a1\u5e73\u53f0 alipay\uff1a\u975e\u5b98\u65b9\u7684 Python \u652f\u4ed8\u5b9d API merchant\uff1a\u4e00\u4e2a\u53ef\u4ee5\u63a5\u6536\u6765\u81ea\u591a\u79cd\u652f\u4ed8\u5e73\u53f0\u652f\u4ed8\u7684 Django \u5e94\u7528 money\uff1a\u4e00\u4e2a\u8d27\u5e01\u7c7b\u5e93\uff0c\u5e26\u6709\u53ef\u9009\u7684 CLDR \u540e\u7aef\u672c\u5730\u5316\u683c\u5f0f\uff0c\u63d0\u4f9b\u53ef\u6269\u5c55\u7684\u8d27\u5e01\u5151\u6362\u89e3\u51b3\u65b9\u6848 python-currencies\uff1a\u663e\u793a\u8d27\u5e01\u683c\u5f0f\u4ee5\u53ca\u5b83\u7684\u6570\u503c Restful API \u00b6 django-rest-framework\uff1a\u4e00\u4e2a\u5f3a\u5927\u7075\u6d3b\u7684\u5de5\u5177\uff0c\u7528\u6765\u6784\u5efa web API django-tastypie\uff1a\u4e3a Django \u5e94\u7528\u5f00\u53d1 API django-formapi\uff1a\u4e3a Django \u7684\u8868\u5355\u9a8c\u8bc1\uff0c\u521b\u5efa JSON APIs flask-api\uff1a\u4e3a flask \u5f00\u53d1\u7684\uff0c\u53ef\u6d4f\u89c8 Web APIs flask-restful\uff1a\u4e3a flask \u5feb\u901f\u521b\u5efa REST APIs flask-restless\uff1a\u4e3a SQLAlchemy \u5b9a\u4e49\u7684\u6570\u636e\u5e93\u6a21\u578b\u521b\u5efa RESTful APIs flask-api-utils\uff1a\u4e3a Flask \u5904\u7406 API \u8868\u793a\u548c\u9a8c\u8bc1 eve\uff1aREST API \u6846\u67b6\uff0c\u7531 Flask, MongoDB \u7b49\u9a71\u52a8 cornice\uff1a\u4e00\u4e2a Pyramid \u7684 REST \u6846\u67b6 falcon\uff1a\u4e00\u4e2a\u7528\u6765\u5efa\u7acb\u4e91 API \u548c Web app \u540e\u7aef\u7684\u9ad8\u6027\u80fd\u6846\u67b6 sandman\uff1a\u4e3a\u73b0\u5b58\u7684\u6570\u636e\u5e93\u9a71\u52a8\u7cfb\u7edf\u81ea\u52a8\u521b\u5efa REST APIs restless\uff1a\u6846\u67b6\u65e0\u5173\u7684 REST \u6846\u67b6\uff0c\u501f\u9274\u4e86 Tastypie ripozo\uff1a\u5feb\u901f\u521b\u5efa REST/HATEOAS/Hypermedia APIs \u6a21\u677f\u5f15\u64ce \u00b6 Chameleon\uff1a\u4e00\u4e2a HTML/XML \u6a21\u677f\u5f15\u64ce\uff0c\u6a21\u4eff\u4e86 ZPT\uff08Zope Page Templates\uff09, \u8fdb\u884c\u4e86\u901f\u5ea6\u4e0a\u7684\u4f18\u5316 Genshi\uff1aPython \u6a21\u677f\u5de5\u5177\uff0c\u7528\u4ee5\u751f\u6210 Web \u611f\u77e5\u7684\u7ed3\u679c Mako\uff1aPython \u5e73\u53f0\u7684\u8d85\u9ad8\u901f\u8f7b\u91cf\u7ea7\u6a21\u677f \u961f\u5217 \u00b6 celery\uff1a\u4e00\u4e2a\u5f02\u6b65\u4efb\u52a1\u961f\u5217/\u4f5c\u4e1a\u961f\u5217\uff0c\u57fa\u4e8e\u5206\u5e03\u5f0f\u6d88\u606f\u4f20\u9012 huey\uff1a\u5c0f\u578b\u591a\u7ebf\u7a0b\u4efb\u52a1\u961f\u5217 mrq\uff1a\u4e00\u4e2a Python \u7684\u5206\u5e03\u5f0f worker \u4efb\u52a1\u961f\u5217\uff0c\u4f7f\u7528 Redis \u548c gevent rq\uff1a\u7b80\u5355\u7684 Python \u4f5c\u4e1a\u961f\u5217 simpleq\uff1a\u4e00\u4e2a\u7b80\u5355\u7684\uff0c\u53ef\u65e0\u9650\u6269\u5f20\u7684\uff0c\u57fa\u4e8e\u4e9a\u9a6c\u900a SQS \u7684\u961f\u5217 \u641c\u7d22 \u00b6 django-haystack\uff1aDjango \u6a21\u5757\u5316\u641c\u7d22 elasticsearch-py\uff1aElasticsearch \u7684\u5b98\u65b9\u5e95\u5c42 Python \u5ba2\u6237\u7aef elasticsearch-dsl-py\uff1aElasticsearch \u7684\u5b98\u65b9\u9ad8\u7ea7 Python \u5ba2\u6237\u7aef solrpy\uff1asolr \u7684 Python \u5ba2\u6237\u7aef Whoosh\uff1a\u4e00\u4e2a\u5feb\u901f\u7684\u7eaf Python \u641c\u7d22\u5f15\u64ce\u5e93 \u52a8\u6001\u6d88\u606f \u00b6 django-activity-stream\uff1a\u4ece\u4f60\u7684\u7ad9\u70b9\u884c\u4e3a\u4e2d\u751f\u6210\u901a\u7528\u6d3b\u52a8\u4fe1\u606f\u6d41 Stream-Framework\uff1a\u4f7f\u7528 Cassandra \u548c Redis \u521b\u5efa\u52a8\u6001\u6d88\u606f\u548c\u901a\u77e5\u7cfb\u7edf \u8d44\u6e90\u7ba1\u7406 \u00b6 django-compressor\uff1a\u5c06\u94fe\u63a5\u548c\u5185\u8054\u7684 JavaScript \u6216 CSS \u538b\u7f29\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u7f13\u5b58\u6587\u4ef6\u4e2d django-storages\uff1a\u4e00\u4e2a\u9488\u5bf9 Django \u7684\u81ea\u5b9a\u4e49\u5b58\u50a8\u540e\u7aef\u7684\u5de5\u5177\u96c6\u5408 fanstatic\uff1a\u6253\u5305\u3001\u4f18\u5316\uff0c\u5e76\u4e14\u628a\u9759\u6001\u6587\u4ef6\u4f9d\u8d56\u4f5c\u4e3a Python \u7684\u5305\u6765\u63d0\u4f9b File Conveyor\uff1a\u4e00\u4e2a\u540e\u53f0\u9a7b\u7559\u7684\u7a0b\u5e8f\uff0c\u7528\u6765\u53d1\u73b0\u548c\u540c\u6b65\u6587\u4ef6\u5230 CDNs,S3 \u548c FTP Flask-Assets\uff1a\u5e2e\u4f60\u5c06 Web \u8d44\u6e90\u6574\u5408\u5230\u4f60\u7684 Flask app \u4e2d jinja-assets-compressor\uff1a\u4e00\u4e2a Jinja \u6269\u5c55\uff0c\u7528\u6765\u7f16\u8bd1\u548c\u538b\u7f29\u4f60\u7684\u8d44\u6e90 webassets\uff1a\u4e3a\u4f60\u7684\u9759\u6001\u8d44\u6e90\u6253\u5305\u3001\u4f18\u5316\u548c\u7ba1\u7406\u751f\u6210\u72ec\u4e00\u65e0\u4e8c\u7684\u7f13\u5b58 URL \u7f13\u5b58 \u00b6 Beaker\uff1a\u4e00\u4e2a\u7f13\u5b58\u4f1a\u8bdd\u7684\u5e93\uff0c\u53ef\u4ee5\u7528\u5728 Web \u5e94\u7528\u548c\u72ec\u7acb Python \u811a\u672c\u548c\u5e94\u7528\u4e0a django-cache-machine\uff1aDjango \u6a21\u578b\u7684\u81ea\u52a8\u7f13\u5b58\u548c\u5931\u6548\u5de5\u5177 django-cacheops\uff1a\u5177\u6709\u81ea\u52a8\u9897\u7c92\u5316\u4e8b\u4ef6\u9a71\u52a8\u5931\u6548\u529f\u80fd\u7684 ORM django-viewlet\uff1a\u6e32\u67d3\u6a21\u677f\uff0c\u540c\u65f6\u5177\u6709\u989d\u5916\u7684\u7f13\u5b58\u63a7\u5236\u529f\u80fd dogpile.cache\uff1adogpile.cache \u662f Beaker \u7684\u4e0b\u4e00\u4ee3\u66ff\u4ee3\u54c1\uff0c\u662f\u7531\u540c\u4e00\u4f5c\u8005\u5f00\u53d1 HermesCache\uff1aPython \u7f13\u5b58\u5e93\uff0c\u5177\u6709\u57fa\u4e8e\u6807\u7b7e\u7684\u5931\u6548\u548c dogpile effect \u4fdd\u62a4\u529f\u80fd johnny-cache\uff1adjango \u5e94\u7528\u7f13\u5b58\u6846\u67b6 pylibmc\uff1alibmemcached \u63a5\u53e3\u7684 Python \u5c01\u88c5 \u8868\u5355 \u00b6 Deform\uff1aPython HTML \u8868\u5355\u751f\u6210\u5e93\uff0c\u53d7\u5230\u4e86 formish \u8868\u5355\u751f\u6210\u5e93\u7684\u542f\u53d1 django-bootstrap3\uff1a\u96c6\u6210\u4e86 Bootstrap3 \u7684 Django django-crispy-forms\uff1a\u4e00\u4e2a Django \u5e94\u7528\uff0c\u4ed6\u53ef\u4ee5\u8ba9\u4f60\u4ee5\u4e00\u79cd\u975e\u5e38\u4f18\u96c5\u4e14 DRY\uff08Don't repeat yourself\uff09 \u7684\u65b9\u5f0f\u6765\u521b\u5efa\u7f8e\u89c2\u7684\u8868\u5355 django-remote-forms\uff1a\u4e00\u4e2a\u5e73\u53f0\u72ec\u7acb\u7684 Django \u8868\u5355\u5e8f\u5217\u5316\u5de5\u5177 WTForms\uff1a\u4e00\u4e2a\u7075\u6d3b\u7684\u8868\u5355\u9a8c\u8bc1\u548c\u5448\u73b0\u5e93 WTForms-JSON\uff1a\u4e00\u4e2a WTForms \u6269\u5c55\uff0c\u7528\u6765\u5904\u7406 JSON \u6570\u636e \u6570\u636e\u9a8c\u8bc1 \u00b6 Cerberus\uff1a\u4e00\u4e2a\u6620\u5c04\u9a8c\u8bc1\u5668\uff08mappings-validator\uff09 colander\uff1a\u4e00\u4e2a\u7528\u4e8e\u5bf9\u4ece XML, JSON\uff0cHTML \u8868\u5355\u83b7\u53d6\u7684\u6570\u636e\u6216\u5176\u4ed6\u540c\u6837\u7b80\u5355\u7684\u5e8f\u5217\u5316\u6570\u636e\u8fdb\u884c\u9a8c\u8bc1\u548c\u53cd\u5e8f\u5217\u5316\u7684\u7cfb\u7edf kmatch\uff1a\u4e00\u79cd\u7528\u4e8e\u5339\u914d/\u9a8c\u8bc1/\u7b5b\u9009 Python \u5b57\u5178\u7684\u8bed\u8a00 schema\uff1a\u4e00\u4e2a\u7528\u4e8e\u5bf9 Python \u6570\u636e\u7ed3\u6784\u8fdb\u884c\u9a8c\u8bc1\u7684\u5e93 Schematics\uff1a\u6570\u636e\u7ed3\u6784\u9a8c\u8bc1 valideer\uff1a\u8f7b\u91cf\u7ea7\u53ef\u6269\u5c55\u7684\u6570\u636e\u9a8c\u8bc1\u548c\u9002\u914d\u5e93 voluptuous\uff1a\u4e00\u4e2a Python \u6570\u636e\u9a8c\u8bc1\u5e93\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u9a8c\u8bc1\u4f20\u5165 Python \u7684 JSON\uff0cYAML \u7b49\u6570\u636e \u7535\u5b50\u90ae\u4ef6 \u00b6 django-celery-ses\uff1a\u5e26\u6709 AWS SES \u548c Celery \u7684 Django email \u540e\u7aef envelopes\uff1a\u975e\u5e38\u4eba\u6027\u5316\u7684\u7535\u5b50\u90ae\u4ef6\u5e93 flanker\uff1a\u4e00\u4e2a email \u5730\u5740\u548c Mime \u89e3\u6790\u5e93 imbox\uff1aPython IMAP \u5e93 inbox.py\uff1aPython SMTP \u670d\u52a1\u5668 inbox\uff1a\u4e00\u4e2a\u5f00\u6e90\u7535\u5b50\u90ae\u4ef6\u5de5\u5177\u7bb1 lamson\uff1aPython \u98ce\u683c\u7684 SMTP \u5e94\u7528\u670d\u52a1\u5668 mailjet\uff1aMailjet API \u5b9e\u73b0\uff0c\u7528\u6765\u63d0\u4f9b\u6279\u91cf\u53d1\u9001\u90ae\u4ef6\uff0c\u7edf\u8ba1\u7b49\u529f\u80fd marrow.mailer\uff1a\u9ad8\u6027\u80fd\u53ef\u6269\u5c55\u90ae\u4ef6\u5206\u53d1\u6846\u67b6 modoboa\uff1a\u4e00\u4e2a\u90ae\u4ef6\u6258\u7ba1\u548c\u7ba1\u7406\u5e73\u53f0\uff0c\u5177\u6709\u73b0\u4ee3\u7684\u3001\u7b80\u7ea6\u7684 Web UI pyzmail\uff1a\u521b\u5efa\u3001\u53d1\u9001\u548c\u89e3\u6790\u7535\u5b50\u90ae\u4ef6 Talon\uff1aMailgun \u5e93\uff0c\u7528\u6765\u62bd\u53d6\u4fe1\u606f\u548c\u7b7e\u540d django-simple-captcha\uff1a\u4e00\u4e2a\u7b80\u5355\u3001\u9ad8\u5ea6\u53ef\u5b9a\u5236\u7684 Django \u5e94\u7528\uff0c\u53ef\u4ee5\u4e3a\u4efb\u4f55 Django \u8868\u5355\u6dfb\u52a0\u9a8c\u8bc1\u7801 django-simple-spam-blocker\uff1a\u4e00\u4e2a\u7528\u4e8e Django \u7684\u7b80\u5355\u7684\u7535\u5b50\u5783\u573e\u5c4f\u853d\u5de5\u5177 URL \u00b6 webargs\uff1a\u4e00\u4e2a\u89e3\u6790 HTTP \u8bf7\u6c42\u53c2\u6570\u7684\u5e93\uff0c\u5185\u7f6e\u5bf9\u6d41\u884c web \u6846\u67b6\u7684\u652f\u6301\uff0c\u5305\u62ec Flask, Django, Bottle, Tornado \u548c Pyramid short_url\uff1a\u77ed\u7f51\u5740\u751f\u6210 \u56fd\u9645\u5316 \u00b6 Babel\uff1a\u4e00\u4e2a Python \u7684\u56fd\u9645\u5316\u5e93 Korean\uff1a\u4e00\u4e2a\u97e9\u8bed\u8bcd\u6001\u5e93 \u7ba1\u7406\u9762\u677f \u00b6 Ajenti\uff1a\u4e00\u4e2a\u670d\u52a1\u5668\u503c\u5f97\u62e5\u6709\u7684\u7ba1\u7406\u9762\u677f django-suit\uff1aDjango \u7ba1\u7406\u754c\u9762\u7684\u4e00\u4e2a\u66ff\u4ee3\u54c1 (\u4ec5\u5bf9\u4e8e\u975e\u5546\u4e1a\u7528\u9014\u662f\u514d\u8d39\u7684) django-xadmin\uff1aDjango admin \u7684\u4e00\u4e2a\u66ff\u4ee3\u54c1\uff0c\u5177\u6709\u5f88\u591a\u4e0d\u9519\u7684\u529f\u80fd flask-admin\uff1a\u4e00\u4e2a\u7528\u4e8e Flask \u7684\u7b80\u5355\u53ef\u6269\u5c55\u7684\u7ba1\u7406\u754c\u9762\u6846\u67b6 flower\uff1a\u4e00\u4e2a\u5bf9 Celery \u96c6\u7fa4\u8fdb\u884c\u5b9e\u65f6\u76d1\u63a7\u548c\u63d0\u4f9b Web \u7ba1\u7406\u754c\u9762\u7684\u5de5\u5177 Grappelli\uff1aDjango \u7ba1\u7406\u754c\u9762\u7684\u4e00\u4e2a\u6f02\u4eae\u7684\u76ae\u80a4 Wooey\uff1a\u4e00\u4e2a Django \u5e94\u7528\uff0c\u53ef\u4ee5\u4e3a Python \u811a\u672c\u521b\u5efa Web \u7528\u6237\u754c\u9762 \u9759\u6001\u7ad9\u70b9\u751f\u6210 \u00b6 Pelican\uff1a\u4f7f\u7528 Markdown \u6216 ReST \u6765\u5904\u7406\u5185\u5bb9\uff0cJinja2 \u6765\u5236\u4f5c\u4e3b\u9898 Cactus\uff1a\u4e3a\u8bbe\u8ba1\u5e08\u8bbe\u8ba1\u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668 Hyde\uff1a\u57fa\u4e8e Jinja2 \u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668 Nikola\uff1a\u4e00\u4e2a\u9759\u6001\u7f51\u7ad9\u548c\u535a\u5ba2\u751f\u6210\u5668 Tinkerer\uff1aTinkerer \u662f\u4e00\u4e2a\u535a\u5ba2\u5f15\u64ce/\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\uff0c\u7531 Sphinx \u9a71\u52a8 Lektor\uff1a\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684\u9759\u6001 CMS \u548c\u535a\u5ba2\u5f15\u64ce Tags\uff1a\u6700\u7b80\u5355\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668 WSGI \u670d\u52a1\u5668 \u00b6 gunicorn\uff1aPre-forked\uff0c\u90e8\u5206\u662f\u7531 C \u8bed\u8a00\u7f16\u5199\u7684 uwsgi\uff1auwsgi \u9879\u76ee\u7684\u76ee\u7684\u662f\u5f00\u53d1\u4e00\u7ec4\u5168\u6808\u5de5\u5177\uff0c\u7528\u6765\u5efa\u7acb\u6258\u7ba1\u670d\u52a1\uff0c\u7531 C \u8bed\u8a00\u7f16\u5199 bjoern\uff1a\u5f02\u6b65\uff0c\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u7531 C \u8bed\u8a00\u7f16\u5199 fapws3\uff1a\u5f02\u6b65 (\u4ec5\u5bf9\u4e8e\u7f51\u7edc\u7aef)\uff0c\u7531 C \u8bed\u8a00\u7f16\u5199 meinheld\uff1a\u5f02\u6b65\uff0c\u90e8\u5206\u662f\u7531 C \u8bed\u8a00\u7f16\u5199\u7684 netius\uff1a\u5f02\u6b65\uff0c\u975e\u5e38\u5feb\u901f paste\uff1a\u591a\u7ebf\u7a0b\uff0c\u7a33\u5b9a\uff0c\u4e45\u7ecf\u8003\u9a8c rocket\uff1a\u591a\u7ebf\u7a0b waitress\uff1a\u591a\u7ebf\u7a0b\uff0cPyramid \u6846\u67b6\u7531\u5b83\u9a71\u52a8 Werkzeug\uff1a\u4e00\u4e2a WSGI \u5de5\u5177\u5e93\uff0c\u9a71\u52a8\u7740 Flask\uff0c\u800c\u4e14\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5927\u5d4c\u5165\u5230\u4f60\u7684\u9879\u76ee\u4e2d\u53bb ORM \u00b6 Django Models\uff1aDjango \u7684\u4e00\u90e8\u5206 SQLAlchemy\uff1aPython SQL \u5de5\u5177\u4ee5\u53ca\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\u5de5\u5177 Peewee\uff1a\u4e00\u4e2a\u5c0f\u5de7\uff0c\u5bcc\u6709\u8868\u8fbe\u529b\u7684 ORM PonyORM\uff1a\u63d0\u4f9b\u9762\u5411\u751f\u6210\u5668\u7684 SQL \u63a5\u53e3\u7684 ORM python-sql\uff1a\u7f16\u5199 Python \u98ce\u683c\u7684 SQL \u67e5\u8be2 django-mongodb-engine\uff1aDjango MongoDB \u540e\u7aef PynamoDB\uff1aAmazon DynamoDB \u7684\u4e00\u4e2a Python \u98ce\u683c\u63a5\u53e3 flywheel\uff1aAmazon DynamoDB \u7684\u5bf9\u8c61\u6620\u5c04\u5de5\u5177 MongoEngine\uff1a\u4e00\u4e2a Python \u5bf9\u8c61\u6587\u6863\u6620\u5c04\u5de5\u5177\uff0c\u7528\u4e8e MongoDB hot-redis\uff1a\u4e3a Redis \u63d0\u4f9b Python \u4e30\u5bcc\u7684\u6570\u636e\u7c7b\u578b redisco\uff1a\u4e00\u4e2a Python \u5e93\uff0c\u63d0\u4f9b\u53ef\u4ee5\u6301\u7eed\u5b58\u5728\u5728 Redis \u4e2d\u7684\u7b80\u5355\u6a21\u578b\u548c\u5bb9\u5668 butterdb\uff1aGoogle Drive \u7535\u5b50\u8868\u683c\u7684 Python ORM \u5730\u7406\u4f4d\u7f6e \u00b6 GeoDjango\uff1a\u4e16\u754c\u7ea7\u5730\u7406\u56fe\u5f62 web \u6846\u67b6 GeoIP\uff1aMaxMind GeoIP Legacy \u6570\u636e\u5e93\u7684 Python API geojson\uff1aGeoJSON \u7684 Python \u7ed1\u5b9a\u53ca\u5de5\u5177 geopy\uff1aPython \u5730\u5740\u7f16\u7801\u5de5\u5177\u7bb1 pygeoip\uff1a\u7eaf Python GeoIP API django-countries\uff1a\u4e00\u4e2a Django \u5e94\u7528\u7a0b\u5e8f\uff0c\u63d0\u4f9b\u7528\u4e8e\u8868\u683c\u7684\u56fd\u5bb6\u9009\u62e9\u529f\u80fd\uff0c\u56fd\u65d7\u56fe\u6807\u9759\u6001\u6587\u4ef6\u4ee5\u53ca\u6a21\u578b\u4e2d\u7684\u56fd\u5bb6\u5b57\u6bb5 \u7cfb\u7edf \u00b6 \u8fdb\u7a0b \u00b6 envoy\uff1a\u6bd4 Python subprocess \u6a21\u5757\u66f4\u4eba\u6027\u5316 sarge\uff1a\u53e6\u4e00 \u79cd subprocess \u6a21\u5757\u7684\u5c01\u88c5 sh\uff1a\u4e00\u4e2a\u5b8c\u5907\u7684 subprocess \u66ff\u4ee3\u5e93 subprocess\uff1a\u8c03\u7528 shell \u547d\u4ee4\u7684\u795e\u5668 \u5e76\u53d1/\u5e76\u884c \u00b6 multiprocessing\uff1a(Python \u6807\u51c6\u5e93) \u57fa\u4e8e\u8fdb\u7a0b\u7684\u201c\u7ebf\u7a0b\u201d\u63a5\u53e3 threading\uff1a(Python \u6807\u51c6\u5e93)\u66f4\u9ad8\u5c42\u7684\u7ebf\u7a0b\u63a5\u53e3 eventlet\uff1a\u652f\u6301 WSGI \u7684\u5f02\u6b65\u6846\u67b6 gevent\uff1a\u4e00\u4e2a\u57fa\u4e8e\u534f\u7a0b\u7684 Python \u7f51\u7edc\u5e93\uff0c\u4f7f\u7528 greenlet Tomorrow\uff1a\u7528\u4e8e\u4ea7\u751f\u5f02\u6b65\u4ee3\u7801\u7684\u795e\u5947\u7684\u88c5\u9970\u5668\u8bed\u6cd5\u5b9e\u73b0 uvloop\uff1a\u5728 libuv \u4e4b\u4e0a\u8d85\u5feb\u901f\u5b9e\u73b0 asyncio \u4e8b\u4ef6\u5faa\u73af \u6570\u636e\u5e93\u76f8\u5173 \u00b6 Python \u5b9e\u73b0\u7684\u6570\u636e\u5e93 \u00b6 pickleDB\uff1a\u4e00\u4e2a\u7b80\u5355\u8f7b\u91cf\u7ea7\u952e\u503c\u50a8\u5b58\u6570\u636e\u5e93 PipelineDB\uff1a\u6d41\u5f0f SQL \u6570\u636e\u5e93 TinyDB\uff1a\u4e00\u4e2a\u5fae\u578b\u7684\u9762\u5411\u6587\u6863\u578b\u6570\u636e\u5e93 ZODB\uff1a\u4e00\u4e2a Python \u539f\u751f\u5bf9\u8c61\u6570\u636e\u5e93\u3002\u4e00\u4e2a\u952e\u503c\u548c\u5bf9\u8c61\u56fe\u6570\u636e\u5e93 \u6570\u636e\u5e93\u9a71\u52a8 \u00b6 aiomysql\uff1a\u57fa\u4e8e asyncio \u7684\u5f02\u6b65 MySQL \u6570\u636e\u5e93\u64cd\u4f5c\u5e93 mysql-python\uff1aPython \u7684 MySQL \u6570\u636e\u5e93\u8fde\u63a5\u5668 ysqlclient\uff1amysql-python \u5206\u652f\uff0c\u652f\u6301 Python 3 oursql\uff1a\u4e00\u4e2a\u66f4\u597d\u7684 MySQL \u8fde\u63a5\u5668\uff0c\u652f\u6301\u539f\u751f\u9884\u7f16\u8bd1\u6307\u4ee4\u548c BLOBs PyMySQL\uff1a\u7eaf Python MySQL \u9a71\u52a8\uff0c\u517c\u5bb9 mysql-python psycopg2\uff1aPython \u4e2d\u6700\u6d41\u884c\u7684 PostgreSQL \u9002\u914d\u5668 queries\uff1apsycopg2 \u5e93\u7684\u5c01\u88c5\uff0c\u7528\u6765\u548c PostgreSQL \u8fdb\u884c\u4ea4\u4e92 txpostgres\uff1a\u57fa\u4e8e Twisted \u7684\u5f02\u6b65 PostgreSQL \u9a71\u52a8 apsw\uff1a\u53e6\u4e00\u4e2a Python SQLite \u5c01\u88c5 dataset\uff1a\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8 Python \u5b57\u5178 pymssql\uff1a\u4e00\u4e2a\u7b80\u5355\u7684 Microsoft SQL Server \u6570\u636e\u5e93\u63a5\u53e3 cassandra-python-driver\uff1aCassandra \u7684 Python \u9a71\u52a8 HappyBase\uff1a\u4e00\u4e2a\u4e3a Apache HBase \u8bbe\u8ba1\u7684\uff0c\u5bf9\u5f00\u53d1\u8005\u53cb\u597d\u7684\u5e93 Plyvel\uff1a\u4e00\u4e2a\u5feb\u901f\u4e14\u529f\u80fd\u4e30\u5bcc\u7684 LevelDB \u7684 Python \u63a5\u53e3 py2neo\uff1aNeo4j restful \u63a5\u53e3\u7684 Python \u5c01\u88c5\u5ba2\u6237\u7aef pycassa\uff1aCassandra \u7684 Python Thrift \u9a71\u52a8 PyMongo\uff1aMongoDB \u7684\u5b98\u65b9 Python \u5ba2\u6237\u7aef redis-py\uff1aRedis \u7684 Python \u5ba2\u6237\u7aef telephus\uff1a\u57fa\u4e8e Twisted \u7684 Cassandra \u5ba2\u6237\u7aef txRedis\uff1a\u57fa\u4e8e Twisted \u7684 Redis \u5ba2\u6237\u7aef \u9a8c\u8bc1 \u00b6 OAuth \u00b6 OAuthLib\uff1a\u4e00\u4e2a OAuth \u8bf7\u6c42-\u7b7e\u540d\u903b\u8f91\u901a\u7528\u3001\u5b8c\u6574\u7684\u5b9e\u73b0 python-oauth2\uff1a\u4e00\u4e2a\u5b8c\u5168\u6d4b\u8bd5\u7684\u62bd\u8c61\u63a5\u53e3\uff0c\u7528\u6765\u521b\u5efa OAuth \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef python-social-auth\uff1a\u4e00\u4e2a\u8bbe\u7f6e\u7b80\u5355\u7684\u793e\u4f1a\u5316\u9a8c\u8bc1\u65b9\u5f0f rauth\uff1aOAuth 1.0/a, 2.0, \u548c Ofly \u7684 Python \u5e93 sanction\uff1a\u4e00\u4e2a\u8d85\u7ea7\u7b80\u5355\u7684 OAuth2 \u5ba2\u6237\u7aef\u5b9e\u73b0 \u5bc6\u7801 \u00b6 cryptography\uff1a\u8fd9\u4e2a\u8f6f\u4ef6\u5305\u610f\u5728\u63d0\u4f9b\u5bc6\u7801\u5b66\u57fa\u672c\u5185\u5bb9\u548c\u65b9\u6cd5\u63d0\u4f9b\u7ed9 Python \u5f00\u53d1\u8005 hashids\uff1a\u5728 Python \u4e2d\u5b9e\u73b0 hashids Paramiko\uff1aSSHv2 \u534f\u8bae\u7684 Python (2.6+, 3.3+) \uff0c\u63d0\u4f9b\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u529f\u80fd Passlib\uff1a\u5b89\u5168\u5bc6\u7801\u5b58\u50a8\uff0f\u54c8\u5e0c\u5e93 PyCrypto\uff1aPython \u5bc6\u7801\u5b66\u5de5\u5177\u7bb1 PyNacl\uff1a\u7f51\u7edc\u548c\u5bc6\u7801\u5b66(NaCl) \u5e93\u7684 Python \u7ed1\u5b9a \u5176\u4ed6 \u00b6 jose\uff1aJavaScript \u5bf9\u8c61\u7b7e\u540d\u548c\u52a0\u5bc6\u8349\u6848\u7684\u5b9e\u73b0 PyJWT\uff1aJSON Web \u4ee4\u724c\u8349\u684801 python-jws\uff1aJSON Web \u7b7e\u540d\u8349\u684802\u7684\u5b9e\u73b0 python-jwt\uff1a\u4e00\u4e2a\u7528\u6765\u751f\u6210\u548c\u9a8c\u8bc1 JSON Web \u4ee4\u724c\u7684\u6a21\u5757 Permissions\uff1a\u51fd\u6570\u5e93\uff0c\u5141\u8bb8\u6216\u62d2\u7edd\u7528\u6237\u8bbf\u95ee\u6570\u636e\u6216\u51fd\u6570 \u4eba\u5de5\u667a\u80fd \u00b6 \u81ea\u7136\u8bed\u8a00\u5904\u7406 \u00b6 NLTK\uff1a\u4e00\u4e2a\u5148\u8fdb\u7684\u7528\u4ee5\u6784\u5efa\u5904\u7406\u4eba\u7c7b\u8bed\u8a00\u6570\u636e\u7684 Python \u7a0b\u5e8f jieba\uff1a\u4e2d\u6587\u5206\u8bcd\u5de5\u5177 langid.py\uff1a\u72ec\u7acb\u7684\u8bed\u8a00\u8bc6\u522b\u7cfb\u7edf SnowNLP\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406\u4e2d\u6587\u6587\u672c\u7684\u5e93 TextBlob\uff1a\u4e3a\u8fdb\u884c\u666e\u901a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4efb\u52a1\u63d0\u4f9b\u4e00\u81f4\u7684 API TextGrocery\uff1a\u4e00\u7b80\u5355\u9ad8\u6548\u7684\u77ed\u6587\u672c\u5206\u7c7b\u5de5\u5177\uff0c\u57fa\u4e8e LibLinear \u548c Jieba thulac\uff1a\u6e05\u534e\u5927\u5b66\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e0e\u793e\u4f1a\u4eba\u6587\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u7814\u5236\u63a8\u51fa\u7684\u4e00\u5957\u4e2d\u6587\u8bcd\u6cd5\u5206\u6790\u5de5\u5177\u5305 loso\uff1a\u4e2d\u6587\u5206\u8bcd\u51fd\u6570\u5e93 \u8ba1\u7b97\u673a\u89c6\u89c9 \u00b6 OpenCV\uff1a\u5f00\u6e90\u8ba1\u7b97\u673a\u89c6\u89c9\u5e93 pyocr\uff1aTesseract \u548c Cuneiform \u7684\u5305\u88c5\u5e93 pytesseract\uff1aGoogle Tesseract OCR \u7684\u53e6\u4e00\u5305\u88c5\u5e93 SimpleCV\uff1a\u4e00\u4e2a\u7528\u6765\u521b\u5efa\u8ba1\u7b97\u673a\u89c6\u89c9\u5e94\u7528\u7684\u5f00\u6e90\u6846\u67b6 \u673a\u5668\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60 \u00b6 Caffe: \u4e00\u4e2a Caffe \u7684 Python \u63a5\u53e3 Caffe2\uff1a\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u3001\u6a21\u5757\u5316\u7684\uff0c\u53ef\u6269\u5c55\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6 Crab\uff1a\u7075\u6d3b\u3001\u5feb\u901f\u7684\u63a8\u8350\u5f15\u64ce gensim\uff1a\u4eba\u6027\u5316\u7684\u8bdd\u9898\u5efa\u6a21\u5e93 hebel\uff1aGPU \u52a0\u901f\u7684\u6df1\u5ea6\u5b66\u4e60\u5e93 keras: \u4ee5 tensorflow/theano/CNTK \u4e3a\u540e\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\u5c01\u88c5\u5e93\uff0c\u53ef\u4ee5\u5feb\u901f\u4e0a\u624b\u7684\u795e\u7ecf\u7f51\u7edc MXNet\uff1a\u4e00\u4e2a\u9ad8\u6548\u548c\u7075\u6d3b\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6 NuPIC\uff1a\u667a\u80fd\u8ba1\u7b97 Numenta \u5e73\u53f0 pattern\uff1aPython \u7f51\u7edc\u6316\u6398\u6a21\u5757 PyBrain\uff1a\u4e00\u4e2a Python \u673a\u5668\u5b66\u4e60\u5e93 pydeep\uff1aPython \u6df1\u5ea6\u5b66\u4e60\u5e93 Pylearn2\uff1a\u4e00\u4e2a\u57fa\u4e8e Theano \u7684\u673a\u5668\u5b66\u4e60\u5e93 python-recsys\uff1a\u4e00\u4e2a\u7528\u6765\u5b9e\u73b0\u63a8\u8350\u7cfb\u7edf\u7684 Python \u5e93 Pytorch\uff1a\u4e00\u4e2a\u5177\u6709\u5f20\u91cf\u548c\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u6709\u5f3a\u5927 GPU \u52a0\u901f\u80fd\u529b\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6 scikit-learn\uff1a\u57fa\u4e8e SciPy \u6784\u5efa\u7684\u673a\u5668\u5b66\u4e60 Python \u6a21\u5757 skflow\uff1a\u4e00\u4e2a TensorFlow \u7684\u7b80\u5316\u63a5\u53e3(\u6a21\u4eff scikit-learn) TensorFlow\uff1a\u8c37\u6b4c\u5f00\u6e90\u7684\u6700\u53d7\u6b22\u8fce\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6 Theano\uff1a\u4e00\u4e2a\u5feb\u901f\u6570\u503c\u8ba1\u7b97\u5e93 vowpalporpoise\uff1a\u8f7b\u91cf\u7ea7 Vowpal Wabbit \u7684 Python \u5c01\u88c5 Milk\uff1a\u673a\u5668\u5b66\u4e60\u5de5\u5177\u7bb1\uff0c\u5176\u91cd\u70b9\u662f\u63d0\u4f9b\u76d1\u7763\u5206\u7c7b\u6cd5\u4e0e\u51e0\u79cd\u6709\u6548\u7684\u5206\u7c7b\u5206\u6790\uff1aSVMs(\u57fa\u4e8elibsvm)\uff0cK-NN\uff0c \u968f\u673a\u68ee\u6797 \u7ecf\u6d4e\u548c\u51b3\u7b56\u6811 PyMVPA(Multivariate Pattern Analysis in Python)\uff1a\u4e3a\u5927\u6570\u636e\u96c6\u63d0\u4f9b\u7edf\u8ba1\u5b66\u4e60\u5206\u6790\u7684 Python \u5de5\u5177\u5305\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7075\u6d3b\u53ef\u6269\u5c55\u7684\u6846\u67b6 \u79d1\u5b66\u8ba1\u7b97\u4e0e\u6570\u636e\u5206\u6790 \u00b6 \u6570\u636e\u5904\u7406 \u00b6 astropy\uff1a\u4e00\u4e2a\u5929\u6587\u5b66\u76f8\u5173\u7684 Python \u5e93 bcbio-nextgen\uff1a\u8fd9\u4e2a\u5de5\u5177\u7bb1\u4e3a\u5168\u81ea\u52a8\u9ad8\u901a\u91cf\u6d4b\u5e8f\u5206\u6790\u63d0\u4f9b\u7b26\u5408\u6700\u4f73\u5b9e\u8df5\u7684\u5904\u7406\u6d41\u7a0b bccb\uff1a\u751f\u7269\u5206\u6790\u76f8\u5173\u4ee3\u7801\u96c6\u5408 Biopython\uff1aBiopython \u662f\u4e00\u7ec4\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u7684\u7528\u6765\u8fdb\u884c\u751f\u7269\u8ba1\u7b97\u7684\u5de5\u5177 blaze\uff1aNumPy \u548c Pandas \u7684\u5927\u6570\u636e\u63a5\u53e3 cclib\uff1a\u4e00\u4e2a\u7528\u6765\u89e3\u6790\u548c\u89e3\u91ca\u8ba1\u7b97\u5316\u5b66\u8f6f\u4ef6\u5305\u8f93\u51fa\u7ed3\u679c\u7684\u5e93 NetworkX\uff1a\u4e00\u4e2a\u4e3a\u590d\u6742\u7f51\u7edc\u8bbe\u8ba1\u7684\u9ad8\u6027\u80fd\u8f6f\u4ef6 Neupy\uff1a\u6267\u884c\u548c\u6d4b\u8bd5\u5404\u79cd\u4e0d\u540c\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5 Numba\uff1aPython JIT (just in time) \u7f16\u8bd1\u5668\uff0c\u9488\u5bf9\u79d1\u5b66\u7528\u7684 Python \uff0c\u7531 Cython \u548c NumPy \u7684\u5f00\u53d1\u8005\u5f00\u53d1 NumPy\uff1a\u4f7f\u7528 Python \u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u5305 Open Babel\uff1a\u4e00\u4e2a\u5316\u5b66\u5de5\u5177\u7bb1\uff0c\u7528\u6765\u63cf\u8ff0\u591a\u79cd\u5316\u5b66\u6570\u636e Open Mining\uff1a\u4f7f\u7528 Python \u6316\u6398\u5546\u4e1a\u60c5\u62a5 (BI) (Pandas web \u63a5\u53e3) orange\uff1a\u901a\u8fc7\u53ef\u89c6\u5316\u7f16\u7a0b\u6216 Python \u811a\u672c\u8fdb\u884c\u6570\u636e\u6316\u6398\uff0c\u6570\u636e\u53ef\u89c6\u5316\uff0c\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60 Pandas\uff1a\u63d0\u4f9b\u9ad8\u6027\u80fd\uff0c\u6613\u7528\u7684\u6570\u636e\u7ed3\u6784\u548c\u6570\u636e\u5206\u6790\u5de5\u5177 PyDy\uff1aPyDy \u662f Python Dynamics \u7684\u7f29\u5199\uff0c\u7528\u6765\u4e3a\u52a8\u529b\u5b66\u8fd0\u52a8\u5efa\u6a21\u5de5\u4f5c\u6d41\u7a0b\u63d0\u4f9b\u5e2e\u52a9\uff0c \u57fa\u4e8e NumPy, SciPy, IPython \u548c matplotlib PyMC\uff1a\u9a6c\u5c14\u79d1\u592b\u94fe \u8499\u7279\u5361\u6d1b \u91c7\u6837\u5de5\u5177 RDKit\uff1a\u5316\u5b66\u4fe1\u606f\u5b66\u548c\u673a\u5668\u5b66\u4e60\u8f6f\u4ef6 SciPy\uff1a\u7528\u4e8e\u6570\u5b66\uff0c\u79d1\u5b66\u548c\u5de5\u7a0b\u7684\u5f00\u6e90\u8f6f\u4ef6\u6784\u6210\u7684\u751f\u6001\u7cfb\u7edf statsmodels\uff1a\u7edf\u8ba1\u5efa\u6a21\u548c\u8ba1\u91cf\u7ecf\u6d4e\u5b66 SymPy\uff1a\u4e00\u4e2a\u7528\u4e8e\u7b26\u53f7\u6570\u5b66\u7684 Python \u5e93 zipline\uff1a\u4e00\u4e2a Python \u7b97\u6cd5\u4ea4\u6613\u5e93 Bayesian-belief-networks\uff1a\u4f18\u96c5\u7684\u8d1d\u53f6\u65af\u4fe1\u5ff5\u7f51\u7edc\u6846\u67b6 ScientificPython\uff1a\u4e00\u7ec4\u7ecf\u8fc7\u6311\u9009\u7684 Python \u7a0b\u5e8f\u6a21\u5757\uff0c\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97 visvis\uff1a\u53ef\u89c6\u5316\u8ba1\u7b97\u6a21\u5757\u5e93\uff0c\u53ef\u8fdb\u884c\u4e00\u7ef4\u5230\u56db\u7ef4\u6570\u636e\u7684\u53ef\u89c6\u5316 \u6570\u636e\u53ef\u89c6\u5316 \u00b6 matplotlib\uff1a\u4e00\u4e2a Python 2D \u7ed8\u56fe\u5e93 bokeh\uff1a\u7528 Python \u8fdb\u884c\u4ea4\u4e92\u5f0f web \u7ed8\u56fe ggplot\uff1aggplot2 \u7ed9 R \u63d0\u4f9b\u7684 API \u7684 Python \u7248\u672c plotly\uff1a\u534f\u540c Python \u548c matplotlib \u5de5\u4f5c\u7684 web \u7ed8\u56fe\u5e93 pyecharts\uff1a\u57fa\u4e8e\u767e\u5ea6 Echarts \u7684\u6570\u636e\u53ef\u89c6\u5316\u5e93 pygal\uff1a\u4e00\u4e2a Python SVG \u56fe\u8868\u521b\u5efa\u5de5\u5177 pygraphviz\uff1aGraphviz \u7684 Python \u63a5\u53e3 PyQtGraph\uff1a\u4ea4\u4e92\u5f0f\u5b9e\u65f6 2D/3D/ \u56fe\u50cf\u7ed8\u5236\u53ca\u79d1\u5b66/\u5de5\u7a0b\u5b66\u7ec4\u4ef6 SnakeViz\uff1a\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684 Python's cProfile \u6a21\u5757\u8f93\u51fa\u7ed3\u679c\u67e5\u770b\u5de5\u5177 vincent\uff1a\u628a Python \u8f6c\u6362\u4e3a Vega \u8bed\u6cd5\u7684\u8f6c\u6362\u5de5\u5177 VisPy\uff1a\u57fa\u4e8e OpenGL \u7684\u9ad8\u6027\u80fd\u79d1\u5b66\u53ef\u89c6\u5316\u5de5\u5177 GUI \u4e0e\u6e38\u620f\u5f00\u53d1 \u00b6 GUI \u00b6 curses\uff1a\u5185\u5efa\u7684 ncurses \u5c01\u88c5\uff0c\u7528\u6765\u521b\u5efa\u7ec8\u7aef\u56fe\u5f62\u7528\u6237\u754c\u9762 enaml\uff1a\u4f7f\u7528\u7c7b\u4f3c QML \u7684 Declaratic \u8bed\u6cd5\u6765\u521b\u5efa\u7f8e\u89c2\u7684\u7528\u6237\u754c\u9762 kivy\uff1a\u4e00\u4e2a\u7528\u6765\u521b\u5efa\u7528\u6237\u4ea4\u4e92\u5e94\u7528\u7a0b\u5e8f\u7684\u5e93\uff0c\u53ef\u4ee5\u8fd0\u884c\u5728 Windows, Linux, Mac OS X, Android \u4ee5\u53ca iOS \u5e73\u53f0\u4e0a pyglet\uff1a\u4e00\u4e2a Python \u7684\u8de8\u5e73\u53f0\u7a97\u53e3\u53ca\u591a\u5a92\u4f53\u5e93 PyQt\uff1a\u8de8\u5e73\u53f0\u7528\u6237\u754c\u9762\u6846\u67b6 Qt \u7684 Python \u7ed1\u5b9a \uff0c\u652f\u6301 Qt v4 \u548c Qt v5 PySide\uff1a\u8de8\u5e73\u53f0\u7528\u6237\u754c\u9762\u6846\u67b6 Qt \u7684 Python \u7ed1\u5b9a \uff0c\u652f\u6301 Qt v4 Tkinter\uff1aTkinter \u662f Python GUI \u7684\u4e00\u4e2a\u4e8b\u5b9e\u6807\u51c6\u5e93 Toga\uff1a\u4e00\u4e2a Python \u539f\u751f\u7684, \u64cd\u4f5c\u7cfb\u7edf\u539f\u751f\u7684 GUI \u5de5\u5177\u5305 urwid\uff1a\u4e00\u4e2a\u7528\u6765\u521b\u5efa\u7ec8\u7aef GUI \u5e94\u7528\u7684\u5e93\uff0c\u652f\u6301\u7ec4\u4ef6\uff0c\u4e8b\u4ef6\u548c\u4e30\u5bcc\u7684\u8272\u5f69\u7b49 wxPython\uff1awxPython \u662f wxWidgets C++ \u7c7b\u5e93\u548c Python \u8bed\u8a00\u6df7\u5408\u7684\u4ea7\u7269 PyGObject\uff1aGLib/GObject/GIO/GTK+ (GTK+3) \u7684 Python \u7ed1\u5b9a Flexx\uff1aFlexx \u662f\u4e00\u4e2a\u7eaf Python \u8bed\u8a00\u7f16\u5199\u7684\u7528\u6765\u521b\u5efa GUI \u7a0b\u5e8f\u7684\u5de5\u5177\u96c6\uff0c\u5b83\u4f7f\u7528 web \u6280\u672f\u8fdb\u884c\u754c\u9762\u7684\u5c55\u793a PyGtk\uff1a\u57fa\u4e8e Python \u7684 GUI \u7a0b\u5e8f\u5f00\u53d1 GTK+ \u5e93 turtle\uff1aPython \u7684\u753b\u56fe\u5de5\u5177 \u6e38\u620f\u5f00\u53d1 \u00b6 Cocos2d\uff1acocos2d \u662f\u4e00\u4e2a\u7528\u6765\u5f00\u53d1 2D \u6e38\u620f Panda3D\uff1a\u7531\u8fea\u58eb\u5c3c\u5f00\u53d1\u7684 3D \u6e38\u620f\u5f15\u64ce\uff0c\u5e76\u7531\u5361\u5185\u57fa\u6885\u9647\u5a31\u4e50\u6280\u672f\u4e2d\u5fc3\u8d1f\u8d23\u7ef4\u62a4\u3002\u4f7f\u7528 C++ \u7f16\u5199, \u9488\u5bf9 Python \u8fdb\u884c\u4e86\u5b8c\u5168\u7684\u5c01\u88c5 Pygame\uff1aPygame \u662f\u4e00\u7ec4 Python \u6a21\u5757\uff0c\u7528\u6765\u7f16\u5199\u6e38\u620f PyOgre\uff1aOgre 3D \u6e32\u67d3\u5f15\u64ce\u7684 Python \u7ed1\u5b9a\uff0c\u53ef\u4ee5\u7528\u6765\u5f00\u53d1\u6e38\u620f\u548c\u4eff\u771f\u7a0b\u5e8f\u7b49\u4efb\u4f55 3D \u5e94\u7528 PyOpenGL\uff1aOpenGL \u7684 Python \u7ed1\u5b9a\u53ca\u5176\u76f8\u5173 APIs PySDL2\uff1aSDL2 \u5e93\u7684\u5c01\u88c5\uff0c\u57fa\u4e8e ctypes RenPy\uff1a\u4e00\u4e2a\u89c6\u89c9\u5c0f\u8bf4\uff08visual novel\uff09\u5f15\u64ce PySFML\uff1aPython \u7ed1\u5b9a SFMLRenPy\uff0c\u89c6\u89c9\u5c0f\u8bf4\u5f15\u64ce \u97f3\u89c6\u9891 \u00b6 \u97f3\u9891 \u00b6 audiolazy\uff1aPython \u7684\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5305 audioread\uff1a\u4ea4\u53c9\u5e93 (GStreamer + Core Audio + MAD + FFmpeg) \u97f3\u9891\u89e3\u7801 beets\uff1a\u4e00\u4e2a\u97f3\u4e50\u5e93\u7ba1\u7406\u5de5\u5177\u53ca MusicBrainz \u6807\u7b7e\u6dfb\u52a0\u5de5\u5177 dejavu\uff1a\u97f3\u9891\u6307\u7eb9\u63d0\u53d6\u548c\u8bc6\u522b django-elastic-transcoder\uff1aDjango + Amazon Elastic Transcoder eyeD3\uff1a\u4e00\u4e2a\u7528\u6765\u64cd\u4f5c\u97f3\u9891\u6587\u4ef6\u7684\u5de5\u5177\uff0c\u5177\u4f53\u6765\u8bb2\u5c31\u662f\u5305\u542b ID3 \u5143\u4fe1\u606f\u7684 MP3 \u6587\u4ef6 id3reader\uff1a\u4e00\u4e2a\u7528\u6765\u8bfb\u53d6 MP3 \u5143\u6570\u636e\u7684 Python \u6a21\u5757 m3u8\uff1a\u4e00\u4e2a\u7528\u6765\u89e3\u6790 m3u8 \u6587\u4ef6\u7684\u6a21\u5757 mutagen\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406\u97f3\u9891\u5143\u6570\u636e\u7684 Python \u6a21\u5757 pydub\uff1a\u901a\u8fc7\u7b80\u5355\u3001\u7b80\u6d01\u7684\u9ad8\u5c42\u63a5\u53e3\u6765\u64cd\u4f5c\u97f3\u9891\u6587\u4ef6 pyechonest\uff1aEcho Nest API \u7684 Python \u5ba2\u6237\u7aef talkbox\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406\u6f14\u8bb2/\u4fe1\u53f7\u7684 Python \u5e93 TimeSide\uff1a\u5f00\u6e90 web \u97f3\u9891\u5904\u7406\u6846\u67b6 tinytag\uff1a\u4e00\u4e2a\u7528\u6765\u8bfb\u53d6 MP3, OGG, FLAC \u4ee5\u53ca Wave \u6587\u4ef6\u97f3\u4e50\u5143\u6570\u636e\u7684\u5e93 mingus\uff1a\u4e00\u4e2a\u9ad8\u7ea7\u97f3\u4e50\u7406\u8bba\u548c\u66f2\u8c31\u5305\uff0c\u652f\u6301 MIDI \u6587\u4ef6\u548c\u56de\u653e\u529f\u80fd \u89c6\u9891 \u00b6 moviepy\uff1a\u4e00\u4e2a\u7528\u6765\u8fdb\u884c\u57fa\u4e8e\u811a\u672c\u7684\u89c6\u9891\u7f16\u8f91\u6a21\u5757\uff0c\u9002\u7528\u4e8e\u591a\u79cd\u683c\u5f0f\uff0c\u5305\u62ec\u52a8\u56fe GIFs scikit-video\uff1aSciPy \u89c6\u9891\u5904\u7406\u5e38\u7528\u7a0b\u5e8f http://shorten.tv \uff1a\u89c6\u9891\u6458\u8981 \u6d4b\u8bd5\u76f8\u5173 \u00b6 \u6d4b\u8bd5\u6846\u67b6 \u00b6 unittest\uff1a(Python \u6807\u51c6\u5e93) \u5355\u5143\u6d4b\u8bd5\u6846\u67b6 nose\uff1anose \u6269\u5c55\u4e86 unittest \u7684\u529f\u80fd contexts\uff1a\u4e00\u4e2a Python 3.3+ \u7684 BDD \u6846\u67b6 hypothesis\uff1aHypothesis \u662f\u4e00\u4e2a\u57fa\u4e8e\u5148\u8fdb\u7684 Quickcheck \u98ce\u683c\u7279\u6027\u7684\u6d4b\u8bd5\u5e93 mamba\uff1aPython \u7684\u7ec8\u6781\u6d4b\u8bd5\u5de5\u5177\uff0c\u62e5\u62a4 BDD PyAutoGUI\uff1aPyAutoGUI \u662f\u4e00\u4e2a\u4eba\u6027\u5316\u7684\u8de8\u5e73\u53f0 GUI \u81ea\u52a8\u6d4b\u8bd5\u6a21\u5757 pyshould\uff1aShould \u98ce\u683c\u7684\u65ad\u8a00\uff0c\u57fa\u4e8e PyHamcrest pytest\uff1a\u4e00\u4e2a\u6210\u719f\u7684\u5168\u529f\u80fd Python \u6d4b\u8bd5\u5de5\u5177 green\uff1a\u5e72\u51c0\u591a\u5f69\u7684\u6d4b\u8bd5\u5de5\u5177 pyvows\uff1aBDD \u98ce\u683c\u7684\u6d4b\u8bd5\u5de5\u5177\uff0c\u53d7 Vows.js \u7684\u542f\u53d1 Robot Framework\uff1a\u4e00\u4e2a\u901a\u7528\u7684 \u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6 Web \u6d4b\u8bd5 \u00b6 Selenium\uff1aSelenium WebDriver \u7684 Python \u7ed1\u5b9a locust\uff1a\u4f7f\u7528 Python \u7f16\u5199\u7684\uff0c\u53ef\u6269\u5c55\u7684\u7528\u6237\u52a0\u8f7d\u6d4b\u8bd5\u5de5\u5177 sixpack\uff1a\u4e00\u4e2a\u548c\u8bed\u8a00\u65e0\u5173\u7684 A/B \u6d4b\u8bd5\u6846\u67b6 splinter\uff1a\u5f00\u6e90\u7684 Web \u5e94\u7528\u6d4b\u8bd5\u5de5\u5177 Mock \u6d4b\u8bd5 \u00b6 mock\uff1a(Python \u6807\u51c6\u5e93) \u4e00\u4e2a\u7528\u4e8e\u4f2a\u9020\u6d4b\u8bd5\u7684\u5e93 doublex\uff1aPython \u7684\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684 doubles \u6d4b\u8bd5\u6846\u67b6 freezegun\uff1a\u901a\u8fc7\u4f2a\u9020\u65e5\u671f\u6a21\u5757\u6765\u751f\u6210\u4e0d\u540c\u7684\u65f6\u95f4 httmock\uff1a\u9488\u5bf9 Python 2.6+ \u548c 3.2+ \u751f\u6210 \u4f2a\u9020\u8bf7\u6c42\u7684\u5e93 httpretty\uff1aPython \u7684 HTTP \u8bf7\u6c42 mock \u5de5\u5177 responses\uff1a\u4f2a\u9020 Python \u4e2d\u7684 requests \u5e93\u7684\u4e00\u4e2a\u901a\u7528\u5e93 VCR.py\uff1a\u5728\u4f60\u7684\u6d4b\u8bd5\u4e2d\u8bb0\u5f55\u548c\u91cd\u653e HTTP \u4ea4\u4e92 \u5bf9\u8c61\u5de5\u5382 \u00b6 factoryboy\uff1a\u4e00\u4e2a Python \u7528\u7684\u6d4b\u8bd5\u56fa\u4ef6 (test fixtures) \u66ff\u4ee3\u5e93 mixer\uff1a\u53e6\u5916\u4e00\u4e2a\u6d4b\u8bd5\u56fa\u4ef6 (test fixtures) \u66ff\u4ee3\u5e93\uff0c\u652f\u6301 Django, Flask, SQLAlchemy, Peewee \u7b49 modelmommy\uff1a\u4e3a Django \u6d4b\u8bd5\u521b\u5efa\u968f\u673a\u56fa\u4ef6 \u4ee3\u7801\u8986\u76d6\u7387 \u00b6 coverage\uff1a\u4ee3\u7801\u8986\u76d6\u7387\u6d4b\u91cf Codecov\uff1a\u4e00\u4e2a\u4ee3\u7801\u8986\u76d6\u7387\u6d4b\u8bd5\u5de5\u5177\uff0c\u4e3a\u5f00\u6e90\u9879\u76ee\u63d0\u4f9b\u514d\u8d39\u4ee3\u7801\u8986\u76d6\u7387\u6d4b\u8bd5\u670d\u52a1 \u4f2a\u6570\u636e \u00b6 faker\uff1a\u4e00\u4e2a Python \u5e93\uff0c\u7528\u6765\u751f\u6210\u4f2a\u6570\u636e fake2db\uff1a\u4f2a\u6570\u636e\u5e93\u751f\u6210\u5668 radar\uff1a\u751f\u6210\u968f\u673a\u7684\u65e5\u671f/\u65f6\u95f4 FuckIt.py\uff1aFuckIt.py \u4f7f\u7528\u6700\u5148\u8fdb\u7684\u6280\u672f\u6765\u4fdd\u8bc1\u4f60\u7684 Python \u4ee3\u7801\u65e0\u8bba\u5bf9\u9519\u90fd\u80fd\u7ee7\u7eed\u8fd0\u884c \u4ee3\u7801\u5de5\u5177 \u00b6 \u4ee3\u7801\u5206\u6790 \u00b6 coala\uff1a\u8bed\u8a00\u72ec\u7acb\u548c\u6613\u4e8e\u6269\u5c55\u7684\u4ee3\u7801\u5206\u6790\u5e94\u7528\u7a0b\u5e8f code2flow\uff1a\u628a\u4f60\u7684 Python \u548c JavaScript \u4ee3\u7801\u8f6c\u6362\u4e3a\u6d41\u7a0b\u56fe pycallgraph\uff1a\u8fd9\u4e2a\u5e93\u53ef\u4ee5\u628a\u4f60\u7684 Python \u5e94\u7528\u7684\u6d41\u7a0b(\u8c03\u7528\u56fe)\u8fdb\u884c\u53ef\u89c6\u5316 pysonar2\uff1aPython \u7c7b\u578b\u63a8\u65ad\u548c\u68c0\u7d22\u5de5\u5177 Lint \u5de5\u5177 \u00b6 Flake8\uff1a\u6a21\u5757\u5316\u6e90\u7801\u68c0\u67e5\u5de5\u5177: pep8, pyflakes \u4ee5\u53ca co Pylint\uff1a\u4e00\u4e2a\u5b8c\u5168\u53ef\u5b9a\u5236\u7684\u6e90\u7801\u5206\u6790\u5668 YAPF: Google \u7684 Python \u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177 pylama\uff1aPython \u548c JavaScript \u7684\u4ee3\u7801\u5ba1\u67e5\u5de5\u5177 \u8c03\u8bd5\u5668 \u00b6 ipdb\uff1aIPython \u542f\u7528\u7684 pdb pudb\uff1a\u5168\u5c4f\uff0c\u57fa\u4e8e\u63a7\u5236\u53f0\u7684 Python \u8c03\u8bd5\u5668 pyringe\uff1a\u53ef\u4ee5\u5728 Python \u8fdb\u7a0b\u4e2d\u9644\u52a0\u548c\u6ce8\u5165\u4ee3\u7801\u7684\u8c03\u8bd5\u5668 wdb\uff1a\u4e00\u4e2a\u5947\u5f02\u7684 web \u8c03\u8bd5\u5668\uff0c\u901a\u8fc7 WebSockets \u5de5\u4f5c winpdb\uff1a\u4e00\u4e2a\u5177\u6709\u56fe\u5f62\u7528\u6237\u754c\u9762\u7684 Python \u8c03\u8bd5\u5668\uff0c\u53ef\u4ee5\u8fdb\u884c\u8fdc\u7a0b\u8c03\u8bd5\uff0c\u57fa\u4e8e rpdb2 django-debug-toolbar\uff1a\u4e3a Django \u663e\u793a\u5404\u79cd\u8c03\u8bd5\u4fe1\u606f django-devserver\uff1a\u4e00\u4e2a Django \u8fd0\u884c\u670d\u52a1\u5668\u7684\u66ff\u4ee3\u54c1 flask-debugtoolbar\uff1adjango-debug-toolbar \u7684 flask \u7248 \u6027\u80fd\u5206\u6790 \u00b6 lineprofiler\uff1a\u9010\u884c\u6027\u80fd\u5206\u6790 Memory Profiler\uff1a\u76d1\u63a7 Python \u4ee3\u7801\u7684\u5185\u5b58\u4f7f\u7528 profiling\uff1a\u4e00\u4e2a\u4ea4\u4e92\u5f0f Python \u6027\u80fd\u5206\u6790\u5de5\u5177 pyelftools\uff1a\u89e3\u6790\u548c\u5206\u6790 ELF \u6587\u4ef6\u4ee5\u53ca DWARF \u8c03\u8bd5\u4fe1\u606f python-statsd\uff1astatsd \u670d\u52a1\u5668\u7684 Python \u5ba2\u6237\u7aef \u65e5\u5fd7 \u00b6 logging\uff1a(Python \u6807\u51c6\u5e93) \u4e3a Python \u63d0\u4f9b\u65e5\u5fd7\u529f\u80fd logbook\uff1aLogging \u5e93\u7684\u66ff\u4ee3\u54c1 Eliot\uff1a\u4e3a\u590d\u6742\u7684\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u521b\u5efa\u65e5\u5fd7 Raven\uff1aSentry \u7684 Python \u5ba2\u6237\u7aef Sentry\uff1a\u5b9e\u65f6\u8bb0\u5f55\u548c\u6536\u96c6\u65e5\u5fd7\u7684\u670d\u52a1\u5668 \u6301\u7eed\u96c6\u6210 \u00b6 Travis CI\uff1a\u4e00\u4e2a\u6d41\u884c\u7684\u5de5\u5177\uff0c\u4e3a\u4f60\u7684\u5f00\u6e90\u548c \u79c1\u4eba \u9879\u76ee\u63d0\u4f9b\u6301\u7eed\u96c6\u6210\u670d\u52a1 CircleCI\uff1a\u4e00\u4e2a\u6301\u7eed\u96c6\u6210\u5de5\u5177\uff0c\u53ef\u4ee5\u975e\u5e38\u5feb\u901f\u7684\u8fdb\u884c\u5e76\u884c\u6d4b\u8bd5 Vexor CI\uff1a\u4e00\u4e2a\u4e3a\u79c1\u4eba app \u63d0\u4f9b\u6301\u7eed\u96c6\u6210\u7684\u5de5\u5177\uff0c\u652f\u6301\u6309\u5206\u949f\u4ed8\u8d39 Wercker\uff1a\u57fa\u4e8e Docker \u5e73\u53f0\uff0c\u7528\u6765\u6784\u5efa\u548c\u90e8\u7f72\u5fae\u670d\u52a1 \u4ee3\u7801\u8d28\u91cf \u00b6 Codacy\uff1a\u81ea\u52a8\u5316\u4ee3\u7801\u5ba1\u67e5\uff0c\u66f4\u52a0\u5feb\u901f\u7684\u53d1\u5e03\u9ad8\u8d28\u91cf\u4ee3\u7801\u3002\u5bf9\u4e8e\u5f00\u6e90\u9879\u76ee\u662f\u514d\u8d39\u7684 QuantifiedCode\uff1a\u4e00\u4e2a\u6570\u636e\u9a71\u52a8\u3001\u81ea\u52a8\u3001\u6301\u7eed\u7684\u4ee3\u7801\u5ba1\u67e5\u5de5\u5177 DevOps \u00b6 Ansible\uff1a\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 IT \u81ea\u52a8\u5316\u5e73\u53f0 SaltStack\uff1a\u57fa\u7840\u8bbe\u65bd\u81ea\u52a8\u5316\u548c\u7ba1\u7406\u7cfb\u7edf OpenStack\uff1a\u7528\u4e8e\u6784\u5efa\u79c1\u6709\u548c\u516c\u6709\u4e91\u7684\u5f00\u6e90\u8f6f\u4ef6 Docker Compose\uff1a\u5feb\u901f\u5206\u79bb\u7684\u5f00\u53d1\u73af\u5883\uff0c\u4f7f\u7528 Docker Fabric\uff1a\u4e00\u4e2a\u7b80\u5355\u7684 Python \u98ce\u683c\u7684\u5de5\u5177\uff0c\u7528\u6765\u8fdb\u884c\u8fdc\u7a0b\u6267\u884c\u548c\u90e8\u7f72 cuisine\uff1a\u4e3a Fabric \u63d0\u4f9b\u4e00\u7cfb\u5217\u9ad8\u7ea7\u51fd\u6570 Fabtools\uff1a\u4e00\u4e2a\u7528\u6765\u7f16\u5199\u8d85\u8d5e\u7684 Fabric \u6587\u4ef6\u7684\u5de5\u5177 gitapi\uff1aGit \u7684\u7eaf Python API hgapi\uff1aMercurial \u7684\u7eaf Python API honcho\uff1aForeman \u7684 Python \u514b\u9686\u7248\uff0c\u7528\u6765\u7ba1\u7406\u57fa\u4e8e Procfile \u7684\u5e94\u7528 pexpect\uff1aControlling interactive programs in a pseudo-terminal like \u5728\u4e00\u4e2a\u4f2a\u7ec8\u7aef\u4e2d\u63a7\u5236\u4ea4\u4e92\u7a0b\u5e8f\uff0c\u5c31\u50cf GNU expect \u4e00\u6837 psutil\uff1a\u4e00\u4e2a\u8de8\u5e73\u53f0\u8fdb\u7a0b\u548c\u7cfb\u7edf\u5de5\u5177\u6a21\u5757 supervisor\uff1aUNIX \u7684\u8fdb\u7a0b\u63a7\u5236\u7cfb\u7edf \u4efb\u52a1\u8c03\u5ea6 \u00b6 APScheduler\uff1a\u8f7b\u5de7\u4f46\u5f3a\u5927\u7684\u8fdb\u7a0b\u5185\u4efb\u52a1\u8c03\u5ea6\uff0c\u4f7f\u4f60\u53ef\u4ee5\u8c03\u5ea6\u51fd\u6570 django-schedule\uff1a\u4e00\u4e2a Django \u6392\u7a0b\u5e94\u7528 doit\uff1a\u4e00\u4e2a\u4efb\u52a1\u6267\u884c\u548c\u6784\u5efa\u5de5\u5177 gunnery\uff1a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4f7f\u7528\u7684\u591a\u7528\u9014\u4efb\u52a1\u6267\u884c\u5de5\u5177 \uff0c\u5177\u6709 web \u4ea4\u4e92\u754c\u9762 Joblib\uff1a\u4e00\u7ec4\u4e3a Python \u63d0\u4f9b\u8f7b\u91cf\u7ea7\u4f5c\u4e1a\u6d41\u6c34\u7ebf\u7684\u5de5\u5177 Plan\uff1a\u5982\u6709\u795e\u52a9\u5730\u7f16\u5199 crontab \u6587\u4ef6 schedule\uff1a\u4eba\u6027\u5316\u7684 Python \u4efb\u52a1\u8c03\u5ea6\u5e93 Spiff\uff1a\u4f7f\u7528\u7eaf Python \u5b9e\u73b0\u7684\u5f3a\u5927\u7684\u5de5\u4f5c\u6d41\u5f15\u64ce TaskFlow\uff1a\u4e00\u4e2a\u53ef\u4ee5\u8ba9\u4f60\u65b9\u4fbf\u6267\u884c\u4efb\u52a1\u7684 Python \u5e93\uff0c\u4e00\u81f4\u5e76\u4e14\u53ef\u9760 AirFlow\uff1aAirflow \u662fAirbnb\u516c\u53f8\u5f00\u6e90\u7684\uff0c\u662f\u4e00\u4e2a\u5de5\u4f5c\u6d41\u5206\u914d\u7ba1\u7406\u7cfb\u7edf\uff0c\u901a\u8fc7\u6709\u5411\u975e\u5faa\u73af\u56fe\u7684\u65b9\u5f0f\u7ba1\u7406\u4efb\u52a1\u6d41\u7a0b\uff0c\u8bbe\u7f6e\u4efb\u52a1\u4f9d\u8d56\u5173\u7cfb\u548c\u65f6\u95f4\u8c03\u5ea6 \u9ad8\u6027\u80fd \u00b6 Cython\uff1a\u4f18\u5316\u7684 Python \u9759\u6001\u7f16\u8bd1\u5668\u3002\u4f7f\u7528\u7c7b\u578b\u6df7\u5408\u4f7f Python \u7f16\u8bd1\u6210 C \u6216 C++ \u6a21\u5757\u6765\u83b7\u5f97\u6027\u80fd\u7684\u6781\u5927\u63d0\u5347 PeachPy\uff1a\u5d4c\u5165 Python \u7684 x86-64 \u6c47\u7f16\u5668\u3002\u53ef\u4ee5\u88ab\u7528\u4f5c Python \u5185\u8054\u7684\u6c47\u7f16\u5668\u6216\u8005\u662f\u72ec\u7acb\u7684\u6c47\u7f16\u5668\uff0c\u7528\u4e8e Windows, Linux, OS X, Native Client \u6216\u8005 Go PyPy\uff1a\u4f7f\u7528 Python \u5b9e\u73b0\u7684 Python\u3002\u89e3\u91ca\u5668\u4f7f\u7528 \u9ed1\u9b54\u6cd5 \u52a0\u5feb Python \u8fd0\u884c\u901f\u5ea6\u4e14\u4e0d\u9700\u8981\u52a0\u5165\u989d\u5916\u7684\u7c7b\u578b\u4fe1\u606f Pyston\uff1a\u4f7f\u7528 LLVM \u548c\u73b0\u4ee3 JIT \u6280\u672f\u6784\u5efa\u7684 Python \u5b9e\u73b0\uff0c\u76ee\u6807\u662f\u4e3a\u4e86\u83b7\u5f97\u5f88\u597d\u7684\u6027\u80fd Stackless Python\uff1a\u4e00\u4e2a\u5f3a\u5316\u7248\u7684 Python Windows \u73af\u5883 \u00b6 Python(x,y)\uff1a\u9762\u5411\u79d1\u5b66\u5e94\u7528\u7684 Python \u53d1\u884c\u7248\uff0c\u57fa\u4e8e Qt \u548c Spyder pythonlibs\uff1a\u975e\u5b98\u65b9\u7684 Windows \u5e73\u53f0 Python \u6269\u5c55\u4e8c\u8fdb\u5236\u5305 PythonNet\uff1aPython \u4e0e .NET \u516c\u5171\u8bed\u8a00\u8fd0\u884c\u5e93 (CLR)\u7684\u96c6\u6210 PyWin32\uff1a\u9488\u5bf9 Windows \u7684 Python \u6269\u5c55 WinPython\uff1aWindows \u215e \u7cfb\u7edf\u4e0b\u4fbf\u643a\u5f0f\u5f00\u53d1\u73af\u5883 \u786c\u4ef6\u76f8\u5173 \u00b6 ino\uff1a\u64cd\u4f5c Arduino \u7684\u547d\u4ee4\u884c\u5de5\u5177 Pyro\uff1aPython \u673a\u5668\u4eba\u7f16\u7a0b\u5e93 PyUserInput\uff1a\u8de8\u5e73\u53f0\u7684\uff0c\u63a7\u5236\u9f20\u6807\u548c\u952e\u76d8\u7684\u6a21\u5757 scapy\uff1a\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u64cd\u4f5c\u6570\u636e\u5305\u7684\u5e93 wifi\uff1a\u4e00\u4e2a Python \u5e93\u548c\u547d\u4ee4\u884c\u5de5\u5177\u7528\u6765\u5728 Linux \u5e73\u53f0\u4e0a\u64cd\u4f5c WiFi Pingo\uff1aPingo \u4e3a\u7c7b\u4f3c Raspberry Pi\uff0cpcDuino\uff0c Intel Galileo \u7b49\u8bbe\u5907\u63d0\u4f9b\u7edf\u4e00\u7684 API \u7528\u4ee5\u7f16\u7a0b \u73af\u5883\u4e0e\u5305\u7ba1\u7406 \u00b6 \u73af\u5883\u7ba1\u7406 \u00b6 p\uff1a\u975e\u5e38\u7b80\u5355\u7684\u4ea4\u4e92\u5f0f Python \u7248\u672c\u7ba1\u7406\u5de5\u5177 pyenv\uff1a\u7b80\u5355\u7684 Python \u7248\u672c\u7ba1\u7406\u5de5\u5177 Vex\uff1a\u53ef\u4ee5\u5728\u865a\u62df\u73af\u5883\u4e2d\u6267\u884c\u547d\u4ee4 virtualenvwrapper\uff1avirtualenv \u7684\u4e00\u7ec4\u6269\u5c55 pew\uff1a\u4e00\u5957\u7ba1\u7406\u591a\u4e2a\u865a\u62df\u73af\u5883\u7684\u5de5\u5177 PyRun\uff1a\u4e00\u4e2a\u5355\u6587\u4ef6\uff0c\u65e0\u9700\u5b89\u88c5\u7684Python\u7248\u672c\u7ba1\u7406\u5de5\u5177 \u5305\u7ba1\u7406 \u00b6 pip\uff1aPython \u5305\u548c\u4f9d\u8d56\u5173\u7cfb\u7ba1\u7406\u5de5\u5177 pip-tools\uff1a\u4fdd\u8bc1 Python \u5305\u4f9d\u8d56\u5173\u7cfb\u66f4\u65b0\u7684\u4e00\u7ec4\u5de5\u5177 pipenv\uff1aPyhton \u5b98\u65b9\u63a8\u8350\u7684\u65b0\u4e00\u4ee3\u5305\u7ba1\u7406\u5de5\u5177 conda\uff1a\u8de8\u5e73\u53f0\uff0cPython \u4e8c\u8fdb\u5236\u5305\u7ba1\u7406\u5de5\u5177 Curdling\uff1a\u7ba1\u7406 Python \u5305\u7684\u547d\u4ee4\u884c\u5de5\u5177 wheel\uff1aPython \u5206\u53d1\u7684\u65b0\u6807\u51c6\uff0c\u610f\u5728\u53d6\u4ee3 eggs Pdm\uff1a\u65b0\u4e00\u4ee3\u5305\u7ba1\u7406\u5de5\u5177 easy_install\uff1a\u8f6f\u4ef6\u5305\u7ba1\u7406\u7cfb\u7edf \u5305\u4ed3\u5e93 \u00b6 warehouse\uff1a\u4e0b\u4e00\u4ee3 PyPI bandersnatch\uff1aPyPA \u63d0\u4f9b\u7684 PyPI \u955c\u50cf\u5de5\u5177 devpi\uff1aPyPI \u670d\u52a1\u548c\u6253\u5305/\u6d4b\u8bd5/\u5206\u53d1\u5de5\u5177 localshop\uff1a\u672c\u5730 PyPI \u670d\u52a1\uff08\u81ea\u5b9a\u4e49\u5305\u5e76\u4e14\u81ea\u52a8\u5bf9 PyPI \u955c\u50cf\uff09 PyPI\uff1a\u65b0\u4e00\u4ee3\u7684 Python \u5305\u5e93\u7ba1\u7406\u5de5\u5177 \u5206\u53d1\u4e0e\u6784\u5efa \u00b6 \u8f6f\u4ef6\u5206\u53d1 \u00b6 PyInstaller\uff1a\u5c06 Python \u7a0b\u5e8f\u8f6c\u6362\u6210\u72ec\u7acb\u7684\u6267\u884c\u6587\u4ef6\uff08\u8de8\u5e73\u53f0\uff09 dh-virtualenv\uff1a\u6784\u5efa\u5e76\u5c06 virtualenv \u865a\u62df\u73af\u5883\u4f5c\u4e3a\u4e00\u4e2a Debian \u5305\u6765\u53d1\u5e03 Nuitka\uff1a\u5c06\u811a\u672c\u3001\u6a21\u5757\u3001\u5305\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u6587\u4ef6\u6216\u6269\u5c55\u6a21\u5757 py2app\uff1a\u5c06 Python \u811a\u672c\u53d8\u4e3a\u72ec\u7acb\u8f6f\u4ef6\u5305\uff08Mac OS X\uff09 py2exe\uff1a\u5c06 Python \u811a\u672c\u53d8\u4e3a\u72ec\u7acb\u8f6f\u4ef6\u5305\uff08Windows\uff09 pynsist\uff1a\u4e00\u4e2a\u7528\u6765\u521b\u5efa Windows \u5b89\u88c5\u7a0b\u5e8f\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5728\u5b89\u88c5\u7a0b\u5e8f\u4e2d\u6253\u5305 Python \u672c\u8eab cx-Freeze\uff1a\u8de8\u5e73\u53f0\u7684\uff0c\u7528\u4e8e\u6253\u5305\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5e93 \u6784\u5efa \u00b6 buildout\uff1a\u4e00\u4e2a\u6784\u5efa\u7cfb\u7edf\uff0c\u4ece\u591a\u4e2a\u7ec4\u4ef6\u6765\u521b\u5efa\uff0c\u7ec4\u88c5\u548c\u90e8\u7f72\u5e94\u7528 BitBake\uff1a\u9488\u5bf9\u5d4c\u5165\u5f0f Linux \u7684\u7c7b\u4f3c make \u7684\u6784\u5efa\u5de5\u5177 fabricate\uff1a\u5bf9\u4efb\u4f55\u8bed\u8a00\u81ea\u52a8\u627e\u5230\u4f9d\u8d56\u5173\u7cfb\u7684\u6784\u5efa\u5de5\u5177 PlatformIO\uff1a\u591a\u5e73\u53f0\u547d\u4ee4\u884c\u6784\u5efa\u5de5\u5177 PyBuilder\uff1a\u7eaf Python \u5b9e\u73b0\u7684\u6301\u7eed\u5316\u6784\u5efa\u5de5\u5177 SCons\uff1a\u8f6f\u4ef6\u6784\u5efa\u5de5\u5177 \u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668 \u00b6 IPython\uff1a\u529f\u80fd\u4e30\u5bcc\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u975e\u5e38\u6709\u6548\u7684\u4f7f\u7528\u4ea4\u4e92\u5f0f Python bpython\uff1a\u754c\u9762\u4e30\u5bcc\u7684 Python \u89e3\u6790\u5668 ptpython\uff1a\u9ad8\u7ea7\u4ea4\u4e92\u5f0f Python \u89e3\u6790\u5668\uff0c\u6784\u5efa\u4e8e python-prompt-toolkit \u4e4b\u4e0a \u547d\u4ee4\u884c\u76f8\u5173 \u00b6 \u547d\u4ee4\u884c\u5de5\u5177 \u00b6 asciimatics\uff1a\u8de8\u5e73\u53f0\u3001\u5168\u5c4f\u7ec8\u7aef\u5e93\uff08\u5373\u9f20\u6807/\u952e\u76d8\u8f93\u5165\u548c\u5f69\u8272\uff0c\u5b9a\u4f4d\u6587\u672c\u8f93\u51fa\uff09\uff0c\u5305\u542b\u5b8c\u6574\u7684\u590d\u6742\u52a8\u753b\u548c\u7279\u6b8a\u6548\u679c\u7684\u9ad8\u7ea7 API cement\uff1aPython \u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u6846\u67b6 click\uff1a\u4e00\u4e2a\u901a\u8fc7\u7ec4\u5408\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u7cbe\u7f8e\u547d\u4ee4\u884c\u754c\u9762\u7684\u5305 cliff\uff1a\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684\u6846\u67b6\uff0c\u53ef\u4ee5\u521b\u5efa\u5177\u6709\u591a\u5c42\u547d\u4ee4\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f clint\uff1aPython \u547d\u4ee4\u884c\u7a0b\u5e8f\u5de5\u5177 colorama\uff1a\u8de8\u5e73\u53f0\u5f69\u8272\u7ec8\u7aef\u6587\u672c docopt\uff1aPython \u98ce\u683c\u7684\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790\u5668 Gooey\uff1a\u4e00\u6761\u547d\u4ee4\uff0c\u5c06\u547d\u4ee4\u884c\u7a0b\u5e8f\u53d8\u6210\u4e00\u4e2a GUI \u7a0b\u5e8f python-prompt-toolkit\uff1a\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u5f3a\u5927\u7684\u4ea4\u4e92\u5f0f\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684\u5e93 python-fire\uff1aGoogle \u51fa\u54c1\u7684\u4e00\u4e2a\u57fa\u4e8e Python \u7c7b\u7684\u6784\u5efa\u547d\u4ee4\u884c\u754c\u9762\u7684\u5e93 Pythonpy\uff1a\u5728\u547d\u4ee4\u884c\u4e2d\u76f4\u63a5\u6267\u884c\u4efb\u4f55 Python \u6307\u4ee4 Clime\uff1a\u53ef\u4ee5\u8f6c\u6362\u4efb\u4f55\u6a21\u5757\u4e3a\u591a\u7684 CLI \u547d\u4ee4\u7a0b\u5e8f\uff0c\u65e0\u4efb\u4f55\u914d\u7f6e docopt\uff1aPython \u547d\u4ee4\u884c\u53c2\u6570\u5206\u6790\u5668 pycli\uff1a\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u652f\u6301\u7684\u6807\u51c6\u547d\u4ee4\u884c\u89e3\u6790\uff0c\u6d4b\u4e95\uff0c\u5355\u5143\u6d4b\u8bd5\u548c\u529f\u80fd\u6d4b\u8bd5 rainbowstream\uff1a\u63a8\u7279\u5ba2\u6237\u7ec8\u7aef argparse\uff1a\u5199\u547d\u4ee4\u884c\u811a\u672c\u5fc5\u5907\uff0c\u5f3a\u5927\u7684\u547d\u4ee4\u884c\u5dee\u6570\u89e3\u6790\u5de5\u5177 pyHook\uff1a\u57fa\u4e8e Python \u7684\u201c\u94a9\u5b50\u201d\u5e93\uff0c\u4e3b\u8981\u7528\u4e8e\u76d1\u542c\u5f53\u524d\u7535\u8111\u4e0a\u9f20\u6807\u548c\u952e\u76d8\u7684\u4e8b\u4ef6 pstuil\uff1a\u8de8\u5e73\u53f0\u5730\u5f88\u65b9\u4fbf\u83b7\u53d6\u548c\u63a7\u5236\u7cfb\u7edf\u7684\u8fdb\u7a0b\uff0c\u4ee5\u53ca\u8bfb\u53d6\u7cfb\u7edf\u7684 CPU \u5360\u7528\u5185\u5b58\u5360\u7528\u7b49\u4fe1\u606f \u547d\u4ee4\u884c\u9ad8\u7ea7\u5de5\u5177 \u00b6 aws-cli\uff1aAmazon Web Services \u7684\u901a\u7528\u547d\u4ee4\u884c\u754c\u9762 bashplotlib\uff1a\u5728\u7ec8\u7aef\u4e2d\u8fdb\u884c\u57fa\u672c\u7ed8\u56fe caniusepython3\uff1a\u5224\u65ad\u662f\u54ea\u4e2a\u9879\u76ee\u59a8\u788d\u4f60\u4f60\u79fb\u690d\u5230 Python3 cookiecutter\uff1a\u4ece cookiecutters\uff08\u9879\u76ee\u6a21\u677f\uff09\u521b\u5efa\u9879\u76ee\u7684\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177 doitlive\uff1a\u4e00\u4e2a\u7528\u6765\u5728\u7ec8\u7aef\u4e2d\u8fdb\u884c\u73b0\u573a\u6f14\u793a\u7684\u5de5\u5177 pyftpdlib\uff1a\u4e00\u4e2a\u901f\u5ea6\u6781\u5feb\u548c\u53ef\u6269\u5c55\u7684 Python FTP \u670d\u52a1\u5e93 howdoi\uff1a\u901a\u8fc7\u547d\u4ee4\u884c\u83b7\u53d6\u5373\u65f6\u7684\u7f16\u7a0b\u95ee\u9898\u89e3\u7b54 httpie\uff1a\u4e00\u4e2a\u547d\u4ee4\u884c HTTP \u5ba2\u6237\u7aef\uff0ccURL \u7684\u66ff\u4ee3\u54c1\uff0c\u6613\u7528\u6027\u66f4\u597d PathPicker\uff1a\u4ece bash \u8f93\u51fa\u4e2d\u9009\u51fa\u6587\u4ef6 percol\uff1a\u5411 UNIX shell \u4f20\u7edf\u7ba1\u9053\u6982\u5ff5\u4e2d\u52a0\u5165\u4ea4\u4e92\u5f0f\u9009\u62e9\u529f\u80fd SAWS\uff1a\u4e00\u4e2a\u52a0\u5f3a\u7248\u7684 AWS \u547d\u4ee4\u884c thefuck\uff1a\u4fee\u6b63\u4f60\u4e4b\u524d\u7684\u547d\u4ee4\u884c\u6307\u4ee4 mycli\uff1a\u4e00\u4e2a MySQL \u547d\u4ee4\u884c\u5ba2\u6237\u7aef\uff0c\u5177\u6709\u81ea\u52a8\u8865\u5168\u548c\u8bed\u6cd5\u9ad8\u4eae\u529f\u80fd pgcli\uff1aPostgres \u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5177\u6709\u81ea\u52a8\u8865\u5168\u548c\u8bed\u6cd5\u9ad8\u4eae\u529f\u80fd try\uff1a\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u6765\u8bd5\u7528 python \u5e93 \u7b2c\u4e09\u65b9 \u00b6 API \u00b6 apache-libcloud\uff1a\u4e00\u4e2a\u4e3a\u5404\u79cd\u4e91\u8bbe\u8ba1\u7684 Python \u5e93 boto\uff1aAmazon Web Services \u7684 Python \u63a5\u53e3 django-wordpress\uff1aWordPress models and views for Django facebook-sdk\uff1aFacebook \u5e73\u53f0\u7684 Python SDK facepy\uff1aFacepy \u8ba9\u548c Facebook's Graph API \u7684\u4ea4\u4e92\u53d8\u5f97\u66f4\u5bb9\u6613 gmail\uff1aGmail \u7684 Python \u63a5\u53e3 google-api-python-client\uff1aPython \u7528\u7684 Google APIs \u5ba2\u6237\u7aef\u5e93 gspread\uff1aGoogle \u7535\u5b50\u8868\u683c\u7684 Python API twython\uff1aTwitter API \u7684\u5c01\u88c5 \u5916\u6765\u51fd\u6570\u63a5\u53e3 \u00b6 cffi\uff1a\u7528\u6765\u8c03\u7528 C \u4ee3\u7801\u7684\u5916\u6765\u51fd\u6570\u63a5\u53e3 ctypes\uff1a(Python \u6807\u51c6\u5e93) \u7528\u6765\u8c03\u7528 C \u4ee3\u7801\u7684\u5916\u6765\u51fd\u6570\u63a5\u53e3 PyCUDA\uff1aNvidia CUDA API \u7684\u5c01\u88c5 SWIG\uff1a\u7b80\u5316\u7684\u5c01\u88c5\u548c\u63a5\u53e3\u751f\u6210\u5668 \u5176\u4ed6 \u00b6 MapReduce \u00b6 dpark\uff1aSpark \u7684 Python \u514b\u9686\u7248\uff0c\u4e00\u4e2a\u7c7b\u4f3c MapReduce \u7684\u6846\u67b6 dumbo\uff1a\u8fd9\u4e2a Python \u6a21\u5757\u53ef\u4ee5\u8ba9\u4eba\u8f7b\u677e\u7684\u7f16\u5199\u548c\u8fd0\u884c Hadoop \u7a0b\u5e8f luigi\uff1a\u8fd9\u4e2a\u6a21\u5757\u5e2e\u4f60\u6784\u5efa\u6279\u5904\u7406\u4f5c\u4e1a\u7684\u590d\u6742\u6d41\u6c34\u7ebf mrjob\uff1a\u5728 Hadoop \u6216 Amazon Web Services \u4e0a\u8fd0\u884c MapReduce \u4efb\u52a1 PySpark\uff1aSpark \u7684 Python API streamparse\uff1a\u8fd0\u884c\u9488\u5bf9\u4e8b\u5b9e\u6570\u636e\u6d41\u7684 Python \u4ee3\u7801\u3002\u96c6\u6210\u4e86 Apache Storm \u51fd\u6570\u5f0f\u7f16\u7a0b \u00b6 CyToolz\uff1aToolz \u7684 Cython \u5b9e\u73b0 : \u9ad8\u6027\u80fd\u51fd\u6570\u5f0f\u5de5\u5177 fn.py\uff1a\u5728 Python \u4e2d\u8fdb\u884c\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e9b\u4eab\u53d7\u51fd\u6570\u5f0f\u7f16\u7a0b\u7f3a\u5931\u7684\u529f\u80fd funcy\uff1a\u70ab\u9177\u53c8\u5b9e\u7528\u7684\u51fd\u6570\u5f0f\u5de5\u5177 Toolz\uff1a\u4e00\u7ec4\u7528\u4e8e\u8fed\u4ee3\u5668\uff0c\u51fd\u6570\u548c\u5b57\u5178\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u5de5\u5177 \u517c\u5bb9\u6027 \u00b6 Python-Future\uff1a\u8fd9\u5c31\u662f Python 2 \u548c Python 3 \u4e4b\u95f4\u4e22\u5931\u7684\u90a3\u4e2a\u517c\u5bb9\u6027\u5c42 Python-Modernize\uff1a\u4f7f Python \u4ee3\u7801\u66f4\u52a0\u73b0\u4ee3\u5316\u4ee5\u4fbf\u6700\u7ec8\u8fc1\u79fb\u5230 Python 3 Six\uff1aPython 2 \u548c 3 \u7684\u517c\u5bb9\u6027\u5de5\u5177 \u7f16\u8f91\u5668\u63d2\u4ef6 \u00b6 Elpy\uff1aEmacs Python \u5f00\u53d1\u73af\u5883 SublimeJEDI\uff1a\u4e00\u4e2a Sublime Text \u63d2\u4ef6\uff0c\u7528\u6765\u4f7f\u7528\u8d85\u8d5e\u7684\u81ea\u52a8\u8865\u5168\u5e93 Jedi Anaconda\uff1aAnaconda \u628a\u4f60\u7684 Sublime Text 3 \u53d8\u6210\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684 Python IDE YouCompleteMe\uff1a\u5f15\u5165\u57fa\u4e8e Jedi \u7684 Python \u81ea\u52a8\u8865\u5168\u5f15\u64ce Jedi-vim\uff1a\u7ed1\u5b9a Vim \u548c Jedi \u81ea\u52a8\u8865\u5168\u5e93\u5bf9 Python \u8fdb\u884c\u81ea\u52a8\u8865\u5168 Python-mode\uff1a\u5c06 Vim \u53d8\u6210 Python IDE \u7684\u4e00\u6b3e\u591a\u5408\u4e00\u63d2\u4ef6 PTVS\uff1aVisual Studio \u7684 Python \u5de5\u5177 \u81ea\u52a8\u804a\u5929\u5de5\u5177 \u00b6 Errbot\uff1a\u6700\u7b80\u5355\u548c\u6700\u6d41\u884c\u7684\u804a\u5929\u673a\u5668\u4eba\u7528\u6765\u5b9e\u73b0\u81ea\u52a8\u804a\u5929\u5de5\u5177 \u91d1\u878d\u6570\u636e \u00b6 Tushare\uff1a\u4e00\u4e2a\u53ef\u4ee5\u63d0\u4f9b\u514d\u8d39\u80a1\u7968\u3001\u57fa\u91d1\u3001\u671f\u8d27\u3001\u6e2f\u80a1\u7b49\u91d1\u878d\u6570\u636e\u7684 Python \u5f00\u6e90\u6570\u636e Ta-Lib\uff1a\u91d1\u878d\u6570\u636e\u6280\u672f\u5206\u6790\u5e93\uff0c\u53ef\u4ee5\u4f9d\u636e\u539f\u59cb\u91d1\u878d\u6570\u636e\u8ba1\u7b97\u5404\u79cd\u6280\u672f\u6307\u6807,\u8ba1\u7b97\u6027\u80fd\u6bd4\u8f83\u4f18\u5f02 AkSHare\uff1a\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u514d\u8d39\u91d1\u878d\u6570\u636e\u5e73\u53f0 \u7b97\u6cd5\u548c\u8bbe\u8ba1\u6a21\u5f0f \u00b6 algorithms\uff1a\u4e00\u4e2a Python \u7b97\u6cd5\u6a21\u5757 python-patterns\uff1aPython \u8bbe\u8ba1\u6a21\u5f0f\u7684\u96c6\u5408 sortedcontainers\uff1a\u5feb\u901f\uff0c\u7eaf Python \u5b9e\u73b0\u7684 SortedList\uff0cSortedDict \u548c SortedSet \u7c7b\u578b \u6742\u4e03\u6742\u516b \u00b6 blinker\uff1a\u4e00\u4e2a\u5feb\u901f\u7684 Python \u8fdb\u7a0b\u5185\u4fe1\u53f7/\u4e8b\u4ef6\u5206\u53d1\u7cfb\u7edf itsdangerous\uff1a\u4e00\u7cfb\u5217\u8f85\u52a9\u5de5\u5177\u7528\u6765\u5c06\u53ef\u4fe1\u7684\u6570\u636e\u4f20\u5165\u4e0d\u53ef\u4fe1\u7684\u73af\u5883 pluginbase\uff1a\u4e00\u4e2a\u7b80\u5355\u4f46\u662f\u975e\u5e38\u7075\u6d3b\u7684 Python \u63d2\u4ef6\u7cfb\u7edf Pychievements\uff1a\u4e00\u4e2a\u7528\u6765\u521b\u5efa\u548c\u8ffd\u8e2a\u6210\u5c31\u7684 Python \u6846\u67b6 Tryton\uff1a\u4e00\u4e2a\u901a\u7528\u5546\u52a1\u6846\u67b6","title":"100-Python\u6709\u54ea\u4e9b\u7ecf\u5178\u7684\u5e38\u7528\u5e93"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#python","text":"python \u4f7f\u7528\u8303\u56f4\u5f88\u5e7f\uff0c\u5e38\u7528\u7684\u5e93\u5f88\u591a\u5f88\u591a\uff0c\u9700\u8981\u4ec0\u4e48\u518d\u67e5\u627e\u3002 \u539f\u59cb\u4f5c\u8005\uff1a\u841d\u535c\u5927\u6742\u70e9 \u94fe\u63a5\uff1a https://www.zhihu.com/question/600933380/answer/3085494590","title":"Python\u6709\u54ea\u4e9b\u7ecf\u5178\u7684\u5e38\u7528\u5e93"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_1","text":"","title":"\u6570\u636e\u5904\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_2","text":"chardet\uff1a\u5b57\u7b26\u7f16\u7801\u68c0\u6d4b\u5668\uff0c\u53ef\u4ee5\u81ea\u52a8\u68c0\u6d4b\u6587\u672c\u3001\u7f51\u9875\u3001xml\u7684\u7f16\u7801 difflib\uff1a(Python \u6807\u51c6\u5e93)\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u5dee\u5f02\u5316\u6bd4\u8f83 ftfy\uff1a\u8ba9 Unicode \u6587\u672c\u66f4\u5b8c\u6574\u66f4\u8fde\u8d2f fuzzywuzzy\uff1a\u6a21\u7cca\u5b57\u7b26\u4e32\u5339\u914d Levenshtein\uff1a\u5feb\u901f\u8ba1\u7b97\u7f16\u8f91\u8ddd\u79bb\u4ee5\u53ca\u5b57\u7b26\u4e32\u7684\u76f8\u4f3c\u5ea6 pangu.py\uff1a\u5728\u4e2d\u65e5\u97e9\u8bed\u5b57\u7b26\u548c\u6570\u5b57\u5b57\u6bcd\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u683c shortuuid\uff1a\u4e00\u4e2a\u751f\u6210\u5668\u5e93\uff0c\u7528\u4ee5\u751f\u6210\u7b80\u6d01\u7684\uff0c\u660e\u767d\u7684\uff0cURL \u5b89\u5168\u7684 UUID simplejson\uff1aPython \u7684 JSON \u7f16\u7801\u3001\u89e3\u7801\u5668 unidecode\uff1aUnicode \u6587\u672c\u7684 ASCII \u8f6c\u6362\u5f62\u5f0f uniout\uff1a\u6253\u5370\u53ef\u8bfb\u7684\u5b57\u7b26\uff0c\u800c\u4e0d\u662f\u8f6c\u4e49\u7684\u5b57\u7b26\u4e32 xpinyin\uff1a\u4e00\u4e2a\u7528\u4e8e\u628a\u6c49\u5b57\u8f6c\u6362\u4e3a\u62fc\u97f3\u7684\u5e93 yfiglet-figlet\uff1apyfiglet -figlet \u7684 Python \u5b9e\u73b0 flashtext: \u4e00\u4e2a\u9ad8\u6548\u7684\u6587\u672c\u67e5\u627e\u66ff\u6362\u5e93 esmre\uff1a \u6b63\u5219\u8868\u8fbe\u5f0f \u7684\u52a0\u901f\u5668 awesome slugify \uff1a\u4e00\u4e2a Python slugify \u5e93\uff0c\u7528\u4e8e\u5904\u7406 Unicode python-slugify\uff1aPython slug \u5316\u5e93\uff0c\u53ef\u4ee5\u628a unicode \u8f6c\u5316\u4e3a ASCII unicode-slugify \uff1a\u4e00\u4e2a slug \u5de5\u5177\uff0c\u53ef\u4ee5\u751f\u6210 unicode slugs\uff0c\u9700\u8981\u4f9d\u8d56 Django phonenumbers \uff1a\u89e3\u6790\uff0c\u683c\u5f0f\u5316\uff0c\u50a8\u5b58\uff0c\u9a8c\u8bc1\u7535\u8bdd\u53f7\u7801 PLY\uff1alex \u548c yacc \u89e3\u6790\u5de5\u5177\u7684 Python \u5b9e\u73b0 Pygments\uff1a\u901a\u7528\u8bed\u6cd5\u9ad8\u4eae\u5de5\u5177 pyparsing\uff1a\u751f\u6210\u901a\u7528\u89e3\u6790\u5668\u7684\u6846\u67b6 python-nameparser \uff1a\u628a\u4e00\u4e2a\u4eba\u540d\u5206\u89e3\u4e3a\u51e0\u4e2a\u72ec\u7acb\u7684\u90e8\u5206 python-user-agents\uff1a\u6d4f\u89c8\u5668 user agent \u89e3\u6790\u5668 sqlparse\uff1a\u4e00\u4e2a\u65e0\u9a8c\u8bc1\u7684 SQL \u89e3\u6790\u5668","title":"\u6587\u672c\u5904\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_3","text":"tablib\uff1a\u7528\u6765\u5904\u7406\u8868\u683c\u6570\u636e\u7684\u6a21\u5757 Marmir\uff1a\u628a\u8f93\u5165\u7684 Python \u6570\u636e\u7ed3\u6784\u8f6c\u6362\u4e3a\u7535\u5b50\u8868\u5355 openpyxl\uff1a\u4e00\u4e2a\u7528\u6765\u8bfb\u5199 Excel 2010 xlsx/xlsm/xltx/xltm \u6587\u4ef6\u7684\u5e93 pyexcel \uff1a\u4e00\u4e2a\u63d0\u4f9b\u7edf\u4e00 API\uff0c\u7528\u6765\u8bfb\u5199\u3001\u64cd\u4f5c Excel \u6587\u4ef6\u7684\u5e93 python-docx \uff1a\u8bfb\u53d6\uff0c\u67e5\u8be2\u4ee5\u53ca\u4fee\u6539 Microsoft Word 2007/2008 docx \u6587\u4ef6 relatorio\uff1a\u6a21\u677f\u5316 OpenDocument \u6587\u4ef6 unoconv\uff1a\u5728 LibreOffice/OpenOffice \u652f\u6301\u7684\u4efb\u610f\u6587\u4ef6\u683c\u5f0f\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362 XlsxWriter\uff1a\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa Excel.xlsx \u6587\u4ef6\u7684 Python \u6a21\u5757 xlwings\uff1a\u4e00\u4e2a\u4f7f\u5f97\u5728 Excel \u4e2d\u65b9\u4fbf\u8c03\u7528 Python \u7684\u5e93\uff08\u53cd\u4e4b\u4ea6\u7136\uff09\uff0c\u57fa\u4e8e BSD \u534f\u8bae xlwt/xlrd\uff1a\u8bfb\u5199 Excel \u6587\u4ef6\u7684\u6570\u636e\u548c\u683c\u5f0f\u4fe1\u606f PDFMiner\uff1a\u4e00\u4e2a\u7528\u4e8e\u4ece PDF \u6587\u6863\u4e2d\u62bd\u53d6\u4fe1\u606f\u7684\u5de5\u5177 PyPDF2\uff1a\u4e00\u4e2a\u53ef\u4ee5\u5206\u5272\uff0c\u5408\u5e76\u548c\u8f6c\u6362 PDF \u9875\u9762\u7684\u5e93 ReportLab\uff1a\u5feb\u901f\u521b\u5efa\u5bcc\u6587\u672c PDF \u6587\u6863 Mistune\uff1a\u5feb\u901f\u5e76\u4e14\u529f\u80fd\u9f50\u5168\u7684\u7eaf Python \u5b9e\u73b0\u7684 Markdown \u89e3\u6790\u5668 Python-Markdown \uff1aJohn Gruber\u2019s Markdown \u7684 Python \u7248\u5b9e\u73b0 Python-Markdown2 \uff1a\u7eaf Python \u5b9e\u73b0\u7684 Markdown \u89e3\u6790\u5668\uff0c\u6bd4 Python-Markdown \u66f4\u5feb\uff0c\u66f4\u51c6\u786e\uff0c\u53ef\u6269\u5c55 PyYAML\uff1aPython \u7248\u672c\u7684 YAML \u89e3\u6790\u5668 csvkit\uff1a\u7528\u4e8e\u8f6c\u6362\u548c\u64cd\u4f5c CSV \u7684\u5de5\u5177 unp\uff1a\u4e00\u4e2a\u7528\u6765\u65b9\u4fbf\u89e3\u5305\u5f52\u6863\u6587\u4ef6\u7684\u547d\u4ee4\u884c\u5de5\u5177","title":"\u7279\u6b8a\u6587\u672c\u5904\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#htmlxml","text":"BeautifulSoup\uff1a\u4ee5 Python \u98ce\u683c\u7684\u65b9\u5f0f\u6765\u5bf9 HTML \u6216 XML \u8fdb\u884c\u8fed\u4ee3\uff0c\u641c\u7d22\u548c\u4fee\u6539 bleach\uff1a\u4e00\u4e2a\u57fa\u4e8e\u767d\u540d\u5355\u7684 HTML \u6e05\u7406\u548c\u6587\u672c\u94fe\u63a5\u5e93 cssutils\uff1a\u4e00\u4e2a Python \u7684 CSS \u5e93 html5lib\uff1a\u4e00\u4e2a\u517c\u5bb9\u6807\u51c6\u7684 HTML \u6587\u6863\u548c\u7247\u6bb5\u89e3\u6790\u53ca\u5e8f\u5217\u5316\u5e93 lxml\uff1a\u4e00\u4e2a\u975e\u5e38\u5feb\u901f\uff0c\u7b80\u5355\u6613\u7528\uff0c\u529f\u80fd\u9f50\u5168\u7684\u5e93\uff0c\u7528\u6765\u5904\u7406 HTML \u548c XML MarkupSafe\uff1a\u4e3a Python \u5b9e\u73b0 XML/HTML/XHTML \u6807\u8bb0\u5b89\u5168\u5b57\u7b26\u4e32 pyquery \uff1a\u4e00\u4e2a\u89e3\u6790 HTML \u7684\u5e93\uff0c\u7c7b\u4f3c jQuery requests-html\uff1a\u4eba\u6027\u5316\u7684\uff0cPythonic \u7684 HTML \u89e3\u6790\u5e93 untangle\uff1a\u5c06 XML \u6587\u6863\u8f6c\u6362\u4e3a Python \u5bf9\u8c61\uff0c\u4f7f\u5176\u53ef\u4ee5\u65b9\u4fbf\u7684\u8bbf\u95ee xhtml2pdf\uff1aHTML/CSS \u8f6c PDF \u5de5\u5177 xmltodict\uff1a\u50cf\u5904\u7406 JSON \u4e00\u6837\u5904\u7406 XML htmlparser\uff0c\u5b98\u65b9\u7248\u89e3\u6790 HTML DOM \u6811","title":"HTML/XML \u89e3\u6790"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_4","text":"aiofiles\uff1a\u57fa\u4e8e asyncio\uff0c\u63d0\u4f9b\u6587\u4ef6\u5f02\u6b65\u64cd\u4f5c imghdr\uff1a\uff08Python \u6807\u51c6\u5e93\uff09\u68c0\u6d4b\u56fe\u7247\u7c7b\u578b mimetypes\uff1a\uff08Python \u6807\u51c6\u5e93\uff09\u5c06\u6587\u4ef6\u540d\u6620\u5c04\u4e3a MIME \u7c7b\u578b path.py\uff1a\u5bf9 os.path \u8fdb\u884c\u5c01\u88c5\u7684\u6a21\u5757 pathlib\uff1a\uff08Python3.4+ \u6807\u51c6\u5e93\uff09\u8de8\u5e73\u53f0\u7684\u3001\u9762\u5411\u5bf9\u8c61\u7684\u8def\u5f84\u64cd\u4f5c\u5e93 python-magic\uff1a\u6587\u4ef6\u7c7b\u578b\u68c0\u6d4b\u7684\u7b2c\u4e09\u65b9\u5e93 libmagic \u7684 Python \u63a5\u53e3 Unipath\uff1a\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u64cd\u4f5c\u6587\u4ef6\u548c\u76ee\u5f55 watchdog \uff1a\u7ba1\u7406\u6587\u4ef6\u7cfb\u7edf\u4e8b\u4ef6\u7684 API \u548c shell \u5de5\u5177 Unipath\uff1a\u9762\u5411\u5bf9\u8c61\u7684\u6587\u4ef6/\u76ee\u5f55\u7684\u64cd\u4f5c\u5de5\u5177\u5305 pathlib \uff1a\uff08Python 3.4\u7248\u5df2\u7ecf\u4f5c\u4e3aPython\u6807\u51c6\u5e93\uff09\uff0c\u4e00\u4e2a\u8de8\u5e73\u53f0\uff0c\u9762\u5411 path \u7684\u51fd\u6570\u5e93 pickle/cPickle\uff1aPython \u7684 pickle \u6a21\u5757\u5b9e\u73b0\u4e86\u57fa\u672c\u7684\u6570\u636e\u5e8f\u5217\u548c\u53cd\u5e8f\u5217\u5316","title":"\u6587\u4ef6\u5904\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_5","text":"ConfigParser\uff1aPython \u6807\u51c6\u5e93\uff0cini \u6587\u4ef6\u89e3\u6790\u5668 configobj\uff1aini \u6587\u4ef6\u89e3\u6790\u5668 profig\uff1a\u591a\u683c\u5f0f\u914d\u7f6e\u8f6c\u6362\u5de5\u5177 config\uff1alogging \u6a21\u5757\u4f5c\u8005\u5199\u7684\u5206\u7ea7\u914d\u7f6e\u6a21\u5757 python-decouple\uff1a\u5c06\u8bbe\u7f6e\u548c\u4ee3\u7801\u5b8c\u5168\u9694\u79bb","title":"\u914d\u7f6e\u6587\u4ef6\u5904\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_6","text":"Sphinx\uff1aPython \u6587\u6863\u751f\u6210\u5668 pycco \uff1a\u7b80\u5355\u5feb\u901f\u3001\u7f16\u7a0b\u98ce\u683c\u7684\u6587\u6863\u751f\u6210\u5668 pdoc\uff1a\u81ea\u52a8\u751f\u6210\u7684 Python \u5e93 API \u6587\u6863 epydoc\uff0c\u4ece\u6e90\u7801\u6ce8\u91ca\u4e2d\u751f\u6210\u5404\u79cd\u683c\u5f0f\u6587\u6863\u7684\u5de5\u5177 readthedocs \uff1a\u4e00\u4e2a\u57fa\u4e8e Sphinx/MkDocs \u7684\u5728\u7ebf\u6587\u6863\u6258\u7ba1\u7cfb\u7edf\uff0c\u5bf9 \u5f00\u6e90\u9879\u76ee \u514d\u8d39\u5f00\u653e\u4f7f\u7528","title":"\u6587\u6863\u76f8\u5173"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_7","text":"logging\uff1a(Python \u6807\u51c6\u5e93) \u4e3a Python \u63d0\u4f9b\u65e5\u5fd7\u529f\u80fd logbook\uff1aLogging \u5e93\u7684\u66ff\u4ee3\u54c1 Eliot\uff1a\u4e3a\u590d\u6742\u7684\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u521b\u5efa\u65e5\u5fd7 Raven\uff1aSentry \u7684 Python \u5ba2\u6237\u7aef Sentry\uff1a\u5b9e\u65f6\u8bb0\u5f55\u548c\u6536\u96c6\u65e5\u5fd7\u7684\u670d\u52a1\u5668","title":"\u65e5\u5fd7\u7ba1\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_8","text":"arrow\uff1a\u975e\u5e38\u597d\u7684 Python \u65e5\u671f\u65f6\u95f4\u64cd\u4f5c\u7c7b\u5e93 Chronyk\uff1aPython 3 \u7684\u7c7b\u5e93\uff0c\u7528\u4e8e\u89e3\u6790\u624b\u5199\u683c\u5f0f\u7684\u65f6\u95f4\u548c\u65e5\u671f dateutil\uff1aPython datetime \u6a21\u5757\u7684\u6269\u5c55 delorean\uff1a\u89e3\u51b3 Python \u4e2d\u6709\u5173\u65e5\u671f\u5904\u7406\u7684\u68d8\u624b\u95ee\u9898\u7684\u5e93 maya\uff1a\u4eba\u6027\u5316\u7684\u65f6\u95f4\u5904\u7406\u5e93 moment\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406\u65f6\u95f4\u548c\u65e5\u671f\u7684 Python \u5e93\uff0c\u7075\u611f\u6765\u81ea\u4e8e Moment.js pendulum \uff1a\u4e00\u4e2a\u6bd4 arrow \u66f4\u5177\u6709\u660e\u786e\u7684\u3001\u53ef\u9884\u6d4b\u884c\u4e3a\u7684\u65f6\u95f4\u64cd\u4f5c\u5e93 PyTime\uff1a\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684 Python \u6a21\u5757\uff0c\u7528\u4e8e\u901a\u8fc7\u5b57\u7b26\u4e32\u6765\u64cd\u4f5c\u65e5\u671f/\u65f6\u95f4 pytz\uff1a\u73b0\u4ee3\u4ee5\u53ca\u5386\u53f2\u7248\u672c\u7684\u4e16\u754c\u65f6\u533a\u5b9a\u4e49\uff0c\u5c06\u65f6\u533a\u6570\u636e\u5e93\u5f15\u5165 Python when.py\uff1a\u63d0\u4f9b\u7528\u6237\u53cb\u597d\u7684\u51fd\u6570\u6765\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u5e38\u7528\u7684\u65e5\u671f\u548c\u65f6\u95f4\u64cd\u4f5c","title":"\u65e5\u671f\u548c\u65f6\u95f4"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_9","text":"","title":"\u56fe\u50cf"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_10","text":"pillow \uff1aPillow \u662f\u4e00\u4e2a\u66f4\u52a0\u6613\u7528\u7248\u7684 PIL hmap\uff1a\u56fe\u50cf\u76f4\u65b9\u56fe\u6620\u5c04 imgSeek\uff1a\u4e00\u4e2a\u4f7f\u7528\u89c6\u89c9\u76f8\u4f3c\u6027\u641c\u7d22\u4e00\u7ec4\u56fe\u7247\u96c6\u5408\u7684\u9879\u76ee nude.py\uff1a\u88f8\u4f53\u68c0\u6d4b pyBarcode\uff1a\u4e0d\u501f\u52a9 PIL \u5e93\u5728 Python \u7a0b\u5e8f\u4e2d\u751f\u6210\u6761\u5f62\u7801 pygram\uff1a\u7c7b\u4f3c Instagram \u7684\u56fe\u50cf\u6ee4\u955c python-qrcode \uff1a\u4e00\u4e2a\u7eaf Python \u5b9e\u73b0\u7684 \u4e8c\u7ef4\u7801\u751f\u6210\u5668 Quads\uff1a\u57fa\u4e8e\u56db\u53c9\u6811\u7684\u8ba1\u7b97\u673a\u827a\u672f scikit-image\uff1a\u4e00\u4e2a\u7528\u4e8e\uff08\u79d1\u5b66\uff09\u56fe\u50cf\u5904\u7406\u7684 Python \u5e93 thumbor\uff1a\u4e00\u4e2a\u5c0f\u578b\u56fe\u50cf\u670d\u52a1\uff0c\u5177\u6709\u526a\u88c1\uff0c\u5c3a\u5bf8\u91cd\u8bbe\u548c\u7ffb\u8f6c\u529f\u80fd wand\uff1aMagickWand\u7684 Python \u7ed1\u5b9a\u3002MagickWand \u662f ImageMagick \u7684 C API face_recognition \uff1a\u7b80\u5355\u6613\u7528\u7684 python \u4eba\u8138\u8bc6\u522b\u5e93","title":"\u56fe\u50cf\u5904\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#ocr","text":"pyocr\uff1aTesseract \u548c Cuneiform \u7684\u4e00\u4e2a\u5c01\u88c5(wrapper) pytesseract \uff1aGoogle Tesseract OCR \u7684\u53e6\u4e00\u4e2a\u5c01\u88c5(wrapper) python-tesseract \uff1aGoogle Tesseract OCR \u7684\u4e00\u4e2a\u5305\u88c5\u7c7b","title":"OCR"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_11","text":"","title":"\u7f51\u7edc\u76f8\u5173"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_12","text":"s3cmd\uff1a\u4e00\u4e2a\u7528\u6765\u7ba1\u7406 Amazon S3 \u548c CloudFront \u7684\u547d\u4ee4\u884c\u5de5\u5177 s4cmd\uff1a\u8d85\u7ea7 S3 \u547d\u4ee4\u884c\u5de5\u5177\uff0c\u6027\u80fd\u66f4\u52a0\u5f3a\u52b2 you-get\uff1a\u4e00\u4e2a YouTube/Youku/Niconico \u89c6\u9891\u4e0b\u8f7d\u5668\uff0c\u4f7f\u7528 Python3 \u7f16\u5199 youtube-dl \uff1a\u4e00\u4e2a\u5c0f\u5de7\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\uff0c\u7528\u6765\u4e0b\u8f7d YouTube \u89c6\u9891 Coursera\uff1a\u53ef\u4ee5\u4ece http://coursera.org \u4e0b\u8f7d\u89c6\u9891 subliminal\uff0c\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u641c\u7d22\u548c\u4e0b\u8f7d\u5b57\u5e55\u7684\u51fd\u6570\u5e93","title":"\u4e0b\u8f7d"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#http","text":"aiohttp\uff1a\u57fa\u4e8e asyncio \u7684\u5f02\u6b65 HTTP \u7f51\u7edc\u5e93 grequests\uff1arequests \u5e93 + gevent \uff0c\u7528\u4e8e\u5f02\u6b65 HTTP \u8bf7\u6c42 httplib2\uff1a\u5168\u9762\u7684 HTTP \u5ba2\u6237\u7aef\u5e93 treq\uff1a\u7c7b\u4f3c requests \u7684 Python API \u6784\u5efa\u4e8e Twisted HTTP \u5ba2\u6237\u7aef\u4e4b\u4e0a urllib3 \uff1a\u4e00\u4e2a\u5177\u6709\u7ebf\u7a0b\u5b89\u5168\u8fde\u63a5\u6c60\uff0c\u652f\u6301\u6587\u4ef6 post\uff0c\u6e05\u6670\u53cb\u597d\u7684 HTTP \u5e93","title":"HTTP"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_13","text":"Mininet\uff1a\u4e00\u6b3e\u6d41\u884c\u7684\u7f51\u7edc\u6a21\u62df\u5668\u4ee5\u53ca\u7528 Python \u7f16\u5199\u7684 API POX\uff1a\u4e00\u4e2a\u9488\u5bf9\u57fa\u4e8e Python \u7684\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc\u5e94\u7528\uff08\u4f8b\u5982 OpenFlow SDN \u63a7\u5236\u5668\uff09\u7684\u5f00\u6e90\u5f00\u53d1\u5e73\u53f0 Pyretic\uff1a\u706b\u70ed\u7684 SDN \u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u4e00\u5458\uff0c\u4e3a\u7f51\u7edc\u4ea4\u6362\u673a\u548c\u6a21\u62df\u5668\u63d0\u4f9b\u5f3a\u5927\u7684\u62bd\u8c61\u80fd\u529b SDX Platform\uff1a\u57fa\u4e8e SDN \u7684 IXP \u5b9e\u73b0\uff0c\u5f71\u54cd\u4e86 Mininet, POX \u548c Pyretic NRU\uff1a\u4e00\u4e2a\u57fa\u4e8e\u7ec4\u4ef6\u7684\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc\u6846\u67b6","title":"\u7f51\u7edc\u53ef\u89c6\u5316"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#url","text":"furl\uff1a\u4e00\u4e2a\u8ba9\u5904\u7406 URL \u66f4\u7b80\u5355\u5c0f\u578b Python \u5e93 purl\uff1a\u4e00\u4e2a\u7b80\u5355\u7684\u3001\u4e0d\u53ef\u53d8\u7684 URL \u7c7b\uff0c\u5177\u6709\u7b80\u6d01\u7684 API \u6765\u8fdb\u884c\u8be2\u95ee\u548c\u5904\u7406 pyshorteners\uff1a\u4e00\u4e2a\u7eaf Python URL \u7f29\u77ed\u5e93 shorturl\uff1a\u751f\u6210\u77ed\u5c0f URL \u548c\u7c7b\u4f3c http://bit.ly \u77ed\u94fe\u7684 Python \u5b9e\u73b0","title":"URL \u5904\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_14","text":"Scrapy\uff1a\u4e00\u4e2a\u5feb\u901f\u9ad8\u7ea7\u7684\u5c4f\u5e55\u722c\u53d6\u53ca\u7f51\u9875\u91c7\u96c6\u6846\u67b6 cola\uff1a\u4e00\u4e2a\u5206\u5e03\u5f0f\u722c\u866b\u6846\u67b6 Demiurge\uff1a\u57fa\u4e8e PyQuery \u7684\u722c\u866b\u5fae\u578b\u6846\u67b6 feedparser\uff1a\u901a\u7528 feed \u89e3\u6790\u5668 Grab\uff1a\u7ad9\u70b9\u722c\u53d6\u6846\u67b6 MechanicalSoup\uff1a\u7528\u4e8e\u81ea\u52a8\u548c\u7f51\u7edc\u7ad9\u70b9\u4ea4\u4e92\u7684 Python \u5e93 portia\uff1aScrapy \u53ef\u89c6\u5316\u722c\u53d6 pyspider\uff1a\u4e00\u4e2a\u5f3a\u5927\u7684\u722c\u866b\u7cfb\u7edf RoboBrowser\uff1a\u4e00\u4e2a\u7b80\u5355\u7684\uff0cPython \u98ce\u683c\u7684\u5e93\uff0c\u7528\u6765\u6d4f\u89c8\u7f51\u7ad9\uff0c\u800c\u4e0d\u9700\u8981\u4e00\u4e2a\u72ec\u7acb\u5b89\u88c5\u7684\u6d4f\u89c8\u5668","title":"\u7f51\u7edc\u722c\u866b"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_15","text":"Haul\uff1a\u4e00\u4e2a\u53ef\u4ee5\u6269\u5c55\u7684\u56fe\u50cf\u722c\u53d6\u5de5\u5177 html2text\uff1a\u5c06 HTML \u8f6c\u6362\u4e3a Markdown \u683c\u5f0f\u6587\u672c lassie\uff1a\u4eba\u6027\u5316\u7684\u7f51\u9875\u5185\u5bb9\u68c0\u7d22\u5e93 micawber\uff1a\u4e00\u4e2a\u5c0f\u578b\u7f51\u9875\u5185\u5bb9\u63d0\u53d6\u5e93\uff0c\u7528\u6765\u4ece URLs \u63d0\u53d6\u5bcc\u5185\u5bb9 newspaper\uff1a\u4f7f\u7528 Python \u8fdb\u884c\u65b0\u95fb\u63d0\u53d6\uff0c\u6587\u7ae0\u63d0\u53d6\u4ee5\u53ca\u5185\u5bb9\u7b56\u5c55 opengraph\uff1a\u4e00\u4e2a\u7528\u6765\u89e3\u6790\u5f00\u653e\u5185\u5bb9\u534f\u8bae(Open Graph Protocol)\u7684 Python \u6a21\u5757 python-goose \uff1aHTML \u5185\u5bb9/\u6587\u7ae0\u63d0\u53d6\u5668 python-readability\uff1aarc90 \u516c\u53f8 readability \u5de5\u5177\u7684 Python \u9ad8\u901f\u7aef\u53e3 sanitize\uff1a\u4e3a\u6742\u4e71\u7684\u6570\u636e\u4e16\u754c\u5e26\u6765\u8c03\u7406\u6027 sumy \uff1a\u4e00\u4e2a\u4e3a\u6587\u672c\u6587\u4ef6\u548c HTML \u9875\u9762\u8fdb\u884c\u81ea\u52a8\u6458\u8981\u7684\u6a21\u5757 textract\uff1a\u4ece\u4efb\u4f55\u683c\u5f0f\u7684\u6587\u6863\u4e2d\u63d0\u53d6\u6587\u672c\uff0cWord\uff0cPowerPoint\uff0cPDFs \u7b49\u7b49 mechanize\uff1a\u7f51\u9875\u6d4f\u89c8\u7f16\u7a0b\u5de5\u5177","title":"\u7f51\u9875\u5185\u5bb9\u63d0\u53d6"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#websocket","text":"AutobahnPython\uff1a\u7ed9 Python \u3001\u4f7f\u7528\u7684 WebSocket & WAMP \u57fa\u4e8e Twisted \u548c asyncio Crossbar\uff1a\u5f00\u6e90\u7edf\u4e00\u5e94\u7528\u8def\u7531(Websocket & WAMP for Python on Autobahn) django-socketio\uff1a\u7ed9 Django \u7528\u7684 WebSockets WebSocket-for-Python\uff1a\u4e3a Python\u2154 \u4ee5\u53ca PyPy \u7f16\u5199\u7684 WebSocket \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u5e93","title":"WebSocket"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#rpc","text":"SimpleJSONRPCServer\uff1a\u8fd9\u4e2a\u5e93\u662f JSON-RPC \u89c4\u8303\u7684\u4e00\u4e2a\u5b9e\u73b0 SimpleXMLRPCServer\uff1a(Python \u6807\u51c6\u5e93) \u7b80\u5355\u7684 XML-RPC \u670d\u52a1\u5668\u5b9e\u73b0\uff0c\u5355\u7ebf\u7a0b zeroRPC\uff1azerorpc \u662f\u4e00\u4e2a\u7075\u6d3b\u7684 RPC \u5b9e\u73b0\uff0c\u57fa\u4e8e ZeroMQ \u548c MessagePack","title":"RPC"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#web","text":"","title":"Web \u6846\u67b6"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_16","text":"Django\uff1aPython \u754c\u6700\u6d41\u884c\u7684 web \u6846\u67b6 Flask\uff1a\u4e00\u4e2a Python \u5fae\u578b\u6846\u67b6 pyramid\uff1a\u4e00\u4e2a\u5c0f\u5de7\u5feb\u901f\uff0c\u63a5\u5730\u6c14\u7684\u5f00\u6e90 Python web \u6846\u67b6 Bottle\uff1a\u4e00\u4e2a\u5feb\u901f\u5c0f\u5de7\uff0c\u8f7b\u91cf\u7ea7\u7684 WSGI \u5fae\u578b web \u6846\u67b6 CherryPy\uff1a\u4e00\u4e2a\u6781\u7b80\u7684 Python web \u6846\u67b6\uff0c\u670d\u4ece HTTP/1.1 \u534f\u8bae\u4e14\u5177\u6709 WSGI \u7ebf\u7a0b\u6c60 TurboGears\uff1a\u4e00\u4e2a\u53ef\u4ee5\u6269\u5c55\u4e3a\u5168\u6808\u89e3\u51b3\u65b9\u6848\u7684\u5fae\u578b\u6846\u67b6 web.py\uff1a\u4e00\u4e2a Python \u7684 web \u6846\u67b6\uff0c\u65e2\u7b80\u5355\uff0c\u53c8\u5f3a\u5927 web2py\uff1a\u4e00\u4e2a\u5168\u6808 web \u6846\u67b6\u548c\u5e73\u53f0\uff0c\u4e13\u6ce8\u4e8e\u7b80\u5355\u6613\u7528 Tornado\uff1a\u4e00\u4e2a web \u6846\u67b6\u548c\u5f02\u6b65\u7f51\u7edc\u5e93 sanic\uff1a\u57fa\u4e8e Python3.5+ \u7684\u5f02\u6b65\u7f51\u7edc\u6846\u67b6 Karrigell\uff1a\u7b80\u5355\u7684Web\u6846\u67b6\uff0c\u81ea\u8eab\u5305\u542b\u4e86Web\u670d\u52a1\uff0cpy\u811a\u672c\u5f15\u64ce\u548c\u7eafpython\u7684\u6570\u636e\u5e93 PyDBLitewebpy\uff1a\u4e00\u4e2a\u5c0f\u5de7\u7075\u6d3b\u7684 Web \u6846\u67b6\uff0c\u867d\u7136\u7b80\u5355\u4f46\u662f\u529f\u80fd\u5f3a\u5927 Quixote\uff1a\u4e00\u4e2a Web \u5f00\u53d1\u6846\u67b6 Grok\uff1a\u57fa\u4e8e Zope3 \u7684 Web \u6846\u67b6 Bluebream\uff1a\u5f00\u6e90\u7684 Web \u5e94\u7528\u670d\u52a1\u5668\uff0c\u539f\u540dZope3 guava\uff1a\u8f7b\u91cf\u7ea7\uff0c\u9ad8\u6027\u80fd\u7684 Python Web \u6846\u67b6\uff0c\u91c7\u7528 c \u8bed\u8a00\u7f16\u5199","title":"\u5168\u6808\u6846\u67b6"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#cms","text":"odoo-cms : \u4e00\u4e2a\u5f00\u6e90\u7684\u4f01\u4e1a\u7ea7 CMS\uff0c\u57fa\u4e8e odoo django-cms \uff1a\u4e00\u4e2a\u5f00\u6e90\u7684\u4f01\u4e1a\u7ea7 CMS\uff0c\u57fa\u4e8e Django djedi-cms\uff1a\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u4f46\u5374\u975e\u5e38\u5f3a\u5927\u7684 Django CMS \uff0c\u8003\u8651\u5230\u4e86\u63d2\u4ef6\uff0c\u5185\u8054\u7f16\u8f91\u4ee5\u53ca\u6027\u80fd FeinCMS\uff1a\u57fa\u4e8e Django \u6784\u5efa\u7684\u6700\u5148\u8fdb\u7684 \u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf \u4e4b\u4e00 Kotti\uff1a\u4e00\u4e2a\u9ad8\u7ea7\u7684\uff0cPython \u89c4\u8303\u7684 web \u5e94\u7528\u6846\u67b6\uff0c\u57fa\u4e8e Pyramid \u6784\u5efa Mezzanine\uff1a\u4e00\u4e2a\u5f3a\u5927\u7684\u3001\u6301\u7eed\u7684\uff0c\u7075\u6d3b\u7684\u5185\u5bb9\u7ba1\u7406\u5e73\u53f0 Opps\uff1a\u4e00\u4e2a\u4e3a\u6742\u5fd7\uff0c\u62a5\u7eb8\u7f51\u7ad9\u4ee5\u53ca\u5927\u6d41\u91cf\u95e8\u6237\u7f51\u7ad9\u8bbe\u8ba1\u7684 CMS \u5e73\u53f0\uff0c\u57fa\u4e8e Django Plone\uff1a\u4e00\u4e2a\u6784\u5efa\u4e8e\u5f00\u6e90\u5e94\u7528\u670d\u52a1\u5668 Zope \u4e4b\u4e0a\u7684 CMS Quokka\uff1a\u7075\u6d3b\u53ef\u6269\u5c55\u7684\u5c0f\u578b CMS\uff0c\u57fa\u4e8e Flask \u548c MongoDB Wagtail\uff1a\u4e00\u4e2a Django \u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf Widgy\uff1a\u6700\u65b0\u7684 CMS \u6846\u67b6\uff0c\u57fa\u4e8e Django","title":"CMS"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#web_1","text":"Carteblanche\uff1a\u7ad9\u5728\u7528\u6237\u548c\u8bbe\u8ba1\u8005\u89d2\u5ea6\u5f00\u53d1\u7684\u4e00\u4e2a\u4ee3\u7801\u5bf9\u9f50\u6a21\u5757\uff0c\u5f88\u597d\u5730\u5904\u7406\u4e86\u4ee3\u7801\u5bfc\u822a\u53ca\u6743\u9650 django-guardian\uff1aDjango 1.2+ \u5b9e\u73b0\u4e86\u5355\u4e2a\u5bf9\u8c61\u6743\u9650 django-rules\uff1a\u4e00\u4e2a\u5c0f\u5de7\u4f46\u662f\u5f3a\u5927\u7684\u5e94\u7528\uff0c\u63d0\u4f9b\u5bf9\u8c61\u7ea7\u522b\u7684\u6743\u9650\u7ba1\u7406\uff0c\u4e14\u4e0d\u9700\u8981\u4f7f\u7528\u6570\u636e\u5e93 Flask-OAuthlib\uff1aFlask\u7684OAuth\u5de5\u5177\u5305sanction\uff0c\u5236\u88c1\uff0c\u7b80\u5355\u7684oauth2\u5ba2\u6237\u7aef django-oauth-toolkit \uff1a\u4e3a Django \u7528\u6237\u51c6\u5907\u7684 OAuth2 django-allauth\uff1aDjango \u7684\u9a8c\u8bc1\u5e94\u7528 Authomatic\uff1a\u7b80\u5355\u4f46\u662f\u5f3a\u5927\u7684\u6846\u67b6\uff0c\u8eab\u4efd\u9a8c\u8bc1/\u6388\u6743\u5ba2\u6237\u7aef","title":"Web \u6743\u9650/\u5b89\u5168"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_17","text":"django-oscar \uff1a\u4e00\u4e2a\u7528\u4e8e Django \u7684\u5f00\u6e90\u7684\u7535\u5b50\u5546\u52a1\u6846\u67b6 django-shop \uff1a\u4e00\u4e2a\u57fa\u4e8e Django \u7684\u5e97\u94fa\u7cfb\u7edf Cartridge\uff1a\u4e00\u4e2a\u57fa\u4e8e Mezzanine \u6784\u5efa\u7684\u8d2d\u7269\u8f66\u5e94\u7528 shoop \uff1a\u4e00\u4e2a\u57fa\u4e8e Django \u7684\u5f00\u6e90\u7535\u5b50\u5546\u52a1\u5e73\u53f0 alipay\uff1a\u975e\u5b98\u65b9\u7684 Python \u652f\u4ed8\u5b9d API merchant\uff1a\u4e00\u4e2a\u53ef\u4ee5\u63a5\u6536\u6765\u81ea\u591a\u79cd\u652f\u4ed8\u5e73\u53f0\u652f\u4ed8\u7684 Django \u5e94\u7528 money\uff1a\u4e00\u4e2a\u8d27\u5e01\u7c7b\u5e93\uff0c\u5e26\u6709\u53ef\u9009\u7684 CLDR \u540e\u7aef\u672c\u5730\u5316\u683c\u5f0f\uff0c\u63d0\u4f9b\u53ef\u6269\u5c55\u7684\u8d27\u5e01\u5151\u6362\u89e3\u51b3\u65b9\u6848 python-currencies\uff1a\u663e\u793a\u8d27\u5e01\u683c\u5f0f\u4ee5\u53ca\u5b83\u7684\u6570\u503c","title":"\u5546\u52a1\u6846\u67b6"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#restful-api","text":"django-rest-framework\uff1a\u4e00\u4e2a\u5f3a\u5927\u7075\u6d3b\u7684\u5de5\u5177\uff0c\u7528\u6765\u6784\u5efa web API django-tastypie\uff1a\u4e3a Django \u5e94\u7528\u5f00\u53d1 API django-formapi\uff1a\u4e3a Django \u7684\u8868\u5355\u9a8c\u8bc1\uff0c\u521b\u5efa JSON APIs flask-api\uff1a\u4e3a flask \u5f00\u53d1\u7684\uff0c\u53ef\u6d4f\u89c8 Web APIs flask-restful\uff1a\u4e3a flask \u5feb\u901f\u521b\u5efa REST APIs flask-restless\uff1a\u4e3a SQLAlchemy \u5b9a\u4e49\u7684\u6570\u636e\u5e93\u6a21\u578b\u521b\u5efa RESTful APIs flask-api-utils\uff1a\u4e3a Flask \u5904\u7406 API \u8868\u793a\u548c\u9a8c\u8bc1 eve\uff1aREST API \u6846\u67b6\uff0c\u7531 Flask, MongoDB \u7b49\u9a71\u52a8 cornice\uff1a\u4e00\u4e2a Pyramid \u7684 REST \u6846\u67b6 falcon\uff1a\u4e00\u4e2a\u7528\u6765\u5efa\u7acb\u4e91 API \u548c Web app \u540e\u7aef\u7684\u9ad8\u6027\u80fd\u6846\u67b6 sandman\uff1a\u4e3a\u73b0\u5b58\u7684\u6570\u636e\u5e93\u9a71\u52a8\u7cfb\u7edf\u81ea\u52a8\u521b\u5efa REST APIs restless\uff1a\u6846\u67b6\u65e0\u5173\u7684 REST \u6846\u67b6\uff0c\u501f\u9274\u4e86 Tastypie ripozo\uff1a\u5feb\u901f\u521b\u5efa REST/HATEOAS/Hypermedia APIs","title":"Restful API"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_18","text":"Chameleon\uff1a\u4e00\u4e2a HTML/XML \u6a21\u677f\u5f15\u64ce\uff0c\u6a21\u4eff\u4e86 ZPT\uff08Zope Page Templates\uff09, \u8fdb\u884c\u4e86\u901f\u5ea6\u4e0a\u7684\u4f18\u5316 Genshi\uff1aPython \u6a21\u677f\u5de5\u5177\uff0c\u7528\u4ee5\u751f\u6210 Web \u611f\u77e5\u7684\u7ed3\u679c Mako\uff1aPython \u5e73\u53f0\u7684\u8d85\u9ad8\u901f\u8f7b\u91cf\u7ea7\u6a21\u677f","title":"\u6a21\u677f\u5f15\u64ce"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_19","text":"celery\uff1a\u4e00\u4e2a\u5f02\u6b65\u4efb\u52a1\u961f\u5217/\u4f5c\u4e1a\u961f\u5217\uff0c\u57fa\u4e8e\u5206\u5e03\u5f0f\u6d88\u606f\u4f20\u9012 huey\uff1a\u5c0f\u578b\u591a\u7ebf\u7a0b\u4efb\u52a1\u961f\u5217 mrq\uff1a\u4e00\u4e2a Python \u7684\u5206\u5e03\u5f0f worker \u4efb\u52a1\u961f\u5217\uff0c\u4f7f\u7528 Redis \u548c gevent rq\uff1a\u7b80\u5355\u7684 Python \u4f5c\u4e1a\u961f\u5217 simpleq\uff1a\u4e00\u4e2a\u7b80\u5355\u7684\uff0c\u53ef\u65e0\u9650\u6269\u5f20\u7684\uff0c\u57fa\u4e8e\u4e9a\u9a6c\u900a SQS \u7684\u961f\u5217","title":"\u961f\u5217"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_20","text":"django-haystack\uff1aDjango \u6a21\u5757\u5316\u641c\u7d22 elasticsearch-py\uff1aElasticsearch \u7684\u5b98\u65b9\u5e95\u5c42 Python \u5ba2\u6237\u7aef elasticsearch-dsl-py\uff1aElasticsearch \u7684\u5b98\u65b9\u9ad8\u7ea7 Python \u5ba2\u6237\u7aef solrpy\uff1asolr \u7684 Python \u5ba2\u6237\u7aef Whoosh\uff1a\u4e00\u4e2a\u5feb\u901f\u7684\u7eaf Python \u641c\u7d22\u5f15\u64ce\u5e93","title":"\u641c\u7d22"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_21","text":"django-activity-stream\uff1a\u4ece\u4f60\u7684\u7ad9\u70b9\u884c\u4e3a\u4e2d\u751f\u6210\u901a\u7528\u6d3b\u52a8\u4fe1\u606f\u6d41 Stream-Framework\uff1a\u4f7f\u7528 Cassandra \u548c Redis \u521b\u5efa\u52a8\u6001\u6d88\u606f\u548c\u901a\u77e5\u7cfb\u7edf","title":"\u52a8\u6001\u6d88\u606f"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_22","text":"django-compressor\uff1a\u5c06\u94fe\u63a5\u548c\u5185\u8054\u7684 JavaScript \u6216 CSS \u538b\u7f29\u5230\u4e00\u4e2a\u5355\u72ec\u7684\u7f13\u5b58\u6587\u4ef6\u4e2d django-storages\uff1a\u4e00\u4e2a\u9488\u5bf9 Django \u7684\u81ea\u5b9a\u4e49\u5b58\u50a8\u540e\u7aef\u7684\u5de5\u5177\u96c6\u5408 fanstatic\uff1a\u6253\u5305\u3001\u4f18\u5316\uff0c\u5e76\u4e14\u628a\u9759\u6001\u6587\u4ef6\u4f9d\u8d56\u4f5c\u4e3a Python \u7684\u5305\u6765\u63d0\u4f9b File Conveyor\uff1a\u4e00\u4e2a\u540e\u53f0\u9a7b\u7559\u7684\u7a0b\u5e8f\uff0c\u7528\u6765\u53d1\u73b0\u548c\u540c\u6b65\u6587\u4ef6\u5230 CDNs,S3 \u548c FTP Flask-Assets\uff1a\u5e2e\u4f60\u5c06 Web \u8d44\u6e90\u6574\u5408\u5230\u4f60\u7684 Flask app \u4e2d jinja-assets-compressor\uff1a\u4e00\u4e2a Jinja \u6269\u5c55\uff0c\u7528\u6765\u7f16\u8bd1\u548c\u538b\u7f29\u4f60\u7684\u8d44\u6e90 webassets\uff1a\u4e3a\u4f60\u7684\u9759\u6001\u8d44\u6e90\u6253\u5305\u3001\u4f18\u5316\u548c\u7ba1\u7406\u751f\u6210\u72ec\u4e00\u65e0\u4e8c\u7684\u7f13\u5b58 URL","title":"\u8d44\u6e90\u7ba1\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_23","text":"Beaker\uff1a\u4e00\u4e2a\u7f13\u5b58\u4f1a\u8bdd\u7684\u5e93\uff0c\u53ef\u4ee5\u7528\u5728 Web \u5e94\u7528\u548c\u72ec\u7acb Python \u811a\u672c\u548c\u5e94\u7528\u4e0a django-cache-machine\uff1aDjango \u6a21\u578b\u7684\u81ea\u52a8\u7f13\u5b58\u548c\u5931\u6548\u5de5\u5177 django-cacheops\uff1a\u5177\u6709\u81ea\u52a8\u9897\u7c92\u5316\u4e8b\u4ef6\u9a71\u52a8\u5931\u6548\u529f\u80fd\u7684 ORM django-viewlet\uff1a\u6e32\u67d3\u6a21\u677f\uff0c\u540c\u65f6\u5177\u6709\u989d\u5916\u7684\u7f13\u5b58\u63a7\u5236\u529f\u80fd dogpile.cache\uff1adogpile.cache \u662f Beaker \u7684\u4e0b\u4e00\u4ee3\u66ff\u4ee3\u54c1\uff0c\u662f\u7531\u540c\u4e00\u4f5c\u8005\u5f00\u53d1 HermesCache\uff1aPython \u7f13\u5b58\u5e93\uff0c\u5177\u6709\u57fa\u4e8e\u6807\u7b7e\u7684\u5931\u6548\u548c dogpile effect \u4fdd\u62a4\u529f\u80fd johnny-cache\uff1adjango \u5e94\u7528\u7f13\u5b58\u6846\u67b6 pylibmc\uff1alibmemcached \u63a5\u53e3\u7684 Python \u5c01\u88c5","title":"\u7f13\u5b58"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_24","text":"Deform\uff1aPython HTML \u8868\u5355\u751f\u6210\u5e93\uff0c\u53d7\u5230\u4e86 formish \u8868\u5355\u751f\u6210\u5e93\u7684\u542f\u53d1 django-bootstrap3\uff1a\u96c6\u6210\u4e86 Bootstrap3 \u7684 Django django-crispy-forms\uff1a\u4e00\u4e2a Django \u5e94\u7528\uff0c\u4ed6\u53ef\u4ee5\u8ba9\u4f60\u4ee5\u4e00\u79cd\u975e\u5e38\u4f18\u96c5\u4e14 DRY\uff08Don't repeat yourself\uff09 \u7684\u65b9\u5f0f\u6765\u521b\u5efa\u7f8e\u89c2\u7684\u8868\u5355 django-remote-forms\uff1a\u4e00\u4e2a\u5e73\u53f0\u72ec\u7acb\u7684 Django \u8868\u5355\u5e8f\u5217\u5316\u5de5\u5177 WTForms\uff1a\u4e00\u4e2a\u7075\u6d3b\u7684\u8868\u5355\u9a8c\u8bc1\u548c\u5448\u73b0\u5e93 WTForms-JSON\uff1a\u4e00\u4e2a WTForms \u6269\u5c55\uff0c\u7528\u6765\u5904\u7406 JSON \u6570\u636e","title":"\u8868\u5355"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_25","text":"Cerberus\uff1a\u4e00\u4e2a\u6620\u5c04\u9a8c\u8bc1\u5668\uff08mappings-validator\uff09 colander\uff1a\u4e00\u4e2a\u7528\u4e8e\u5bf9\u4ece XML, JSON\uff0cHTML \u8868\u5355\u83b7\u53d6\u7684\u6570\u636e\u6216\u5176\u4ed6\u540c\u6837\u7b80\u5355\u7684\u5e8f\u5217\u5316\u6570\u636e\u8fdb\u884c\u9a8c\u8bc1\u548c\u53cd\u5e8f\u5217\u5316\u7684\u7cfb\u7edf kmatch\uff1a\u4e00\u79cd\u7528\u4e8e\u5339\u914d/\u9a8c\u8bc1/\u7b5b\u9009 Python \u5b57\u5178\u7684\u8bed\u8a00 schema\uff1a\u4e00\u4e2a\u7528\u4e8e\u5bf9 Python \u6570\u636e\u7ed3\u6784\u8fdb\u884c\u9a8c\u8bc1\u7684\u5e93 Schematics\uff1a\u6570\u636e\u7ed3\u6784\u9a8c\u8bc1 valideer\uff1a\u8f7b\u91cf\u7ea7\u53ef\u6269\u5c55\u7684\u6570\u636e\u9a8c\u8bc1\u548c\u9002\u914d\u5e93 voluptuous\uff1a\u4e00\u4e2a Python \u6570\u636e\u9a8c\u8bc1\u5e93\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u9a8c\u8bc1\u4f20\u5165 Python \u7684 JSON\uff0cYAML \u7b49\u6570\u636e","title":"\u6570\u636e\u9a8c\u8bc1"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_26","text":"django-celery-ses\uff1a\u5e26\u6709 AWS SES \u548c Celery \u7684 Django email \u540e\u7aef envelopes\uff1a\u975e\u5e38\u4eba\u6027\u5316\u7684\u7535\u5b50\u90ae\u4ef6\u5e93 flanker\uff1a\u4e00\u4e2a email \u5730\u5740\u548c Mime \u89e3\u6790\u5e93 imbox\uff1aPython IMAP \u5e93 inbox.py\uff1aPython SMTP \u670d\u52a1\u5668 inbox\uff1a\u4e00\u4e2a\u5f00\u6e90\u7535\u5b50\u90ae\u4ef6\u5de5\u5177\u7bb1 lamson\uff1aPython \u98ce\u683c\u7684 SMTP \u5e94\u7528\u670d\u52a1\u5668 mailjet\uff1aMailjet API \u5b9e\u73b0\uff0c\u7528\u6765\u63d0\u4f9b\u6279\u91cf\u53d1\u9001\u90ae\u4ef6\uff0c\u7edf\u8ba1\u7b49\u529f\u80fd marrow.mailer\uff1a\u9ad8\u6027\u80fd\u53ef\u6269\u5c55\u90ae\u4ef6\u5206\u53d1\u6846\u67b6 modoboa\uff1a\u4e00\u4e2a\u90ae\u4ef6\u6258\u7ba1\u548c\u7ba1\u7406\u5e73\u53f0\uff0c\u5177\u6709\u73b0\u4ee3\u7684\u3001\u7b80\u7ea6\u7684 Web UI pyzmail\uff1a\u521b\u5efa\u3001\u53d1\u9001\u548c\u89e3\u6790\u7535\u5b50\u90ae\u4ef6 Talon\uff1aMailgun \u5e93\uff0c\u7528\u6765\u62bd\u53d6\u4fe1\u606f\u548c\u7b7e\u540d django-simple-captcha\uff1a\u4e00\u4e2a\u7b80\u5355\u3001\u9ad8\u5ea6\u53ef\u5b9a\u5236\u7684 Django \u5e94\u7528\uff0c\u53ef\u4ee5\u4e3a\u4efb\u4f55 Django \u8868\u5355\u6dfb\u52a0\u9a8c\u8bc1\u7801 django-simple-spam-blocker\uff1a\u4e00\u4e2a\u7528\u4e8e Django \u7684\u7b80\u5355\u7684\u7535\u5b50\u5783\u573e\u5c4f\u853d\u5de5\u5177","title":"\u7535\u5b50\u90ae\u4ef6"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#url_1","text":"webargs\uff1a\u4e00\u4e2a\u89e3\u6790 HTTP \u8bf7\u6c42\u53c2\u6570\u7684\u5e93\uff0c\u5185\u7f6e\u5bf9\u6d41\u884c web \u6846\u67b6\u7684\u652f\u6301\uff0c\u5305\u62ec Flask, Django, Bottle, Tornado \u548c Pyramid short_url\uff1a\u77ed\u7f51\u5740\u751f\u6210","title":"URL"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_27","text":"Babel\uff1a\u4e00\u4e2a Python \u7684\u56fd\u9645\u5316\u5e93 Korean\uff1a\u4e00\u4e2a\u97e9\u8bed\u8bcd\u6001\u5e93","title":"\u56fd\u9645\u5316"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_28","text":"Ajenti\uff1a\u4e00\u4e2a\u670d\u52a1\u5668\u503c\u5f97\u62e5\u6709\u7684\u7ba1\u7406\u9762\u677f django-suit\uff1aDjango \u7ba1\u7406\u754c\u9762\u7684\u4e00\u4e2a\u66ff\u4ee3\u54c1 (\u4ec5\u5bf9\u4e8e\u975e\u5546\u4e1a\u7528\u9014\u662f\u514d\u8d39\u7684) django-xadmin\uff1aDjango admin \u7684\u4e00\u4e2a\u66ff\u4ee3\u54c1\uff0c\u5177\u6709\u5f88\u591a\u4e0d\u9519\u7684\u529f\u80fd flask-admin\uff1a\u4e00\u4e2a\u7528\u4e8e Flask \u7684\u7b80\u5355\u53ef\u6269\u5c55\u7684\u7ba1\u7406\u754c\u9762\u6846\u67b6 flower\uff1a\u4e00\u4e2a\u5bf9 Celery \u96c6\u7fa4\u8fdb\u884c\u5b9e\u65f6\u76d1\u63a7\u548c\u63d0\u4f9b Web \u7ba1\u7406\u754c\u9762\u7684\u5de5\u5177 Grappelli\uff1aDjango \u7ba1\u7406\u754c\u9762\u7684\u4e00\u4e2a\u6f02\u4eae\u7684\u76ae\u80a4 Wooey\uff1a\u4e00\u4e2a Django \u5e94\u7528\uff0c\u53ef\u4ee5\u4e3a Python \u811a\u672c\u521b\u5efa Web \u7528\u6237\u754c\u9762","title":"\u7ba1\u7406\u9762\u677f"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_29","text":"Pelican\uff1a\u4f7f\u7528 Markdown \u6216 ReST \u6765\u5904\u7406\u5185\u5bb9\uff0cJinja2 \u6765\u5236\u4f5c\u4e3b\u9898 Cactus\uff1a\u4e3a\u8bbe\u8ba1\u5e08\u8bbe\u8ba1\u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668 Hyde\uff1a\u57fa\u4e8e Jinja2 \u7684\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668 Nikola\uff1a\u4e00\u4e2a\u9759\u6001\u7f51\u7ad9\u548c\u535a\u5ba2\u751f\u6210\u5668 Tinkerer\uff1aTinkerer \u662f\u4e00\u4e2a\u535a\u5ba2\u5f15\u64ce/\u9759\u6001\u7ad9\u70b9\u751f\u6210\u5668\uff0c\u7531 Sphinx \u9a71\u52a8 Lektor\uff1a\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684\u9759\u6001 CMS \u548c\u535a\u5ba2\u5f15\u64ce Tags\uff1a\u6700\u7b80\u5355\u7684\u9759\u6001\u7f51\u7ad9\u751f\u6210\u5668","title":"\u9759\u6001\u7ad9\u70b9\u751f\u6210"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#wsgi","text":"gunicorn\uff1aPre-forked\uff0c\u90e8\u5206\u662f\u7531 C \u8bed\u8a00\u7f16\u5199\u7684 uwsgi\uff1auwsgi \u9879\u76ee\u7684\u76ee\u7684\u662f\u5f00\u53d1\u4e00\u7ec4\u5168\u6808\u5de5\u5177\uff0c\u7528\u6765\u5efa\u7acb\u6258\u7ba1\u670d\u52a1\uff0c\u7531 C \u8bed\u8a00\u7f16\u5199 bjoern\uff1a\u5f02\u6b65\uff0c\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u7531 C \u8bed\u8a00\u7f16\u5199 fapws3\uff1a\u5f02\u6b65 (\u4ec5\u5bf9\u4e8e\u7f51\u7edc\u7aef)\uff0c\u7531 C \u8bed\u8a00\u7f16\u5199 meinheld\uff1a\u5f02\u6b65\uff0c\u90e8\u5206\u662f\u7531 C \u8bed\u8a00\u7f16\u5199\u7684 netius\uff1a\u5f02\u6b65\uff0c\u975e\u5e38\u5feb\u901f paste\uff1a\u591a\u7ebf\u7a0b\uff0c\u7a33\u5b9a\uff0c\u4e45\u7ecf\u8003\u9a8c rocket\uff1a\u591a\u7ebf\u7a0b waitress\uff1a\u591a\u7ebf\u7a0b\uff0cPyramid \u6846\u67b6\u7531\u5b83\u9a71\u52a8 Werkzeug\uff1a\u4e00\u4e2a WSGI \u5de5\u5177\u5e93\uff0c\u9a71\u52a8\u7740 Flask\uff0c\u800c\u4e14\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5927\u5d4c\u5165\u5230\u4f60\u7684\u9879\u76ee\u4e2d\u53bb","title":"WSGI \u670d\u52a1\u5668"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#orm","text":"Django Models\uff1aDjango \u7684\u4e00\u90e8\u5206 SQLAlchemy\uff1aPython SQL \u5de5\u5177\u4ee5\u53ca\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04\u5de5\u5177 Peewee\uff1a\u4e00\u4e2a\u5c0f\u5de7\uff0c\u5bcc\u6709\u8868\u8fbe\u529b\u7684 ORM PonyORM\uff1a\u63d0\u4f9b\u9762\u5411\u751f\u6210\u5668\u7684 SQL \u63a5\u53e3\u7684 ORM python-sql\uff1a\u7f16\u5199 Python \u98ce\u683c\u7684 SQL \u67e5\u8be2 django-mongodb-engine\uff1aDjango MongoDB \u540e\u7aef PynamoDB\uff1aAmazon DynamoDB \u7684\u4e00\u4e2a Python \u98ce\u683c\u63a5\u53e3 flywheel\uff1aAmazon DynamoDB \u7684\u5bf9\u8c61\u6620\u5c04\u5de5\u5177 MongoEngine\uff1a\u4e00\u4e2a Python \u5bf9\u8c61\u6587\u6863\u6620\u5c04\u5de5\u5177\uff0c\u7528\u4e8e MongoDB hot-redis\uff1a\u4e3a Redis \u63d0\u4f9b Python \u4e30\u5bcc\u7684\u6570\u636e\u7c7b\u578b redisco\uff1a\u4e00\u4e2a Python \u5e93\uff0c\u63d0\u4f9b\u53ef\u4ee5\u6301\u7eed\u5b58\u5728\u5728 Redis \u4e2d\u7684\u7b80\u5355\u6a21\u578b\u548c\u5bb9\u5668 butterdb\uff1aGoogle Drive \u7535\u5b50\u8868\u683c\u7684 Python ORM","title":"ORM"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_30","text":"GeoDjango\uff1a\u4e16\u754c\u7ea7\u5730\u7406\u56fe\u5f62 web \u6846\u67b6 GeoIP\uff1aMaxMind GeoIP Legacy \u6570\u636e\u5e93\u7684 Python API geojson\uff1aGeoJSON \u7684 Python \u7ed1\u5b9a\u53ca\u5de5\u5177 geopy\uff1aPython \u5730\u5740\u7f16\u7801\u5de5\u5177\u7bb1 pygeoip\uff1a\u7eaf Python GeoIP API django-countries\uff1a\u4e00\u4e2a Django \u5e94\u7528\u7a0b\u5e8f\uff0c\u63d0\u4f9b\u7528\u4e8e\u8868\u683c\u7684\u56fd\u5bb6\u9009\u62e9\u529f\u80fd\uff0c\u56fd\u65d7\u56fe\u6807\u9759\u6001\u6587\u4ef6\u4ee5\u53ca\u6a21\u578b\u4e2d\u7684\u56fd\u5bb6\u5b57\u6bb5","title":"\u5730\u7406\u4f4d\u7f6e"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_31","text":"","title":"\u7cfb\u7edf"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_32","text":"envoy\uff1a\u6bd4 Python subprocess \u6a21\u5757\u66f4\u4eba\u6027\u5316 sarge\uff1a\u53e6\u4e00 \u79cd subprocess \u6a21\u5757\u7684\u5c01\u88c5 sh\uff1a\u4e00\u4e2a\u5b8c\u5907\u7684 subprocess \u66ff\u4ee3\u5e93 subprocess\uff1a\u8c03\u7528 shell \u547d\u4ee4\u7684\u795e\u5668","title":"\u8fdb\u7a0b"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_33","text":"multiprocessing\uff1a(Python \u6807\u51c6\u5e93) \u57fa\u4e8e\u8fdb\u7a0b\u7684\u201c\u7ebf\u7a0b\u201d\u63a5\u53e3 threading\uff1a(Python \u6807\u51c6\u5e93)\u66f4\u9ad8\u5c42\u7684\u7ebf\u7a0b\u63a5\u53e3 eventlet\uff1a\u652f\u6301 WSGI \u7684\u5f02\u6b65\u6846\u67b6 gevent\uff1a\u4e00\u4e2a\u57fa\u4e8e\u534f\u7a0b\u7684 Python \u7f51\u7edc\u5e93\uff0c\u4f7f\u7528 greenlet Tomorrow\uff1a\u7528\u4e8e\u4ea7\u751f\u5f02\u6b65\u4ee3\u7801\u7684\u795e\u5947\u7684\u88c5\u9970\u5668\u8bed\u6cd5\u5b9e\u73b0 uvloop\uff1a\u5728 libuv \u4e4b\u4e0a\u8d85\u5feb\u901f\u5b9e\u73b0 asyncio \u4e8b\u4ef6\u5faa\u73af","title":"\u5e76\u53d1/\u5e76\u884c"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_34","text":"","title":"\u6570\u636e\u5e93\u76f8\u5173"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#python_1","text":"pickleDB\uff1a\u4e00\u4e2a\u7b80\u5355\u8f7b\u91cf\u7ea7\u952e\u503c\u50a8\u5b58\u6570\u636e\u5e93 PipelineDB\uff1a\u6d41\u5f0f SQL \u6570\u636e\u5e93 TinyDB\uff1a\u4e00\u4e2a\u5fae\u578b\u7684\u9762\u5411\u6587\u6863\u578b\u6570\u636e\u5e93 ZODB\uff1a\u4e00\u4e2a Python \u539f\u751f\u5bf9\u8c61\u6570\u636e\u5e93\u3002\u4e00\u4e2a\u952e\u503c\u548c\u5bf9\u8c61\u56fe\u6570\u636e\u5e93","title":"Python \u5b9e\u73b0\u7684\u6570\u636e\u5e93"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_35","text":"aiomysql\uff1a\u57fa\u4e8e asyncio \u7684\u5f02\u6b65 MySQL \u6570\u636e\u5e93\u64cd\u4f5c\u5e93 mysql-python\uff1aPython \u7684 MySQL \u6570\u636e\u5e93\u8fde\u63a5\u5668 ysqlclient\uff1amysql-python \u5206\u652f\uff0c\u652f\u6301 Python 3 oursql\uff1a\u4e00\u4e2a\u66f4\u597d\u7684 MySQL \u8fde\u63a5\u5668\uff0c\u652f\u6301\u539f\u751f\u9884\u7f16\u8bd1\u6307\u4ee4\u548c BLOBs PyMySQL\uff1a\u7eaf Python MySQL \u9a71\u52a8\uff0c\u517c\u5bb9 mysql-python psycopg2\uff1aPython \u4e2d\u6700\u6d41\u884c\u7684 PostgreSQL \u9002\u914d\u5668 queries\uff1apsycopg2 \u5e93\u7684\u5c01\u88c5\uff0c\u7528\u6765\u548c PostgreSQL \u8fdb\u884c\u4ea4\u4e92 txpostgres\uff1a\u57fa\u4e8e Twisted \u7684\u5f02\u6b65 PostgreSQL \u9a71\u52a8 apsw\uff1a\u53e6\u4e00\u4e2a Python SQLite \u5c01\u88c5 dataset\uff1a\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8 Python \u5b57\u5178 pymssql\uff1a\u4e00\u4e2a\u7b80\u5355\u7684 Microsoft SQL Server \u6570\u636e\u5e93\u63a5\u53e3 cassandra-python-driver\uff1aCassandra \u7684 Python \u9a71\u52a8 HappyBase\uff1a\u4e00\u4e2a\u4e3a Apache HBase \u8bbe\u8ba1\u7684\uff0c\u5bf9\u5f00\u53d1\u8005\u53cb\u597d\u7684\u5e93 Plyvel\uff1a\u4e00\u4e2a\u5feb\u901f\u4e14\u529f\u80fd\u4e30\u5bcc\u7684 LevelDB \u7684 Python \u63a5\u53e3 py2neo\uff1aNeo4j restful \u63a5\u53e3\u7684 Python \u5c01\u88c5\u5ba2\u6237\u7aef pycassa\uff1aCassandra \u7684 Python Thrift \u9a71\u52a8 PyMongo\uff1aMongoDB \u7684\u5b98\u65b9 Python \u5ba2\u6237\u7aef redis-py\uff1aRedis \u7684 Python \u5ba2\u6237\u7aef telephus\uff1a\u57fa\u4e8e Twisted \u7684 Cassandra \u5ba2\u6237\u7aef txRedis\uff1a\u57fa\u4e8e Twisted \u7684 Redis \u5ba2\u6237\u7aef","title":"\u6570\u636e\u5e93\u9a71\u52a8"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_36","text":"","title":"\u9a8c\u8bc1"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#oauth","text":"OAuthLib\uff1a\u4e00\u4e2a OAuth \u8bf7\u6c42-\u7b7e\u540d\u903b\u8f91\u901a\u7528\u3001\u5b8c\u6574\u7684\u5b9e\u73b0 python-oauth2\uff1a\u4e00\u4e2a\u5b8c\u5168\u6d4b\u8bd5\u7684\u62bd\u8c61\u63a5\u53e3\uff0c\u7528\u6765\u521b\u5efa OAuth \u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef python-social-auth\uff1a\u4e00\u4e2a\u8bbe\u7f6e\u7b80\u5355\u7684\u793e\u4f1a\u5316\u9a8c\u8bc1\u65b9\u5f0f rauth\uff1aOAuth 1.0/a, 2.0, \u548c Ofly \u7684 Python \u5e93 sanction\uff1a\u4e00\u4e2a\u8d85\u7ea7\u7b80\u5355\u7684 OAuth2 \u5ba2\u6237\u7aef\u5b9e\u73b0","title":"OAuth"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_37","text":"cryptography\uff1a\u8fd9\u4e2a\u8f6f\u4ef6\u5305\u610f\u5728\u63d0\u4f9b\u5bc6\u7801\u5b66\u57fa\u672c\u5185\u5bb9\u548c\u65b9\u6cd5\u63d0\u4f9b\u7ed9 Python \u5f00\u53d1\u8005 hashids\uff1a\u5728 Python \u4e2d\u5b9e\u73b0 hashids Paramiko\uff1aSSHv2 \u534f\u8bae\u7684 Python (2.6+, 3.3+) \uff0c\u63d0\u4f9b\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u529f\u80fd Passlib\uff1a\u5b89\u5168\u5bc6\u7801\u5b58\u50a8\uff0f\u54c8\u5e0c\u5e93 PyCrypto\uff1aPython \u5bc6\u7801\u5b66\u5de5\u5177\u7bb1 PyNacl\uff1a\u7f51\u7edc\u548c\u5bc6\u7801\u5b66(NaCl) \u5e93\u7684 Python \u7ed1\u5b9a","title":"\u5bc6\u7801"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_38","text":"jose\uff1aJavaScript \u5bf9\u8c61\u7b7e\u540d\u548c\u52a0\u5bc6\u8349\u6848\u7684\u5b9e\u73b0 PyJWT\uff1aJSON Web \u4ee4\u724c\u8349\u684801 python-jws\uff1aJSON Web \u7b7e\u540d\u8349\u684802\u7684\u5b9e\u73b0 python-jwt\uff1a\u4e00\u4e2a\u7528\u6765\u751f\u6210\u548c\u9a8c\u8bc1 JSON Web \u4ee4\u724c\u7684\u6a21\u5757 Permissions\uff1a\u51fd\u6570\u5e93\uff0c\u5141\u8bb8\u6216\u62d2\u7edd\u7528\u6237\u8bbf\u95ee\u6570\u636e\u6216\u51fd\u6570","title":"\u5176\u4ed6"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_39","text":"","title":"\u4eba\u5de5\u667a\u80fd"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_40","text":"NLTK\uff1a\u4e00\u4e2a\u5148\u8fdb\u7684\u7528\u4ee5\u6784\u5efa\u5904\u7406\u4eba\u7c7b\u8bed\u8a00\u6570\u636e\u7684 Python \u7a0b\u5e8f jieba\uff1a\u4e2d\u6587\u5206\u8bcd\u5de5\u5177 langid.py\uff1a\u72ec\u7acb\u7684\u8bed\u8a00\u8bc6\u522b\u7cfb\u7edf SnowNLP\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406\u4e2d\u6587\u6587\u672c\u7684\u5e93 TextBlob\uff1a\u4e3a\u8fdb\u884c\u666e\u901a\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4efb\u52a1\u63d0\u4f9b\u4e00\u81f4\u7684 API TextGrocery\uff1a\u4e00\u7b80\u5355\u9ad8\u6548\u7684\u77ed\u6587\u672c\u5206\u7c7b\u5de5\u5177\uff0c\u57fa\u4e8e LibLinear \u548c Jieba thulac\uff1a\u6e05\u534e\u5927\u5b66\u81ea\u7136\u8bed\u8a00\u5904\u7406\u4e0e\u793e\u4f1a\u4eba\u6587\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u7814\u5236\u63a8\u51fa\u7684\u4e00\u5957\u4e2d\u6587\u8bcd\u6cd5\u5206\u6790\u5de5\u5177\u5305 loso\uff1a\u4e2d\u6587\u5206\u8bcd\u51fd\u6570\u5e93","title":"\u81ea\u7136\u8bed\u8a00\u5904\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_41","text":"OpenCV\uff1a\u5f00\u6e90\u8ba1\u7b97\u673a\u89c6\u89c9\u5e93 pyocr\uff1aTesseract \u548c Cuneiform \u7684\u5305\u88c5\u5e93 pytesseract\uff1aGoogle Tesseract OCR \u7684\u53e6\u4e00\u5305\u88c5\u5e93 SimpleCV\uff1a\u4e00\u4e2a\u7528\u6765\u521b\u5efa\u8ba1\u7b97\u673a\u89c6\u89c9\u5e94\u7528\u7684\u5f00\u6e90\u6846\u67b6","title":"\u8ba1\u7b97\u673a\u89c6\u89c9"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_42","text":"Caffe: \u4e00\u4e2a Caffe \u7684 Python \u63a5\u53e3 Caffe2\uff1a\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684\u3001\u6a21\u5757\u5316\u7684\uff0c\u53ef\u6269\u5c55\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6 Crab\uff1a\u7075\u6d3b\u3001\u5feb\u901f\u7684\u63a8\u8350\u5f15\u64ce gensim\uff1a\u4eba\u6027\u5316\u7684\u8bdd\u9898\u5efa\u6a21\u5e93 hebel\uff1aGPU \u52a0\u901f\u7684\u6df1\u5ea6\u5b66\u4e60\u5e93 keras: \u4ee5 tensorflow/theano/CNTK \u4e3a\u540e\u7aef\u7684\u6df1\u5ea6\u5b66\u4e60\u5c01\u88c5\u5e93\uff0c\u53ef\u4ee5\u5feb\u901f\u4e0a\u624b\u7684\u795e\u7ecf\u7f51\u7edc MXNet\uff1a\u4e00\u4e2a\u9ad8\u6548\u548c\u7075\u6d3b\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6 NuPIC\uff1a\u667a\u80fd\u8ba1\u7b97 Numenta \u5e73\u53f0 pattern\uff1aPython \u7f51\u7edc\u6316\u6398\u6a21\u5757 PyBrain\uff1a\u4e00\u4e2a Python \u673a\u5668\u5b66\u4e60\u5e93 pydeep\uff1aPython \u6df1\u5ea6\u5b66\u4e60\u5e93 Pylearn2\uff1a\u4e00\u4e2a\u57fa\u4e8e Theano \u7684\u673a\u5668\u5b66\u4e60\u5e93 python-recsys\uff1a\u4e00\u4e2a\u7528\u6765\u5b9e\u73b0\u63a8\u8350\u7cfb\u7edf\u7684 Python \u5e93 Pytorch\uff1a\u4e00\u4e2a\u5177\u6709\u5f20\u91cf\u548c\u52a8\u6001\u795e\u7ecf\u7f51\u7edc\uff0c\u5e76\u6709\u5f3a\u5927 GPU \u52a0\u901f\u80fd\u529b\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6 scikit-learn\uff1a\u57fa\u4e8e SciPy \u6784\u5efa\u7684\u673a\u5668\u5b66\u4e60 Python \u6a21\u5757 skflow\uff1a\u4e00\u4e2a TensorFlow \u7684\u7b80\u5316\u63a5\u53e3(\u6a21\u4eff scikit-learn) TensorFlow\uff1a\u8c37\u6b4c\u5f00\u6e90\u7684\u6700\u53d7\u6b22\u8fce\u7684\u6df1\u5ea6\u5b66\u4e60\u6846\u67b6 Theano\uff1a\u4e00\u4e2a\u5feb\u901f\u6570\u503c\u8ba1\u7b97\u5e93 vowpalporpoise\uff1a\u8f7b\u91cf\u7ea7 Vowpal Wabbit \u7684 Python \u5c01\u88c5 Milk\uff1a\u673a\u5668\u5b66\u4e60\u5de5\u5177\u7bb1\uff0c\u5176\u91cd\u70b9\u662f\u63d0\u4f9b\u76d1\u7763\u5206\u7c7b\u6cd5\u4e0e\u51e0\u79cd\u6709\u6548\u7684\u5206\u7c7b\u5206\u6790\uff1aSVMs(\u57fa\u4e8elibsvm)\uff0cK-NN\uff0c \u968f\u673a\u68ee\u6797 \u7ecf\u6d4e\u548c\u51b3\u7b56\u6811 PyMVPA(Multivariate Pattern Analysis in Python)\uff1a\u4e3a\u5927\u6570\u636e\u96c6\u63d0\u4f9b\u7edf\u8ba1\u5b66\u4e60\u5206\u6790\u7684 Python \u5de5\u5177\u5305\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7075\u6d3b\u53ef\u6269\u5c55\u7684\u6846\u67b6","title":"\u673a\u5668\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_43","text":"","title":"\u79d1\u5b66\u8ba1\u7b97\u4e0e\u6570\u636e\u5206\u6790"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_44","text":"astropy\uff1a\u4e00\u4e2a\u5929\u6587\u5b66\u76f8\u5173\u7684 Python \u5e93 bcbio-nextgen\uff1a\u8fd9\u4e2a\u5de5\u5177\u7bb1\u4e3a\u5168\u81ea\u52a8\u9ad8\u901a\u91cf\u6d4b\u5e8f\u5206\u6790\u63d0\u4f9b\u7b26\u5408\u6700\u4f73\u5b9e\u8df5\u7684\u5904\u7406\u6d41\u7a0b bccb\uff1a\u751f\u7269\u5206\u6790\u76f8\u5173\u4ee3\u7801\u96c6\u5408 Biopython\uff1aBiopython \u662f\u4e00\u7ec4\u53ef\u4ee5\u514d\u8d39\u4f7f\u7528\u7684\u7528\u6765\u8fdb\u884c\u751f\u7269\u8ba1\u7b97\u7684\u5de5\u5177 blaze\uff1aNumPy \u548c Pandas \u7684\u5927\u6570\u636e\u63a5\u53e3 cclib\uff1a\u4e00\u4e2a\u7528\u6765\u89e3\u6790\u548c\u89e3\u91ca\u8ba1\u7b97\u5316\u5b66\u8f6f\u4ef6\u5305\u8f93\u51fa\u7ed3\u679c\u7684\u5e93 NetworkX\uff1a\u4e00\u4e2a\u4e3a\u590d\u6742\u7f51\u7edc\u8bbe\u8ba1\u7684\u9ad8\u6027\u80fd\u8f6f\u4ef6 Neupy\uff1a\u6267\u884c\u548c\u6d4b\u8bd5\u5404\u79cd\u4e0d\u540c\u7684\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u7b97\u6cd5 Numba\uff1aPython JIT (just in time) \u7f16\u8bd1\u5668\uff0c\u9488\u5bf9\u79d1\u5b66\u7528\u7684 Python \uff0c\u7531 Cython \u548c NumPy \u7684\u5f00\u53d1\u8005\u5f00\u53d1 NumPy\uff1a\u4f7f\u7528 Python \u8fdb\u884c\u79d1\u5b66\u8ba1\u7b97\u7684\u57fa\u7840\u5305 Open Babel\uff1a\u4e00\u4e2a\u5316\u5b66\u5de5\u5177\u7bb1\uff0c\u7528\u6765\u63cf\u8ff0\u591a\u79cd\u5316\u5b66\u6570\u636e Open Mining\uff1a\u4f7f\u7528 Python \u6316\u6398\u5546\u4e1a\u60c5\u62a5 (BI) (Pandas web \u63a5\u53e3) orange\uff1a\u901a\u8fc7\u53ef\u89c6\u5316\u7f16\u7a0b\u6216 Python \u811a\u672c\u8fdb\u884c\u6570\u636e\u6316\u6398\uff0c\u6570\u636e\u53ef\u89c6\u5316\uff0c\u5206\u6790\u548c\u673a\u5668\u5b66\u4e60 Pandas\uff1a\u63d0\u4f9b\u9ad8\u6027\u80fd\uff0c\u6613\u7528\u7684\u6570\u636e\u7ed3\u6784\u548c\u6570\u636e\u5206\u6790\u5de5\u5177 PyDy\uff1aPyDy \u662f Python Dynamics \u7684\u7f29\u5199\uff0c\u7528\u6765\u4e3a\u52a8\u529b\u5b66\u8fd0\u52a8\u5efa\u6a21\u5de5\u4f5c\u6d41\u7a0b\u63d0\u4f9b\u5e2e\u52a9\uff0c \u57fa\u4e8e NumPy, SciPy, IPython \u548c matplotlib PyMC\uff1a\u9a6c\u5c14\u79d1\u592b\u94fe \u8499\u7279\u5361\u6d1b \u91c7\u6837\u5de5\u5177 RDKit\uff1a\u5316\u5b66\u4fe1\u606f\u5b66\u548c\u673a\u5668\u5b66\u4e60\u8f6f\u4ef6 SciPy\uff1a\u7528\u4e8e\u6570\u5b66\uff0c\u79d1\u5b66\u548c\u5de5\u7a0b\u7684\u5f00\u6e90\u8f6f\u4ef6\u6784\u6210\u7684\u751f\u6001\u7cfb\u7edf statsmodels\uff1a\u7edf\u8ba1\u5efa\u6a21\u548c\u8ba1\u91cf\u7ecf\u6d4e\u5b66 SymPy\uff1a\u4e00\u4e2a\u7528\u4e8e\u7b26\u53f7\u6570\u5b66\u7684 Python \u5e93 zipline\uff1a\u4e00\u4e2a Python \u7b97\u6cd5\u4ea4\u6613\u5e93 Bayesian-belief-networks\uff1a\u4f18\u96c5\u7684\u8d1d\u53f6\u65af\u4fe1\u5ff5\u7f51\u7edc\u6846\u67b6 ScientificPython\uff1a\u4e00\u7ec4\u7ecf\u8fc7\u6311\u9009\u7684 Python \u7a0b\u5e8f\u6a21\u5757\uff0c\u7528\u4e8e\u79d1\u5b66\u8ba1\u7b97 visvis\uff1a\u53ef\u89c6\u5316\u8ba1\u7b97\u6a21\u5757\u5e93\uff0c\u53ef\u8fdb\u884c\u4e00\u7ef4\u5230\u56db\u7ef4\u6570\u636e\u7684\u53ef\u89c6\u5316","title":"\u6570\u636e\u5904\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_45","text":"matplotlib\uff1a\u4e00\u4e2a Python 2D \u7ed8\u56fe\u5e93 bokeh\uff1a\u7528 Python \u8fdb\u884c\u4ea4\u4e92\u5f0f web \u7ed8\u56fe ggplot\uff1aggplot2 \u7ed9 R \u63d0\u4f9b\u7684 API \u7684 Python \u7248\u672c plotly\uff1a\u534f\u540c Python \u548c matplotlib \u5de5\u4f5c\u7684 web \u7ed8\u56fe\u5e93 pyecharts\uff1a\u57fa\u4e8e\u767e\u5ea6 Echarts \u7684\u6570\u636e\u53ef\u89c6\u5316\u5e93 pygal\uff1a\u4e00\u4e2a Python SVG \u56fe\u8868\u521b\u5efa\u5de5\u5177 pygraphviz\uff1aGraphviz \u7684 Python \u63a5\u53e3 PyQtGraph\uff1a\u4ea4\u4e92\u5f0f\u5b9e\u65f6 2D/3D/ \u56fe\u50cf\u7ed8\u5236\u53ca\u79d1\u5b66/\u5de5\u7a0b\u5b66\u7ec4\u4ef6 SnakeViz\uff1a\u4e00\u4e2a\u57fa\u4e8e\u6d4f\u89c8\u5668\u7684 Python's cProfile \u6a21\u5757\u8f93\u51fa\u7ed3\u679c\u67e5\u770b\u5de5\u5177 vincent\uff1a\u628a Python \u8f6c\u6362\u4e3a Vega \u8bed\u6cd5\u7684\u8f6c\u6362\u5de5\u5177 VisPy\uff1a\u57fa\u4e8e OpenGL \u7684\u9ad8\u6027\u80fd\u79d1\u5b66\u53ef\u89c6\u5316\u5de5\u5177","title":"\u6570\u636e\u53ef\u89c6\u5316"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#gui","text":"","title":"GUI \u4e0e\u6e38\u620f\u5f00\u53d1"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#gui_1","text":"curses\uff1a\u5185\u5efa\u7684 ncurses \u5c01\u88c5\uff0c\u7528\u6765\u521b\u5efa\u7ec8\u7aef\u56fe\u5f62\u7528\u6237\u754c\u9762 enaml\uff1a\u4f7f\u7528\u7c7b\u4f3c QML \u7684 Declaratic \u8bed\u6cd5\u6765\u521b\u5efa\u7f8e\u89c2\u7684\u7528\u6237\u754c\u9762 kivy\uff1a\u4e00\u4e2a\u7528\u6765\u521b\u5efa\u7528\u6237\u4ea4\u4e92\u5e94\u7528\u7a0b\u5e8f\u7684\u5e93\uff0c\u53ef\u4ee5\u8fd0\u884c\u5728 Windows, Linux, Mac OS X, Android \u4ee5\u53ca iOS \u5e73\u53f0\u4e0a pyglet\uff1a\u4e00\u4e2a Python \u7684\u8de8\u5e73\u53f0\u7a97\u53e3\u53ca\u591a\u5a92\u4f53\u5e93 PyQt\uff1a\u8de8\u5e73\u53f0\u7528\u6237\u754c\u9762\u6846\u67b6 Qt \u7684 Python \u7ed1\u5b9a \uff0c\u652f\u6301 Qt v4 \u548c Qt v5 PySide\uff1a\u8de8\u5e73\u53f0\u7528\u6237\u754c\u9762\u6846\u67b6 Qt \u7684 Python \u7ed1\u5b9a \uff0c\u652f\u6301 Qt v4 Tkinter\uff1aTkinter \u662f Python GUI \u7684\u4e00\u4e2a\u4e8b\u5b9e\u6807\u51c6\u5e93 Toga\uff1a\u4e00\u4e2a Python \u539f\u751f\u7684, \u64cd\u4f5c\u7cfb\u7edf\u539f\u751f\u7684 GUI \u5de5\u5177\u5305 urwid\uff1a\u4e00\u4e2a\u7528\u6765\u521b\u5efa\u7ec8\u7aef GUI \u5e94\u7528\u7684\u5e93\uff0c\u652f\u6301\u7ec4\u4ef6\uff0c\u4e8b\u4ef6\u548c\u4e30\u5bcc\u7684\u8272\u5f69\u7b49 wxPython\uff1awxPython \u662f wxWidgets C++ \u7c7b\u5e93\u548c Python \u8bed\u8a00\u6df7\u5408\u7684\u4ea7\u7269 PyGObject\uff1aGLib/GObject/GIO/GTK+ (GTK+3) \u7684 Python \u7ed1\u5b9a Flexx\uff1aFlexx \u662f\u4e00\u4e2a\u7eaf Python \u8bed\u8a00\u7f16\u5199\u7684\u7528\u6765\u521b\u5efa GUI \u7a0b\u5e8f\u7684\u5de5\u5177\u96c6\uff0c\u5b83\u4f7f\u7528 web \u6280\u672f\u8fdb\u884c\u754c\u9762\u7684\u5c55\u793a PyGtk\uff1a\u57fa\u4e8e Python \u7684 GUI \u7a0b\u5e8f\u5f00\u53d1 GTK+ \u5e93 turtle\uff1aPython \u7684\u753b\u56fe\u5de5\u5177","title":"GUI"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_46","text":"Cocos2d\uff1acocos2d \u662f\u4e00\u4e2a\u7528\u6765\u5f00\u53d1 2D \u6e38\u620f Panda3D\uff1a\u7531\u8fea\u58eb\u5c3c\u5f00\u53d1\u7684 3D \u6e38\u620f\u5f15\u64ce\uff0c\u5e76\u7531\u5361\u5185\u57fa\u6885\u9647\u5a31\u4e50\u6280\u672f\u4e2d\u5fc3\u8d1f\u8d23\u7ef4\u62a4\u3002\u4f7f\u7528 C++ \u7f16\u5199, \u9488\u5bf9 Python \u8fdb\u884c\u4e86\u5b8c\u5168\u7684\u5c01\u88c5 Pygame\uff1aPygame \u662f\u4e00\u7ec4 Python \u6a21\u5757\uff0c\u7528\u6765\u7f16\u5199\u6e38\u620f PyOgre\uff1aOgre 3D \u6e32\u67d3\u5f15\u64ce\u7684 Python \u7ed1\u5b9a\uff0c\u53ef\u4ee5\u7528\u6765\u5f00\u53d1\u6e38\u620f\u548c\u4eff\u771f\u7a0b\u5e8f\u7b49\u4efb\u4f55 3D \u5e94\u7528 PyOpenGL\uff1aOpenGL \u7684 Python \u7ed1\u5b9a\u53ca\u5176\u76f8\u5173 APIs PySDL2\uff1aSDL2 \u5e93\u7684\u5c01\u88c5\uff0c\u57fa\u4e8e ctypes RenPy\uff1a\u4e00\u4e2a\u89c6\u89c9\u5c0f\u8bf4\uff08visual novel\uff09\u5f15\u64ce PySFML\uff1aPython \u7ed1\u5b9a SFMLRenPy\uff0c\u89c6\u89c9\u5c0f\u8bf4\u5f15\u64ce","title":"\u6e38\u620f\u5f00\u53d1"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_47","text":"","title":"\u97f3\u89c6\u9891"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_48","text":"audiolazy\uff1aPython \u7684\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u5305 audioread\uff1a\u4ea4\u53c9\u5e93 (GStreamer + Core Audio + MAD + FFmpeg) \u97f3\u9891\u89e3\u7801 beets\uff1a\u4e00\u4e2a\u97f3\u4e50\u5e93\u7ba1\u7406\u5de5\u5177\u53ca MusicBrainz \u6807\u7b7e\u6dfb\u52a0\u5de5\u5177 dejavu\uff1a\u97f3\u9891\u6307\u7eb9\u63d0\u53d6\u548c\u8bc6\u522b django-elastic-transcoder\uff1aDjango + Amazon Elastic Transcoder eyeD3\uff1a\u4e00\u4e2a\u7528\u6765\u64cd\u4f5c\u97f3\u9891\u6587\u4ef6\u7684\u5de5\u5177\uff0c\u5177\u4f53\u6765\u8bb2\u5c31\u662f\u5305\u542b ID3 \u5143\u4fe1\u606f\u7684 MP3 \u6587\u4ef6 id3reader\uff1a\u4e00\u4e2a\u7528\u6765\u8bfb\u53d6 MP3 \u5143\u6570\u636e\u7684 Python \u6a21\u5757 m3u8\uff1a\u4e00\u4e2a\u7528\u6765\u89e3\u6790 m3u8 \u6587\u4ef6\u7684\u6a21\u5757 mutagen\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406\u97f3\u9891\u5143\u6570\u636e\u7684 Python \u6a21\u5757 pydub\uff1a\u901a\u8fc7\u7b80\u5355\u3001\u7b80\u6d01\u7684\u9ad8\u5c42\u63a5\u53e3\u6765\u64cd\u4f5c\u97f3\u9891\u6587\u4ef6 pyechonest\uff1aEcho Nest API \u7684 Python \u5ba2\u6237\u7aef talkbox\uff1a\u4e00\u4e2a\u7528\u6765\u5904\u7406\u6f14\u8bb2/\u4fe1\u53f7\u7684 Python \u5e93 TimeSide\uff1a\u5f00\u6e90 web \u97f3\u9891\u5904\u7406\u6846\u67b6 tinytag\uff1a\u4e00\u4e2a\u7528\u6765\u8bfb\u53d6 MP3, OGG, FLAC \u4ee5\u53ca Wave \u6587\u4ef6\u97f3\u4e50\u5143\u6570\u636e\u7684\u5e93 mingus\uff1a\u4e00\u4e2a\u9ad8\u7ea7\u97f3\u4e50\u7406\u8bba\u548c\u66f2\u8c31\u5305\uff0c\u652f\u6301 MIDI \u6587\u4ef6\u548c\u56de\u653e\u529f\u80fd","title":"\u97f3\u9891"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_49","text":"moviepy\uff1a\u4e00\u4e2a\u7528\u6765\u8fdb\u884c\u57fa\u4e8e\u811a\u672c\u7684\u89c6\u9891\u7f16\u8f91\u6a21\u5757\uff0c\u9002\u7528\u4e8e\u591a\u79cd\u683c\u5f0f\uff0c\u5305\u62ec\u52a8\u56fe GIFs scikit-video\uff1aSciPy \u89c6\u9891\u5904\u7406\u5e38\u7528\u7a0b\u5e8f http://shorten.tv \uff1a\u89c6\u9891\u6458\u8981","title":"\u89c6\u9891"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_50","text":"","title":"\u6d4b\u8bd5\u76f8\u5173"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_51","text":"unittest\uff1a(Python \u6807\u51c6\u5e93) \u5355\u5143\u6d4b\u8bd5\u6846\u67b6 nose\uff1anose \u6269\u5c55\u4e86 unittest \u7684\u529f\u80fd contexts\uff1a\u4e00\u4e2a Python 3.3+ \u7684 BDD \u6846\u67b6 hypothesis\uff1aHypothesis \u662f\u4e00\u4e2a\u57fa\u4e8e\u5148\u8fdb\u7684 Quickcheck \u98ce\u683c\u7279\u6027\u7684\u6d4b\u8bd5\u5e93 mamba\uff1aPython \u7684\u7ec8\u6781\u6d4b\u8bd5\u5de5\u5177\uff0c\u62e5\u62a4 BDD PyAutoGUI\uff1aPyAutoGUI \u662f\u4e00\u4e2a\u4eba\u6027\u5316\u7684\u8de8\u5e73\u53f0 GUI \u81ea\u52a8\u6d4b\u8bd5\u6a21\u5757 pyshould\uff1aShould \u98ce\u683c\u7684\u65ad\u8a00\uff0c\u57fa\u4e8e PyHamcrest pytest\uff1a\u4e00\u4e2a\u6210\u719f\u7684\u5168\u529f\u80fd Python \u6d4b\u8bd5\u5de5\u5177 green\uff1a\u5e72\u51c0\u591a\u5f69\u7684\u6d4b\u8bd5\u5de5\u5177 pyvows\uff1aBDD \u98ce\u683c\u7684\u6d4b\u8bd5\u5de5\u5177\uff0c\u53d7 Vows.js \u7684\u542f\u53d1 Robot Framework\uff1a\u4e00\u4e2a\u901a\u7528\u7684 \u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6","title":"\u6d4b\u8bd5\u6846\u67b6"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#web_2","text":"Selenium\uff1aSelenium WebDriver \u7684 Python \u7ed1\u5b9a locust\uff1a\u4f7f\u7528 Python \u7f16\u5199\u7684\uff0c\u53ef\u6269\u5c55\u7684\u7528\u6237\u52a0\u8f7d\u6d4b\u8bd5\u5de5\u5177 sixpack\uff1a\u4e00\u4e2a\u548c\u8bed\u8a00\u65e0\u5173\u7684 A/B \u6d4b\u8bd5\u6846\u67b6 splinter\uff1a\u5f00\u6e90\u7684 Web \u5e94\u7528\u6d4b\u8bd5\u5de5\u5177","title":"Web \u6d4b\u8bd5"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#mock","text":"mock\uff1a(Python \u6807\u51c6\u5e93) \u4e00\u4e2a\u7528\u4e8e\u4f2a\u9020\u6d4b\u8bd5\u7684\u5e93 doublex\uff1aPython \u7684\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684 doubles \u6d4b\u8bd5\u6846\u67b6 freezegun\uff1a\u901a\u8fc7\u4f2a\u9020\u65e5\u671f\u6a21\u5757\u6765\u751f\u6210\u4e0d\u540c\u7684\u65f6\u95f4 httmock\uff1a\u9488\u5bf9 Python 2.6+ \u548c 3.2+ \u751f\u6210 \u4f2a\u9020\u8bf7\u6c42\u7684\u5e93 httpretty\uff1aPython \u7684 HTTP \u8bf7\u6c42 mock \u5de5\u5177 responses\uff1a\u4f2a\u9020 Python \u4e2d\u7684 requests \u5e93\u7684\u4e00\u4e2a\u901a\u7528\u5e93 VCR.py\uff1a\u5728\u4f60\u7684\u6d4b\u8bd5\u4e2d\u8bb0\u5f55\u548c\u91cd\u653e HTTP \u4ea4\u4e92","title":"Mock \u6d4b\u8bd5"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_52","text":"factoryboy\uff1a\u4e00\u4e2a Python \u7528\u7684\u6d4b\u8bd5\u56fa\u4ef6 (test fixtures) \u66ff\u4ee3\u5e93 mixer\uff1a\u53e6\u5916\u4e00\u4e2a\u6d4b\u8bd5\u56fa\u4ef6 (test fixtures) \u66ff\u4ee3\u5e93\uff0c\u652f\u6301 Django, Flask, SQLAlchemy, Peewee \u7b49 modelmommy\uff1a\u4e3a Django \u6d4b\u8bd5\u521b\u5efa\u968f\u673a\u56fa\u4ef6","title":"\u5bf9\u8c61\u5de5\u5382"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_53","text":"coverage\uff1a\u4ee3\u7801\u8986\u76d6\u7387\u6d4b\u91cf Codecov\uff1a\u4e00\u4e2a\u4ee3\u7801\u8986\u76d6\u7387\u6d4b\u8bd5\u5de5\u5177\uff0c\u4e3a\u5f00\u6e90\u9879\u76ee\u63d0\u4f9b\u514d\u8d39\u4ee3\u7801\u8986\u76d6\u7387\u6d4b\u8bd5\u670d\u52a1","title":"\u4ee3\u7801\u8986\u76d6\u7387"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_54","text":"faker\uff1a\u4e00\u4e2a Python \u5e93\uff0c\u7528\u6765\u751f\u6210\u4f2a\u6570\u636e fake2db\uff1a\u4f2a\u6570\u636e\u5e93\u751f\u6210\u5668 radar\uff1a\u751f\u6210\u968f\u673a\u7684\u65e5\u671f/\u65f6\u95f4 FuckIt.py\uff1aFuckIt.py \u4f7f\u7528\u6700\u5148\u8fdb\u7684\u6280\u672f\u6765\u4fdd\u8bc1\u4f60\u7684 Python \u4ee3\u7801\u65e0\u8bba\u5bf9\u9519\u90fd\u80fd\u7ee7\u7eed\u8fd0\u884c","title":"\u4f2a\u6570\u636e"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_55","text":"","title":"\u4ee3\u7801\u5de5\u5177"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_56","text":"coala\uff1a\u8bed\u8a00\u72ec\u7acb\u548c\u6613\u4e8e\u6269\u5c55\u7684\u4ee3\u7801\u5206\u6790\u5e94\u7528\u7a0b\u5e8f code2flow\uff1a\u628a\u4f60\u7684 Python \u548c JavaScript \u4ee3\u7801\u8f6c\u6362\u4e3a\u6d41\u7a0b\u56fe pycallgraph\uff1a\u8fd9\u4e2a\u5e93\u53ef\u4ee5\u628a\u4f60\u7684 Python \u5e94\u7528\u7684\u6d41\u7a0b(\u8c03\u7528\u56fe)\u8fdb\u884c\u53ef\u89c6\u5316 pysonar2\uff1aPython \u7c7b\u578b\u63a8\u65ad\u548c\u68c0\u7d22\u5de5\u5177","title":"\u4ee3\u7801\u5206\u6790"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#lint","text":"Flake8\uff1a\u6a21\u5757\u5316\u6e90\u7801\u68c0\u67e5\u5de5\u5177: pep8, pyflakes \u4ee5\u53ca co Pylint\uff1a\u4e00\u4e2a\u5b8c\u5168\u53ef\u5b9a\u5236\u7684\u6e90\u7801\u5206\u6790\u5668 YAPF: Google \u7684 Python \u4ee3\u7801\u683c\u5f0f\u5316\u5de5\u5177 pylama\uff1aPython \u548c JavaScript \u7684\u4ee3\u7801\u5ba1\u67e5\u5de5\u5177","title":"Lint \u5de5\u5177"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_57","text":"ipdb\uff1aIPython \u542f\u7528\u7684 pdb pudb\uff1a\u5168\u5c4f\uff0c\u57fa\u4e8e\u63a7\u5236\u53f0\u7684 Python \u8c03\u8bd5\u5668 pyringe\uff1a\u53ef\u4ee5\u5728 Python \u8fdb\u7a0b\u4e2d\u9644\u52a0\u548c\u6ce8\u5165\u4ee3\u7801\u7684\u8c03\u8bd5\u5668 wdb\uff1a\u4e00\u4e2a\u5947\u5f02\u7684 web \u8c03\u8bd5\u5668\uff0c\u901a\u8fc7 WebSockets \u5de5\u4f5c winpdb\uff1a\u4e00\u4e2a\u5177\u6709\u56fe\u5f62\u7528\u6237\u754c\u9762\u7684 Python \u8c03\u8bd5\u5668\uff0c\u53ef\u4ee5\u8fdb\u884c\u8fdc\u7a0b\u8c03\u8bd5\uff0c\u57fa\u4e8e rpdb2 django-debug-toolbar\uff1a\u4e3a Django \u663e\u793a\u5404\u79cd\u8c03\u8bd5\u4fe1\u606f django-devserver\uff1a\u4e00\u4e2a Django \u8fd0\u884c\u670d\u52a1\u5668\u7684\u66ff\u4ee3\u54c1 flask-debugtoolbar\uff1adjango-debug-toolbar \u7684 flask \u7248","title":"\u8c03\u8bd5\u5668"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_58","text":"lineprofiler\uff1a\u9010\u884c\u6027\u80fd\u5206\u6790 Memory Profiler\uff1a\u76d1\u63a7 Python \u4ee3\u7801\u7684\u5185\u5b58\u4f7f\u7528 profiling\uff1a\u4e00\u4e2a\u4ea4\u4e92\u5f0f Python \u6027\u80fd\u5206\u6790\u5de5\u5177 pyelftools\uff1a\u89e3\u6790\u548c\u5206\u6790 ELF \u6587\u4ef6\u4ee5\u53ca DWARF \u8c03\u8bd5\u4fe1\u606f python-statsd\uff1astatsd \u670d\u52a1\u5668\u7684 Python \u5ba2\u6237\u7aef","title":"\u6027\u80fd\u5206\u6790"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_59","text":"logging\uff1a(Python \u6807\u51c6\u5e93) \u4e3a Python \u63d0\u4f9b\u65e5\u5fd7\u529f\u80fd logbook\uff1aLogging \u5e93\u7684\u66ff\u4ee3\u54c1 Eliot\uff1a\u4e3a\u590d\u6742\u7684\u548c\u5206\u5e03\u5f0f\u7cfb\u7edf\u521b\u5efa\u65e5\u5fd7 Raven\uff1aSentry \u7684 Python \u5ba2\u6237\u7aef Sentry\uff1a\u5b9e\u65f6\u8bb0\u5f55\u548c\u6536\u96c6\u65e5\u5fd7\u7684\u670d\u52a1\u5668","title":"\u65e5\u5fd7"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_60","text":"Travis CI\uff1a\u4e00\u4e2a\u6d41\u884c\u7684\u5de5\u5177\uff0c\u4e3a\u4f60\u7684\u5f00\u6e90\u548c \u79c1\u4eba \u9879\u76ee\u63d0\u4f9b\u6301\u7eed\u96c6\u6210\u670d\u52a1 CircleCI\uff1a\u4e00\u4e2a\u6301\u7eed\u96c6\u6210\u5de5\u5177\uff0c\u53ef\u4ee5\u975e\u5e38\u5feb\u901f\u7684\u8fdb\u884c\u5e76\u884c\u6d4b\u8bd5 Vexor CI\uff1a\u4e00\u4e2a\u4e3a\u79c1\u4eba app \u63d0\u4f9b\u6301\u7eed\u96c6\u6210\u7684\u5de5\u5177\uff0c\u652f\u6301\u6309\u5206\u949f\u4ed8\u8d39 Wercker\uff1a\u57fa\u4e8e Docker \u5e73\u53f0\uff0c\u7528\u6765\u6784\u5efa\u548c\u90e8\u7f72\u5fae\u670d\u52a1","title":"\u6301\u7eed\u96c6\u6210"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_61","text":"Codacy\uff1a\u81ea\u52a8\u5316\u4ee3\u7801\u5ba1\u67e5\uff0c\u66f4\u52a0\u5feb\u901f\u7684\u53d1\u5e03\u9ad8\u8d28\u91cf\u4ee3\u7801\u3002\u5bf9\u4e8e\u5f00\u6e90\u9879\u76ee\u662f\u514d\u8d39\u7684 QuantifiedCode\uff1a\u4e00\u4e2a\u6570\u636e\u9a71\u52a8\u3001\u81ea\u52a8\u3001\u6301\u7eed\u7684\u4ee3\u7801\u5ba1\u67e5\u5de5\u5177","title":"\u4ee3\u7801\u8d28\u91cf"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#devops","text":"Ansible\uff1a\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684 IT \u81ea\u52a8\u5316\u5e73\u53f0 SaltStack\uff1a\u57fa\u7840\u8bbe\u65bd\u81ea\u52a8\u5316\u548c\u7ba1\u7406\u7cfb\u7edf OpenStack\uff1a\u7528\u4e8e\u6784\u5efa\u79c1\u6709\u548c\u516c\u6709\u4e91\u7684\u5f00\u6e90\u8f6f\u4ef6 Docker Compose\uff1a\u5feb\u901f\u5206\u79bb\u7684\u5f00\u53d1\u73af\u5883\uff0c\u4f7f\u7528 Docker Fabric\uff1a\u4e00\u4e2a\u7b80\u5355\u7684 Python \u98ce\u683c\u7684\u5de5\u5177\uff0c\u7528\u6765\u8fdb\u884c\u8fdc\u7a0b\u6267\u884c\u548c\u90e8\u7f72 cuisine\uff1a\u4e3a Fabric \u63d0\u4f9b\u4e00\u7cfb\u5217\u9ad8\u7ea7\u51fd\u6570 Fabtools\uff1a\u4e00\u4e2a\u7528\u6765\u7f16\u5199\u8d85\u8d5e\u7684 Fabric \u6587\u4ef6\u7684\u5de5\u5177 gitapi\uff1aGit \u7684\u7eaf Python API hgapi\uff1aMercurial \u7684\u7eaf Python API honcho\uff1aForeman \u7684 Python \u514b\u9686\u7248\uff0c\u7528\u6765\u7ba1\u7406\u57fa\u4e8e Procfile \u7684\u5e94\u7528 pexpect\uff1aControlling interactive programs in a pseudo-terminal like \u5728\u4e00\u4e2a\u4f2a\u7ec8\u7aef\u4e2d\u63a7\u5236\u4ea4\u4e92\u7a0b\u5e8f\uff0c\u5c31\u50cf GNU expect \u4e00\u6837 psutil\uff1a\u4e00\u4e2a\u8de8\u5e73\u53f0\u8fdb\u7a0b\u548c\u7cfb\u7edf\u5de5\u5177\u6a21\u5757 supervisor\uff1aUNIX \u7684\u8fdb\u7a0b\u63a7\u5236\u7cfb\u7edf","title":"DevOps"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_62","text":"APScheduler\uff1a\u8f7b\u5de7\u4f46\u5f3a\u5927\u7684\u8fdb\u7a0b\u5185\u4efb\u52a1\u8c03\u5ea6\uff0c\u4f7f\u4f60\u53ef\u4ee5\u8c03\u5ea6\u51fd\u6570 django-schedule\uff1a\u4e00\u4e2a Django \u6392\u7a0b\u5e94\u7528 doit\uff1a\u4e00\u4e2a\u4efb\u52a1\u6267\u884c\u548c\u6784\u5efa\u5de5\u5177 gunnery\uff1a\u5206\u5e03\u5f0f\u7cfb\u7edf\u4f7f\u7528\u7684\u591a\u7528\u9014\u4efb\u52a1\u6267\u884c\u5de5\u5177 \uff0c\u5177\u6709 web \u4ea4\u4e92\u754c\u9762 Joblib\uff1a\u4e00\u7ec4\u4e3a Python \u63d0\u4f9b\u8f7b\u91cf\u7ea7\u4f5c\u4e1a\u6d41\u6c34\u7ebf\u7684\u5de5\u5177 Plan\uff1a\u5982\u6709\u795e\u52a9\u5730\u7f16\u5199 crontab \u6587\u4ef6 schedule\uff1a\u4eba\u6027\u5316\u7684 Python \u4efb\u52a1\u8c03\u5ea6\u5e93 Spiff\uff1a\u4f7f\u7528\u7eaf Python \u5b9e\u73b0\u7684\u5f3a\u5927\u7684\u5de5\u4f5c\u6d41\u5f15\u64ce TaskFlow\uff1a\u4e00\u4e2a\u53ef\u4ee5\u8ba9\u4f60\u65b9\u4fbf\u6267\u884c\u4efb\u52a1\u7684 Python \u5e93\uff0c\u4e00\u81f4\u5e76\u4e14\u53ef\u9760 AirFlow\uff1aAirflow \u662fAirbnb\u516c\u53f8\u5f00\u6e90\u7684\uff0c\u662f\u4e00\u4e2a\u5de5\u4f5c\u6d41\u5206\u914d\u7ba1\u7406\u7cfb\u7edf\uff0c\u901a\u8fc7\u6709\u5411\u975e\u5faa\u73af\u56fe\u7684\u65b9\u5f0f\u7ba1\u7406\u4efb\u52a1\u6d41\u7a0b\uff0c\u8bbe\u7f6e\u4efb\u52a1\u4f9d\u8d56\u5173\u7cfb\u548c\u65f6\u95f4\u8c03\u5ea6","title":"\u4efb\u52a1\u8c03\u5ea6"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_63","text":"Cython\uff1a\u4f18\u5316\u7684 Python \u9759\u6001\u7f16\u8bd1\u5668\u3002\u4f7f\u7528\u7c7b\u578b\u6df7\u5408\u4f7f Python \u7f16\u8bd1\u6210 C \u6216 C++ \u6a21\u5757\u6765\u83b7\u5f97\u6027\u80fd\u7684\u6781\u5927\u63d0\u5347 PeachPy\uff1a\u5d4c\u5165 Python \u7684 x86-64 \u6c47\u7f16\u5668\u3002\u53ef\u4ee5\u88ab\u7528\u4f5c Python \u5185\u8054\u7684\u6c47\u7f16\u5668\u6216\u8005\u662f\u72ec\u7acb\u7684\u6c47\u7f16\u5668\uff0c\u7528\u4e8e Windows, Linux, OS X, Native Client \u6216\u8005 Go PyPy\uff1a\u4f7f\u7528 Python \u5b9e\u73b0\u7684 Python\u3002\u89e3\u91ca\u5668\u4f7f\u7528 \u9ed1\u9b54\u6cd5 \u52a0\u5feb Python \u8fd0\u884c\u901f\u5ea6\u4e14\u4e0d\u9700\u8981\u52a0\u5165\u989d\u5916\u7684\u7c7b\u578b\u4fe1\u606f Pyston\uff1a\u4f7f\u7528 LLVM \u548c\u73b0\u4ee3 JIT \u6280\u672f\u6784\u5efa\u7684 Python \u5b9e\u73b0\uff0c\u76ee\u6807\u662f\u4e3a\u4e86\u83b7\u5f97\u5f88\u597d\u7684\u6027\u80fd Stackless Python\uff1a\u4e00\u4e2a\u5f3a\u5316\u7248\u7684 Python","title":"\u9ad8\u6027\u80fd"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#windows","text":"Python(x,y)\uff1a\u9762\u5411\u79d1\u5b66\u5e94\u7528\u7684 Python \u53d1\u884c\u7248\uff0c\u57fa\u4e8e Qt \u548c Spyder pythonlibs\uff1a\u975e\u5b98\u65b9\u7684 Windows \u5e73\u53f0 Python \u6269\u5c55\u4e8c\u8fdb\u5236\u5305 PythonNet\uff1aPython \u4e0e .NET \u516c\u5171\u8bed\u8a00\u8fd0\u884c\u5e93 (CLR)\u7684\u96c6\u6210 PyWin32\uff1a\u9488\u5bf9 Windows \u7684 Python \u6269\u5c55 WinPython\uff1aWindows \u215e \u7cfb\u7edf\u4e0b\u4fbf\u643a\u5f0f\u5f00\u53d1\u73af\u5883","title":"Windows \u73af\u5883"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_64","text":"ino\uff1a\u64cd\u4f5c Arduino \u7684\u547d\u4ee4\u884c\u5de5\u5177 Pyro\uff1aPython \u673a\u5668\u4eba\u7f16\u7a0b\u5e93 PyUserInput\uff1a\u8de8\u5e73\u53f0\u7684\uff0c\u63a7\u5236\u9f20\u6807\u548c\u952e\u76d8\u7684\u6a21\u5757 scapy\uff1a\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u64cd\u4f5c\u6570\u636e\u5305\u7684\u5e93 wifi\uff1a\u4e00\u4e2a Python \u5e93\u548c\u547d\u4ee4\u884c\u5de5\u5177\u7528\u6765\u5728 Linux \u5e73\u53f0\u4e0a\u64cd\u4f5c WiFi Pingo\uff1aPingo \u4e3a\u7c7b\u4f3c Raspberry Pi\uff0cpcDuino\uff0c Intel Galileo \u7b49\u8bbe\u5907\u63d0\u4f9b\u7edf\u4e00\u7684 API \u7528\u4ee5\u7f16\u7a0b","title":"\u786c\u4ef6\u76f8\u5173"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_65","text":"","title":"\u73af\u5883\u4e0e\u5305\u7ba1\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_66","text":"p\uff1a\u975e\u5e38\u7b80\u5355\u7684\u4ea4\u4e92\u5f0f Python \u7248\u672c\u7ba1\u7406\u5de5\u5177 pyenv\uff1a\u7b80\u5355\u7684 Python \u7248\u672c\u7ba1\u7406\u5de5\u5177 Vex\uff1a\u53ef\u4ee5\u5728\u865a\u62df\u73af\u5883\u4e2d\u6267\u884c\u547d\u4ee4 virtualenvwrapper\uff1avirtualenv \u7684\u4e00\u7ec4\u6269\u5c55 pew\uff1a\u4e00\u5957\u7ba1\u7406\u591a\u4e2a\u865a\u62df\u73af\u5883\u7684\u5de5\u5177 PyRun\uff1a\u4e00\u4e2a\u5355\u6587\u4ef6\uff0c\u65e0\u9700\u5b89\u88c5\u7684Python\u7248\u672c\u7ba1\u7406\u5de5\u5177","title":"\u73af\u5883\u7ba1\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_67","text":"pip\uff1aPython \u5305\u548c\u4f9d\u8d56\u5173\u7cfb\u7ba1\u7406\u5de5\u5177 pip-tools\uff1a\u4fdd\u8bc1 Python \u5305\u4f9d\u8d56\u5173\u7cfb\u66f4\u65b0\u7684\u4e00\u7ec4\u5de5\u5177 pipenv\uff1aPyhton \u5b98\u65b9\u63a8\u8350\u7684\u65b0\u4e00\u4ee3\u5305\u7ba1\u7406\u5de5\u5177 conda\uff1a\u8de8\u5e73\u53f0\uff0cPython \u4e8c\u8fdb\u5236\u5305\u7ba1\u7406\u5de5\u5177 Curdling\uff1a\u7ba1\u7406 Python \u5305\u7684\u547d\u4ee4\u884c\u5de5\u5177 wheel\uff1aPython \u5206\u53d1\u7684\u65b0\u6807\u51c6\uff0c\u610f\u5728\u53d6\u4ee3 eggs Pdm\uff1a\u65b0\u4e00\u4ee3\u5305\u7ba1\u7406\u5de5\u5177 easy_install\uff1a\u8f6f\u4ef6\u5305\u7ba1\u7406\u7cfb\u7edf","title":"\u5305\u7ba1\u7406"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_68","text":"warehouse\uff1a\u4e0b\u4e00\u4ee3 PyPI bandersnatch\uff1aPyPA \u63d0\u4f9b\u7684 PyPI \u955c\u50cf\u5de5\u5177 devpi\uff1aPyPI \u670d\u52a1\u548c\u6253\u5305/\u6d4b\u8bd5/\u5206\u53d1\u5de5\u5177 localshop\uff1a\u672c\u5730 PyPI \u670d\u52a1\uff08\u81ea\u5b9a\u4e49\u5305\u5e76\u4e14\u81ea\u52a8\u5bf9 PyPI \u955c\u50cf\uff09 PyPI\uff1a\u65b0\u4e00\u4ee3\u7684 Python \u5305\u5e93\u7ba1\u7406\u5de5\u5177","title":"\u5305\u4ed3\u5e93"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_69","text":"","title":"\u5206\u53d1\u4e0e\u6784\u5efa"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_70","text":"PyInstaller\uff1a\u5c06 Python \u7a0b\u5e8f\u8f6c\u6362\u6210\u72ec\u7acb\u7684\u6267\u884c\u6587\u4ef6\uff08\u8de8\u5e73\u53f0\uff09 dh-virtualenv\uff1a\u6784\u5efa\u5e76\u5c06 virtualenv \u865a\u62df\u73af\u5883\u4f5c\u4e3a\u4e00\u4e2a Debian \u5305\u6765\u53d1\u5e03 Nuitka\uff1a\u5c06\u811a\u672c\u3001\u6a21\u5757\u3001\u5305\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u6587\u4ef6\u6216\u6269\u5c55\u6a21\u5757 py2app\uff1a\u5c06 Python \u811a\u672c\u53d8\u4e3a\u72ec\u7acb\u8f6f\u4ef6\u5305\uff08Mac OS X\uff09 py2exe\uff1a\u5c06 Python \u811a\u672c\u53d8\u4e3a\u72ec\u7acb\u8f6f\u4ef6\u5305\uff08Windows\uff09 pynsist\uff1a\u4e00\u4e2a\u7528\u6765\u521b\u5efa Windows \u5b89\u88c5\u7a0b\u5e8f\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5728\u5b89\u88c5\u7a0b\u5e8f\u4e2d\u6253\u5305 Python \u672c\u8eab cx-Freeze\uff1a\u8de8\u5e73\u53f0\u7684\uff0c\u7528\u4e8e\u6253\u5305\u6210\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5e93","title":"\u8f6f\u4ef6\u5206\u53d1"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_71","text":"buildout\uff1a\u4e00\u4e2a\u6784\u5efa\u7cfb\u7edf\uff0c\u4ece\u591a\u4e2a\u7ec4\u4ef6\u6765\u521b\u5efa\uff0c\u7ec4\u88c5\u548c\u90e8\u7f72\u5e94\u7528 BitBake\uff1a\u9488\u5bf9\u5d4c\u5165\u5f0f Linux \u7684\u7c7b\u4f3c make \u7684\u6784\u5efa\u5de5\u5177 fabricate\uff1a\u5bf9\u4efb\u4f55\u8bed\u8a00\u81ea\u52a8\u627e\u5230\u4f9d\u8d56\u5173\u7cfb\u7684\u6784\u5efa\u5de5\u5177 PlatformIO\uff1a\u591a\u5e73\u53f0\u547d\u4ee4\u884c\u6784\u5efa\u5de5\u5177 PyBuilder\uff1a\u7eaf Python \u5b9e\u73b0\u7684\u6301\u7eed\u5316\u6784\u5efa\u5de5\u5177 SCons\uff1a\u8f6f\u4ef6\u6784\u5efa\u5de5\u5177","title":"\u6784\u5efa"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_72","text":"IPython\uff1a\u529f\u80fd\u4e30\u5bcc\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u975e\u5e38\u6709\u6548\u7684\u4f7f\u7528\u4ea4\u4e92\u5f0f Python bpython\uff1a\u754c\u9762\u4e30\u5bcc\u7684 Python \u89e3\u6790\u5668 ptpython\uff1a\u9ad8\u7ea7\u4ea4\u4e92\u5f0f Python \u89e3\u6790\u5668\uff0c\u6784\u5efa\u4e8e python-prompt-toolkit \u4e4b\u4e0a","title":"\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_73","text":"","title":"\u547d\u4ee4\u884c\u76f8\u5173"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_74","text":"asciimatics\uff1a\u8de8\u5e73\u53f0\u3001\u5168\u5c4f\u7ec8\u7aef\u5e93\uff08\u5373\u9f20\u6807/\u952e\u76d8\u8f93\u5165\u548c\u5f69\u8272\uff0c\u5b9a\u4f4d\u6587\u672c\u8f93\u51fa\uff09\uff0c\u5305\u542b\u5b8c\u6574\u7684\u590d\u6742\u52a8\u753b\u548c\u7279\u6b8a\u6548\u679c\u7684\u9ad8\u7ea7 API cement\uff1aPython \u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u6846\u67b6 click\uff1a\u4e00\u4e2a\u901a\u8fc7\u7ec4\u5408\u7684\u65b9\u5f0f\u6765\u521b\u5efa\u7cbe\u7f8e\u547d\u4ee4\u884c\u754c\u9762\u7684\u5305 cliff\uff1a\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684\u6846\u67b6\uff0c\u53ef\u4ee5\u521b\u5efa\u5177\u6709\u591a\u5c42\u547d\u4ee4\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f clint\uff1aPython \u547d\u4ee4\u884c\u7a0b\u5e8f\u5de5\u5177 colorama\uff1a\u8de8\u5e73\u53f0\u5f69\u8272\u7ec8\u7aef\u6587\u672c docopt\uff1aPython \u98ce\u683c\u7684\u547d\u4ee4\u884c\u53c2\u6570\u89e3\u6790\u5668 Gooey\uff1a\u4e00\u6761\u547d\u4ee4\uff0c\u5c06\u547d\u4ee4\u884c\u7a0b\u5e8f\u53d8\u6210\u4e00\u4e2a GUI \u7a0b\u5e8f python-prompt-toolkit\uff1a\u4e00\u4e2a\u7528\u4e8e\u6784\u5efa\u5f3a\u5927\u7684\u4ea4\u4e92\u5f0f\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684\u5e93 python-fire\uff1aGoogle \u51fa\u54c1\u7684\u4e00\u4e2a\u57fa\u4e8e Python \u7c7b\u7684\u6784\u5efa\u547d\u4ee4\u884c\u754c\u9762\u7684\u5e93 Pythonpy\uff1a\u5728\u547d\u4ee4\u884c\u4e2d\u76f4\u63a5\u6267\u884c\u4efb\u4f55 Python \u6307\u4ee4 Clime\uff1a\u53ef\u4ee5\u8f6c\u6362\u4efb\u4f55\u6a21\u5757\u4e3a\u591a\u7684 CLI \u547d\u4ee4\u7a0b\u5e8f\uff0c\u65e0\u4efb\u4f55\u914d\u7f6e docopt\uff1aPython \u547d\u4ee4\u884c\u53c2\u6570\u5206\u6790\u5668 pycli\uff1a\u547d\u4ee4\u884c\u5e94\u7528\u7a0b\u5e8f\uff0c\u652f\u6301\u7684\u6807\u51c6\u547d\u4ee4\u884c\u89e3\u6790\uff0c\u6d4b\u4e95\uff0c\u5355\u5143\u6d4b\u8bd5\u548c\u529f\u80fd\u6d4b\u8bd5 rainbowstream\uff1a\u63a8\u7279\u5ba2\u6237\u7ec8\u7aef argparse\uff1a\u5199\u547d\u4ee4\u884c\u811a\u672c\u5fc5\u5907\uff0c\u5f3a\u5927\u7684\u547d\u4ee4\u884c\u5dee\u6570\u89e3\u6790\u5de5\u5177 pyHook\uff1a\u57fa\u4e8e Python \u7684\u201c\u94a9\u5b50\u201d\u5e93\uff0c\u4e3b\u8981\u7528\u4e8e\u76d1\u542c\u5f53\u524d\u7535\u8111\u4e0a\u9f20\u6807\u548c\u952e\u76d8\u7684\u4e8b\u4ef6 pstuil\uff1a\u8de8\u5e73\u53f0\u5730\u5f88\u65b9\u4fbf\u83b7\u53d6\u548c\u63a7\u5236\u7cfb\u7edf\u7684\u8fdb\u7a0b\uff0c\u4ee5\u53ca\u8bfb\u53d6\u7cfb\u7edf\u7684 CPU \u5360\u7528\u5185\u5b58\u5360\u7528\u7b49\u4fe1\u606f","title":"\u547d\u4ee4\u884c\u5de5\u5177"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_75","text":"aws-cli\uff1aAmazon Web Services \u7684\u901a\u7528\u547d\u4ee4\u884c\u754c\u9762 bashplotlib\uff1a\u5728\u7ec8\u7aef\u4e2d\u8fdb\u884c\u57fa\u672c\u7ed8\u56fe caniusepython3\uff1a\u5224\u65ad\u662f\u54ea\u4e2a\u9879\u76ee\u59a8\u788d\u4f60\u4f60\u79fb\u690d\u5230 Python3 cookiecutter\uff1a\u4ece cookiecutters\uff08\u9879\u76ee\u6a21\u677f\uff09\u521b\u5efa\u9879\u76ee\u7684\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177 doitlive\uff1a\u4e00\u4e2a\u7528\u6765\u5728\u7ec8\u7aef\u4e2d\u8fdb\u884c\u73b0\u573a\u6f14\u793a\u7684\u5de5\u5177 pyftpdlib\uff1a\u4e00\u4e2a\u901f\u5ea6\u6781\u5feb\u548c\u53ef\u6269\u5c55\u7684 Python FTP \u670d\u52a1\u5e93 howdoi\uff1a\u901a\u8fc7\u547d\u4ee4\u884c\u83b7\u53d6\u5373\u65f6\u7684\u7f16\u7a0b\u95ee\u9898\u89e3\u7b54 httpie\uff1a\u4e00\u4e2a\u547d\u4ee4\u884c HTTP \u5ba2\u6237\u7aef\uff0ccURL \u7684\u66ff\u4ee3\u54c1\uff0c\u6613\u7528\u6027\u66f4\u597d PathPicker\uff1a\u4ece bash \u8f93\u51fa\u4e2d\u9009\u51fa\u6587\u4ef6 percol\uff1a\u5411 UNIX shell \u4f20\u7edf\u7ba1\u9053\u6982\u5ff5\u4e2d\u52a0\u5165\u4ea4\u4e92\u5f0f\u9009\u62e9\u529f\u80fd SAWS\uff1a\u4e00\u4e2a\u52a0\u5f3a\u7248\u7684 AWS \u547d\u4ee4\u884c thefuck\uff1a\u4fee\u6b63\u4f60\u4e4b\u524d\u7684\u547d\u4ee4\u884c\u6307\u4ee4 mycli\uff1a\u4e00\u4e2a MySQL \u547d\u4ee4\u884c\u5ba2\u6237\u7aef\uff0c\u5177\u6709\u81ea\u52a8\u8865\u5168\u548c\u8bed\u6cd5\u9ad8\u4eae\u529f\u80fd pgcli\uff1aPostgres \u547d\u4ee4\u884c\u5de5\u5177\uff0c\u5177\u6709\u81ea\u52a8\u8865\u5168\u548c\u8bed\u6cd5\u9ad8\u4eae\u529f\u80fd try\uff1a\u4e00\u4e2a\u66f4\u7b80\u5355\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u7528\u6765\u8bd5\u7528 python \u5e93","title":"\u547d\u4ee4\u884c\u9ad8\u7ea7\u5de5\u5177"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_76","text":"","title":"\u7b2c\u4e09\u65b9"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#api","text":"apache-libcloud\uff1a\u4e00\u4e2a\u4e3a\u5404\u79cd\u4e91\u8bbe\u8ba1\u7684 Python \u5e93 boto\uff1aAmazon Web Services \u7684 Python \u63a5\u53e3 django-wordpress\uff1aWordPress models and views for Django facebook-sdk\uff1aFacebook \u5e73\u53f0\u7684 Python SDK facepy\uff1aFacepy \u8ba9\u548c Facebook's Graph API \u7684\u4ea4\u4e92\u53d8\u5f97\u66f4\u5bb9\u6613 gmail\uff1aGmail \u7684 Python \u63a5\u53e3 google-api-python-client\uff1aPython \u7528\u7684 Google APIs \u5ba2\u6237\u7aef\u5e93 gspread\uff1aGoogle \u7535\u5b50\u8868\u683c\u7684 Python API twython\uff1aTwitter API \u7684\u5c01\u88c5","title":"API"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_77","text":"cffi\uff1a\u7528\u6765\u8c03\u7528 C \u4ee3\u7801\u7684\u5916\u6765\u51fd\u6570\u63a5\u53e3 ctypes\uff1a(Python \u6807\u51c6\u5e93) \u7528\u6765\u8c03\u7528 C \u4ee3\u7801\u7684\u5916\u6765\u51fd\u6570\u63a5\u53e3 PyCUDA\uff1aNvidia CUDA API \u7684\u5c01\u88c5 SWIG\uff1a\u7b80\u5316\u7684\u5c01\u88c5\u548c\u63a5\u53e3\u751f\u6210\u5668","title":"\u5916\u6765\u51fd\u6570\u63a5\u53e3"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_78","text":"","title":"\u5176\u4ed6"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#mapreduce","text":"dpark\uff1aSpark \u7684 Python \u514b\u9686\u7248\uff0c\u4e00\u4e2a\u7c7b\u4f3c MapReduce \u7684\u6846\u67b6 dumbo\uff1a\u8fd9\u4e2a Python \u6a21\u5757\u53ef\u4ee5\u8ba9\u4eba\u8f7b\u677e\u7684\u7f16\u5199\u548c\u8fd0\u884c Hadoop \u7a0b\u5e8f luigi\uff1a\u8fd9\u4e2a\u6a21\u5757\u5e2e\u4f60\u6784\u5efa\u6279\u5904\u7406\u4f5c\u4e1a\u7684\u590d\u6742\u6d41\u6c34\u7ebf mrjob\uff1a\u5728 Hadoop \u6216 Amazon Web Services \u4e0a\u8fd0\u884c MapReduce \u4efb\u52a1 PySpark\uff1aSpark \u7684 Python API streamparse\uff1a\u8fd0\u884c\u9488\u5bf9\u4e8b\u5b9e\u6570\u636e\u6d41\u7684 Python \u4ee3\u7801\u3002\u96c6\u6210\u4e86 Apache Storm","title":"MapReduce"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_79","text":"CyToolz\uff1aToolz \u7684 Cython \u5b9e\u73b0 : \u9ad8\u6027\u80fd\u51fd\u6570\u5f0f\u5de5\u5177 fn.py\uff1a\u5728 Python \u4e2d\u8fdb\u884c\u51fd\u6570\u5f0f\u7f16\u7a0b\uff0c\u5b9e\u73b0\u4e86\u4e00\u4e9b\u4eab\u53d7\u51fd\u6570\u5f0f\u7f16\u7a0b\u7f3a\u5931\u7684\u529f\u80fd funcy\uff1a\u70ab\u9177\u53c8\u5b9e\u7528\u7684\u51fd\u6570\u5f0f\u5de5\u5177 Toolz\uff1a\u4e00\u7ec4\u7528\u4e8e\u8fed\u4ee3\u5668\uff0c\u51fd\u6570\u548c\u5b57\u5178\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u5de5\u5177","title":"\u51fd\u6570\u5f0f\u7f16\u7a0b"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_80","text":"Python-Future\uff1a\u8fd9\u5c31\u662f Python 2 \u548c Python 3 \u4e4b\u95f4\u4e22\u5931\u7684\u90a3\u4e2a\u517c\u5bb9\u6027\u5c42 Python-Modernize\uff1a\u4f7f Python \u4ee3\u7801\u66f4\u52a0\u73b0\u4ee3\u5316\u4ee5\u4fbf\u6700\u7ec8\u8fc1\u79fb\u5230 Python 3 Six\uff1aPython 2 \u548c 3 \u7684\u517c\u5bb9\u6027\u5de5\u5177","title":"\u517c\u5bb9\u6027"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_81","text":"Elpy\uff1aEmacs Python \u5f00\u53d1\u73af\u5883 SublimeJEDI\uff1a\u4e00\u4e2a Sublime Text \u63d2\u4ef6\uff0c\u7528\u6765\u4f7f\u7528\u8d85\u8d5e\u7684\u81ea\u52a8\u8865\u5168\u5e93 Jedi Anaconda\uff1aAnaconda \u628a\u4f60\u7684 Sublime Text 3 \u53d8\u6210\u4e00\u4e2a\u529f\u80fd\u9f50\u5168\u7684 Python IDE YouCompleteMe\uff1a\u5f15\u5165\u57fa\u4e8e Jedi \u7684 Python \u81ea\u52a8\u8865\u5168\u5f15\u64ce Jedi-vim\uff1a\u7ed1\u5b9a Vim \u548c Jedi \u81ea\u52a8\u8865\u5168\u5e93\u5bf9 Python \u8fdb\u884c\u81ea\u52a8\u8865\u5168 Python-mode\uff1a\u5c06 Vim \u53d8\u6210 Python IDE \u7684\u4e00\u6b3e\u591a\u5408\u4e00\u63d2\u4ef6 PTVS\uff1aVisual Studio \u7684 Python \u5de5\u5177","title":"\u7f16\u8f91\u5668\u63d2\u4ef6"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_82","text":"Errbot\uff1a\u6700\u7b80\u5355\u548c\u6700\u6d41\u884c\u7684\u804a\u5929\u673a\u5668\u4eba\u7528\u6765\u5b9e\u73b0\u81ea\u52a8\u804a\u5929\u5de5\u5177","title":"\u81ea\u52a8\u804a\u5929\u5de5\u5177"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_83","text":"Tushare\uff1a\u4e00\u4e2a\u53ef\u4ee5\u63d0\u4f9b\u514d\u8d39\u80a1\u7968\u3001\u57fa\u91d1\u3001\u671f\u8d27\u3001\u6e2f\u80a1\u7b49\u91d1\u878d\u6570\u636e\u7684 Python \u5f00\u6e90\u6570\u636e Ta-Lib\uff1a\u91d1\u878d\u6570\u636e\u6280\u672f\u5206\u6790\u5e93\uff0c\u53ef\u4ee5\u4f9d\u636e\u539f\u59cb\u91d1\u878d\u6570\u636e\u8ba1\u7b97\u5404\u79cd\u6280\u672f\u6307\u6807,\u8ba1\u7b97\u6027\u80fd\u6bd4\u8f83\u4f18\u5f02 AkSHare\uff1a\u4e00\u4e2a\u975e\u5e38\u68d2\u7684\u514d\u8d39\u91d1\u878d\u6570\u636e\u5e73\u53f0","title":"\u91d1\u878d\u6570\u636e"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_84","text":"algorithms\uff1a\u4e00\u4e2a Python \u7b97\u6cd5\u6a21\u5757 python-patterns\uff1aPython \u8bbe\u8ba1\u6a21\u5f0f\u7684\u96c6\u5408 sortedcontainers\uff1a\u5feb\u901f\uff0c\u7eaf Python \u5b9e\u73b0\u7684 SortedList\uff0cSortedDict \u548c SortedSet \u7c7b\u578b","title":"\u7b97\u6cd5\u548c\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"06-third-part-lib/100-Python%E6%9C%89%E5%93%AA%E4%BA%9B%E7%BB%8F%E5%85%B8%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BA%93/#_85","text":"blinker\uff1a\u4e00\u4e2a\u5feb\u901f\u7684 Python \u8fdb\u7a0b\u5185\u4fe1\u53f7/\u4e8b\u4ef6\u5206\u53d1\u7cfb\u7edf itsdangerous\uff1a\u4e00\u7cfb\u5217\u8f85\u52a9\u5de5\u5177\u7528\u6765\u5c06\u53ef\u4fe1\u7684\u6570\u636e\u4f20\u5165\u4e0d\u53ef\u4fe1\u7684\u73af\u5883 pluginbase\uff1a\u4e00\u4e2a\u7b80\u5355\u4f46\u662f\u975e\u5e38\u7075\u6d3b\u7684 Python \u63d2\u4ef6\u7cfb\u7edf Pychievements\uff1a\u4e00\u4e2a\u7528\u6765\u521b\u5efa\u548c\u8ffd\u8e2a\u6210\u5c31\u7684 Python \u6846\u67b6 Tryton\uff1a\u4e00\u4e2a\u901a\u7528\u5546\u52a1\u6846\u67b6","title":"\u6742\u4e03\u6742\u516b"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/","text":"\u5982\u4f55\u4f18\u96c5\u7684\u7ef4\u62a4 Python \u9879\u76ee \u00b6 Python \u4f5c\u4e3a\u4e00\u95e8\u7b80\u5355\u6613\u7528\u7684\u52a8\u6001\u8bed\u8a00\uff0c\u56e0\u5176\u529f\u80fd\u5f3a\u5927\uff0c\u6269\u5c55\u6027\u5f3a\uff0c\u8de8\u5e73\u53f0\u800c\u88ab\u5f88\u591a\u5f00\u53d1\u8005\u6240\u559c\u7231\u3002\u5b83\u5728\u673a\u5668\u5b66\u4e60\u3001\u4eba\u5de5\u667a\u80fd\u3001\u722c\u866b\u6280\u672f\u4ee5\u53ca\u6570\u636e\u5206\u6790\u7b49\u9886\u57df\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u4f46\u662f Python \u540c\u6837\u4e5f\u6709\u4e00\u4e9b\u4e0d\u8db3\u7684\u5730\u65b9\uff0c\u96c6\u4e2d\u8868\u73b0\u5728\u8fd0\u884c\u901f\u5ea6\u6162\uff0cGIL \u5bfc\u81f4\u65e0\u6cd5\u6709\u6548\u5229\u7528\u591a\u7ebf\u7a0b\uff0c\u52a8\u6001\u7c7b\u578b\u5bb9\u6613\u5bfc\u81f4\u4ee3\u7801\u8d28\u91cf\u5931\u63a7\u7b49\u65b9\u9762\u3002 \u4f5c\u4e3a\u4e1a\u52a1\u5f00\u53d1\u8005\uff0c\u867d\u7136\u6211\u4eec\u4e0d\u80fd\u89e3\u51b3 Python \u8bed\u8a00\u5c42\u9762\u7684\u4e0d\u8db3\uff0c\u4f46\u662f\u53ef\u4ee5\u5728\u5de5\u7a0b\u548c\u4ee3\u7801\u5c42\u9762\u81ea\u4e3b\u628a\u63a7\u3002\u901a\u8fc7\u9075\u5faa\u4e00\u4e9b\u4f18\u79c0\u7684\u5b9e\u8df5\uff0c\u53ef\u4ee5\u6709\u6548\u7684\u4fdd\u8bc1 Python \u4ee3\u7801\u8d28\u91cf\u3002\u90a3\u4e48\uff0c\u5f53\u6211\u4eec\u7528 Python \u6765\u5b9e\u73b0\u4e1a\u52a1\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u9075\u5faa\u54ea\u4e9b\u5de5\u7a0b\u5b9e\u8df5\u6765\u4f18\u96c5\u7684\u7ef4\u62a4 Python \u9879\u76ee\u5462\uff1f \u4e00\u3001\u73af\u5883 \u00b6 01/ \u4f7f\u7528 Python 3.8 \u4ee5\u4e0a\\\u7248\u672c \u00b6 \u76ee\u524d\uff0c\u6700\u65b0\u53d1\u5e03\u7684 Python \u5927\u7248\u672c\u4e3a 3.11\uff0cPython 2\u4e5f\u5df2\u7ecf\u505c\u6b62\u7ef4\u62a4\u66f4\u65b0\u3002\u5728 Python \u7248\u672c\u7684\u9009\u62e9\u4e0a\uff0c\u5efa\u8bae\u9009\u62e9 3.8 \u4ee5\u4e0a\u7248\u672c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4eab\u53d7\u8f83\u65b0\u7248\u672c\u5e26\u6765\u7684\u6027\u80fd\u3001\u5b89\u5168\u6027\u4ee5\u53ca\u5404\u79cd\u8bed\u6cd5\u7cd6\u3002\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u60c5\u51b5\uff0c\u4f7f\u7528\u7684\u7b2c\u4e09\u65b9\u5e93\u4e5f\u652f\u6301 3.10 \u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9 3.10 \u7248\u672c\u3002 02/ \u4f7f\u7528\u865a\u62df\u73af\u5883 \u00b6 \u5f88\u591a\u65f6\u5019\u53ef\u80fd\u9700\u8981\u5b89\u88c5\u4e86\u591a\u4e2a Python \u7248\u672c\u6765\u8fd0\u884c\u4e0d\u540c\u65f6\u671f\u7684\u9879\u76ee\uff0c\u4e0d\u540c\u7684 Python \u9879\u76ee\u4f9d\u8d56\u76f8\u540c\u7b2c\u4e09\u5e93\u7684\u7248\u672c\u53ef\u80fd\u4e5f\u4e0d\u4e00\u6837\u3002\u4f7f\u7528\u865a\u62df\u73af\u5883\u9694\u7edd Python \u7248\u672c\uff0c\u65e2\u80fd\u89e3\u51b3\u591a\u4e2a\u7248\u672c\u5e76\u5b58\u7684\u95ee\u9898\uff0c\u4e5f\u80fd\u591f\u8ba9 Python \u9879\u76ee\u7684\u5f00\u53d1\u8fd0\u884c\u73af\u5883\u66f4\u5e72\u51c0\u3002\u4f8b\u5982\u4f7f\u7528 Python venv \u5305\u6765\u521b\u5efa\u865a\u62df\u73af\u5883\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a python3 -m venv ./venv # \u5728\u9879\u76ee\u76ee\u5f55\u521b\u5efa\u865a\u62df\u73af\u5883 source venv/bin/activate # \u8fdb\u5165\u865a\u62df\u73af\u5883 deactivate # \u9000\u51fa\u865a\u62df\u73af\u5883 03/ \u4f7f\u7528 Docker \u00b6 Docker \u7ecf\u8fc7\u8fd9\u4e48\u591a\u5e74\u7684\u53d1\u5c55\uff0c\u5728\u5404\u4e2a\u573a\u666f\u4e0b\u7684\u5e94\u7528\u4e5f\u90fd\u88ab\u9a8c\u8bc1\u8fc7\u4e86\uff0c\u5e76\u4e14\u6709\u4e0d\u5c11\u7684\u6700\u4f73\u5b9e\u8df5\u3002Docker \u5b98\u65b9\u7684\u53e3\u53f7\u662f \u201cDevelop faster. Run anywhere\u201d\uff0c\u4f7f\u7528 Docker \u80fd\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5f00\u53d1\u90e8\u7f72\u5e94\u7528\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u9879\u76ee\u8fd0\u884c\u73af\u5883\u7684\u521d\u59cb\u5316\u3001\u9879\u76ee\u7684\u4f9d\u8d56\u3001\u9879\u76ee\u7684\u8fd0\u884c\u914d\u7f6e\u7f16\u5199\u6210 Dockerfile\uff0c\u518d\u6839\u636e Dockerfile \u7f16\u8bd1\u6210\u955c\u50cf\uff0c\u5c06\u955c\u50cf\u63a8\u9001\u5230\u955c\u50cf\u670d\u52a1\uff0c\u4ee5\u4fbf\u5728\u4efb\u4f55\u73af\u5883\u90fd\u80fd\u8f7b\u677e\u62c9\u53d6\u4f7f\u7528\uff0c\u8fd9\u6837\u4fbf\u53ef\u4ee5\u4fdd\u8bc1\u9879\u76ee\u7684\u5f00\u53d1\u548c\u7ebf\u4e0a\u73af\u5883\u4fdd\u6301\u4e00\u81f4\u3002 04/ \u4f7f\u7528 requirements.txt \u00b6 \u751f\u6210\u5e76\u7ef4\u62a4\u597d\u9879\u76ee\u7684 requirements.txt \u6587\u4ef6\uff0c\u5df2\u7ecf\u662f Python \u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u5171\u8bc6\u4e86\u3002requirements.txt \u6587\u4ef6\u5e94\u8be5\u53ea\u5305\u542b\u672c\u9879\u76ee\u6240\u9700\u8981\u7684\u4f9d\u8d56\u5305\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4f9d\u8d56\u5305\u90fd\u6307\u5b9a\u5177\u4f53\u7684\u7248\u672c\u53f7\u3002\u6709\u4e9b\u7a0b\u5e8f\u5458\u76f4\u63a5\u4f7f\u7528 pip freeze \u5c06\u6574\u4e2a\u5f00\u53d1\u73af\u5883\u4e0b\u7684\u5b89\u88c5\u5305\u90fd\u5bfc\u5165\u5230 requirements.txt \u7684\u505a\u6cd5\u662f\u4e0d\u503c\u5f97\u6548\u4eff\u7684\uff0c\u8fd9\u6837\u505a\u4e0d\u4ec5\u5bfc\u81f4\u5728\u65b0\u7684\u73af\u5883\u521d\u59cb\u5316\u65f6\u5b89\u88c5\u4e00\u4e9b\u5197\u4f59\u7684\u4f9d\u8d56\uff0c\u4e5f\u4f1a\u7ed9\u9879\u76ee\u7ef4\u62a4\u8005\u5e26\u6765\u4e00\u4e9b\u56f0\u60d1\u3002 \u4e8c\u3001\u4ee3\u7801 \u00b6 01/ \u89c4\u5212\u597d\u9879\u76ee\u7ed3\u6784 \u00b6 \u4e0d\u7ba1\u4ec0\u4e48\u8bed\u8a00\u7684\u9879\u76ee\uff0c\u597d\u7684\u9879\u76ee\u7ed3\u6784\u4e0d\u4ec5\u6709\u52a9\u4e8e\u5f00\u53d1\u5206\u5de5\uff0c\u51cf\u5c11\u6df7\u4e71\uff0c\u8fd8\u80fd\u8ba9\u65b0\u4eba\u5feb\u901f\u7684\u8bfb\u61c2\u4ee3\u7801\u3002\u6240\u4ee5\u4e0d\u7ba1\u4f60\u7ef4\u62a4\u7684\u9879\u76ee\u662f\u65b0\u9879\u76ee\u8fd8\u662f\u8001\u9879\u76ee\uff0c\u9047\u5230\u9879\u76ee\u7ed3\u6784\u6709\u4e0d\u5408\u7406\u7684\u5730\u65b9\uff0c\u80fd\u8c03\u6574\u4e00\u5b9a\u8981\u53ca\u65f6\u8c03\u6574\u8fc7\u6765\uff0c\u4e0d\u7136\u8d8a\u5230\u540e\u9762\u8d8a\u4e0d\u597d\u7ef4\u62a4\u3002 02/ import \u6392\u5e8f \u00b6 \u5f88\u591a Python \u7a0b\u5e8f\u5458\u90fd\u4f1a\u5ffd\u7565\u5bf9 import \u7684\u6392\u5e8f\uff0c\u89c9\u5f97\u6ca1\u5fc5\u8981\u3002\u5176\u5b9e\u5bf9 import \u6392\u5e8f\uff0c\u5bf9\u8bfb\u61c2\u4ee3\u7801\uff0c\u7ef4\u62a4\u597d\u9879\u76ee\u4e5f\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\u5f88\u591a\u9879\u76ee\u90fd\u6309\u4e0b\u9762\u7684\u987a\u5e8f\u6765 import \u5305\uff1a # \u57fa\u7840\u5e93import osimport re # \u7b2c\u4e09\u65b9\u5e93import requests # \u672c\u9879\u76ee\u5e93import x.x.x \u5982\u679c\u4e0d\u60f3\u624b\u52a8\u6392\uff0c\u53ef\u4ee5\u4f7f\u7528 isort \u8fd9\u4e2a\u5de5\u5177\u6765\u81ea\u52a8\u7ed9 import \u6392\u5e8f\u3002 03/ \u7c7b\u578b\u68c0\u67e5 \u00b6 Python \u4f5c\u4e3a\u52a8\u6001\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u7f16\u7801\u7684\u7075\u6d3b\u6027\u5f88\u5927\uff0c\u5f00\u53d1\u6548\u7387\u4e5f\u9ad8\u3002\u4f46\u662f\u9879\u76ee\u5230\u4e86\u4e00\u5b9a\u89c4\u6a21\u540e\uff0c\u52a8\u6001\u7c7b\u578b\u5e26\u6765\u7684\u7ef4\u62a4\u6210\u672c\u5c31\u53d8\u9ad8\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u7684 Python \u9879\u76ee\uff0c\u8d8a\u65e9\u52a0\u5165\u7c7b\u578b\u68c0\u67e5\uff0c\u5bf9\u540e\u671f\u9879\u76ee\u7684\u7ef4\u62a4\u8d8a\u6709\u5229\u3002\u5bf9\u4e8e\u7c7b\u578b\u68c0\u67e5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 mypy\uff0c\u5b83\u529f\u80fd\u5f3a\u5927\u800c\u4f7f\u7528\u7b80\u5355\u3002 pip install mypymypy a.py 04/ \u4ee3\u7801\u89c4\u8303 \u00b6 \u5173\u4e8e Python \u4ee3\u7801\u89c4\u8303\uff0c\u53ef\u4ee5\u770b\u53e6\u4e00\u7bc7\u300a Git Hook \u5b9e\u73b0 Python \u9879\u76ee\u4ee3\u7801\u89c4\u8303\u548c\u63d0\u4ea4\u89c4\u8303\u843d\u5730 \u300b\u7684\u4ecb\u7ecd\u3002 05/ \u6d4b\u8bd5 \u00b6 \u4e00\u4e2a\u5408\u683c\u7684\u7a0b\u5e8f\u5458\u662f\u4f1a\u505a\u597d\u81ea\u6d4b\u7684\uff0c\u5bf9\u4e8e\u540e\u7aef\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u5c31\u662f\u8981\u505a\u597d\u5355\u5143\u6d4b\u8bd5\u3001\u6a21\u5757\u6d4b\u8bd5\u548c\u63a5\u53e3\u6d4b\u8bd5\u3002\u5728 Python \u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u4f7f\u7528\u5b98\u65b9\u7684 unittest \u6846\u67b6\u3002\u6a21\u5757\u6d4b\u8bd5\u5219\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u6d4b\u8bd5\u6846\u67b6\uff0c\u4f8b\u5982 pytest\u3002\u63a5\u53e3\u6d4b\u8bd5\u7684\u5de5\u5177\u5c31\u6709\u5f88\u591a\u9009\u62e9\u4e86\uff0c\u4e00\u822c\u90fd\u517c\u5177\u81ea\u52a8\u5316\u548c\u538b\u6d4b\u529f\u80fd\uff0c\u6bd4\u5982 JMeter\u3002\u5982\u679c\u8fd8\u6d89\u53ca\u5230\u524d\u7aef\u529f\u80fd\u6d4b\u8bd5\uff0c\u5219\u53ef\u4ee5\u7ec4\u7ec7\u5f00\u53d1\u8fdb\u884c\u4ea4\u53c9\u6d4b\u8bd5\uff0cA \u540c\u5b66\u5f00\u53d1\u7684\u529f\u80fd\u7531 B \u540c\u5b66\u8fdb\u884c\u6d4b\u8bd5\u3002\u5f00\u53d1\u81ea\u6d4b\u8986\u76d6\u7684\u8303\u56f4\u8d8a\u5e7f\uff0c\u4ea4\u4ed8\u7684\u4ea7\u54c1\u7684\u8d28\u91cf\u5c31\u8d8a\u9ad8\uff0c\u4e5f\u5c31\u8d8a\u80fd\u4fdd\u8bc1\u9879\u76ee\u7684\u8fdb\u5ea6\u3002 \u4e09\u3001\u5de5\u5177 \u00b6 01/ \u5f00\u53d1IDEA \u00b6 \u80fd\u591f\u8fdb\u884c Python \u5f00\u53d1\u7684 idea \u6709\u4e0d\u5c11\uff0c\u6709\u4eba\u559c\u6b22\u7528 PyCharm\uff0c\u6709\u4eba\u559c\u6b22\u7528VS Code\uff0c\u4f46\u662f\u5efa\u8bae\u56e2\u961f\u7edf\u4e00\u4f7f\u7528 PyCharm \u3002\u56e2\u961f\u5185\u90e8\u53ef\u4ee5\u590d\u7528 idea \u7684\u8bbe\u7f6e\uff0c\u56e2\u961f\u6210\u5458\u5f00\u53d1\u65f6\u5fc5\u987b\u5b89\u88c5\u4e00\u4e9b\u5fc5\u5907\u63d2\u4ef6\uff0c\u6bd4\u5982 editorconfig\u3001mypy\u3001pylint\u7b49\u3002\u901a\u8fc7\u7edf\u4e00 idea\uff0c\u7edf\u4e00 idea \u7684\u8bbe\u7f6e\u6765\u51cf\u5c0f\u4ee3\u7801\u98ce\u683c\u7684\u5dee\u5f02\u3002 02/ \u4ee3\u7801\u7ba1\u7406 \u00b6 \u4f7f\u7528 git \u6765\u7ba1\u7406\u4ee3\u7801\uff0c\u5df2\u7ecf\u662f\u884c\u4e1a\u7684\u4e3b\u6d41\u4e86\u3002\u4f7f\u7528 git \u7684\u597d\u5904\u4e5f\u4e0d\u5fc5\u8fc7\u591a\u8bf4\u660e\u4e86\uff0c\u7279\u522b\u662f\u5229\u7528 git \u672c\u5730\u94a9\u5b50\uff0c\u53ef\u4ee5\u8ba9\u4ee3\u7801\u683c\u5f0f\u5316\u3001\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u3001\u5355\u5143\u6d4b\u8bd5\u90fd\u81ea\u52a8\u5316\uff0c\u901a\u8fc7\u4e86\u8fd9\u4e9b\u68c0\u67e5\u624d\u5141\u8bb8\u63d0\u4ea4\uff0c\u5c31\u80fd\u8fdb\u4e00\u6b65\u7684\u63d0\u9ad8\u9879\u76ee\u4ee3\u7801\u7684\u8d28\u91cf\u3002 03/ pre-commit \u00b6 \u4f7f\u7528 git \u672c\u5730\u94a9\u5b50\u505a\u7684\u4e8b\u60c5\u591a\u4e86\uff0c\u6211\u4eec\u5c31\u9700\u8981\u628a\u8fd9\u4e9b\u94a9\u5b50\u7ef4\u62a4\u8d77\u6765\uff0c\u65b9\u4fbf\u56e2\u961f\u91cc\u5176\u4ed6\u4eba\u4f7f\u7528\u3002pre-commit \u5c31\u662f\u4e00\u4e2a\u7ba1\u7406 git \u672c\u5730\u94a9\u5b50\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u914d\u7f6e\u9879\u76ee\u6240\u9700\u8981\u7684\u672c\u5730\u94a9\u5b50\u3002\u5728\u9879\u76ee\u91cc\u6dfb\u52a0\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u5c31\u80fd\u8ba9\u56e2\u961f\u6210\u5458\u5f88\u65b9\u4fbf\u7684\u5b89\u88c5\u597d\u7edf\u4e00\u7684\u672c\u5730\u94a9\u5b50\u3002\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a .pre-commit-config.yaml \u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u4e86\u68c0\u67e5 git \u63d0\u4ea4\u4fe1\u606f\u683c\u5f0f\u3001isort import \u6392\u5e8f\u3001flak8\u4ee3\u7801\u683c\u5f0f\u5316\u4ee5\u53ca\u6267\u884cmypy\u6d4b\u8bd5\u672c\u5730\u94a9\u5b50\uff0c\u53ea\u6709\u8fd9\u4e9b\u94a9\u5b50\u90fd\u6267\u884c\u901a\u8fc7\u540e\uff0c\u624d\u80fd\u8fdb\u884c git \u63d0\u4ea4\u64cd\u4f5c\u3002 # See https://pre-commit.com for more information # See https://pre-commit.com/hooks.html for more hooks repos: - repo: git@github.com:One2r/commit-msg-hook.git rev: 'ca2480d83aa7d3ce4341a378d3aad56d111f16bd' hooks: - id: commit-msg - repo: https://github.com/PyCQA/isort rev: 5.10.1 hooks: - id: isort args: - --profile=black - repo: https://github.com/PyCQA/flake8 rev: 4.0.1 hooks: - id: flake8 args: - --exclude=.git,__pycache__,docs,utils - --ignore=E203,W503 - --max-complexity=25 - --max-line-length=128 - repo: https://github.com/pre-commit/mirrors-mypy rev: v0.961 hooks: - id: mypy args: - --ignore-missing-imports - --install-types # See mirrors-mypy README.md - --non-interactive \u901a\u8fc7\u4ee5\u4e0a\u8fd9\u4e9b\u4f18\u79c0\u7684\u5de5\u7a0b\u5b9e\u8df5\uff0c\u5c31\u80fd\u8ba9\u6211\u4eec\u4f18\u96c5\u7684\u7ef4\u62a4 Python \u9879\u76ee\u4e86\uff0c\u5c31\u80fd\u8ba9\u6211\u4eec\u8bf4\u201c\u4eba\u751f\u82e6\u77ed\uff0c\u6211\u7528 Python\u3002\u52a8\u6001\u4e00\u65f6\u723d\uff0c\u4e00\u76f4\u7528\u4e00\u76f4\u723d\u201d\u4e86\u3002 \u53c2\u8003 \u00b6 \u5173\u4e8e\u9879\u76ee\u7ed3\u6784\uff1a https://stackoverflow.com/questions/193161/what-is-the-best-project-structure-for-a-python-application isort\uff1a https://github.com/PyCQA/isort mypy\uff1amypy-lang.org/index.html pytest\uff1a https://docs.pytest.org/en/7.2.x/","title":"30-\u5982\u4f55\u4f18\u96c5\u7684\u7ef4\u62a4 Python \u9879\u76ee"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#python","text":"Python \u4f5c\u4e3a\u4e00\u95e8\u7b80\u5355\u6613\u7528\u7684\u52a8\u6001\u8bed\u8a00\uff0c\u56e0\u5176\u529f\u80fd\u5f3a\u5927\uff0c\u6269\u5c55\u6027\u5f3a\uff0c\u8de8\u5e73\u53f0\u800c\u88ab\u5f88\u591a\u5f00\u53d1\u8005\u6240\u559c\u7231\u3002\u5b83\u5728\u673a\u5668\u5b66\u4e60\u3001\u4eba\u5de5\u667a\u80fd\u3001\u722c\u866b\u6280\u672f\u4ee5\u53ca\u6570\u636e\u5206\u6790\u7b49\u9886\u57df\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\u4f46\u662f Python \u540c\u6837\u4e5f\u6709\u4e00\u4e9b\u4e0d\u8db3\u7684\u5730\u65b9\uff0c\u96c6\u4e2d\u8868\u73b0\u5728\u8fd0\u884c\u901f\u5ea6\u6162\uff0cGIL \u5bfc\u81f4\u65e0\u6cd5\u6709\u6548\u5229\u7528\u591a\u7ebf\u7a0b\uff0c\u52a8\u6001\u7c7b\u578b\u5bb9\u6613\u5bfc\u81f4\u4ee3\u7801\u8d28\u91cf\u5931\u63a7\u7b49\u65b9\u9762\u3002 \u4f5c\u4e3a\u4e1a\u52a1\u5f00\u53d1\u8005\uff0c\u867d\u7136\u6211\u4eec\u4e0d\u80fd\u89e3\u51b3 Python \u8bed\u8a00\u5c42\u9762\u7684\u4e0d\u8db3\uff0c\u4f46\u662f\u53ef\u4ee5\u5728\u5de5\u7a0b\u548c\u4ee3\u7801\u5c42\u9762\u81ea\u4e3b\u628a\u63a7\u3002\u901a\u8fc7\u9075\u5faa\u4e00\u4e9b\u4f18\u79c0\u7684\u5b9e\u8df5\uff0c\u53ef\u4ee5\u6709\u6548\u7684\u4fdd\u8bc1 Python \u4ee3\u7801\u8d28\u91cf\u3002\u90a3\u4e48\uff0c\u5f53\u6211\u4eec\u7528 Python \u6765\u5b9e\u73b0\u4e1a\u52a1\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u9075\u5faa\u54ea\u4e9b\u5de5\u7a0b\u5b9e\u8df5\u6765\u4f18\u96c5\u7684\u7ef4\u62a4 Python \u9879\u76ee\u5462\uff1f","title":"\u5982\u4f55\u4f18\u96c5\u7684\u7ef4\u62a4 Python \u9879\u76ee"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#_1","text":"","title":"\u4e00\u3001\u73af\u5883"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#01-python-38","text":"\u76ee\u524d\uff0c\u6700\u65b0\u53d1\u5e03\u7684 Python \u5927\u7248\u672c\u4e3a 3.11\uff0cPython 2\u4e5f\u5df2\u7ecf\u505c\u6b62\u7ef4\u62a4\u66f4\u65b0\u3002\u5728 Python \u7248\u672c\u7684\u9009\u62e9\u4e0a\uff0c\u5efa\u8bae\u9009\u62e9 3.8 \u4ee5\u4e0a\u7248\u672c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u4eab\u53d7\u8f83\u65b0\u7248\u672c\u5e26\u6765\u7684\u6027\u80fd\u3001\u5b89\u5168\u6027\u4ee5\u53ca\u5404\u79cd\u8bed\u6cd5\u7cd6\u3002\u5982\u679c\u6ca1\u6709\u7279\u6b8a\u60c5\u51b5\uff0c\u4f7f\u7528\u7684\u7b2c\u4e09\u65b9\u5e93\u4e5f\u652f\u6301 3.10 \u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u9009\u62e9 3.10 \u7248\u672c\u3002","title":"01/ \u4f7f\u7528 Python 3.8 \u4ee5\u4e0a\\\u7248\u672c"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#02","text":"\u5f88\u591a\u65f6\u5019\u53ef\u80fd\u9700\u8981\u5b89\u88c5\u4e86\u591a\u4e2a Python \u7248\u672c\u6765\u8fd0\u884c\u4e0d\u540c\u65f6\u671f\u7684\u9879\u76ee\uff0c\u4e0d\u540c\u7684 Python \u9879\u76ee\u4f9d\u8d56\u76f8\u540c\u7b2c\u4e09\u5e93\u7684\u7248\u672c\u53ef\u80fd\u4e5f\u4e0d\u4e00\u6837\u3002\u4f7f\u7528\u865a\u62df\u73af\u5883\u9694\u7edd Python \u7248\u672c\uff0c\u65e2\u80fd\u89e3\u51b3\u591a\u4e2a\u7248\u672c\u5e76\u5b58\u7684\u95ee\u9898\uff0c\u4e5f\u80fd\u591f\u8ba9 Python \u9879\u76ee\u7684\u5f00\u53d1\u8fd0\u884c\u73af\u5883\u66f4\u5e72\u51c0\u3002\u4f8b\u5982\u4f7f\u7528 Python venv \u5305\u6765\u521b\u5efa\u865a\u62df\u73af\u5883\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a python3 -m venv ./venv # \u5728\u9879\u76ee\u76ee\u5f55\u521b\u5efa\u865a\u62df\u73af\u5883 source venv/bin/activate # \u8fdb\u5165\u865a\u62df\u73af\u5883 deactivate # \u9000\u51fa\u865a\u62df\u73af\u5883","title":"02/ \u4f7f\u7528\u865a\u62df\u73af\u5883"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#03-docker","text":"Docker \u7ecf\u8fc7\u8fd9\u4e48\u591a\u5e74\u7684\u53d1\u5c55\uff0c\u5728\u5404\u4e2a\u573a\u666f\u4e0b\u7684\u5e94\u7528\u4e5f\u90fd\u88ab\u9a8c\u8bc1\u8fc7\u4e86\uff0c\u5e76\u4e14\u6709\u4e0d\u5c11\u7684\u6700\u4f73\u5b9e\u8df5\u3002Docker \u5b98\u65b9\u7684\u53e3\u53f7\u662f \u201cDevelop faster. Run anywhere\u201d\uff0c\u4f7f\u7528 Docker \u80fd\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5f00\u53d1\u90e8\u7f72\u5e94\u7528\u3002\u6211\u4eec\u53ef\u4ee5\u5c06\u9879\u76ee\u8fd0\u884c\u73af\u5883\u7684\u521d\u59cb\u5316\u3001\u9879\u76ee\u7684\u4f9d\u8d56\u3001\u9879\u76ee\u7684\u8fd0\u884c\u914d\u7f6e\u7f16\u5199\u6210 Dockerfile\uff0c\u518d\u6839\u636e Dockerfile \u7f16\u8bd1\u6210\u955c\u50cf\uff0c\u5c06\u955c\u50cf\u63a8\u9001\u5230\u955c\u50cf\u670d\u52a1\uff0c\u4ee5\u4fbf\u5728\u4efb\u4f55\u73af\u5883\u90fd\u80fd\u8f7b\u677e\u62c9\u53d6\u4f7f\u7528\uff0c\u8fd9\u6837\u4fbf\u53ef\u4ee5\u4fdd\u8bc1\u9879\u76ee\u7684\u5f00\u53d1\u548c\u7ebf\u4e0a\u73af\u5883\u4fdd\u6301\u4e00\u81f4\u3002","title":"03/ \u4f7f\u7528 Docker"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#04-requirementstxt","text":"\u751f\u6210\u5e76\u7ef4\u62a4\u597d\u9879\u76ee\u7684 requirements.txt \u6587\u4ef6\uff0c\u5df2\u7ecf\u662f Python \u7a0b\u5e8f\u5458\u7684\u57fa\u672c\u5171\u8bc6\u4e86\u3002requirements.txt \u6587\u4ef6\u5e94\u8be5\u53ea\u5305\u542b\u672c\u9879\u76ee\u6240\u9700\u8981\u7684\u4f9d\u8d56\u5305\uff0c\u5e76\u4e14\u6bcf\u4e2a\u4f9d\u8d56\u5305\u90fd\u6307\u5b9a\u5177\u4f53\u7684\u7248\u672c\u53f7\u3002\u6709\u4e9b\u7a0b\u5e8f\u5458\u76f4\u63a5\u4f7f\u7528 pip freeze \u5c06\u6574\u4e2a\u5f00\u53d1\u73af\u5883\u4e0b\u7684\u5b89\u88c5\u5305\u90fd\u5bfc\u5165\u5230 requirements.txt \u7684\u505a\u6cd5\u662f\u4e0d\u503c\u5f97\u6548\u4eff\u7684\uff0c\u8fd9\u6837\u505a\u4e0d\u4ec5\u5bfc\u81f4\u5728\u65b0\u7684\u73af\u5883\u521d\u59cb\u5316\u65f6\u5b89\u88c5\u4e00\u4e9b\u5197\u4f59\u7684\u4f9d\u8d56\uff0c\u4e5f\u4f1a\u7ed9\u9879\u76ee\u7ef4\u62a4\u8005\u5e26\u6765\u4e00\u4e9b\u56f0\u60d1\u3002","title":"04/ \u4f7f\u7528 requirements.txt"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#_2","text":"","title":"\u4e8c\u3001\u4ee3\u7801"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#01","text":"\u4e0d\u7ba1\u4ec0\u4e48\u8bed\u8a00\u7684\u9879\u76ee\uff0c\u597d\u7684\u9879\u76ee\u7ed3\u6784\u4e0d\u4ec5\u6709\u52a9\u4e8e\u5f00\u53d1\u5206\u5de5\uff0c\u51cf\u5c11\u6df7\u4e71\uff0c\u8fd8\u80fd\u8ba9\u65b0\u4eba\u5feb\u901f\u7684\u8bfb\u61c2\u4ee3\u7801\u3002\u6240\u4ee5\u4e0d\u7ba1\u4f60\u7ef4\u62a4\u7684\u9879\u76ee\u662f\u65b0\u9879\u76ee\u8fd8\u662f\u8001\u9879\u76ee\uff0c\u9047\u5230\u9879\u76ee\u7ed3\u6784\u6709\u4e0d\u5408\u7406\u7684\u5730\u65b9\uff0c\u80fd\u8c03\u6574\u4e00\u5b9a\u8981\u53ca\u65f6\u8c03\u6574\u8fc7\u6765\uff0c\u4e0d\u7136\u8d8a\u5230\u540e\u9762\u8d8a\u4e0d\u597d\u7ef4\u62a4\u3002","title":"01/ \u89c4\u5212\u597d\u9879\u76ee\u7ed3\u6784"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#02-import","text":"\u5f88\u591a Python \u7a0b\u5e8f\u5458\u90fd\u4f1a\u5ffd\u7565\u5bf9 import \u7684\u6392\u5e8f\uff0c\u89c9\u5f97\u6ca1\u5fc5\u8981\u3002\u5176\u5b9e\u5bf9 import \u6392\u5e8f\uff0c\u5bf9\u8bfb\u61c2\u4ee3\u7801\uff0c\u7ef4\u62a4\u597d\u9879\u76ee\u4e5f\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002\u5f88\u591a\u9879\u76ee\u90fd\u6309\u4e0b\u9762\u7684\u987a\u5e8f\u6765 import \u5305\uff1a # \u57fa\u7840\u5e93import osimport re # \u7b2c\u4e09\u65b9\u5e93import requests # \u672c\u9879\u76ee\u5e93import x.x.x \u5982\u679c\u4e0d\u60f3\u624b\u52a8\u6392\uff0c\u53ef\u4ee5\u4f7f\u7528 isort \u8fd9\u4e2a\u5de5\u5177\u6765\u81ea\u52a8\u7ed9 import \u6392\u5e8f\u3002","title":"02/ import \u6392\u5e8f"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#03","text":"Python \u4f5c\u4e3a\u52a8\u6001\u7c7b\u578b\u7684\u8bed\u8a00\uff0c\u7f16\u7801\u7684\u7075\u6d3b\u6027\u5f88\u5927\uff0c\u5f00\u53d1\u6548\u7387\u4e5f\u9ad8\u3002\u4f46\u662f\u9879\u76ee\u5230\u4e86\u4e00\u5b9a\u89c4\u6a21\u540e\uff0c\u52a8\u6001\u7c7b\u578b\u5e26\u6765\u7684\u7ef4\u62a4\u6210\u672c\u5c31\u53d8\u9ad8\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u7684 Python \u9879\u76ee\uff0c\u8d8a\u65e9\u52a0\u5165\u7c7b\u578b\u68c0\u67e5\uff0c\u5bf9\u540e\u671f\u9879\u76ee\u7684\u7ef4\u62a4\u8d8a\u6709\u5229\u3002\u5bf9\u4e8e\u7c7b\u578b\u68c0\u67e5\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 mypy\uff0c\u5b83\u529f\u80fd\u5f3a\u5927\u800c\u4f7f\u7528\u7b80\u5355\u3002 pip install mypymypy a.py","title":"03/ \u7c7b\u578b\u68c0\u67e5"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#04","text":"\u5173\u4e8e Python \u4ee3\u7801\u89c4\u8303\uff0c\u53ef\u4ee5\u770b\u53e6\u4e00\u7bc7\u300a Git Hook \u5b9e\u73b0 Python \u9879\u76ee\u4ee3\u7801\u89c4\u8303\u548c\u63d0\u4ea4\u89c4\u8303\u843d\u5730 \u300b\u7684\u4ecb\u7ecd\u3002","title":"04/ \u4ee3\u7801\u89c4\u8303"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#05","text":"\u4e00\u4e2a\u5408\u683c\u7684\u7a0b\u5e8f\u5458\u662f\u4f1a\u505a\u597d\u81ea\u6d4b\u7684\uff0c\u5bf9\u4e8e\u540e\u7aef\u7a0b\u5e8f\u5458\u6765\u8bf4\uff0c\u5c31\u662f\u8981\u505a\u597d\u5355\u5143\u6d4b\u8bd5\u3001\u6a21\u5757\u6d4b\u8bd5\u548c\u63a5\u53e3\u6d4b\u8bd5\u3002\u5728 Python \u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u5355\u5143\u6d4b\u8bd5\u53ef\u4ee5\u4f7f\u7528\u5b98\u65b9\u7684 unittest \u6846\u67b6\u3002\u6a21\u5757\u6d4b\u8bd5\u5219\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e09\u65b9\u6d4b\u8bd5\u6846\u67b6\uff0c\u4f8b\u5982 pytest\u3002\u63a5\u53e3\u6d4b\u8bd5\u7684\u5de5\u5177\u5c31\u6709\u5f88\u591a\u9009\u62e9\u4e86\uff0c\u4e00\u822c\u90fd\u517c\u5177\u81ea\u52a8\u5316\u548c\u538b\u6d4b\u529f\u80fd\uff0c\u6bd4\u5982 JMeter\u3002\u5982\u679c\u8fd8\u6d89\u53ca\u5230\u524d\u7aef\u529f\u80fd\u6d4b\u8bd5\uff0c\u5219\u53ef\u4ee5\u7ec4\u7ec7\u5f00\u53d1\u8fdb\u884c\u4ea4\u53c9\u6d4b\u8bd5\uff0cA \u540c\u5b66\u5f00\u53d1\u7684\u529f\u80fd\u7531 B \u540c\u5b66\u8fdb\u884c\u6d4b\u8bd5\u3002\u5f00\u53d1\u81ea\u6d4b\u8986\u76d6\u7684\u8303\u56f4\u8d8a\u5e7f\uff0c\u4ea4\u4ed8\u7684\u4ea7\u54c1\u7684\u8d28\u91cf\u5c31\u8d8a\u9ad8\uff0c\u4e5f\u5c31\u8d8a\u80fd\u4fdd\u8bc1\u9879\u76ee\u7684\u8fdb\u5ea6\u3002","title":"05/ \u6d4b\u8bd5"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#_3","text":"","title":"\u4e09\u3001\u5de5\u5177"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#01-idea","text":"\u80fd\u591f\u8fdb\u884c Python \u5f00\u53d1\u7684 idea \u6709\u4e0d\u5c11\uff0c\u6709\u4eba\u559c\u6b22\u7528 PyCharm\uff0c\u6709\u4eba\u559c\u6b22\u7528VS Code\uff0c\u4f46\u662f\u5efa\u8bae\u56e2\u961f\u7edf\u4e00\u4f7f\u7528 PyCharm \u3002\u56e2\u961f\u5185\u90e8\u53ef\u4ee5\u590d\u7528 idea \u7684\u8bbe\u7f6e\uff0c\u56e2\u961f\u6210\u5458\u5f00\u53d1\u65f6\u5fc5\u987b\u5b89\u88c5\u4e00\u4e9b\u5fc5\u5907\u63d2\u4ef6\uff0c\u6bd4\u5982 editorconfig\u3001mypy\u3001pylint\u7b49\u3002\u901a\u8fc7\u7edf\u4e00 idea\uff0c\u7edf\u4e00 idea \u7684\u8bbe\u7f6e\u6765\u51cf\u5c0f\u4ee3\u7801\u98ce\u683c\u7684\u5dee\u5f02\u3002","title":"01/ \u5f00\u53d1IDEA"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#02_1","text":"\u4f7f\u7528 git \u6765\u7ba1\u7406\u4ee3\u7801\uff0c\u5df2\u7ecf\u662f\u884c\u4e1a\u7684\u4e3b\u6d41\u4e86\u3002\u4f7f\u7528 git \u7684\u597d\u5904\u4e5f\u4e0d\u5fc5\u8fc7\u591a\u8bf4\u660e\u4e86\uff0c\u7279\u522b\u662f\u5229\u7528 git \u672c\u5730\u94a9\u5b50\uff0c\u53ef\u4ee5\u8ba9\u4ee3\u7801\u683c\u5f0f\u5316\u3001\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u3001\u5355\u5143\u6d4b\u8bd5\u90fd\u81ea\u52a8\u5316\uff0c\u901a\u8fc7\u4e86\u8fd9\u4e9b\u68c0\u67e5\u624d\u5141\u8bb8\u63d0\u4ea4\uff0c\u5c31\u80fd\u8fdb\u4e00\u6b65\u7684\u63d0\u9ad8\u9879\u76ee\u4ee3\u7801\u7684\u8d28\u91cf\u3002","title":"02/ \u4ee3\u7801\u7ba1\u7406"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#03-pre-commit","text":"\u4f7f\u7528 git \u672c\u5730\u94a9\u5b50\u505a\u7684\u4e8b\u60c5\u591a\u4e86\uff0c\u6211\u4eec\u5c31\u9700\u8981\u628a\u8fd9\u4e9b\u94a9\u5b50\u7ef4\u62a4\u8d77\u6765\uff0c\u65b9\u4fbf\u56e2\u961f\u91cc\u5176\u4ed6\u4eba\u4f7f\u7528\u3002pre-commit \u5c31\u662f\u4e00\u4e2a\u7ba1\u7406 git \u672c\u5730\u94a9\u5b50\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u914d\u7f6e\u9879\u76ee\u6240\u9700\u8981\u7684\u672c\u5730\u94a9\u5b50\u3002\u5728\u9879\u76ee\u91cc\u6dfb\u52a0\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u5c31\u80fd\u8ba9\u56e2\u961f\u6210\u5458\u5f88\u65b9\u4fbf\u7684\u5b89\u88c5\u597d\u7edf\u4e00\u7684\u672c\u5730\u94a9\u5b50\u3002\u4f8b\u5982\u4e0b\u9762\u8fd9\u4e2a .pre-commit-config.yaml \u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u4e86\u68c0\u67e5 git \u63d0\u4ea4\u4fe1\u606f\u683c\u5f0f\u3001isort import \u6392\u5e8f\u3001flak8\u4ee3\u7801\u683c\u5f0f\u5316\u4ee5\u53ca\u6267\u884cmypy\u6d4b\u8bd5\u672c\u5730\u94a9\u5b50\uff0c\u53ea\u6709\u8fd9\u4e9b\u94a9\u5b50\u90fd\u6267\u884c\u901a\u8fc7\u540e\uff0c\u624d\u80fd\u8fdb\u884c git \u63d0\u4ea4\u64cd\u4f5c\u3002 # See https://pre-commit.com for more information # See https://pre-commit.com/hooks.html for more hooks repos: - repo: git@github.com:One2r/commit-msg-hook.git rev: 'ca2480d83aa7d3ce4341a378d3aad56d111f16bd' hooks: - id: commit-msg - repo: https://github.com/PyCQA/isort rev: 5.10.1 hooks: - id: isort args: - --profile=black - repo: https://github.com/PyCQA/flake8 rev: 4.0.1 hooks: - id: flake8 args: - --exclude=.git,__pycache__,docs,utils - --ignore=E203,W503 - --max-complexity=25 - --max-line-length=128 - repo: https://github.com/pre-commit/mirrors-mypy rev: v0.961 hooks: - id: mypy args: - --ignore-missing-imports - --install-types # See mirrors-mypy README.md - --non-interactive \u901a\u8fc7\u4ee5\u4e0a\u8fd9\u4e9b\u4f18\u79c0\u7684\u5de5\u7a0b\u5b9e\u8df5\uff0c\u5c31\u80fd\u8ba9\u6211\u4eec\u4f18\u96c5\u7684\u7ef4\u62a4 Python \u9879\u76ee\u4e86\uff0c\u5c31\u80fd\u8ba9\u6211\u4eec\u8bf4\u201c\u4eba\u751f\u82e6\u77ed\uff0c\u6211\u7528 Python\u3002\u52a8\u6001\u4e00\u65f6\u723d\uff0c\u4e00\u76f4\u7528\u4e00\u76f4\u723d\u201d\u4e86\u3002","title":"03/ pre-commit"},{"location":"06-third-part-lib/30-%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E7%9A%84%E7%BB%B4%E6%8A%A4%20Python%20%E9%A1%B9%E7%9B%AE/#_4","text":"\u5173\u4e8e\u9879\u76ee\u7ed3\u6784\uff1a https://stackoverflow.com/questions/193161/what-is-the-best-project-structure-for-a-python-application isort\uff1a https://github.com/PyCQA/isort mypy\uff1amypy-lang.org/index.html pytest\uff1a https://docs.pytest.org/en/7.2.x/","title":"\u53c2\u8003"},{"location":"06-third-part-lib/31-Python%20%E7%9A%84%E4%B8%BB%E8%A6%81%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/","text":"Python \u662f\u4e00\u79cd\u9ad8\u7ea7\u7f16\u7a0b\u8bed\u8a00\uff0c\u5177\u6709\u7b80\u5355\u6613\u5b66\u3001\u53ef\u8bfb\u6027\u9ad8\u3001\u4ee3\u7801\u53ef\u91cd\u7528\u6027\u5f3a\u7b49\u7279\u70b9\uff0c\u5e76\u5728\u5404\u79cd\u9886\u57df\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\u3002 \u76ee\u524d\u4e2a\u4eba\u4f7f\u7528 Python \u7684\u4e3b\u8981\u5e94\u7528\u573a\u666f \u00b6 \u4e00\u3001Web \u5f00\u53d1 \u00b6 Python \u662f\u4e00\u79cd\u5f88\u9002\u5408 Web \u5f00\u53d1\u7684\u8bed\u8a00\uff0c\u8fd9\u5f97\u76ca\u4e8e Python \u63d0\u4f9b\u4e86\u8bb8\u591a\u4f18\u79c0\u7684 Web \u6846\u67b6\uff0c\u5982 Django\u3001Flask\u3001Tornado\u3001Pyramid \u7b49\u3002 \u8fd9\u4e9b\u6846\u67b6\u90fd\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u5de5\u5177\u548c\u5e93\uff0c\u53ef\u4ee5\u5feb\u901f\u3001\u9ad8\u6548\u5730\u5f00\u53d1\u5404\u79cd\u89c4\u6a21\u7684 Web \u5e94\u7528\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u7ef4\u62a4\u3002\u5176\u4e2d Django \u662f\u6700\u4e3a\u6d41\u884c\u7684\u6846\u67b6\u4e4b\u4e00\uff0c\u5b83\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684 MVC \u67b6\u6784\uff0c\u652f\u6301\u81ea\u52a8\u5316\u7684 URL \u8def\u7531\u3001\u6570\u636e\u5e93\u8bbf\u95ee\u3001\u8868\u5355\u5904\u7406\u7b49\u529f\u80fd\u3002 \u4e8c\u3001\u79d1\u5b66\u8ba1\u7b97 \u00b6 Python \u5728\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u4e5f\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u4e3b\u8981\u5f97\u76ca\u4e8e\u5b83\u7684\u79d1\u5b66\u8ba1\u7b97\u5e93\u548c\u53ef\u89c6\u5316\u5e93\uff0c\u5982 NumPy\u3001SciPy\u3001Pandas\u3001Matplotlib\u3001Seaborn \u7b49\u3002NumPy \u63d0\u4f9b\u4e86\u591a\u7ef4\u6570\u7ec4\u3001\u77e9\u9635\u8ba1\u7b97\u7b49\u9ad8\u6548\u7684\u79d1\u5b66\u8ba1\u7b97\u529f\u80fd\uff0cSciPy \u5219\u63d0\u4f9b\u4e86\u4f18\u5316\u3001\u7ebf\u6027\u4ee3\u6570\u3001\u5fae\u79ef\u5206\u7b49\u9ad8\u7ea7\u6570\u5b66\u51fd\u6570\u3002 Pandas \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u6570\u636e\u5206\u6790\u5e93\uff0c\u53ef\u4ee5\u8fdb\u884c\u6570\u636e\u7684\u6e05\u6d17\u3001\u5904\u7406\u3001\u5206\u6790\u548c\u53ef\u89c6\u5316\u3002\u800c Matplotlib \u548c Seaborn \u5219\u662f Python \u4e2d\u6700\u6d41\u884c\u7684\u6570\u636e\u53ef\u89c6\u5316\u5e93\uff0c\u63d0\u4f9b\u4e86\u591a\u79cd\u56fe\u8868\u7c7b\u578b\u548c\u7ed8\u56fe\u5de5\u5177\uff0c\u53ef\u4ee5\u5feb\u901f\u5730\u5448\u73b0\u6570\u636e\u7684\u5206\u5e03\u3001\u5173\u7cfb\u548c\u8d8b\u52bf\u3002 \u4e09\u3001\u4eba\u5de5\u667a\u80fd \u00b6 Python \u5728\u4eba\u5de5\u667a\u80fd\u9886\u57df\u4e5f\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u4e3b\u8981\u5f97\u76ca\u4e8e\u5b83\u7684\u673a\u5668\u5b66\u4e60\u548c\u6df1\u5ea6\u5b66\u4e60\u5e93\uff0c\u5982 TensorFlow\u3001Keras\u3001PyTorch\u3001Scikit-learn\u3001NLTK \u7b49\u3002 \u8fd9\u4e9b\u5e93\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5730\u642d\u5efa\u548c\u8bad\u7ec3\u5404\u79cd\u6a21\u578b\uff0c\u5982\u795e\u7ecf\u7f51\u7edc\u3001\u51b3\u7b56\u6811\u3001\u652f\u6301\u5411\u91cf\u673a\u7b49\uff0c\u5e76\u652f\u6301\u56fe\u50cf\u8bc6\u522b\u3001 \u81ea\u7136\u8bed\u8a00\u5904\u7406 \u3001\u58f0\u97f3\u8bc6\u522b\u7b49\u5404\u79cd\u4efb\u52a1\u3002 \u5176\u4e2d TensorFlow \u548c PyTorch \u662f\u6700\u4e3a\u6d41\u884c\u7684\u6df1\u5ea6\u5b66\u4e60\u5e93\u4e4b\u4e00\uff0c\u63d0\u4f9b\u4e86\u9ad8\u6548\u7684\u5f20\u91cf\u8fd0\u7b97\u548c\u81ea\u52a8\u5fae\u5206\uff0c\u53ef\u4ee5\u5728\u5404\u79cd\u786c\u4ef6\u5e73\u53f0\u4e0a\u5feb\u901f\u5730\u8bad\u7ec3\u548c\u4f18\u5316\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u3002 \u56db\u3001\u6570\u636e\u5206\u6790 \u00b6 Python \u5728\u6570\u636e\u5206\u6790\u9886\u57df\u4e5f\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u4e3b\u8981\u5f97\u76ca\u4e8e\u5b83\u7684\u6570\u636e\u5904\u7406\u548c\u53ef\u89c6\u5316\u5e93\uff0c\u5982 Pandas\u3001NumPy\u3001Matplotlib\u3001Seaborn \u7b49\u3002 \u8fd9\u4e9b\u5e93\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5730\u6e05\u6d17\u548c\u5904\u7406\u6570\u636e\uff0c\u5e76\u53ef\u89c6\u5316\u5448\u73b0\u6570\u636e\u7684\u5206\u5e03\u3001\u5173\u7cfb\u548c\u8d8b\u52bf\u3002Python \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u4e13\u95e8\u7684\u6570\u636e\u5206\u6790\u5e93\uff0c\u5982 Statsmodels\u3001Bokeh\u3001Plotly \u7b49\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u8fdb\u884c\u6570\u636e\u63a2\u7d22\u3001\u7edf\u8ba1\u5206\u6790\u548c\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u3002 \u4e94\u3001\u81ea\u52a8\u5316\u6d4b\u8bd5 \u00b6 Python \u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u9886\u57df\u4e5f\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u4e3b\u8981\u5f97\u76ca\u4e8e\u5b83\u7684\u6d4b\u8bd5\u6846\u67b6\u548c\u5e93\uff0c\u5982 unittest\u3001pytest\u3001Robot Framework\u3001Selenium \u7b49\u3002 \u8fd9\u4e9b\u5e93\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u7f16\u5199\u548c\u6267\u884c\u5404\u79cd\u7c7b\u578b\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u5982\u5355\u5143\u6d4b\u8bd5\u3001\u529f\u80fd\u6d4b\u8bd5\u3001\u7aef\u5230\u7aef\u6d4b\u8bd5\u7b49\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u65ad\u8a00\u548c\u62a5\u544a\u529f\u80fd\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u8fdb\u884c\u95ee\u9898\u6392\u67e5\u548c\u5206\u6790\u3002 \u5176\u4e2d Selenium \u662f\u6700\u4e3a\u6d41\u884c\u7684 Web \u81ea\u52a8\u5316\u6d4b\u8bd5\u5e93\u4e4b\u4e00\uff0c\u652f\u6301\u591a\u79cd\u6d4f\u89c8\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5730\u7f16\u5199\u548c\u6267\u884c Web \u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u3002 \u4e03\u3001\u7f51\u7edc\u722c\u866b \u00b6 Python \u5728\u7f51\u7edc\u722c\u866b\u9886\u57df\u4e5f\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u4e3b\u8981\u5f97\u76ca\u4e8e\u5b83\u7684\u722c\u866b\u5e93\u548c\u5de5\u5177\uff0c\u5982 Requests\u3001Scrapy\u3001Beautiful Soup\u3001Selenium \u7b49\u3002 \u8fd9\u4e9b\u5e93\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5730\u722c\u53d6\u7f51\u9875\u3001\u89e3\u6790\u6570\u636e\u3001\u6a21\u62df\u767b\u5f55\u7b49\u64cd\u4f5c\uff0c\u5e76\u652f\u6301\u591a\u79cd\u6570\u636e\u683c\u5f0f\u7684\u5b58\u50a8\u548c\u8f93\u51fa\u3002 \u5176\u4e2d Scrapy \u662f\u6700\u4e3a\u6d41\u884c\u7684 Python \u722c\u866b\u6846\u67b6\u4e4b\u4e00\uff0c\u5b83\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u722c\u866b\u5de5\u5177\u548c\u4e2d\u95f4\u4ef6\uff0c\u53ef\u4ee5\u5feb\u901f\u5730\u722c\u53d6\u7f51\u7ad9\u6570\u636e\u5e76\u5b58\u50a8\u5230\u6570\u636e\u5e93\u6216\u6587\u4ef6\u4e2d\u3002","title":"31-Python \u7684\u4e3b\u8981\u5e94\u7528\u573a\u666f"},{"location":"06-third-part-lib/31-Python%20%E7%9A%84%E4%B8%BB%E8%A6%81%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/#python","text":"","title":"\u76ee\u524d\u4e2a\u4eba\u4f7f\u7528 Python \u7684\u4e3b\u8981\u5e94\u7528\u573a\u666f"},{"location":"06-third-part-lib/31-Python%20%E7%9A%84%E4%B8%BB%E8%A6%81%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/#web","text":"Python \u662f\u4e00\u79cd\u5f88\u9002\u5408 Web \u5f00\u53d1\u7684\u8bed\u8a00\uff0c\u8fd9\u5f97\u76ca\u4e8e Python \u63d0\u4f9b\u4e86\u8bb8\u591a\u4f18\u79c0\u7684 Web \u6846\u67b6\uff0c\u5982 Django\u3001Flask\u3001Tornado\u3001Pyramid \u7b49\u3002 \u8fd9\u4e9b\u6846\u67b6\u90fd\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u5de5\u5177\u548c\u5e93\uff0c\u53ef\u4ee5\u5feb\u901f\u3001\u9ad8\u6548\u5730\u5f00\u53d1\u5404\u79cd\u89c4\u6a21\u7684 Web \u5e94\u7528\uff0c\u800c\u4e14\u5f88\u5bb9\u6613\u7ef4\u62a4\u3002\u5176\u4e2d Django \u662f\u6700\u4e3a\u6d41\u884c\u7684\u6846\u67b6\u4e4b\u4e00\uff0c\u5b83\u63d0\u4f9b\u4e86\u5b8c\u6574\u7684 MVC \u67b6\u6784\uff0c\u652f\u6301\u81ea\u52a8\u5316\u7684 URL \u8def\u7531\u3001\u6570\u636e\u5e93\u8bbf\u95ee\u3001\u8868\u5355\u5904\u7406\u7b49\u529f\u80fd\u3002","title":"\u4e00\u3001Web \u5f00\u53d1"},{"location":"06-third-part-lib/31-Python%20%E7%9A%84%E4%B8%BB%E8%A6%81%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/#_1","text":"Python \u5728\u79d1\u5b66\u8ba1\u7b97\u9886\u57df\u4e5f\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u4e3b\u8981\u5f97\u76ca\u4e8e\u5b83\u7684\u79d1\u5b66\u8ba1\u7b97\u5e93\u548c\u53ef\u89c6\u5316\u5e93\uff0c\u5982 NumPy\u3001SciPy\u3001Pandas\u3001Matplotlib\u3001Seaborn \u7b49\u3002NumPy \u63d0\u4f9b\u4e86\u591a\u7ef4\u6570\u7ec4\u3001\u77e9\u9635\u8ba1\u7b97\u7b49\u9ad8\u6548\u7684\u79d1\u5b66\u8ba1\u7b97\u529f\u80fd\uff0cSciPy \u5219\u63d0\u4f9b\u4e86\u4f18\u5316\u3001\u7ebf\u6027\u4ee3\u6570\u3001\u5fae\u79ef\u5206\u7b49\u9ad8\u7ea7\u6570\u5b66\u51fd\u6570\u3002 Pandas \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u6570\u636e\u5206\u6790\u5e93\uff0c\u53ef\u4ee5\u8fdb\u884c\u6570\u636e\u7684\u6e05\u6d17\u3001\u5904\u7406\u3001\u5206\u6790\u548c\u53ef\u89c6\u5316\u3002\u800c Matplotlib \u548c Seaborn \u5219\u662f Python \u4e2d\u6700\u6d41\u884c\u7684\u6570\u636e\u53ef\u89c6\u5316\u5e93\uff0c\u63d0\u4f9b\u4e86\u591a\u79cd\u56fe\u8868\u7c7b\u578b\u548c\u7ed8\u56fe\u5de5\u5177\uff0c\u53ef\u4ee5\u5feb\u901f\u5730\u5448\u73b0\u6570\u636e\u7684\u5206\u5e03\u3001\u5173\u7cfb\u548c\u8d8b\u52bf\u3002","title":"\u4e8c\u3001\u79d1\u5b66\u8ba1\u7b97"},{"location":"06-third-part-lib/31-Python%20%E7%9A%84%E4%B8%BB%E8%A6%81%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/#_2","text":"Python \u5728\u4eba\u5de5\u667a\u80fd\u9886\u57df\u4e5f\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u4e3b\u8981\u5f97\u76ca\u4e8e\u5b83\u7684\u673a\u5668\u5b66\u4e60\u548c\u6df1\u5ea6\u5b66\u4e60\u5e93\uff0c\u5982 TensorFlow\u3001Keras\u3001PyTorch\u3001Scikit-learn\u3001NLTK \u7b49\u3002 \u8fd9\u4e9b\u5e93\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5730\u642d\u5efa\u548c\u8bad\u7ec3\u5404\u79cd\u6a21\u578b\uff0c\u5982\u795e\u7ecf\u7f51\u7edc\u3001\u51b3\u7b56\u6811\u3001\u652f\u6301\u5411\u91cf\u673a\u7b49\uff0c\u5e76\u652f\u6301\u56fe\u50cf\u8bc6\u522b\u3001 \u81ea\u7136\u8bed\u8a00\u5904\u7406 \u3001\u58f0\u97f3\u8bc6\u522b\u7b49\u5404\u79cd\u4efb\u52a1\u3002 \u5176\u4e2d TensorFlow \u548c PyTorch \u662f\u6700\u4e3a\u6d41\u884c\u7684\u6df1\u5ea6\u5b66\u4e60\u5e93\u4e4b\u4e00\uff0c\u63d0\u4f9b\u4e86\u9ad8\u6548\u7684\u5f20\u91cf\u8fd0\u7b97\u548c\u81ea\u52a8\u5fae\u5206\uff0c\u53ef\u4ee5\u5728\u5404\u79cd\u786c\u4ef6\u5e73\u53f0\u4e0a\u5feb\u901f\u5730\u8bad\u7ec3\u548c\u4f18\u5316\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u3002","title":"\u4e09\u3001\u4eba\u5de5\u667a\u80fd"},{"location":"06-third-part-lib/31-Python%20%E7%9A%84%E4%B8%BB%E8%A6%81%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/#_3","text":"Python \u5728\u6570\u636e\u5206\u6790\u9886\u57df\u4e5f\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u4e3b\u8981\u5f97\u76ca\u4e8e\u5b83\u7684\u6570\u636e\u5904\u7406\u548c\u53ef\u89c6\u5316\u5e93\uff0c\u5982 Pandas\u3001NumPy\u3001Matplotlib\u3001Seaborn \u7b49\u3002 \u8fd9\u4e9b\u5e93\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5730\u6e05\u6d17\u548c\u5904\u7406\u6570\u636e\uff0c\u5e76\u53ef\u89c6\u5316\u5448\u73b0\u6570\u636e\u7684\u5206\u5e03\u3001\u5173\u7cfb\u548c\u8d8b\u52bf\u3002Python \u8fd8\u63d0\u4f9b\u4e86\u4e00\u4e9b\u4e13\u95e8\u7684\u6570\u636e\u5206\u6790\u5e93\uff0c\u5982 Statsmodels\u3001Bokeh\u3001Plotly \u7b49\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u8fdb\u884c\u6570\u636e\u63a2\u7d22\u3001\u7edf\u8ba1\u5206\u6790\u548c\u4ea4\u4e92\u5f0f\u53ef\u89c6\u5316\u3002","title":"\u56db\u3001\u6570\u636e\u5206\u6790"},{"location":"06-third-part-lib/31-Python%20%E7%9A%84%E4%B8%BB%E8%A6%81%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/#_4","text":"Python \u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u9886\u57df\u4e5f\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u4e3b\u8981\u5f97\u76ca\u4e8e\u5b83\u7684\u6d4b\u8bd5\u6846\u67b6\u548c\u5e93\uff0c\u5982 unittest\u3001pytest\u3001Robot Framework\u3001Selenium \u7b49\u3002 \u8fd9\u4e9b\u5e93\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u7f16\u5199\u548c\u6267\u884c\u5404\u79cd\u7c7b\u578b\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u5982\u5355\u5143\u6d4b\u8bd5\u3001\u529f\u80fd\u6d4b\u8bd5\u3001\u7aef\u5230\u7aef\u6d4b\u8bd5\u7b49\uff0c\u5e76\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u65ad\u8a00\u548c\u62a5\u544a\u529f\u80fd\uff0c\u65b9\u4fbf\u5f00\u53d1\u8005\u8fdb\u884c\u95ee\u9898\u6392\u67e5\u548c\u5206\u6790\u3002 \u5176\u4e2d Selenium \u662f\u6700\u4e3a\u6d41\u884c\u7684 Web \u81ea\u52a8\u5316\u6d4b\u8bd5\u5e93\u4e4b\u4e00\uff0c\u652f\u6301\u591a\u79cd\u6d4f\u89c8\u5668\u548c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5730\u7f16\u5199\u548c\u6267\u884c Web \u81ea\u52a8\u5316\u6d4b\u8bd5\u7528\u4f8b\u3002","title":"\u4e94\u3001\u81ea\u52a8\u5316\u6d4b\u8bd5"},{"location":"06-third-part-lib/31-Python%20%E7%9A%84%E4%B8%BB%E8%A6%81%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/#_5","text":"Python \u5728\u7f51\u7edc\u722c\u866b\u9886\u57df\u4e5f\u5f97\u5230\u5e7f\u6cdb\u5e94\u7528\uff0c\u4e3b\u8981\u5f97\u76ca\u4e8e\u5b83\u7684\u722c\u866b\u5e93\u548c\u5de5\u5177\uff0c\u5982 Requests\u3001Scrapy\u3001Beautiful Soup\u3001Selenium \u7b49\u3002 \u8fd9\u4e9b\u5e93\u53ef\u4ee5\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u5730\u722c\u53d6\u7f51\u9875\u3001\u89e3\u6790\u6570\u636e\u3001\u6a21\u62df\u767b\u5f55\u7b49\u64cd\u4f5c\uff0c\u5e76\u652f\u6301\u591a\u79cd\u6570\u636e\u683c\u5f0f\u7684\u5b58\u50a8\u548c\u8f93\u51fa\u3002 \u5176\u4e2d Scrapy \u662f\u6700\u4e3a\u6d41\u884c\u7684 Python \u722c\u866b\u6846\u67b6\u4e4b\u4e00\uff0c\u5b83\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u722c\u866b\u5de5\u5177\u548c\u4e2d\u95f4\u4ef6\uff0c\u53ef\u4ee5\u5feb\u901f\u5730\u722c\u53d6\u7f51\u7ad9\u6570\u636e\u5e76\u5b58\u50a8\u5230\u6570\u636e\u5e93\u6216\u6587\u4ef6\u4e2d\u3002","title":"\u4e03\u3001\u7f51\u7edc\u722c\u866b"},{"location":"06-third-part-lib/32-python-socket/","text":"Python \u7684\u7528\u6cd5 \u00b6 socket \u6a21\u5757 \u00b6 \u4e00\u4e2a\u7b80\u5355\u7684 web \u670d\u52a1\u5668\u3002 import socket server_sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) server_sock . bind (( '' , 5000 )) server_sock . listen ( 10 ) while True : cli_sock , addr = server_sock . accept () print 'We have opened a cli_sockection with' , addr print cli_sock . recv ( 100 ) output = \"<h1>Hello Client</h1>\" cli_sock . send ( \"HTTP/1.1 200 OK \\n \" ) cli_sock . send ( \"Content length: \" + str ( len ( output ))) cli_sock . send ( \"Content-Type: text/html \\n\\n \" ) cli_sock . send ( output ) cli_sock . close () \u591a\u8fdb\u7a0b\u7248\u4e0d\u4f1a\u5835\u585e\u7684 web server\u3002 import os import socket import time SERVER_ADDRESS = ( HOST , PORT ) = '' , 8888 REQUEST_QUEUE_SIZE = 5 def handle_request ( client_connection ): request = client_connection . recv ( 1024 ) print ( 'Child PID: {pid} . Parent PID {ppid} ' . format ( pid = os . getpid (), ppid = os . getppid (), ) ) print ( request . decode ()) http_response = b \"\"\" \\ HTTP/1.1 200 OK Hello, World! \"\"\" client_connection . sendall ( http_response ) time . sleep ( 60 ) def serve_forever (): listen_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) listen_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) listen_socket . bind ( SERVER_ADDRESS ) listen_socket . listen ( REQUEST_QUEUE_SIZE ) print ( 'Serving HTTP on port {port} ...' . format ( port = PORT )) print ( 'Parent PID (PPID): {pid} \\n ' . format ( pid = os . getpid ())) while True : client_connection , client_address = listen_socket . accept () pid = os . fork () if pid == 0 : # child listen_socket . close () # close child copy handle_request ( client_connection ) client_connection . close () os . _exit ( 0 ) # child exits here else : # parent client_connection . close () # close parent copy and loop over if __name__ == '__main__' : serve_forever ()","title":"32-python-socket"},{"location":"06-third-part-lib/32-python-socket/#python","text":"","title":"Python \u7684\u7528\u6cd5"},{"location":"06-third-part-lib/32-python-socket/#socket","text":"\u4e00\u4e2a\u7b80\u5355\u7684 web \u670d\u52a1\u5668\u3002 import socket server_sock = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) server_sock . bind (( '' , 5000 )) server_sock . listen ( 10 ) while True : cli_sock , addr = server_sock . accept () print 'We have opened a cli_sockection with' , addr print cli_sock . recv ( 100 ) output = \"<h1>Hello Client</h1>\" cli_sock . send ( \"HTTP/1.1 200 OK \\n \" ) cli_sock . send ( \"Content length: \" + str ( len ( output ))) cli_sock . send ( \"Content-Type: text/html \\n\\n \" ) cli_sock . send ( output ) cli_sock . close () \u591a\u8fdb\u7a0b\u7248\u4e0d\u4f1a\u5835\u585e\u7684 web server\u3002 import os import socket import time SERVER_ADDRESS = ( HOST , PORT ) = '' , 8888 REQUEST_QUEUE_SIZE = 5 def handle_request ( client_connection ): request = client_connection . recv ( 1024 ) print ( 'Child PID: {pid} . Parent PID {ppid} ' . format ( pid = os . getpid (), ppid = os . getppid (), ) ) print ( request . decode ()) http_response = b \"\"\" \\ HTTP/1.1 200 OK Hello, World! \"\"\" client_connection . sendall ( http_response ) time . sleep ( 60 ) def serve_forever (): listen_socket = socket . socket ( socket . AF_INET , socket . SOCK_STREAM ) listen_socket . setsockopt ( socket . SOL_SOCKET , socket . SO_REUSEADDR , 1 ) listen_socket . bind ( SERVER_ADDRESS ) listen_socket . listen ( REQUEST_QUEUE_SIZE ) print ( 'Serving HTTP on port {port} ...' . format ( port = PORT )) print ( 'Parent PID (PPID): {pid} \\n ' . format ( pid = os . getpid ())) while True : client_connection , client_address = listen_socket . accept () pid = os . fork () if pid == 0 : # child listen_socket . close () # close child copy handle_request ( client_connection ) client_connection . close () os . _exit ( 0 ) # child exits here else : # parent client_connection . close () # close parent copy and loop over if __name__ == '__main__' : serve_forever ()","title":"socket \u6a21\u5757"},{"location":"06-third-part-lib/33-Python%E7%9B%AE%E5%89%8D%E5%BB%BA%E8%AE%AE%E6%9C%80%E5%A5%BD%E5%AE%89%E8%A3%85%E4%BB%80%E4%B9%88%E7%89%88%E6%9C%AC/","text":"Python\u76ee\u524d\u5efa\u8bae\u6700\u597d\u5b89\u88c5\u4ec0\u4e48\u7248\u672c \u00b6 \u5de5\u6b32\u5584\u5176\u4e8b\uff0c\u5fc5\u5148\u5229\u5176\u5668\u3002\u6211\u4eec\u8981\u505a\u597d\u4e00\u4ef6\u4e8b\uff0c\u51c6\u5907\u5de5\u4f5c\u975e\u5e38\u91cd\u8981\u3002\u5728\u5f00\u59cb\u5b66\u4e60\u4f7f\u7528Python\u4e4b\u524d\uff0c\u5148\u8981\u642d\u5efa\u597dPython\u7684\u5f00\u53d1\u73af\u5883\u3002\u8fd9\u65f6\u6211\u4eec\u4f1a\u9762\u4e34\u7740\u4e00\u4e9b\u9009\u62e9\uff0cPython\u6709\u5f88\u591a\u7248\u672c\uff0c\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u54ea\u4e2a\u7248\u672c\uff1f\u662f\u4e0d\u662f\u6700\u65b0\u7684\u7248\u672c\u5c31\u662f\u6700\u597d\u7684\u5462\uff1fPython\u5f00\u53d1\u5de5\u5177\u4e5f\u6709\u5f88\u591a\uff0c\u6211\u4eec\u8981\u7528\u54ea\u4e2a\u5f00\u53d1\u5de5\u5177\u6bd4\u8f83\u8d81\u624b\u5462\uff1f\u73b0\u5728\u6211\u4eec\u5c31\u8fd9\u4e9b\u95ee\u9898\u5c55\u5f00\u8ba8\u8bba\u3002 \u65b0\u9879\u76ee\u4e2dPython\u7248\u672c\u7684\u9009\u62e9 \u00b6 Python\u7684\u5b89\u88c5\u5305\u53ef\u4ee5\u5728\u5b98\u7f51\u4e0b\u8f7d\uff0c\u5b98\u7f51\u4e0b\u8f7d\u5730\u5740\u662f\uff1a https://www.python.org/downloads/ \u9996\u5148\u662fPython2.x\u548cPython3.x\u7684\u9009\u62e9\uff0c\u8fd9\u662f\u4e24\u4e2a\u5927\u7248\u672c\u3002\u76ee\u524dPython2.x\u7684\u7248\u672c\u66f4\u65b0\u548c\u6280\u672f\u652f\u6301\u5df2\u7ecf\u88ab\u5b98\u65b9\u505c\u6b62\u4e86\u3002Python2.x\u7684\u6700\u540e\u4e00\u4e2a\u7248\u672c\u662f2020\u5e74\u53d1\u5e03\u7684Python2.7.18\u3002\u800cPython3.x\u5e76\u4e0d\u662fPython2.x\u7684\u7b80\u5355\u5347\u7ea7\uff0c\u4e3a\u4e86\u4e0d\u5e26\u5165\u8fc7\u591a\u7684\u7d2f\u8d58\uff0cPython 3.x \u5728\u8bbe\u8ba1\u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651\u5411\u4e0b\u517c\u5bb9\u3002\u6240\u4ee5Python2.x\u548cPython3.x\u5728\u8bed\u6cd5\u4e0a\u6709\u7740\u5f88\u5927\u7684\u5dee\u5f02\uff0c\u4e8c\u8005\u5e76\u4e0d\u517c\u5bb9\u3002 \u7531\u4e8ePython2.x\u7684\u5e94\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u76ee\u524d\u4ecd\u6709\u76f8\u5f53\u4e00\u90e8\u5206\u516c\u53f8\u5728\u4f7f\u7528\u5b83\u3002\u4ecePython2.x\u5347\u7ea7\u5230Python3.x\u662f\u6709\u4e00\u5b9a\u98ce\u9669\u7684\uff0c\u800c\u5347\u7ea7\u6210\u672c\u4e5f\u6bd4\u8f83\u5927\u3002\u5bf9\u4e00\u4e2a\u6b63\u5728\u8fd0\u8425\u7684\u516c\u53f8\u6765\u8bf4\uff0c\u7a33\u5b9a\u624d\u662f\u6700\u91cd\u8981\u7684\uff0c\u65b0\u5f00\u53d1\u7684\u8f6f\u4ef6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528Python3.x\uff0c\u800c\u4e00\u4e9b\u57fa\u4e8ePython2.x\u7684\u8001\u4ee3\u7801\u4ecd\u9700\u8981\u7ef4\u62a4\u6216\u5347\u7ea7\u3002\u603b\u7684\u6765\u8bf4\uff0c\u4ecePython2.x\u5b8c\u5168\u8fc1\u79fb\u5230Python3.x\u8fd8\u9700\u8981\u4e00\u4e2a\u8fc7\u6e21\u671f\uff0c\u800c\u5728\u6b64\u671f\u95f4\u5b83\u4eec\u5c06\u4f1a\u5e76\u5b58\u3002 \u4e86\u89e3\u4e0a\u8ff0\u60c5\u51b5\u540e\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u4f60\u81ea\u5df1\u7684\u9700\u8981\u8fdb\u884c\u9009\u62e9\u3002\u9664\u975e\u5728\u5de5\u4f5c\u4e0a\u9700\u8981\u7ef4\u62a4\u516c\u53f8\u7684\u8001\u4ee3\u7801\uff0c\u5426\u5219\u8fd8\u662f\u5efa\u8bae\u76f4\u63a5\u5b66\u4e60Python3.x\uff0c\u6211\u4eec\u540e\u7eed\u7684\u5b66\u4e60\u4e5f\u5c06\u9488\u5bf9Python3.x\u5c55\u5f00\u3002 \u4e2a\u4eba\u7ec3\u624b\u9879\u76ee \u00b6 \u81ea\u5df1\u5f00\u53d1\u5efa\u8bae\u7528\u865a\u62df\u73af\u5883\uff0c\u987a\u4fbf\u5207\u6362\u73af\u5883 \u4f7f\u7528conda\u7ba1\u7406python\u7248\u672c\u73af\u5883\uff0c\u53ef\u4ee5\u4f7f\u7528anaconda\u6216\u8005miniconda\u5de5\u5177\u3002 \u5b89\u88c5\u597d\u4e86\u5de5\u5177\u4e4b\u540e\u67e5\u770b\uff1a conda -V \u521b\u5efa\u865a\u62df\u73af\u5883\uff1a conda create -n deeplearning python = 3 .6 \u521b\u5efa\u4e00\u4e2a\u540d\u79f0\u4e3adeeplearning\u7684\u865a\u62df\u73af\u5883\uff0c\u73af\u5883\u4e2dpython\u7248\u672c=3.6 \u5207\u6362\u865a\u62df\u73af\u5883\uff1a source activate deeplearning / conda activate deeplearning","title":"33-Python\u76ee\u524d\u5efa\u8bae\u6700\u597d\u5b89\u88c5\u4ec0\u4e48\u7248\u672c"},{"location":"06-third-part-lib/33-Python%E7%9B%AE%E5%89%8D%E5%BB%BA%E8%AE%AE%E6%9C%80%E5%A5%BD%E5%AE%89%E8%A3%85%E4%BB%80%E4%B9%88%E7%89%88%E6%9C%AC/#python","text":"\u5de5\u6b32\u5584\u5176\u4e8b\uff0c\u5fc5\u5148\u5229\u5176\u5668\u3002\u6211\u4eec\u8981\u505a\u597d\u4e00\u4ef6\u4e8b\uff0c\u51c6\u5907\u5de5\u4f5c\u975e\u5e38\u91cd\u8981\u3002\u5728\u5f00\u59cb\u5b66\u4e60\u4f7f\u7528Python\u4e4b\u524d\uff0c\u5148\u8981\u642d\u5efa\u597dPython\u7684\u5f00\u53d1\u73af\u5883\u3002\u8fd9\u65f6\u6211\u4eec\u4f1a\u9762\u4e34\u7740\u4e00\u4e9b\u9009\u62e9\uff0cPython\u6709\u5f88\u591a\u7248\u672c\uff0c\u6211\u4eec\u5e94\u8be5\u9009\u62e9\u54ea\u4e2a\u7248\u672c\uff1f\u662f\u4e0d\u662f\u6700\u65b0\u7684\u7248\u672c\u5c31\u662f\u6700\u597d\u7684\u5462\uff1fPython\u5f00\u53d1\u5de5\u5177\u4e5f\u6709\u5f88\u591a\uff0c\u6211\u4eec\u8981\u7528\u54ea\u4e2a\u5f00\u53d1\u5de5\u5177\u6bd4\u8f83\u8d81\u624b\u5462\uff1f\u73b0\u5728\u6211\u4eec\u5c31\u8fd9\u4e9b\u95ee\u9898\u5c55\u5f00\u8ba8\u8bba\u3002","title":"Python\u76ee\u524d\u5efa\u8bae\u6700\u597d\u5b89\u88c5\u4ec0\u4e48\u7248\u672c"},{"location":"06-third-part-lib/33-Python%E7%9B%AE%E5%89%8D%E5%BB%BA%E8%AE%AE%E6%9C%80%E5%A5%BD%E5%AE%89%E8%A3%85%E4%BB%80%E4%B9%88%E7%89%88%E6%9C%AC/#python_1","text":"Python\u7684\u5b89\u88c5\u5305\u53ef\u4ee5\u5728\u5b98\u7f51\u4e0b\u8f7d\uff0c\u5b98\u7f51\u4e0b\u8f7d\u5730\u5740\u662f\uff1a https://www.python.org/downloads/ \u9996\u5148\u662fPython2.x\u548cPython3.x\u7684\u9009\u62e9\uff0c\u8fd9\u662f\u4e24\u4e2a\u5927\u7248\u672c\u3002\u76ee\u524dPython2.x\u7684\u7248\u672c\u66f4\u65b0\u548c\u6280\u672f\u652f\u6301\u5df2\u7ecf\u88ab\u5b98\u65b9\u505c\u6b62\u4e86\u3002Python2.x\u7684\u6700\u540e\u4e00\u4e2a\u7248\u672c\u662f2020\u5e74\u53d1\u5e03\u7684Python2.7.18\u3002\u800cPython3.x\u5e76\u4e0d\u662fPython2.x\u7684\u7b80\u5355\u5347\u7ea7\uff0c\u4e3a\u4e86\u4e0d\u5e26\u5165\u8fc7\u591a\u7684\u7d2f\u8d58\uff0cPython 3.x \u5728\u8bbe\u8ba1\u7684\u65f6\u5019\u6ca1\u6709\u8003\u8651\u5411\u4e0b\u517c\u5bb9\u3002\u6240\u4ee5Python2.x\u548cPython3.x\u5728\u8bed\u6cd5\u4e0a\u6709\u7740\u5f88\u5927\u7684\u5dee\u5f02\uff0c\u4e8c\u8005\u5e76\u4e0d\u517c\u5bb9\u3002 \u7531\u4e8ePython2.x\u7684\u5e94\u7528\u975e\u5e38\u5e7f\u6cdb\uff0c\u76ee\u524d\u4ecd\u6709\u76f8\u5f53\u4e00\u90e8\u5206\u516c\u53f8\u5728\u4f7f\u7528\u5b83\u3002\u4ecePython2.x\u5347\u7ea7\u5230Python3.x\u662f\u6709\u4e00\u5b9a\u98ce\u9669\u7684\uff0c\u800c\u5347\u7ea7\u6210\u672c\u4e5f\u6bd4\u8f83\u5927\u3002\u5bf9\u4e00\u4e2a\u6b63\u5728\u8fd0\u8425\u7684\u516c\u53f8\u6765\u8bf4\uff0c\u7a33\u5b9a\u624d\u662f\u6700\u91cd\u8981\u7684\uff0c\u65b0\u5f00\u53d1\u7684\u8f6f\u4ef6\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528Python3.x\uff0c\u800c\u4e00\u4e9b\u57fa\u4e8ePython2.x\u7684\u8001\u4ee3\u7801\u4ecd\u9700\u8981\u7ef4\u62a4\u6216\u5347\u7ea7\u3002\u603b\u7684\u6765\u8bf4\uff0c\u4ecePython2.x\u5b8c\u5168\u8fc1\u79fb\u5230Python3.x\u8fd8\u9700\u8981\u4e00\u4e2a\u8fc7\u6e21\u671f\uff0c\u800c\u5728\u6b64\u671f\u95f4\u5b83\u4eec\u5c06\u4f1a\u5e76\u5b58\u3002 \u4e86\u89e3\u4e0a\u8ff0\u60c5\u51b5\u540e\uff0c\u4f60\u53ef\u4ee5\u6839\u636e\u4f60\u81ea\u5df1\u7684\u9700\u8981\u8fdb\u884c\u9009\u62e9\u3002\u9664\u975e\u5728\u5de5\u4f5c\u4e0a\u9700\u8981\u7ef4\u62a4\u516c\u53f8\u7684\u8001\u4ee3\u7801\uff0c\u5426\u5219\u8fd8\u662f\u5efa\u8bae\u76f4\u63a5\u5b66\u4e60Python3.x\uff0c\u6211\u4eec\u540e\u7eed\u7684\u5b66\u4e60\u4e5f\u5c06\u9488\u5bf9Python3.x\u5c55\u5f00\u3002","title":"\u65b0\u9879\u76ee\u4e2dPython\u7248\u672c\u7684\u9009\u62e9"},{"location":"06-third-part-lib/33-Python%E7%9B%AE%E5%89%8D%E5%BB%BA%E8%AE%AE%E6%9C%80%E5%A5%BD%E5%AE%89%E8%A3%85%E4%BB%80%E4%B9%88%E7%89%88%E6%9C%AC/#_1","text":"\u81ea\u5df1\u5f00\u53d1\u5efa\u8bae\u7528\u865a\u62df\u73af\u5883\uff0c\u987a\u4fbf\u5207\u6362\u73af\u5883 \u4f7f\u7528conda\u7ba1\u7406python\u7248\u672c\u73af\u5883\uff0c\u53ef\u4ee5\u4f7f\u7528anaconda\u6216\u8005miniconda\u5de5\u5177\u3002 \u5b89\u88c5\u597d\u4e86\u5de5\u5177\u4e4b\u540e\u67e5\u770b\uff1a conda -V \u521b\u5efa\u865a\u62df\u73af\u5883\uff1a conda create -n deeplearning python = 3 .6 \u521b\u5efa\u4e00\u4e2a\u540d\u79f0\u4e3adeeplearning\u7684\u865a\u62df\u73af\u5883\uff0c\u73af\u5883\u4e2dpython\u7248\u672c=3.6 \u5207\u6362\u865a\u62df\u73af\u5883\uff1a source activate deeplearning / conda activate deeplearning","title":"\u4e2a\u4eba\u7ec3\u624b\u9879\u76ee"},{"location":"06-third-part-lib/Chrome%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90/","text":"\u722c\u866b\u7cfb\u5217(\u4e8c) Chrome\u6293\u5305\u5206\u6790 \u00b6 \u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5c1d\u8bd5\u4f7f\u7528\u76f4\u89c2\u7684\u7f51\u9875\u5206\u6790\u5de5\u5177\uff08Chrome \u5f00\u53d1\u8005\u5de5\u5177\uff09\u5bf9\u7f51\u9875\u8fdb\u884c\u6293\u5305\u5206\u6790 \u66f4\u52a0\u6df1\u5165\u7684\u4e86\u89e3\u7f51\u7edc\u722c\u866b\u7684\u672c\u8d28\u4e0e\u5185\u6db5 1\u3001\u6d4b\u8bd5\u73af\u5883 \u00b6 \u6d4f\u89c8\u5668\uff1aChrome \u6d4f\u89c8\u5668 \u6d4f\u89c8\u5668\u7248\u672c\uff1a67.0.3396.99 (\u6b63\u5f0f\u7248\u672c) (32 \u4f4d) \u7f51\u9875\u5206\u6790\u5de5\u5177\uff1a\u5f00\u53d1\u8005\u5de5\u5177 2\u3001\u7f51\u9875\u5206\u6790 \u00b6 \uff081\uff09\u7f51\u9875\u6e90\u4ee3\u7801\u5206\u6790 \u00b6 \u6211\u4eec\u77e5\u9053\uff0c\u7f51\u9875\u6709\u9759\u6001\u7f51\u9875\u548c\u52a8\u6001\u7f51\u9875\u4e4b\u5206\uff0c\u5f88\u591a\u4eba\u4f1a\u8bef\u8ba4\u4e3a\u9759\u6001\u7f51\u9875\u5c31\u662f\u6ca1\u6709\u52a8\u6001\u6548\u679c\u7684\u7f51\u9875\uff0c\u5176\u5b9e\u8fd9\u79cd\u8bf4\u6cd5\u662f\u4e0d\u5bf9\u7684 \u9759\u6001\u7f51\u9875 \u662f\u6307\u6ca1\u6709\u540e\u53f0\u6570\u636e\u5e93\u7684\u4e0d\u53ef\u4ea4\u4e92\u7f51\u9875 \uff0c\u5e38\u4ee5 .htm\u3001.html\u3001.xml \u4e3a\u540e\u7f00 \u52a8\u6001\u7f51\u9875 \u662f\u6307\u80fd\u4e0e\u540e\u53f0\u6570\u636e\u5e93\u8fdb\u884c\u6570\u636e\u4f20\u9012\u7684\u53ef\u4ea4\u4e92\u7f51\u9875\uff0c\u5e38\u4ee5 .aspx\u3001 .asp\u3001.jsp\u3001 .php \u4e3a\u540e\u7f00 \u53e6\u5916\uff0c\u76ee\u524d\u5f88\u591a\u52a8\u6001\u7f51\u7ad9\u90fd\u91c7\u53d6\u4e86 \u5f02\u6b65\u52a0\u8f7d\u6280\u672f (Ajax)\uff0c\u8fd9\u5c31\u662f\u5f88\u591a\u65f6\u5019\u6293\u53d6\u5230\u7684\u6e90\u4ee3\u7801\u548c\u7f51\u7ad9\u663e\u793a\u7684\u6e90\u4ee3\u7801\u4e0d\u4e00\u81f4\u7684\u539f\u56e0 \u81f3\u4e8e\u5982\u4f55\u722c\u53d6\u52a8\u6001\u7f51\u9875\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e24\u79cd\u65b9\u6cd5\uff1a \u4e00\u662f\u4e0b\u9762\u5373\u5c06\u8bb2\u5230\u7684\u901a\u8fc7\u6293\u5305\u5206\u6790 Ajax \u8bf7\u6c42 \u4e8c\u662f\u5229\u7528 Selenium \u7b49\u5de5\u5177\u8fdb\u884c\u52a8\u6001\u6e32\u67d3\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u53e6\u4e00\u7bc7\u6587\u7ae0 \u2014\u2014 selenium\u7684\u57fa\u672c\u4f7f\u7528 \u4e0b\u9762\u6211\u4eec\u4ee5\u4eac\u4e1c\u5546\u54c1\u4e3a\u4f8b\uff0c\u5206\u6790\u5982\u4f55\u901a\u8fc7 Chrome \u8fdb\u884c\u6293\u5305\uff0c\u6211\u4eec\u9996\u5148\u6253\u5f00\u67d0\u4e2a\u5546\u54c1\u7684\u9996\u9875 https://item.jd.com/10072615543.html \u6765\u5230\u7f51\u9875\u7a7a\u767d\u5904\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u9009\u62e9 \u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801\uff08\u6216\u8005\u4f7f\u7528\u5feb\u6377\u952e Ctrl+U \u76f4\u63a5\u6253\u5f00\uff09 \u8bf7\u6ce8\u610f\uff0c\u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801 \u5f97\u5230\u7684\u662f\u7f51\u7ad9\u6700\u539f\u59cb\u7684\u6e90\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u901a\u5e38\u6211\u4eec\u6293\u53d6\u5230\u7684\u6e90\u4ee3\u7801 \u518d\u6b21\u6765\u5230\u7f51\u9875\u7a7a\u767d\u5904\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u9009\u62e9 \u68c0\u67e5\uff08\u6216\u8005\u4f7f\u7528\u5feb\u6377\u952e Ctrl+Shift+I / F12\u76f4\u63a5\u6253\u5f00\uff09 \u8bf7\u6ce8\u610f\uff0c\u68c0\u67e5 \u5f97\u5230\u7684\u662f\u662f\u7ecf\u8fc7 Ajax \u52a0\u8f7d\u548c JavaScript \u6e32\u67d3\u7684\u6e90\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u7f51\u7ad9\u663e\u793a\u5185\u5bb9\u7684\u6e90\u4ee3\u7801 \u7ecf\u8fc7\u5bf9\u6bd4\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e24\u8005\u7684\u5185\u5bb9\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u8fd9\u5c31\u662f \u5f02\u6b65\u52a0\u8f7d\u6280\u672f (Ajax) \u7684\u5178\u578b\u4f8b\u5b50 \u5c31\u76ee\u524d\u6765\u8bf4\u81f3\u5c11\u4eac\u4e1c\u5546\u54c1\u7684\u4ef7\u683c\u662f\u901a\u8fc7\u5f02\u6b65\u52a0\u8f7d\u751f\u6210\u7684\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e09\u79cd\u65b9\u6cd5\u5224\u65ad\u7f51\u9875\u4e2d\u67d0\u4e2a\u5185\u5bb9\u662f\u5426\u4e3a\u52a8\u6001\u751f\u6210\uff1a \u4e00\u662f\u5206\u6790 \u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801 \u751f\u6210\u7684\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u5bfb\u627e\u52a8\u6001\u8bf7\u6c42\u7684\u5178\u578b\u8bed\u53e5\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u4e0e \u68c0\u67e5 \u751f\u6210\u7684\u6e90\u4ee3\u7801\u8fdb\u884c\u6bd4\u8f83 \u4e8c\u662f\u901a\u8fc7\u4ee5\u4e0b\u5c06\u8981\u8bb2\u89e3\u7684\u7f51\u9875\u6293\u5305\u5206\u6790\u6765\u5224\u65ad\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6700\u4e3a\u5e38\u7528\uff0c\u5e94\u5f53\u597d\u597d\u638c\u63e1 \u4e09\u662f\u4e00\u79cd\u53d6\u5de7\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u7981\u7528 Chrome \u6d4f\u89c8\u5668\u7684 JavaScript \u52a0\u8f7d \u5177\u4f53\u53ef\u4ee5\u5728 Chrome \u7684\u5730\u5740\u680f\u4e2d\u8f93\u5165 chrome://settings/content/javascript \u6765\u5230 JavaScript \u7684\u8bbe\u7f6e\u9875\u9762 \u7136\u540e\u5c06 JavaScript \u7684\u9009\u9879\u5173\u95ed\uff0c\u8fd9\u65f6\u5019\u91cd\u65b0\u5237\u65b0\u7f51\u9875\uff0c\u5c31\u4f1a\u770b\u5230\u539f\u6765\u663e\u793a\u4ef7\u683c\u7684\u5730\u65b9\u51fa\u73b0\u4e86\u7a7a\u767d \u8fd9\u5c31\u8868\u660e\u539f\u6765\u7684\u4ef7\u683c\u662f\u901a\u8fc7 JavaScript \u52a8\u6001\u751f\u6210\u7684 \uff082\uff09\u7f51\u9875\u6293\u5305\u5206\u6790 \u00b6 \u6211\u4eec\u8fd8\u662f\u4ee5\u4eac\u4e1c\u5546\u54c1\u4e3a\u4f8b\u8fdb\u884c\u8bb2\u89e3\uff0c\u6253\u5f00\u67d0\u4e2a\u5546\u54c1\u7684\u9996\u9875\uff0c\u5c1d\u8bd5\u6293\u53d6\u52a8\u6001\u52a0\u8f7d\u7684\u5546\u54c1\u4ef7\u683c\u6570\u636e https://item.jd.com/10072615543.html \u4f7f\u7528\u5feb\u6377\u952e Ctrl+Shift+I \u6216 F12\u6253\u5f00\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u7136\u540e\u9009\u62e9 Network \u9009\u9879\u5361 \u8fdb\u884c\u6293\u5305\u5206\u6790 \u6b64\u65f6\u6309\u4e0b\u5feb\u6377\u952e F5 \u5237\u65b0\u9875\u9762\uff0c\u53ef\u4ee5\u770b\u5230\u5f00\u53d1\u8005\u5de5\u5177\u4e2d\u51fa\u73b0\u4e86\u5404\u79cd\u5404\u6837\u7684\u5305\uff0c\u6211\u4eec\u4f7f\u7528 Filter \u5bf9\u5305\u8fdb\u884c\u8fc7\u6ee4 \u9996\u5148\uff0c\u6211\u4eec\u9009\u4e2d Doc\uff0c\u53ef\u4ee5\u770b\u5230\u5217\u8868\u4e2d\u53ea\u51fa\u73b0\u4e86\u4e00\u4e2a\u5305 \u4e00\u822c\u6765\u8bf4\uff0c\u8fd9\u4e2a\u5c31\u662f\u6d4f\u89c8\u5668\u63a5\u6536\u5230\u7684\u7b2c\u4e00\u4e2a\u5305\uff0c\u7528\u4e8e\u83b7\u53d6\u8bf7\u6c42\u7f51\u7ad9\u7684\u539f\u59cb\u6e90\u4ee3\u7801 \u70b9\u51fb Header \u53ef\u4ee5\u770b\u5230\u5b83\u7684\u5934\u90e8\u53c2\u6570\u8bbe\u7f6e \u70b9\u51fb Response \u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u7684\u6e90\u4ee3\u7801\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u5b83\u5176\u5b9e\u548c \u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801 \u8fd4\u56de\u7684\u4fe1\u606f\u662f\u4e00\u81f4\u7684 \u4e0b\u9762\u8ba9\u6211\u4eec\u91cd\u65b0\u56de\u5230\u6b63\u9898\uff0c\u5bf9\u4e8e\u52a8\u6001\u52a0\u8f7d\u7684\u6293\u5305\u5206\u6790\uff0c\u4e3b\u8981\u770b XHR \u548c JS \u9009\u9879\u5361\u5373\u53ef \u9009\u4e2d JS \u8fdb\u884c\u8fc7\u6ee4\uff0c\u53d1\u73b0\u5217\u8868\u4e2d\u51fa\u73b0\u4e86\u597d\u591a\u5305\uff0c\u7ecf\u8fc7\u5206\u6790\uff0c\u6211\u4eec\u7b5b\u9009\u51fa\u4e0b\u56fe\u4e2d\u52a0\u6807\u8bb0\u7684\u5305 \u8fd9\u4e2a\u5305\u8fd4\u56de\u7684\u662f\u5173\u4e8e\u4ef7\u683c\u7684\u4fe1\u606f\uff0c\u53ef\u662f\u7ecf\u8fc7\u4ed4\u7ec6\u5206\u6790\u53d1\u73b0\uff0c\u8fd9\u4e9b\u4ef7\u683c\u5e76\u4e0d\u662f\u5c5e\u4e8e\u5f53\u524d\u5546\u54c1\u7684\uff0c\u800c\u662f\u5c5e\u4e8e\u76f8\u5173\u5546\u54c1\u7684 \u4f46\u662f\u600e\u4e48\u8bf4\u8fd9\u4e2a\u5305\u8fd8\u662f\u548c\u4ef7\u683c\u76f8\u5173\u7684\uff0c\u6211\u4eec\u8fd8\u662f\u5148\u770b\u770b\u8fd9\u4e2a\u5305\u7684\u8bf7\u6c42 URL \u5427 https://p.3.cn/prices/mgets?callback=jQuery1609108&type=1&area=1_72_2799_0&pdtk=&pduid=1539779074977382417990&pdpin=&pin=null&pdbp=0&skuIds=J_25630711066%2CJ_26395831446%2CJ_20823451030%2CJ_11332156897%2CJ_14020547214%2CJ_26498549638&ext=11100000&source=item-pc \u5bf9\u5305\u62ec callback \u7b49\u4e0d\u5fc5\u8981\u7684\u53c2\u6570\u8fdb\u884c\u7b5b\u9009\uff0c\u53ef\u4ee5\u5f97\u5230\u7b80\u5355\u800c\u6709\u6548\u7684 URL https://p.3.cn/prices/mgets?skuIds=J_25630711066%2CJ_26395831446%2CJ_20823451030%2CJ_11332156897%2CJ_14020547214%2CJ_26498549638 \u76f4\u63a5\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u8be5 URL\uff0c\u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u7684\u7684\u786e\u662f\u5305\u542b\u4ef7\u683c\u4fe1\u606f\u7684 JSON \u6570\u636e\uff08\u53ea\u53ef\u60dc\u662f\u5176\u4ed6\u5546\u54c1\u7684\u4ef7\u683c\uff09 \u5206\u6790\u8be5 URL \u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u63a8\u6d4b skuId \u5e94\u8be5\u5c31\u662f\u6bcf\u4e00\u4e2a\u5546\u54c1\u72ec\u4e00\u65e0\u4e8c\u7684\u6807\u5fd7\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u6240\u9700\u8981\u7684\u5546\u54c1\u7684 skuId \u7a76\u7adf\u53ef\u4ee5\u5728\u54ea\u91cc\u627e\u5230\u5462\uff1f \u4e8b\u5b9e\u4e0a\uff0cSKU \u662f\u4e00\u4e2a\u5728\u7269\u6d41\u3001\u8fd0\u8f93\u7b49\u4ea7\u4e1a\u4e2d\u5e38\u7528\u7684\u7f29\u5199\uff0c\u5176\u5168\u79f0\u662f Stock Keeping Unit\uff08\u5e93\u5b58\u91cf\u5355\u4f4d\uff09 \u5373\u5e93\u5b58\u8fdb\u51fa\u8ba1\u91cf\u7684\u57fa\u672c\u5355\u5143\uff0c\u73b0\u5728\u5df2\u7ecf\u88ab\u5f15\u7533\u4e3a\u4ea7\u54c1\u7edf\u4e00\u7f16\u53f7\u7684\u7b80\u79f0\uff0c\u6bcf\u79cd\u4ea7\u54c1\u5747\u5bf9\u5e94\u6709\u552f\u4e00\u7684 SKU \u56de\u987e\u6211\u4eec\u521a\u5f00\u59cb\u8fdb\u5165\u7684\u5546\u54c1\u9996\u9875\uff0c https://item.jd.com/10072615543.html \u8fd9\u5176\u4e2d\u4e0d\u662f\u5c31\u9690\u85cf\u7740\u5f53\u524d\u5546\u54c1\u7684\u552f\u4e00\u53f7\u7801\u6807\u8bc6\uff0810072615543\uff09\u4e86\u5417\uff1f\u4e0d\u59a8\u4e00\u8bd5\uff01 \u679c\u7136\uff0c\u8bbf\u95ee\u5546\u54c1\u4ef7\u683c\u7684\u5b8c\u6574 URL \u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e86\uff0c https://p.3.cn/prices/mgets?skuIds=10072615543 \u901a\u8fc7\u76f4\u63a5\u8bbf\u95ee\u8be5\u7f51\u5740\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u5f53\u524d\u5546\u54c1\u7684\u4ef7\u683c\u4fe1\u606f \u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5bf9\u8be5 URL \u8fdb\u884c\u9002\u5f53\u7684\u6cdb\u5316\u4ee5\u9002\u5e94\u4eac\u4e1c\u6240\u6709\u5546\u54c1\u7684\u4ef7\u683c\u722c\u53d6 \u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06 skuIds \u4f5c\u4e3a\u53c2\u6570\u72ec\u7acb\u5206\u79bb\u51fa\u6765\u5373\u53ef\uff0c https://p.3.cn/prices/mgets?skuIds={ID } \u901a\u8fc7\u6cdb\u5316\u540e\u7684 URL \uff0c\u7406\u8bba\u4e0a\u53ea\u8981\u80fd\u5f97\u5230\u5546\u54c1\u7684 skuId\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u5e94\u5546\u54c1\u7684\u4ef7\u683c","title":"Chrome\u6293\u5305\u5206\u6790"},{"location":"06-third-part-lib/Chrome%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90/#chrome","text":"\u5728\u8fd9\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u5c1d\u8bd5\u4f7f\u7528\u76f4\u89c2\u7684\u7f51\u9875\u5206\u6790\u5de5\u5177\uff08Chrome \u5f00\u53d1\u8005\u5de5\u5177\uff09\u5bf9\u7f51\u9875\u8fdb\u884c\u6293\u5305\u5206\u6790 \u66f4\u52a0\u6df1\u5165\u7684\u4e86\u89e3\u7f51\u7edc\u722c\u866b\u7684\u672c\u8d28\u4e0e\u5185\u6db5","title":"\u722c\u866b\u7cfb\u5217(\u4e8c) Chrome\u6293\u5305\u5206\u6790"},{"location":"06-third-part-lib/Chrome%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90/#1","text":"\u6d4f\u89c8\u5668\uff1aChrome \u6d4f\u89c8\u5668 \u6d4f\u89c8\u5668\u7248\u672c\uff1a67.0.3396.99 (\u6b63\u5f0f\u7248\u672c) (32 \u4f4d) \u7f51\u9875\u5206\u6790\u5de5\u5177\uff1a\u5f00\u53d1\u8005\u5de5\u5177","title":"1\u3001\u6d4b\u8bd5\u73af\u5883"},{"location":"06-third-part-lib/Chrome%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90/#2","text":"","title":"2\u3001\u7f51\u9875\u5206\u6790"},{"location":"06-third-part-lib/Chrome%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90/#1_1","text":"\u6211\u4eec\u77e5\u9053\uff0c\u7f51\u9875\u6709\u9759\u6001\u7f51\u9875\u548c\u52a8\u6001\u7f51\u9875\u4e4b\u5206\uff0c\u5f88\u591a\u4eba\u4f1a\u8bef\u8ba4\u4e3a\u9759\u6001\u7f51\u9875\u5c31\u662f\u6ca1\u6709\u52a8\u6001\u6548\u679c\u7684\u7f51\u9875\uff0c\u5176\u5b9e\u8fd9\u79cd\u8bf4\u6cd5\u662f\u4e0d\u5bf9\u7684 \u9759\u6001\u7f51\u9875 \u662f\u6307\u6ca1\u6709\u540e\u53f0\u6570\u636e\u5e93\u7684\u4e0d\u53ef\u4ea4\u4e92\u7f51\u9875 \uff0c\u5e38\u4ee5 .htm\u3001.html\u3001.xml \u4e3a\u540e\u7f00 \u52a8\u6001\u7f51\u9875 \u662f\u6307\u80fd\u4e0e\u540e\u53f0\u6570\u636e\u5e93\u8fdb\u884c\u6570\u636e\u4f20\u9012\u7684\u53ef\u4ea4\u4e92\u7f51\u9875\uff0c\u5e38\u4ee5 .aspx\u3001 .asp\u3001.jsp\u3001 .php \u4e3a\u540e\u7f00 \u53e6\u5916\uff0c\u76ee\u524d\u5f88\u591a\u52a8\u6001\u7f51\u7ad9\u90fd\u91c7\u53d6\u4e86 \u5f02\u6b65\u52a0\u8f7d\u6280\u672f (Ajax)\uff0c\u8fd9\u5c31\u662f\u5f88\u591a\u65f6\u5019\u6293\u53d6\u5230\u7684\u6e90\u4ee3\u7801\u548c\u7f51\u7ad9\u663e\u793a\u7684\u6e90\u4ee3\u7801\u4e0d\u4e00\u81f4\u7684\u539f\u56e0 \u81f3\u4e8e\u5982\u4f55\u722c\u53d6\u52a8\u6001\u7f51\u9875\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e24\u79cd\u65b9\u6cd5\uff1a \u4e00\u662f\u4e0b\u9762\u5373\u5c06\u8bb2\u5230\u7684\u901a\u8fc7\u6293\u5305\u5206\u6790 Ajax \u8bf7\u6c42 \u4e8c\u662f\u5229\u7528 Selenium \u7b49\u5de5\u5177\u8fdb\u884c\u52a8\u6001\u6e32\u67d3\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u53c2\u8003\u6211\u7684\u53e6\u4e00\u7bc7\u6587\u7ae0 \u2014\u2014 selenium\u7684\u57fa\u672c\u4f7f\u7528 \u4e0b\u9762\u6211\u4eec\u4ee5\u4eac\u4e1c\u5546\u54c1\u4e3a\u4f8b\uff0c\u5206\u6790\u5982\u4f55\u901a\u8fc7 Chrome \u8fdb\u884c\u6293\u5305\uff0c\u6211\u4eec\u9996\u5148\u6253\u5f00\u67d0\u4e2a\u5546\u54c1\u7684\u9996\u9875 https://item.jd.com/10072615543.html \u6765\u5230\u7f51\u9875\u7a7a\u767d\u5904\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u9009\u62e9 \u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801\uff08\u6216\u8005\u4f7f\u7528\u5feb\u6377\u952e Ctrl+U \u76f4\u63a5\u6253\u5f00\uff09 \u8bf7\u6ce8\u610f\uff0c\u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801 \u5f97\u5230\u7684\u662f\u7f51\u7ad9\u6700\u539f\u59cb\u7684\u6e90\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u901a\u5e38\u6211\u4eec\u6293\u53d6\u5230\u7684\u6e90\u4ee3\u7801 \u518d\u6b21\u6765\u5230\u7f51\u9875\u7a7a\u767d\u5904\u5355\u51fb\u9f20\u6807\u53f3\u952e\uff0c\u9009\u62e9 \u68c0\u67e5\uff08\u6216\u8005\u4f7f\u7528\u5feb\u6377\u952e Ctrl+Shift+I / F12\u76f4\u63a5\u6253\u5f00\uff09 \u8bf7\u6ce8\u610f\uff0c\u68c0\u67e5 \u5f97\u5230\u7684\u662f\u662f\u7ecf\u8fc7 Ajax \u52a0\u8f7d\u548c JavaScript \u6e32\u67d3\u7684\u6e90\u4ee3\u7801\uff0c\u4e5f\u5c31\u662f\u5f53\u524d\u7f51\u7ad9\u663e\u793a\u5185\u5bb9\u7684\u6e90\u4ee3\u7801 \u7ecf\u8fc7\u5bf9\u6bd4\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\u4e24\u8005\u7684\u5185\u5bb9\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u8fd9\u5c31\u662f \u5f02\u6b65\u52a0\u8f7d\u6280\u672f (Ajax) \u7684\u5178\u578b\u4f8b\u5b50 \u5c31\u76ee\u524d\u6765\u8bf4\u81f3\u5c11\u4eac\u4e1c\u5546\u54c1\u7684\u4ef7\u683c\u662f\u901a\u8fc7\u5f02\u6b65\u52a0\u8f7d\u751f\u6210\u7684\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e09\u79cd\u65b9\u6cd5\u5224\u65ad\u7f51\u9875\u4e2d\u67d0\u4e2a\u5185\u5bb9\u662f\u5426\u4e3a\u52a8\u6001\u751f\u6210\uff1a \u4e00\u662f\u5206\u6790 \u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801 \u751f\u6210\u7684\u6e90\u4ee3\u7801\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u5bfb\u627e\u52a8\u6001\u8bf7\u6c42\u7684\u5178\u578b\u8bed\u53e5\uff0c\u4e5f\u53ef\u4ee5\u5c06\u5176\u4e0e \u68c0\u67e5 \u751f\u6210\u7684\u6e90\u4ee3\u7801\u8fdb\u884c\u6bd4\u8f83 \u4e8c\u662f\u901a\u8fc7\u4ee5\u4e0b\u5c06\u8981\u8bb2\u89e3\u7684\u7f51\u9875\u6293\u5305\u5206\u6790\u6765\u5224\u65ad\uff0c\u8fd9\u79cd\u65b9\u6cd5\u6700\u4e3a\u5e38\u7528\uff0c\u5e94\u5f53\u597d\u597d\u638c\u63e1 \u4e09\u662f\u4e00\u79cd\u53d6\u5de7\u7684\u65b9\u6cd5\uff0c\u5c31\u662f\u7981\u7528 Chrome \u6d4f\u89c8\u5668\u7684 JavaScript \u52a0\u8f7d \u5177\u4f53\u53ef\u4ee5\u5728 Chrome \u7684\u5730\u5740\u680f\u4e2d\u8f93\u5165 chrome://settings/content/javascript \u6765\u5230 JavaScript \u7684\u8bbe\u7f6e\u9875\u9762 \u7136\u540e\u5c06 JavaScript \u7684\u9009\u9879\u5173\u95ed\uff0c\u8fd9\u65f6\u5019\u91cd\u65b0\u5237\u65b0\u7f51\u9875\uff0c\u5c31\u4f1a\u770b\u5230\u539f\u6765\u663e\u793a\u4ef7\u683c\u7684\u5730\u65b9\u51fa\u73b0\u4e86\u7a7a\u767d \u8fd9\u5c31\u8868\u660e\u539f\u6765\u7684\u4ef7\u683c\u662f\u901a\u8fc7 JavaScript \u52a8\u6001\u751f\u6210\u7684","title":"\uff081\uff09\u7f51\u9875\u6e90\u4ee3\u7801\u5206\u6790"},{"location":"06-third-part-lib/Chrome%E6%8A%93%E5%8C%85%E5%88%86%E6%9E%90/#2_1","text":"\u6211\u4eec\u8fd8\u662f\u4ee5\u4eac\u4e1c\u5546\u54c1\u4e3a\u4f8b\u8fdb\u884c\u8bb2\u89e3\uff0c\u6253\u5f00\u67d0\u4e2a\u5546\u54c1\u7684\u9996\u9875\uff0c\u5c1d\u8bd5\u6293\u53d6\u52a8\u6001\u52a0\u8f7d\u7684\u5546\u54c1\u4ef7\u683c\u6570\u636e https://item.jd.com/10072615543.html \u4f7f\u7528\u5feb\u6377\u952e Ctrl+Shift+I \u6216 F12\u6253\u5f00\u5f00\u53d1\u8005\u5de5\u5177\uff0c\u7136\u540e\u9009\u62e9 Network \u9009\u9879\u5361 \u8fdb\u884c\u6293\u5305\u5206\u6790 \u6b64\u65f6\u6309\u4e0b\u5feb\u6377\u952e F5 \u5237\u65b0\u9875\u9762\uff0c\u53ef\u4ee5\u770b\u5230\u5f00\u53d1\u8005\u5de5\u5177\u4e2d\u51fa\u73b0\u4e86\u5404\u79cd\u5404\u6837\u7684\u5305\uff0c\u6211\u4eec\u4f7f\u7528 Filter \u5bf9\u5305\u8fdb\u884c\u8fc7\u6ee4 \u9996\u5148\uff0c\u6211\u4eec\u9009\u4e2d Doc\uff0c\u53ef\u4ee5\u770b\u5230\u5217\u8868\u4e2d\u53ea\u51fa\u73b0\u4e86\u4e00\u4e2a\u5305 \u4e00\u822c\u6765\u8bf4\uff0c\u8fd9\u4e2a\u5c31\u662f\u6d4f\u89c8\u5668\u63a5\u6536\u5230\u7684\u7b2c\u4e00\u4e2a\u5305\uff0c\u7528\u4e8e\u83b7\u53d6\u8bf7\u6c42\u7f51\u7ad9\u7684\u539f\u59cb\u6e90\u4ee3\u7801 \u70b9\u51fb Header \u53ef\u4ee5\u770b\u5230\u5b83\u7684\u5934\u90e8\u53c2\u6570\u8bbe\u7f6e \u70b9\u51fb Response \u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u7684\u6e90\u4ee3\u7801\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u5b83\u5176\u5b9e\u548c \u67e5\u770b\u7f51\u9875\u6e90\u4ee3\u7801 \u8fd4\u56de\u7684\u4fe1\u606f\u662f\u4e00\u81f4\u7684 \u4e0b\u9762\u8ba9\u6211\u4eec\u91cd\u65b0\u56de\u5230\u6b63\u9898\uff0c\u5bf9\u4e8e\u52a8\u6001\u52a0\u8f7d\u7684\u6293\u5305\u5206\u6790\uff0c\u4e3b\u8981\u770b XHR \u548c JS \u9009\u9879\u5361\u5373\u53ef \u9009\u4e2d JS \u8fdb\u884c\u8fc7\u6ee4\uff0c\u53d1\u73b0\u5217\u8868\u4e2d\u51fa\u73b0\u4e86\u597d\u591a\u5305\uff0c\u7ecf\u8fc7\u5206\u6790\uff0c\u6211\u4eec\u7b5b\u9009\u51fa\u4e0b\u56fe\u4e2d\u52a0\u6807\u8bb0\u7684\u5305 \u8fd9\u4e2a\u5305\u8fd4\u56de\u7684\u662f\u5173\u4e8e\u4ef7\u683c\u7684\u4fe1\u606f\uff0c\u53ef\u662f\u7ecf\u8fc7\u4ed4\u7ec6\u5206\u6790\u53d1\u73b0\uff0c\u8fd9\u4e9b\u4ef7\u683c\u5e76\u4e0d\u662f\u5c5e\u4e8e\u5f53\u524d\u5546\u54c1\u7684\uff0c\u800c\u662f\u5c5e\u4e8e\u76f8\u5173\u5546\u54c1\u7684 \u4f46\u662f\u600e\u4e48\u8bf4\u8fd9\u4e2a\u5305\u8fd8\u662f\u548c\u4ef7\u683c\u76f8\u5173\u7684\uff0c\u6211\u4eec\u8fd8\u662f\u5148\u770b\u770b\u8fd9\u4e2a\u5305\u7684\u8bf7\u6c42 URL \u5427 https://p.3.cn/prices/mgets?callback=jQuery1609108&type=1&area=1_72_2799_0&pdtk=&pduid=1539779074977382417990&pdpin=&pin=null&pdbp=0&skuIds=J_25630711066%2CJ_26395831446%2CJ_20823451030%2CJ_11332156897%2CJ_14020547214%2CJ_26498549638&ext=11100000&source=item-pc \u5bf9\u5305\u62ec callback \u7b49\u4e0d\u5fc5\u8981\u7684\u53c2\u6570\u8fdb\u884c\u7b5b\u9009\uff0c\u53ef\u4ee5\u5f97\u5230\u7b80\u5355\u800c\u6709\u6548\u7684 URL https://p.3.cn/prices/mgets?skuIds=J_25630711066%2CJ_26395831446%2CJ_20823451030%2CJ_11332156897%2CJ_14020547214%2CJ_26498549638 \u76f4\u63a5\u7528\u6d4f\u89c8\u5668\u6253\u5f00\u8be5 URL\uff0c\u53ef\u4ee5\u770b\u5230\u8fd4\u56de\u7684\u7684\u786e\u662f\u5305\u542b\u4ef7\u683c\u4fe1\u606f\u7684 JSON \u6570\u636e\uff08\u53ea\u53ef\u60dc\u662f\u5176\u4ed6\u5546\u54c1\u7684\u4ef7\u683c\uff09 \u5206\u6790\u8be5 URL \u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u63a8\u6d4b skuId \u5e94\u8be5\u5c31\u662f\u6bcf\u4e00\u4e2a\u5546\u54c1\u72ec\u4e00\u65e0\u4e8c\u7684\u6807\u5fd7\u4e86\uff0c\u90a3\u4e48\u6211\u4eec\u6240\u9700\u8981\u7684\u5546\u54c1\u7684 skuId \u7a76\u7adf\u53ef\u4ee5\u5728\u54ea\u91cc\u627e\u5230\u5462\uff1f \u4e8b\u5b9e\u4e0a\uff0cSKU \u662f\u4e00\u4e2a\u5728\u7269\u6d41\u3001\u8fd0\u8f93\u7b49\u4ea7\u4e1a\u4e2d\u5e38\u7528\u7684\u7f29\u5199\uff0c\u5176\u5168\u79f0\u662f Stock Keeping Unit\uff08\u5e93\u5b58\u91cf\u5355\u4f4d\uff09 \u5373\u5e93\u5b58\u8fdb\u51fa\u8ba1\u91cf\u7684\u57fa\u672c\u5355\u5143\uff0c\u73b0\u5728\u5df2\u7ecf\u88ab\u5f15\u7533\u4e3a\u4ea7\u54c1\u7edf\u4e00\u7f16\u53f7\u7684\u7b80\u79f0\uff0c\u6bcf\u79cd\u4ea7\u54c1\u5747\u5bf9\u5e94\u6709\u552f\u4e00\u7684 SKU \u56de\u987e\u6211\u4eec\u521a\u5f00\u59cb\u8fdb\u5165\u7684\u5546\u54c1\u9996\u9875\uff0c https://item.jd.com/10072615543.html \u8fd9\u5176\u4e2d\u4e0d\u662f\u5c31\u9690\u85cf\u7740\u5f53\u524d\u5546\u54c1\u7684\u552f\u4e00\u53f7\u7801\u6807\u8bc6\uff0810072615543\uff09\u4e86\u5417\uff1f\u4e0d\u59a8\u4e00\u8bd5\uff01 \u679c\u7136\uff0c\u8bbf\u95ee\u5546\u54c1\u4ef7\u683c\u7684\u5b8c\u6574 URL \u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u4e86\uff0c https://p.3.cn/prices/mgets?skuIds=10072615543 \u901a\u8fc7\u76f4\u63a5\u8bbf\u95ee\u8be5\u7f51\u5740\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u5f53\u524d\u5546\u54c1\u7684\u4ef7\u683c\u4fe1\u606f \u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5bf9\u8be5 URL \u8fdb\u884c\u9002\u5f53\u7684\u6cdb\u5316\u4ee5\u9002\u5e94\u4eac\u4e1c\u6240\u6709\u5546\u54c1\u7684\u4ef7\u683c\u722c\u53d6 \u5f88\u7b80\u5355\uff0c\u53ea\u9700\u8981\u5c06 skuIds \u4f5c\u4e3a\u53c2\u6570\u72ec\u7acb\u5206\u79bb\u51fa\u6765\u5373\u53ef\uff0c https://p.3.cn/prices/mgets?skuIds={ID } \u901a\u8fc7\u6cdb\u5316\u540e\u7684 URL \uff0c\u7406\u8bba\u4e0a\u53ea\u8981\u80fd\u5f97\u5230\u5546\u54c1\u7684 skuId\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8bbf\u95ee\u5bf9\u5e94\u5546\u54c1\u7684\u4ef7\u683c","title":"\uff082\uff09\u7f51\u9875\u6293\u5305\u5206\u6790"},{"location":"06-third-part-lib/Could%20not%20find%20a%20version%20that%20satisfies%20the%20requirement%20requirements/","text":"Could not find a version that satisfies the requirement requirements.txt (from versions: ) No matching distribution found for requirements.txt \u62a5\u9519\u89e3\u51b3 \u00b6 \u62a5\u9519\u7684\u7ffb\u8bd1\uff1a\u627e\u4e0d\u5230\u6ee1\u8db3\u8981\u6c42requirements.txt\u7684\u7248\u672c\uff08\u6765\u81ea\u7248\u672c\uff1a\uff09\u627e\u4e0d\u5230\u5bf9requirements.txt\u7684\u5339\u914d\u5206\u53d1 \u6211\u6267\u884c\u4e86 pip install requirements.txt \u7ed3\u679c\u62a5\u9519 \u89e3\u51b3\u65b9\u6cd5\uff0c\u52a0\u4e00\u4e2a -r \u6307\u4ee4 pip install -r requirements.txt \u6216\u8005\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4 python -m pip install -r <file> \u67e5\u770b\u5168\u90e8\u5b89\u88c5\u7684\u5305 pip list","title":"Could not find a version that satisfies the requirement requirements"},{"location":"06-third-part-lib/Could%20not%20find%20a%20version%20that%20satisfies%20the%20requirement%20requirements/#could-not-find-a-version-that-satisfies-the-requirement-requirementstxt-from-versions-no-matching-distribution-found-for-requirementstxt","text":"\u62a5\u9519\u7684\u7ffb\u8bd1\uff1a\u627e\u4e0d\u5230\u6ee1\u8db3\u8981\u6c42requirements.txt\u7684\u7248\u672c\uff08\u6765\u81ea\u7248\u672c\uff1a\uff09\u627e\u4e0d\u5230\u5bf9requirements.txt\u7684\u5339\u914d\u5206\u53d1 \u6211\u6267\u884c\u4e86 pip install requirements.txt \u7ed3\u679c\u62a5\u9519 \u89e3\u51b3\u65b9\u6cd5\uff0c\u52a0\u4e00\u4e2a -r \u6307\u4ee4 pip install -r requirements.txt \u6216\u8005\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4 python -m pip install -r <file> \u67e5\u770b\u5168\u90e8\u5b89\u88c5\u7684\u5305 pip list","title":"Could not find a version that satisfies the requirement requirements.txt (from versions: ) No matching distribution found for requirements.txt \u62a5\u9519\u89e3\u51b3"},{"location":"06-third-part-lib/K-means%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95/","text":"K-means\u805a\u7c7b\u7b97\u6cd5\u53capython\u4ee3\u7801\u5b9e\u73b0 \u00b6 **K-means\u805a\u7c7b\u7b97\u6cd5 1\u3001\u6982\u8ff0 K-means\u7b97\u6cd5\u662f\u96c6\u7b80\u5355\u548c\u7ecf\u5178\u4e8e\u4e00\u8eab\u7684**\u57fa\u4e8e\u8ddd\u79bb\u7684\u805a\u7c7b\u7b97\u6cd5** \u91c7\u7528\u8ddd\u79bb\u4f5c\u4e3a\u76f8\u4f3c\u6027\u7684\u8bc4\u4ef7\u6307\u6807\uff0c\u5373\u8ba4\u4e3a\u4e24\u4e2a\u5bf9\u8c61\u7684\u8ddd\u79bb\u8d8a\u8fd1\uff0c\u5176\u76f8\u4f3c\u5ea6\u5c31\u8d8a\u5927\u3002 \u8be5\u7b97\u6cd5\u8ba4\u4e3a\u7c7b\u7c07\u662f\u7531\u8ddd\u79bb\u9760\u8fd1\u7684\u5bf9\u8c61\u7ec4\u6210\u7684\uff0c\u56e0\u6b64\u628a\u5f97\u5230**\u7d27\u51d1\u4e14\u72ec\u7acb\u7684\u7c07\u4f5c\u4e3a\u6700\u7ec8\u76ee\u6807\u3002** 2\u3001\u6838\u5fc3\u601d\u60f3 \u901a\u8fc7**\u8fed\u4ee3**\u5bfb\u627ek\u4e2a\u7c7b\u7c07\u7684\u4e00\u79cd\u5212\u5206\u65b9\u6848\uff0c\u4f7f\u5f97\u7528\u8fd9k\u4e2a\u7c7b\u7c07\u7684\u5747\u503c\u6765\u4ee3\u8868\u76f8\u5e94\u5404\u7c7b\u6837\u672c\u65f6\u6240\u5f97\u7684\u603b\u4f53\u8bef\u5dee\u6700\u5c0f\u3002 k\u4e2a\u805a\u7c7b\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u5404\u805a\u7c7b\u672c\u8eab\u5c3d\u53ef\u80fd\u7684\u7d27\u51d1\uff0c\u800c\u5404\u805a\u7c7b\u4e4b\u95f4\u5c3d\u53ef\u80fd\u7684\u5206\u5f00\u3002 k-means\u7b97\u6cd5\u7684\u57fa\u7840\u662f**\u6700\u5c0f\u8bef\u5dee\u5e73\u65b9\u548c\u51c6\u5219,** \u5176\u4ee3\u4ef7\u51fd\u6570\u662f\uff1a \u200b \u200b \u5f0f\u4e2d\uff0c\u03bcc(i)\u8868\u793a\u7b2ci\u4e2a\u805a\u7c7b\u7684\u5747\u503c\u3002 \u5404\u7c7b\u7c07\u5185\u7684\u6837\u672c\u8d8a\u76f8\u4f3c\uff0c\u5176\u4e0e\u8be5\u7c7b\u5747\u503c\u95f4\u7684\u8bef\u5dee\u5e73\u65b9\u8d8a\u5c0f\uff0c\u5bf9\u6240\u6709\u7c7b\u6240\u5f97\u5230\u7684\u8bef\u5dee\u5e73\u65b9\u6c42\u548c\uff0c\u5373\u53ef\u9a8c\u8bc1\u5206\u4e3ak\u7c7b\u65f6\uff0c\u5404\u805a\u7c7b\u662f\u5426\u662f\u6700\u4f18\u7684\u3002 \u4e0a\u5f0f\u7684\u4ee3\u4ef7\u51fd\u6570\u65e0\u6cd5\u7528\u89e3\u6790\u7684\u65b9\u6cd5\u6700\u5c0f\u5316\uff0c\u53ea\u80fd\u6709\u8fed\u4ee3\u7684\u65b9\u6cd5\u3002 3\u3001\u7b97\u6cd5\u6b65\u9aa4\u56fe\u89e3 \u4e0b\u56fe\u5c55\u793a\u4e86\u5bf9n\u4e2a\u6837\u672c\u70b9\u8fdb\u884cK-means\u805a\u7c7b\u7684\u6548\u679c\uff0c\u8fd9\u91cck\u53d62\u3002 4\u3001\u7b97\u6cd5\u5b9e\u73b0\u6b65\u9aa4 k-means\u7b97\u6cd5\u662f\u5c06\u6837\u672c\u805a\u7c7b\u6210 k\u4e2a\u7c07\uff08cluster\uff09\uff0c\u5176\u4e2dk\u662f\u7528\u6237\u7ed9\u5b9a\u7684\uff0c\u5176\u6c42\u89e3\u8fc7\u7a0b\u975e\u5e38\u76f4\u89c2\u7b80\u5355\uff0c\u5177\u4f53\u7b97\u6cd5\u63cf\u8ff0\u5982\u4e0b\uff1a 1) \u968f\u673a\u9009\u53d6 k\u4e2a\u805a\u7c7b\u8d28\u5fc3\u70b9 2) \u91cd\u590d\u4e0b\u9762\u8fc7\u7a0b\u76f4\u5230\u6536\u655b { \u200b \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6837\u4f8b i\uff0c\u8ba1\u7b97\u5176\u5e94\u8be5\u5c5e\u4e8e\u7684\u7c7b\uff1a \u200b \u200b \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7c7b j\uff0c\u91cd\u65b0\u8ba1\u7b97\u8be5\u7c7b\u7684\u8d28\u5fc3\uff1a \u200b } \u5176\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a \u521b\u5efak\u4e2a\u70b9\u4f5c\u4e3a\u521d\u59cb\u7684\u8d28\u5fc3\u70b9\uff08\u968f\u673a\u9009\u62e9\uff09 \u5f53\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u7c07\u5206\u914d\u7ed3\u679c\u53d1\u751f\u6539\u53d8\u65f6 \u200b \u5bf9\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u70b9 \u200b \u5bf9\u6bcf\u4e00\u4e2a\u8d28\u5fc3 \u200b \u8ba1\u7b97\u8d28\u5fc3\u4e0e\u6570\u636e\u70b9\u7684\u8ddd\u79bb \u200b \u5c06\u6570\u636e\u70b9\u5206\u914d\u5230\u8ddd\u79bb\u6700\u8fd1\u7684\u7c07 \u200b \u5bf9\u6bcf\u4e00\u4e2a\u7c07\uff0c\u8ba1\u7b97\u7c07\u4e2d\u6240\u6709\u70b9\u7684\u5747\u503c\uff0c\u5e76\u5c06\u5747\u503c\u4f5c\u4e3a\u8d28\u5fc3 5\u3001K-means\u805a\u7c7b\u7b97\u6cd5python\u5b9e\u6218 \u9700\u6c42\uff1a \u5bf9\u7ed9\u5b9a\u7684\u6570\u636e\u96c6\u8fdb\u884c\u805a\u7c7b \u672c\u6848\u4f8b\u91c7\u7528\u4e8c\u7ef4\u6570\u636e\u96c6\uff0c\u517180\u4e2a\u6837\u672c\uff0c\u67094\u4e2a\u7c7b\u3002 1 #!/usr/bin/python 2 # coding=utf-8 3 from numpy import * 4 # \u52a0\u8f7d\u6570\u636e 5 def loadDataSet(fileName): # \u89e3\u6790\u6587\u4ef6\uff0c\u6309tab\u5206\u5272\u5b57\u6bb5\uff0c\u5f97\u5230\u4e00\u4e2a\u6d6e\u70b9\u6570\u5b57\u7c7b\u578b\u7684\u77e9\u9635 6 dataMat = [] # \u6587\u4ef6\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bb5\u662f\u7c7b\u522b\u6807\u7b7e 7 fr = open(fileName) 8 for line in fr.readlines(): 9 curLine = line.strip().split('\\t') 10 fltLine = map(float, curLine) # \u5c06\u6bcf\u4e2a\u5143\u7d20\u8f6c\u6210float\u7c7b\u578b 11 dataMat.append(fltLine) 12 return dataMat 13 14 # \u8ba1\u7b97\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb 15 def distEclud(vecA, vecB): 16 return sqrt(sum(power(vecA - vecB, 2))) # \u6c42\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb 17 18 # \u6784\u5efa\u805a\u7c07\u4e2d\u5fc3\uff0c\u53d6k\u4e2a(\u6b64\u4f8b\u4e2d\u4e3a4)\u968f\u673a\u8d28\u5fc3 19 def randCent(dataSet, k): 20 n = shape(dataSet)[1] 21 centroids = mat(zeros((k,n))) # \u6bcf\u4e2a\u8d28\u5fc3\u6709n\u4e2a\u5750\u6807\u503c\uff0c\u603b\u5171\u8981k\u4e2a\u8d28\u5fc3 22 for j in range(n): 23 minJ = min(dataSet[:,j]) 24 maxJ = max(dataSet[:,j]) 25 rangeJ = float(maxJ - minJ) 26 centroids[:,j] = minJ + rangeJ * random.rand(k, 1) 27 return centroids 28 29 # k-means \u805a\u7c7b\u7b97\u6cd5 30 def kMeans(dataSet, k, distMeans =distEclud, createCent = randCent): 31 m = shape(dataSet)[0] 32 clusterAssment = mat(zeros((m,2))) # \u7528\u4e8e\u5b58\u653e\u8be5\u6837\u672c\u5c5e\u4e8e\u54ea\u7c7b\u53ca\u8d28\u5fc3\u8ddd\u79bb 33 # clusterAssment\u7b2c\u4e00\u5217\u5b58\u653e\u8be5\u6570\u636e\u6240\u5c5e\u7684\u4e2d\u5fc3\u70b9\uff0c\u7b2c\u4e8c\u5217\u662f\u8be5\u6570\u636e\u5230\u4e2d\u5fc3\u70b9\u7684\u8ddd\u79bb 34 centroids = createCent(dataSet, k) 35 clusterChanged = True # \u7528\u6765\u5224\u65ad\u805a\u7c7b\u662f\u5426\u5df2\u7ecf\u6536\u655b 36 while clusterChanged: 37 clusterChanged = False; 38 for i in range(m): # \u628a\u6bcf\u4e00\u4e2a\u6570\u636e\u70b9\u5212\u5206\u5230\u79bb\u5b83\u6700\u8fd1\u7684\u4e2d\u5fc3\u70b9 39 minDist = inf; minIndex = -1; 40 for j in range(k): 41 distJI = distMeans(centroids[j,:], dataSet[i,:]) 42 if distJI < minDist: 43 minDist = distJI; minIndex = j # \u5982\u679c\u7b2ci\u4e2a\u6570\u636e\u70b9\u5230\u7b2cj\u4e2a\u4e2d\u5fc3\u70b9\u66f4\u8fd1\uff0c\u5219\u5c06i\u5f52\u5c5e\u4e3aj 44 if clusterAssment[i,0] != minIndex: clusterChanged = True; # \u5982\u679c\u5206\u914d\u53d1\u751f\u53d8\u5316\uff0c\u5219\u9700\u8981\u7ee7\u7eed\u8fed\u4ee3 45 clusterAssment[i,:] = minIndex,minDist**2 # \u5e76\u5c06\u7b2ci\u4e2a\u6570\u636e\u70b9\u7684\u5206\u914d\u60c5\u51b5\u5b58\u5165\u5b57\u5178 46 print centroids 47 for cent in range(k): # \u91cd\u65b0\u8ba1\u7b97\u4e2d\u5fc3\u70b9 48 ptsInClust = dataSet[nonzero(clusterAssment[:,0].A == cent)[0]] # \u53bb\u7b2c\u4e00\u5217\u7b49\u4e8ecent\u7684\u6240\u6709\u5217 49 centroids[cent,:] = mean(ptsInClust, axis = 0) # \u7b97\u51fa\u8fd9\u4e9b\u6570\u636e\u7684\u4e2d\u5fc3\u70b9 50 return centroids, clusterAssment 51 # --------------------\u6d4b\u8bd5---------------------------------------------------- 52 # \u7528\u6d4b\u8bd5\u6570\u636e\u53ca\u6d4b\u8bd5kmeans\u7b97\u6cd5 53 datMat = mat(loadDataSet('testSet.txt')) 54 myCentroids,clustAssing = kMeans(datMat,4) 55 print myCentroids 56 print clustAssing \u8fd0\u884c\u7ed3\u679c\uff1a 6\u3001K-means\u7b97\u6cd5\u8865\u5145 K-means\u7b97\u6cd5\u7684**\u7f3a\u70b9**\u53ca**\u6539\u8fdb\u65b9\u6cd5** \uff081\uff09 k\u503c\u7684\u9009\u62e9\u662f\u7528\u6237\u6307\u5b9a\u7684\uff0c\u4e0d\u540c\u7684k\u5f97\u5230\u7684\u7ed3\u679c\u4f1a\u6709\u633a\u5927\u7684\u4e0d\u540c \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5de6\u8fb9\u662fk=3\u7684\u7ed3\u679c\uff0c\u8fd9\u4e2a\u5c31\u592a\u7a00\u758f\u4e86\uff0c\u84dd\u8272\u7684\u90a3\u4e2a\u7c07\u5176\u5b9e\u662f\u53ef\u4ee5\u518d\u5212\u5206\u6210\u4e24\u4e2a\u7c07\u7684\u3002\u800c\u53f3\u56fe\u662fk=5\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u770b\u5230\u7ea2\u8272\u83f1\u5f62\u548c\u84dd\u8272\u83f1\u5f62\u8fd9\u4e24\u4e2a\u7c07\u5e94\u8be5\u662f\u53ef\u4ee5\u5408\u5e76\u6210\u4e00\u4e2a\u7c07\u7684\uff1a \u6539\u8fdb\uff1a \u5bf9k\u7684\u9009\u62e9\u53ef\u4ee5\u5148\u7528\u4e00\u4e9b\u7b97\u6cd5\u5206\u6790\u6570\u636e\u7684\u5206\u5e03\uff0c\u5982\u91cd\u5fc3\u548c\u5bc6\u5ea6\u7b49\uff0c\u7136\u540e\u9009\u62e9\u5408\u9002\u7684k \uff082\uff09 \u5bf9k****\u4e2a\u521d\u59cb\u8d28\u5fc3\u7684\u9009\u62e9\u6bd4\u8f83\u654f\u611f\uff0c\u5bb9\u6613\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c \u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4e0a\u9762\u7684\u7b97\u6cd5\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u6709\u53ef\u80fd\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u5982\u4e0b\u9762\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002K-means\u4e5f\u662f\u6536\u655b\u4e86\uff0c\u53ea\u662f\u6536\u655b\u5230\u4e86\u5c40\u90e8\u6700\u5c0f\u503c\uff1a \u6539\u8fdb\uff1a \u6709\u4eba\u63d0\u51fa\u4e86\u53e6\u4e00\u4e2a\u6210\u4e3a\u4e8c\u5206k\u5747\u503c\uff08bisecting k-means\uff09\u7b97\u6cd5\uff0c\u5b83\u5bf9\u521d\u59cb\u7684k\u4e2a\u8d28\u5fc3\u7684\u9009\u62e9\u5c31\u4e0d\u592a\u654f\u611f \uff083\uff09 \u5b58\u5728\u5c40\u9650\u6027\uff0c\u5982\u4e0b\u9762\u8fd9\u79cd\u975e\u7403\u72b6\u7684\u6570\u636e\u5206\u5e03\u5c31\u641e\u4e0d\u5b9a\u4e86 \uff1a \uff084\uff09 \u6570\u636e\u96c6\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u6536\u655b\u4f1a\u6bd4\u8f83\u6162\u3002","title":"K-means\u805a\u7c7b\u7b97\u6cd5"},{"location":"06-third-part-lib/K-means%E8%81%9A%E7%B1%BB%E7%AE%97%E6%B3%95/#k-meanspython","text":"**K-means\u805a\u7c7b\u7b97\u6cd5 1\u3001\u6982\u8ff0 K-means\u7b97\u6cd5\u662f\u96c6\u7b80\u5355\u548c\u7ecf\u5178\u4e8e\u4e00\u8eab\u7684**\u57fa\u4e8e\u8ddd\u79bb\u7684\u805a\u7c7b\u7b97\u6cd5** \u91c7\u7528\u8ddd\u79bb\u4f5c\u4e3a\u76f8\u4f3c\u6027\u7684\u8bc4\u4ef7\u6307\u6807\uff0c\u5373\u8ba4\u4e3a\u4e24\u4e2a\u5bf9\u8c61\u7684\u8ddd\u79bb\u8d8a\u8fd1\uff0c\u5176\u76f8\u4f3c\u5ea6\u5c31\u8d8a\u5927\u3002 \u8be5\u7b97\u6cd5\u8ba4\u4e3a\u7c7b\u7c07\u662f\u7531\u8ddd\u79bb\u9760\u8fd1\u7684\u5bf9\u8c61\u7ec4\u6210\u7684\uff0c\u56e0\u6b64\u628a\u5f97\u5230**\u7d27\u51d1\u4e14\u72ec\u7acb\u7684\u7c07\u4f5c\u4e3a\u6700\u7ec8\u76ee\u6807\u3002** 2\u3001\u6838\u5fc3\u601d\u60f3 \u901a\u8fc7**\u8fed\u4ee3**\u5bfb\u627ek\u4e2a\u7c7b\u7c07\u7684\u4e00\u79cd\u5212\u5206\u65b9\u6848\uff0c\u4f7f\u5f97\u7528\u8fd9k\u4e2a\u7c7b\u7c07\u7684\u5747\u503c\u6765\u4ee3\u8868\u76f8\u5e94\u5404\u7c7b\u6837\u672c\u65f6\u6240\u5f97\u7684\u603b\u4f53\u8bef\u5dee\u6700\u5c0f\u3002 k\u4e2a\u805a\u7c7b\u5177\u6709\u4ee5\u4e0b\u7279\u70b9\uff1a \u5404\u805a\u7c7b\u672c\u8eab\u5c3d\u53ef\u80fd\u7684\u7d27\u51d1\uff0c\u800c\u5404\u805a\u7c7b\u4e4b\u95f4\u5c3d\u53ef\u80fd\u7684\u5206\u5f00\u3002 k-means\u7b97\u6cd5\u7684\u57fa\u7840\u662f**\u6700\u5c0f\u8bef\u5dee\u5e73\u65b9\u548c\u51c6\u5219,** \u5176\u4ee3\u4ef7\u51fd\u6570\u662f\uff1a \u200b \u200b \u5f0f\u4e2d\uff0c\u03bcc(i)\u8868\u793a\u7b2ci\u4e2a\u805a\u7c7b\u7684\u5747\u503c\u3002 \u5404\u7c7b\u7c07\u5185\u7684\u6837\u672c\u8d8a\u76f8\u4f3c\uff0c\u5176\u4e0e\u8be5\u7c7b\u5747\u503c\u95f4\u7684\u8bef\u5dee\u5e73\u65b9\u8d8a\u5c0f\uff0c\u5bf9\u6240\u6709\u7c7b\u6240\u5f97\u5230\u7684\u8bef\u5dee\u5e73\u65b9\u6c42\u548c\uff0c\u5373\u53ef\u9a8c\u8bc1\u5206\u4e3ak\u7c7b\u65f6\uff0c\u5404\u805a\u7c7b\u662f\u5426\u662f\u6700\u4f18\u7684\u3002 \u4e0a\u5f0f\u7684\u4ee3\u4ef7\u51fd\u6570\u65e0\u6cd5\u7528\u89e3\u6790\u7684\u65b9\u6cd5\u6700\u5c0f\u5316\uff0c\u53ea\u80fd\u6709\u8fed\u4ee3\u7684\u65b9\u6cd5\u3002 3\u3001\u7b97\u6cd5\u6b65\u9aa4\u56fe\u89e3 \u4e0b\u56fe\u5c55\u793a\u4e86\u5bf9n\u4e2a\u6837\u672c\u70b9\u8fdb\u884cK-means\u805a\u7c7b\u7684\u6548\u679c\uff0c\u8fd9\u91cck\u53d62\u3002 4\u3001\u7b97\u6cd5\u5b9e\u73b0\u6b65\u9aa4 k-means\u7b97\u6cd5\u662f\u5c06\u6837\u672c\u805a\u7c7b\u6210 k\u4e2a\u7c07\uff08cluster\uff09\uff0c\u5176\u4e2dk\u662f\u7528\u6237\u7ed9\u5b9a\u7684\uff0c\u5176\u6c42\u89e3\u8fc7\u7a0b\u975e\u5e38\u76f4\u89c2\u7b80\u5355\uff0c\u5177\u4f53\u7b97\u6cd5\u63cf\u8ff0\u5982\u4e0b\uff1a 1) \u968f\u673a\u9009\u53d6 k\u4e2a\u805a\u7c7b\u8d28\u5fc3\u70b9 2) \u91cd\u590d\u4e0b\u9762\u8fc7\u7a0b\u76f4\u5230\u6536\u655b { \u200b \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6837\u4f8b i\uff0c\u8ba1\u7b97\u5176\u5e94\u8be5\u5c5e\u4e8e\u7684\u7c7b\uff1a \u200b \u200b \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7c7b j\uff0c\u91cd\u65b0\u8ba1\u7b97\u8be5\u7c7b\u7684\u8d28\u5fc3\uff1a \u200b } \u5176\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a \u521b\u5efak\u4e2a\u70b9\u4f5c\u4e3a\u521d\u59cb\u7684\u8d28\u5fc3\u70b9\uff08\u968f\u673a\u9009\u62e9\uff09 \u5f53\u4efb\u610f\u4e00\u4e2a\u70b9\u7684\u7c07\u5206\u914d\u7ed3\u679c\u53d1\u751f\u6539\u53d8\u65f6 \u200b \u5bf9\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6570\u636e\u70b9 \u200b \u5bf9\u6bcf\u4e00\u4e2a\u8d28\u5fc3 \u200b \u8ba1\u7b97\u8d28\u5fc3\u4e0e\u6570\u636e\u70b9\u7684\u8ddd\u79bb \u200b \u5c06\u6570\u636e\u70b9\u5206\u914d\u5230\u8ddd\u79bb\u6700\u8fd1\u7684\u7c07 \u200b \u5bf9\u6bcf\u4e00\u4e2a\u7c07\uff0c\u8ba1\u7b97\u7c07\u4e2d\u6240\u6709\u70b9\u7684\u5747\u503c\uff0c\u5e76\u5c06\u5747\u503c\u4f5c\u4e3a\u8d28\u5fc3 5\u3001K-means\u805a\u7c7b\u7b97\u6cd5python\u5b9e\u6218 \u9700\u6c42\uff1a \u5bf9\u7ed9\u5b9a\u7684\u6570\u636e\u96c6\u8fdb\u884c\u805a\u7c7b \u672c\u6848\u4f8b\u91c7\u7528\u4e8c\u7ef4\u6570\u636e\u96c6\uff0c\u517180\u4e2a\u6837\u672c\uff0c\u67094\u4e2a\u7c7b\u3002 1 #!/usr/bin/python 2 # coding=utf-8 3 from numpy import * 4 # \u52a0\u8f7d\u6570\u636e 5 def loadDataSet(fileName): # \u89e3\u6790\u6587\u4ef6\uff0c\u6309tab\u5206\u5272\u5b57\u6bb5\uff0c\u5f97\u5230\u4e00\u4e2a\u6d6e\u70b9\u6570\u5b57\u7c7b\u578b\u7684\u77e9\u9635 6 dataMat = [] # \u6587\u4ef6\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u6bb5\u662f\u7c7b\u522b\u6807\u7b7e 7 fr = open(fileName) 8 for line in fr.readlines(): 9 curLine = line.strip().split('\\t') 10 fltLine = map(float, curLine) # \u5c06\u6bcf\u4e2a\u5143\u7d20\u8f6c\u6210float\u7c7b\u578b 11 dataMat.append(fltLine) 12 return dataMat 13 14 # \u8ba1\u7b97\u6b27\u51e0\u91cc\u5f97\u8ddd\u79bb 15 def distEclud(vecA, vecB): 16 return sqrt(sum(power(vecA - vecB, 2))) # \u6c42\u4e24\u4e2a\u5411\u91cf\u4e4b\u95f4\u7684\u8ddd\u79bb 17 18 # \u6784\u5efa\u805a\u7c07\u4e2d\u5fc3\uff0c\u53d6k\u4e2a(\u6b64\u4f8b\u4e2d\u4e3a4)\u968f\u673a\u8d28\u5fc3 19 def randCent(dataSet, k): 20 n = shape(dataSet)[1] 21 centroids = mat(zeros((k,n))) # \u6bcf\u4e2a\u8d28\u5fc3\u6709n\u4e2a\u5750\u6807\u503c\uff0c\u603b\u5171\u8981k\u4e2a\u8d28\u5fc3 22 for j in range(n): 23 minJ = min(dataSet[:,j]) 24 maxJ = max(dataSet[:,j]) 25 rangeJ = float(maxJ - minJ) 26 centroids[:,j] = minJ + rangeJ * random.rand(k, 1) 27 return centroids 28 29 # k-means \u805a\u7c7b\u7b97\u6cd5 30 def kMeans(dataSet, k, distMeans =distEclud, createCent = randCent): 31 m = shape(dataSet)[0] 32 clusterAssment = mat(zeros((m,2))) # \u7528\u4e8e\u5b58\u653e\u8be5\u6837\u672c\u5c5e\u4e8e\u54ea\u7c7b\u53ca\u8d28\u5fc3\u8ddd\u79bb 33 # clusterAssment\u7b2c\u4e00\u5217\u5b58\u653e\u8be5\u6570\u636e\u6240\u5c5e\u7684\u4e2d\u5fc3\u70b9\uff0c\u7b2c\u4e8c\u5217\u662f\u8be5\u6570\u636e\u5230\u4e2d\u5fc3\u70b9\u7684\u8ddd\u79bb 34 centroids = createCent(dataSet, k) 35 clusterChanged = True # \u7528\u6765\u5224\u65ad\u805a\u7c7b\u662f\u5426\u5df2\u7ecf\u6536\u655b 36 while clusterChanged: 37 clusterChanged = False; 38 for i in range(m): # \u628a\u6bcf\u4e00\u4e2a\u6570\u636e\u70b9\u5212\u5206\u5230\u79bb\u5b83\u6700\u8fd1\u7684\u4e2d\u5fc3\u70b9 39 minDist = inf; minIndex = -1; 40 for j in range(k): 41 distJI = distMeans(centroids[j,:], dataSet[i,:]) 42 if distJI < minDist: 43 minDist = distJI; minIndex = j # \u5982\u679c\u7b2ci\u4e2a\u6570\u636e\u70b9\u5230\u7b2cj\u4e2a\u4e2d\u5fc3\u70b9\u66f4\u8fd1\uff0c\u5219\u5c06i\u5f52\u5c5e\u4e3aj 44 if clusterAssment[i,0] != minIndex: clusterChanged = True; # \u5982\u679c\u5206\u914d\u53d1\u751f\u53d8\u5316\uff0c\u5219\u9700\u8981\u7ee7\u7eed\u8fed\u4ee3 45 clusterAssment[i,:] = minIndex,minDist**2 # \u5e76\u5c06\u7b2ci\u4e2a\u6570\u636e\u70b9\u7684\u5206\u914d\u60c5\u51b5\u5b58\u5165\u5b57\u5178 46 print centroids 47 for cent in range(k): # \u91cd\u65b0\u8ba1\u7b97\u4e2d\u5fc3\u70b9 48 ptsInClust = dataSet[nonzero(clusterAssment[:,0].A == cent)[0]] # \u53bb\u7b2c\u4e00\u5217\u7b49\u4e8ecent\u7684\u6240\u6709\u5217 49 centroids[cent,:] = mean(ptsInClust, axis = 0) # \u7b97\u51fa\u8fd9\u4e9b\u6570\u636e\u7684\u4e2d\u5fc3\u70b9 50 return centroids, clusterAssment 51 # --------------------\u6d4b\u8bd5---------------------------------------------------- 52 # \u7528\u6d4b\u8bd5\u6570\u636e\u53ca\u6d4b\u8bd5kmeans\u7b97\u6cd5 53 datMat = mat(loadDataSet('testSet.txt')) 54 myCentroids,clustAssing = kMeans(datMat,4) 55 print myCentroids 56 print clustAssing \u8fd0\u884c\u7ed3\u679c\uff1a 6\u3001K-means\u7b97\u6cd5\u8865\u5145 K-means\u7b97\u6cd5\u7684**\u7f3a\u70b9**\u53ca**\u6539\u8fdb\u65b9\u6cd5** \uff081\uff09 k\u503c\u7684\u9009\u62e9\u662f\u7528\u6237\u6307\u5b9a\u7684\uff0c\u4e0d\u540c\u7684k\u5f97\u5230\u7684\u7ed3\u679c\u4f1a\u6709\u633a\u5927\u7684\u4e0d\u540c \uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5de6\u8fb9\u662fk=3\u7684\u7ed3\u679c\uff0c\u8fd9\u4e2a\u5c31\u592a\u7a00\u758f\u4e86\uff0c\u84dd\u8272\u7684\u90a3\u4e2a\u7c07\u5176\u5b9e\u662f\u53ef\u4ee5\u518d\u5212\u5206\u6210\u4e24\u4e2a\u7c07\u7684\u3002\u800c\u53f3\u56fe\u662fk=5\u7684\u7ed3\u679c\uff0c\u53ef\u4ee5\u770b\u5230\u7ea2\u8272\u83f1\u5f62\u548c\u84dd\u8272\u83f1\u5f62\u8fd9\u4e24\u4e2a\u7c07\u5e94\u8be5\u662f\u53ef\u4ee5\u5408\u5e76\u6210\u4e00\u4e2a\u7c07\u7684\uff1a \u6539\u8fdb\uff1a \u5bf9k\u7684\u9009\u62e9\u53ef\u4ee5\u5148\u7528\u4e00\u4e9b\u7b97\u6cd5\u5206\u6790\u6570\u636e\u7684\u5206\u5e03\uff0c\u5982\u91cd\u5fc3\u548c\u5bc6\u5ea6\u7b49\uff0c\u7136\u540e\u9009\u62e9\u5408\u9002\u7684k \uff082\uff09 \u5bf9k****\u4e2a\u521d\u59cb\u8d28\u5fc3\u7684\u9009\u62e9\u6bd4\u8f83\u654f\u611f\uff0c\u5bb9\u6613\u9677\u5165\u5c40\u90e8\u6700\u5c0f\u503c \u3002\u4f8b\u5982\uff0c\u6211\u4eec\u4e0a\u9762\u7684\u7b97\u6cd5\u8fd0\u884c\u7684\u65f6\u5019\uff0c\u6709\u53ef\u80fd\u4f1a\u5f97\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u5982\u4e0b\u9762\u8fd9\u4e24\u79cd\u60c5\u51b5\u3002K-means\u4e5f\u662f\u6536\u655b\u4e86\uff0c\u53ea\u662f\u6536\u655b\u5230\u4e86\u5c40\u90e8\u6700\u5c0f\u503c\uff1a \u6539\u8fdb\uff1a \u6709\u4eba\u63d0\u51fa\u4e86\u53e6\u4e00\u4e2a\u6210\u4e3a\u4e8c\u5206k\u5747\u503c\uff08bisecting k-means\uff09\u7b97\u6cd5\uff0c\u5b83\u5bf9\u521d\u59cb\u7684k\u4e2a\u8d28\u5fc3\u7684\u9009\u62e9\u5c31\u4e0d\u592a\u654f\u611f \uff083\uff09 \u5b58\u5728\u5c40\u9650\u6027\uff0c\u5982\u4e0b\u9762\u8fd9\u79cd\u975e\u7403\u72b6\u7684\u6570\u636e\u5206\u5e03\u5c31\u641e\u4e0d\u5b9a\u4e86 \uff1a \uff084\uff09 \u6570\u636e\u96c6\u6bd4\u8f83\u5927\u7684\u65f6\u5019\uff0c\u6536\u655b\u4f1a\u6bd4\u8f83\u6162\u3002","title":"K-means\u805a\u7c7b\u7b97\u6cd5\u53capython\u4ee3\u7801\u5b9e\u73b0"},{"location":"06-third-part-lib/Python%20SimpleHTTPServer/","text":"Python SimpleHTTPServer \u00b6 \u642d\u5efa FTP\uff0c\u6216\u8005\u662f\u642d\u5efa\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u80fd\u591f\u5b9e\u73b0 Linux \u7684\u76ee\u5f55\u5171\u4eab\u3002\u4f46\u662f FTP \u548c\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\u7684\u529f\u80fd\u90fd\u8fc7\u4e8e\u5f3a\u5927\uff0c\u56e0\u6b64\u5b83\u4eec\u90fd\u6709\u4e00\u4e9b\u4e0d\u591f\u65b9\u4fbf\u7684\u5730\u65b9\u3002\u6bd4\u5982\u4f60\u60f3\u5feb\u901f\u5171\u4eab Linux \u7cfb\u7edf\u7684\u67d0\u4e2a\u76ee\u5f55\u7ed9\u6574\u4e2a\u9879\u76ee\u56e2\u961f\uff0c\u8fd8\u60f3\u5728\u4e00\u5206\u949f\u5185\u505a\u5230\uff0c\u600e\u4e48\u529e\uff1f \u5f88\u7b80\u5355\uff0c\u4f7f\u7528 SimpleHTTPServer\u3002 \u5404\u79cd Linux \u53d1\u884c\u7248\u901a\u5e38\u90fd\u5185\u7f6e\u4e86 Python\uff0c\u6545\u4f7f\u7528\u6b64\u65b9\u6cd5\u975e\u5e38\u65b9\u4fbf\u3002\u5728\u5176\u5b83 OS\uff08\u6bd4\u5982 Windows\uff09\u6b64\u65b9\u6cd5\u4e5f\u6709\u6548\uff0c\u4f46\u662f\u8981\u9ebb\u70e6\u4e00\u4e9b\uff0c\u5fc5\u987b\u5148\u642d\u5efa Python \u73af\u5883\u3002 SimpleHTTPServer \u662f Python 2 \u81ea\u5e26\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u662f Python \u7684 Web \u670d\u52a1\u5668\u3002\u5b83\u5728 Python 3 \u5df2\u7ecf\u5408\u5e76\u5230 http.server \u6a21\u5757\u4e2d\u3002SimpleHTTPServer \u5728 Python 3 \u7684\u7528\u6cd5\u4e0e\u5728 Python 2 \u7684\u7528\u6cd5\u76f8\u4f3c(python3 -m http.server 6789), \u672c\u6587\u4ee5 Python 2 \u4e3a\u4f8b\u3002 SimpleHTTPServer \u6709\u4e00\u4e2a\u7279\u6027\uff0c\u5982\u679c\u5f85\u5171\u4eab\u7684\u76ee\u5f55\u4e0b\u6709 index.html\uff0c\u90a3\u4e48 index.html \u6587\u4ef6\u4f1a\u88ab\u89c6\u4e3a\u9ed8\u8ba4\u4e3b\u9875\uff1b\u5982\u679c\u4e0d\u5b58\u5728 index.html \u6587\u4ef6\uff0c\u90a3\u4e48\u5c31\u4f1a\u663e\u793a\u6574\u4e2a\u76ee\u5f55\u5217\u8868\u3002 SimpleHTTPServer \u4f7f\u7528\u65b9\u6cd5 1\uff09\u8fdb\u5165\u5f85\u5206\u4eab\u7684\u76ee\u5f55 \u3000\u3000 2\uff09\u6267\u884c\u547d\u4ee4 python -m SimpleHTTPServer \u7aef\u53e3\u53f7 \u3000\u3000\u3000\u3000\u6ce8\u610f\uff1a\u4e0d\u586b\u7aef\u53e3\u53f7\u5219\u9ed8\u8ba4\u4f7f\u7528 8000 \u7aef\u53e3\u3002 \u3000\u3000 3\uff09\u6d4f\u89c8\u5668\u8bbf\u95ee\u8be5\u4e3b\u673a\u7684\u5730\u5740\uff1a http://IP :\u7aef\u53e3\u53f7/ \u793a\u4f8b\uff1a\u6267\u884c\u547d\u4ee4 cd /home/abc python -m SimpleHTTPServer 8000 Serving HTTP on 0 .0.0.0 port 8000 ... 192 .168.20.33 - - [ 09 /Jan/2016 15 :13:28 ] \"GET / HTTP/1.1\" 200 - 192 .168.20.33 - - [ 09 /Jan/2016 15 :13:33 ] code 404 , message File not found 192 .168.20.33 - - [ 09 /Jan/2016 15 :13:38 ] \"GET /favicon.ico HTTP/1.1\" 404 - 192 .168.20.33 - - [ 09 /Jan/2016 15 :13:54 ] \"GET /jdk-7u79-linux-x64.tar.gz HTTP/1.1\" 200 - \u6d4f\u89c8\u5668\u6253\u5f00\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a \u4f7f\u7528\u65f6\u8fd8\u8981\u6ce8\u610f Linux \u7684\u9632\u706b\u5899\u56e0\u7d20\u3002","title":"Python SimpleHTTPServer"},{"location":"06-third-part-lib/Python%20SimpleHTTPServer/#python-simplehttpserver","text":"\u642d\u5efa FTP\uff0c\u6216\u8005\u662f\u642d\u5efa\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u80fd\u591f\u5b9e\u73b0 Linux \u7684\u76ee\u5f55\u5171\u4eab\u3002\u4f46\u662f FTP \u548c\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\u7684\u529f\u80fd\u90fd\u8fc7\u4e8e\u5f3a\u5927\uff0c\u56e0\u6b64\u5b83\u4eec\u90fd\u6709\u4e00\u4e9b\u4e0d\u591f\u65b9\u4fbf\u7684\u5730\u65b9\u3002\u6bd4\u5982\u4f60\u60f3\u5feb\u901f\u5171\u4eab Linux \u7cfb\u7edf\u7684\u67d0\u4e2a\u76ee\u5f55\u7ed9\u6574\u4e2a\u9879\u76ee\u56e2\u961f\uff0c\u8fd8\u60f3\u5728\u4e00\u5206\u949f\u5185\u505a\u5230\uff0c\u600e\u4e48\u529e\uff1f \u5f88\u7b80\u5355\uff0c\u4f7f\u7528 SimpleHTTPServer\u3002 \u5404\u79cd Linux \u53d1\u884c\u7248\u901a\u5e38\u90fd\u5185\u7f6e\u4e86 Python\uff0c\u6545\u4f7f\u7528\u6b64\u65b9\u6cd5\u975e\u5e38\u65b9\u4fbf\u3002\u5728\u5176\u5b83 OS\uff08\u6bd4\u5982 Windows\uff09\u6b64\u65b9\u6cd5\u4e5f\u6709\u6548\uff0c\u4f46\u662f\u8981\u9ebb\u70e6\u4e00\u4e9b\uff0c\u5fc5\u987b\u5148\u642d\u5efa Python \u73af\u5883\u3002 SimpleHTTPServer \u662f Python 2 \u81ea\u5e26\u7684\u4e00\u4e2a\u6a21\u5757\uff0c\u662f Python \u7684 Web \u670d\u52a1\u5668\u3002\u5b83\u5728 Python 3 \u5df2\u7ecf\u5408\u5e76\u5230 http.server \u6a21\u5757\u4e2d\u3002SimpleHTTPServer \u5728 Python 3 \u7684\u7528\u6cd5\u4e0e\u5728 Python 2 \u7684\u7528\u6cd5\u76f8\u4f3c(python3 -m http.server 6789), \u672c\u6587\u4ee5 Python 2 \u4e3a\u4f8b\u3002 SimpleHTTPServer \u6709\u4e00\u4e2a\u7279\u6027\uff0c\u5982\u679c\u5f85\u5171\u4eab\u7684\u76ee\u5f55\u4e0b\u6709 index.html\uff0c\u90a3\u4e48 index.html \u6587\u4ef6\u4f1a\u88ab\u89c6\u4e3a\u9ed8\u8ba4\u4e3b\u9875\uff1b\u5982\u679c\u4e0d\u5b58\u5728 index.html \u6587\u4ef6\uff0c\u90a3\u4e48\u5c31\u4f1a\u663e\u793a\u6574\u4e2a\u76ee\u5f55\u5217\u8868\u3002 SimpleHTTPServer \u4f7f\u7528\u65b9\u6cd5 1\uff09\u8fdb\u5165\u5f85\u5206\u4eab\u7684\u76ee\u5f55 \u3000\u3000 2\uff09\u6267\u884c\u547d\u4ee4 python -m SimpleHTTPServer \u7aef\u53e3\u53f7 \u3000\u3000\u3000\u3000\u6ce8\u610f\uff1a\u4e0d\u586b\u7aef\u53e3\u53f7\u5219\u9ed8\u8ba4\u4f7f\u7528 8000 \u7aef\u53e3\u3002 \u3000\u3000 3\uff09\u6d4f\u89c8\u5668\u8bbf\u95ee\u8be5\u4e3b\u673a\u7684\u5730\u5740\uff1a http://IP :\u7aef\u53e3\u53f7/ \u793a\u4f8b\uff1a\u6267\u884c\u547d\u4ee4 cd /home/abc python -m SimpleHTTPServer 8000 Serving HTTP on 0 .0.0.0 port 8000 ... 192 .168.20.33 - - [ 09 /Jan/2016 15 :13:28 ] \"GET / HTTP/1.1\" 200 - 192 .168.20.33 - - [ 09 /Jan/2016 15 :13:33 ] code 404 , message File not found 192 .168.20.33 - - [ 09 /Jan/2016 15 :13:38 ] \"GET /favicon.ico HTTP/1.1\" 404 - 192 .168.20.33 - - [ 09 /Jan/2016 15 :13:54 ] \"GET /jdk-7u79-linux-x64.tar.gz HTTP/1.1\" 200 - \u6d4f\u89c8\u5668\u6253\u5f00\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a \u4f7f\u7528\u65f6\u8fd8\u8981\u6ce8\u610f Linux \u7684\u9632\u706b\u5899\u56e0\u7d20\u3002","title":"Python SimpleHTTPServer"},{"location":"06-third-part-lib/Python-%E7%88%AC%E8%99%AB/","text":"Python\u5b66\u4e60\u2014\u2014\u7f51\u7edc\u722c\u866b\u7b2c\u4e00\u5468-\u4e0b\u8f7d\u5c0f\u8bf4 \u00b6 \u529f\u80fd \uff1a \u81ea\u52a8\u722c\u53d6\u67d0\u7f51\u7ad9\uff0c\u5e76\u4e14\u5c06\u8be5\u7f51\u7ad9\u7684\u6587\u672c\u6570\u636e\u5b58\u50a8\u5230\u672c\u5730\u3002 \u57fa\u672c\u5b9e\u73b0\u6b65\u9aa4 \uff1a 1\uff09\u81ea\u52a8\u722c\u53d6\u7f51\u7ad9\uff0c\u83b7\u5f97\u7f51\u7ad9\u6570\u636e\uff1b 2\uff09\u6570\u636e\u5b58\u50a8\u5230\u672c\u5730\u3002 \u9047\u5230\u95ee\u9898\u53ca\u89e3\u51b3\u529e\u6cd5 \uff1a 1\uff09\u81ea\u52a8\u722c\u53d6\uff0c\u6682\u65f6\u6c34\u5e73\u4e0d\u591f\u9ad8\uff0c\u91c7\u7528\u7684\u4f2a\u722c\u53d6\u65b9\u6cd5\u5373\u627e\u5230\u7f51\u9875\u7f51\u5740\u7684\u89c4\u5f8b\uff1b 2\uff09\u5173\u4e8e\u6587\u672c\u7684\u5904\u7406\uff0c\u8f93\u51fa\u6210\u60f3\u8981\u7684\u683c\u5f0f \u6b63\u9898\u65b9\u6cd5 \uff1a 1\uff09\u7f51\u9875\u5206\u4e3a\u9759\u6001\u7f51\u9875\uff08\u5b58\u7cb9\u7684html\u683c\u5f0f\u7684\uff09\u3001\u52a8\u6001\u7f51\u9875\uff08\u4f7f\u7528AJAX\uff09\uff0c\u5373\u52a8\u6001\u52a0\u8f7d\u7f51\u9875\u7684\u6570\u636e\u4e0d\u4e00\u5b9a\u51fa\u73b0\u6309\u5916html\u4e2d\u7b49\u3002 \u672c\u6587\u722c\u53d6\u7684\u7f51\u9875\u662f\u52a8\u6001\u7f51\u9875\uff0c\u91c7\u7528\u7684\u65b9\u6cd5\u662f\u6d4f\u89c8\u5668\u6e32\u67d3\u5f15\u64ce\uff08\u6e32\u67d3\u5f15\u64ce\u7684\u804c\u8d23\u5c31\u662f\u6e32\u67d3\uff0c\u5373\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u663e\u793a\u6240\u8bf7\u6c42\u7684\u5185\u5bb9\u3002\u8fd9\u662f\u6bcf\u4e00\u4e2a\u6d4f\u89c8\u5668\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u6240\u4ee5\u6e32\u67d3\u5f15\u64ce\u4e5f\u79f0\u4e3a\u6d4f\u89c8\u5668\u5185\u6838\uff09\u3002\u56e0\u800c\u9700\u8981\u5b89\u88c5selenium\u5e93\uff0c FireFox\u6d4f\u89c8\u5668\uff0c\u4e0b\u8f7dgetodriver\u3002 selenium\u5e93\u4f7f\u7528\u65b9\u6cd5 \uff1a https://blog.csdn.net/weixin_36279318/article/details/79475388 \u8bbf\u95ee\u7f51\u5740url: https://www.biqukan.com/2_2757/1107517.html \uff0c\u9b3c\u5439\u706f\u7684\u94fe\u63a5\u3002 \u9700\u8981\u722c\u53d6\u5185\u5bb9\uff1a\u6807\u9898\u3001\u6587\u672c\u3002 \u6807\u9898\u7684\u5143\u7d20\u7279\u5f81\uff1adiv\uff0cclass = \u201ccontent\u201d\u6216h1 \u6587\u672c\u5143\u7d20\u7279\u5f81\uff1adiv\uff0cid = \u201ccontent\u201d class = \u201cshowtxt\u201d 2\uff09\u901a\u8fc7BeautifulSoup\uff0c\u5b89\u88c5\u6a21\u5757\u540e\uff0c\u83b7\u5f97soup\u5bf9\u8c61\uff0c\u6309\u7167\u4e0a\u9762\u7684\u5143\u7d20\u5c5e\u6027\uff0c\u8c03\u7528\u65b9\u6cd5find_all()\u6216find\u53ef\u4ee5\u6240\u4ee5\u7b26\u5408\u4e0a\u8ff0\u5143\u7d20\u7279\u5f81\u7684**\u5143\u7d20\u5217\u8868\u3002\uff08** https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/#find-all \uff09 3\uff09\u6839\u636eBeautifulSoup\u624b\u518c\u4e0a\u7684\uff0cget_text\uff08\uff09\u65b9\u6cd5\u83b7\u5f97tag\u6807\u7b7e\u7684\u6587\u672c\u5185\u5bb9\uff0c\u56e0\u4e3a\u83b7\u53d6\u7684\u6587\u672c\u5185\u5bb9\u5b58\u5728\u7a7a\u683c\uff0c\u91c7\u7528\u7684\u7b28\u65b9\u6cd5 \u7528strip\uff08\uff09\u65b9\u6cd5\u53bb\u9664\u7a7a\u683c\uff0c\u8fd4\u56de\u5217\u8868\uff0c\u5e76\u7528\u5b57\u7b26\u4e32+\u65b9\u6cd5\u5c06\u5217\u8868\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u5b8c\u6210\u6587\u672c\u63d0\u53d6\u5de5\u4f5c 4\uff09\u4e0b\u9762\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u722c\u53d6\u6240\u6709\u7ae0\u8282\u6587\u672c\u6570\u636e\u3002 \u6e90\u4ee3\u7801\u5982\u4e0b\uff1a from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary from bs4 import BeautifulSoup import time import sys import re caps = webdriver . DesiredCapabilities () . FIREFOX caps [ \"marionette\" ] = False binary = FirefoxBinary ( r 'D:\\Anaconda3\\Scripts\\firefox.exe' ) driver = webdriver . Firefox ( firefox_binary = binary , capabilities = caps ) Debug = 1 MaxTextNum = 100 def singlePageGet ( driver , url ): ''' \u51fd\u6570\u8bf4\u660e\uff1a\u5355\u9875\u63d0\u53d6\u6570\u636e :return:\u5355\u9875\u6807\u9898\u3001\u6587\u672c ''' driver . get ( url ) webData = driver . page_source soup = BeautifulSoup ( webData , 'lxml' ) titlesList = ( soup . find_all ( 'h1' )) textsList = soup . find_all ( 'div' , class_ = \"showtxt\" ) if textsList : #print(titlesList,textsList) titles = titlesList [ 0 ] . get_text () . split () texts = textsList [ 0 ] . get_text () . strip () . split () finalText = '' finalTitle = '' for text in texts : finalText = finalText + text for title in titles : finalTitle = finalTitle + title return finalTitle , finalText else : return def writeToFile ( title , content ): fileName = '\u9b3c\u5439\u706f.txt' with open ( fileName , 'a+' , encoding = 'utf-8' ) as f : f . write ( title ) f . write ( ' \\n ' ) f . write ( content ) f . write ( ' \\n\\n ' ) #8035 urlsAccess = [ 'https://www.biqukan.com/2_2757/ {} .html' . format ( value ) for value in range ( 1108307 , 1108346 , 1 )] #1108346 117517 numing = 0 for url in urlsAccess : if singlePageGet ( driver , url ): titles , texts = singlePageGet ( driver , url ) if titles : writeToFile ( titles , texts ) time . sleep ( 2 ) numing = numing + 1 print ( '\u4e0b\u8f7d\u8fdb\u5ea6\uff1a %4.2f ' % ( numing / len ( urlsAccess ))) else : numing = numing + 1 print ( '\u4e0b\u8f7d\u5b8c\u6210' )","title":"Python-\u722c\u866b"},{"location":"06-third-part-lib/Python-%E7%88%AC%E8%99%AB/#python-","text":"\u529f\u80fd \uff1a \u81ea\u52a8\u722c\u53d6\u67d0\u7f51\u7ad9\uff0c\u5e76\u4e14\u5c06\u8be5\u7f51\u7ad9\u7684\u6587\u672c\u6570\u636e\u5b58\u50a8\u5230\u672c\u5730\u3002 \u57fa\u672c\u5b9e\u73b0\u6b65\u9aa4 \uff1a 1\uff09\u81ea\u52a8\u722c\u53d6\u7f51\u7ad9\uff0c\u83b7\u5f97\u7f51\u7ad9\u6570\u636e\uff1b 2\uff09\u6570\u636e\u5b58\u50a8\u5230\u672c\u5730\u3002 \u9047\u5230\u95ee\u9898\u53ca\u89e3\u51b3\u529e\u6cd5 \uff1a 1\uff09\u81ea\u52a8\u722c\u53d6\uff0c\u6682\u65f6\u6c34\u5e73\u4e0d\u591f\u9ad8\uff0c\u91c7\u7528\u7684\u4f2a\u722c\u53d6\u65b9\u6cd5\u5373\u627e\u5230\u7f51\u9875\u7f51\u5740\u7684\u89c4\u5f8b\uff1b 2\uff09\u5173\u4e8e\u6587\u672c\u7684\u5904\u7406\uff0c\u8f93\u51fa\u6210\u60f3\u8981\u7684\u683c\u5f0f \u6b63\u9898\u65b9\u6cd5 \uff1a 1\uff09\u7f51\u9875\u5206\u4e3a\u9759\u6001\u7f51\u9875\uff08\u5b58\u7cb9\u7684html\u683c\u5f0f\u7684\uff09\u3001\u52a8\u6001\u7f51\u9875\uff08\u4f7f\u7528AJAX\uff09\uff0c\u5373\u52a8\u6001\u52a0\u8f7d\u7f51\u9875\u7684\u6570\u636e\u4e0d\u4e00\u5b9a\u51fa\u73b0\u6309\u5916html\u4e2d\u7b49\u3002 \u672c\u6587\u722c\u53d6\u7684\u7f51\u9875\u662f\u52a8\u6001\u7f51\u9875\uff0c\u91c7\u7528\u7684\u65b9\u6cd5\u662f\u6d4f\u89c8\u5668\u6e32\u67d3\u5f15\u64ce\uff08\u6e32\u67d3\u5f15\u64ce\u7684\u804c\u8d23\u5c31\u662f\u6e32\u67d3\uff0c\u5373\u5728\u6d4f\u89c8\u5668\u7a97\u53e3\u4e2d\u663e\u793a\u6240\u8bf7\u6c42\u7684\u5185\u5bb9\u3002\u8fd9\u662f\u6bcf\u4e00\u4e2a\u6d4f\u89c8\u5668\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u6240\u4ee5\u6e32\u67d3\u5f15\u64ce\u4e5f\u79f0\u4e3a\u6d4f\u89c8\u5668\u5185\u6838\uff09\u3002\u56e0\u800c\u9700\u8981\u5b89\u88c5selenium\u5e93\uff0c FireFox\u6d4f\u89c8\u5668\uff0c\u4e0b\u8f7dgetodriver\u3002 selenium\u5e93\u4f7f\u7528\u65b9\u6cd5 \uff1a https://blog.csdn.net/weixin_36279318/article/details/79475388 \u8bbf\u95ee\u7f51\u5740url: https://www.biqukan.com/2_2757/1107517.html \uff0c\u9b3c\u5439\u706f\u7684\u94fe\u63a5\u3002 \u9700\u8981\u722c\u53d6\u5185\u5bb9\uff1a\u6807\u9898\u3001\u6587\u672c\u3002 \u6807\u9898\u7684\u5143\u7d20\u7279\u5f81\uff1adiv\uff0cclass = \u201ccontent\u201d\u6216h1 \u6587\u672c\u5143\u7d20\u7279\u5f81\uff1adiv\uff0cid = \u201ccontent\u201d class = \u201cshowtxt\u201d 2\uff09\u901a\u8fc7BeautifulSoup\uff0c\u5b89\u88c5\u6a21\u5757\u540e\uff0c\u83b7\u5f97soup\u5bf9\u8c61\uff0c\u6309\u7167\u4e0a\u9762\u7684\u5143\u7d20\u5c5e\u6027\uff0c\u8c03\u7528\u65b9\u6cd5find_all()\u6216find\u53ef\u4ee5\u6240\u4ee5\u7b26\u5408\u4e0a\u8ff0\u5143\u7d20\u7279\u5f81\u7684**\u5143\u7d20\u5217\u8868\u3002\uff08** https://www.crummy.com/software/BeautifulSoup/bs4/doc.zh/#find-all \uff09 3\uff09\u6839\u636eBeautifulSoup\u624b\u518c\u4e0a\u7684\uff0cget_text\uff08\uff09\u65b9\u6cd5\u83b7\u5f97tag\u6807\u7b7e\u7684\u6587\u672c\u5185\u5bb9\uff0c\u56e0\u4e3a\u83b7\u53d6\u7684\u6587\u672c\u5185\u5bb9\u5b58\u5728\u7a7a\u683c\uff0c\u91c7\u7528\u7684\u7b28\u65b9\u6cd5 \u7528strip\uff08\uff09\u65b9\u6cd5\u53bb\u9664\u7a7a\u683c\uff0c\u8fd4\u56de\u5217\u8868\uff0c\u5e76\u7528\u5b57\u7b26\u4e32+\u65b9\u6cd5\u5c06\u5217\u8868\u7684\u5b57\u7b26\u4e32\u62fc\u63a5\uff0c\u5b8c\u6210\u6587\u672c\u63d0\u53d6\u5de5\u4f5c 4\uff09\u4e0b\u9762\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u722c\u53d6\u6240\u6709\u7ae0\u8282\u6587\u672c\u6570\u636e\u3002 \u6e90\u4ee3\u7801\u5982\u4e0b\uff1a from selenium import webdriver from selenium.webdriver.firefox.firefox_binary import FirefoxBinary from bs4 import BeautifulSoup import time import sys import re caps = webdriver . DesiredCapabilities () . FIREFOX caps [ \"marionette\" ] = False binary = FirefoxBinary ( r 'D:\\Anaconda3\\Scripts\\firefox.exe' ) driver = webdriver . Firefox ( firefox_binary = binary , capabilities = caps ) Debug = 1 MaxTextNum = 100 def singlePageGet ( driver , url ): ''' \u51fd\u6570\u8bf4\u660e\uff1a\u5355\u9875\u63d0\u53d6\u6570\u636e :return:\u5355\u9875\u6807\u9898\u3001\u6587\u672c ''' driver . get ( url ) webData = driver . page_source soup = BeautifulSoup ( webData , 'lxml' ) titlesList = ( soup . find_all ( 'h1' )) textsList = soup . find_all ( 'div' , class_ = \"showtxt\" ) if textsList : #print(titlesList,textsList) titles = titlesList [ 0 ] . get_text () . split () texts = textsList [ 0 ] . get_text () . strip () . split () finalText = '' finalTitle = '' for text in texts : finalText = finalText + text for title in titles : finalTitle = finalTitle + title return finalTitle , finalText else : return def writeToFile ( title , content ): fileName = '\u9b3c\u5439\u706f.txt' with open ( fileName , 'a+' , encoding = 'utf-8' ) as f : f . write ( title ) f . write ( ' \\n ' ) f . write ( content ) f . write ( ' \\n\\n ' ) #8035 urlsAccess = [ 'https://www.biqukan.com/2_2757/ {} .html' . format ( value ) for value in range ( 1108307 , 1108346 , 1 )] #1108346 117517 numing = 0 for url in urlsAccess : if singlePageGet ( driver , url ): titles , texts = singlePageGet ( driver , url ) if titles : writeToFile ( titles , texts ) time . sleep ( 2 ) numing = numing + 1 print ( '\u4e0b\u8f7d\u8fdb\u5ea6\uff1a %4.2f ' % ( numing / len ( urlsAccess ))) else : numing = numing + 1 print ( '\u4e0b\u8f7d\u5b8c\u6210' )","title":"Python\u5b66\u4e60\u2014\u2014\u7f51\u7edc\u722c\u866b\u7b2c\u4e00\u5468-\u4e0b\u8f7d\u5c0f\u8bf4"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/","text":"Python3 \u6807\u51c6\u5e93\u6982\u89c8 \u00b6 \u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3 \u00b6 os\u6a21\u5757\u63d0\u4f9b\u4e86\u4e0d\u5c11\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u8054\u7684\u51fd\u6570\u3002 import os os . getcwd () # \u8fd4\u56de\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55 # 'C:\\\\Python34' os . chdir ( '/server/accesslogs' ) # \u4fee\u6539\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55 os . system ( 'mkdir today' ) # \u6267\u884c\u7cfb\u7edf\u547d\u4ee4 mkdir \u5efa\u8bae\u4f7f\u7528 \"import os\" \u98ce\u683c\u800c\u975e \"from os import *\"\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u968f\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u540c\u800c\u6709\u6240\u53d8\u5316\u7684 os.open() \u4e0d\u4f1a\u8986\u76d6\u5185\u7f6e\u51fd\u6570 open()\u3002 \u5728\u4f7f\u7528 os \u8fd9\u6837\u7684\u5927\u578b\u6a21\u5757\u65f6\u5185\u7f6e\u7684 dir() \u548c help() \u51fd\u6570\u975e\u5e38\u6709\u7528: import os dir ( os ) # returns a list of all module functions> help ( os ) # returns an extensive manual page created from the module's docstrings> \u9488\u5bf9\u65e5\u5e38\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u7ba1\u7406\u4efb\u52a1\uff0c:mod:shutil \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u9ad8\u7ea7\u63a5\u53e3: import shutil shutil . copyfile ( 'data.db' , 'archive.db' ) shutil . move ( '/build/executables' , 'installdir' ) \u6587\u4ef6\u901a\u914d\u7b26 \u00b6 glob\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u4e8e\u4ece\u76ee\u5f55\u901a\u914d\u7b26\u641c\u7d22\u4e2d\u751f\u6210\u6587\u4ef6\u5217\u8868: import glob glob . glob ( '*.py' ) # ['primes.py', 'random.py', 'quote.py'] \u547d\u4ee4\u884c\u53c2\u6570 \u00b6 \u901a\u7528\u5de5\u5177\u811a\u672c\u7ecf\u5e38\u8c03\u7528\u547d\u4ee4\u884c\u53c2\u6570\u3002\u8fd9\u4e9b\u547d\u4ee4\u884c\u53c2\u6570\u4ee5\u94fe\u8868\u5f62\u5f0f\u5b58\u50a8\u4e8e sys \u6a21\u5757\u7684 argv \u53d8\u91cf\u3002\u4f8b\u5982\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c \"python demo.py one two three\" \u540e\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u8f93\u51fa\u7ed3\u679c: import sys print ( sys . argv ) [ 'demo.py' , 'one' , 'two' , 'three' ] \u9519\u8bef\u8f93\u51fa\u91cd\u5b9a\u5411\u548c\u7a0b\u5e8f\u7ec8\u6b62 \u00b6 sys \u8fd8\u6709 stdin\uff0cstdout \u548c stderr \u5c5e\u6027\uff0c\u5373\u4f7f\u5728 stdout \u88ab\u91cd\u5b9a\u5411\u65f6\uff0c\u540e\u8005\u4e5f\u53ef\u4ee5\u7528\u4e8e\u663e\u793a\u8b66\u544a\u548c\u9519\u8bef\u4fe1\u606f\u3002 sys . stderr . write ( 'Warning, log file not found starting a new one \\n ' ) # Warning, log file not found starting a new one \u5927\u591a\u811a\u672c\u7684\u5b9a\u5411\u7ec8\u6b62\u90fd\u4f7f\u7528 \"sys.exit()\"\u3002 \u5b57\u7b26\u4e32\u6b63\u5219\u5339\u914d \u00b6 re\u6a21\u5757\u4e3a\u9ad8\u7ea7\u5b57\u7b26\u4e32\u5904\u7406\u63d0\u4f9b\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u5de5\u5177\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u5339\u914d\u548c\u5904\u7406\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u63d0\u4f9b\u4e86\u7b80\u6d01\u3001\u4f18\u5316\u7684\u89e3\u51b3\u65b9\u6848: import re re . findall ( r '\\bf[a-z]*' , 'which foot or hand fell fastest' ) [ 'foot' , 'fell' , 'fastest' ] re . sub ( r '(\\b[a-z]+) \\1' , r '\\1' , 'cat in the the hat' ) 'cat in the hat' \u5982\u679c\u53ea\u9700\u8981\u7b80\u5355\u7684\u529f\u80fd\uff0c\u5e94\u8be5\u9996\u5148\u8003\u8651\u5b57\u7b26\u4e32\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u975e\u5e38\u7b80\u5355\uff0c\u6613\u4e8e\u9605\u8bfb\u548c\u8c03\u8bd5: 'tea for too' . replace ( 'too' , 'two' ) 'tea for two' \u6570\u5b66 \u00b6 math\u6a21\u5757\u4e3a\u6d6e\u70b9\u8fd0\u7b97\u63d0\u4f9b\u4e86\u5bf9\u5e95\u5c42C\u51fd\u6570\u5e93\u7684\u8bbf\u95ee: import math math . cos ( math . pi / 4 ) # 0.70710678118654757 math . log ( 1024 , 2 ) # 10.0 random\u63d0\u4f9b\u4e86\u751f\u6210\u968f\u673a\u6570\u7684\u5de5\u5177\u3002 import random random . choice ([ 'apple' , 'pear' , 'banana' ]) 'apple' random . sample ( range ( 100 ), 10 ) # sampling without replacement [ 30 , 83 , 16 , 4 , 8 , 81 , 41 , 50 , 18 , 33 ] random . random () # random float 0.17970987693706186 random . randrange ( 6 ) # random integer chosen from range(6) 4 \u8bbf\u95ee \u4e92\u8054\u7f51 \u00b6 \u6709\u51e0\u4e2a\u6a21\u5757\u7528\u4e8e\u8bbf\u95ee\u4e92\u8054\u7f51\u4ee5\u53ca\u5904\u7406\u7f51\u7edc\u901a\u4fe1\u534f\u8bae\u3002 \u5176\u4e2d\u6700\u7b80\u5355\u7684\u4e24\u4e2a\u662f\u7528\u4e8e\u5904\u7406\u4ece urls \u63a5\u6536\u7684\u6570\u636e\u7684 urllib.request \u4ee5\u53ca\u7528\u4e8e\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7684 smtplib: from urllib.request import urlopen for line in urlopen ( 'http://tycho.usno.navy.mil/cgi-bin/timer.pl' ): ... line = line . decode ( 'utf-8' ) # Decoding the binary data to text. ... if 'EST' in line or 'EDT' in line : # look for Eastern Time ... print ( line ) < BR > Nov . 25 , 09 : 43 : 32 PM EST import smtplib server = smtplib . SMTP ( 'localhost' ) server . sendmail ( 'soothsayer@example.org' , 'jcaesar@example.org' , ... \"\"\"To: jcaesar@example.org ... From: soothsayer@example.org ... ... Beware the Ides of March. ... \"\"\" ) server . quit () \u6ce8\u610f\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u9700\u8981\u672c\u5730\u6709\u4e00\u4e2a\u5728\u8fd0\u884c\u7684\u90ae\u4ef6\u670d\u52a1\u5668\u3002 \u65e5\u671f\u548c\u65f6\u95f4 \u00b6 datetime\u6a21\u5757\u4e3a\u65e5\u671f\u548c\u65f6\u95f4\u5904\u7406\u540c\u65f6\u63d0\u4f9b\u4e86\u7b80\u5355\u548c\u590d\u6742\u7684\u65b9\u6cd5\u3002 \u652f\u6301\u65e5\u671f\u548c\u65f6\u95f4\u7b97\u6cd5\u7684\u540c\u65f6\uff0c\u5b9e\u73b0\u7684\u91cd\u70b9\u653e\u5728\u66f4\u6709\u6548\u7684\u5904\u7406\u548c\u683c\u5f0f\u5316\u8f93\u51fa\u3002 \u8be5\u6a21\u5757\u8fd8\u652f\u6301\u65f6\u533a\u5904\u7406: # dates are easily constructed and formatted from datetime import date now = date . today () now datetime . date ( 2003 , 12 , 2 ) now . strftime ( \"%m- %d -%y. %d %b %Y is a %A on the %d day of %B.\" ) '12-02-03. 02 Dec 2003 is a Tuesday on the 02 day of December.' # dates support calendar arithmetic birthday = date ( 1964 , 7 , 31 ) age = now - birthday age . days 14368 \u6570\u636e\u538b\u7f29 \u00b6 \u4ee5\u4e0b\u6a21\u5757\u76f4\u63a5\u652f\u6301\u901a\u7528\u7684\u6570\u636e\u6253\u5305\u548c\u538b\u7f29\u683c\u5f0f\uff1azlib\uff0cgzip\uff0cbz2\uff0czipfile\uff0c\u4ee5\u53ca tarfile\u3002 import zlib s = b 'witch which has which witches wrist watch' len ( s ) 41 t = zlib . compress ( s ) len ( t ) 37 zlib . decompress ( t ) b 'witch which has which witches wrist watch' zlib . crc32 ( s ) 226805979 \u6027\u80fd\u5ea6\u91cf \u00b6 \u6709\u4e9b\u7528\u6237\u5bf9\u4e86\u89e3\u89e3\u51b3\u540c\u4e00\u95ee\u9898\u7684\u4e0d\u540c\u65b9\u6cd5\u4e4b\u95f4\u7684\u6027\u80fd\u5dee\u5f02\u5f88\u611f\u5174\u8da3\u3002Python \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5ea6\u91cf\u5de5\u5177\uff0c\u4e3a\u8fd9\u4e9b\u95ee\u9898\u63d0\u4f9b\u4e86\u76f4\u63a5\u7b54\u6848\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u5143\u7ec4\u5c01\u88c5\u548c\u62c6\u5c01\u6765\u4ea4\u6362\u5143\u7d20\u770b\u8d77\u6765\u8981\u6bd4\u4f7f\u7528\u4f20\u7edf\u7684\u65b9\u6cd5\u8981\u8bf1\u4eba\u7684\u591a,timeit \u8bc1\u660e\u4e86\u73b0\u4ee3\u7684\u65b9\u6cd5\u66f4\u5feb\u4e00\u4e9b\u3002 from timeit import Timer Timer ( 't=a; a=b; b=t' , 'a=1; b=2' ) . timeit () 0.57535828626024577 Timer ( 'a,b = b,a' , 'a=1; b=2' ) . timeit () 0.54962537085770791 \u76f8\u5bf9\u4e8e timeit \u7684\u7ec6\u7c92\u5ea6\uff0c:mod:profile \u548c pstats \u6a21\u5757\u63d0\u4f9b\u4e86\u9488\u5bf9\u66f4\u5927\u4ee3\u7801\u5757\u7684\u65f6\u95f4\u5ea6\u91cf\u5de5\u5177\u3002 \u6d4b\u8bd5\u6a21\u5757 \u00b6 \u5f00\u53d1\u9ad8\u8d28\u91cf\u8f6f\u4ef6\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u4e3a\u6bcf\u4e00\u4e2a\u51fd\u6570\u5f00\u53d1\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5e76\u4e14\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7ecf\u5e38\u8fdb\u884c\u6d4b\u8bd5 doctest\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5de5\u5177\uff0c\u626b\u63cf\u6a21\u5757\u5e76\u6839\u636e\u7a0b\u5e8f\u4e2d\u5185\u5d4c\u7684\u6587\u6863\u5b57\u7b26\u4e32\u6267\u884c\u6d4b\u8bd5\u3002 \u6d4b\u8bd5\u6784\u9020\u5982\u540c\u7b80\u5355\u7684\u5c06\u5b83\u7684\u8f93\u51fa\u7ed3\u679c\u526a\u5207\u5e76\u7c98\u8d34\u5230\u6587\u6863\u5b57\u7b26\u4e32\u4e2d\u3002 \u901a\u8fc7\u7528\u6237\u63d0\u4f9b\u7684\u4f8b\u5b50\uff0c\u5b83\u5f3a\u5316\u4e86\u6587\u6863\uff0c\u5141\u8bb8 doctest \u6a21\u5757\u786e\u8ba4\u4ee3\u7801\u7684\u7ed3\u679c\u662f\u5426\u4e0e\u6587\u6863\u4e00\u81f4: def average ( values ): \"\"\"Computes the arithmetic mean of a list of numbers. print(average([20, 30, 70])) 40.0 \"\"\" return sum ( values ) / len ( values ) import doctest doctest . testmod () # \u81ea\u52a8\u9a8c\u8bc1\u5d4c\u5165\u6d4b\u8bd5 unittest\u6a21\u5757\u4e0d\u50cf doctest\u6a21\u5757\u90a3\u4e48\u5bb9\u6613\u4f7f\u7528\uff0c\u4e0d\u8fc7\u5b83\u53ef\u4ee5\u5728\u4e00\u4e2a\u72ec\u7acb\u7684\u6587\u4ef6\u91cc\u63d0\u4f9b\u4e00\u4e2a\u66f4\u5168\u9762\u7684\u6d4b\u8bd5\u96c6: import unittest class TestStatisticalFunctions ( unittest . TestCase ): def test_average ( self ): self . assertEqual ( average ([ 20 , 30 , 70 ]), 40.0 ) self . assertEqual ( round ( average ([ 1 , 5 , 7 ]), 1 ), 4.3 ) self . assertRaises ( ZeroDivisionError , average , []) self . assertRaises ( TypeError , average , 20 , 30 , 70 ) unittest . main () # Calling from the command line invokes all tests","title":"Python3 \u6807\u51c6\u5e93\u6982\u89c8"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#python3","text":"","title":"Python3 \u6807\u51c6\u5e93\u6982\u89c8"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#_1","text":"os\u6a21\u5757\u63d0\u4f9b\u4e86\u4e0d\u5c11\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u76f8\u5173\u8054\u7684\u51fd\u6570\u3002 import os os . getcwd () # \u8fd4\u56de\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55 # 'C:\\\\Python34' os . chdir ( '/server/accesslogs' ) # \u4fee\u6539\u5f53\u524d\u7684\u5de5\u4f5c\u76ee\u5f55 os . system ( 'mkdir today' ) # \u6267\u884c\u7cfb\u7edf\u547d\u4ee4 mkdir \u5efa\u8bae\u4f7f\u7528 \"import os\" \u98ce\u683c\u800c\u975e \"from os import *\"\u3002\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u968f\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u540c\u800c\u6709\u6240\u53d8\u5316\u7684 os.open() \u4e0d\u4f1a\u8986\u76d6\u5185\u7f6e\u51fd\u6570 open()\u3002 \u5728\u4f7f\u7528 os \u8fd9\u6837\u7684\u5927\u578b\u6a21\u5757\u65f6\u5185\u7f6e\u7684 dir() \u548c help() \u51fd\u6570\u975e\u5e38\u6709\u7528: import os dir ( os ) # returns a list of all module functions> help ( os ) # returns an extensive manual page created from the module's docstrings> \u9488\u5bf9\u65e5\u5e38\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u7ba1\u7406\u4efb\u52a1\uff0c:mod:shutil \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u4e8e\u4f7f\u7528\u7684\u9ad8\u7ea7\u63a5\u53e3: import shutil shutil . copyfile ( 'data.db' , 'archive.db' ) shutil . move ( '/build/executables' , 'installdir' )","title":"\u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#_2","text":"glob\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u4e8e\u4ece\u76ee\u5f55\u901a\u914d\u7b26\u641c\u7d22\u4e2d\u751f\u6210\u6587\u4ef6\u5217\u8868: import glob glob . glob ( '*.py' ) # ['primes.py', 'random.py', 'quote.py']","title":"\u6587\u4ef6\u901a\u914d\u7b26"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#_3","text":"\u901a\u7528\u5de5\u5177\u811a\u672c\u7ecf\u5e38\u8c03\u7528\u547d\u4ee4\u884c\u53c2\u6570\u3002\u8fd9\u4e9b\u547d\u4ee4\u884c\u53c2\u6570\u4ee5\u94fe\u8868\u5f62\u5f0f\u5b58\u50a8\u4e8e sys \u6a21\u5757\u7684 argv \u53d8\u91cf\u3002\u4f8b\u5982\u5728\u547d\u4ee4\u884c\u4e2d\u6267\u884c \"python demo.py one two three\" \u540e\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u8f93\u51fa\u7ed3\u679c: import sys print ( sys . argv ) [ 'demo.py' , 'one' , 'two' , 'three' ]","title":"\u547d\u4ee4\u884c\u53c2\u6570"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#_4","text":"sys \u8fd8\u6709 stdin\uff0cstdout \u548c stderr \u5c5e\u6027\uff0c\u5373\u4f7f\u5728 stdout \u88ab\u91cd\u5b9a\u5411\u65f6\uff0c\u540e\u8005\u4e5f\u53ef\u4ee5\u7528\u4e8e\u663e\u793a\u8b66\u544a\u548c\u9519\u8bef\u4fe1\u606f\u3002 sys . stderr . write ( 'Warning, log file not found starting a new one \\n ' ) # Warning, log file not found starting a new one \u5927\u591a\u811a\u672c\u7684\u5b9a\u5411\u7ec8\u6b62\u90fd\u4f7f\u7528 \"sys.exit()\"\u3002","title":"\u9519\u8bef\u8f93\u51fa\u91cd\u5b9a\u5411\u548c\u7a0b\u5e8f\u7ec8\u6b62"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#_5","text":"re\u6a21\u5757\u4e3a\u9ad8\u7ea7\u5b57\u7b26\u4e32\u5904\u7406\u63d0\u4f9b\u4e86\u6b63\u5219\u8868\u8fbe\u5f0f\u5de5\u5177\u3002\u5bf9\u4e8e\u590d\u6742\u7684\u5339\u914d\u548c\u5904\u7406\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\u63d0\u4f9b\u4e86\u7b80\u6d01\u3001\u4f18\u5316\u7684\u89e3\u51b3\u65b9\u6848: import re re . findall ( r '\\bf[a-z]*' , 'which foot or hand fell fastest' ) [ 'foot' , 'fell' , 'fastest' ] re . sub ( r '(\\b[a-z]+) \\1' , r '\\1' , 'cat in the the hat' ) 'cat in the hat' \u5982\u679c\u53ea\u9700\u8981\u7b80\u5355\u7684\u529f\u80fd\uff0c\u5e94\u8be5\u9996\u5148\u8003\u8651\u5b57\u7b26\u4e32\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u975e\u5e38\u7b80\u5355\uff0c\u6613\u4e8e\u9605\u8bfb\u548c\u8c03\u8bd5: 'tea for too' . replace ( 'too' , 'two' ) 'tea for two'","title":"\u5b57\u7b26\u4e32\u6b63\u5219\u5339\u914d"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#_6","text":"math\u6a21\u5757\u4e3a\u6d6e\u70b9\u8fd0\u7b97\u63d0\u4f9b\u4e86\u5bf9\u5e95\u5c42C\u51fd\u6570\u5e93\u7684\u8bbf\u95ee: import math math . cos ( math . pi / 4 ) # 0.70710678118654757 math . log ( 1024 , 2 ) # 10.0 random\u63d0\u4f9b\u4e86\u751f\u6210\u968f\u673a\u6570\u7684\u5de5\u5177\u3002 import random random . choice ([ 'apple' , 'pear' , 'banana' ]) 'apple' random . sample ( range ( 100 ), 10 ) # sampling without replacement [ 30 , 83 , 16 , 4 , 8 , 81 , 41 , 50 , 18 , 33 ] random . random () # random float 0.17970987693706186 random . randrange ( 6 ) # random integer chosen from range(6) 4","title":"\u6570\u5b66"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#_7","text":"\u6709\u51e0\u4e2a\u6a21\u5757\u7528\u4e8e\u8bbf\u95ee\u4e92\u8054\u7f51\u4ee5\u53ca\u5904\u7406\u7f51\u7edc\u901a\u4fe1\u534f\u8bae\u3002 \u5176\u4e2d\u6700\u7b80\u5355\u7684\u4e24\u4e2a\u662f\u7528\u4e8e\u5904\u7406\u4ece urls \u63a5\u6536\u7684\u6570\u636e\u7684 urllib.request \u4ee5\u53ca\u7528\u4e8e\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7684 smtplib: from urllib.request import urlopen for line in urlopen ( 'http://tycho.usno.navy.mil/cgi-bin/timer.pl' ): ... line = line . decode ( 'utf-8' ) # Decoding the binary data to text. ... if 'EST' in line or 'EDT' in line : # look for Eastern Time ... print ( line ) < BR > Nov . 25 , 09 : 43 : 32 PM EST import smtplib server = smtplib . SMTP ( 'localhost' ) server . sendmail ( 'soothsayer@example.org' , 'jcaesar@example.org' , ... \"\"\"To: jcaesar@example.org ... From: soothsayer@example.org ... ... Beware the Ides of March. ... \"\"\" ) server . quit () \u6ce8\u610f\u7b2c\u4e8c\u4e2a\u4f8b\u5b50\u9700\u8981\u672c\u5730\u6709\u4e00\u4e2a\u5728\u8fd0\u884c\u7684\u90ae\u4ef6\u670d\u52a1\u5668\u3002","title":"\u8bbf\u95ee \u4e92\u8054\u7f51"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#_8","text":"datetime\u6a21\u5757\u4e3a\u65e5\u671f\u548c\u65f6\u95f4\u5904\u7406\u540c\u65f6\u63d0\u4f9b\u4e86\u7b80\u5355\u548c\u590d\u6742\u7684\u65b9\u6cd5\u3002 \u652f\u6301\u65e5\u671f\u548c\u65f6\u95f4\u7b97\u6cd5\u7684\u540c\u65f6\uff0c\u5b9e\u73b0\u7684\u91cd\u70b9\u653e\u5728\u66f4\u6709\u6548\u7684\u5904\u7406\u548c\u683c\u5f0f\u5316\u8f93\u51fa\u3002 \u8be5\u6a21\u5757\u8fd8\u652f\u6301\u65f6\u533a\u5904\u7406: # dates are easily constructed and formatted from datetime import date now = date . today () now datetime . date ( 2003 , 12 , 2 ) now . strftime ( \"%m- %d -%y. %d %b %Y is a %A on the %d day of %B.\" ) '12-02-03. 02 Dec 2003 is a Tuesday on the 02 day of December.' # dates support calendar arithmetic birthday = date ( 1964 , 7 , 31 ) age = now - birthday age . days 14368","title":"\u65e5\u671f\u548c\u65f6\u95f4"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#_9","text":"\u4ee5\u4e0b\u6a21\u5757\u76f4\u63a5\u652f\u6301\u901a\u7528\u7684\u6570\u636e\u6253\u5305\u548c\u538b\u7f29\u683c\u5f0f\uff1azlib\uff0cgzip\uff0cbz2\uff0czipfile\uff0c\u4ee5\u53ca tarfile\u3002 import zlib s = b 'witch which has which witches wrist watch' len ( s ) 41 t = zlib . compress ( s ) len ( t ) 37 zlib . decompress ( t ) b 'witch which has which witches wrist watch' zlib . crc32 ( s ) 226805979","title":"\u6570\u636e\u538b\u7f29"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#_10","text":"\u6709\u4e9b\u7528\u6237\u5bf9\u4e86\u89e3\u89e3\u51b3\u540c\u4e00\u95ee\u9898\u7684\u4e0d\u540c\u65b9\u6cd5\u4e4b\u95f4\u7684\u6027\u80fd\u5dee\u5f02\u5f88\u611f\u5174\u8da3\u3002Python \u63d0\u4f9b\u4e86\u4e00\u4e2a\u5ea6\u91cf\u5de5\u5177\uff0c\u4e3a\u8fd9\u4e9b\u95ee\u9898\u63d0\u4f9b\u4e86\u76f4\u63a5\u7b54\u6848\u3002 \u4f8b\u5982\uff0c\u4f7f\u7528\u5143\u7ec4\u5c01\u88c5\u548c\u62c6\u5c01\u6765\u4ea4\u6362\u5143\u7d20\u770b\u8d77\u6765\u8981\u6bd4\u4f7f\u7528\u4f20\u7edf\u7684\u65b9\u6cd5\u8981\u8bf1\u4eba\u7684\u591a,timeit \u8bc1\u660e\u4e86\u73b0\u4ee3\u7684\u65b9\u6cd5\u66f4\u5feb\u4e00\u4e9b\u3002 from timeit import Timer Timer ( 't=a; a=b; b=t' , 'a=1; b=2' ) . timeit () 0.57535828626024577 Timer ( 'a,b = b,a' , 'a=1; b=2' ) . timeit () 0.54962537085770791 \u76f8\u5bf9\u4e8e timeit \u7684\u7ec6\u7c92\u5ea6\uff0c:mod:profile \u548c pstats \u6a21\u5757\u63d0\u4f9b\u4e86\u9488\u5bf9\u66f4\u5927\u4ee3\u7801\u5757\u7684\u65f6\u95f4\u5ea6\u91cf\u5de5\u5177\u3002","title":"\u6027\u80fd\u5ea6\u91cf"},{"location":"06-third-part-lib/Python3%20%E6%A0%87%E5%87%86%E5%BA%93%E6%A6%82%E8%A7%88/#_11","text":"\u5f00\u53d1\u9ad8\u8d28\u91cf\u8f6f\u4ef6\u7684\u65b9\u6cd5\u4e4b\u4e00\u662f\u4e3a\u6bcf\u4e00\u4e2a\u51fd\u6570\u5f00\u53d1\u6d4b\u8bd5\u4ee3\u7801\uff0c\u5e76\u4e14\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u7ecf\u5e38\u8fdb\u884c\u6d4b\u8bd5 doctest\u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5de5\u5177\uff0c\u626b\u63cf\u6a21\u5757\u5e76\u6839\u636e\u7a0b\u5e8f\u4e2d\u5185\u5d4c\u7684\u6587\u6863\u5b57\u7b26\u4e32\u6267\u884c\u6d4b\u8bd5\u3002 \u6d4b\u8bd5\u6784\u9020\u5982\u540c\u7b80\u5355\u7684\u5c06\u5b83\u7684\u8f93\u51fa\u7ed3\u679c\u526a\u5207\u5e76\u7c98\u8d34\u5230\u6587\u6863\u5b57\u7b26\u4e32\u4e2d\u3002 \u901a\u8fc7\u7528\u6237\u63d0\u4f9b\u7684\u4f8b\u5b50\uff0c\u5b83\u5f3a\u5316\u4e86\u6587\u6863\uff0c\u5141\u8bb8 doctest \u6a21\u5757\u786e\u8ba4\u4ee3\u7801\u7684\u7ed3\u679c\u662f\u5426\u4e0e\u6587\u6863\u4e00\u81f4: def average ( values ): \"\"\"Computes the arithmetic mean of a list of numbers. print(average([20, 30, 70])) 40.0 \"\"\" return sum ( values ) / len ( values ) import doctest doctest . testmod () # \u81ea\u52a8\u9a8c\u8bc1\u5d4c\u5165\u6d4b\u8bd5 unittest\u6a21\u5757\u4e0d\u50cf doctest\u6a21\u5757\u90a3\u4e48\u5bb9\u6613\u4f7f\u7528\uff0c\u4e0d\u8fc7\u5b83\u53ef\u4ee5\u5728\u4e00\u4e2a\u72ec\u7acb\u7684\u6587\u4ef6\u91cc\u63d0\u4f9b\u4e00\u4e2a\u66f4\u5168\u9762\u7684\u6d4b\u8bd5\u96c6: import unittest class TestStatisticalFunctions ( unittest . TestCase ): def test_average ( self ): self . assertEqual ( average ([ 20 , 30 , 70 ]), 40.0 ) self . assertEqual ( round ( average ([ 1 , 5 , 7 ]), 1 ), 4.3 ) self . assertRaises ( ZeroDivisionError , average , []) self . assertRaises ( TypeError , average , 20 , 30 , 70 ) unittest . main () # Calling from the command line invokes all tests","title":"\u6d4b\u8bd5\u6a21\u5757"},{"location":"06-third-part-lib/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/","text":"Python3\u7f51\u7edc\u722c\u866b\u5feb\u901f\u5165\u95e8\u5b9e\u6218\u89e3\u6790 \u00b6 https://blog.csdn.net/c406495762/article/details/78123502 \u7f6e\u9876 Jack-Cui 2020-04-23 09:35:59 114198 \u6536\u85cf 354 \u5206\u7c7b\u4e13\u680f\uff1a Python Python3\u7f51\u7edc\u722c\u866b\u5165\u95e8 \u7248\u6743 \u8f6c\u8f7d\u8bf7\u6ce8\u660e\u4f5c\u8005\u548c\u51fa\u5904\uff1a http://blog.csdn.net/c406495762 Github\u4ee3\u7801\u83b7\u53d6\uff1a https://github.com/Jack-Cherish/python-spider Python\u7248\u672c\uff1a Python3.x \u8fd0\u884c\u5e73\u53f0\uff1a Windows IDE\uff1a Sublime text3 \u66f4\u591a\u6559\u7a0b\uff0c\u8bf7\u67e5\u770b\uff1a https://cuijiahua.com/blog/spider/ \u4e00 \u524d\u8a00 \u00b6 **\u5f3a\u70c8\u5efa\u8bae\uff1a**\u8bf7\u5728\u7535\u8111\u7684\u966a\u540c\u4e0b\uff0c\u9605\u8bfb\u672c\u6587\u3002\u672c\u6587\u4ee5\u5b9e\u6218\u4e3a\u4e3b\uff0c\u9605\u8bfb\u8fc7\u7a0b\u5982\u7a0d\u6709\u4e0d\u9002\uff0c\u8fd8\u671b\u591a\u52a0\u7ec3\u4e60\u3002 \u672c\u6587\u7684\u5b9e\u6218\u5185\u5bb9\u6709\uff1a \u7f51\u7edc\u5c0f\u8bf4\u4e0b\u8f7d(\u9759\u6001\u7f51\u7ad9) \u4f18\u7f8e\u58c1\u7eb8\u4e0b\u8f7d(\u52a8\u6001\u7f51\u7ad9) \u89c6\u9891\u4e0b\u8f7d 2020\u5e74\uff0c\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\uff0c\u5c3d\u5728\u5fae\u4fe1\u516c\u4f17\u53f7\uff0c\u6b22\u8fce\u60a8\u7684\u5173\u6ce8\uff1a \u4e8c \u7f51\u7edc\u722c\u866b\u7b80\u4ecb \u00b6 \u7f51\u7edc\u722c\u866b\uff0c\u4e5f\u53eb\u7f51\u7edc\u8718\u86db(Web Spider)\u3002\u5b83\u6839\u636e\u7f51\u9875\u5730\u5740(URL)\u722c\u53d6\u7f51\u9875\u5185\u5bb9\uff0c\u800c\u7f51\u9875\u5730\u5740(URL)\u5c31\u662f\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u7684\u7f51\u7ad9\u94fe\u63a5\u3002\u6bd4\u5982\uff1a https://www.baidu.com/ \uff0c\u5b83\u5c31\u662f\u4e00\u4e2aURL\u3002 \u5728\u8bb2\u89e3\u722c\u866b\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u5b66\u4e60\u4e00\u9879\u5199\u722c\u866b\u7684\u5fc5\u5907\u6280\u80fd\uff1a\u5ba1\u67e5\u5143\u7d20\uff08\u5982\u679c\u5df2\u638c\u63e1\uff0c\u53ef\u8df3\u8fc7\u6b64\u90e8\u5206\u5185\u5bb9\uff09\u3002 1 \u5ba1\u67e5\u5143\u7d20 \u00b6 \u5728\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\u8f93\u5165URL\u5730\u5740\uff0c\u5728\u7f51\u9875\u5904\u53f3\u952e\u5355\u51fb\uff0c\u627e\u5230\u68c0\u67e5\u3002(\u4e0d\u540c\u6d4f\u89c8\u5668\u7684\u53eb\u6cd5\u4e0d\u540c\uff0cChrome\u6d4f\u89c8\u5668\u53eb\u505a\u68c0\u67e5\uff0cFirefox\u6d4f\u89c8\u5668\u53eb\u505a\u67e5\u770b\u5143\u7d20\uff0c\u4f46\u662f\u529f\u80fd\u90fd\u662f\u76f8\u540c\u7684) \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u53f3\u4fa7\u51fa\u73b0\u4e86\u4e00\u5927\u63a8\u4ee3\u7801\uff0c\u8fd9\u4e9b\u4ee3\u7801\u5c31\u53eb\u505aHTML\u3002\u4ec0\u4e48\u662fHTML\uff1f\u4e3e\u4e2a\u5bb9\u6613\u7406\u89e3\u7684\u4f8b\u5b50\uff1a\u6211\u4eec\u7684\u57fa\u56e0\u51b3\u5b9a\u4e86\u6211\u4eec\u7684\u539f\u59cb\u5bb9\u8c8c\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u7684HTML\u51b3\u5b9a\u4e86\u7f51\u7ad9\u7684\u539f\u59cb\u5bb9\u8c8c\u3002 \u4e3a\u5565\u8bf4\u662f\u539f\u59cb\u5bb9\u8c8c\u5462\uff1f\u56e0\u4e3a\u4eba\u53ef\u4ee5\u6574\u5bb9\u554a\uff01\u624e\u5fc3\u4e86\uff0c\u6709\u6728\u6709\uff1f\u90a3\u7f51\u7ad9\u4e5f\u53ef\u4ee5\"\u6574\u5bb9\"\u5417\uff1f\u53ef\u4ee5\uff01\u8bf7\u770b\u4e0b\u56fe\uff1a \u6211\u80fd\u6709\u8fd9\u4e48\u591a\u94b1\u5417\uff1f\u663e\u7136\u4e0d\u53ef\u80fd\u3002\u6211\u662f\u600e\u4e48\u7ed9\u7f51\u7ad9\"\u6574\u5bb9\"\u7684\u5462\uff1f\u5c31\u662f\u901a\u8fc7\u4fee\u6539\u670d\u52a1\u5668\u8fd4\u56de\u7684HTML\u4fe1\u606f\u3002\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u662f\"\u6574\u5bb9\u5927\u5e08\"\uff0c\u53ef\u4ee5\u4fee\u6539\u9875\u9762\u4fe1\u606f\u3002\u6211\u4eec\u5728\u9875\u9762\u7684\u54ea\u4e2a\u4f4d\u7f6e\u70b9\u51fb\u5ba1\u67e5\u5143\u7d20\uff0c\u6d4f\u89c8\u5668\u5c31\u4f1a\u4e3a\u6211\u4eec\u5b9a\u4f4d\u5230\u76f8\u5e94\u7684HTML\u4f4d\u7f6e\uff0c\u8fdb\u800c\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u66f4\u6539HTML\u4fe1\u606f\u3002 **\u518d\u4e3e\u4e2a\u5c0f\u4f8b\u5b50\uff1a**\u6211\u4eec\u90fd\u77e5\u9053\uff0c\u4f7f\u7528\u6d4f\u89c8\u5668\"\u8bb0\u4f4f\u5bc6\u7801\"\u7684\u529f\u80fd\uff0c\u5bc6\u7801\u4f1a\u53d8\u6210\u4e00\u5806\u5c0f\u9ed1\u70b9\uff0c\u662f\u4e0d\u53ef\u89c1\u7684\u3002\u53ef\u4ee5\u8ba9\u5bc6\u7801\u663e\u793a\u51fa\u6765\u5417\uff1f\u53ef\u4ee5\uff0c\u53ea\u9700\u7ed9\u9875\u9762\"\u52a8\u4e2a\u5c0f\u624b\u672f\"\uff01\u4ee5\u6dd8\u5b9d\u4e3a\u4f8b\uff0c\u5728\u8f93\u5165\u5bc6\u7801\u6846\u5904\u53f3\u952e\uff0c\u70b9\u51fb\u68c0\u67e5\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u6d4f\u89c8\u5668\u4e3a\u6211\u4eec\u81ea\u52a8\u5b9a\u4f4d\u5230\u4e86\u76f8\u5e94\u7684HTML\u4f4d\u7f6e\u3002\u5c06\u4e0b\u56fe\u4e2d\u7684password\u5c5e\u6027\u503c\u6539\u4e3atext\u5c5e\u6027\u503c(\u76f4\u63a5\u5728\u53f3\u4fa7\u4ee3\u7801\u5904\u4fee\u6539)\uff1a \u6211\u4eec\u8ba9\u6d4f\u89c8\u5668\u8bb0\u4f4f\u7684\u5bc6\u7801\u5c31\u8fd9\u6837\u663e\u73b0\u51fa\u6765\u4e86\uff1a \u8bf4\u8fd9\u4e48\u591a\uff0c\u4ec0\u4e48\u610f\u601d\u5462\uff1f**\u6d4f\u89c8\u5668\u5c31\u662f\u4f5c\u4e3a\u5ba2\u6237\u7aef\u4ece\u670d\u52a1\u5668\u7aef\u83b7\u53d6\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u4fe1\u606f\u89e3\u6790\uff0c\u5e76\u5c55\u793a\u7ed9\u6211\u4eec\u7684\u3002**\u6211\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u4fee\u6539HTML\u4fe1\u606f\uff0c\u4e3a\u7f51\u9875\"\u6574\u5bb9\"\uff0c\u4f46\u662f\u6211\u4eec\u4fee\u6539\u7684\u4fe1\u606f\u4e0d\u4f1a\u56de\u4f20\u5230\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u5b58\u50a8\u7684HTML\u4fe1\u606f\u4e0d\u4f1a\u6539\u53d8\u3002\u5237\u65b0\u4e00\u4e0b\u754c\u9762\uff0c\u9875\u9762\u8fd8\u4f1a\u56de\u5230\u539f\u672c\u7684\u6837\u5b50\u3002\u8fd9\u5c31\u8ddf\u4eba\u6574\u5bb9\u4e00\u6837\uff0c\u6211\u4eec\u80fd\u6539\u53d8\u4e00\u4e9b\u8868\u9762\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u4e0d\u80fd\u6539\u53d8\u6211\u4eec\u7684\u57fa\u56e0\u3002 2 \u7b80\u5355\u5b9e\u4f8b \u00b6 \u7f51\u7edc\u722c\u866b\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u6839\u636eURL\uff0c\u83b7\u53d6\u7f51\u9875\u7684HTML\u4fe1\u606f\u3002\u5728Python3\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528urllib.request\u548crequests\u8fdb\u884c\u7f51\u9875\u722c\u53d6\u3002 urllib\u5e93\u662fpython\u5185\u7f6e\u7684\uff0c\u65e0\u9700\u6211\u4eec\u989d\u5916\u5b89\u88c5\uff0c\u53ea\u8981\u5b89\u88c5\u4e86Python\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u5e93\u3002 requests\u5e93\u662f\u7b2c\u4e09\u65b9\u5e93\uff0c\u9700\u8981\u6211\u4eec\u81ea\u5df1\u5b89\u88c5\u3002 requests\u5e93\u5f3a\u5927\u597d\u7528\uff0c\u6240\u4ee5\u672c\u6587\u4f7f\u7528requests\u5e93\u83b7\u53d6\u7f51\u9875\u7684HTML\u4fe1\u606f\u3002requests\u5e93\u7684github\u5730\u5740\uff1a https://github.com/requests/requests (1) requests\u5b89\u88c5 \u5728cmd\u4e2d\uff0c\u4f7f\u7528\u5982\u4e0b\u6307\u4ee4\u5b89\u88c5requests\uff1a pip install requests easy_install requests (2) \u7b80\u5355\u5b9e\u4f8b requests\u5e93\u7684\u57fa\u7840\u65b9\u6cd5\u5982\u4e0b\uff1a \u5b98\u65b9\u4e2d\u6587\u6559\u7a0b\u5730\u5740\uff1a http://docs.python-requests.org/zh_CN/latest/user/quickstart.html requests\u5e93\u7684\u5f00\u53d1\u8005\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u4e2d\u6587\u6559\u7a0b\uff0c\u67e5\u8be2\u8d77\u6765\u5f88\u65b9\u4fbf\u3002\u672c\u6587\u4e0d\u4f1a\u5bf9\u5176\u6240\u6709\u5185\u5bb9\u8fdb\u884c\u8bb2\u89e3\uff0c\u6458\u53d6\u5176\u90e8\u5206\u4f7f\u7528\u5230\u7684\u5185\u5bb9\uff0c\u8fdb\u884c\u5b9e\u6218\u8bf4\u660e\u3002 \u9996\u5148\uff0c\u8ba9\u6211\u4eec\u770b\u4e0brequests.get()\u65b9\u6cd5\uff0c\u5b83\u7528\u4e8e\u5411\u670d\u52a1\u5668\u53d1\u8d77GET\u8bf7\u6c42\uff0c\u4e0d\u4e86\u89e3GET\u8bf7\u6c42\u6ca1\u6709\u5173\u7cfb\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1aget\u7684\u4e2d\u6587\u610f\u601d\u662f\u5f97\u5230\u3001\u6293\u4f4f\uff0c\u90a3\u8fd9\u4e2arequests.get()\u65b9\u6cd5\u5c31\u662f\u4ece\u670d\u52a1\u5668\u5f97\u5230\u3001\u6293\u4f4f\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u83b7\u53d6\u6570\u636e\u3002\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u4f8b\u5b50(\u4ee5 www.gitbook.cn\u4e3a\u4f8b)\u6765\u52a0\u6df1\u7406\u89e3 \uff1a import requests if __name__ == '__main__' : target = 'http://gitbook.cn/' req = requests . get ( url = target ) print ( req . text ) requests.get()\u65b9\u6cd5\u5fc5\u987b\u8bbe\u7f6e\u7684\u4e00\u4e2a\u53c2\u6570\u5c31\u662furl\uff0c\u56e0\u4e3a\u6211\u4eec\u5f97\u544a\u8bc9GET\u8bf7\u6c42\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u8c01\uff0c\u6211\u4eec\u8981\u83b7\u53d6\u8c01\u7684\u4fe1\u606f\u3002\u8fd0\u884c\u7a0b\u5e8f\u770b\u4e0b\u7ed3\u679c\uff1a \u5de6\u4fa7\u662f\u6211\u4eec\u7a0b\u5e8f\u83b7\u5f97\u7684\u7ed3\u679c\uff0c\u53f3\u4fa7\u662f\u6211\u4eec\u5728www.gitbook.cn\u7f51\u7ad9\u5ba1\u67e5\u5143\u7d20\u83b7\u5f97\u7684\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5df2\u7ecf\u987a\u5229\u83b7\u5f97\u4e86\u8be5\u7f51\u9875\u7684HTML\u4fe1\u606f\u3002\u8fd9\u5c31\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u722c\u866b\u5b9e\u4f8b\uff0c\u53ef\u80fd\u4f60\u4f1a\u95ee\uff0c\u6211\u53ea\u662f\u722c\u53d6\u4e86\u8fd9\u4e2a\u7f51\u9875\u7684HTML\u4fe1\u606f\uff0c\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u5ba2\u5b98\u7a0d\u5b89\u52ff\u8e81\uff0c\u63a5\u4e0b\u6765\u8fdb\u5165\u6211\u4eec\u7684\u5b9e\u6218\u6b63\u6587\u3002 \u4e09 \u722c\u866b\u5b9e\u6218 \u00b6 1 \u5c0f\u8bf4\u4e0b\u8f7d \u00b6 (1) \u5b9e\u6218\u80cc\u666f \u00b6 \u5c0f\u8bf4\u7f51\u7ad9-\u7b14\u8da3\u770b\uff1aURL\uff1a http://www.biqukan.com/ \u672c\u6b21\u5b9e\u6218\u5c31\u662f\u4ece\u8be5\u7f51\u7ad9\u722c\u53d6\u5e76\u4fdd\u5b58\u4e00\u672c\u540d\u4e3a\u300a\u4e00\u5ff5\u6c38\u6052\u300b\u7684\u5c0f\u8bf4\u3002 (2) \u5c0f\u8bd5\u725b\u5200 \u00b6 \u6211\u4eec\u5148\u770b\u4e0b\u300a\u4e00\u5ff5\u6c38\u6052\u300b\u5c0f\u8bf4\u7684\u7b2c\u4e00\u7ae0\u5185\u5bb9\uff0cURL\uff1a http://www.biqukan.com/1_1094/5403177.html \u6211\u4eec\u5148\u7528\u5df2\u7ecf\u5b66\u5230\u7684\u77e5\u8bc6\u83b7\u53d6HTML\u4fe1\u606f\u8bd5\u4e00\u8bd5\uff0c\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a import requests if __name__ == '__main__' : target = 'http://www.biqukan.com/1_1094/5403177.html' req = requests . get ( url = target ) print ( req . text ) \u8fd0\u884c\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7ed3\u679c\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5f88\u8f7b\u677e\u5730\u83b7\u53d6\u4e86HTML\u4fe1\u606f\u3002\u4f46\u662f\uff0c\u5f88\u663e\u7136\uff0c\u5f88\u591a\u4fe1\u606f\u662f\u6211\u4eec\u4e0d\u60f3\u770b\u5230\u7684\uff0c\u6211\u4eec\u53ea\u60f3\u83b7\u5f97\u5982\u53f3\u4fa7\u6240\u793a\u7684\u6b63\u6587\u5185\u5bb9\uff0c\u6211\u4eec\u4e0d\u5173\u5fc3div\u3001br\u8fd9\u4e9bhtml\u6807\u7b7e\u3002\u5982\u4f55\u628a\u6b63\u6587\u5185\u5bb9\u4ece\u8fd9\u4e9b\u4f17\u591a\u7684html\u6807\u7b7e\u4e2d\u63d0\u53d6\u51fa\u6765\u5462\uff1f\u8fd9\u5c31\u662f\u672c\u6b21\u5b9e\u6218\u7684\u4e3b\u8981\u5185\u5bb9\u3002 Beautiful Soup \u00b6 **\u722c\u866b\u7684\u7b2c\u4e00\u6b65\uff0c\u83b7\u53d6\u6574\u4e2a\u7f51\u9875\u7684HTML\u4fe1\u606f\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u722c\u866b\u7684\u7b2c\u4e8c\u6b65\uff0c\u89e3\u6790HTML\u4fe1\u606f\uff0c\u63d0\u53d6\u6211\u4eec\u611f\u5174\u8da3\u7684\u5185\u5bb9\u3002**\u5bf9\u4e8e\u672c\u5c0f\u8282\u7684\u5b9e\u6218\uff0c\u6211\u4eec\u611f\u5174\u8da3\u7684\u5185\u5bb9\u5c31\u662f\u6587\u7ae0\u7684\u6b63\u6587\u3002\u63d0\u53d6\u7684\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u4f8b\u5982\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u3001Xpath\u3001Beautiful Soup\u7b49\u3002\u5bf9\u4e8e\u521d\u5b66\u8005\u800c\u8a00\uff0c\u6700\u5bb9\u6613\u7406\u89e3\uff0c\u5e76\u4e14\u4f7f\u7528\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528Beautiful Soup\u63d0\u53d6\u611f\u5174\u8da3\u5185\u5bb9\u3002 Beautiful Soup\u7684\u5b89\u88c5\u65b9\u6cd5\u548crequests\u4e00\u6837\uff0c\u4f7f\u7528\u5982\u4e0b\u6307\u4ee4\u5b89\u88c5(\u4e5f\u662f\u4e8c\u9009\u4e00)\uff1a pip install beautifulsoup4 easy_install beautifulsoup4 \u4e00\u4e2a\u5f3a\u5927\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u90fd\u4f1a\u6709\u4e00\u4e2a\u8be6\u7ec6\u7684\u5b98\u65b9\u6587\u6863\u3002\u6211\u4eec\u5f88\u5e78\u8fd0\uff0cBeautiful Soup\u4e5f\u662f\u6709\u4e2d\u6587\u7684\u5b98\u65b9\u6587\u6863\u3002 URL\uff1a http://beautifulsoup.readthedocs.io/zh_CN/latest/ \u540c\u7406\uff0c\u6211\u4f1a\u6839\u636e\u5b9e\u6218\u9700\u6c42\uff0c\u8bb2\u89e3Beautiful Soup\u5e93\u7684\u90e8\u5206\u4f7f\u7528\u65b9\u6cd5\uff0c\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\uff0c\u8bf7\u67e5\u770b\u5b98\u65b9\u6587\u6863\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u4f7f\u7528\u5df2\u7ecf\u638c\u63e1\u7684\u5ba1\u67e5\u5143\u7d20\u65b9\u6cd5\uff0c\u67e5\u770b\u4e00\u4e0b\u6211\u4eec\u7684\u76ee\u6807\u9875\u9762\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a \u4e0d\u96be\u53d1\u73b0\uff0c\u6587\u7ae0\u7684\u6240\u6709\u5185\u5bb9\u90fd\u653e\u5728\u4e86\u4e00\u4e2a\u540d\u4e3adiv\u7684\u201c\u4e1c\u897f\u4e0b\u9762\u201d\uff0c\u8fd9\u4e2a\"\u4e1c\u897f\"\u5c31\u662fhtml\u6807\u7b7e\u3002HTML\u6807\u7b7e\u662fHTML\u8bed\u8a00\u4e2d\u6700\u57fa\u672c\u7684\u5355\u4f4d\uff0cHTML\u6807\u7b7e\u662fHTML\u6700\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\u3002\u4e0d\u7406\u89e3\uff0c\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u518d\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a \u4e00\u4e2a\u5973\u4eba\u7684\u5305\u5305\u91cc\uff0c\u4f1a\u6709\u5f88\u591a\u4e1c\u897f\uff0c\u5979\u4eec\u4f1a\u6839\u636e\u81ea\u5df1\u7684\u4e60\u60ef\u5c06\u81ea\u5df1\u7684\u4e1c\u897f\u8fdb\u884c\u5206\u7c7b\u653e\u597d\u3002\u955c\u5b50\u548c\u53e3\u7ea2\u8fd9\u4e9b\u4f1a\u7ecf\u5e38\u7528\u5230\u7684\u4e1c\u897f\uff0c\u4f1a\u5f52\u653e\u5230\u5bb9\u6613\u62ff\u5230\u7684\u5916\u4fa7\u53e3\u888b\u91cc\u3002\u90a3\u4e9b\u4e0d\u7ecf\u5e38\u7528\u5230\uff0c\u9700\u8981\u6ce8\u610f\u5b89\u5168\u5b58\u653e\u7684\u8bc1\u4ef6\u4f1a\u653e\u5230\u4e0d\u5bb9\u6613\u62ff\u5230\u7684\u91cc\u4fa7\u53e3\u888b\u91cc\u3002 html\u6807\u7b7e\u5c31\u50cf\u4e00\u4e2a\u4e2a\u201c\u53e3\u888b\u201d\uff0c\u6bcf\u4e2a\u201c\u53e3\u888b\u201d\u90fd\u6709\u81ea\u5df1\u7684\u7279\u5b9a\u529f\u80fd\uff0c\u8d1f\u8d23\u5b58\u653e\u4e0d\u540c\u7684\u5185\u5bb9\u3002\u663e\u7136\uff0c\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u7684div\u6807\u7b7e\u4e0b\u5b58\u653e\u4e86\u6211\u4eec\u5173\u5fc3\u7684\u6b63\u6587\u5185\u5bb9\u3002\u8fd9\u4e2adiv\u6807\u7b7e\u662f\u8fd9\u6837\u7684\uff1a 1 \u7ec6\u5fc3\u7684\u670b\u53cb\u53ef\u80fd\u5df2\u7ecf\u53d1\u73b0\uff0c\u9664\u4e86div\u5b57\u6837\u5916\uff0c\u8fd8\u6709id\u548cclass\u3002id\u548cclass\u5c31\u662fdiv\u6807\u7b7e\u7684\u5c5e\u6027\uff0ccontent\u548cshowtxt\u662f\u5c5e\u6027\u503c\uff0c\u4e00\u4e2a\u5c5e\u6027\u5bf9\u5e94\u4e00\u4e2a\u5c5e\u6027\u503c\u3002\u8fd9\u4e1c\u897f\u6709\u4ec0\u4e48\u7528\uff1f\u5b83\u662f\u7528\u6765\u533a\u5206\u4e0d\u540c\u7684div\u6807\u7b7e\u7684\uff0c\u56e0\u4e3adiv\u6807\u7b7e\u53ef\u4ee5\u6709\u5f88\u591a\uff0c\u6211\u4eec\u600e\u4e48\u52a0\u4ee5\u533a\u5206\u4e0d\u540c\u7684div\u6807\u7b7e\u5462\uff1f\u5c31\u662f\u901a\u8fc7\u4e0d\u540c\u7684\u5c5e\u6027\u503c\u3002 \u4ed4\u7ec6\u89c2\u5bdf\u76ee\u6807\u7f51\u7ad9\u4e00\u756a\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1aclass\u5c5e\u6027\u4e3ashowtxt\u7684div\u6807\u7b7e\uff0c\u72ec\u4e00\u4efd\uff01\u8fd9\u4e2a\u6807\u7b7e\u91cc\u9762\u5b58\u653e\u7684\u5185\u5bb9\uff0c\u662f\u6211\u4eec\u5173\u5fc3\u7684\u6b63\u6587\u90e8\u5206\u3002 \u77e5\u9053\u8fd9\u4e2a\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528Beautiful Soup\u63d0\u53d6\u6211\u4eec\u60f3\u8981\u7684\u5185\u5bb9\u4e86\uff0c\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a from bs4 import BeautifulSoup import requests if __name__ == \"__main__\" : target = 'http://www.biqukan.com/1_1094/5403177.html' req = requests . get ( url = target ) html = req . text bf = BeautifulSoup ( html ) texts = bf . find_all ( 'div' , class_ = 'showtxt' ) print ( texts ) \u5728\u89e3\u6790html\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2aBeautiful Soup\u5bf9\u8c61\u3002BeautifulSoup\u51fd\u6570\u91cc\u7684\u53c2\u6570\u5c31\u662f\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u7684html\u4fe1\u606f\u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528find_all\u65b9\u6cd5\uff0c\u83b7\u5f97html\u4fe1\u606f\u4e2d\u6240\u6709class\u5c5e\u6027\u4e3ashowtxt\u7684div\u6807\u7b7e\u3002find_all\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u83b7\u53d6\u7684\u6807\u7b7e\u540d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570class_\u662f\u6807\u7b7e\u7684\u5c5e\u6027\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u662fclass\uff0c\u800c\u5e26\u4e86\u4e00\u4e2a\u4e0b\u5212\u7ebf\u5462\uff1f\u56e0\u4e3apython\u4e2dclass\u662f\u5173\u952e\u5b57\uff0c\u4e3a\u4e86\u9632\u6b62\u51b2\u7a81\uff0c\u8fd9\u91cc\u4f7f\u7528class_\u8868\u793a\u6807\u7b7e\u7684class\u5c5e\u6027\uff0cclass_\u540e\u9762\u8ddf\u7740\u7684showtxt\u5c31\u662f\u5c5e\u6027\u503c\u4e86\u3002\u770b\u4e0b\u6211\u4eec\u8981\u5339\u914d\u7684\u6807\u7b7e\u683c\u5f0f\uff1a 1 \u8fd9\u6837\u5bf9\u5e94\u7684\u770b\u4e00\u4e0b\uff0c\u662f\u4e0d\u662f\u5c31\u61c2\u4e86\uff1f\u53ef\u80fd\u6709\u4eba\u4f1a\u95ee\u4e86\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u662ffind_all(\u2018div\u2019, id = \u2018content\u2019, class_ = \u2018showtxt\u2019)?\u8fd9\u6837\u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u5c5e\u6027\u662f\u4f5c\u4e3a\u67e5\u8be2\u65f6\u5019\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u6dfb\u52a0\u4e00\u4e2aclass_='showtxt\u2019\u6761\u4ef6\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u80fd\u591f\u51c6\u786e\u5339\u914d\u5230\u6211\u4eec\u60f3\u8981\u7684\u6807\u7b7e\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u5fc5\u518d\u6dfb\u52a0id\u8fd9\u4e2a\u5c5e\u6027\u4e86\u3002\u8fd0\u884c\u4ee3\u7801\u67e5\u770b\u6211\u4eec\u5339\u914d\u7684\u7ed3\u679c\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5df2\u7ecf\u987a\u5229\u5339\u914d\u5230\u6211\u4eec\u5173\u5fc3\u7684\u6b63\u6587\u5185\u5bb9\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e9b\u6211\u4eec\u4e0d\u60f3\u8981\u7684\u4e1c\u897f\u3002\u6bd4\u5982div\u6807\u7b7e\u540d\uff0cbr\u6807\u7b7e\uff0c\u4ee5\u53ca\u5404\u79cd\u7a7a\u683c\u3002\u600e\u4e48\u53bb\u9664\u8fd9\u4e9b\u4e1c\u897f\u5462\uff1f\u6211\u4eec\u7ee7\u7eed\u7f16\u5199\u4ee3\u7801\uff1a from bs4 import BeautifulSoup import requests if __name__ == \"__main__\" : target = 'http://www.biqukan.com/1_1094/5403177.html' req = requests . get ( url = target ) html = req . text bf = BeautifulSoup ( html ) texts = bf . find_all ( 'div' , class_ = 'showtxt' ) print ( texts [ 0 ] . text . replace ( ' \\xa0 ' * 8 , ' \\n\\n ' )) find_all\u5339\u914d\u7684\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5217\u8868\u3002\u63d0\u53d6\u5339\u914d\u7ed3\u679c\u540e\uff0c\u4f7f\u7528text\u5c5e\u6027\uff0c\u63d0\u53d6\u6587\u672c\u5185\u5bb9\uff0c\u6ee4\u9664br\u6807\u7b7e\u3002\u968f\u540e\u4f7f\u7528replace\u65b9\u6cd5\uff0c\u5254\u9664\u7a7a\u683c\uff0c\u66ff\u6362\u4e3a\u56de\u8f66\u8fdb\u884c\u5206\u6bb5\u3002 \u5728html\u4e2d\u662f\u7528\u6765\u8868\u793a\u7a7a\u683c\u7684\u3002replace(\u2019\\xa0\u2019*8,\u2019\\n\\n\u2019)\u5c31\u662f\u53bb\u6389\u4e0b\u56fe\u7684\u516b\u4e2a\u7a7a\u683c\u7b26\u53f7\uff0c\u5e76\u7528\u56de\u8f66\u4ee3\u66ff\uff1a \u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5f88\u81ea\u7136\u7684\u5339\u914d\u5230\u4e86\u6240\u6709\u6b63\u6587\u5185\u5bb9\uff0c\u5e76\u8fdb\u884c\u4e86\u5206\u6bb5\u3002\u6211\u4eec\u5df2\u7ecf\u987a\u5229\u83b7\u5f97\u4e86\u4e00\u4e2a\u7ae0\u8282\u7684\u5185\u5bb9\uff0c\u8981\u60f3\u4e0b\u8f7d\u6b63\u672c\u5c0f\u8bf4\uff0c\u6211\u4eec\u5c31\u8981\u83b7\u53d6\u6bcf\u4e2a\u7ae0\u8282\u7684\u94fe\u63a5\u3002\u6211\u4eec\u5148\u5206\u6790\u4e0b\u5c0f\u8bf4\u76ee\u5f55\uff1a URL\uff1ahttp://www.biqukan.com/1_1094/ \u901a\u8fc7\u5ba1\u67e5\u5143\u7d20\uff0c\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e9b\u7ae0\u8282\u90fd\u5b58\u653e\u5728\u4e86class\u5c5e\u6027\u4e3alistmain\u7684div\u6807\u7b7e\u4e0b\uff0c\u9009\u53d6\u90e8\u5206html\u4ee3\u7801\u5982\u4e0b\uff1a < div class = \"listmain\" > < dl > < dt > \u300a\u4e00\u5ff5\u6c38\u6052\u300b\u6700\u65b0\u7ae0\u8282\u5217\u8868 </ dt > < dd >< a href = \"/1_1094/15932394.html\" > \u7b2c1027\u7ae0 \u7b2c\u5341\u9053\u95e8 </ a ></ dd > < dd >< a href = \"/1_1094/15923072.html\" > \u7b2c1026\u7ae0 \u7edd\u4f26\u9053\u6cd5\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15921862.html\" > \u7b2c1025\u7ae0 \u957f\u751f\u706f\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15918591.html\" > \u7b2c1024\u7ae0 \u4e00\u76ee\u6676\u6e0a </ a ></ dd > < dd >< a href = \"/1_1094/15906236.html\" > \u7b2c1023\u7ae0 \u901a\u5929\u9053\u95e8 </ a ></ dd > < dd >< a href = \"/1_1094/15903775.html\" > \u7b2c1022\u7ae0 \u56db\u5927\u51f6\u517d\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15890427.html\" > \u7b2c1021\u7ae0 \u9cc4\u9996\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15886627.html\" > \u7b2c1020\u7ae0 \u4e00\u89e6\u5373\u53d1\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15875306.html\" > \u7b2c1019\u7ae0 \u9b41\u7956\u7684\u6c14\u606f\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15871572.html\" > \u7b2c1018\u7ae0 \u7edd\u671b\u7684\u9b41\u7687\u57ce </ a ></ dd > < dd >< a href = \"/1_1094/15859514.html\" > \u7b2c1017\u7ae0 \u6211\u8fd8\u662f\u6068\u4f60\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15856137.html\" > \u7b2c1016\u7ae0 \u4ece\u6765\u6ca1\u6709\u4e16\u754c\u4e4b\u95e8\uff01 </ a ></ dd > < dt > \u300a\u4e00\u5ff5\u6c38\u6052\u300b\u6b63\u6587\u5377 </ dt > < dd >< a href = \"/1_1094/5386269.html\" > \u5916\u4f201 \u67ef\u7236\u3002 </ a ></ dd > < dd >< a href = \"/1_1094/5386270.html\" > \u5916\u4f202 \u695a\u7389\u5ae3\u3002 </ a ></ dd > < dd >< a href = \"/1_1094/5386271.html\" > \u5916\u4f203 \u9e66\u9e49\u4e0e\u76ae\u51bb\u3002 </ a ></ dd > < dd >< a href = \"/1_1094/5403177.html\" > \u7b2c\u4e00\u7ae0 \u4ed6\u53eb\u767d\u5c0f\u7eaf </ a ></ dd > < dd >< a href = \"/1_1094/5428081.html\" > \u7b2c\u4e8c\u7ae0 \u706b\u7076\u623f </ a ></ dd > < dd >< a href = \"/1_1094/5433843.html\" > \u7b2c\u4e09\u7ae0 \u516d\u53e5\u771f\u8a00 </ a ></ dd > < dd >< a href = \"/1_1094/5447905.html\" > \u7b2c\u56db\u7ae0 \u70bc\u7075 </ a ></ dd > </ dl > </ div > \u5728\u5206\u6790\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u4ecb\u7ecd\u4e00\u4e2a\u6982\u5ff5\uff1a\u7236\u8282\u70b9\u3001\u5b50\u8282\u70b9\u3001\u5b59\u8282\u70b9\u3002 \u548c \u9650\u5b9a\u4e86 \u6807\u7b7e\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u4f4d\u7f6e\uff0c\u4ed6\u4eec\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff0c\u6709\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5c31\u6709\u7ed3\u675f\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728 \u6807\u7b7e\u5305\u542b \u6807\u7b7e\uff0c\u90a3\u8fd9\u4e2a \u6807\u7b7e\u5c31\u662f \u6807\u7b7e\u7684\u5b50\u8282\u70b9\uff0c \u6807\u7b7e\u53c8\u5305\u542b \u6807\u7b7e\u548c \u6807\u7b7e\uff0c\u90a3\u4e48 \u6807\u7b7e\u548c \u6807\u7b7e\u5c31\u662f \u6807\u7b7e\u7684\u5b59\u8282\u70b9\u3002\u6709\u70b9\u7ed5\uff1f\u90a3\u4f60\u8bb0\u4f4f\u8fd9\u53e5\u8bdd\uff1a\u8c01\u5305\u542b\u8c01\uff0c\u8c01\u5c31\u662f\u8c01\u513f\u5b50\uff01 **\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u90fd\u662f\u76f8\u5bf9\u7684\u3002**\u6bd4\u5982\u5bf9\u4e8e \u6807\u7b7e\uff0c\u5b83\u7684\u5b50\u8282\u70b9\u662f \u6807\u7b7e\uff0c\u5b83\u7684\u7236\u8282\u70b9\u662f \u6807\u7b7e\u3002\u8fd9\u8ddf\u6211\u4eec\u4eba\u662f\u4e00\u6837\u7684\uff0c\u4e0a\u6709\u8001\u4e0b\u6709\u5c0f\u3002 \u770b\u5230\u8fd9\u91cc\u53ef\u80fd\u6709\u4eba\u4f1a\u95ee\uff0c\u8fd9\u6709\u597d\u591a \u6807\u7b7e\u548c \u6807\u7b7e\u554a\uff01\u4e0d\u540c\u7684 \u6807\u7b7e\uff0c\u5b83\u4eec\u662f\u4ec0\u4e48\u5173\u7cfb\u554a\uff1f\u663e\u7136\uff0c\u5144\u5f1f\u59d0\u59b9\u55bd\uff01\u6211\u4eec\u79f0\u5b83\u4eec\u4e3a\u5144\u5f1f\u7ed3\u70b9\u3002 \u597d\u4e86\uff0c\u6982\u5ff5\u660e\u786e\u6e05\u695a\uff0c\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u95ee\u9898\u3002\u6211\u4eec\u770b\u5230\u6bcf\u4e2a\u7ae0\u8282\u7684\u540d\u5b57\u5b58\u653e\u5728\u4e86 \u6807\u7b7e\u91cc\u9762\u3002 \u6807\u7b7e\u8fd8\u6709\u4e00\u4e2ahref\u5c5e\u6027\u3002\u8fd9\u91cc\u5c31\u4e0d\u5f97\u4e0d\u63d0\u4e00\u4e0b \u6807\u7b7e\u7684\u5b9a\u4e49\u4e86\uff0c \u6807\u7b7e\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8d85\u94fe\u63a5\uff0c\u7528\u4e8e\u4ece\u4e00\u5f20\u9875\u9762\u94fe\u63a5\u5230\u53e6\u4e00\u5f20\u9875\u9762\u3002 \u6807\u7b7e\u6700\u91cd\u8981\u7684\u5c5e\u6027\u662f href \u5c5e\u6027\uff0c\u5b83\u6307\u793a\u94fe\u63a5\u7684\u76ee\u6807\u3002 \u6211\u4eec\u5c06\u4e4b\u524d\u83b7\u5f97\u7684\u7b2c\u4e00\u7ae0\u8282\u7684URL\u548c \u6807\u7b7e\u5bf9\u6bd4\u770b\u4e00\u4e0b\uff1a http://www.biqukan.com/1_1094/5403177.html \u7b2c\u4e00\u7ae0 \u4ed6\u53eb\u767d\u5c0f\u7eaf \u4e0d\u96be\u53d1\u73b0\uff0c \u6807\u7b7e\u4e2dhref\u5c5e\u6027\u5b58\u653e\u7684\u5c5e\u6027\u503c/1_1094/5403177.html\u662f\u7ae0\u8282URLhttp://www.biqukan.com/1_1094/5403177.html\u7684\u540e\u534a\u90e8\u5206\u3002\u5176\u4ed6\u7ae0\u8282\u4e5f\u662f\u5982\u6b64\uff01\u90a3\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e \u6807\u7b7e\u7684href\u5c5e\u6027\u503c\u83b7\u5f97\u6bcf\u4e2a\u7ae0\u8282\u7684\u94fe\u63a5\u548c\u540d\u79f0\u4e86\u3002 \u603b\u7ed3\u4e00\u4e0b\uff1a\u5c0f\u8bf4\u6bcf\u7ae0\u7684\u94fe\u63a5\u653e\u5728\u4e86class\u5c5e\u6027\u4e3alistmain\u7684 \u6807\u7b7e\u4e0b\u7684 \u6807\u7b7e\u4e2d\u3002\u94fe\u63a5\u5177\u4f53\u4f4d\u7f6e\u653e\u5728html->body->div->dl->dd->a\u7684href\u5c5e\u6027\u4e2d\u3002\u5148\u5339\u914dclass\u5c5e\u6027\u4e3alistmain\u7684 \u6807\u7b7e\uff0c\u518d\u5339\u914d \u6807\u7b7e\u3002\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a from bs4 import BeautifulSoup import requests if __name__ == \"__main__\" : target = 'http://www.biqukan.com/1_1094/' req = requests . get ( url = target ) html = req . text div_bf = BeautifulSoup ( html ) div = div_bf . find_all ( 'div' , class_ = 'listmain' ) print ( div [ 0 ]) \u8fd8\u662f\u4f7f\u7528find_all\u65b9\u6cd5\uff0c\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u5f88\u987a\u5229\uff0c\u63a5\u4e0b\u6765\u518d\u5339\u914d\u6bcf\u4e00\u4e2a \u6807\u7b7e\uff0c\u5e76\u63d0\u53d6\u7ae0\u8282\u540d\u548c\u7ae0\u8282\u6587\u7ae0\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528Beautiful Soup\u5339\u914d\u5230\u4e86\u4e0b\u9762\u8fd9\u4e2a \u6807\u7b7e\uff0c\u5982\u4f55\u63d0\u53d6\u5b83\u7684href\u5c5e\u6027\u548c \u6807\u7b7e\u91cc\u5b58\u653e\u7684\u7ae0\u8282\u540d\u5462\uff1f \u7b2c\u4e00\u7ae0 \u4ed6\u53eb\u767d\u5c0f\u7eaf 1 \u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u5bf9Beautiful Soup\u8fd4\u56de\u7684\u5339\u914d\u7ed3\u679ca\uff0c\u4f7f\u7528a.get(\u2018href\u2019)\u65b9\u6cd5\u5c31\u80fd\u83b7\u53d6href\u7684\u5c5e\u6027\u503c\uff0c\u4f7f\u7528a.string\u5c31\u80fd\u83b7\u53d6\u7ae0\u8282\u540d\uff0c\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a from bs4 import BeautifulSoup import requests if __name__ == \"__main__\" : server = 'http://www.biqukan.com/' target = 'http://www.biqukan.com/1_1094/' req = requests . get ( url = target ) html = req . text div_bf = BeautifulSoup ( html ) div = div_bf . find_all ( 'div' , class_ = 'listmain' ) a_bf = BeautifulSoup ( str ( div [ 0 ])) a = a_bf . find_all ( 'a' ) for each in a : print ( each . string , server + each . get ( 'href' )) \u56e0\u4e3afind_all\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u91cc\u8fb9\u5b58\u653e\u4e86\u5f88\u591a\u7684 \u6807\u7b7e\uff0c\u6240\u4ee5\u4f7f\u7528for\u5faa\u73af\u904d\u5386\u6bcf\u4e2a \u6807\u7b7e\u5e76\u6253\u5370\u51fa\u6765\uff0c\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u3002 \u6700\u4e0a\u9762\u5339\u914d\u7684\u4e00\u5343\u591a\u7ae0\u7684\u5185\u5bb9\u662f\u6700\u65b0\u66f4\u65b0\u768412\u7ae0\u8282\u7684\u94fe\u63a5\u3002\u8fd912\u7ae0\u5185\u5bb9\u4f1a\u548c\u4e0b\u9762\u7684\u91cd\u590d\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6ee4\u9664\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u90a33\u4e2a\u5916\u4f20\uff0c\u6211\u4eec\u4e5f\u4e0d\u60f3\u8981\u3002\u8fd9\u4e9b\u90fd\u7b80\u5355\u5730\u5254\u9664\u5c31\u597d\u3002 #### \u6574\u5408\u4ee3\u7801 \u6bcf\u4e2a\u7ae0\u8282\u7684\u94fe\u63a5\u3001\u7ae0\u8282\u540d\u3001\u7ae0\u8282\u5185\u5bb9\u90fd\u6709\u4e86\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u6574\u5408\u4ee3\u7801\uff0c\u5c06\u83b7\u5f97\u5185\u5bb9\u5199\u5165\u6587\u672c\u6587\u4ef6\u5b58\u50a8\u5c31\u597d\u4e86\u3002\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a from bs4 import BeautifulSoup import requests , sys \"\"\" \u7c7b\u8bf4\u660e:\u4e0b\u8f7d\u300a\u7b14\u8da3\u770b\u300b\u7f51\u5c0f\u8bf4\u300a\u4e00\u5ff5\u6c38\u6052\u300b Parameters: \u65e0 Returns: \u65e0 Modify: 2017-09-13 \"\"\" class downloader ( object ): def __init__ ( self ): self . server = 'http://www.biqukan.com/' self . target = 'http://www.biqukan.com/1_1094/' self . names = [] #\u5b58\u653e\u7ae0\u8282\u540d self . urls = [] #\u5b58\u653e\u7ae0\u8282\u94fe\u63a5 self . nums = 0 #\u7ae0\u8282\u6570 \"\"\" \u51fd\u6570\u8bf4\u660e:\u83b7\u53d6\u4e0b\u8f7d\u94fe\u63a5 Parameters: \u65e0 Returns: \u65e0 Modify: 2017-09-13 \"\"\" def get_download_url ( self ): req = requests . get ( url = self . target ) html = req . text div_bf = BeautifulSoup ( html ) div = div_bf . find_all ( 'div' , class_ = 'listmain' ) a_bf = BeautifulSoup ( str ( div [ 0 ])) a = a_bf . find_all ( 'a' ) self . nums = len ( a [ 15 :]) #\u5254\u9664\u4e0d\u5fc5\u8981\u7684\u7ae0\u8282\uff0c\u5e76\u7edf\u8ba1\u7ae0\u8282\u6570 for each in a [ 15 :]: self . names . append ( each . string ) self . urls . append ( self . server + each . get ( 'href' )) \"\"\" \u51fd\u6570\u8bf4\u660e:\u83b7\u53d6\u7ae0\u8282\u5185\u5bb9 Parameters: target - \u4e0b\u8f7d\u8fde\u63a5(string) Returns: texts - \u7ae0\u8282\u5185\u5bb9(string) Modify: 2017-09-13 \"\"\" def get_contents ( self , target ): req = requests . get ( url = target ) html = req . text bf = BeautifulSoup ( html ) texts = bf . find_all ( 'div' , class_ = 'showtxt' ) texts = texts [ 0 ] . text . replace ( ' \\xa0 ' * 8 , ' \\n\\n ' ) return texts \"\"\" \u51fd\u6570\u8bf4\u660e:\u5c06\u722c\u53d6\u7684\u6587\u7ae0\u5185\u5bb9\u5199\u5165\u6587\u4ef6 Parameters: name - \u7ae0\u8282\u540d\u79f0(string) path - \u5f53\u524d\u8def\u5f84\u4e0b,\u5c0f\u8bf4\u4fdd\u5b58\u540d\u79f0(string) text - \u7ae0\u8282\u5185\u5bb9(string) Returns: \u65e0 Modify: 2017-09-13 \"\"\" def writer ( self , name , path , text ): write_flag = True with open ( path , 'a' , encoding = 'utf-8' ) as f : f . write ( name + ' \\n ' ) f . writelines ( text ) f . write ( ' \\n\\n ' ) if __name__ == \"__main__\" : dl = downloader () dl . get_download_url () print ( '\u300a\u4e00\u5e74\u6c38\u6052\u300b\u5f00\u59cb\u4e0b\u8f7d\uff1a' ) for i in range ( dl . nums ): dl . writer ( dl . names [ i ], '\u4e00\u5ff5\u6c38\u6052.txt' , dl . get_contents ( dl . urls [ i ])) sys . stdout . write ( \" \u5df2\u4e0b\u8f7d: %.3f%% \" % float ( i / dl . nums ) + ' \\r ' ) sys . stdout . flush () print ( '\u300a\u4e00\u5e74\u6c38\u6052\u300b\u4e0b\u8f7d\u5b8c\u6210' ) \u5f88\u7b80\u5355\u7684\u7a0b\u5e8f\uff0c\u5355\u8fdb\u7a0b\u8dd1\uff0c\u6ca1\u6709\u5f00\u8fdb\u7a0b\u6c60\u3002\u4e0b\u8f7d\u901f\u5ea6\u7565\u6162\uff0c\u559d\u676f\u8336\u4f11\u606f\u4f11\u606f\u5427\u3002\u4ee3\u7801\u8fd0\u884c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a 2 \u4f18\u7f8e\u58c1\u7eb8\u4e0b\u8f7d ###\uff081\uff09\u5b9e\u6218\u80cc\u666f \u5df2\u7ecf\u4f1a\u722c\u53d6\u6587\u5b57\u4e86\uff0c\u662f\u4e0d\u662f\u611f\u89c9\u722c\u866b\u8fd8\u662f\u86ee\u597d\u73a9\u7684\u5462\uff1f\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u8fdb\u884c\u4e00\u4e2a\u8fdb\u9636\u5b9e\u6218\uff0c\u4e86\u89e3\u4e00\u4e0b\u53cd\u722c\u866b\u3002 URL\uff1ahttps://unsplash.com/ \u770b\u4e00\u770b\u8fd9\u4e9b\u4f18\u7f8e\u7684\u58c1\u7eb8\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u7684\u540d\u5b57\u53eb\u505aUnsplash\uff0c\u514d\u8d39\u9ad8\u6e05\u58c1\u7eb8\u5206\u4eab\u7f51\u662f\u4e00\u4e2a\u575a\u6301\u6bcf\u5929\u5206\u4eab\u9ad8\u6e05\u7684\u6444\u5f71\u56fe\u7247\u7684\u7ad9\u70b9\uff0c\u6bcf\u5929\u66f4\u65b0\u4e00\u5f20\u9ad8\u8d28\u91cf\u7684\u56fe\u7247\u7d20\u6750\uff0c\u5168\u662f\u751f\u6d3b\u4e2d\u7684\u666f\u8c61\u4f5c\u54c1\uff0c\u6e05\u65b0\u7684\u751f\u6d3b\u6c14\u606f\u56fe\u7247\u53ef\u4ee5\u4f5c\u4e3a\u684c\u9762\u58c1\u7eb8\u4e5f\u53ef\u4ee5\u5e94\u7528\u4e8e\u5404\u79cd\u9700\u8981\u7684\u73af\u5883\u3002 \u770b\u5230\u8fd9\u4e48\u4f18\u7f8e\u7684\u56fe\u7247\uff0c\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u60f3\u6536\u85cf\u4e00\u4e9b\uff0c\u4f5c\u4e3a\u77e5\u4e4e\u6587\u7ae0\u7684\u9898\u56fe\u518d\u597d\u4e0d\u8fc7\u4e86\u3002\u6bcf\u5f20\u56fe\u7247\u6211\u90fd\u5f88\u559c\u6b22\uff0c\u6279\u91cf\u4e0b\u8f7d\u5427\uff0c\u4e0d\u591a\u722c\uff0c\u5c31\u4e0b\u8f7d50\u5f20\u597d\u4e86\u3002 ###\uff082\uff09\u5b9e\u6218\u8fdb\u9636 \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6bcf\u4e2ahtml\u6807\u7b7e\u90fd\u6709\u5404\u81ea\u7684\u529f\u80fd\u3002 \u6807\u7b7e\u5b58\u653e\u4e00\u4e0b\u8d85\u94fe\u63a5\uff0c\u56fe\u7247\u5b58\u653e\u5728\u54ea\u4e2a\u6807\u7b7e\u91cc\u5462\uff1fhtml\u89c4\u5b9a\uff0c\u56fe\u7247\u7edf\u7edf\u7ed9\u6211\u653e\u5230 \u6807\u7b7e\u4e2d\uff01\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u622a\u53d6\u5c31Unsplash\u7f51\u7ad9\u4e2d\u7684\u4e00\u4e2a \u6807\u7b7e\uff0c\u5206\u6790\u4e00\u4e0b\uff1a 1 \u53ef\u4ee5\u770b\u5230\uff0c \u6807\u7b7e\u6709\u5f88\u591a\u5c5e\u6027\uff0c\u6709alt\u3001src\u3001class\u3001style\u5c5e\u6027\uff0c\u5176\u4e2dsrc\u5c5e\u6027\u5b58\u653e\u7684\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u56fe\u7247\u4fdd\u5b58\u5730\u5740\uff0c\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u5730\u5740\u5c31\u53ef\u4ee5\u8fdb\u884c\u56fe\u7247\u7684\u4e0b\u8f7d\u3002 \u90a3\u4e48\uff0c\u8ba9\u6211\u4eec\u5148\u634b\u4e00\u634b\u8fd9\u4e2a\u8fc7\u7a0b\uff1a \u4f7f\u7528requeusts\u83b7\u53d6\u6574\u4e2a\u7f51\u9875\u7684HTML\u4fe1\u606f\uff1b \u4f7f\u7528Beautiful Soup\u89e3\u6790HTML\u4fe1\u606f\uff0c\u627e\u5230\u6240\u6709 \u6807\u7b7e\uff0c\u63d0\u53d6src\u5c5e\u6027\uff0c\u83b7\u53d6\u56fe\u7247\u5b58\u653e\u5730\u5740\uff1b \u6839\u636e\u56fe\u7247\u5b58\u653e\u5730\u5740\uff0c\u4e0b\u8f7d\u56fe\u7247\u3002 \u6211\u4eec\u4fe1\u5fc3\u6ee1\u6ee1\u5730\u6309\u7167\u8fd9\u4e2a\u601d\u8def\u722c\u53d6Unsplash\u8bd5\u4e00\u8bd5\uff0c\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a import requests if __name__ == '__main__': target = 'https://unsplash.com/' req = requests.get(url=target) print(req.text) 1 2 3 4 5 6 \u6309\u7167\u6211\u4eec\u7684\u8bbe\u60f3\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u627e\u5230\u5f88\u591a \u6807\u7b7e\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u9664\u4e86\u4e00\u4e9b","title":"Python3\u7f51\u7edc\u722c\u866b\u5feb\u901f\u5165\u95e8\u5b9e\u6218\u89e3\u6790"},{"location":"06-third-part-lib/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/#python3","text":"https://blog.csdn.net/c406495762/article/details/78123502 \u7f6e\u9876 Jack-Cui 2020-04-23 09:35:59 114198 \u6536\u85cf 354 \u5206\u7c7b\u4e13\u680f\uff1a Python Python3\u7f51\u7edc\u722c\u866b\u5165\u95e8 \u7248\u6743 \u8f6c\u8f7d\u8bf7\u6ce8\u660e\u4f5c\u8005\u548c\u51fa\u5904\uff1a http://blog.csdn.net/c406495762 Github\u4ee3\u7801\u83b7\u53d6\uff1a https://github.com/Jack-Cherish/python-spider Python\u7248\u672c\uff1a Python3.x \u8fd0\u884c\u5e73\u53f0\uff1a Windows IDE\uff1a Sublime text3 \u66f4\u591a\u6559\u7a0b\uff0c\u8bf7\u67e5\u770b\uff1a https://cuijiahua.com/blog/spider/","title":"Python3\u7f51\u7edc\u722c\u866b\u5feb\u901f\u5165\u95e8\u5b9e\u6218\u89e3\u6790"},{"location":"06-third-part-lib/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/#_1","text":"**\u5f3a\u70c8\u5efa\u8bae\uff1a**\u8bf7\u5728\u7535\u8111\u7684\u966a\u540c\u4e0b\uff0c\u9605\u8bfb\u672c\u6587\u3002\u672c\u6587\u4ee5\u5b9e\u6218\u4e3a\u4e3b\uff0c\u9605\u8bfb\u8fc7\u7a0b\u5982\u7a0d\u6709\u4e0d\u9002\uff0c\u8fd8\u671b\u591a\u52a0\u7ec3\u4e60\u3002 \u672c\u6587\u7684\u5b9e\u6218\u5185\u5bb9\u6709\uff1a \u7f51\u7edc\u5c0f\u8bf4\u4e0b\u8f7d(\u9759\u6001\u7f51\u7ad9) \u4f18\u7f8e\u58c1\u7eb8\u4e0b\u8f7d(\u52a8\u6001\u7f51\u7ad9) \u89c6\u9891\u4e0b\u8f7d 2020\u5e74\uff0c\u66f4\u591a\u7cbe\u5f69\u5185\u5bb9\uff0c\u5c3d\u5728\u5fae\u4fe1\u516c\u4f17\u53f7\uff0c\u6b22\u8fce\u60a8\u7684\u5173\u6ce8\uff1a","title":"\u4e00 \u524d\u8a00"},{"location":"06-third-part-lib/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/#_2","text":"\u7f51\u7edc\u722c\u866b\uff0c\u4e5f\u53eb\u7f51\u7edc\u8718\u86db(Web Spider)\u3002\u5b83\u6839\u636e\u7f51\u9875\u5730\u5740(URL)\u722c\u53d6\u7f51\u9875\u5185\u5bb9\uff0c\u800c\u7f51\u9875\u5730\u5740(URL)\u5c31\u662f\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u7684\u7f51\u7ad9\u94fe\u63a5\u3002\u6bd4\u5982\uff1a https://www.baidu.com/ \uff0c\u5b83\u5c31\u662f\u4e00\u4e2aURL\u3002 \u5728\u8bb2\u89e3\u722c\u866b\u5185\u5bb9\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u5148\u5b66\u4e60\u4e00\u9879\u5199\u722c\u866b\u7684\u5fc5\u5907\u6280\u80fd\uff1a\u5ba1\u67e5\u5143\u7d20\uff08\u5982\u679c\u5df2\u638c\u63e1\uff0c\u53ef\u8df3\u8fc7\u6b64\u90e8\u5206\u5185\u5bb9\uff09\u3002","title":"\u4e8c \u7f51\u7edc\u722c\u866b\u7b80\u4ecb"},{"location":"06-third-part-lib/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/#1","text":"\u5728\u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\u8f93\u5165URL\u5730\u5740\uff0c\u5728\u7f51\u9875\u5904\u53f3\u952e\u5355\u51fb\uff0c\u627e\u5230\u68c0\u67e5\u3002(\u4e0d\u540c\u6d4f\u89c8\u5668\u7684\u53eb\u6cd5\u4e0d\u540c\uff0cChrome\u6d4f\u89c8\u5668\u53eb\u505a\u68c0\u67e5\uff0cFirefox\u6d4f\u89c8\u5668\u53eb\u505a\u67e5\u770b\u5143\u7d20\uff0c\u4f46\u662f\u529f\u80fd\u90fd\u662f\u76f8\u540c\u7684) \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u53f3\u4fa7\u51fa\u73b0\u4e86\u4e00\u5927\u63a8\u4ee3\u7801\uff0c\u8fd9\u4e9b\u4ee3\u7801\u5c31\u53eb\u505aHTML\u3002\u4ec0\u4e48\u662fHTML\uff1f\u4e3e\u4e2a\u5bb9\u6613\u7406\u89e3\u7684\u4f8b\u5b50\uff1a\u6211\u4eec\u7684\u57fa\u56e0\u51b3\u5b9a\u4e86\u6211\u4eec\u7684\u539f\u59cb\u5bb9\u8c8c\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u7684HTML\u51b3\u5b9a\u4e86\u7f51\u7ad9\u7684\u539f\u59cb\u5bb9\u8c8c\u3002 \u4e3a\u5565\u8bf4\u662f\u539f\u59cb\u5bb9\u8c8c\u5462\uff1f\u56e0\u4e3a\u4eba\u53ef\u4ee5\u6574\u5bb9\u554a\uff01\u624e\u5fc3\u4e86\uff0c\u6709\u6728\u6709\uff1f\u90a3\u7f51\u7ad9\u4e5f\u53ef\u4ee5\"\u6574\u5bb9\"\u5417\uff1f\u53ef\u4ee5\uff01\u8bf7\u770b\u4e0b\u56fe\uff1a \u6211\u80fd\u6709\u8fd9\u4e48\u591a\u94b1\u5417\uff1f\u663e\u7136\u4e0d\u53ef\u80fd\u3002\u6211\u662f\u600e\u4e48\u7ed9\u7f51\u7ad9\"\u6574\u5bb9\"\u7684\u5462\uff1f\u5c31\u662f\u901a\u8fc7\u4fee\u6539\u670d\u52a1\u5668\u8fd4\u56de\u7684HTML\u4fe1\u606f\u3002\u6211\u4eec\u6bcf\u4e2a\u4eba\u90fd\u662f\"\u6574\u5bb9\u5927\u5e08\"\uff0c\u53ef\u4ee5\u4fee\u6539\u9875\u9762\u4fe1\u606f\u3002\u6211\u4eec\u5728\u9875\u9762\u7684\u54ea\u4e2a\u4f4d\u7f6e\u70b9\u51fb\u5ba1\u67e5\u5143\u7d20\uff0c\u6d4f\u89c8\u5668\u5c31\u4f1a\u4e3a\u6211\u4eec\u5b9a\u4f4d\u5230\u76f8\u5e94\u7684HTML\u4f4d\u7f6e\uff0c\u8fdb\u800c\u5c31\u53ef\u4ee5\u5728\u672c\u5730\u66f4\u6539HTML\u4fe1\u606f\u3002 **\u518d\u4e3e\u4e2a\u5c0f\u4f8b\u5b50\uff1a**\u6211\u4eec\u90fd\u77e5\u9053\uff0c\u4f7f\u7528\u6d4f\u89c8\u5668\"\u8bb0\u4f4f\u5bc6\u7801\"\u7684\u529f\u80fd\uff0c\u5bc6\u7801\u4f1a\u53d8\u6210\u4e00\u5806\u5c0f\u9ed1\u70b9\uff0c\u662f\u4e0d\u53ef\u89c1\u7684\u3002\u53ef\u4ee5\u8ba9\u5bc6\u7801\u663e\u793a\u51fa\u6765\u5417\uff1f\u53ef\u4ee5\uff0c\u53ea\u9700\u7ed9\u9875\u9762\"\u52a8\u4e2a\u5c0f\u624b\u672f\"\uff01\u4ee5\u6dd8\u5b9d\u4e3a\u4f8b\uff0c\u5728\u8f93\u5165\u5bc6\u7801\u6846\u5904\u53f3\u952e\uff0c\u70b9\u51fb\u68c0\u67e5\u3002 \u53ef\u4ee5\u770b\u5230\uff0c\u6d4f\u89c8\u5668\u4e3a\u6211\u4eec\u81ea\u52a8\u5b9a\u4f4d\u5230\u4e86\u76f8\u5e94\u7684HTML\u4f4d\u7f6e\u3002\u5c06\u4e0b\u56fe\u4e2d\u7684password\u5c5e\u6027\u503c\u6539\u4e3atext\u5c5e\u6027\u503c(\u76f4\u63a5\u5728\u53f3\u4fa7\u4ee3\u7801\u5904\u4fee\u6539)\uff1a \u6211\u4eec\u8ba9\u6d4f\u89c8\u5668\u8bb0\u4f4f\u7684\u5bc6\u7801\u5c31\u8fd9\u6837\u663e\u73b0\u51fa\u6765\u4e86\uff1a \u8bf4\u8fd9\u4e48\u591a\uff0c\u4ec0\u4e48\u610f\u601d\u5462\uff1f**\u6d4f\u89c8\u5668\u5c31\u662f\u4f5c\u4e3a\u5ba2\u6237\u7aef\u4ece\u670d\u52a1\u5668\u7aef\u83b7\u53d6\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u4fe1\u606f\u89e3\u6790\uff0c\u5e76\u5c55\u793a\u7ed9\u6211\u4eec\u7684\u3002**\u6211\u4eec\u53ef\u4ee5\u5728\u672c\u5730\u4fee\u6539HTML\u4fe1\u606f\uff0c\u4e3a\u7f51\u9875\"\u6574\u5bb9\"\uff0c\u4f46\u662f\u6211\u4eec\u4fee\u6539\u7684\u4fe1\u606f\u4e0d\u4f1a\u56de\u4f20\u5230\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u5b58\u50a8\u7684HTML\u4fe1\u606f\u4e0d\u4f1a\u6539\u53d8\u3002\u5237\u65b0\u4e00\u4e0b\u754c\u9762\uff0c\u9875\u9762\u8fd8\u4f1a\u56de\u5230\u539f\u672c\u7684\u6837\u5b50\u3002\u8fd9\u5c31\u8ddf\u4eba\u6574\u5bb9\u4e00\u6837\uff0c\u6211\u4eec\u80fd\u6539\u53d8\u4e00\u4e9b\u8868\u9762\u7684\u4e1c\u897f\uff0c\u4f46\u662f\u4e0d\u80fd\u6539\u53d8\u6211\u4eec\u7684\u57fa\u56e0\u3002","title":"1 \u5ba1\u67e5\u5143\u7d20"},{"location":"06-third-part-lib/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/#2","text":"\u7f51\u7edc\u722c\u866b\u7684\u7b2c\u4e00\u6b65\u5c31\u662f\u6839\u636eURL\uff0c\u83b7\u53d6\u7f51\u9875\u7684HTML\u4fe1\u606f\u3002\u5728Python3\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528urllib.request\u548crequests\u8fdb\u884c\u7f51\u9875\u722c\u53d6\u3002 urllib\u5e93\u662fpython\u5185\u7f6e\u7684\uff0c\u65e0\u9700\u6211\u4eec\u989d\u5916\u5b89\u88c5\uff0c\u53ea\u8981\u5b89\u88c5\u4e86Python\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u5e93\u3002 requests\u5e93\u662f\u7b2c\u4e09\u65b9\u5e93\uff0c\u9700\u8981\u6211\u4eec\u81ea\u5df1\u5b89\u88c5\u3002 requests\u5e93\u5f3a\u5927\u597d\u7528\uff0c\u6240\u4ee5\u672c\u6587\u4f7f\u7528requests\u5e93\u83b7\u53d6\u7f51\u9875\u7684HTML\u4fe1\u606f\u3002requests\u5e93\u7684github\u5730\u5740\uff1a https://github.com/requests/requests (1) requests\u5b89\u88c5 \u5728cmd\u4e2d\uff0c\u4f7f\u7528\u5982\u4e0b\u6307\u4ee4\u5b89\u88c5requests\uff1a pip install requests easy_install requests (2) \u7b80\u5355\u5b9e\u4f8b requests\u5e93\u7684\u57fa\u7840\u65b9\u6cd5\u5982\u4e0b\uff1a \u5b98\u65b9\u4e2d\u6587\u6559\u7a0b\u5730\u5740\uff1a http://docs.python-requests.org/zh_CN/latest/user/quickstart.html requests\u5e93\u7684\u5f00\u53d1\u8005\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u4e2d\u6587\u6559\u7a0b\uff0c\u67e5\u8be2\u8d77\u6765\u5f88\u65b9\u4fbf\u3002\u672c\u6587\u4e0d\u4f1a\u5bf9\u5176\u6240\u6709\u5185\u5bb9\u8fdb\u884c\u8bb2\u89e3\uff0c\u6458\u53d6\u5176\u90e8\u5206\u4f7f\u7528\u5230\u7684\u5185\u5bb9\uff0c\u8fdb\u884c\u5b9e\u6218\u8bf4\u660e\u3002 \u9996\u5148\uff0c\u8ba9\u6211\u4eec\u770b\u4e0brequests.get()\u65b9\u6cd5\uff0c\u5b83\u7528\u4e8e\u5411\u670d\u52a1\u5668\u53d1\u8d77GET\u8bf7\u6c42\uff0c\u4e0d\u4e86\u89e3GET\u8bf7\u6c42\u6ca1\u6709\u5173\u7cfb\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u6837\u7406\u89e3\uff1aget\u7684\u4e2d\u6587\u610f\u601d\u662f\u5f97\u5230\u3001\u6293\u4f4f\uff0c\u90a3\u8fd9\u4e2arequests.get()\u65b9\u6cd5\u5c31\u662f\u4ece\u670d\u52a1\u5668\u5f97\u5230\u3001\u6293\u4f4f\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u83b7\u53d6\u6570\u636e\u3002\u8ba9\u6211\u4eec\u770b\u4e00\u4e2a\u4f8b\u5b50(\u4ee5 www.gitbook.cn\u4e3a\u4f8b)\u6765\u52a0\u6df1\u7406\u89e3 \uff1a import requests if __name__ == '__main__' : target = 'http://gitbook.cn/' req = requests . get ( url = target ) print ( req . text ) requests.get()\u65b9\u6cd5\u5fc5\u987b\u8bbe\u7f6e\u7684\u4e00\u4e2a\u53c2\u6570\u5c31\u662furl\uff0c\u56e0\u4e3a\u6211\u4eec\u5f97\u544a\u8bc9GET\u8bf7\u6c42\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u8c01\uff0c\u6211\u4eec\u8981\u83b7\u53d6\u8c01\u7684\u4fe1\u606f\u3002\u8fd0\u884c\u7a0b\u5e8f\u770b\u4e0b\u7ed3\u679c\uff1a \u5de6\u4fa7\u662f\u6211\u4eec\u7a0b\u5e8f\u83b7\u5f97\u7684\u7ed3\u679c\uff0c\u53f3\u4fa7\u662f\u6211\u4eec\u5728www.gitbook.cn\u7f51\u7ad9\u5ba1\u67e5\u5143\u7d20\u83b7\u5f97\u7684\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5df2\u7ecf\u987a\u5229\u83b7\u5f97\u4e86\u8be5\u7f51\u9875\u7684HTML\u4fe1\u606f\u3002\u8fd9\u5c31\u662f\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u722c\u866b\u5b9e\u4f8b\uff0c\u53ef\u80fd\u4f60\u4f1a\u95ee\uff0c\u6211\u53ea\u662f\u722c\u53d6\u4e86\u8fd9\u4e2a\u7f51\u9875\u7684HTML\u4fe1\u606f\uff0c\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u5ba2\u5b98\u7a0d\u5b89\u52ff\u8e81\uff0c\u63a5\u4e0b\u6765\u8fdb\u5165\u6211\u4eec\u7684\u5b9e\u6218\u6b63\u6587\u3002","title":"2 \u7b80\u5355\u5b9e\u4f8b"},{"location":"06-third-part-lib/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/#_3","text":"","title":"\u4e09 \u722c\u866b\u5b9e\u6218"},{"location":"06-third-part-lib/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/#1_1","text":"","title":"1 \u5c0f\u8bf4\u4e0b\u8f7d"},{"location":"06-third-part-lib/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/#1_2","text":"\u5c0f\u8bf4\u7f51\u7ad9-\u7b14\u8da3\u770b\uff1aURL\uff1a http://www.biqukan.com/ \u672c\u6b21\u5b9e\u6218\u5c31\u662f\u4ece\u8be5\u7f51\u7ad9\u722c\u53d6\u5e76\u4fdd\u5b58\u4e00\u672c\u540d\u4e3a\u300a\u4e00\u5ff5\u6c38\u6052\u300b\u7684\u5c0f\u8bf4\u3002","title":"(1) \u5b9e\u6218\u80cc\u666f"},{"location":"06-third-part-lib/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/#2_1","text":"\u6211\u4eec\u5148\u770b\u4e0b\u300a\u4e00\u5ff5\u6c38\u6052\u300b\u5c0f\u8bf4\u7684\u7b2c\u4e00\u7ae0\u5185\u5bb9\uff0cURL\uff1a http://www.biqukan.com/1_1094/5403177.html \u6211\u4eec\u5148\u7528\u5df2\u7ecf\u5b66\u5230\u7684\u77e5\u8bc6\u83b7\u53d6HTML\u4fe1\u606f\u8bd5\u4e00\u8bd5\uff0c\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a import requests if __name__ == '__main__' : target = 'http://www.biqukan.com/1_1094/5403177.html' req = requests . get ( url = target ) print ( req . text ) \u8fd0\u884c\u4ee3\u7801\uff0c\u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7ed3\u679c\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5f88\u8f7b\u677e\u5730\u83b7\u53d6\u4e86HTML\u4fe1\u606f\u3002\u4f46\u662f\uff0c\u5f88\u663e\u7136\uff0c\u5f88\u591a\u4fe1\u606f\u662f\u6211\u4eec\u4e0d\u60f3\u770b\u5230\u7684\uff0c\u6211\u4eec\u53ea\u60f3\u83b7\u5f97\u5982\u53f3\u4fa7\u6240\u793a\u7684\u6b63\u6587\u5185\u5bb9\uff0c\u6211\u4eec\u4e0d\u5173\u5fc3div\u3001br\u8fd9\u4e9bhtml\u6807\u7b7e\u3002\u5982\u4f55\u628a\u6b63\u6587\u5185\u5bb9\u4ece\u8fd9\u4e9b\u4f17\u591a\u7684html\u6807\u7b7e\u4e2d\u63d0\u53d6\u51fa\u6765\u5462\uff1f\u8fd9\u5c31\u662f\u672c\u6b21\u5b9e\u6218\u7684\u4e3b\u8981\u5185\u5bb9\u3002","title":"(2) \u5c0f\u8bd5\u725b\u5200"},{"location":"06-third-part-lib/Python3%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8%E5%AE%9E%E6%88%98%E8%A7%A3%E6%9E%90/#beautiful-soup","text":"**\u722c\u866b\u7684\u7b2c\u4e00\u6b65\uff0c\u83b7\u53d6\u6574\u4e2a\u7f51\u9875\u7684HTML\u4fe1\u606f\uff0c\u6211\u4eec\u5df2\u7ecf\u5b8c\u6210\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u722c\u866b\u7684\u7b2c\u4e8c\u6b65\uff0c\u89e3\u6790HTML\u4fe1\u606f\uff0c\u63d0\u53d6\u6211\u4eec\u611f\u5174\u8da3\u7684\u5185\u5bb9\u3002**\u5bf9\u4e8e\u672c\u5c0f\u8282\u7684\u5b9e\u6218\uff0c\u6211\u4eec\u611f\u5174\u8da3\u7684\u5185\u5bb9\u5c31\u662f\u6587\u7ae0\u7684\u6b63\u6587\u3002\u63d0\u53d6\u7684\u65b9\u6cd5\u6709\u5f88\u591a\uff0c\u4f8b\u5982\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u3001Xpath\u3001Beautiful Soup\u7b49\u3002\u5bf9\u4e8e\u521d\u5b66\u8005\u800c\u8a00\uff0c\u6700\u5bb9\u6613\u7406\u89e3\uff0c\u5e76\u4e14\u4f7f\u7528\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u7528Beautiful Soup\u63d0\u53d6\u611f\u5174\u8da3\u5185\u5bb9\u3002 Beautiful Soup\u7684\u5b89\u88c5\u65b9\u6cd5\u548crequests\u4e00\u6837\uff0c\u4f7f\u7528\u5982\u4e0b\u6307\u4ee4\u5b89\u88c5(\u4e5f\u662f\u4e8c\u9009\u4e00)\uff1a pip install beautifulsoup4 easy_install beautifulsoup4 \u4e00\u4e2a\u5f3a\u5927\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u90fd\u4f1a\u6709\u4e00\u4e2a\u8be6\u7ec6\u7684\u5b98\u65b9\u6587\u6863\u3002\u6211\u4eec\u5f88\u5e78\u8fd0\uff0cBeautiful Soup\u4e5f\u662f\u6709\u4e2d\u6587\u7684\u5b98\u65b9\u6587\u6863\u3002 URL\uff1a http://beautifulsoup.readthedocs.io/zh_CN/latest/ \u540c\u7406\uff0c\u6211\u4f1a\u6839\u636e\u5b9e\u6218\u9700\u6c42\uff0c\u8bb2\u89e3Beautiful Soup\u5e93\u7684\u90e8\u5206\u4f7f\u7528\u65b9\u6cd5\uff0c\u66f4\u8be6\u7ec6\u7684\u5185\u5bb9\uff0c\u8bf7\u67e5\u770b\u5b98\u65b9\u6587\u6863\u3002 \u73b0\u5728\uff0c\u6211\u4eec\u4f7f\u7528\u5df2\u7ecf\u638c\u63e1\u7684\u5ba1\u67e5\u5143\u7d20\u65b9\u6cd5\uff0c\u67e5\u770b\u4e00\u4e0b\u6211\u4eec\u7684\u76ee\u6807\u9875\u9762\uff0c\u4f60\u4f1a\u770b\u5230\u5982\u4e0b\u5185\u5bb9\uff1a \u4e0d\u96be\u53d1\u73b0\uff0c\u6587\u7ae0\u7684\u6240\u6709\u5185\u5bb9\u90fd\u653e\u5728\u4e86\u4e00\u4e2a\u540d\u4e3adiv\u7684\u201c\u4e1c\u897f\u4e0b\u9762\u201d\uff0c\u8fd9\u4e2a\"\u4e1c\u897f\"\u5c31\u662fhtml\u6807\u7b7e\u3002HTML\u6807\u7b7e\u662fHTML\u8bed\u8a00\u4e2d\u6700\u57fa\u672c\u7684\u5355\u4f4d\uff0cHTML\u6807\u7b7e\u662fHTML\u6700\u91cd\u8981\u7684\u7ec4\u6210\u90e8\u5206\u3002\u4e0d\u7406\u89e3\uff0c\u6ca1\u5173\u7cfb\uff0c\u6211\u4eec\u518d\u4e3e\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a \u4e00\u4e2a\u5973\u4eba\u7684\u5305\u5305\u91cc\uff0c\u4f1a\u6709\u5f88\u591a\u4e1c\u897f\uff0c\u5979\u4eec\u4f1a\u6839\u636e\u81ea\u5df1\u7684\u4e60\u60ef\u5c06\u81ea\u5df1\u7684\u4e1c\u897f\u8fdb\u884c\u5206\u7c7b\u653e\u597d\u3002\u955c\u5b50\u548c\u53e3\u7ea2\u8fd9\u4e9b\u4f1a\u7ecf\u5e38\u7528\u5230\u7684\u4e1c\u897f\uff0c\u4f1a\u5f52\u653e\u5230\u5bb9\u6613\u62ff\u5230\u7684\u5916\u4fa7\u53e3\u888b\u91cc\u3002\u90a3\u4e9b\u4e0d\u7ecf\u5e38\u7528\u5230\uff0c\u9700\u8981\u6ce8\u610f\u5b89\u5168\u5b58\u653e\u7684\u8bc1\u4ef6\u4f1a\u653e\u5230\u4e0d\u5bb9\u6613\u62ff\u5230\u7684\u91cc\u4fa7\u53e3\u888b\u91cc\u3002 html\u6807\u7b7e\u5c31\u50cf\u4e00\u4e2a\u4e2a\u201c\u53e3\u888b\u201d\uff0c\u6bcf\u4e2a\u201c\u53e3\u888b\u201d\u90fd\u6709\u81ea\u5df1\u7684\u7279\u5b9a\u529f\u80fd\uff0c\u8d1f\u8d23\u5b58\u653e\u4e0d\u540c\u7684\u5185\u5bb9\u3002\u663e\u7136\uff0c\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u7684div\u6807\u7b7e\u4e0b\u5b58\u653e\u4e86\u6211\u4eec\u5173\u5fc3\u7684\u6b63\u6587\u5185\u5bb9\u3002\u8fd9\u4e2adiv\u6807\u7b7e\u662f\u8fd9\u6837\u7684\uff1a 1 \u7ec6\u5fc3\u7684\u670b\u53cb\u53ef\u80fd\u5df2\u7ecf\u53d1\u73b0\uff0c\u9664\u4e86div\u5b57\u6837\u5916\uff0c\u8fd8\u6709id\u548cclass\u3002id\u548cclass\u5c31\u662fdiv\u6807\u7b7e\u7684\u5c5e\u6027\uff0ccontent\u548cshowtxt\u662f\u5c5e\u6027\u503c\uff0c\u4e00\u4e2a\u5c5e\u6027\u5bf9\u5e94\u4e00\u4e2a\u5c5e\u6027\u503c\u3002\u8fd9\u4e1c\u897f\u6709\u4ec0\u4e48\u7528\uff1f\u5b83\u662f\u7528\u6765\u533a\u5206\u4e0d\u540c\u7684div\u6807\u7b7e\u7684\uff0c\u56e0\u4e3adiv\u6807\u7b7e\u53ef\u4ee5\u6709\u5f88\u591a\uff0c\u6211\u4eec\u600e\u4e48\u52a0\u4ee5\u533a\u5206\u4e0d\u540c\u7684div\u6807\u7b7e\u5462\uff1f\u5c31\u662f\u901a\u8fc7\u4e0d\u540c\u7684\u5c5e\u6027\u503c\u3002 \u4ed4\u7ec6\u89c2\u5bdf\u76ee\u6807\u7f51\u7ad9\u4e00\u756a\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\u8fd9\u6837\u4e00\u4e2a\u4e8b\u5b9e\uff1aclass\u5c5e\u6027\u4e3ashowtxt\u7684div\u6807\u7b7e\uff0c\u72ec\u4e00\u4efd\uff01\u8fd9\u4e2a\u6807\u7b7e\u91cc\u9762\u5b58\u653e\u7684\u5185\u5bb9\uff0c\u662f\u6211\u4eec\u5173\u5fc3\u7684\u6b63\u6587\u90e8\u5206\u3002 \u77e5\u9053\u8fd9\u4e2a\u4fe1\u606f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4f7f\u7528Beautiful Soup\u63d0\u53d6\u6211\u4eec\u60f3\u8981\u7684\u5185\u5bb9\u4e86\uff0c\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a from bs4 import BeautifulSoup import requests if __name__ == \"__main__\" : target = 'http://www.biqukan.com/1_1094/5403177.html' req = requests . get ( url = target ) html = req . text bf = BeautifulSoup ( html ) texts = bf . find_all ( 'div' , class_ = 'showtxt' ) print ( texts ) \u5728\u89e3\u6790html\u4e4b\u524d\uff0c\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2aBeautiful Soup\u5bf9\u8c61\u3002BeautifulSoup\u51fd\u6570\u91cc\u7684\u53c2\u6570\u5c31\u662f\u6211\u4eec\u5df2\u7ecf\u83b7\u5f97\u7684html\u4fe1\u606f\u3002\u7136\u540e\u6211\u4eec\u4f7f\u7528find_all\u65b9\u6cd5\uff0c\u83b7\u5f97html\u4fe1\u606f\u4e2d\u6240\u6709class\u5c5e\u6027\u4e3ashowtxt\u7684div\u6807\u7b7e\u3002find_all\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u83b7\u53d6\u7684\u6807\u7b7e\u540d\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570class_\u662f\u6807\u7b7e\u7684\u5c5e\u6027\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u662fclass\uff0c\u800c\u5e26\u4e86\u4e00\u4e2a\u4e0b\u5212\u7ebf\u5462\uff1f\u56e0\u4e3apython\u4e2dclass\u662f\u5173\u952e\u5b57\uff0c\u4e3a\u4e86\u9632\u6b62\u51b2\u7a81\uff0c\u8fd9\u91cc\u4f7f\u7528class_\u8868\u793a\u6807\u7b7e\u7684class\u5c5e\u6027\uff0cclass_\u540e\u9762\u8ddf\u7740\u7684showtxt\u5c31\u662f\u5c5e\u6027\u503c\u4e86\u3002\u770b\u4e0b\u6211\u4eec\u8981\u5339\u914d\u7684\u6807\u7b7e\u683c\u5f0f\uff1a 1 \u8fd9\u6837\u5bf9\u5e94\u7684\u770b\u4e00\u4e0b\uff0c\u662f\u4e0d\u662f\u5c31\u61c2\u4e86\uff1f\u53ef\u80fd\u6709\u4eba\u4f1a\u95ee\u4e86\uff0c\u4e3a\u4ec0\u4e48\u4e0d\u662ffind_all(\u2018div\u2019, id = \u2018content\u2019, class_ = \u2018showtxt\u2019)?\u8fd9\u6837\u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u5c5e\u6027\u662f\u4f5c\u4e3a\u67e5\u8be2\u65f6\u5019\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u6dfb\u52a0\u4e00\u4e2aclass_='showtxt\u2019\u6761\u4ef6\uff0c\u6211\u4eec\u5c31\u5df2\u7ecf\u80fd\u591f\u51c6\u786e\u5339\u914d\u5230\u6211\u4eec\u60f3\u8981\u7684\u6807\u7b7e\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u5c31\u4e0d\u5fc5\u518d\u6dfb\u52a0id\u8fd9\u4e2a\u5c5e\u6027\u4e86\u3002\u8fd0\u884c\u4ee3\u7801\u67e5\u770b\u6211\u4eec\u5339\u914d\u7684\u7ed3\u679c\uff1a \u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5df2\u7ecf\u987a\u5229\u5339\u914d\u5230\u6211\u4eec\u5173\u5fc3\u7684\u6b63\u6587\u5185\u5bb9\uff0c\u4f46\u662f\u8fd8\u6709\u4e00\u4e9b\u6211\u4eec\u4e0d\u60f3\u8981\u7684\u4e1c\u897f\u3002\u6bd4\u5982div\u6807\u7b7e\u540d\uff0cbr\u6807\u7b7e\uff0c\u4ee5\u53ca\u5404\u79cd\u7a7a\u683c\u3002\u600e\u4e48\u53bb\u9664\u8fd9\u4e9b\u4e1c\u897f\u5462\uff1f\u6211\u4eec\u7ee7\u7eed\u7f16\u5199\u4ee3\u7801\uff1a from bs4 import BeautifulSoup import requests if __name__ == \"__main__\" : target = 'http://www.biqukan.com/1_1094/5403177.html' req = requests . get ( url = target ) html = req . text bf = BeautifulSoup ( html ) texts = bf . find_all ( 'div' , class_ = 'showtxt' ) print ( texts [ 0 ] . text . replace ( ' \\xa0 ' * 8 , ' \\n\\n ' )) find_all\u5339\u914d\u7684\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u5217\u8868\u3002\u63d0\u53d6\u5339\u914d\u7ed3\u679c\u540e\uff0c\u4f7f\u7528text\u5c5e\u6027\uff0c\u63d0\u53d6\u6587\u672c\u5185\u5bb9\uff0c\u6ee4\u9664br\u6807\u7b7e\u3002\u968f\u540e\u4f7f\u7528replace\u65b9\u6cd5\uff0c\u5254\u9664\u7a7a\u683c\uff0c\u66ff\u6362\u4e3a\u56de\u8f66\u8fdb\u884c\u5206\u6bb5\u3002 \u5728html\u4e2d\u662f\u7528\u6765\u8868\u793a\u7a7a\u683c\u7684\u3002replace(\u2019\\xa0\u2019*8,\u2019\\n\\n\u2019)\u5c31\u662f\u53bb\u6389\u4e0b\u56fe\u7684\u516b\u4e2a\u7a7a\u683c\u7b26\u53f7\uff0c\u5e76\u7528\u56de\u8f66\u4ee3\u66ff\uff1a \u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u6211\u4eec\u5f88\u81ea\u7136\u7684\u5339\u914d\u5230\u4e86\u6240\u6709\u6b63\u6587\u5185\u5bb9\uff0c\u5e76\u8fdb\u884c\u4e86\u5206\u6bb5\u3002\u6211\u4eec\u5df2\u7ecf\u987a\u5229\u83b7\u5f97\u4e86\u4e00\u4e2a\u7ae0\u8282\u7684\u5185\u5bb9\uff0c\u8981\u60f3\u4e0b\u8f7d\u6b63\u672c\u5c0f\u8bf4\uff0c\u6211\u4eec\u5c31\u8981\u83b7\u53d6\u6bcf\u4e2a\u7ae0\u8282\u7684\u94fe\u63a5\u3002\u6211\u4eec\u5148\u5206\u6790\u4e0b\u5c0f\u8bf4\u76ee\u5f55\uff1a URL\uff1ahttp://www.biqukan.com/1_1094/ \u901a\u8fc7\u5ba1\u67e5\u5143\u7d20\uff0c\u6211\u4eec\u53d1\u73b0\u53ef\u4ee5\u53d1\u73b0\uff0c\u8fd9\u4e9b\u7ae0\u8282\u90fd\u5b58\u653e\u5728\u4e86class\u5c5e\u6027\u4e3alistmain\u7684div\u6807\u7b7e\u4e0b\uff0c\u9009\u53d6\u90e8\u5206html\u4ee3\u7801\u5982\u4e0b\uff1a < div class = \"listmain\" > < dl > < dt > \u300a\u4e00\u5ff5\u6c38\u6052\u300b\u6700\u65b0\u7ae0\u8282\u5217\u8868 </ dt > < dd >< a href = \"/1_1094/15932394.html\" > \u7b2c1027\u7ae0 \u7b2c\u5341\u9053\u95e8 </ a ></ dd > < dd >< a href = \"/1_1094/15923072.html\" > \u7b2c1026\u7ae0 \u7edd\u4f26\u9053\u6cd5\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15921862.html\" > \u7b2c1025\u7ae0 \u957f\u751f\u706f\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15918591.html\" > \u7b2c1024\u7ae0 \u4e00\u76ee\u6676\u6e0a </ a ></ dd > < dd >< a href = \"/1_1094/15906236.html\" > \u7b2c1023\u7ae0 \u901a\u5929\u9053\u95e8 </ a ></ dd > < dd >< a href = \"/1_1094/15903775.html\" > \u7b2c1022\u7ae0 \u56db\u5927\u51f6\u517d\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15890427.html\" > \u7b2c1021\u7ae0 \u9cc4\u9996\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15886627.html\" > \u7b2c1020\u7ae0 \u4e00\u89e6\u5373\u53d1\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15875306.html\" > \u7b2c1019\u7ae0 \u9b41\u7956\u7684\u6c14\u606f\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15871572.html\" > \u7b2c1018\u7ae0 \u7edd\u671b\u7684\u9b41\u7687\u57ce </ a ></ dd > < dd >< a href = \"/1_1094/15859514.html\" > \u7b2c1017\u7ae0 \u6211\u8fd8\u662f\u6068\u4f60\uff01 </ a ></ dd > < dd >< a href = \"/1_1094/15856137.html\" > \u7b2c1016\u7ae0 \u4ece\u6765\u6ca1\u6709\u4e16\u754c\u4e4b\u95e8\uff01 </ a ></ dd > < dt > \u300a\u4e00\u5ff5\u6c38\u6052\u300b\u6b63\u6587\u5377 </ dt > < dd >< a href = \"/1_1094/5386269.html\" > \u5916\u4f201 \u67ef\u7236\u3002 </ a ></ dd > < dd >< a href = \"/1_1094/5386270.html\" > \u5916\u4f202 \u695a\u7389\u5ae3\u3002 </ a ></ dd > < dd >< a href = \"/1_1094/5386271.html\" > \u5916\u4f203 \u9e66\u9e49\u4e0e\u76ae\u51bb\u3002 </ a ></ dd > < dd >< a href = \"/1_1094/5403177.html\" > \u7b2c\u4e00\u7ae0 \u4ed6\u53eb\u767d\u5c0f\u7eaf </ a ></ dd > < dd >< a href = \"/1_1094/5428081.html\" > \u7b2c\u4e8c\u7ae0 \u706b\u7076\u623f </ a ></ dd > < dd >< a href = \"/1_1094/5433843.html\" > \u7b2c\u4e09\u7ae0 \u516d\u53e5\u771f\u8a00 </ a ></ dd > < dd >< a href = \"/1_1094/5447905.html\" > \u7b2c\u56db\u7ae0 \u70bc\u7075 </ a ></ dd > </ dl > </ div > \u5728\u5206\u6790\u4e4b\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u4ecb\u7ecd\u4e00\u4e2a\u6982\u5ff5\uff1a\u7236\u8282\u70b9\u3001\u5b50\u8282\u70b9\u3001\u5b59\u8282\u70b9\u3002 \u548c \u9650\u5b9a\u4e86 \u6807\u7b7e\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u4f4d\u7f6e\uff0c\u4ed6\u4eec\u662f\u6210\u5bf9\u51fa\u73b0\u7684\uff0c\u6709\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5c31\u6709\u7ed3\u675f\u4f4d\u7f6e\u3002\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728 \u6807\u7b7e\u5305\u542b \u6807\u7b7e\uff0c\u90a3\u8fd9\u4e2a \u6807\u7b7e\u5c31\u662f \u6807\u7b7e\u7684\u5b50\u8282\u70b9\uff0c \u6807\u7b7e\u53c8\u5305\u542b \u6807\u7b7e\u548c \u6807\u7b7e\uff0c\u90a3\u4e48 \u6807\u7b7e\u548c \u6807\u7b7e\u5c31\u662f \u6807\u7b7e\u7684\u5b59\u8282\u70b9\u3002\u6709\u70b9\u7ed5\uff1f\u90a3\u4f60\u8bb0\u4f4f\u8fd9\u53e5\u8bdd\uff1a\u8c01\u5305\u542b\u8c01\uff0c\u8c01\u5c31\u662f\u8c01\u513f\u5b50\uff01 **\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u90fd\u662f\u76f8\u5bf9\u7684\u3002**\u6bd4\u5982\u5bf9\u4e8e \u6807\u7b7e\uff0c\u5b83\u7684\u5b50\u8282\u70b9\u662f \u6807\u7b7e\uff0c\u5b83\u7684\u7236\u8282\u70b9\u662f \u6807\u7b7e\u3002\u8fd9\u8ddf\u6211\u4eec\u4eba\u662f\u4e00\u6837\u7684\uff0c\u4e0a\u6709\u8001\u4e0b\u6709\u5c0f\u3002 \u770b\u5230\u8fd9\u91cc\u53ef\u80fd\u6709\u4eba\u4f1a\u95ee\uff0c\u8fd9\u6709\u597d\u591a \u6807\u7b7e\u548c \u6807\u7b7e\u554a\uff01\u4e0d\u540c\u7684 \u6807\u7b7e\uff0c\u5b83\u4eec\u662f\u4ec0\u4e48\u5173\u7cfb\u554a\uff1f\u663e\u7136\uff0c\u5144\u5f1f\u59d0\u59b9\u55bd\uff01\u6211\u4eec\u79f0\u5b83\u4eec\u4e3a\u5144\u5f1f\u7ed3\u70b9\u3002 \u597d\u4e86\uff0c\u6982\u5ff5\u660e\u786e\u6e05\u695a\uff0c\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u5206\u6790\u4e00\u4e0b\u95ee\u9898\u3002\u6211\u4eec\u770b\u5230\u6bcf\u4e2a\u7ae0\u8282\u7684\u540d\u5b57\u5b58\u653e\u5728\u4e86 \u6807\u7b7e\u91cc\u9762\u3002 \u6807\u7b7e\u8fd8\u6709\u4e00\u4e2ahref\u5c5e\u6027\u3002\u8fd9\u91cc\u5c31\u4e0d\u5f97\u4e0d\u63d0\u4e00\u4e0b \u6807\u7b7e\u7684\u5b9a\u4e49\u4e86\uff0c \u6807\u7b7e\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8d85\u94fe\u63a5\uff0c\u7528\u4e8e\u4ece\u4e00\u5f20\u9875\u9762\u94fe\u63a5\u5230\u53e6\u4e00\u5f20\u9875\u9762\u3002 \u6807\u7b7e\u6700\u91cd\u8981\u7684\u5c5e\u6027\u662f href \u5c5e\u6027\uff0c\u5b83\u6307\u793a\u94fe\u63a5\u7684\u76ee\u6807\u3002 \u6211\u4eec\u5c06\u4e4b\u524d\u83b7\u5f97\u7684\u7b2c\u4e00\u7ae0\u8282\u7684URL\u548c \u6807\u7b7e\u5bf9\u6bd4\u770b\u4e00\u4e0b\uff1a http://www.biqukan.com/1_1094/5403177.html \u7b2c\u4e00\u7ae0 \u4ed6\u53eb\u767d\u5c0f\u7eaf \u4e0d\u96be\u53d1\u73b0\uff0c \u6807\u7b7e\u4e2dhref\u5c5e\u6027\u5b58\u653e\u7684\u5c5e\u6027\u503c/1_1094/5403177.html\u662f\u7ae0\u8282URLhttp://www.biqukan.com/1_1094/5403177.html\u7684\u540e\u534a\u90e8\u5206\u3002\u5176\u4ed6\u7ae0\u8282\u4e5f\u662f\u5982\u6b64\uff01\u90a3\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u6839\u636e \u6807\u7b7e\u7684href\u5c5e\u6027\u503c\u83b7\u5f97\u6bcf\u4e2a\u7ae0\u8282\u7684\u94fe\u63a5\u548c\u540d\u79f0\u4e86\u3002 \u603b\u7ed3\u4e00\u4e0b\uff1a\u5c0f\u8bf4\u6bcf\u7ae0\u7684\u94fe\u63a5\u653e\u5728\u4e86class\u5c5e\u6027\u4e3alistmain\u7684 \u6807\u7b7e\u4e0b\u7684 \u6807\u7b7e\u4e2d\u3002\u94fe\u63a5\u5177\u4f53\u4f4d\u7f6e\u653e\u5728html->body->div->dl->dd->a\u7684href\u5c5e\u6027\u4e2d\u3002\u5148\u5339\u914dclass\u5c5e\u6027\u4e3alistmain\u7684 \u6807\u7b7e\uff0c\u518d\u5339\u914d \u6807\u7b7e\u3002\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a from bs4 import BeautifulSoup import requests if __name__ == \"__main__\" : target = 'http://www.biqukan.com/1_1094/' req = requests . get ( url = target ) html = req . text div_bf = BeautifulSoup ( html ) div = div_bf . find_all ( 'div' , class_ = 'listmain' ) print ( div [ 0 ]) \u8fd8\u662f\u4f7f\u7528find_all\u65b9\u6cd5\uff0c\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u5f88\u987a\u5229\uff0c\u63a5\u4e0b\u6765\u518d\u5339\u914d\u6bcf\u4e00\u4e2a \u6807\u7b7e\uff0c\u5e76\u63d0\u53d6\u7ae0\u8282\u540d\u548c\u7ae0\u8282\u6587\u7ae0\u3002\u5982\u679c\u6211\u4eec\u4f7f\u7528Beautiful Soup\u5339\u914d\u5230\u4e86\u4e0b\u9762\u8fd9\u4e2a \u6807\u7b7e\uff0c\u5982\u4f55\u63d0\u53d6\u5b83\u7684href\u5c5e\u6027\u548c \u6807\u7b7e\u91cc\u5b58\u653e\u7684\u7ae0\u8282\u540d\u5462\uff1f \u7b2c\u4e00\u7ae0 \u4ed6\u53eb\u767d\u5c0f\u7eaf 1 \u65b9\u6cd5\u5f88\u7b80\u5355\uff0c\u5bf9Beautiful Soup\u8fd4\u56de\u7684\u5339\u914d\u7ed3\u679ca\uff0c\u4f7f\u7528a.get(\u2018href\u2019)\u65b9\u6cd5\u5c31\u80fd\u83b7\u53d6href\u7684\u5c5e\u6027\u503c\uff0c\u4f7f\u7528a.string\u5c31\u80fd\u83b7\u53d6\u7ae0\u8282\u540d\uff0c\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a from bs4 import BeautifulSoup import requests if __name__ == \"__main__\" : server = 'http://www.biqukan.com/' target = 'http://www.biqukan.com/1_1094/' req = requests . get ( url = target ) html = req . text div_bf = BeautifulSoup ( html ) div = div_bf . find_all ( 'div' , class_ = 'listmain' ) a_bf = BeautifulSoup ( str ( div [ 0 ])) a = a_bf . find_all ( 'a' ) for each in a : print ( each . string , server + each . get ( 'href' )) \u56e0\u4e3afind_all\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u91cc\u8fb9\u5b58\u653e\u4e86\u5f88\u591a\u7684 \u6807\u7b7e\uff0c\u6240\u4ee5\u4f7f\u7528for\u5faa\u73af\u904d\u5386\u6bcf\u4e2a \u6807\u7b7e\u5e76\u6253\u5370\u51fa\u6765\uff0c\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u3002 \u6700\u4e0a\u9762\u5339\u914d\u7684\u4e00\u5343\u591a\u7ae0\u7684\u5185\u5bb9\u662f\u6700\u65b0\u66f4\u65b0\u768412\u7ae0\u8282\u7684\u94fe\u63a5\u3002\u8fd912\u7ae0\u5185\u5bb9\u4f1a\u548c\u4e0b\u9762\u7684\u91cd\u590d\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u6ee4\u9664\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709\u90a33\u4e2a\u5916\u4f20\uff0c\u6211\u4eec\u4e5f\u4e0d\u60f3\u8981\u3002\u8fd9\u4e9b\u90fd\u7b80\u5355\u5730\u5254\u9664\u5c31\u597d\u3002 #### \u6574\u5408\u4ee3\u7801 \u6bcf\u4e2a\u7ae0\u8282\u7684\u94fe\u63a5\u3001\u7ae0\u8282\u540d\u3001\u7ae0\u8282\u5185\u5bb9\u90fd\u6709\u4e86\u3002\u63a5\u4e0b\u6765\u5c31\u662f\u6574\u5408\u4ee3\u7801\uff0c\u5c06\u83b7\u5f97\u5185\u5bb9\u5199\u5165\u6587\u672c\u6587\u4ef6\u5b58\u50a8\u5c31\u597d\u4e86\u3002\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a from bs4 import BeautifulSoup import requests , sys \"\"\" \u7c7b\u8bf4\u660e:\u4e0b\u8f7d\u300a\u7b14\u8da3\u770b\u300b\u7f51\u5c0f\u8bf4\u300a\u4e00\u5ff5\u6c38\u6052\u300b Parameters: \u65e0 Returns: \u65e0 Modify: 2017-09-13 \"\"\" class downloader ( object ): def __init__ ( self ): self . server = 'http://www.biqukan.com/' self . target = 'http://www.biqukan.com/1_1094/' self . names = [] #\u5b58\u653e\u7ae0\u8282\u540d self . urls = [] #\u5b58\u653e\u7ae0\u8282\u94fe\u63a5 self . nums = 0 #\u7ae0\u8282\u6570 \"\"\" \u51fd\u6570\u8bf4\u660e:\u83b7\u53d6\u4e0b\u8f7d\u94fe\u63a5 Parameters: \u65e0 Returns: \u65e0 Modify: 2017-09-13 \"\"\" def get_download_url ( self ): req = requests . get ( url = self . target ) html = req . text div_bf = BeautifulSoup ( html ) div = div_bf . find_all ( 'div' , class_ = 'listmain' ) a_bf = BeautifulSoup ( str ( div [ 0 ])) a = a_bf . find_all ( 'a' ) self . nums = len ( a [ 15 :]) #\u5254\u9664\u4e0d\u5fc5\u8981\u7684\u7ae0\u8282\uff0c\u5e76\u7edf\u8ba1\u7ae0\u8282\u6570 for each in a [ 15 :]: self . names . append ( each . string ) self . urls . append ( self . server + each . get ( 'href' )) \"\"\" \u51fd\u6570\u8bf4\u660e:\u83b7\u53d6\u7ae0\u8282\u5185\u5bb9 Parameters: target - \u4e0b\u8f7d\u8fde\u63a5(string) Returns: texts - \u7ae0\u8282\u5185\u5bb9(string) Modify: 2017-09-13 \"\"\" def get_contents ( self , target ): req = requests . get ( url = target ) html = req . text bf = BeautifulSoup ( html ) texts = bf . find_all ( 'div' , class_ = 'showtxt' ) texts = texts [ 0 ] . text . replace ( ' \\xa0 ' * 8 , ' \\n\\n ' ) return texts \"\"\" \u51fd\u6570\u8bf4\u660e:\u5c06\u722c\u53d6\u7684\u6587\u7ae0\u5185\u5bb9\u5199\u5165\u6587\u4ef6 Parameters: name - \u7ae0\u8282\u540d\u79f0(string) path - \u5f53\u524d\u8def\u5f84\u4e0b,\u5c0f\u8bf4\u4fdd\u5b58\u540d\u79f0(string) text - \u7ae0\u8282\u5185\u5bb9(string) Returns: \u65e0 Modify: 2017-09-13 \"\"\" def writer ( self , name , path , text ): write_flag = True with open ( path , 'a' , encoding = 'utf-8' ) as f : f . write ( name + ' \\n ' ) f . writelines ( text ) f . write ( ' \\n\\n ' ) if __name__ == \"__main__\" : dl = downloader () dl . get_download_url () print ( '\u300a\u4e00\u5e74\u6c38\u6052\u300b\u5f00\u59cb\u4e0b\u8f7d\uff1a' ) for i in range ( dl . nums ): dl . writer ( dl . names [ i ], '\u4e00\u5ff5\u6c38\u6052.txt' , dl . get_contents ( dl . urls [ i ])) sys . stdout . write ( \" \u5df2\u4e0b\u8f7d: %.3f%% \" % float ( i / dl . nums ) + ' \\r ' ) sys . stdout . flush () print ( '\u300a\u4e00\u5e74\u6c38\u6052\u300b\u4e0b\u8f7d\u5b8c\u6210' ) \u5f88\u7b80\u5355\u7684\u7a0b\u5e8f\uff0c\u5355\u8fdb\u7a0b\u8dd1\uff0c\u6ca1\u6709\u5f00\u8fdb\u7a0b\u6c60\u3002\u4e0b\u8f7d\u901f\u5ea6\u7565\u6162\uff0c\u559d\u676f\u8336\u4f11\u606f\u4f11\u606f\u5427\u3002\u4ee3\u7801\u8fd0\u884c\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a 2 \u4f18\u7f8e\u58c1\u7eb8\u4e0b\u8f7d ###\uff081\uff09\u5b9e\u6218\u80cc\u666f \u5df2\u7ecf\u4f1a\u722c\u53d6\u6587\u5b57\u4e86\uff0c\u662f\u4e0d\u662f\u611f\u89c9\u722c\u866b\u8fd8\u662f\u86ee\u597d\u73a9\u7684\u5462\uff1f\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u8fdb\u884c\u4e00\u4e2a\u8fdb\u9636\u5b9e\u6218\uff0c\u4e86\u89e3\u4e00\u4e0b\u53cd\u722c\u866b\u3002 URL\uff1ahttps://unsplash.com/ \u770b\u4e00\u770b\u8fd9\u4e9b\u4f18\u7f8e\u7684\u58c1\u7eb8\uff0c\u8fd9\u4e2a\u7f51\u7ad9\u7684\u540d\u5b57\u53eb\u505aUnsplash\uff0c\u514d\u8d39\u9ad8\u6e05\u58c1\u7eb8\u5206\u4eab\u7f51\u662f\u4e00\u4e2a\u575a\u6301\u6bcf\u5929\u5206\u4eab\u9ad8\u6e05\u7684\u6444\u5f71\u56fe\u7247\u7684\u7ad9\u70b9\uff0c\u6bcf\u5929\u66f4\u65b0\u4e00\u5f20\u9ad8\u8d28\u91cf\u7684\u56fe\u7247\u7d20\u6750\uff0c\u5168\u662f\u751f\u6d3b\u4e2d\u7684\u666f\u8c61\u4f5c\u54c1\uff0c\u6e05\u65b0\u7684\u751f\u6d3b\u6c14\u606f\u56fe\u7247\u53ef\u4ee5\u4f5c\u4e3a\u684c\u9762\u58c1\u7eb8\u4e5f\u53ef\u4ee5\u5e94\u7528\u4e8e\u5404\u79cd\u9700\u8981\u7684\u73af\u5883\u3002 \u770b\u5230\u8fd9\u4e48\u4f18\u7f8e\u7684\u56fe\u7247\uff0c\u6211\u7684\u7b2c\u4e00\u53cd\u5e94\u5c31\u662f\u60f3\u6536\u85cf\u4e00\u4e9b\uff0c\u4f5c\u4e3a\u77e5\u4e4e\u6587\u7ae0\u7684\u9898\u56fe\u518d\u597d\u4e0d\u8fc7\u4e86\u3002\u6bcf\u5f20\u56fe\u7247\u6211\u90fd\u5f88\u559c\u6b22\uff0c\u6279\u91cf\u4e0b\u8f7d\u5427\uff0c\u4e0d\u591a\u722c\uff0c\u5c31\u4e0b\u8f7d50\u5f20\u597d\u4e86\u3002 ###\uff082\uff09\u5b9e\u6218\u8fdb\u9636 \u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\u6bcf\u4e2ahtml\u6807\u7b7e\u90fd\u6709\u5404\u81ea\u7684\u529f\u80fd\u3002 \u6807\u7b7e\u5b58\u653e\u4e00\u4e0b\u8d85\u94fe\u63a5\uff0c\u56fe\u7247\u5b58\u653e\u5728\u54ea\u4e2a\u6807\u7b7e\u91cc\u5462\uff1fhtml\u89c4\u5b9a\uff0c\u56fe\u7247\u7edf\u7edf\u7ed9\u6211\u653e\u5230 \u6807\u7b7e\u4e2d\uff01\u65e2\u7136\u8fd9\u6837\uff0c\u6211\u4eec\u622a\u53d6\u5c31Unsplash\u7f51\u7ad9\u4e2d\u7684\u4e00\u4e2a \u6807\u7b7e\uff0c\u5206\u6790\u4e00\u4e0b\uff1a 1 \u53ef\u4ee5\u770b\u5230\uff0c \u6807\u7b7e\u6709\u5f88\u591a\u5c5e\u6027\uff0c\u6709alt\u3001src\u3001class\u3001style\u5c5e\u6027\uff0c\u5176\u4e2dsrc\u5c5e\u6027\u5b58\u653e\u7684\u5c31\u662f\u6211\u4eec\u9700\u8981\u7684\u56fe\u7247\u4fdd\u5b58\u5730\u5740\uff0c\u6211\u4eec\u6839\u636e\u8fd9\u4e2a\u5730\u5740\u5c31\u53ef\u4ee5\u8fdb\u884c\u56fe\u7247\u7684\u4e0b\u8f7d\u3002 \u90a3\u4e48\uff0c\u8ba9\u6211\u4eec\u5148\u634b\u4e00\u634b\u8fd9\u4e2a\u8fc7\u7a0b\uff1a \u4f7f\u7528requeusts\u83b7\u53d6\u6574\u4e2a\u7f51\u9875\u7684HTML\u4fe1\u606f\uff1b \u4f7f\u7528Beautiful Soup\u89e3\u6790HTML\u4fe1\u606f\uff0c\u627e\u5230\u6240\u6709 \u6807\u7b7e\uff0c\u63d0\u53d6src\u5c5e\u6027\uff0c\u83b7\u53d6\u56fe\u7247\u5b58\u653e\u5730\u5740\uff1b \u6839\u636e\u56fe\u7247\u5b58\u653e\u5730\u5740\uff0c\u4e0b\u8f7d\u56fe\u7247\u3002 \u6211\u4eec\u4fe1\u5fc3\u6ee1\u6ee1\u5730\u6309\u7167\u8fd9\u4e2a\u601d\u8def\u722c\u53d6Unsplash\u8bd5\u4e00\u8bd5\uff0c\u7f16\u5199\u4ee3\u7801\u5982\u4e0b\uff1a import requests if __name__ == '__main__': target = 'https://unsplash.com/' req = requests.get(url=target) print(req.text) 1 2 3 4 5 6 \u6309\u7167\u6211\u4eec\u7684\u8bbe\u60f3\uff0c\u6211\u4eec\u5e94\u8be5\u80fd\u627e\u5230\u5f88\u591a \u6807\u7b7e\u3002\u4f46\u662f\u6211\u4eec\u53d1\u73b0\uff0c\u9664\u4e86\u4e00\u4e9b","title":"Beautiful Soup"},{"location":"06-third-part-lib/Simple%20Minecraft-inspired%20program%20using%20Python%20and%20Pyglet/","text":"Simple Minecraft-inspired program using Python and Pyglet \u00b6 https://github.com/fogleman/Minecraft https://blog.csdn.net/Python_old_man/article/details/121198061","title":"Simple Minecraft-inspired program using Python and Pyglet"},{"location":"06-third-part-lib/Simple%20Minecraft-inspired%20program%20using%20Python%20and%20Pyglet/#simple-minecraft-inspired-program-using-python-and-pyglet","text":"https://github.com/fogleman/Minecraft https://blog.csdn.net/Python_old_man/article/details/121198061","title":"Simple Minecraft-inspired program using Python and Pyglet"},{"location":"06-third-part-lib/mkdocs/","text":"mkdocs \u914d\u7f6e\u8bf4\u660e \u00b6 \u5b98\u65b9\u5168\u90e8\u914d\u7f6e\uff1a https://www.mkdocs.org/user-guide/configuration/ \u4e2d\u6587\u914d\u7f6e\uff1a https://markdown-docs-zh.readthedocs.io/zh_CN/latest/user-guide/configuration/ \u672c\u5730\u57fa\u672c\u914d\u7f6e \u00b6 site_name: Michale An Blog site_author: Michael An pages: - \u9996\u9875: index.md - \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b: 1.md - UUID: 2.md # \u8fd9\u662f\u4e00\u4e2a\u4e8c\u7ea7\u5bfc\u822a nav: - Home: \"index.md\" - User Guide: - \"\u539f\u5730\u7b97\u6cd5\": \"in-place.md\" - \"\u4e8c\u5206\u7b97\u6cd5\": \"part-two.md\" - Learn: - \"\u53cc\u6307\u9488\": \"double-pointer.md\" - \"\u5206\u6cbb\u7b97\u6cd5\": \"diverce.md\" - \"\u805a\u7c7b\u7b97\u6cd5\": \"K-means.md\" - About: - \"License\": \"process-and-thread.md\" - \"Release Notes\": \"uuid.md\" # https://mkdocs.zimoapps.com/user-guide/ \u8be6\u7ec6\u8d44\u6599\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc docs_dir: ./docs copyright: Copyright &copy; TEST # site_url: https://michael18811380328.github.io/blog/ # repo_name: blog # repo_url: https://github.com/Michael18811380328/blog theme: material # readthedocs # mkdocs # material # https://github.com/squidfunk/mkdocs-material # \u8fd9\u4e2a\u4e3b\u9898\u9700\u8981\u81ea\u5b9a\u4e49 pip \u5b89\u88c5 # \u5176\u4ed6\u7684\u4e3b\u9898\u53c2\u8003 https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes # theme: # name: material # # icon: # logo: assets/logo32_32.png # # features: # # - tabs # palette: # primary: deep orange # accent: # plugins: # - search # necessary for search to work # - awesome-pages # # Customization # extra: # social: # - icon: fontawesome/brands/github # link: https://github.com/Michael18811380328/blog # # Extensions # markdown_extensions: # - markdown.extensions.admonition # - markdown.extensions.attr_list # - markdown.extensions.codehilite: # guess_lang: true # - markdown.extensions.def_list # - markdown.extensions.footnotes # - markdown.extensions.meta # - markdown.extensions.toc: # permalink: true # toc_depth: \"1-4\" \u4e2d\u6587\u914d\u7f6e \u00b6 \u7b80\u4ecb \u00b6 \u9879\u76ee\u914d\u7f6e\u5728 mkdocs.yml \u6587\u4ef6\u4e2d\u8bbe\u7f6e. \u914d\u7f6e\u6587\u4ef6\u4e2d\u81f3\u5c11\u5e94\u5305\u542b site_name \u9009\u9879. \u5176\u4f59\u9009\u9879\u90fd\u662f\u53ef\u9009\u7684. \u9879\u76ee\u4fe1\u606f \u00b6 site_name \u00b6 \u8fd9\u4e2a\u662f \u5fc5\u987b\u7684 , \u4ee3\u8868\u7528\u4e8e\u9879\u76ee\u6587\u6863\u7684\u4e3b\u6807\u9898. \u4f8b\u5982: site_name: Mashmallow Generator \u6e32\u67d3\u4e3b\u9898\u65f6\u8be5\u9009\u9879\u5c06\u4f5c\u4e3a site_name \u73af\u5883\u53d8\u91cf\u4f20\u9012. site_url \u00b6 \u8bbe\u7f6e\u7ad9\u70b9\u7684 URL. \u8fd9\u5c06\u6dfb\u52a0\u5e26\u6709\u89c4\u8303\u7684 URL \u7684 link \u6807\u7b7e\u5230 HTML \u5934\u90e8. \u9ed8\u8ba4\u503c : null repo_url \u00b6 \u5982\u679c\u8bbe\u7f6e\u4e86\u8be5\u9879, \u6bcf\u4e2a\u9875\u9762\u5c06\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u94fe\u63a5\u5230\u4f60\u7684 GitHub \u6216 Bitbucket \u7248\u672c\u5e93. repo_url: https://github.com/example/repository/ \u9ed8\u8ba4\u503c : null repo_name \u00b6 \u5982\u679c\u8bbe\u7f6e\u4e86\u8be5\u9879, \u6bcf\u4e2a\u9875\u9762\u5c06\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u94fe\u63a5\u5230\u4f60\u7684 GitHub \u6216 Bitbucket \u7248\u672c\u5e93. \u9ed8\u8ba4\u503c : 'GitHub' \u6216 'Bitbucket' \u5982\u679c repo_url \u5339\u914d\u76f8\u5e94\u57df\u540d, \u5426\u5219\u4e3a null site_description \u00b6 \u8bbe\u7f6e\u7ad9\u70b9\u63cf\u8ff0. \u8fd9\u5c06\u8fd9 HTML \u5934\u90e8\u6dfb\u52a0\u4e00\u4e2a meta \u6807\u7b7e. \u9ed8\u8ba4\u503c : null site_author \u00b6 \u8bbe\u7f6e\u7ad9\u70b9\u4f5c\u8005. \u8fd9\u5c06\u8fd9 HTML \u5934\u90e8\u6dfb\u52a0\u4e00\u4e2a meta \u6807\u7b7e. \u9ed8\u8ba4\u503c : null site_favicon \u00b6 \u8bbe\u7f6e favicon . \u9700\u8981\u5c06 favicon.ico \u653e\u5230 docs/ \u76ee\u5f55, \u914d\u7f6e\u6587\u4ef6\u5c06\u5982\u4e0b\u6240\u793a: site_favicon: favicon.ico \u9ed8\u8ba4\u503c : null copyright \u00b6 \u8bbe\u7f6e\u7ad9\u70b9\u7248\u6743\u4fe1\u606f. \u9ed8\u8ba4\u503c : null google_analytics \u00b6 \u8bbe\u7f6e Google \u7ad9\u70b9\u5206\u6790\u5de5\u5177. google_analytics: ['UA-36723568-3', 'mkdocs.org'] \u9ed8\u8ba4\u503c : null \u76ee\u5f55\u7ed3\u6784 \u00b6 pages \u00b6 \u8be5\u9009\u9879\u8bbe\u7f6e\u9700\u8981\u751f\u6210\u7684\u9875\u9762\u8303\u56f4. \u8be5\u9009\u9879\u4e3a\u4e00\u4e2a\u5217\u8868. \u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\u8868\u793a\u4e00\u4e2a\u9875\u9762. \u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4ee3\u8868\u6e90\u6587\u4ef6\u7684\u8def\u5f84, \u5e94\u4e3a\u76f8\u5bf9\u4e8e docs_dir \u7684\u8def\u5f84. \u5176\u4f59\u5b57\u7b26\u4e32\u4ee3\u8868\u5bfc\u822a\u6761\u4e2d\u7684\u9875\u9762\u6807\u9898. \u4e0b\u9762\u7684\u4f8b\u5b50\u5c06\u5728\u6784\u5efa\u9636\u6bb5\u751f\u6210\u4e09\u4e2a\u9875\u9762: pages: - ['index.md', 'Introduction'] - ['user-guide.md', 'User Guide'] - ['about.md', 'About'] \u5047\u5b9a docs_dir \u91c7\u7528\u9ed8\u8ba4\u503c docs , \u5219\u6784\u5efa\u9636\u6bb5\u6e90\u6587\u4ef6\u7684\u8def\u5f84\u5206\u522b\u4e3a docs/index.md , docs/user-guide.md \u548c docs/about.md . \u5982\u679c\u4f60\u6709\u5927\u91cf\u9879\u76ee\u6587\u6863, \u4f60\u9700\u8981\u7528\u5bfc\u822a\u5934\u90e8\u6765\u6309\u76ee\u5f55\u6765\u7ec4\u7ec7\u4f60\u7684\u5bfc\u822a. \u4f60\u53ef\u4ee5\u5728 page \u9009\u9879\u4e2d\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684\u5b57\u7b26\u4e32\u6765\u8868\u793a\u5bfc\u822a\u5934\u90e8, \u5982\u4e0b\u6240\u793a: pages: - ['index.md', 'Introduction'] - ['user-guide/creating.md', 'User Guide', 'Creating a new Mashmallow project'] - ['user-guide/api.md', 'User Guide', 'Mashmallow API guide'] - ['user-guide/configuration.md', 'User Guide', 'Configuring Mashmallow'] - ['about/license.md', 'About', 'License'] \u6784\u5efa\u76ee\u5f55 \u00b6 theme \u00b6 \u8bbe\u7f6e\u7ad9\u70b9\u4e3b\u9898, \u67e5\u770b\u53ef\u7528\u7684\u4e3b\u9898 \u6587\u6863\u6837\u5f0f . \u9ed8\u8ba4\u503c : 'mkdocs' theme_dir \u00b6 \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u4e3b\u9898. \u8fd9\u53ef\u4ee5\u662f\u76f8\u5bf9\u76ee\u5f55, \u76f8\u5bf9\u4e8e\u4f60\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\u6765\u89e3\u6790\u8be5\u8def\u5f84, \u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84. \u67e5\u770b \u6587\u6863\u6837\u5f0f \u4e86\u89e3\u81ea\u5b9a\u4e49\u4e3b\u9898. \u9ed8\u8ba4\u503c : null docs_dir \u00b6 \u8bbe\u7f6e\u5305\u542b markdown \u6e90\u7801\u7684\u76ee\u5f55. \u8fd9\u53ef\u4ee5\u662f\u76f8\u5bf9\u76ee\u5f55, \u76f8\u5bf9\u4e8e\u4f60\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\u6765\u89e3\u6790\u8be5\u8def\u5f84, \u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84. \u9ed8\u8ba4\u503c : 'docs' site_dir \u00b6 \u8bbe\u7f6e\u751f\u6210\u7684 HTML \u548c\u5176\u4ed6\u6587\u4ef6\u6240\u5728\u76ee\u5f55. \u8fd9\u53ef\u4ee5\u662f\u76f8\u5bf9\u76ee\u5f55, \u76f8\u5bf9\u4e8e\u4f60\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\u6765\u89e3\u6790\u8be5\u8def\u5f84, \u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84. \u9ed8\u8ba4\u503c : 'site' Note : \u5982\u679c\u4f60\u4f7f\u7528\u4e86\u7248\u672c\u63a7\u5236\u7cfb\u7edf, \u901a\u5e38\u4e0d\u5e0c\u671b \u6784\u5efa\u8f93\u51fa \u6587\u4ef6\u88ab\u63d0\u4ea4\u5230\u7248\u672c\u5e93, \u800c\u53ea\u9700\u8981\u5bf9 \u6e90\u7801 \u8fdb\u884c\u7248\u672c\u63a7\u5236. \u4f8b\u5982, \u5982\u679c\u4f7f\u7528 git , \u4f60\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\u5230 .gitignore \u6587\u4ef6: site/ \u5982\u679c\u4f7f\u7528\u5176\u4ed6\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u8bf7\u53c2\u9605\u76f8\u5e94\u7684\u6587\u6863\u4ee5\u6392\u9664\u7279\u5b9a\u76ee\u5f55. extra_css \u00b6 \u8bbe\u5b9a\u4e3b\u9898\u6240\u9700\u7684\u989d\u5916\u7684\u6837\u5f0f\u6587\u4ef6. \u9ed8\u8ba4\u503c : \u9ed8\u8ba4\u60c5\u51b5\u4e0b extra_css \u5c06\u5305\u542b docs_dir \u76ee\u5f55\u4e0b\u7684\u6837\u5f0f\u6587\u4ef6, \u5982\u679c\u6ca1\u6709\u627e\u5230\u5219\u4e3a [] (\u7a7a\u8868). extra_javascript \u00b6 \u8bbe\u5b9a\u4e3b\u9898\u6240\u9700\u7684\u989d\u5916\u7684\u811a\u672c\u6587\u4ef6. \u9ed8\u8ba4\u503c : \u9ed8\u8ba4\u60c5\u51b5\u4e0b extra_javascript \u5c06\u5305\u542b docs_dir \u76ee\u5f55\u4e0b\u7684\u811a\u672c\u6587\u4ef6, \u5982\u679c\u6ca1\u6709\u627e\u5230\u5219\u4e3a [] (\u7a7a\u8868). \u9884\u89c8\u63a7\u5236 \u00b6 use_directory_urls \u00b6 \u8bbe\u7f6e\u6587\u6863\u4e2d\u7684\u94fe\u63a5\u7c7b\u578b. \u4e0b\u8868\u8868\u660e\u4e86 use_directory_urls \u8bbe\u7f6e\u4e3a true \u548c false \u60c5\u51b5\u4e0b\u6587\u6863\u4e2d\u7684 URLs \u7684\u4e0d\u540c. Source file Generated HTML use_directory_urls=true use_directory_urls=false index.md index.html / /index.html api-guide.md api-guide/index.html /api-guide/ /api-guide/index.html about.md about/index.html /about/ /about/index.html \u9ed8\u8ba4\u7684 use_directory_urls=true \u9009\u9879\u80fd\u751f\u6210\u7528\u6237\u53cb\u597d\u7684 URLs, \u901a\u5e38\u60c5\u51b5\u4e0b\u4f60\u4e0d\u5e94\u8be5\u4fee\u6539\u9ed8\u8ba4\u9009\u9879. \u66ff\u4ee3\u9009\u9879\u5728\u4f60\u9700\u8981\u76f4\u63a5\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6253\u5f00\u6587\u6863, \u5e76\u4fdd\u6301\u94fe\u63a5\u6b63\u786e\u65f6\u5f88\u6709\u7528, \u56e0\u4e3a\u5b83\u521b\u5efa\u7684\u94fe\u63a5\u76f4\u63a5\u6307\u5411\u76ee\u6807 \u6587\u4ef6 \u800c\u4e0d\u662f\u76ee\u6807 \u6587\u4ef6\u5939 . \u9ed8\u8ba4\u503c : true dev_addr \u00b6 \u8bbe\u7f6e\u8fd0\u884c mkdocs serve \u65f6\u7684\u94fe\u63a5\u5730\u5740. \u8fd9\u4f7f\u5f97\u4f60\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7aef\u53e3, \u4e5f\u53ef\u4ee5\u4f7f\u7528 0.0.0.0 \u5730\u5740\u4f7f\u4f60\u53ef\u4ee5\u7528\u672c\u5730\u7f51\u7edc\u8bbf\u95ee. \u6240\u6709\u7684\u8bbe\u7f6e\u90fd\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u8bbe\u7f6e, \u4f8b\u5982: mkdocs serve --dev-addr=0.0.0.0:80 # Run on port 80, accessible over the local network. \u9ed8\u8ba4\u503c : '127.0.0.1:8000' \u683c\u5f0f\u5316\u9009\u9879 \u00b6 markdown_extensions \u00b6 MkDocs \u4f7f\u7528 Python Markdown \u8f6c\u5316 Markdown \u6587\u4ef6\u4e3a HTML \u6587\u6863. Python Markdown \u652f\u6301\u5927\u91cf\u683c\u5f0f\u5316\u9875\u9762\u7684 \u6269\u5c55 . \u8be5\u9009\u9879\u4f7f\u4f60\u53ef\u4ee5\u4f7f\u7528 MkDocs \u9ed8\u8ba4\u6269\u5c55\u4e4b\u5916\u7684\u6269\u5c55 ( meta , toc , tables , \u548c fenced_code ). \u4f8b\u5982, \u6fc0\u6d3b SmartyPants typography extension \u6269\u5c55, \u8bbe\u7f6e\u5982\u4e0b: markdown_extensions: [smartypants] \u9ed8\u8ba4\u503c : [] Next Previous \u82f1\u6587\u914d\u7f6e \u00b6 Configuration \u00b6 Guide to all available configuration settings. Introduction \u00b6 Project settings are configured by default using a YAML configuration file in the project directory named mkdocs.yml . You can specify another path for it by using the -f / --config-file option (see mkdocs build --help ). As a minimum, this configuration file must contain the site_name and site_url settings. All other settings are optional. Project information \u00b6 site_name \u00b6 This is a required setting , and should be a string that is used as the main title for the project documentation. For example: site_name : Marshmallow Generator When rendering the theme this setting will be passed as the site_name context variable. site_url \u00b6 Set the canonical URL of the site. This will add a link tag with the canonical URL to the head section of each HTML page. If the 'root' of the MkDocs site will be within a subdirectory of a domain, be sure to include that subdirectory in the setting ( https://example.com/foo/ ). This setting is also used for mkdocs serve : the server will be mounted onto a path taken from the path component of the URL, e.g. some/page.md will be served from http://127.0.0.1:8000/foo/some/page/ to mimic the expected remote layout. default : null repo_url \u00b6 When set, provides a link to your repository (GitHub, Bitbucket, GitLab, ...) on each page. repo_url : https://github.com/example/repository/ default : null repo_name \u00b6 When set, provides the name for the link to your repository on each page. default : 'GitHub' , 'Bitbucket' or 'GitLab' if the repo_url matches those domains, otherwise the hostname from the repo_url . edit_uri \u00b6 The path from the base repo_url to the docs directory when directly viewing a page, accounting for specifics of the repository host (e.g. GitHub, Bitbucket, etc), the branch, and the docs directory itself. MkDocs concatenates repo_url and edit_uri , and appends the input path of the page. When set, and if your theme supports it, provides a link directly to the page in your source repository. This makes it easier to find and edit the source for the page. If repo_url is not set, this option is ignored. On some themes, setting this option may cause an edit link to be used in place of a repository link. Other themes may show both links. The edit_uri supports query ('?') and fragment ('#') characters. For repository hosts that use a query or a fragment to access the files, the edit_uri might be set as follows. (Note the ? and # in the URI...) # Query string example edit_uri : '?query=root/path/docs/' # Hash fragment example edit_uri : '#root/path/docs/' For other repository hosts, simply specify the relative path to the docs directory. # Query string example edit_uri : root/path/docs/ Note On a few known hosts (specifically GitHub, Bitbucket and GitLab), the edit_uri is derived from the 'repo_url' and does not need to be set manually. Simply defining a repo_url will automatically populate the edit_uri configs setting. For example, for a GitHub- or GitLab-hosted repository, the edit_uri would be automatically set as edit/master/docs/ (Note the edit path and master branch). For a Bitbucket-hosted repository, the equivalent edit_uri would be automatically set as src/default/docs/ (note the src path and default branch). To use a different URI than the default (for example a different branch), simply set the edit_uri to your desired string. If you do not want any \"edit URL link\" displayed on your pages, then set edit_uri to an empty string to disable the automatic setting. Warning On GitHub and GitLab, the default \"edit\" path ( edit/master/docs/ ) opens the page in the online editor. This functionality requires that the user have and be logged in to a GitHub/GitLab account. Otherwise, the user will be redirected to a login/signup page. Alternatively, use the \"blob\" path ( blob/master/docs/ ) to open a read-only view, which supports anonymous access. default : edit/master/docs/ for GitHub and GitLab repos or src/default/docs/ for a Bitbucket repo, if repo_url matches those domains, otherwise null site_description \u00b6 Set the site description. This will add a meta tag to the generated HTML header. default : null site_author \u00b6 Set the name of the author. This will add a meta tag to the generated HTML header. default : null copyright \u00b6 Set the copyright information to be included in the documentation by the theme. default : null remote_branch \u00b6 Set the remote branch to commit to when using gh-deploy to deploy to GitHub Pages. This option can be overridden by a command line option in gh-deploy . default : gh-pages remote_name \u00b6 Set the remote name to push to when using gh-deploy to deploy to GitHub Pages. This option can be overridden by a command line option in gh-deploy . default : origin Documentation layout \u00b6 nav \u00b6 This setting is used to determine the format and layout of the global navigation for the site. A minimal navigation configuration could look like this: nav : - \"index.md\" - \"about.md\" All paths must be relative to the mkdocs.yml configuration file. See the section on configuring pages and navigation for a more detailed breakdown, including how to create sub-sections. Navigation items may also include links to external sites. While titles are optional for internal links, they are required for external links. An external link may be a full URL or a relative URL. Any path which is not found in the files is assumed to be an external link. See the section about [Meta-Data] on how MkDocs determines the page title of a document. nav : - Introduction : \"index.md\" - \"about.md\" - \"Issue Tracker\" : \"https://example.com/\" In the above example, the first two items point to local files while the third points to an external site. However, sometimes the MkDocs site is hosted in a subdirectory of a project's site and you may want to link to other parts of the same site without including the full domain. In that case, you may use an appropriate relative URL. site_url : https://example.com/foo/ nav : - Home : \"../\" - \"User Guide\" : \"user-guide.md\" - \"Bug Tracker\" : \"/bugs/\" In the above example, two different styles of external links are used. First, note that the site_url indicates that the MkDocs site is hosted in the /foo/ subdirectory of the domain. Therefore, the Home navigation item is a relative link that steps up one level to the server root and effectively points to https://example.com/ . The Bug Tracker item uses an absolute path from the server root and effectively points to https://example.com/bugs/ . Of course, the User Guide points to a local MkDocs page. default : By default nav will contain an alphanumerically sorted, nested list of all the Markdown files found within the docs_dir and its sub-directories. Index files will always be listed first within a sub-section. Build directories \u00b6 theme \u00b6 Sets the theme and theme specific configuration of your documentation site. May be either a string or a set of key/value pairs. If a string, it must be the string name of a known installed theme. For a list of available themes visit Choosing Your Theme . An example set of key/value pairs might look something like this: theme : name : mkdocs locale : en custom_dir : my_theme_customizations/ static_templates : - sitemap.html include_sidebar : false If a set of key/value pairs, the following nested keys can be defined: name: \u00b6 The string name of a known installed theme. For a list of available themes visit Choosing Your Theme . locale: \u00b6 A code representing the language of your site. See Localizing your theme for details. custom_dir: \u00b6 A directory containing a custom theme. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file or it can be an absolute directory path from the root of your local file system. See Customizing Your Theme for details if you would like to tweak an existing theme. See the Theme Developer Guide if you would like to build your own theme from the ground up. static_templates: \u00b6 A list of templates to render as static pages. The templates must be located in either the theme's template directory or in the custom_dir defined in the theme configuration. (theme specific keywords) \u00b6 Any additional keywords supported by the theme can also be defined. See the documentation for the theme you are using for details. default : 'mkdocs' docs_dir \u00b6 The directory containing the documentation source markdown files. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file, or it can be an absolute directory path from the root of your local file system. default : 'docs' site_dir \u00b6 The directory where the output HTML and other files are created. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file, or it can be an absolute directory path from the root of your local file system. default : 'site' Note: If you are using source code control you will normally want to ensure that your build output files are not committed into the repository, and only keep the source files under version control. For example, if using git you might add the following line to your .gitignore file: site/ If you're using another source code control tool, you'll want to check its documentation on how to ignore specific directories. extra_css \u00b6 Set a list of CSS files in your docs_dir to be included by the theme. For example, the following example will include the extra.css file within the css subdirectory in your docs_dir . extra_css : - css/extra.css - css/second_extra.css default : [] (an empty list). extra_javascript \u00b6 Set a list of JavaScript files in your docs_dir to be included by the theme. See the example in extra_css for usage. default : [] (an empty list). extra_templates \u00b6 Set a list of templates in your docs_dir to be built by MkDocs. To see more about writing templates for MkDocs read the documentation about [custom themes] and specifically the section about the [available variables] to templates. See the example in extra_css for usage. default : [] (an empty list). extra \u00b6 A set of key-value pairs, where the values can be any valid YAML construct, that will be passed to the template. This allows for great flexibility when creating custom themes. For example, if you are using a theme that supports displaying the project version, you can pass it to the theme like this: extra : version : 1.0 default : By default extra will be an empty key-value mapping. Preview controls \u00b6 use_directory_urls \u00b6 This setting controls the style used for linking to pages within the documentation. The following table demonstrates how the URLs used on the site differ when setting use_directory_urls to true or false . Source file use_directory_urls: true use_directory_urls: false index.md / /index.html api-guide.md /api-guide/ /api-guide.html about/license.md /about/license/ /about/license.html The default style of use_directory_urls: true creates more user friendly URLs, and is usually what you'll want to use. The alternate style can be useful if you want your documentation to remain properly linked when opening pages directly from the file system, because it creates links that point directly to the target file rather than the target directory . default : true strict \u00b6 Determines how warnings are handled. Set to true to halt processing when a warning is raised. Set to false to print a warning and continue processing. default : false dev_addr \u00b6 Determines the address used when running mkdocs serve . Must be of the format IP:PORT . Allows a custom default to be set without the need to pass it through the --dev-addr option every time the mkdocs serve command is called. default : '127.0.0.1:8000' See also: site_url . Formatting options \u00b6 markdown_extensions \u00b6 MkDocs uses the Python Markdown library to translate Markdown files into HTML. Python Markdown supports a variety of extensions that customize how pages are formatted. This setting lets you enable a list of extensions beyond the ones that MkDocs uses by default ( meta , toc , tables , and fenced_code ). For example, to enable the SmartyPants typography extension , use: markdown_extensions : - smarty Some extensions provide configuration options of their own. If you would like to set any configuration options, then you can nest a key/value mapping ( option_name: option value ) of any options that a given extension supports. See the documentation for the extension you are using to determine what options they support. For example, to enable permalinks in the (included) toc extension, use: markdown_extensions : - toc : permalink : True Note that a colon ( : ) must follow the extension name ( toc ) and then on a new line the option name and value must be indented and separated by a colon. If you would like to define multiple options for a single extension, each option must be defined on a separate line: markdown_extensions : - toc : permalink : True separator : \"_\" Add an additional item to the list for each extension. If you have no configuration options to set for a specific extension, then simply omit options for that extension: markdown_extensions : - smarty - toc : permalink : True - sane_lists In the above examples, each extension is a list item (starts with a - ). As an alternative, key/value pairs can be used instead. However, in that case an empty value must be provided for extensions for which no options are defined. Therefore, the last example above could also be defined as follows: markdown_extensions : smarty : {} toc : permalink : True sane_lists : {} This alternative syntax is required if you intend to override some options via inheritance . See Also: The Python-Markdown documentation provides a list of extensions which are available out-of-the-box. For a list of configuration options available for a given extension, see the documentation for that extension. You may also install and use various third party extensions . Consult the documentation provided by those extensions for installation instructions and available configuration options. default : [] (an empty list). plugins \u00b6 A list of plugins (with optional configuration settings) to use when building the site. See the Plugins documentation for full details. If the plugins config setting is defined in the mkdocs.yml config file, then any defaults (such as search ) are ignored and you need to explicitly re-enable the defaults if you would like to continue using them: plugins : - search - your_other_plugin To define options for a given plugin, use a nested set of key/value pairs: plugins : - search - your_other_plugin : option1 : value option2 : other value In the above examples, each plugin is a list item (starts with a - ). As an alternative, key/value pairs can be used instead. However, in that case an empty value must be provided for plugins for which no options are defined. Therefore, the last example above could also be defined as follows: plugins : search : {} your_other_plugin : option1 : value option2 : other value This alternative syntax is required if you intend to override some options via inheritance . To completely disable all plugins, including any defaults, set the plugins setting to an empty list: plugins : [] default : ['search'] (the \"search\" plugin included with MkDocs). Search \u00b6 A search plugin is provided by default with MkDocs which uses lunr.js as a search engine. The following config options are available to alter the behavior of the search plugin: separator \u00b6 A regular expression which matches the characters used as word separators when building the index. By default whitespace and the hyphen ( - ) are used. To add the dot ( . ) as a word separator you might do this: plugins : - search : separator : '[\\s\\-\\.]+' default : '[\\s\\-]+' min_search_length \u00b6 An integer value that defines the minimum length for a search query. By default searches shorter than 3 chars in length are ignored as search result quality with short search terms are poor. However, for some use cases (such as documentation about Message Queues which might generate searches for 'MQ') it may be preferable to set a shorter limit. plugins : - search : min_search_length : 2 default : 3 lang \u00b6 A list of languages to use when building the search index as identified by their ISO 639-1 language codes. With Lunr Languages , the following languages are supported: ar : Arabic da : Danish nl : Dutch en : English fi : Finnish fr : French de : German hu : Hungarian it : Italian ja : Japanese no : Norwegian pt : Portuguese ro : Romanian ru : Russian es : Spanish sv : Swedish th : Thai tr : Turkish vi : Vietnamese You may contribute additional languages . Warning While search does support using multiple languages together, it is best not to add additional languages unless you really need them. Each additional language adds significant bandwidth requirements and uses more browser resources. Generally, it is best to keep each instance of MkDocs to a single language. Note Lunr Languages does not currently include support for Chinese or other Asian languages. However, some users have reported decent results using Japanese. default : The value of theme.locale if set, otherwise [en] . prebuild_index \u00b6 Optionally generates a pre-built index of all pages, which provides some performance improvements for larger sites. Before enabling, confirm that the theme you are using explicitly supports using a prebuilt index (the builtin themes do). Set to true to enable. Warning This option requires that Node.js be installed and the command node be on the system path. If the call to node fails for any reason, a warning is issued and the build continues uninterrupted. You may use the --strict flag when building to cause such a failure to raise an error instead. Note On smaller sites, using a pre-built index is not recommended as it creates a significant increase is bandwidth requirements with little to no noticeable improvement to your users. However, for larger sites (hundreds of pages), the bandwidth increase is relatively small and your users will notice a significant improvement in search performance. default : False indexing \u00b6 Configures what strategy the search indexer will use when building the index for your pages. This property is particularly useful if your project is large in scale, and the index takes up an enormous amount of disk space. plugins : - search : indexing : \"full\" Options \u00b6 Option Description full Indexes the title, section headings, and full text of each page. sections Indexes the title and section headings of each page. titles Indexes only the title of each page. default : full Environment Variables \u00b6 In most cases, the value of a configuration option is set directly in the configuration file. However, as an option, the value of a configuration option may be set to the value of an environment variable using the !ENV tag. For example, to set the value of the site_name option to the value of the variable SITE_NAME the YAML file may contain the following: site_name : !ENV SITE_NAME If the environment variable is not defined, then the configuration setting would be assigned a null (or None in Python) value. A default value can be defined as the last value in a list. Like this: site_name : !ENV [ SITE_NAME , \"My default site name\" ] Multiple fallback variables can be used as well. Note that the last value is not an environment variable, but must be a value to use as a default if none of the specified environment variables are defined. site_name : !ENV [ SITE_NAME , OTHER_NAME , \"My default site name\" ] Simple types defined within an environment variable such as string, bool, integer, float, datestamp and null are parsed as if they were defined directly in the YAML file, which means that the value will be converted to the appropriate type. However, complex types such as lists and key/value pairs cannot be defined within a single environment variable. For more details, see the pyyaml_env_tag project. Configuration Inheritance \u00b6 Generally, a single file would hold the entire configuration for a site. However, some organizations may maintain multiple sites which all share a common configuration across them. Rather than maintaining separate configurations for each, the common configuration options can be defined in a parent configuration while which each site's primary configuration file inherits. To define the parent for a configuration file, set the INHERIT (all caps) key to the path of the parent file. The path must be relative to the location of the primary file. For configuration options to be merged with a parent configuration, those options must be defined as key/value pairs. Specifically, the markdown_extensions and plugins options must use the alternative syntax which does not use list items (lines which start with - ). For example, suppose the common (parent) configuration is defined in base.yml : theme : name : mkdocs locale : en highlightjs : true markdown_extensions : toc : permalink : true admonition : {} Then, for the \"foo\" site, the primary configuration file would be defined at foo/mkdocs.yml : INHERIT: ../base.yml site_name: Foo Project site_url: https://example.com/foo When running mkdocs build , the file at foo/mkdocs.yml would be passed in as the configuration file. MkDocs will then parse that file, retrieve and parse the parent file base.yml and deep merge the two. This would result in MkDocs receiving the following merged configuration: site_name : Foo Project site_url : https://example.com/foo theme : name : mkdocs locale : en highlightjs : true markdown_extensions : toc : permalink : true admonition : {} Deep merging allows you to add and/or override various values in your primary configuration file. For example, suppose for one site you wanted to add support for definition lists, use a different symbol for permalinks, and define a different separator. In that site's primary configuration file you could do: INHERIT : ../base.yml site_name : Bar Project site_url : https://example.com/bar markdown_extensions : def_list : {} toc : permalink : \uf0c1 separator : \"_\" In that case, the above configuration would be deep merged with base.yml and result in the following configuration: site_name : Bar Project site_url : https://example.com/bar theme : name : mkdocs locale : en highlightjs : true markdown_extensions : def_list : {} toc : permalink : \uf0c1 separator : \"_\" admonition : {} Notice that the admonition extension was retained from the parent configuration, the def_list extension was added, the value of toc.permalink was replaced, and the value of toc.separator was added. You can replace or merge the value of any key. However, any non-key is always replaced. Therefore, you cannot append items to a list. You must redefine the entire list. As the nav configuration is made up of nested lists, this means that you cannot merge navigation items. Of course, you can replace the entire nav configuration with a new one. However, it is generally expected that the entire navigation would be defined in the primary configuration file for a project. Warning As a reminder, all path based configuration options must be relative to the primary configuration file and MkDocs does not alter the paths when merging. Therefore, defining paths in a parent file which is inherited by multiple different sites may not work as expected. It is generally best to define path based options in the primary configuration file only.","title":"mkdocs"},{"location":"06-third-part-lib/mkdocs/#mkdocs","text":"\u5b98\u65b9\u5168\u90e8\u914d\u7f6e\uff1a https://www.mkdocs.org/user-guide/configuration/ \u4e2d\u6587\u914d\u7f6e\uff1a https://markdown-docs-zh.readthedocs.io/zh_CN/latest/user-guide/configuration/","title":"mkdocs \u914d\u7f6e\u8bf4\u660e"},{"location":"06-third-part-lib/mkdocs/#_1","text":"site_name: Michale An Blog site_author: Michael An pages: - \u9996\u9875: index.md - \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b: 1.md - UUID: 2.md # \u8fd9\u662f\u4e00\u4e2a\u4e8c\u7ea7\u5bfc\u822a nav: - Home: \"index.md\" - User Guide: - \"\u539f\u5730\u7b97\u6cd5\": \"in-place.md\" - \"\u4e8c\u5206\u7b97\u6cd5\": \"part-two.md\" - Learn: - \"\u53cc\u6307\u9488\": \"double-pointer.md\" - \"\u5206\u6cbb\u7b97\u6cd5\": \"diverce.md\" - \"\u805a\u7c7b\u7b97\u6cd5\": \"K-means.md\" - About: - \"License\": \"process-and-thread.md\" - \"Release Notes\": \"uuid.md\" # https://mkdocs.zimoapps.com/user-guide/ \u8be6\u7ec6\u8d44\u6599\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc docs_dir: ./docs copyright: Copyright &copy; TEST # site_url: https://michael18811380328.github.io/blog/ # repo_name: blog # repo_url: https://github.com/Michael18811380328/blog theme: material # readthedocs # mkdocs # material # https://github.com/squidfunk/mkdocs-material # \u8fd9\u4e2a\u4e3b\u9898\u9700\u8981\u81ea\u5b9a\u4e49 pip \u5b89\u88c5 # \u5176\u4ed6\u7684\u4e3b\u9898\u53c2\u8003 https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes # theme: # name: material # # icon: # logo: assets/logo32_32.png # # features: # # - tabs # palette: # primary: deep orange # accent: # plugins: # - search # necessary for search to work # - awesome-pages # # Customization # extra: # social: # - icon: fontawesome/brands/github # link: https://github.com/Michael18811380328/blog # # Extensions # markdown_extensions: # - markdown.extensions.admonition # - markdown.extensions.attr_list # - markdown.extensions.codehilite: # guess_lang: true # - markdown.extensions.def_list # - markdown.extensions.footnotes # - markdown.extensions.meta # - markdown.extensions.toc: # permalink: true # toc_depth: \"1-4\"","title":"\u672c\u5730\u57fa\u672c\u914d\u7f6e"},{"location":"06-third-part-lib/mkdocs/#_2","text":"","title":"\u4e2d\u6587\u914d\u7f6e"},{"location":"06-third-part-lib/mkdocs/#_3","text":"\u9879\u76ee\u914d\u7f6e\u5728 mkdocs.yml \u6587\u4ef6\u4e2d\u8bbe\u7f6e. \u914d\u7f6e\u6587\u4ef6\u4e2d\u81f3\u5c11\u5e94\u5305\u542b site_name \u9009\u9879. \u5176\u4f59\u9009\u9879\u90fd\u662f\u53ef\u9009\u7684.","title":"\u7b80\u4ecb"},{"location":"06-third-part-lib/mkdocs/#_4","text":"","title":"\u9879\u76ee\u4fe1\u606f"},{"location":"06-third-part-lib/mkdocs/#site_name","text":"\u8fd9\u4e2a\u662f \u5fc5\u987b\u7684 , \u4ee3\u8868\u7528\u4e8e\u9879\u76ee\u6587\u6863\u7684\u4e3b\u6807\u9898. \u4f8b\u5982: site_name: Mashmallow Generator \u6e32\u67d3\u4e3b\u9898\u65f6\u8be5\u9009\u9879\u5c06\u4f5c\u4e3a site_name \u73af\u5883\u53d8\u91cf\u4f20\u9012.","title":"site_name"},{"location":"06-third-part-lib/mkdocs/#site_url","text":"\u8bbe\u7f6e\u7ad9\u70b9\u7684 URL. \u8fd9\u5c06\u6dfb\u52a0\u5e26\u6709\u89c4\u8303\u7684 URL \u7684 link \u6807\u7b7e\u5230 HTML \u5934\u90e8. \u9ed8\u8ba4\u503c : null","title":"site_url"},{"location":"06-third-part-lib/mkdocs/#repo_url","text":"\u5982\u679c\u8bbe\u7f6e\u4e86\u8be5\u9879, \u6bcf\u4e2a\u9875\u9762\u5c06\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u94fe\u63a5\u5230\u4f60\u7684 GitHub \u6216 Bitbucket \u7248\u672c\u5e93. repo_url: https://github.com/example/repository/ \u9ed8\u8ba4\u503c : null","title":"repo_url"},{"location":"06-third-part-lib/mkdocs/#repo_name","text":"\u5982\u679c\u8bbe\u7f6e\u4e86\u8be5\u9879, \u6bcf\u4e2a\u9875\u9762\u5c06\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u94fe\u63a5\u5230\u4f60\u7684 GitHub \u6216 Bitbucket \u7248\u672c\u5e93. \u9ed8\u8ba4\u503c : 'GitHub' \u6216 'Bitbucket' \u5982\u679c repo_url \u5339\u914d\u76f8\u5e94\u57df\u540d, \u5426\u5219\u4e3a null","title":"repo_name"},{"location":"06-third-part-lib/mkdocs/#site_description","text":"\u8bbe\u7f6e\u7ad9\u70b9\u63cf\u8ff0. \u8fd9\u5c06\u8fd9 HTML \u5934\u90e8\u6dfb\u52a0\u4e00\u4e2a meta \u6807\u7b7e. \u9ed8\u8ba4\u503c : null","title":"site_description"},{"location":"06-third-part-lib/mkdocs/#site_author","text":"\u8bbe\u7f6e\u7ad9\u70b9\u4f5c\u8005. \u8fd9\u5c06\u8fd9 HTML \u5934\u90e8\u6dfb\u52a0\u4e00\u4e2a meta \u6807\u7b7e. \u9ed8\u8ba4\u503c : null","title":"site_author"},{"location":"06-third-part-lib/mkdocs/#site_favicon","text":"\u8bbe\u7f6e favicon . \u9700\u8981\u5c06 favicon.ico \u653e\u5230 docs/ \u76ee\u5f55, \u914d\u7f6e\u6587\u4ef6\u5c06\u5982\u4e0b\u6240\u793a: site_favicon: favicon.ico \u9ed8\u8ba4\u503c : null","title":"site_favicon"},{"location":"06-third-part-lib/mkdocs/#copyright","text":"\u8bbe\u7f6e\u7ad9\u70b9\u7248\u6743\u4fe1\u606f. \u9ed8\u8ba4\u503c : null","title":"copyright"},{"location":"06-third-part-lib/mkdocs/#google_analytics","text":"\u8bbe\u7f6e Google \u7ad9\u70b9\u5206\u6790\u5de5\u5177. google_analytics: ['UA-36723568-3', 'mkdocs.org'] \u9ed8\u8ba4\u503c : null","title":"google_analytics"},{"location":"06-third-part-lib/mkdocs/#_5","text":"","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"06-third-part-lib/mkdocs/#pages","text":"\u8be5\u9009\u9879\u8bbe\u7f6e\u9700\u8981\u751f\u6210\u7684\u9875\u9762\u8303\u56f4. \u8be5\u9009\u9879\u4e3a\u4e00\u4e2a\u5217\u8868. \u5217\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868\u8868\u793a\u4e00\u4e2a\u9875\u9762. \u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u4ee3\u8868\u6e90\u6587\u4ef6\u7684\u8def\u5f84, \u5e94\u4e3a\u76f8\u5bf9\u4e8e docs_dir \u7684\u8def\u5f84. \u5176\u4f59\u5b57\u7b26\u4e32\u4ee3\u8868\u5bfc\u822a\u6761\u4e2d\u7684\u9875\u9762\u6807\u9898. \u4e0b\u9762\u7684\u4f8b\u5b50\u5c06\u5728\u6784\u5efa\u9636\u6bb5\u751f\u6210\u4e09\u4e2a\u9875\u9762: pages: - ['index.md', 'Introduction'] - ['user-guide.md', 'User Guide'] - ['about.md', 'About'] \u5047\u5b9a docs_dir \u91c7\u7528\u9ed8\u8ba4\u503c docs , \u5219\u6784\u5efa\u9636\u6bb5\u6e90\u6587\u4ef6\u7684\u8def\u5f84\u5206\u522b\u4e3a docs/index.md , docs/user-guide.md \u548c docs/about.md . \u5982\u679c\u4f60\u6709\u5927\u91cf\u9879\u76ee\u6587\u6863, \u4f60\u9700\u8981\u7528\u5bfc\u822a\u5934\u90e8\u6765\u6309\u76ee\u5f55\u6765\u7ec4\u7ec7\u4f60\u7684\u5bfc\u822a. \u4f60\u53ef\u4ee5\u5728 page \u9009\u9879\u4e2d\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684\u5b57\u7b26\u4e32\u6765\u8868\u793a\u5bfc\u822a\u5934\u90e8, \u5982\u4e0b\u6240\u793a: pages: - ['index.md', 'Introduction'] - ['user-guide/creating.md', 'User Guide', 'Creating a new Mashmallow project'] - ['user-guide/api.md', 'User Guide', 'Mashmallow API guide'] - ['user-guide/configuration.md', 'User Guide', 'Configuring Mashmallow'] - ['about/license.md', 'About', 'License']","title":"pages"},{"location":"06-third-part-lib/mkdocs/#_6","text":"","title":"\u6784\u5efa\u76ee\u5f55"},{"location":"06-third-part-lib/mkdocs/#theme","text":"\u8bbe\u7f6e\u7ad9\u70b9\u4e3b\u9898, \u67e5\u770b\u53ef\u7528\u7684\u4e3b\u9898 \u6587\u6863\u6837\u5f0f . \u9ed8\u8ba4\u503c : 'mkdocs'","title":"theme"},{"location":"06-third-part-lib/mkdocs/#theme_dir","text":"\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u4e3b\u9898. \u8fd9\u53ef\u4ee5\u662f\u76f8\u5bf9\u76ee\u5f55, \u76f8\u5bf9\u4e8e\u4f60\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\u6765\u89e3\u6790\u8be5\u8def\u5f84, \u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84. \u67e5\u770b \u6587\u6863\u6837\u5f0f \u4e86\u89e3\u81ea\u5b9a\u4e49\u4e3b\u9898. \u9ed8\u8ba4\u503c : null","title":"theme_dir"},{"location":"06-third-part-lib/mkdocs/#docs_dir","text":"\u8bbe\u7f6e\u5305\u542b markdown \u6e90\u7801\u7684\u76ee\u5f55. \u8fd9\u53ef\u4ee5\u662f\u76f8\u5bf9\u76ee\u5f55, \u76f8\u5bf9\u4e8e\u4f60\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\u6765\u89e3\u6790\u8be5\u8def\u5f84, \u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84. \u9ed8\u8ba4\u503c : 'docs'","title":"docs_dir"},{"location":"06-third-part-lib/mkdocs/#site_dir","text":"\u8bbe\u7f6e\u751f\u6210\u7684 HTML \u548c\u5176\u4ed6\u6587\u4ef6\u6240\u5728\u76ee\u5f55. \u8fd9\u53ef\u4ee5\u662f\u76f8\u5bf9\u76ee\u5f55, \u76f8\u5bf9\u4e8e\u4f60\u7684\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\u6765\u89e3\u6790\u8be5\u8def\u5f84, \u4e5f\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84. \u9ed8\u8ba4\u503c : 'site' Note : \u5982\u679c\u4f60\u4f7f\u7528\u4e86\u7248\u672c\u63a7\u5236\u7cfb\u7edf, \u901a\u5e38\u4e0d\u5e0c\u671b \u6784\u5efa\u8f93\u51fa \u6587\u4ef6\u88ab\u63d0\u4ea4\u5230\u7248\u672c\u5e93, \u800c\u53ea\u9700\u8981\u5bf9 \u6e90\u7801 \u8fdb\u884c\u7248\u672c\u63a7\u5236. \u4f8b\u5982, \u5982\u679c\u4f7f\u7528 git , \u4f60\u53ef\u4ee5\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\u5230 .gitignore \u6587\u4ef6: site/ \u5982\u679c\u4f7f\u7528\u5176\u4ed6\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u8bf7\u53c2\u9605\u76f8\u5e94\u7684\u6587\u6863\u4ee5\u6392\u9664\u7279\u5b9a\u76ee\u5f55.","title":"site_dir"},{"location":"06-third-part-lib/mkdocs/#extra_css","text":"\u8bbe\u5b9a\u4e3b\u9898\u6240\u9700\u7684\u989d\u5916\u7684\u6837\u5f0f\u6587\u4ef6. \u9ed8\u8ba4\u503c : \u9ed8\u8ba4\u60c5\u51b5\u4e0b extra_css \u5c06\u5305\u542b docs_dir \u76ee\u5f55\u4e0b\u7684\u6837\u5f0f\u6587\u4ef6, \u5982\u679c\u6ca1\u6709\u627e\u5230\u5219\u4e3a [] (\u7a7a\u8868).","title":"extra_css"},{"location":"06-third-part-lib/mkdocs/#extra_javascript","text":"\u8bbe\u5b9a\u4e3b\u9898\u6240\u9700\u7684\u989d\u5916\u7684\u811a\u672c\u6587\u4ef6. \u9ed8\u8ba4\u503c : \u9ed8\u8ba4\u60c5\u51b5\u4e0b extra_javascript \u5c06\u5305\u542b docs_dir \u76ee\u5f55\u4e0b\u7684\u811a\u672c\u6587\u4ef6, \u5982\u679c\u6ca1\u6709\u627e\u5230\u5219\u4e3a [] (\u7a7a\u8868).","title":"extra_javascript"},{"location":"06-third-part-lib/mkdocs/#_7","text":"","title":"\u9884\u89c8\u63a7\u5236"},{"location":"06-third-part-lib/mkdocs/#use_directory_urls","text":"\u8bbe\u7f6e\u6587\u6863\u4e2d\u7684\u94fe\u63a5\u7c7b\u578b. \u4e0b\u8868\u8868\u660e\u4e86 use_directory_urls \u8bbe\u7f6e\u4e3a true \u548c false \u60c5\u51b5\u4e0b\u6587\u6863\u4e2d\u7684 URLs \u7684\u4e0d\u540c. Source file Generated HTML use_directory_urls=true use_directory_urls=false index.md index.html / /index.html api-guide.md api-guide/index.html /api-guide/ /api-guide/index.html about.md about/index.html /about/ /about/index.html \u9ed8\u8ba4\u7684 use_directory_urls=true \u9009\u9879\u80fd\u751f\u6210\u7528\u6237\u53cb\u597d\u7684 URLs, \u901a\u5e38\u60c5\u51b5\u4e0b\u4f60\u4e0d\u5e94\u8be5\u4fee\u6539\u9ed8\u8ba4\u9009\u9879. \u66ff\u4ee3\u9009\u9879\u5728\u4f60\u9700\u8981\u76f4\u63a5\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6253\u5f00\u6587\u6863, \u5e76\u4fdd\u6301\u94fe\u63a5\u6b63\u786e\u65f6\u5f88\u6709\u7528, \u56e0\u4e3a\u5b83\u521b\u5efa\u7684\u94fe\u63a5\u76f4\u63a5\u6307\u5411\u76ee\u6807 \u6587\u4ef6 \u800c\u4e0d\u662f\u76ee\u6807 \u6587\u4ef6\u5939 . \u9ed8\u8ba4\u503c : true","title":"use_directory_urls"},{"location":"06-third-part-lib/mkdocs/#dev_addr","text":"\u8bbe\u7f6e\u8fd0\u884c mkdocs serve \u65f6\u7684\u94fe\u63a5\u5730\u5740. \u8fd9\u4f7f\u5f97\u4f60\u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u7aef\u53e3, \u4e5f\u53ef\u4ee5\u4f7f\u7528 0.0.0.0 \u5730\u5740\u4f7f\u4f60\u53ef\u4ee5\u7528\u672c\u5730\u7f51\u7edc\u8bbf\u95ee. \u6240\u6709\u7684\u8bbe\u7f6e\u90fd\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u8bbe\u7f6e, \u4f8b\u5982: mkdocs serve --dev-addr=0.0.0.0:80 # Run on port 80, accessible over the local network. \u9ed8\u8ba4\u503c : '127.0.0.1:8000'","title":"dev_addr"},{"location":"06-third-part-lib/mkdocs/#_8","text":"","title":"\u683c\u5f0f\u5316\u9009\u9879"},{"location":"06-third-part-lib/mkdocs/#markdown_extensions","text":"MkDocs \u4f7f\u7528 Python Markdown \u8f6c\u5316 Markdown \u6587\u4ef6\u4e3a HTML \u6587\u6863. Python Markdown \u652f\u6301\u5927\u91cf\u683c\u5f0f\u5316\u9875\u9762\u7684 \u6269\u5c55 . \u8be5\u9009\u9879\u4f7f\u4f60\u53ef\u4ee5\u4f7f\u7528 MkDocs \u9ed8\u8ba4\u6269\u5c55\u4e4b\u5916\u7684\u6269\u5c55 ( meta , toc , tables , \u548c fenced_code ). \u4f8b\u5982, \u6fc0\u6d3b SmartyPants typography extension \u6269\u5c55, \u8bbe\u7f6e\u5982\u4e0b: markdown_extensions: [smartypants] \u9ed8\u8ba4\u503c : [] Next Previous","title":"markdown_extensions"},{"location":"06-third-part-lib/mkdocs/#_9","text":"","title":"\u82f1\u6587\u914d\u7f6e"},{"location":"06-third-part-lib/mkdocs/#configuration","text":"Guide to all available configuration settings.","title":"Configuration"},{"location":"06-third-part-lib/mkdocs/#introduction","text":"Project settings are configured by default using a YAML configuration file in the project directory named mkdocs.yml . You can specify another path for it by using the -f / --config-file option (see mkdocs build --help ). As a minimum, this configuration file must contain the site_name and site_url settings. All other settings are optional.","title":"Introduction"},{"location":"06-third-part-lib/mkdocs/#project-information","text":"","title":"Project information"},{"location":"06-third-part-lib/mkdocs/#site_name_1","text":"This is a required setting , and should be a string that is used as the main title for the project documentation. For example: site_name : Marshmallow Generator When rendering the theme this setting will be passed as the site_name context variable.","title":"site_name"},{"location":"06-third-part-lib/mkdocs/#site_url_1","text":"Set the canonical URL of the site. This will add a link tag with the canonical URL to the head section of each HTML page. If the 'root' of the MkDocs site will be within a subdirectory of a domain, be sure to include that subdirectory in the setting ( https://example.com/foo/ ). This setting is also used for mkdocs serve : the server will be mounted onto a path taken from the path component of the URL, e.g. some/page.md will be served from http://127.0.0.1:8000/foo/some/page/ to mimic the expected remote layout. default : null","title":"site_url"},{"location":"06-third-part-lib/mkdocs/#repo_url_1","text":"When set, provides a link to your repository (GitHub, Bitbucket, GitLab, ...) on each page. repo_url : https://github.com/example/repository/ default : null","title":"repo_url"},{"location":"06-third-part-lib/mkdocs/#repo_name_1","text":"When set, provides the name for the link to your repository on each page. default : 'GitHub' , 'Bitbucket' or 'GitLab' if the repo_url matches those domains, otherwise the hostname from the repo_url .","title":"repo_name"},{"location":"06-third-part-lib/mkdocs/#edit_uri","text":"The path from the base repo_url to the docs directory when directly viewing a page, accounting for specifics of the repository host (e.g. GitHub, Bitbucket, etc), the branch, and the docs directory itself. MkDocs concatenates repo_url and edit_uri , and appends the input path of the page. When set, and if your theme supports it, provides a link directly to the page in your source repository. This makes it easier to find and edit the source for the page. If repo_url is not set, this option is ignored. On some themes, setting this option may cause an edit link to be used in place of a repository link. Other themes may show both links. The edit_uri supports query ('?') and fragment ('#') characters. For repository hosts that use a query or a fragment to access the files, the edit_uri might be set as follows. (Note the ? and # in the URI...) # Query string example edit_uri : '?query=root/path/docs/' # Hash fragment example edit_uri : '#root/path/docs/' For other repository hosts, simply specify the relative path to the docs directory. # Query string example edit_uri : root/path/docs/ Note On a few known hosts (specifically GitHub, Bitbucket and GitLab), the edit_uri is derived from the 'repo_url' and does not need to be set manually. Simply defining a repo_url will automatically populate the edit_uri configs setting. For example, for a GitHub- or GitLab-hosted repository, the edit_uri would be automatically set as edit/master/docs/ (Note the edit path and master branch). For a Bitbucket-hosted repository, the equivalent edit_uri would be automatically set as src/default/docs/ (note the src path and default branch). To use a different URI than the default (for example a different branch), simply set the edit_uri to your desired string. If you do not want any \"edit URL link\" displayed on your pages, then set edit_uri to an empty string to disable the automatic setting. Warning On GitHub and GitLab, the default \"edit\" path ( edit/master/docs/ ) opens the page in the online editor. This functionality requires that the user have and be logged in to a GitHub/GitLab account. Otherwise, the user will be redirected to a login/signup page. Alternatively, use the \"blob\" path ( blob/master/docs/ ) to open a read-only view, which supports anonymous access. default : edit/master/docs/ for GitHub and GitLab repos or src/default/docs/ for a Bitbucket repo, if repo_url matches those domains, otherwise null","title":"edit_uri"},{"location":"06-third-part-lib/mkdocs/#site_description_1","text":"Set the site description. This will add a meta tag to the generated HTML header. default : null","title":"site_description"},{"location":"06-third-part-lib/mkdocs/#site_author_1","text":"Set the name of the author. This will add a meta tag to the generated HTML header. default : null","title":"site_author"},{"location":"06-third-part-lib/mkdocs/#copyright_1","text":"Set the copyright information to be included in the documentation by the theme. default : null","title":"copyright"},{"location":"06-third-part-lib/mkdocs/#remote_branch","text":"Set the remote branch to commit to when using gh-deploy to deploy to GitHub Pages. This option can be overridden by a command line option in gh-deploy . default : gh-pages","title":"remote_branch"},{"location":"06-third-part-lib/mkdocs/#remote_name","text":"Set the remote name to push to when using gh-deploy to deploy to GitHub Pages. This option can be overridden by a command line option in gh-deploy . default : origin","title":"remote_name"},{"location":"06-third-part-lib/mkdocs/#documentation-layout","text":"","title":"Documentation layout"},{"location":"06-third-part-lib/mkdocs/#nav","text":"This setting is used to determine the format and layout of the global navigation for the site. A minimal navigation configuration could look like this: nav : - \"index.md\" - \"about.md\" All paths must be relative to the mkdocs.yml configuration file. See the section on configuring pages and navigation for a more detailed breakdown, including how to create sub-sections. Navigation items may also include links to external sites. While titles are optional for internal links, they are required for external links. An external link may be a full URL or a relative URL. Any path which is not found in the files is assumed to be an external link. See the section about [Meta-Data] on how MkDocs determines the page title of a document. nav : - Introduction : \"index.md\" - \"about.md\" - \"Issue Tracker\" : \"https://example.com/\" In the above example, the first two items point to local files while the third points to an external site. However, sometimes the MkDocs site is hosted in a subdirectory of a project's site and you may want to link to other parts of the same site without including the full domain. In that case, you may use an appropriate relative URL. site_url : https://example.com/foo/ nav : - Home : \"../\" - \"User Guide\" : \"user-guide.md\" - \"Bug Tracker\" : \"/bugs/\" In the above example, two different styles of external links are used. First, note that the site_url indicates that the MkDocs site is hosted in the /foo/ subdirectory of the domain. Therefore, the Home navigation item is a relative link that steps up one level to the server root and effectively points to https://example.com/ . The Bug Tracker item uses an absolute path from the server root and effectively points to https://example.com/bugs/ . Of course, the User Guide points to a local MkDocs page. default : By default nav will contain an alphanumerically sorted, nested list of all the Markdown files found within the docs_dir and its sub-directories. Index files will always be listed first within a sub-section.","title":"nav"},{"location":"06-third-part-lib/mkdocs/#build-directories","text":"","title":"Build directories"},{"location":"06-third-part-lib/mkdocs/#theme_1","text":"Sets the theme and theme specific configuration of your documentation site. May be either a string or a set of key/value pairs. If a string, it must be the string name of a known installed theme. For a list of available themes visit Choosing Your Theme . An example set of key/value pairs might look something like this: theme : name : mkdocs locale : en custom_dir : my_theme_customizations/ static_templates : - sitemap.html include_sidebar : false If a set of key/value pairs, the following nested keys can be defined:","title":"theme"},{"location":"06-third-part-lib/mkdocs/#name","text":"The string name of a known installed theme. For a list of available themes visit Choosing Your Theme .","title":"name:"},{"location":"06-third-part-lib/mkdocs/#locale","text":"A code representing the language of your site. See Localizing your theme for details.","title":"locale:"},{"location":"06-third-part-lib/mkdocs/#custom_dir","text":"A directory containing a custom theme. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file or it can be an absolute directory path from the root of your local file system. See Customizing Your Theme for details if you would like to tweak an existing theme. See the Theme Developer Guide if you would like to build your own theme from the ground up.","title":"custom_dir:"},{"location":"06-third-part-lib/mkdocs/#static_templates","text":"A list of templates to render as static pages. The templates must be located in either the theme's template directory or in the custom_dir defined in the theme configuration.","title":"static_templates:"},{"location":"06-third-part-lib/mkdocs/#theme-specific-keywords","text":"Any additional keywords supported by the theme can also be defined. See the documentation for the theme you are using for details. default : 'mkdocs'","title":"(theme specific keywords)"},{"location":"06-third-part-lib/mkdocs/#docs_dir_1","text":"The directory containing the documentation source markdown files. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file, or it can be an absolute directory path from the root of your local file system. default : 'docs'","title":"docs_dir"},{"location":"06-third-part-lib/mkdocs/#site_dir_1","text":"The directory where the output HTML and other files are created. This can either be a relative directory, in which case it is resolved relative to the directory containing your configuration file, or it can be an absolute directory path from the root of your local file system. default : 'site' Note: If you are using source code control you will normally want to ensure that your build output files are not committed into the repository, and only keep the source files under version control. For example, if using git you might add the following line to your .gitignore file: site/ If you're using another source code control tool, you'll want to check its documentation on how to ignore specific directories.","title":"site_dir"},{"location":"06-third-part-lib/mkdocs/#extra_css_1","text":"Set a list of CSS files in your docs_dir to be included by the theme. For example, the following example will include the extra.css file within the css subdirectory in your docs_dir . extra_css : - css/extra.css - css/second_extra.css default : [] (an empty list).","title":"extra_css"},{"location":"06-third-part-lib/mkdocs/#extra_javascript_1","text":"Set a list of JavaScript files in your docs_dir to be included by the theme. See the example in extra_css for usage. default : [] (an empty list).","title":"extra_javascript"},{"location":"06-third-part-lib/mkdocs/#extra_templates","text":"Set a list of templates in your docs_dir to be built by MkDocs. To see more about writing templates for MkDocs read the documentation about [custom themes] and specifically the section about the [available variables] to templates. See the example in extra_css for usage. default : [] (an empty list).","title":"extra_templates"},{"location":"06-third-part-lib/mkdocs/#extra","text":"A set of key-value pairs, where the values can be any valid YAML construct, that will be passed to the template. This allows for great flexibility when creating custom themes. For example, if you are using a theme that supports displaying the project version, you can pass it to the theme like this: extra : version : 1.0 default : By default extra will be an empty key-value mapping.","title":"extra"},{"location":"06-third-part-lib/mkdocs/#preview-controls","text":"","title":"Preview controls"},{"location":"06-third-part-lib/mkdocs/#use_directory_urls_1","text":"This setting controls the style used for linking to pages within the documentation. The following table demonstrates how the URLs used on the site differ when setting use_directory_urls to true or false . Source file use_directory_urls: true use_directory_urls: false index.md / /index.html api-guide.md /api-guide/ /api-guide.html about/license.md /about/license/ /about/license.html The default style of use_directory_urls: true creates more user friendly URLs, and is usually what you'll want to use. The alternate style can be useful if you want your documentation to remain properly linked when opening pages directly from the file system, because it creates links that point directly to the target file rather than the target directory . default : true","title":"use_directory_urls"},{"location":"06-third-part-lib/mkdocs/#strict","text":"Determines how warnings are handled. Set to true to halt processing when a warning is raised. Set to false to print a warning and continue processing. default : false","title":"strict"},{"location":"06-third-part-lib/mkdocs/#dev_addr_1","text":"Determines the address used when running mkdocs serve . Must be of the format IP:PORT . Allows a custom default to be set without the need to pass it through the --dev-addr option every time the mkdocs serve command is called. default : '127.0.0.1:8000' See also: site_url .","title":"dev_addr"},{"location":"06-third-part-lib/mkdocs/#formatting-options","text":"","title":"Formatting options"},{"location":"06-third-part-lib/mkdocs/#markdown_extensions_1","text":"MkDocs uses the Python Markdown library to translate Markdown files into HTML. Python Markdown supports a variety of extensions that customize how pages are formatted. This setting lets you enable a list of extensions beyond the ones that MkDocs uses by default ( meta , toc , tables , and fenced_code ). For example, to enable the SmartyPants typography extension , use: markdown_extensions : - smarty Some extensions provide configuration options of their own. If you would like to set any configuration options, then you can nest a key/value mapping ( option_name: option value ) of any options that a given extension supports. See the documentation for the extension you are using to determine what options they support. For example, to enable permalinks in the (included) toc extension, use: markdown_extensions : - toc : permalink : True Note that a colon ( : ) must follow the extension name ( toc ) and then on a new line the option name and value must be indented and separated by a colon. If you would like to define multiple options for a single extension, each option must be defined on a separate line: markdown_extensions : - toc : permalink : True separator : \"_\" Add an additional item to the list for each extension. If you have no configuration options to set for a specific extension, then simply omit options for that extension: markdown_extensions : - smarty - toc : permalink : True - sane_lists In the above examples, each extension is a list item (starts with a - ). As an alternative, key/value pairs can be used instead. However, in that case an empty value must be provided for extensions for which no options are defined. Therefore, the last example above could also be defined as follows: markdown_extensions : smarty : {} toc : permalink : True sane_lists : {} This alternative syntax is required if you intend to override some options via inheritance . See Also: The Python-Markdown documentation provides a list of extensions which are available out-of-the-box. For a list of configuration options available for a given extension, see the documentation for that extension. You may also install and use various third party extensions . Consult the documentation provided by those extensions for installation instructions and available configuration options. default : [] (an empty list).","title":"markdown_extensions"},{"location":"06-third-part-lib/mkdocs/#plugins","text":"A list of plugins (with optional configuration settings) to use when building the site. See the Plugins documentation for full details. If the plugins config setting is defined in the mkdocs.yml config file, then any defaults (such as search ) are ignored and you need to explicitly re-enable the defaults if you would like to continue using them: plugins : - search - your_other_plugin To define options for a given plugin, use a nested set of key/value pairs: plugins : - search - your_other_plugin : option1 : value option2 : other value In the above examples, each plugin is a list item (starts with a - ). As an alternative, key/value pairs can be used instead. However, in that case an empty value must be provided for plugins for which no options are defined. Therefore, the last example above could also be defined as follows: plugins : search : {} your_other_plugin : option1 : value option2 : other value This alternative syntax is required if you intend to override some options via inheritance . To completely disable all plugins, including any defaults, set the plugins setting to an empty list: plugins : [] default : ['search'] (the \"search\" plugin included with MkDocs).","title":"plugins"},{"location":"06-third-part-lib/mkdocs/#search","text":"A search plugin is provided by default with MkDocs which uses lunr.js as a search engine. The following config options are available to alter the behavior of the search plugin:","title":"Search"},{"location":"06-third-part-lib/mkdocs/#separator","text":"A regular expression which matches the characters used as word separators when building the index. By default whitespace and the hyphen ( - ) are used. To add the dot ( . ) as a word separator you might do this: plugins : - search : separator : '[\\s\\-\\.]+' default : '[\\s\\-]+'","title":"separator"},{"location":"06-third-part-lib/mkdocs/#min_search_length","text":"An integer value that defines the minimum length for a search query. By default searches shorter than 3 chars in length are ignored as search result quality with short search terms are poor. However, for some use cases (such as documentation about Message Queues which might generate searches for 'MQ') it may be preferable to set a shorter limit. plugins : - search : min_search_length : 2 default : 3","title":"min_search_length"},{"location":"06-third-part-lib/mkdocs/#lang","text":"A list of languages to use when building the search index as identified by their ISO 639-1 language codes. With Lunr Languages , the following languages are supported: ar : Arabic da : Danish nl : Dutch en : English fi : Finnish fr : French de : German hu : Hungarian it : Italian ja : Japanese no : Norwegian pt : Portuguese ro : Romanian ru : Russian es : Spanish sv : Swedish th : Thai tr : Turkish vi : Vietnamese You may contribute additional languages . Warning While search does support using multiple languages together, it is best not to add additional languages unless you really need them. Each additional language adds significant bandwidth requirements and uses more browser resources. Generally, it is best to keep each instance of MkDocs to a single language. Note Lunr Languages does not currently include support for Chinese or other Asian languages. However, some users have reported decent results using Japanese. default : The value of theme.locale if set, otherwise [en] .","title":"lang"},{"location":"06-third-part-lib/mkdocs/#prebuild_index","text":"Optionally generates a pre-built index of all pages, which provides some performance improvements for larger sites. Before enabling, confirm that the theme you are using explicitly supports using a prebuilt index (the builtin themes do). Set to true to enable. Warning This option requires that Node.js be installed and the command node be on the system path. If the call to node fails for any reason, a warning is issued and the build continues uninterrupted. You may use the --strict flag when building to cause such a failure to raise an error instead. Note On smaller sites, using a pre-built index is not recommended as it creates a significant increase is bandwidth requirements with little to no noticeable improvement to your users. However, for larger sites (hundreds of pages), the bandwidth increase is relatively small and your users will notice a significant improvement in search performance. default : False","title":"prebuild_index"},{"location":"06-third-part-lib/mkdocs/#indexing","text":"Configures what strategy the search indexer will use when building the index for your pages. This property is particularly useful if your project is large in scale, and the index takes up an enormous amount of disk space. plugins : - search : indexing : \"full\"","title":"indexing"},{"location":"06-third-part-lib/mkdocs/#options","text":"Option Description full Indexes the title, section headings, and full text of each page. sections Indexes the title and section headings of each page. titles Indexes only the title of each page. default : full","title":"Options"},{"location":"06-third-part-lib/mkdocs/#environment-variables","text":"In most cases, the value of a configuration option is set directly in the configuration file. However, as an option, the value of a configuration option may be set to the value of an environment variable using the !ENV tag. For example, to set the value of the site_name option to the value of the variable SITE_NAME the YAML file may contain the following: site_name : !ENV SITE_NAME If the environment variable is not defined, then the configuration setting would be assigned a null (or None in Python) value. A default value can be defined as the last value in a list. Like this: site_name : !ENV [ SITE_NAME , \"My default site name\" ] Multiple fallback variables can be used as well. Note that the last value is not an environment variable, but must be a value to use as a default if none of the specified environment variables are defined. site_name : !ENV [ SITE_NAME , OTHER_NAME , \"My default site name\" ] Simple types defined within an environment variable such as string, bool, integer, float, datestamp and null are parsed as if they were defined directly in the YAML file, which means that the value will be converted to the appropriate type. However, complex types such as lists and key/value pairs cannot be defined within a single environment variable. For more details, see the pyyaml_env_tag project.","title":"Environment Variables"},{"location":"06-third-part-lib/mkdocs/#configuration-inheritance","text":"Generally, a single file would hold the entire configuration for a site. However, some organizations may maintain multiple sites which all share a common configuration across them. Rather than maintaining separate configurations for each, the common configuration options can be defined in a parent configuration while which each site's primary configuration file inherits. To define the parent for a configuration file, set the INHERIT (all caps) key to the path of the parent file. The path must be relative to the location of the primary file. For configuration options to be merged with a parent configuration, those options must be defined as key/value pairs. Specifically, the markdown_extensions and plugins options must use the alternative syntax which does not use list items (lines which start with - ). For example, suppose the common (parent) configuration is defined in base.yml : theme : name : mkdocs locale : en highlightjs : true markdown_extensions : toc : permalink : true admonition : {} Then, for the \"foo\" site, the primary configuration file would be defined at foo/mkdocs.yml : INHERIT: ../base.yml site_name: Foo Project site_url: https://example.com/foo When running mkdocs build , the file at foo/mkdocs.yml would be passed in as the configuration file. MkDocs will then parse that file, retrieve and parse the parent file base.yml and deep merge the two. This would result in MkDocs receiving the following merged configuration: site_name : Foo Project site_url : https://example.com/foo theme : name : mkdocs locale : en highlightjs : true markdown_extensions : toc : permalink : true admonition : {} Deep merging allows you to add and/or override various values in your primary configuration file. For example, suppose for one site you wanted to add support for definition lists, use a different symbol for permalinks, and define a different separator. In that site's primary configuration file you could do: INHERIT : ../base.yml site_name : Bar Project site_url : https://example.com/bar markdown_extensions : def_list : {} toc : permalink : \uf0c1 separator : \"_\" In that case, the above configuration would be deep merged with base.yml and result in the following configuration: site_name : Bar Project site_url : https://example.com/bar theme : name : mkdocs locale : en highlightjs : true markdown_extensions : def_list : {} toc : permalink : \uf0c1 separator : \"_\" admonition : {} Notice that the admonition extension was retained from the parent configuration, the def_list extension was added, the value of toc.permalink was replaced, and the value of toc.separator was added. You can replace or merge the value of any key. However, any non-key is always replaced. Therefore, you cannot append items to a list. You must redefine the entire list. As the nav configuration is made up of nested lists, this means that you cannot merge navigation items. Of course, you can replace the entire nav configuration with a new one. However, it is generally expected that the entire navigation would be defined in the primary configuration file for a project. Warning As a reminder, all path based configuration options must be relative to the primary configuration file and MkDocs does not alter the paths when merging. Therefore, defining paths in a parent file which is inherited by multiple different sites may not work as expected. It is generally best to define path based options in the primary configuration file only.","title":"Configuration Inheritance"},{"location":"06-third-part-lib/no-%E4%BD%BF%E7%94%A8%20Mkdocs%20%E5%9C%A8%20Github%20%E4%B8%8A%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E6%96%87%E7%AB%A0/","text":"\u4f7f\u7528 Mkdocs \u5728 Github \u4e0a\u5feb\u901f\u90e8\u7f72\u6587\u7ae0 \u00b6 \u6982\u8ff0 \u00b6 \u4e3a\u9879\u76ee\u7f16\u5199\u6587\u6863\uff0c\u7f51\u4e0a\u6bd4\u8f83\u591a\u7684\u63a8\u8350\u662f\u4f7f\u7528 ReadTheDocs \uff0c\u4ee5\u53ca\u914d\u5408 sphinx \u6765\u4f7f\u7528\uff0c\u7136\u540e\u7ecf\u8fc7\u4e00\u756a\u5c1d\u8bd5\uff0c\u53d1\u73b0 sphinx \u5bf9 markdown \u683c\u5f0f\u7684\u652f\u6301\u5e76\u4e0d\u662f\u592a\u597d\uff0c\u5728\u8fde\u63a5\u4e0a\u5e38\u5e38\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u800c\u4e14\u4e2a\u4eba\u611f\u89c9 ReadTheDocs \u7f51\u7ad9\u4e0a\u7684\u7ba1\u7406\u529f\u80fd\u4e5f\u4e0d\u662f\u90a3\u4e48\u7b26\u5408\u6211\u4eec\u7684\u4e60\u60ef\uff0c\u4e8e\u662f\u5411\u5bfb\u627e\u4e00\u6b3e\u66ff\u4ee3\u65b9\u6848\uff0c\u7ecf\u8fc7\u4e00\u756a\u641c\u7d22\uff0c\u627e\u5230\u4e86\u4e00\u6b3e\u53eb MkDocs \u7684\u5de5\u5177\u3002 MkDocs \u67b6\u6784\u7b80\u5355\uff0c\u5de5\u5177\u53ef\u4ee5\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6 mkdocs.yml \uff0c\u4ee5\u53ca\u4e00\u4e2a docs \u6587\u4ef6\u5939\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\uff0c\u7136\u540e\u5f80 docs \u6587\u4ef6\u5939\u4e0a\u6dfb\u52a0 markdown \u6587\u4ef6\u4f5c\u4e3a\u9875\u9762\u5373\u53ef\u3002\u5b8c\u6210\u540e\u5de5\u5177\u81ea\u5e26\u90e8\u7f72\u5230 Github \u4e0a\u7684\u529f\u80fd\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u8bbe\u7f6e\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u4f7f\u7528 GitPage \u5c55\u793a\u9879\u76ee\u6587\u6863\u3002 \u5177\u4f53\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003 MkDocs \u5b98\u7f51\u6587\u6863\uff1a MkDocs \u4e2d\u6587\u5b98\u7f51 MkDocs \u82f1\u6587\u5b98\u7f51 MkDocs \u5b89\u88c5 \u00b6 \u4f7f\u7528 pip \u5b89\u88c5 mkdocs\u3002 pip install mkdocs \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u68c0\u67e5\u4ee5\u4e0b MkDocs \u662f\u5426\u80fd\u6b63\u786e\u5b89\u88c5 mkdocs --version >> mkdocs, version 0 .17.5 \u80fd\u770b\u5230\u7248\u672c\u53f7\u6b63\u5e38\u663e\u793a\uff0c\u5373\u8868\u793a MkDocs \u5de5\u5177\u4ee5\u88ab\u6b63\u5e38\u5b89\u88c5\u5b8c\u6210\u3002 \u521b\u5efa\u6587\u6863\u9879\u76ee \u00b6 MkDocs \u63d0\u4f9b\u4e86 mkdocs new <project name> \u547d\u4ee4\u521b\u5efa\u6587\u6863\u9879\u76ee\u3002\u7136\u800c\uff0c\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u662f\u5148\u5728 GitHub \u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u5df2\u6709\u7684\u9879\u76ee\uff0c\u7136\u540e\u518d\u4e3a\u5176\u6dfb\u52a0\u76f8\u5e94\u7684\u6587\u6863\u3002\u8fd9\u91cc\u6709\u4e24\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\uff1a \u4f7f\u7528 mkdocs new <project> \u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u6863\u9879\u76ee\uff0c\u7136\u540e\u5c06\u5176\u4e2d\u7684 docs \u6587\u4ef6\u5939\u4ee5\u53ca mkdocs.yml \u914d\u7f6e\u6587\u4ef6\u590d\u5236\u5230\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u3002 \u76f4\u63a5\u521b\u5efa\u4e00\u4e2a mkdocs.yml \u548c docs \u6587\u4ef6\u5939\u4e0e\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 docs \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a index.md \u6587\u4ef6\uff0c\u7136\u540e\u5411\u5176\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u5185\u5bb9\uff0c\u5c1d\u8bd5\u8fd0\u884c\u4e00\u4e0b\u770b\u770b\u6587\u6863\u9879\u76ee\u662f\u5426\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u5177\u4f53\u65b9\u6cd5\u5982\u4e0b\uff1a mkdocs serve \u7b49\u5f85\u5de5\u5177\u8fd0\u884c\uff0c\u7136\u540e\u9ed8\u8ba4\u5730\u5740\u662f http://127.0.0.1:8000 \u6211\u4eec\u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00\uff0c\u67e5\u770b\u9875\u9762\u662f\u5426\u80fd\u6b63\u5e38\u663e\u793a\u3002 \u5e38\u89c4\u64cd\u4f5c \u00b6 MkDocs \u975e\u5e38\u7b80\u5355\uff0c\u5c31\u5982\u540c\u7f16\u5199 MarkDown \u4e00\u6837\u7f16\u5199\u5373\u53ef\uff0c MkDocs \u6839\u636e md \u6587\u4ef6\u6765\u5206\u9875\uff0c\u6839\u636e\u6587\u4ef6\u4e2d\u7684\u4e0d\u540c\u5c42\u7ea7\u6807\u9898\u6765\u5206\u6bb5\uff0c\u5177\u4f53\u53ef\u4ee5\u81ea\u884c\u5c1d\u8bd5\u67e5\u770b\u6548\u679c\u3002 \u8fde\u63a5 \u00b6 \u4e0e sphinx \u76f8\u6bd4\uff0c mkdocs \u7684\u8fde\u63a5\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 MarkDown \u8bed\u6cd5\u7684\u8fde\u63a5\u5373\u53ef\uff0c\u8fde\u63a5\u8def\u5f84\u4f7f\u7528\u9879\u76ee\u76f8\u5bf9\u8def\u5f84\u5373\u53ef\u3002 \u5982\u679c\u662f\u56fe\u7247\uff0c\u53ef\u4ee5\u5728 docs \u6587\u4ef6\u5939\u5411\u521b\u5efa\u4e00\u4e2a images \u7684\u6587\u4ef6\u5939\uff0c\u5f15\u7528\u7684\u4f7f\u7528\u53ef\u4ee5\u4f7f\u7528\u65b9\u6cd5: ![ image ]( ./images/image.jpg ) \u90e8\u7f72\u5230 Github \u00b6 MkDocs \u90e8\u7f72\u5230 Github \u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u4f7f\u7528\u547d\u4ee4 mkdocs gh-deploy \uff0c\u5de5\u5177\u5c31\u4f1a\u81ea\u52a8\u5c06\u76f8\u5e94\u5185\u5bb9\u63a8\u9001\u5230\u9879\u76ee\u7684 gh-pages \u5206\u652f\u4e0a\uff0c\u7136\u540e\u53ea\u9700\u8981\u5728 Github \u9879\u76ee\u8bbe\u7f6e\u4e2d\u9009\u62e9\u597d\u5bf9\u5e94 GitPage \u7684\u5206\u652f\uff0c\u7136\u540e\u901a\u8fc7 https://<user-name>.github.io/<project-name> \u8bbf\u95ee\u5373\u53ef\u3002","title":"no-\u4f7f\u7528 Mkdocs \u5728 Github \u4e0a\u5feb\u901f\u90e8\u7f72\u6587\u7ae0"},{"location":"06-third-part-lib/no-%E4%BD%BF%E7%94%A8%20Mkdocs%20%E5%9C%A8%20Github%20%E4%B8%8A%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E6%96%87%E7%AB%A0/#mkdocs-github","text":"","title":"\u4f7f\u7528 Mkdocs \u5728 Github \u4e0a\u5feb\u901f\u90e8\u7f72\u6587\u7ae0"},{"location":"06-third-part-lib/no-%E4%BD%BF%E7%94%A8%20Mkdocs%20%E5%9C%A8%20Github%20%E4%B8%8A%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E6%96%87%E7%AB%A0/#_1","text":"\u4e3a\u9879\u76ee\u7f16\u5199\u6587\u6863\uff0c\u7f51\u4e0a\u6bd4\u8f83\u591a\u7684\u63a8\u8350\u662f\u4f7f\u7528 ReadTheDocs \uff0c\u4ee5\u53ca\u914d\u5408 sphinx \u6765\u4f7f\u7528\uff0c\u7136\u540e\u7ecf\u8fc7\u4e00\u756a\u5c1d\u8bd5\uff0c\u53d1\u73b0 sphinx \u5bf9 markdown \u683c\u5f0f\u7684\u652f\u6301\u5e76\u4e0d\u662f\u592a\u597d\uff0c\u5728\u8fde\u63a5\u4e0a\u5e38\u5e38\u4f1a\u51fa\u73b0\u95ee\u9898\uff0c\u800c\u4e14\u4e2a\u4eba\u611f\u89c9 ReadTheDocs \u7f51\u7ad9\u4e0a\u7684\u7ba1\u7406\u529f\u80fd\u4e5f\u4e0d\u662f\u90a3\u4e48\u7b26\u5408\u6211\u4eec\u7684\u4e60\u60ef\uff0c\u4e8e\u662f\u5411\u5bfb\u627e\u4e00\u6b3e\u66ff\u4ee3\u65b9\u6848\uff0c\u7ecf\u8fc7\u4e00\u756a\u641c\u7d22\uff0c\u627e\u5230\u4e86\u4e00\u6b3e\u53eb MkDocs \u7684\u5de5\u5177\u3002 MkDocs \u67b6\u6784\u7b80\u5355\uff0c\u5de5\u5177\u53ef\u4ee5\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6 mkdocs.yml \uff0c\u4ee5\u53ca\u4e00\u4e2a docs \u6587\u4ef6\u5939\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\uff0c\u7136\u540e\u5f80 docs \u6587\u4ef6\u5939\u4e0a\u6dfb\u52a0 markdown \u6587\u4ef6\u4f5c\u4e3a\u9875\u9762\u5373\u53ef\u3002\u5b8c\u6210\u540e\u5de5\u5177\u81ea\u5e26\u90e8\u7f72\u5230 Github \u4e0a\u7684\u529f\u80fd\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u8bbe\u7f6e\uff0c\u5c31\u53ef\u4ee5\u8f7b\u677e\u4f7f\u7528 GitPage \u5c55\u793a\u9879\u76ee\u6587\u6863\u3002 \u5177\u4f53\u7ec6\u8282\u53ef\u4ee5\u53c2\u8003 MkDocs \u5b98\u7f51\u6587\u6863\uff1a MkDocs \u4e2d\u6587\u5b98\u7f51 MkDocs \u82f1\u6587\u5b98\u7f51","title":"\u6982\u8ff0"},{"location":"06-third-part-lib/no-%E4%BD%BF%E7%94%A8%20Mkdocs%20%E5%9C%A8%20Github%20%E4%B8%8A%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E6%96%87%E7%AB%A0/#mkdocs","text":"\u4f7f\u7528 pip \u5b89\u88c5 mkdocs\u3002 pip install mkdocs \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u68c0\u67e5\u4ee5\u4e0b MkDocs \u662f\u5426\u80fd\u6b63\u786e\u5b89\u88c5 mkdocs --version >> mkdocs, version 0 .17.5 \u80fd\u770b\u5230\u7248\u672c\u53f7\u6b63\u5e38\u663e\u793a\uff0c\u5373\u8868\u793a MkDocs \u5de5\u5177\u4ee5\u88ab\u6b63\u5e38\u5b89\u88c5\u5b8c\u6210\u3002","title":"MkDocs \u5b89\u88c5"},{"location":"06-third-part-lib/no-%E4%BD%BF%E7%94%A8%20Mkdocs%20%E5%9C%A8%20Github%20%E4%B8%8A%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E6%96%87%E7%AB%A0/#_2","text":"MkDocs \u63d0\u4f9b\u4e86 mkdocs new <project name> \u547d\u4ee4\u521b\u5efa\u6587\u6863\u9879\u76ee\u3002\u7136\u800c\uff0c\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u662f\u5148\u5728 GitHub \u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a\u5df2\u6709\u7684\u9879\u76ee\uff0c\u7136\u540e\u518d\u4e3a\u5176\u6dfb\u52a0\u76f8\u5e94\u7684\u6587\u6863\u3002\u8fd9\u91cc\u6709\u4e24\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003\uff1a \u4f7f\u7528 mkdocs new <project> \u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u6863\u9879\u76ee\uff0c\u7136\u540e\u5c06\u5176\u4e2d\u7684 docs \u6587\u4ef6\u5939\u4ee5\u53ca mkdocs.yml \u914d\u7f6e\u6587\u4ef6\u590d\u5236\u5230\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u3002 \u76f4\u63a5\u521b\u5efa\u4e00\u4e2a mkdocs.yml \u548c docs \u6587\u4ef6\u5939\u4e0e\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5728 docs \u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a index.md \u6587\u4ef6\uff0c\u7136\u540e\u5411\u5176\u4e2d\u6dfb\u52a0\u4e00\u4e9b\u5185\u5bb9\uff0c\u5c1d\u8bd5\u8fd0\u884c\u4e00\u4e0b\u770b\u770b\u6587\u6863\u9879\u76ee\u662f\u5426\u80fd\u6b63\u5e38\u8fd0\u884c\uff0c\u5177\u4f53\u65b9\u6cd5\u5982\u4e0b\uff1a mkdocs serve \u7b49\u5f85\u5de5\u5177\u8fd0\u884c\uff0c\u7136\u540e\u9ed8\u8ba4\u5730\u5740\u662f http://127.0.0.1:8000 \u6211\u4eec\u901a\u8fc7\u6d4f\u89c8\u5668\u6253\u5f00\uff0c\u67e5\u770b\u9875\u9762\u662f\u5426\u80fd\u6b63\u5e38\u663e\u793a\u3002","title":"\u521b\u5efa\u6587\u6863\u9879\u76ee"},{"location":"06-third-part-lib/no-%E4%BD%BF%E7%94%A8%20Mkdocs%20%E5%9C%A8%20Github%20%E4%B8%8A%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E6%96%87%E7%AB%A0/#_3","text":"MkDocs \u975e\u5e38\u7b80\u5355\uff0c\u5c31\u5982\u540c\u7f16\u5199 MarkDown \u4e00\u6837\u7f16\u5199\u5373\u53ef\uff0c MkDocs \u6839\u636e md \u6587\u4ef6\u6765\u5206\u9875\uff0c\u6839\u636e\u6587\u4ef6\u4e2d\u7684\u4e0d\u540c\u5c42\u7ea7\u6807\u9898\u6765\u5206\u6bb5\uff0c\u5177\u4f53\u53ef\u4ee5\u81ea\u884c\u5c1d\u8bd5\u67e5\u770b\u6548\u679c\u3002","title":"\u5e38\u89c4\u64cd\u4f5c"},{"location":"06-third-part-lib/no-%E4%BD%BF%E7%94%A8%20Mkdocs%20%E5%9C%A8%20Github%20%E4%B8%8A%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E6%96%87%E7%AB%A0/#_4","text":"\u4e0e sphinx \u76f8\u6bd4\uff0c mkdocs \u7684\u8fde\u63a5\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u4f7f\u7528 MarkDown \u8bed\u6cd5\u7684\u8fde\u63a5\u5373\u53ef\uff0c\u8fde\u63a5\u8def\u5f84\u4f7f\u7528\u9879\u76ee\u76f8\u5bf9\u8def\u5f84\u5373\u53ef\u3002 \u5982\u679c\u662f\u56fe\u7247\uff0c\u53ef\u4ee5\u5728 docs \u6587\u4ef6\u5939\u5411\u521b\u5efa\u4e00\u4e2a images \u7684\u6587\u4ef6\u5939\uff0c\u5f15\u7528\u7684\u4f7f\u7528\u53ef\u4ee5\u4f7f\u7528\u65b9\u6cd5: ![ image ]( ./images/image.jpg )","title":"\u8fde\u63a5"},{"location":"06-third-part-lib/no-%E4%BD%BF%E7%94%A8%20Mkdocs%20%E5%9C%A8%20Github%20%E4%B8%8A%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E6%96%87%E7%AB%A0/#github","text":"MkDocs \u90e8\u7f72\u5230 Github \u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u4f7f\u7528\u547d\u4ee4 mkdocs gh-deploy \uff0c\u5de5\u5177\u5c31\u4f1a\u81ea\u52a8\u5c06\u76f8\u5e94\u5185\u5bb9\u63a8\u9001\u5230\u9879\u76ee\u7684 gh-pages \u5206\u652f\u4e0a\uff0c\u7136\u540e\u53ea\u9700\u8981\u5728 Github \u9879\u76ee\u8bbe\u7f6e\u4e2d\u9009\u62e9\u597d\u5bf9\u5e94 GitPage \u7684\u5206\u652f\uff0c\u7136\u540e\u901a\u8fc7 https://<user-name>.github.io/<project-name> \u8bbf\u95ee\u5373\u53ef\u3002","title":"\u90e8\u7f72\u5230 Github"},{"location":"06-third-part-lib/pip%20%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/","text":"pip \u4ecb\u7ecd \u00b6 \u5b89\u88c5 \u00b6 pip \u662f Python \u5305\u7ba1\u7406\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u63d0\u4f9b\u4e86\u5bf9Python \u5305\u7684\u67e5\u627e\u3001\u4e0b\u8f7d\u3001\u5b89\u88c5\u3001\u5378\u8f7d\u7684\u529f\u80fd\u3002 \u76ee\u524d\u5982\u679c\u4f60\u5728 python.org \u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\u5b89\u88c5\u5305\uff0c\u5219\u662f\u5df2\u7ecf\u81ea\u5e26\u4e86\u8be5\u5de5\u5177\u3002 Python 2.7.9 + \u6216 Python 3.4+ \u4ee5\u4e0a\u7248\u672c\u90fd\u81ea\u5e26 pip \u5de5\u5177\u3002 pip \u5b98\u7f51\uff1a https://pypi.org/project/pip/ \u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u5224\u65ad\u662f\u5426\u5df2\u5b89\u88c5\uff1a pip --version \u5982\u679c\u4f60\u8fd8\u672a\u5b89\u88c5\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u6765\u5b89\u88c5\uff1a $ curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py # \u4e0b\u8f7d\u5b89\u88c5\u811a\u672c $ sudo python get-pip.py # \u8fd0\u884c\u5b89\u88c5\u811a\u672c **\u6ce8\u610f\uff1a**\u7528\u54ea\u4e2a\u7248\u672c\u7684 Python \u8fd0\u884c\u5b89\u88c5\u811a\u672c\uff0cpip \u5c31\u88ab\u5173\u8054\u5230\u54ea\u4e2a\u7248\u672c\uff0c\u5982\u679c\u662f Python3 \u5219\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a $ sudo python3 get-pip.py # \u8fd0\u884c\u5b89\u88c5\u811a\u672c\u3002 \u4e00\u822c\u60c5\u51b5 pip \u5bf9\u5e94\u7684\u662f Python 2.7\uff0cpip3 \u5bf9\u5e94\u7684\u662f Python 3.x\u3002 \u90e8\u5206 Linux \u53d1\u884c\u7248\u53ef\u76f4\u63a5\u7528\u5305\u7ba1\u7406\u5668\u5b89\u88c5 pip\uff0c\u5982 Debian \u548c Ubuntu\uff1a sudo apt-get install python-pip pip \u6700\u5e38\u7528\u547d\u4ee4 \u00b6 \u663e\u793a\u7248\u672c\u548c\u8def\u5f84 pip --version \u83b7\u53d6\u5e2e\u52a9 pip --help \u5347\u7ea7 pip pip install -U pip \u5982\u679c\u8fd9\u4e2a\u5347\u7ea7\u547d\u4ee4\u51fa\u73b0\u95ee\u9898 \uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a sudo easy_install --upgrade pip \u5b89\u88c5\u5305 pip install SomePackage # \u6700\u65b0\u7248\u672c pip install SomePackage == 1 .0.4 # \u6307\u5b9a\u7248\u672c pip install 'SomePackage>=1.0.4' # \u6700\u5c0f\u7248\u672c \u6bd4\u5982\u6211\u8981\u5b89\u88c5 Django\u3002\u7528\u4ee5\u4e0b\u7684\u4e00\u6761\u547d\u4ee4\u5c31\u53ef\u4ee5\uff0c\u65b9\u4fbf\u5feb\u6377\u3002 pip install Django == 1 .7 \u5347\u7ea7\u5305 pip install --upgrade SomePackage \u5347\u7ea7\u6307\u5b9a\u7684\u5305\uff0c\u901a\u8fc7\u4f7f\u7528==, >=, <=, >, < \u6765\u6307\u5b9a\u4e00\u4e2a\u7248\u672c\u53f7\u3002 \u5378\u8f7d\u5305 pip uninstall SomePackage \u641c\u7d22\u5305 pip search SomePackage \u663e\u793a\u5b89\u88c5\u5305\u4fe1\u606f pip show \u67e5\u770b\u6307\u5b9a\u5305\u7684\u8be6\u7ec6\u4fe1\u606f pip show -f SomePackage \u5217\u51fa\u5df2\u5b89\u88c5\u7684\u5305 pip list \u67e5\u770b\u53ef\u5347\u7ea7\u7684\u5305 pip list -o \u6ce8\u610f\u4e8b\u9879 \u00b6 \u7248\u672c\u517c\u5bb9 \u00b6 \u5982\u679c Python2 \u548c Python3 \u540c\u65f6\u6709 pip\uff0c\u5219\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a Python2\uff1a python2 -m pip install XXX Python3: python3 -m pip install XXX \u7f51\u7edc\u95ee\u9898 \u00b6 \u82e5\u7531\u4e8e\u4e00\u4e9b\u5c40\u57df\u7f51\u7684\u539f\u56e0\uff0c\u4f7f\u7528 pip \u51fa\u73b0 \u201cconnection timeout\u201d\uff0c\u8fde\u63a5\u8d85\u65f6\u53ef\u4ee5\u4f7f\u7528\u56fd\u5185\u7684\u955c\u50cf\u7f51\u7ad9\u4e0b\u8f7d\uff1a http://e.pypi.python.org http://pypi.douban.com/simple \u547d\u4ee4\u5982\u4e0b: pip install -i http://pypi.douban.com/simple --trusted-host pypi.douban.com packagename # packagename\u662f\u8981\u4e0b\u8f7d\u7684\u5305\u7684\u540d\u5b57 pip install -i http://e.pypi.python.org --trusted-host e.pypi.python.org --upgrade pip # \u5347\u7ea7pip","title":"pip \u5b89\u88c5\u4e0e\u4f7f\u7528"},{"location":"06-third-part-lib/pip%20%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#pip","text":"","title":"pip \u4ecb\u7ecd"},{"location":"06-third-part-lib/pip%20%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#_1","text":"pip \u662f Python \u5305\u7ba1\u7406\u5de5\u5177\uff0c\u8be5\u5de5\u5177\u63d0\u4f9b\u4e86\u5bf9Python \u5305\u7684\u67e5\u627e\u3001\u4e0b\u8f7d\u3001\u5b89\u88c5\u3001\u5378\u8f7d\u7684\u529f\u80fd\u3002 \u76ee\u524d\u5982\u679c\u4f60\u5728 python.org \u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684\u5b89\u88c5\u5305\uff0c\u5219\u662f\u5df2\u7ecf\u81ea\u5e26\u4e86\u8be5\u5de5\u5177\u3002 Python 2.7.9 + \u6216 Python 3.4+ \u4ee5\u4e0a\u7248\u672c\u90fd\u81ea\u5e26 pip \u5de5\u5177\u3002 pip \u5b98\u7f51\uff1a https://pypi.org/project/pip/ \u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u5224\u65ad\u662f\u5426\u5df2\u5b89\u88c5\uff1a pip --version \u5982\u679c\u4f60\u8fd8\u672a\u5b89\u88c5\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u6cd5\u6765\u5b89\u88c5\uff1a $ curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py # \u4e0b\u8f7d\u5b89\u88c5\u811a\u672c $ sudo python get-pip.py # \u8fd0\u884c\u5b89\u88c5\u811a\u672c **\u6ce8\u610f\uff1a**\u7528\u54ea\u4e2a\u7248\u672c\u7684 Python \u8fd0\u884c\u5b89\u88c5\u811a\u672c\uff0cpip \u5c31\u88ab\u5173\u8054\u5230\u54ea\u4e2a\u7248\u672c\uff0c\u5982\u679c\u662f Python3 \u5219\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a $ sudo python3 get-pip.py # \u8fd0\u884c\u5b89\u88c5\u811a\u672c\u3002 \u4e00\u822c\u60c5\u51b5 pip \u5bf9\u5e94\u7684\u662f Python 2.7\uff0cpip3 \u5bf9\u5e94\u7684\u662f Python 3.x\u3002 \u90e8\u5206 Linux \u53d1\u884c\u7248\u53ef\u76f4\u63a5\u7528\u5305\u7ba1\u7406\u5668\u5b89\u88c5 pip\uff0c\u5982 Debian \u548c Ubuntu\uff1a sudo apt-get install python-pip","title":"\u5b89\u88c5"},{"location":"06-third-part-lib/pip%20%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#pip_1","text":"\u663e\u793a\u7248\u672c\u548c\u8def\u5f84 pip --version \u83b7\u53d6\u5e2e\u52a9 pip --help \u5347\u7ea7 pip pip install -U pip \u5982\u679c\u8fd9\u4e2a\u5347\u7ea7\u547d\u4ee4\u51fa\u73b0\u95ee\u9898 \uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a sudo easy_install --upgrade pip \u5b89\u88c5\u5305 pip install SomePackage # \u6700\u65b0\u7248\u672c pip install SomePackage == 1 .0.4 # \u6307\u5b9a\u7248\u672c pip install 'SomePackage>=1.0.4' # \u6700\u5c0f\u7248\u672c \u6bd4\u5982\u6211\u8981\u5b89\u88c5 Django\u3002\u7528\u4ee5\u4e0b\u7684\u4e00\u6761\u547d\u4ee4\u5c31\u53ef\u4ee5\uff0c\u65b9\u4fbf\u5feb\u6377\u3002 pip install Django == 1 .7 \u5347\u7ea7\u5305 pip install --upgrade SomePackage \u5347\u7ea7\u6307\u5b9a\u7684\u5305\uff0c\u901a\u8fc7\u4f7f\u7528==, >=, <=, >, < \u6765\u6307\u5b9a\u4e00\u4e2a\u7248\u672c\u53f7\u3002 \u5378\u8f7d\u5305 pip uninstall SomePackage \u641c\u7d22\u5305 pip search SomePackage \u663e\u793a\u5b89\u88c5\u5305\u4fe1\u606f pip show \u67e5\u770b\u6307\u5b9a\u5305\u7684\u8be6\u7ec6\u4fe1\u606f pip show -f SomePackage \u5217\u51fa\u5df2\u5b89\u88c5\u7684\u5305 pip list \u67e5\u770b\u53ef\u5347\u7ea7\u7684\u5305 pip list -o","title":"pip \u6700\u5e38\u7528\u547d\u4ee4"},{"location":"06-third-part-lib/pip%20%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#_2","text":"","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"06-third-part-lib/pip%20%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#_3","text":"\u5982\u679c Python2 \u548c Python3 \u540c\u65f6\u6709 pip\uff0c\u5219\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a Python2\uff1a python2 -m pip install XXX Python3: python3 -m pip install XXX","title":"\u7248\u672c\u517c\u5bb9"},{"location":"06-third-part-lib/pip%20%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/#_4","text":"\u82e5\u7531\u4e8e\u4e00\u4e9b\u5c40\u57df\u7f51\u7684\u539f\u56e0\uff0c\u4f7f\u7528 pip \u51fa\u73b0 \u201cconnection timeout\u201d\uff0c\u8fde\u63a5\u8d85\u65f6\u53ef\u4ee5\u4f7f\u7528\u56fd\u5185\u7684\u955c\u50cf\u7f51\u7ad9\u4e0b\u8f7d\uff1a http://e.pypi.python.org http://pypi.douban.com/simple \u547d\u4ee4\u5982\u4e0b: pip install -i http://pypi.douban.com/simple --trusted-host pypi.douban.com packagename # packagename\u662f\u8981\u4e0b\u8f7d\u7684\u5305\u7684\u540d\u5b57 pip install -i http://e.pypi.python.org --trusted-host e.pypi.python.org --upgrade pip # \u5347\u7ea7pip","title":"\u7f51\u7edc\u95ee\u9898"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/","text":"unittest\u5165\u95e8\u7528\u6cd5 \u00b6 unittest \u662f python\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6 \u5b98\u7f51\u94fe\u63a5 https://docs.python.org/zh-cn/3/library/unittest.html \u7b80\u4ecb \u00b6 unittest\u539f\u540d\u4e3aPyUnit\uff0c\u662f\u7531java\u7684JUnit\u884d\u751f\u800c\u6765\u3002\u5bf9\u4e8e\u5355\u5143\u6d4b\u8bd5\uff0c\u9700\u8981\u8bbe\u7f6e\u9884\u5148\u6761\u4ef6\uff0c\u5bf9\u6bd4\u9884\u671f\u7ed3\u679c\u548c\u5b9e\u9645\u7ed3\u679c \u6574\u4f53\u7ed3\u6784\uff1aunittest\u5e93\u63d0\u4f9b\u4e86test_cases, test_fixtures, test_suites, test_runner test_case\uff1a\u901a\u8fc7\u7ee7\u627fTestCase\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2atest\uff0c\u6216\u8005\u4e00\u7ec4tests test_fixtures\uff1a setup + test_case + teardown\u7ed3\u6784 test_suites\uff1a \u6d4b\u8bd5\u5957\u4ef6 test_runner: \u6d4b\u8bd5\u8fd0\u884c \u5176\u4ed6\u4e0eunittest\u7c7b\u4f3c\u7684\u5355\u5143\u6d4b\u8bd5\u5e93: nose, pytest \u7b80\u5355\u793a\u4f8b \u00b6 import unittest from math_func import * class TestMathFunc ( unittest . TestCase ): def test_add ( self ): self . assertEqual ( 3 , add ( 1 , 2 )) def test_minus ( self ): self . assertEqual ( 10 , minus ( 20 , 10 )) def test_multi ( self ): self . assertEqual ( 4 , multi ( 2 , 2 )) def test_divide ( self ): self . assertEqual ( 3 , divide ( 7 , 2 )) if __name__ == \"__main__\" : unittest . main ( verbosity = 2 ) \u547d\u4ee4\u884c \u00b6 \u4ece\u547d\u4ee4\u884c\u4e2d\u53ef\u4ee5\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u7684\u6a21\u5757\uff0c\u7c7b\uff0c\u751a\u81f3\u5355\u72ec\u7684\u6d4b\u8bd5\u65b9\u6cd5 \u6d4b\u8bd5\u5355\u4e2a\u6d4b\u8bd5\u7c7b python -m unittest test_module # python -m unittest -v test_math_func.TestMathFunc test_add ( test_math_func . TestMathFunc ) ... ok test_divide ( test_math_func . TestMathFunc ) ... ok test_minus ( test_math_func . TestMathFunc ) ... ok test_multi ( test_math_func . TestMathFunc ) ... ok ---------------------------------------------------------------------- Ran 4 tests in 0.000 s OK \u6d4b\u8bd5\u591a\u4e2a\u6d4b\u8bd5\u7c7b python -m unittest test_module.test_class test_module2.test_class2 # python -m unittest -v test_math_func test_math_func2 test_add ( test_math_func . TestMathFunc ) ... ok test_divide ( test_math_func . TestMathFunc ) ... ok test_minus ( test_math_func . TestMathFunc ) ... ok test_multi ( test_math_func . TestMathFunc ) ... ok test_add ( test_math_func2 . TestMathFunc2 ) ... ok test_divide ( test_math_func2 . TestMathFunc2 ) ... ok test_minus ( test_math_func2 . TestMathFunc2 ) ... ok test_multi ( test_math_func2 . TestMathFunc2 ) ... ok ---------------------------------------------------------------------- Ran 8 tests in 0.001 s OK \u663e\u793a\u66f4\u8be6\u7ec6\u7684\u6d4b\u8bd5\u7ed3\u679c\u7684\u8bf4\u660e\u4f7f\u7528[-v]\uff1a python - m unittest - v test_module \u67e5\u770b\u6240\u6709\u7684\u547d\u4ee4\u884c\u9009\u9879\u4f7f\u7528\u547d\u4ee4 python - m unittest - h \u5e38\u7528\u65ad\u8a00\u65b9\u6cd5 \u00b6 unittest\u5e93\u63d0\u4f9b\u4e86\u5f88\u591a\u5b9e\u7528\u65b9\u6cd5\u6765\u68c0\u6d4b\u7a0b\u5e8f\u8fd0\u884c\u7684\u7ed3\u679c\u548c\u9884\u671f, \u5305\u62ec\u4e09\u79cd\u7c7b\u578b\u7684\u65b9\u6cd5\uff0c\u6bcf\u4e00\u79cd\u90fd\u8986\u76d6\u4e86\u5178\u578b\u7684\u7c7b\u578b\uff0c\u6bd4\u5982\uff1a \u68c0\u67e5\u503c\u76f8\u7b49 \u903b\u8f91\u6bd4\u8f83 \u5f02\u5e38 \u5982\u679c\u7ed9\u5b9a\u7684assertion\u901a\u8fc7\u4e86\uff0c\u90a3\u4e48\u6d4b\u8bd5\u4f1a\u6267\u884c\u4e0b\u4e00\u884c\u4ee3\u7801\u3002\u5982\u679c\u7ed9\u5b9a\u7684assertion\u6ca1\u6709\u901a\u8fc7\uff0c\u6d4b\u8bd5\u4f1a\u6682\u505c\u5e76\u4e14\u751f\u6210\u9519\u8bef\u4fe1\u606f\u3002unittest\u5e93\u63d0\u4f9b\u6240\u6709\u6807\u51c6\u7684xUnit assert\u65b9\u6cd5\u3002\u4e0b\u9762\u5217\u51fa\u8f83\u91cd\u8981\u65b9\u6cd5\u7684\u4e00\u90e8\u5206\uff1a \u68c0\u6d4b\u5143\u7d20\u662f\u5426(\u4e0d)\u76f8\u7b49 \u00b6 # \u68c0\u6d4b a == b assertEqual ( a,b [ ,msg ]) : # \u5e38\u7528\u8bed\u68c0\u6d4b\u5143\u7d20\u5c5e\u6027\u7b49 assertEqual ( element.text, \"10\" ) # \u68c0\u6d4b a! == b assertNotEqual ( a,b [ ,smg ]) : \u68c0\u6d4b\u8868\u8fbe\u5f0f\u662f\u5426\u4e3aTrue\u6216\u8005False \u00b6 # \u68c0\u6d4bbool(x) is True assertTrue ( x [ ,msg ]) # \u68c0\u6d4b\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5728\u9875\u9762\u4e0a assertTrue ( element.is_dispalyed ()) \u68c0\u6d4b\u5f02\u5e38 \u00b6 assertRaises ( exc , fun , * args , ** kwds ) assertRaiseRegexp ( exc , r , fun , * args , ** kwds ) \u6700\u6709\u53ef\u80fd\u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\u7684\u662f NoSuchElementFoundexception \u68c0\u6d4b\u6570\u5b57 \u00b6 \u5148\u56db\u820d\u4e94\u5165\u5230\u6307\u5b9a\u7684\u5c0f\u6570\u4f4d\u6570\u540e\u518d\u8fdb\u884c\u6bd4\u8f83 # \u68c0\u6d4bround(a-b,7)==0 assertAlmostEqual ( a, b ) # \u68c0\u6d4bround(a-b,7)!=0 assertNotAlmostEqual ( a, b ) \u903b\u8f91\u8fd0\u7b97 \u00b6 # \u68c0\u6d4ba > b assertGreater ( a, b ) # \u68c0\u6d4ba >= b assertGreaterEqual ( a ,b ) #\u68c0\u6d4b a < b assertLess ( a, b ) # \u68c0\u6d4b a <= b assertLessEqual ( a, b ) \u6b63\u5219\u8868\u8fbe\u5f0f \u00b6 \u68c0\u6d4b\u6b63\u5219\u662f\u5426\u5339\u914d\u7ed9\u5b9a\u7684text # \u68c0\u6d4br.search(s) assertRegexpMatches ( s, r ) # \u68c0\u6d4bnot r.search(s) assertNotRegexpMatches ( s, r ) \u68c0\u6d4b\u5b57\u7b26\u4e32 \u00b6 # \u68c0\u6d4bstring assertMultiLineEqual ( a, b ) \u68c0\u6d4blists\u4e4b\u95f4\u662f\u5426\u76f8\u7b49 \u00b6 # \u68c0\u6d4blists assertListEqual ( a, b ) Test_fixtures \u00b6 \u65b9\u6cd5\u56fa\u5b9a\u88c5\u7f6e\uff1a \u00b6 \u5982\u679c\u8981\u5bf9\u4e00\u4e2a\u6a21\u5757\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u51fd\u6570\u90fd\u505a\u540c\u6837\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u548c\u7ed3\u5c3e\u6e05\u9664\u7b49\u64cd\u4f5c\uff0c\u90a3\u4e48\u521b\u5efan\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5c31\u5f97\u5199n\u904d\u4e00\u6837\u7684\u4ee3\u7801\uff0c\u4e3a\u4e86\u51cf\u5c11\u91cd\u590d\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u4e24\u4e2a\u51fd\u6570\uff1a setUp() \u6bcf\u6b21\u6267\u884c\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u524d\u8c03\u7528\u3002\u65e0\u53c2\u6570\uff0c\u65e0\u8fd4\u56de\u503c\u3002\u8be5\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38\u90fd\u89c6\u4e3aerror\uff0c\u800c\u4e0d\u662f\u6d4b\u8bd5\u4e0d\u901a\u8fc7\u3002\u6ca1\u6709\u9ed8\u8ba4\u7684\u5b9e\u73b0 tearDown() \u6bcf\u6b21\u6267\u884c\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u540e\u8c03\u7528\u3002\u65e0\u53c2\u6570\uff0c\u65e0\u8fd4\u56de\u503c\u3002\u6d4b\u8bd5\u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\uff0c\u8be5\u65b9\u6cd5\u4e5f\u6b63\u5e38\u8c03\u7528\uff0c\u8be5\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38\u90fd\u89c6\u4e3aerror\uff0c\u800c\u4e0d\u662f\u6d4b\u8bd5\u4e0d\u901a\u8fc7\u3002\u53ea\u8981setUp()\u8c03\u7528\u6210\u529f\uff0c\u8be5\u65b9\u6cd5\u624d\u4f1a\u88ab\u8c03\u7528\u3002\u6ca1\u6709\u9ed8\u8ba4\u7684\u5b9e\u73b0\u3002\u901a\u8fc7setup \u548c tesrDown\u7ec4\u88c5\u4e00\u4e2amodule\u6210\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u7684\u6d4b\u8bd5\u88c5\u7f6e\u3002 class TestMathFunc ( unittest . TestCase ): def setUp ( self ): print \"start test {0} ...\" . format ( self . _testMethodName ) def test_add ( self ): self . assertEqual ( 3 , add ( 1 , 2 )) def tearDown ( self ): print \"finish test.\" # \u8fd0\u884c\u7ed3\u679c python - m unittest test_math_func start test test_add ... finish test . . ---------------------------------------------------------------------- Ran 4 tests in 0.000 s OK \u6ce8\u610f\uff1a\u5982\u679csetup\u8fd0\u884c\u629b\u51fa\u9519\u8bef\uff0c\u5219\u6d4b\u8bd5\u7528\u4f8b\u4ee3\u7801\u5219\u4e0d\u4f1a\u6267\u884c\u3002\u4f46\u662f\uff0c\u5982\u679csetpu\u6267\u884c\u6210\u529f\uff0c\u4e0d\u7ba1\u6d4b\u8bd5\u7528\u4f8b\u662f\u5426\u6267\u884c\u6210\u529f\u90fd\u4f1a\u6267\u884cteardown class\u56fa\u5b9a\u88c5\u7f6e\uff1a \u00b6 \u6d4b\u8bd5\u7c7b\u5728\u8fd0\u884c\u524d\u9700\u8981\u8c03\u7528\u5176\u4ed6\u7c7b\u505a\u4e00\u4e9b\u521d\u59cb\u5316, \u4f8b\u5982\u521b\u5efa\u6570\u636e\u5e93\u8fde\u63a5,\u521b\u5efasocket\u7b49 setUpClass() \u4e00\u4e2a\u7c7b\u65b9\u6cd5\u5728\u5355\u4e2a\u7c7b\u6d4b\u8bd5\u4e4b\u524d\u8fd0\u884c\u3002setUpClass\u4f5c\u4e3a\u552f\u4e00\u7684\u53c2\u6570\u88ab\u8c03\u7528\u65f6,\u5fc5\u987b\u4f7f\u7528classmethod()\u4f5c\u4e3a\u88c5\u9970\u5668 tearDownClass() \u4e00\u4e2a\u7c7b\u65b9\u6cd5\u5728\u5355\u4e2a\u7c7b\u6d4b\u8bd5\u4e4b\u540e\u8fd0\u884c\u3002setUpClass\u4f5c\u4e3a\u552f\u4e00\u7684\u53c2\u6570\u88ab\u8c03\u7528\u65f6,\u5fc5\u987b\u4f7f\u7528classmethod()\u4f5c\u4e3a\u88c5\u9970\u5668 socket_util.py class SocketUtil (): def __init__ ( self ): print \"SocketUtil init\" def open_sock ( self ): print \"socket opened\" def close_sock ( self ): print \"socket closed\" test_math_func.py import unittest from math_func import * from socket_util import * class TestMathFunc ( unittest . TestCase ): @classmethod def setUpClass ( cls ): print \"setUpClass ...\" cls . _conn = SocketUtil () def test_add ( self ): self . assertEqual ( 3 , add ( 1 , 2 )) @classmethod def tearDownClass ( cls ): print \"tearDownClass ...\" cls . _conn . close_sock () python -m unittest -v test_math_func setUpClass ... SocketUtil init test_add ( test_math_func . TestMathFunc ) ... ok tearDownClass ... socket closed ---------------------------------------------------------------------- Ran 1 test in 0.000 s OK","title":"unittest\u5165\u95e8\u7528\u6cd5"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#unittest","text":"unittest \u662f python\u7684\u5355\u5143\u6d4b\u8bd5\u6846\u67b6 \u5b98\u7f51\u94fe\u63a5 https://docs.python.org/zh-cn/3/library/unittest.html","title":"unittest\u5165\u95e8\u7528\u6cd5"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#_1","text":"unittest\u539f\u540d\u4e3aPyUnit\uff0c\u662f\u7531java\u7684JUnit\u884d\u751f\u800c\u6765\u3002\u5bf9\u4e8e\u5355\u5143\u6d4b\u8bd5\uff0c\u9700\u8981\u8bbe\u7f6e\u9884\u5148\u6761\u4ef6\uff0c\u5bf9\u6bd4\u9884\u671f\u7ed3\u679c\u548c\u5b9e\u9645\u7ed3\u679c \u6574\u4f53\u7ed3\u6784\uff1aunittest\u5e93\u63d0\u4f9b\u4e86test_cases, test_fixtures, test_suites, test_runner test_case\uff1a\u901a\u8fc7\u7ee7\u627fTestCase\u7c7b\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2atest\uff0c\u6216\u8005\u4e00\u7ec4tests test_fixtures\uff1a setup + test_case + teardown\u7ed3\u6784 test_suites\uff1a \u6d4b\u8bd5\u5957\u4ef6 test_runner: \u6d4b\u8bd5\u8fd0\u884c \u5176\u4ed6\u4e0eunittest\u7c7b\u4f3c\u7684\u5355\u5143\u6d4b\u8bd5\u5e93: nose, pytest","title":"\u7b80\u4ecb"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#_2","text":"import unittest from math_func import * class TestMathFunc ( unittest . TestCase ): def test_add ( self ): self . assertEqual ( 3 , add ( 1 , 2 )) def test_minus ( self ): self . assertEqual ( 10 , minus ( 20 , 10 )) def test_multi ( self ): self . assertEqual ( 4 , multi ( 2 , 2 )) def test_divide ( self ): self . assertEqual ( 3 , divide ( 7 , 2 )) if __name__ == \"__main__\" : unittest . main ( verbosity = 2 )","title":"\u7b80\u5355\u793a\u4f8b"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#_3","text":"\u4ece\u547d\u4ee4\u884c\u4e2d\u53ef\u4ee5\u8fd0\u884c\u5355\u5143\u6d4b\u8bd5\u7684\u6a21\u5757\uff0c\u7c7b\uff0c\u751a\u81f3\u5355\u72ec\u7684\u6d4b\u8bd5\u65b9\u6cd5 \u6d4b\u8bd5\u5355\u4e2a\u6d4b\u8bd5\u7c7b python -m unittest test_module # python -m unittest -v test_math_func.TestMathFunc test_add ( test_math_func . TestMathFunc ) ... ok test_divide ( test_math_func . TestMathFunc ) ... ok test_minus ( test_math_func . TestMathFunc ) ... ok test_multi ( test_math_func . TestMathFunc ) ... ok ---------------------------------------------------------------------- Ran 4 tests in 0.000 s OK \u6d4b\u8bd5\u591a\u4e2a\u6d4b\u8bd5\u7c7b python -m unittest test_module.test_class test_module2.test_class2 # python -m unittest -v test_math_func test_math_func2 test_add ( test_math_func . TestMathFunc ) ... ok test_divide ( test_math_func . TestMathFunc ) ... ok test_minus ( test_math_func . TestMathFunc ) ... ok test_multi ( test_math_func . TestMathFunc ) ... ok test_add ( test_math_func2 . TestMathFunc2 ) ... ok test_divide ( test_math_func2 . TestMathFunc2 ) ... ok test_minus ( test_math_func2 . TestMathFunc2 ) ... ok test_multi ( test_math_func2 . TestMathFunc2 ) ... ok ---------------------------------------------------------------------- Ran 8 tests in 0.001 s OK \u663e\u793a\u66f4\u8be6\u7ec6\u7684\u6d4b\u8bd5\u7ed3\u679c\u7684\u8bf4\u660e\u4f7f\u7528[-v]\uff1a python - m unittest - v test_module \u67e5\u770b\u6240\u6709\u7684\u547d\u4ee4\u884c\u9009\u9879\u4f7f\u7528\u547d\u4ee4 python - m unittest - h","title":"\u547d\u4ee4\u884c"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#_4","text":"unittest\u5e93\u63d0\u4f9b\u4e86\u5f88\u591a\u5b9e\u7528\u65b9\u6cd5\u6765\u68c0\u6d4b\u7a0b\u5e8f\u8fd0\u884c\u7684\u7ed3\u679c\u548c\u9884\u671f, \u5305\u62ec\u4e09\u79cd\u7c7b\u578b\u7684\u65b9\u6cd5\uff0c\u6bcf\u4e00\u79cd\u90fd\u8986\u76d6\u4e86\u5178\u578b\u7684\u7c7b\u578b\uff0c\u6bd4\u5982\uff1a \u68c0\u67e5\u503c\u76f8\u7b49 \u903b\u8f91\u6bd4\u8f83 \u5f02\u5e38 \u5982\u679c\u7ed9\u5b9a\u7684assertion\u901a\u8fc7\u4e86\uff0c\u90a3\u4e48\u6d4b\u8bd5\u4f1a\u6267\u884c\u4e0b\u4e00\u884c\u4ee3\u7801\u3002\u5982\u679c\u7ed9\u5b9a\u7684assertion\u6ca1\u6709\u901a\u8fc7\uff0c\u6d4b\u8bd5\u4f1a\u6682\u505c\u5e76\u4e14\u751f\u6210\u9519\u8bef\u4fe1\u606f\u3002unittest\u5e93\u63d0\u4f9b\u6240\u6709\u6807\u51c6\u7684xUnit assert\u65b9\u6cd5\u3002\u4e0b\u9762\u5217\u51fa\u8f83\u91cd\u8981\u65b9\u6cd5\u7684\u4e00\u90e8\u5206\uff1a","title":"\u5e38\u7528\u65ad\u8a00\u65b9\u6cd5"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#_5","text":"# \u68c0\u6d4b a == b assertEqual ( a,b [ ,msg ]) : # \u5e38\u7528\u8bed\u68c0\u6d4b\u5143\u7d20\u5c5e\u6027\u7b49 assertEqual ( element.text, \"10\" ) # \u68c0\u6d4b a! == b assertNotEqual ( a,b [ ,smg ]) :","title":"\u68c0\u6d4b\u5143\u7d20\u662f\u5426(\u4e0d)\u76f8\u7b49"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#truefalse","text":"# \u68c0\u6d4bbool(x) is True assertTrue ( x [ ,msg ]) # \u68c0\u6d4b\u67d0\u4e2a\u5143\u7d20\u662f\u5426\u5728\u9875\u9762\u4e0a assertTrue ( element.is_dispalyed ())","title":"\u68c0\u6d4b\u8868\u8fbe\u5f0f\u662f\u5426\u4e3aTrue\u6216\u8005False"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#_6","text":"assertRaises ( exc , fun , * args , ** kwds ) assertRaiseRegexp ( exc , r , fun , * args , ** kwds ) \u6700\u6709\u53ef\u80fd\u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\u7684\u662f NoSuchElementFoundexception","title":"\u68c0\u6d4b\u5f02\u5e38"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#_7","text":"\u5148\u56db\u820d\u4e94\u5165\u5230\u6307\u5b9a\u7684\u5c0f\u6570\u4f4d\u6570\u540e\u518d\u8fdb\u884c\u6bd4\u8f83 # \u68c0\u6d4bround(a-b,7)==0 assertAlmostEqual ( a, b ) # \u68c0\u6d4bround(a-b,7)!=0 assertNotAlmostEqual ( a, b )","title":"\u68c0\u6d4b\u6570\u5b57"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#_8","text":"# \u68c0\u6d4ba > b assertGreater ( a, b ) # \u68c0\u6d4ba >= b assertGreaterEqual ( a ,b ) #\u68c0\u6d4b a < b assertLess ( a, b ) # \u68c0\u6d4b a <= b assertLessEqual ( a, b )","title":"\u903b\u8f91\u8fd0\u7b97"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#_9","text":"\u68c0\u6d4b\u6b63\u5219\u662f\u5426\u5339\u914d\u7ed9\u5b9a\u7684text # \u68c0\u6d4br.search(s) assertRegexpMatches ( s, r ) # \u68c0\u6d4bnot r.search(s) assertNotRegexpMatches ( s, r )","title":"\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#_10","text":"# \u68c0\u6d4bstring assertMultiLineEqual ( a, b )","title":"\u68c0\u6d4b\u5b57\u7b26\u4e32"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#lists","text":"# \u68c0\u6d4blists assertListEqual ( a, b )","title":"\u68c0\u6d4blists\u4e4b\u95f4\u662f\u5426\u76f8\u7b49"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#test_fixtures","text":"","title":"Test_fixtures"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#_11","text":"\u5982\u679c\u8981\u5bf9\u4e00\u4e2a\u6a21\u5757\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6d4b\u8bd5\u51fd\u6570\u90fd\u505a\u540c\u6837\u7684\u521d\u59cb\u5316\u64cd\u4f5c\u548c\u7ed3\u5c3e\u6e05\u9664\u7b49\u64cd\u4f5c\uff0c\u90a3\u4e48\u521b\u5efan\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u5c31\u5f97\u5199n\u904d\u4e00\u6837\u7684\u4ee3\u7801\uff0c\u4e3a\u4e86\u51cf\u5c11\u91cd\u590d\u7684\u4ee3\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u4e24\u4e2a\u51fd\u6570\uff1a setUp() \u6bcf\u6b21\u6267\u884c\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u524d\u8c03\u7528\u3002\u65e0\u53c2\u6570\uff0c\u65e0\u8fd4\u56de\u503c\u3002\u8be5\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38\u90fd\u89c6\u4e3aerror\uff0c\u800c\u4e0d\u662f\u6d4b\u8bd5\u4e0d\u901a\u8fc7\u3002\u6ca1\u6709\u9ed8\u8ba4\u7684\u5b9e\u73b0 tearDown() \u6bcf\u6b21\u6267\u884c\u6d4b\u8bd5\u7528\u4f8b\u4e4b\u540e\u8c03\u7528\u3002\u65e0\u53c2\u6570\uff0c\u65e0\u8fd4\u56de\u503c\u3002\u6d4b\u8bd5\u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\uff0c\u8be5\u65b9\u6cd5\u4e5f\u6b63\u5e38\u8c03\u7528\uff0c\u8be5\u65b9\u6cd5\u629b\u51fa\u7684\u5f02\u5e38\u90fd\u89c6\u4e3aerror\uff0c\u800c\u4e0d\u662f\u6d4b\u8bd5\u4e0d\u901a\u8fc7\u3002\u53ea\u8981setUp()\u8c03\u7528\u6210\u529f\uff0c\u8be5\u65b9\u6cd5\u624d\u4f1a\u88ab\u8c03\u7528\u3002\u6ca1\u6709\u9ed8\u8ba4\u7684\u5b9e\u73b0\u3002\u901a\u8fc7setup \u548c tesrDown\u7ec4\u88c5\u4e00\u4e2amodule\u6210\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u7684\u6d4b\u8bd5\u88c5\u7f6e\u3002 class TestMathFunc ( unittest . TestCase ): def setUp ( self ): print \"start test {0} ...\" . format ( self . _testMethodName ) def test_add ( self ): self . assertEqual ( 3 , add ( 1 , 2 )) def tearDown ( self ): print \"finish test.\" # \u8fd0\u884c\u7ed3\u679c python - m unittest test_math_func start test test_add ... finish test . . ---------------------------------------------------------------------- Ran 4 tests in 0.000 s OK \u6ce8\u610f\uff1a\u5982\u679csetup\u8fd0\u884c\u629b\u51fa\u9519\u8bef\uff0c\u5219\u6d4b\u8bd5\u7528\u4f8b\u4ee3\u7801\u5219\u4e0d\u4f1a\u6267\u884c\u3002\u4f46\u662f\uff0c\u5982\u679csetpu\u6267\u884c\u6210\u529f\uff0c\u4e0d\u7ba1\u6d4b\u8bd5\u7528\u4f8b\u662f\u5426\u6267\u884c\u6210\u529f\u90fd\u4f1a\u6267\u884cteardown","title":"\u65b9\u6cd5\u56fa\u5b9a\u88c5\u7f6e\uff1a"},{"location":"06-third-part-lib/unittest%E5%85%A5%E9%97%A8%E7%94%A8%E6%B3%95/#class","text":"\u6d4b\u8bd5\u7c7b\u5728\u8fd0\u884c\u524d\u9700\u8981\u8c03\u7528\u5176\u4ed6\u7c7b\u505a\u4e00\u4e9b\u521d\u59cb\u5316, \u4f8b\u5982\u521b\u5efa\u6570\u636e\u5e93\u8fde\u63a5,\u521b\u5efasocket\u7b49 setUpClass() \u4e00\u4e2a\u7c7b\u65b9\u6cd5\u5728\u5355\u4e2a\u7c7b\u6d4b\u8bd5\u4e4b\u524d\u8fd0\u884c\u3002setUpClass\u4f5c\u4e3a\u552f\u4e00\u7684\u53c2\u6570\u88ab\u8c03\u7528\u65f6,\u5fc5\u987b\u4f7f\u7528classmethod()\u4f5c\u4e3a\u88c5\u9970\u5668 tearDownClass() \u4e00\u4e2a\u7c7b\u65b9\u6cd5\u5728\u5355\u4e2a\u7c7b\u6d4b\u8bd5\u4e4b\u540e\u8fd0\u884c\u3002setUpClass\u4f5c\u4e3a\u552f\u4e00\u7684\u53c2\u6570\u88ab\u8c03\u7528\u65f6,\u5fc5\u987b\u4f7f\u7528classmethod()\u4f5c\u4e3a\u88c5\u9970\u5668 socket_util.py class SocketUtil (): def __init__ ( self ): print \"SocketUtil init\" def open_sock ( self ): print \"socket opened\" def close_sock ( self ): print \"socket closed\" test_math_func.py import unittest from math_func import * from socket_util import * class TestMathFunc ( unittest . TestCase ): @classmethod def setUpClass ( cls ): print \"setUpClass ...\" cls . _conn = SocketUtil () def test_add ( self ): self . assertEqual ( 3 , add ( 1 , 2 )) @classmethod def tearDownClass ( cls ): print \"tearDownClass ...\" cls . _conn . close_sock () python -m unittest -v test_math_func setUpClass ... SocketUtil init test_add ( test_math_func . TestMathFunc ) ... ok tearDownClass ... socket closed ---------------------------------------------------------------------- Ran 1 test in 0.000 s OK","title":"class\u56fa\u5b9a\u88c5\u7f6e\uff1a"},{"location":"06-third-part-lib/wechat-robot-demo-02/","text":"\u5fae\u4fe1\u673a\u5668\u4eba \u00b6 \u9996\u5148\u767b\u9646\u56fe\u7075\u673a\u5668\u4eba\u6ce8\u518c\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684\u5fae\u4fe1\u673a\u5668\u4eba\uff0c\u6ce8\u518c\u6210\u529f\u540e\u53ef\u67e5\u770bapikey\u4ee5\u4f9b\u540e\u9762\u4f7f\u7528\uff01 \u6211\u662f\u5728pycharm\u4e2d\u4f7f\u7528\u7684\uff0c\u5bfc\u5165\u76f8\u5e94\u7684\u6a21\u5757\u5373\u53ef\uff01\u4e0b\u9762\u76f4\u63a5\u770b\u4ee3\u7801\u5427\uff01\u4ee3\u7801\u5f88\u7b80\u6d01\uff01 wechat autoreply \u6e90\u4ee3\u7801\u5982\u4e0b\uff1a import itchat import requests import re # \u6293\u53d6\u7f51\u9875 def getHtmlText ( url ): try : r = requests . get ( url , timeout = 30 ) r . raise_for_status () r . encoding = r . apparent_encoding return r . text except : return \"\" # \u81ea\u52a8\u56de\u590d # \u5c01\u88c5\u597d\u7684\u88c5\u9970\u5668\uff0c\u5f53\u63a5\u6536\u5230\u7684\u6d88\u606f\u662fText\uff0c\u5373\u6587\u5b57\u6d88\u606f @itchat . msg_register ([ 'Text' , 'Map' , 'Card' , 'Note' , 'Sharing' , 'Picture' ]) def text_reply ( msg ): # \u5f53\u6d88\u606f\u4e0d\u662f\u7531\u81ea\u5df1\u53d1\u51fa\u7684\u65f6\u5019 if not msg [ 'FromUserName' ] == Name [ \"\u8f93\u5165\u4f60\u81ea\u5df1\u7684\u5fae\u4fe1\u540d\" ]: # \u56de\u590d\u7ed9\u597d\u53cb url = \"http://www.tuling123.com/openapi/api?key=(\u8f93\u5165\u4f60\u81ea\u5df1\u7684apikey)&info=\" url = url + msg [ 'Text' ] html = getHtmlText ( url ) message = re . findall ( r '\\\"text\\\"\\:\\\".*?\\\"' , html ) reply = eval ( message [ 0 ] . split ( ':' )[ 1 ]) return reply if __name__ == '__main__' : # \u767b\u5f55 itchat . auto_login () # \u83b7\u53d6\u81ea\u5df1\u7684UserName friends = itchat . get_friends ( update = True )[ 0 :] Name = {} Nic = [] User = [] for i in range ( len ( friends )): Nic . append ( friends [ i ][ \"NickName\" ]) User . append ( friends [ i ][ \"UserName\" ]) for i in range ( len ( friends )): Name [ Nic [ i ]] = User [ i ] itchat . run ()","title":"wechat-robot-demo-02"},{"location":"06-third-part-lib/wechat-robot-demo-02/#_1","text":"\u9996\u5148\u767b\u9646\u56fe\u7075\u673a\u5668\u4eba\u6ce8\u518c\u4e00\u4e2a\u5c5e\u4e8e\u81ea\u5df1\u7684\u5fae\u4fe1\u673a\u5668\u4eba\uff0c\u6ce8\u518c\u6210\u529f\u540e\u53ef\u67e5\u770bapikey\u4ee5\u4f9b\u540e\u9762\u4f7f\u7528\uff01 \u6211\u662f\u5728pycharm\u4e2d\u4f7f\u7528\u7684\uff0c\u5bfc\u5165\u76f8\u5e94\u7684\u6a21\u5757\u5373\u53ef\uff01\u4e0b\u9762\u76f4\u63a5\u770b\u4ee3\u7801\u5427\uff01\u4ee3\u7801\u5f88\u7b80\u6d01\uff01 wechat autoreply \u6e90\u4ee3\u7801\u5982\u4e0b\uff1a import itchat import requests import re # \u6293\u53d6\u7f51\u9875 def getHtmlText ( url ): try : r = requests . get ( url , timeout = 30 ) r . raise_for_status () r . encoding = r . apparent_encoding return r . text except : return \"\" # \u81ea\u52a8\u56de\u590d # \u5c01\u88c5\u597d\u7684\u88c5\u9970\u5668\uff0c\u5f53\u63a5\u6536\u5230\u7684\u6d88\u606f\u662fText\uff0c\u5373\u6587\u5b57\u6d88\u606f @itchat . msg_register ([ 'Text' , 'Map' , 'Card' , 'Note' , 'Sharing' , 'Picture' ]) def text_reply ( msg ): # \u5f53\u6d88\u606f\u4e0d\u662f\u7531\u81ea\u5df1\u53d1\u51fa\u7684\u65f6\u5019 if not msg [ 'FromUserName' ] == Name [ \"\u8f93\u5165\u4f60\u81ea\u5df1\u7684\u5fae\u4fe1\u540d\" ]: # \u56de\u590d\u7ed9\u597d\u53cb url = \"http://www.tuling123.com/openapi/api?key=(\u8f93\u5165\u4f60\u81ea\u5df1\u7684apikey)&info=\" url = url + msg [ 'Text' ] html = getHtmlText ( url ) message = re . findall ( r '\\\"text\\\"\\:\\\".*?\\\"' , html ) reply = eval ( message [ 0 ] . split ( ':' )[ 1 ]) return reply if __name__ == '__main__' : # \u767b\u5f55 itchat . auto_login () # \u83b7\u53d6\u81ea\u5df1\u7684UserName friends = itchat . get_friends ( update = True )[ 0 :] Name = {} Nic = [] User = [] for i in range ( len ( friends )): Nic . append ( friends [ i ][ \"NickName\" ]) User . append ( friends [ i ][ \"UserName\" ]) for i in range ( len ( friends )): Name [ Nic [ i ]] = User [ i ] itchat . run ()","title":"\u5fae\u4fe1\u673a\u5668\u4eba"},{"location":"06-third-part-lib/wechat-robot-demo01/","text":"itchat\u5b9e\u73b0\u5fae\u4fe1\u804a\u5929\u673a\u5668\u4eba \u00b6 \u5b9a\u65f6\u53d1\u9001\u5fae\u4fe1\u6d88\u606f\uff0c\u6d88\u606f\u9632\u64a4\u56de\uff0c\u6d88\u606f\u76d1\u63a7\uff0c\u81ea\u5b9a\u4e49\u56de\u590d\u6d88\u606f \u4e00\u3001\u524d\u8a00 \u00b6 \u7531\u4e8e\u5728\u6296\u97f3\u4e0a\u5237\u5230\u5fae\u4fe1\u673a\u5668\u4eba\u81ea\u52a8\u966a\u804a\uff0c\u5fc3\u8840\u6765\u6f6e\uff0c\u81ea\u5df1\u5229\u7528itchat\u548c\u56fe\u7075\u673a\u5668\u4eba\u5b9e\u73b0\u4e86\u5fae\u4fe1\u81ea\u52a8\u56de\u590d\uff0c\u76d1\u542c\u6d88\u606f\uff0c\u6d88\u606f\u9632\u64a4\u56de\u7b49\u3002\u5468\u672b\u5fc3\u60c5\u4e0d\u597d\u641e\u4e86\u4e00\u4e2a\u5fae\u4fe1\u966a\u804a\u673a\u5668\u4eba\u966a\u6211\u804a\u5929\u3002 \u6ce8\u610f\uff1a 1\u3001\u56fe\u7075\u673a\u5668\u4eba\u66f4\u65b0\uff0c\u5bf9\u4e8e\u65b0\u6ce8\u518c\u7684\u53f7\u672a\u8ba4\u8bc1\u6bcf\u4e2a\u53f7\u4ec5\u67092\u6b21\u8bf7\u6c42\uff0c\u8bf7\u6ce8\u518c\u540e\u5c3d\u5feb\u5b8c\u6210\u8eab\u4efd\u8ba4\u8bc1\u3002 2\u3001\u7528\u5230\u4e86python\u7684\u90e8\u5206\u77e5\u8bc6\uff08\u4e0d\u4f1a\u4e5f\u65e0\u5173\u7d27\u8981\uff09\uff0c\u4f1a\u5b89\u88c5\u5373\u53ef\u3002 3\u3001\u6709\u5f88\u591a\u4eba\u60f3\u7528\u81ea\u5df1\u7684\u5fae\u4fe1\u5c0f\u53f7\u8fdb\u884c\u73a9\u800d\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u5fae\u4fe1\u5b98\u65b9\u5df2\u7ecf\u7981\u6b62\u8fd9\u79cd\u884c\u4e3a\uff0c\u5176\u5b9e\u81ea\u52a8\u56de\u590d\u673a\u5668\u4eba\u672c\u8d28\u662f\u57fa\u4e8e\u5fae\u4fe1\u7f51\u9875\u7248\u539f\u7406\u5b9e\u73b0\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f88\u591a\u5fae\u4fe1\u5c0f\u53f7\uff0c\u8fde\u5fae\u4fe1\u7f51\u9875\u7248\u90fd\u88ab\u9650\u5236\u4e86\u4e0d\u80fd\u767b\u5f55\uff0c\u90a3\u4e48\u8fd9\u4e2a\u673a\u5668\u4eba\u662f\u4e0d\u4f1a\u6210\u529f\u7684\u3002\u6240\u4ee5\uff0c\u9996\u5148\u786e\u4fdd\u5fae\u4fe1\u80fd\u767b\u4e0a\u7f51\u9875\u7248\u3002 4\u3001\u5173\u4e8e\u5b89\u5168\u95ee\u9898\uff0c\u7531\u4e8eitchat\u662f\u522b\u4eba\u5f00\u53d1\u7684\u5f00\u6e90\u5e93\uff0c\u6709\u6ca1\u6709\u5b89\u5168\u98ce\u9669\u6682\u65f6\u4e0d\u5f97\u800c\u77e5\u3002\u5728\u5f00\u59cb\u6d4b\u8bd5\u524d\u8bf7\u786e\u4fdd\u4f60\u5df2\u77e5\u6089\u76f8\u5e94\u7684\u98ce\u9669\u3002 \u4e8c\u3001itchat\u5e93\u8be6\u89e3 \u00b6 itchat\u7684\u4ed3\u5e93\u5730\u5740\uff1a https://github.com/littlecodersh/ItChat itchat\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5fae\u4fe1\u4e2a\u4eba\u53f7\u63a5\u53e3\uff0c\u4f7f\u7528python\u8c03\u7528\u5fae\u4fe1\u4ece\u672a\u5982\u6b64\u7b80\u5355 \u4f7f\u7528\u4e0d\u5230\u4e09\u5341\u884c\u7684\u4ee3\u7801\uff0c\u4f60\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e2a\u80fd\u591f\u5904\u7406\u6240\u6709\u4fe1\u606f\u7684\u5fae\u4fe1\u673a\u5668\u4eba\u3002 \u4e09\u3001Python\u4e0b\u8f7d\u4e0e\u5b89\u88c5 \u00b6 \u4e0b\u8f7d\u5730\u5740\uff1a https://www.python.org/downloads/windows/ \uff08\u5b98\u7f51\u5730\u5740\uff09\u4e0b\u8f7d\u6700\u65b0\u7248\u672c3.7.3 \u70b9\u51fbdownload windows x86-64 executable installer\u4e0b\u8f7dwindows64\u4f4dexe\u53ef\u6267\u884c\u6027\u6587\u4ef6 \u8be6\u7ec6 \u4e0b\u8f7d\u5b89\u88c5\u6b65\u9aa4\u53c2\u8003\uff1a https://blog.csdn.net/mingzhuo_126/article/details/81239156 \u56db\u3001itchat\u5e93\u4e0b\u8f7d \u00b6 \u6253\u5f00cmd\u6216\u8005Python3.7 pip install itchat \u67e5\u770b\u4e0b\u8f7d\u6210\u529f\u4e0e\u5426 python -c \"import itchat\" \u5982\u679c\u6ca1\u6709\u62a5\u9519\u4fe1\u606f\u8bf4\u660e\u4f60\u5df2\u7ecf\u5c06\u5b9e\u9a8c\u73af\u5883\u5b89\u88c5\u5b8c\u6210\u3002 \u4e94\u3001\u7b80\u5355\u793a\u4f8b \u00b6 \u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8ba9\u8bfb\u8005\u4f53\u4f1a\u4e0b\u901a\u8fc7itchat\u7f16\u5199\u4e00\u4e2a\u5fae\u4fe1\u673a\u5668\u4eba\u6709\u591a\u7b80\u5355\uff0c\u4ee3\u7801\u529f\u80fd\uff1a \u626b\u7801\u767b\u5f55\u540e\u7ed9\u6587\u4ef6\u52a9\u624b\u53d1\u9001\u4e00\u6761\u4fe1\u606f\uff0c\u76d1\u542c\u63a5\u6536\u5230\u7684\u6587\u4ef6\u4fe1\u606f\uff0c\u6253\u5370\u51fa\u6765\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\u3002 \u6ce8\u610f\uff1a\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5747\u5728Python3.7\u5ba2\u6237\u7aef\u8fd0\u884c import itchat import time @itchat . msg_register ( itchat . content . TEXT ) def reply_msg ( msg ): print ( \"\u6536\u5230\u4e00\u6761\u4fe1\u606f\uff1a\" , msg . text ) if __name__ == '__main__' : itchat . auto_login () time . sleep ( 5 ) itchat . send ( \"\u6587\u4ef6\u52a9\u624b\u4f60\u597d\u54e6\" , toUserName = \"filehelper\" ) itchat . run () \u4ee3\u7801\u6267\u884c\u7ed3\u679c \u5148\u4f1a\u5f39\u51fa\u4e00\u4e2a\u4e8c\u7ef4\u7801\u56fe\u7247\uff0c\u626b\u63cf\u540e\u4f1a\u767b\u9646\u7f51\u9875\u7aef\u5fae\u4fe1\uff0c\u95f4\u9694\u4e00\u4f1a\u513f\u540e\u6587\u4ef6\u52a9\u624b\u6536\u5230\u76f8\u5173\u7684\u4fe1\u606f \u6587\u4ef6\u52a9\u624b\u4f60\u597d\u54e6 \u7136\u540e\u7528\u53e6\u4e00\u4e2a\u8d26\u53f7\u53d1\u9001\u4e00\u6761\u4fe1\u606f\u7ed9\u8fd9\u4e2a\u8d26\u53f7\uff0c\u63a7\u5236\u53f0\u4f1a\u628a\u63a5\u6536\u5230\u7684\u4fe1\u606f\u6253\u5370\u51fa\u6765 Getting uuid of QR code . Downloading QR code . Please scan the QR code to log in . Please press confirm on your phone . Loading the contact , this may take a little while . TERM environment variable not set . Login successfully as Robot Pig Start auto replying . \u6536\u5230\u4e00\u6761\u4fe1\u606f\uff1a \u4f60\u597d \u901a\u8fc7\u4e0a\u97628\u884c\u6709\u6548\u4ee3\u7801\u5c31\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6280\u5de7\u4eba\uff0c\u9177\u4e0d\u9177\uff0c\u5e26\u7740\u8fd9\u6837\u7684\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u6269\u5c55\uff0c\u6bd4\u5982\u6dfb\u52a0\u4e00\u4e2a\u81ea\u52a8\u56de\u590d\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u5728\u5fd9\u7684\u65f6\u5019\uff0c\u522b\u4eba\u7ed9\u4f60\u53d1\u4fe1\u606f\uff0c\u81ea\u52a8\u56de\u590d\uff1a\u201d\u5728\u5fd9\uff0c\u665a\u70b9\u7ed9\u4f60\u56de\u590d\u4fe1\u606f\u201d\u7b49\u3002 \u516d\u3001\u7fa4\u804a \u00b6 \u5728\u5fae\u4fe1\u7f51\u9875\u7aef\u6539\u7248\u540e\uff0c\u521b\u5efa\u7fa4\u804a\u3001\u62c9\u4eba\u8fdb\u7fa4\u548c\u5220\u9664\u7fa4\u804a\u8fd9\u51e0\u4e2a\u63a5\u53e3\u90fd\u7528\u4e0d\u4e86\uff0c\u73b0\u5728\u5229\u7528itchat\u80fd\u505a\u7684\u6709\uff1a\u67e5\u627e\u7fa4\u804a\uff0c\u5f80\u7fa4\u804a\u53d1\u9001\u4fe1\u606f\uff0c\u4ee5\u53ca\u76d1\u63a7\u7fa4\u804a\u4fe1\u606f\uff0c\u4f7f\u7528\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a import itchat import time @itchat . msg_register ( itchat . content . TEXT , isGroupChat = True ) def reply_msg ( msg ): print ( \"\u6536\u5230\u4e00\u6761\u7fa4\u4fe1\u606f\uff1a\" , msg [ 'ActualNickName' ], msg [ 'Content' ]) def after_login (): # \u83b7\u5f97\u5b8c\u6574\u7684\u7fa4\u804a\u5217\u8868 print ( \"\u5b8c\u6574\u7684\u7fa4\u804a\u5217\u8868\u5982\u4e0b\uff1a\" ) print ( itchat . get_chatrooms ()) # \u67e5\u627e\u7279\u5b9a\u7fa4\u804a time . sleep ( 10 ) # \u901a\u8fc7\u7fa4\u804a\u540d\u67e5\u627e chat_rooms = itchat . search_chatrooms ( name = '\u5c0f\u732a\u7684Python\u5b66\u4e60\u4ea4\u6d41\u7fa4' ) if len ( chat_rooms ) > 0 : itchat . send_msg ( '\u6d4b\u8bd5' , chat_rooms [ 0 ][ 'UserName' ]) if __name__ == '__main__' : itchat . auto_login ( loginCallback = after_login ) itchat . run () \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b \uff1a \u5b8c\u6574\u7684\u7fa4\u804a\u5217\u8868\u5982\u4e0b\uff1a [<Chatroom: {'MemberList': <ContactList: []>, 'Uin': 0, 'UserName': '@@60dc5027bbbb83d532aa633b8d126szcf497a98ceea5c098d2c65f0932139b88', 'NickName': '\u6e56\u5317\u4eba\u5728\u6df1\u573390\u540e', 'HeadImgUrl': '/cgi-bin/mmwebwx-bin/webwxgetheadimg?seq=625714901&username=@@60dc502769a783d532aa633b8d126190f497a98ceea5c098d2c65f0932139b88&skey=@crypt_2d4a1972_ea00536c8ac4e35fae1c2a1c48dfe40d', 'ContactFlag': 3, 'MemberCount': 82, 'RemarkName': '', 'HideInputBarFlag': 0, 'Sex': 0, 'Signature': '', 'VerifyFlag': 0, 'OwnerUin': 0, 'PYInitial': 'HBRZSZ90H', 'PYQuanPin': 'hubeirenzaishenzhen90hou', 'RemarkPYInitial': '', 'RemarkPYQuanPin': '', 'StarFriend': 0, 'AppAccountFlag': 0, 'Statues': 0, 'AttrStatus': 0, 'Province': '', 'City': '', 'Alias': '', 'SnsFlag': 0, 'UniFriend': 0, 'DisplayName': '', 'ChatRoomId': 0, 'KeyWord': '', 'EncryChatRoomId': '', 'IsOwner': 0, 'IsAdmin': None, 'Self': <User: {'MemberList': <ContactList: []>, 'UserName': '@29b9cb6386352503319f411754e7424e383ae09e50a224feca754a4516db6a13', 'City': '', 'DisplayName': '', 'PYQuanPin': '', 'RemarkPYInitial': '', 'Province': '', 'KeyWord': '', 'RemarkName': '', 'PYInitial': '', 'EncryChatRoomId': '', 'Alias': '', 'Signature': '(\u00b4v\uff40o)\u2661', 'NickName': 'Robot Pig', 'RemarkPYQuanPin': '', 'HeadImgUrl': '/cgi-bin/mmwebwx-bin/webwxgeticon?seq=275167114&username=@29b9cb6386352503319f411754e7424e383ae09e50a224feca754a4516db6a13&skey=@crypt_2d4a1972_ea00536c8ac4e35fae1c2a1c48dfe40d', 'UniFriend': 0, 'Sex': 2, 'AppAccountFlag': 0, 'VerifyFlag': 0, 'ChatRoomId': 0, 'HideInputBarFlag': 0, 'AttrStatus': 0, 'SnsFlag': 1, 'MemberCount': 0, 'OwnerUin': 0, 'ContactFlag': 0, 'Uin': 3454488193, 'StarFriend': 0, 'Statues': 0, 'WebWxPluginSwitch': 0, 'HeadImgFlag': 1}>}> \u5185\u5bb9\u8fc7\u591a\u7701\u7565... ] \u53e6\u5916\uff0c\u7fa4\u804a\u9664\u4e86\u901a\u8fc7\u7fa4\u540d\u641c\u7d22\u5916\u8fd8\u53ef\u4ee5\u901a\u8fc7username\u6765\u67e5\u627e\uff0c\u6216\u8005\u4e24\u8005\u642d\u914d\u4f7f\u7528\uff1b \u5728msg\u91cc\u6709\u4e00\u4e2aisAt\u5b57\u6bb5\uff0c\u53ef\u7528\u4e8e\u5224\u65ad\u662f\u5426\u88ab\u4eba@\u4e86 \u4f7f\u7528\u65b9\u5f0f\u548c\u7fa4\u804a\u7684\u975e\u5e38\u7c7b\u4f3c\uff0c\u641c\u7d22\u516c\u4f17\u53f7\u65b9\u6cd5search_mps\uff0c\u76d1\u542c\u516c\u4f17\u53f7\u4fe1\u606f\u6dfb\u52a0isMpChat=True\u5143\u7d20\uff0c\u4f7f\u7528\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a import itchat @itchat . msg_register ( itchat . content . TEXT , isMpChat = True ) def reply_msg ( msg ): print ( \"\u6536\u5230\u4e00\u6761\u516c\u4f17\u53f7\u4fe1\u606f\uff1a\" , msg [ 'User' ][ 'NickName' ], msg [ 'Content' ]) def login_after (): mps = itchat . search_mps ( name = 'CoderPig' ) if len ( mps ) > 0 : print ( mps ) itchat . send_msg ( '\u4eba\u751f\u82e6\u77ed' , toUserName = mps [ 0 ][ 'UserName' ]) if __name__ == '__main__' : itchat . auto_login ( loginCallback = login_after ) itchat . run () \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a [<MassivePlatform: {'MemberList': <ContactList: []>, 'Uin': 0, 'UserName': '@07585e92f75be7320e49627cf0c3ad43', 'NickName': 'CoderPig', 'HeadImgUrl': '/cgi-bin/mmwebwx-bin/webwxgeticon?seq=610904174&username=@07585e92f75be7320e49627cf0c3ad43&skey=@crypt_2d4a1972_bc443bf966f94fa11f2db8f812e456cf', 'ContactFlag': 3, 'MemberCount': 0, 'RemarkName': '', 'HideInputBarFlag': 0, 'Sex': 0, 'Signature': '\u4e00\u679a\u54b8\u9c7cAndroid\u5f00\u53d1\uff0c\u4f1a\u70b9Python\uff0c\u5206\u4eab\u70b9\u5b66\u4e60\u7ecf\u9a8c\uff0c\u603b\u7ed3\uff0c\u9e21\u6c64\uff0c\u8bfb\u4e66\u7b14\u8bb0\uff0c\u751f\u6d3b\u6280\u5de7', 'VerifyFlag': 8, 'OwnerUin': 0, 'PYInitial': 'CODERPIG', 'PYQuanPin': 'CoderPig', 'RemarkPYInitial': '', 'RemarkPYQuanPin': '', 'StarFriend': 0, 'AppAccountFlag': 0, 'Statues': 0, 'AttrStatus': 0, 'Province': '\u5e7f\u4e1c', 'City': '\u6df1\u5733', 'Alias': '', 'SnsFlag': 0, 'UniFriend': 0, 'DisplayName': '', 'ChatRoomId': 0, 'KeyWord': 'gh_', 'EncryChatRoomId': '', 'IsOwner': 0}>] \u6536\u5230\u4e00\u6761\u516c\u4f17\u53f7\u4fe1\u606f\uff1a CoderPig \u6211\u7528Python \u4e03\u3001\u5b9a\u65f6\u53d1\u9001\u6d88\u606f \u00b6 \u5b9a\u65f6\u53d1\u9001\u4fe1\u606f\u8fd9\u4e2a\u64cd\u4f5c\u5728\u65e5\u5e38\u751f\u6d3b\u4e2d\u975e\u5e38\u5b9e\u7528\uff0c\u6bd4\u5982\u7ed9\u522b\u4eba\u53d1\u751f\u65e5\u6216\u8005\u8282\u65e5\u795d\u798f\uff0c\u665a\u4e0a12\u70b9\u51c6\u65f6\u53d1\uff0c\u5982\u679c\u6709\u65e9\u7761\u4e60\u60ef\u7684\u8981\u71ac\u523012\u70b9\u5c31\u5f88\u96be\u53d7\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528itchat\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u5b9a\u65f6\u53d1\u9001\u4fe1\u606f\u811a\u672c\u3002\u8fd9\u91cc\u6211\u4eec\u7528\u5230\u4e00\u4e2aapscheduler\u5b9a\u65f6\u8c03\u5ea6\u4efb\u52a1\u6a21\u5757\uff0c\u5728\u547d\u4ee4\u884c\u952e\u5165pip install apscheduler\u5373\u53ef\u5b8c\u6210\u5b89\u88c5\u3002\u8fd9\u91cc\u5e76\u4e0d\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff0c\u6709\u5174\u8da3\u7684\u53ef\u79fb\u6b65\u5230\u5b98\u65b9\u6587\u6863\u81ea\u884c\u67e5\u9605\uff1a http://apscheduler.readthedocs.io/en/latest/userguide.html import itchat from apscheduler.schedulers.blocking import BlockingScheduler import time # \u53d1\u9001\u4fe1\u606f def send_msg (): user_info = itchat . search_friends ( name = '\u57f9\u6770' ) if len ( user_info ) > 0 : user_name = user_info [ 0 ][ 'UserName' ] itchat . send_msg ( '\u751f\u65e5\u5feb\u4e50\u54e6\uff01' , toUserName = user_name ) def after_login (): sched . add_job ( send_msg , 'cron' , year = 2018 , month = 7 , day = 28 , hour = 16 , minute = 5 , second = 30 ) sched . start () def after_logout (): sched . shutdown () if __name__ == '__main__' : sched = BlockingScheduler () itchat . auto_login ( loginCallback = after_login , exitCallback = after_login ) itchat . run () \u8fd9\u4e2a\u53ef\u4ee5\u7528\u6765\u64a9\u59b9\u6700\u4e0d\u9519\u4e86\uff0c\u6bcf\u5929\u5b9a\u65f6\u7684\u65e9\u5b89\u665a\u5b89\uff0c\u7edd\u5bf9\u4e00\u79d2\u90fd\u4e0d\u4f1a\u843d \u516b\u3001\u96c6\u6210\u56fe\u7075API\u5236\u4f5c\u804a\u5929\u673a\u5668\u4eba \u00b6 \u56fe\u7075\u673a\u5668\u4eba\u5b98\u7f51\uff1a http://www.tuling123.com/member/robot/index.jhtml \u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\u540e\uff0c\u70b9\u51fb\u521b\u5efa\u673a\u5668\u4eba\uff0c\u7531\u4e8e\u6700\u8fd1\u521a\u521a\u6574\u6539\uff0c\u5fc5\u987b\u7ecf\u8fc7\u5b9e\u540d\u8ba4\u8bc1\u624d\u53ef\u4ee5\u8c03\u7528 \u5728\u8c03\u7528\u524d\u53ef\u4ee5\u5728postman\u91cc\u9762\u6d4b\u8bd5\u4e00\u4e0b\u56fe\u7075\u673a\u5668\u4eba\u7684\u9b54\u529b\u3002\u6d4b\u8bd5\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1a https://www.kancloud.cn/turing/www-tuling123-com/718227 \u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\u540e\uff0c\u70b9\u51fb\u521b\u5efa\u673a\u5668\u4eba\uff0c\u4f1a\u5f39\u51fa\u5982\u56fe\u6240\u793a\u7684\u9762\u677f\uff0c\u6309\u9700\u914d\u7f6e\u4e0b\u5373\u53ef\u3002 \u8fd9\u91cc\u8bb0\u4e0bapikey\u8c03\u7528\u63a5\u53e3\u7528\u7684\u79d8\u94a5\u3002 \u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a import itchat import requests def get_response ( _info ): print ( _info ) # \u4ece\u597d\u53cb\u53d1\u8fc7\u6765\u7684\u6d88\u606f api_url = 'http://www.tuling123.com/openapi/api' # \u56fe\u7075\u673a\u5668\u4eba\u7f51\u5740 data = { 'key' : '\u8fd9\u91cc\u5199apiKey' , # \u5982\u679c\u8fd9\u4e2a apiKey \u5982\u4e0d\u80fd\u7528\uff0c\u90a3\u5c31\u6ce8\u518c\u4e00\u6b21 'info' : _info , # \u8fd9\u662f\u6211\u4eec\u4ece\u597d\u53cb\u63a5\u6536\u5230\u7684\u6d88\u606f \u7136\u540e\u8f6c\u53d1\u7ed9\u56fe\u7075\u673a\u5668\u4eba 'userid' : 'wechat-robot' , # \u8fd9\u91cc\u4f60\u60f3\u6539\u4ec0\u4e48\u90fd\u53ef\u4ee5 } r = requests . post ( api_url , data = data ) . json () # \u628adata\u6570\u636e\u53d1 print ( r . get ( 'text' )) # \u673a\u5668\u4eba\u56de\u590d\u7ed9\u597d\u53cb\u7684\u6d88\u606f return r @itchat . msg_register ( itchat . content . TEXT ) def text_reply ( msg ): return \"\u3010\u6211\u662f\u5929\u624d^_^\u3011\" + get_response ( msg [ \"Text\" ])[ \"text\" ] if __name__ == '__main__' : itchat . auto_login ( hotReload = True , enableCmdQR = 2 ) # hotReload = True, \u4fdd\u6301\u5728\u7ebf\uff0c\u4e0b\u6b21\u8fd0\u884c\u4ee3\u7801\u53ef\u81ea\u52a8\u767b\u5f55,\u53ef\u4ee5\u6dfb\u52a0enableCmdQR=True\u53c2\u6570\uff0c\u8ba9\u4e8c\u7ef4\u7801\u663e\u793a\u5230\u547d\u4ee4\u884c\u4e0a\uff0c\u53e6\u5916\u90e8\u5206\u7cfb\u7edf\u53ef\u80fd\u5b57\u7b26\u5bbd\u5ea6\u6709\u51fa\u5165\uff0c\u53ef\u4ee5\u901a\u8fc7\u628aenableCmdQR\u8d4b\u503c\u4e3a\u7279\u5b9a\u7684\u500d\u6570\u8fdb\u884c\u8c03\u6574\u3002\u5982\u8bbe\u7f6e\u503c\u4e3a2 itchat . run () \u4e5d\u3001\u76d1\u63a7\u63a5\u6536\u5230\u7684\u6570\u636e \u00b6 \u5148\u662f\u76d1\u63a7\u4fe1\u606f\uff0c\u4fe1\u606f\u53c8\u5206\u4e3a\u597d\u53cb\u804a\u5929\u548c\u7fa4\u804a\uff0c\u6211\u4eec\u7f16\u5199\u4ee3\u7801\u6765\u76d1\u63a7\u4e0b\u6536\u5230\u7684\u6570\u636e\u662f\u600e\u4e48\u6837\u7684\uff1f import itchat from itchat.content import * # \u597d\u53cb\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isFriendChat = True ) def handle_friend_msg ( msg ): print ( \"\u597d\u53cb\u4fe1\u606f: \" , msg ) # \u7fa4\u804a\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isGroupChat = True ) def information ( msg ): print ( \"\u7fa4\u804a\u4fe1\u606f: \" , msg ) if __name__ == '__main__' : itchat . auto_login () itchat . run () \u7ed9\u673a\u5668\u4eba\u53d1\u9001\u4e00\u6761\u4fe1\u606f\uff0c\u8fd8\u6709\u5f80\u7fa4\u804a\u91cc\u53d1\u9001\u4e00\u6761\u4fe1\u606f\uff0c\u67e5\u770b\u6253\u5370\u7684\u4fe1\u606f\u5185\u5bb9\uff0c\u5148\u662f\u597d\u53cb\u4fe1\u606f \u597d\u53cb\u4fe1\u606f: {'MsgId': '5500935424291030814', 'FromUserName': '@8fd8b5b2bd0862ed5d0d573bc6c08362', 'ToUserName': '@913c3124d973db6ae25924bd0598b48a0028e0c2d01e18d8095cc6fd58db116b', 'MsgType': 1, 'Content': '123', 'Status': 3, 'ImgStatus': 1, 'CreateTime': 1533010285, 'VoiceLength': 0, 'PlayLength': 0, 'FileName': '', 'FileSize': '', 'MediaId': '', 'Url': '', 'AppMsgType': 0, 'StatusNotifyCode': 0, 'StatusNotifyUserName': '', 'RecommendInfo': {'UserName': '', 'NickName': '', 'QQNum': 0, 'Province': '', 'City': '', 'Content': '', 'Signature': '', 'Alias': '', 'Scene': 0, 'VerifyFlag': 0, 'AttrStatus': 0, 'Sex': 0, 'Ticket': '', 'OpCode': 0}, 'ForwardFlag': 0, 'AppInfo': {'AppID': '', 'Type': 0}, 'HasProductId': 0, 'Ticket': '', 'ImgHeight': 0, 'ImgWidth': 0, 'SubMsgType': 0, 'NewMsgId': 5500935424291030814, 'OriContent': '', 'EncryFileName': '', 'User': <User: {'MemberList': <ContactList: []>, 'Uin': 0, 'UserName': '@8fd8b5b2bd0862ed5d0d573bc6c08362', 'NickName': 'CoderPig', 'HeadImgUrl': '/cgi-bin/mmwebwx-bin/webwxgeticon?seq=625711027&username=@8fd8b5b2bd0862ed5d0d573bc6c08362&skey=@crypt_2d4a1972_26dc3be99a177455b82518b3ca6e6cc5', 'ContactFlag': 3, 'MemberCount': 0, 'RemarkName': '', 'HideInputBarFlag': 0, 'Sex': 1, 'Signature': '\u4e0d\u670d\u6c14\uff0c\u5c31\u7528\u884c\u52a8\u53bb\u8bc1\u660e\uff0c\u5c11\u8bf4\u591a\u505a...2018.7.29', 'VerifyFlag': 0, 'OwnerUin': 0, 'PYInitial': 'CODERPIG', 'PYQuanPin': 'CoderPig', 'RemarkPYInitial': '', 'RemarkPYQuanPin': '', 'StarFriend': 0, 'AppAccountFlag': 0, 'Statues': 0, 'AttrStatus': 33783847, 'Province': '\u5e7f\u4e1c', 'City': '\u6c5f\u95e8', 'Alias': '', 'SnsFlag': 17, 'UniFriend': 0, 'DisplayName': '', 'ChatRoomId': 0, 'KeyWord': 'zpj', 'EncryChatRoomId': '', 'IsOwner': 0}>, 'Type': 'Text', 'Text': '123'} 1 \u5206\u6790\u4e0b\u8981\u91c7\u96c6\u7684\u6570\u636e\uff0cMsgId\uff08\u5fae\u4fe1\u4fe1\u606f\u7684\u6807\u8bc6\uff0c\u7528\u6765\u4f5c\u4e3a\u952e\uff09\uff0cNickName\uff08\u53d1\u9001\u8005\u7684\u7528\u6237\u540d\uff09\uff0cContent\uff08\u4fe1\u606f\u5185\u5bb9\uff09\uff0cCreateTime\uff08\u521b\u5efa\u65f6\u95f4\uff09\uff0c Type\uff08\u4fe1\u606f\u7c7b\u578b\uff09\u3002\u63a5\u7740\u662f\u7fa4\u804a\u4fe1\u606f\uff1a \u7fa4\u804a\u4fe1\u606f: {'MsgId': '3177606925001563512', 'FromUserName': '@@16521484d35b2fe9c953282d98ec4f11456607924b3a7cc6d7fb671fe7e3081c', 'ToUserName': '@913c3124d973db6ae25924bd0598b48a0028e0c2d01e18d8095cc6fd58db116b', 'MsgType': 1, 'Content': '\u563f\u563f', 'Status': 3, 'ImgStatus': 1, 'CreateTime': 1533010298, 'VoiceLength': 0, 'PlayLength': 0, 'FileName': '', 'FileSize': '', 'MediaId': '', 'Url': '', 'AppMsgType': 0, 'StatusNotifyCode': 0, 'StatusNotifyUserName': '', 'RecommendInfo': {'UserName': '', 'NickName': '', 'QQNum': 0, 'Province': '', 'City': '', 'Content': '', 'Signature': '', 'Alias': '', 'Scene': 0, 'VerifyFlag': 0, 'AttrStatus': 0, 'Sex': 0, 'Ticket': '', 'OpCode': 0}, 'ForwardFlag': 0, 'AppInfo': {'AppID': '', 'Type': 0}, 'HasProductId': 0, 'Ticket': '', 'ImgHeight': 0, 'ImgWidth': 0, 'SubMsgType': 0, 'NewMsgId': 3177606925001563512, 'OriContent': '', 'EncryFileName': '', 'ActualNickName': '\u6613\u2642\u5efa\u2642\u8054', 'IsAt': False, 'ActualUserName': '@8fd8b5b2bd0862ed5d0d573bc6c08362', 'User': \u540c\u6837\u5206\u6790\u4e0b\u8981\u91c7\u96c6\u7684\u6570\u636e\uff0cMsgId\uff08\u5fae\u4fe1\u4fe1\u606f\u7684\u6807\u8bc6\uff09\uff0cActualNickName\uff08\u53d1\u9001\u8005\u7fa4\u540d\u79f0\uff09\uff0cContent\uff08\u4fe1\u606f\u5185\u5bb9\uff09\uff0cCreateTime\uff08\u521b\u5efa\u65f6\u95f4\uff09\uff0c Type\uff08\u4fe1\u606f\u7c7b\u578b\uff09\u3002\u6539\u4e0b\u6211\u4eec\u7684\u7a0b\u5e8f\uff0c\u628a\u8fd9\u4e9b\u90fd\u63d0\u53d6\u6253\u5370\u51fa\u6765\u3002 import itchat from itchat.content import * # \u597d\u53cb\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isFriendChat = True ) def handle_friend_msg ( msg ): msg_id = msg [ 'MsgId' ] msg_from_user = msg [ 'User' ][ 'NickName' ] msg_content = msg [ 'Content' ] msg_create_time = msg [ 'CreateTime' ] msg_type = msg [ 'Type' ] print ( \"\u6536\u5230\u4fe1\u606f: \" , msg_id , msg_from_user , msg_content , msg_create_time , msg_type ) # \u7fa4\u804a\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isGroupChat = True ) def information ( msg ): msg_id = msg [ 'MsgId' ] msg_from_user = msg [ 'ActualNickName' ] msg_content = msg [ 'Content' ] msg_create_time = msg [ 'CreateTime' ] msg_type = msg [ 'Type' ] print ( \"\u7fa4\u804a\u4fe1\u606f: \" , msg_id , msg_from_user , msg_content , msg_create_time , msg_type ) if __name__ == '__main__' : itchat . auto_login () itchat . run () \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u7fa4\u804a\u4fe1\u606f: 2254622820807367335 \u80e1\u5c0f\u97ec \u5bf9\u624b\u516c\u53f8 1533023277 Text \u7fa4\u804a\u4fe1\u606f: 1765614482944449471 xia_ang \u8fd8\u6709\u81ea\u5e72\u4e94 1533023285 Text \u597d\u53cb\u4fe1\u606f: 615083621872361432 CoderPig \u54c8\u54c8 1533023293 Text \u597d\u53cb\u4fe1\u606f: 7292909308782687092 CoderPig \u4f60\u597d\u54e6 1533023302 Text \u5341\u3001\u9a8c\u8bc1\u4e0d\u540c\u4fe1\u606f\u7c7b\u578b\u548c\u5bf9\u5e94\u5904\u7406\u65b9\u5f0f \u00b6 \u55ef\uff0c\u4fe1\u606f\u63d0\u53d6\u6210\u529f\uff0c\u63a5\u4e0b\u6765\u8981\u9a8c\u8bc1\u7684\u662f\u4e0d\u540c\u7684\u4fe1\u606f\u7c7b\u578b\u548c\u5bf9\u5e94\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u6587\u5b57\uff0c\u56fe\u7247(\u8868\u60c5)\uff0c\u97f3\u9891\uff0c\u89c6\u9891\uff0c\u6587\u4ef6\u4e94\u79cd\uff0c\u540e\u9762\u56db\u79cd\u90fd\u9700\u8981\u4e0b\u8f7d\u5230\u672c\u5730\uff0citchat\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0b\u8f7d\u6587\u4ef6\u7684\u65b9\u6cd5msg\u2019Text\u2019\uff0c\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u5373\u53ef\u5b8c\u6210\u6587\u4ef6\u4e0b\u8f7d\uff0c\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a import itchat from itchat.content import * import os import time # \u6587\u4ef6\u4e34\u65f6\u5b58\u50a8\u9875 rec_tmp_dir = os . path . join ( os . getcwd (), 'tmp/' ) # \u5b58\u50a8\u6570\u636e\u7684\u5b57\u5178 rec_msg_dict = {} # \u597d\u53cb\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isFriendChat = True ) def handle_friend_msg ( msg ): msg_id = msg [ 'MsgId' ] msg_from_user = msg [ 'User' ][ 'NickName' ] msg_content = '' # \u6536\u5230\u4fe1\u606f\u7684\u65f6\u95f4 msg_time_rec = time . strftime ( \"%Y-%m- %d %H:%M%S\" , time . localtime ()) msg_create_time = msg [ 'CreateTime' ] msg_type = msg [ 'Type' ] if msg [ 'Type' ] == 'Text' : msg_content = msg [ 'Content' ] elif msg [ 'Type' ] == 'Picture' \\ or msg [ 'Type' ] == 'Recording' \\ or msg [ 'Type' ] == 'Video' \\ or msg [ 'Type' ] == 'Attachment' : msg_content = r \"\" + msg [ 'FileName' ] msg [ 'Text' ]( rec_tmp_dir + msg [ 'FileName' ]) rec_msg_dict . update ({ msg_id : { 'msg_from_user' : msg_from_user , 'msg_time_rec' : msg_time_rec , 'msg_create_time' : msg_create_time , 'msg_type' : msg_type , 'msg_content' : msg_content } }) print ( msg ) # \u7fa4\u804a\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isGroupChat = True ) def information ( msg ): msg_id = msg [ 'MsgId' ] msg_from_user = msg [ 'ActualNickName' ] msg_content = '' # \u6536\u5230\u4fe1\u606f\u7684\u65f6\u95f4 msg_time_rec = time . strftime ( \"%Y-%m- %d %H:%M%S\" , time . localtime ()) msg_create_time = msg [ 'CreateTime' ] msg_type = msg [ 'Type' ] if msg [ 'Type' ] == 'Text' : msg_content = msg [ 'Content' ] elif msg [ 'Type' ] == 'Picture' \\ or msg [ 'Type' ] == 'Recording' \\ or msg [ 'Type' ] == 'Video' \\ or msg [ 'Type' ] == 'Attachment' : msg_content = r \"\" + msg [ 'FileName' ] msg [ 'Text' ]( rec_tmp_dir + msg [ 'FileName' ]) rec_msg_dict . update ({ msg_id : { 'msg_from_user' : msg_from_user , 'msg_time_rec' : msg_time_rec , 'msg_create_time' : msg_create_time , 'msg_type' : msg_type , 'msg_content' : msg_content } }) print ( msg ) if __name__ == '__main__' : if not os . path . exists ( rec_tmp_dir ): os . mkdir ( rec_tmp_dir ) itchat . auto_login () itchat . run () \u5341\u4e00\u3001\u76d1\u63a7\u64a4\u56de\u4fe1\u606f\u548c\u6570\u636e\u63d0\u53d6 \u00b6 \u63a5\u7740\u5230\u64a4\u56de\u4fe1\u606f\u7684\u76d1\u63a7\uff0c\u64a4\u56de\u7684\u4fe1\u606f\u7c7b\u578b\u662fNOTE\uff0c\u6211\u4eec\u76d1\u542c\u4e0b\u770b\u770b\uff0c\u770b\u770b\u64a4\u56de\u7684\u4fe1\u606f\u5177\u4f53\u5185\u5bb9\u3002 {'MsgId': '7399110162640182490', 'FromUserName': '@9c1a8bf4e28771a6b3ab635991dea2a1', 'ToUserName': '@49d1d90b90371099297a08da1009f3cdd042f21194239ef47b60e8f0b52e4553', 'MsgType': 10002, 'Content': '<sysmsg type=\"revokemsg\"><revokemsg><session>zpj779878443</session><oldmsgid>1625723544</oldmsgid><msgid>3154925139554625499</msgid><replacemsg><![CDATA[\"CoderPig\" \u64a4\u56de\u4e86\u4e00\u6761\u6d88\u606f]]></replacemsg></revokemsg></sysmsg>', 'Status': 4, 'ImgStatus': 1, 'CreateTime': 1533103679, 'VoiceLength': 0, 'PlayLength': 0, 'FileName': '', 'FileSize': '', 'MediaId': '', 'Url': '', 'AppMsgType': 0, 'StatusNotifyCode': 0, 'StatusNotifyUserName': '', 'RecommendInfo': {'UserName': '', 'NickName': '', 'QQNum': 0, 'Province': '', 'City': '', 'Content': '', 'Signature': '', 'Alias': '', 'Scene': 0, 'VerifyFlag': 0, 'AttrStatus': 0, 'Sex': 0, 'Ticket': '', 'OpCode': 0}, 'ForwardFlag': 0, 'AppInfo': {'AppID': '', 'Type': 0}, 'HasProductId': 0, 'Ticket': '', 'ImgHeight': 0, 'ImgWidth': 0, 'SubMsgType': 0, 'NewMsgId': 7399110162640182490, 'OriContent': '', 'EncryFileName': '', 'User': <User: {'MemberList': <ContactList: []>, 'Uin': 0, 'UserName': '@9c1a8bf4e28771a6b3ab635991dea2a1', 'NickName': 'CoderPig', 'HeadImgUrl': '/cgi-bin/mmwebwx-bin/webwxgeticon?seq=625711027&username=@9c1a8bf4e28771a6b3ab635991dea2a1&skey=@crypt_2d4a1972_e0963a9b961045c2e06293043f1c98a8', 'ContactFlag': 3, 'MemberCount': 0, 'RemarkName': '', 'HideInputBarFlag': 0, 'Sex': 1, 'Signature': '\u4e0d\u670d\u6c14\uff0c\u5c31\u7528\u884c\u52a8\u53bb\u8bc1\u660e\uff0c\u5c11\u8bf4\u591a\u505a...2018.7.29', 'VerifyFlag': 0, 'OwnerUin': 0, 'PYInitial': 'CODERPIG', 'PYQuanPin': 'CoderPig', 'RemarkPYInitial': '', 'RemarkPYQuanPin': '', 'StarFriend': 0, 'AppAccountFlag': 0, 'Statues': 0, 'AttrStatus': 33783847, 'Province': '\u5e7f\u4e1c', 'City': '\u6c5f\u95e8', 'Alias': '', 'SnsFlag': 17, 'UniFriend': 0, 'DisplayName': '', 'ChatRoomId': 0, 'KeyWord': 'zpj', 'EncryChatRoomId': '', 'IsOwner': 0}>, 'Type': 'Note', 'Text': '\"CoderPig\" \u64a4\u56de\u4e86\u4e00\u6761\u6d88\u606f'} 1 \u9996\u5148\u662f\u5224\u65ad\u7cfb\u7edf\u4fe1\u606f\u662f\u9ed8\u8ba4\u64a4\u56de\u4e86\u4e00\u6761\u4fe1\u606f\uff0c\u5185\u5bb9\u662f\uff1a \u663e\u793a\u5224\u65ad\u662f\u5426\u662f\u64a4\u56de\u7684\u4fe1\u606f\uff0c\u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\u8fd9\u6837\u7684\u4e32\u5b57\u7b26\u4e32\uff1a<![CDATA[\"CoderPig\" \u64a4\u56de\u4e86\u4e00\u6761\u6d88\u606f]]>\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5199\u4e2a\u6b63\u5219\u5224\u65ad\u662f\u5426\u6709\u8fd9\u6837\u7684\u5185\u5bb9\uff0c\u6709\u8bf4\u660e\u662f\u64a4\u56de\u7684\u4fe1\u606f\u63d0\u9192\uff0c\u63a5\u7740\u627e\u64a4\u56de\u7684\u4fe1\u606fMsgId\uff0c\u5728\u4e0a\u9762\u8fd9\u4e32\u4fe1\u606f\u7684\u524d\u9762\u5c31\u662f\u4e86\uff1a3154925139554625499\uff0c\u540c\u6837\u7528\u6b63\u5219\u63d0\u53d6\u3002\u63a5\u7740\u8981\u505a\u7684\u5c31\u662f\u62ff\u7740MsgId\u53bb\u67e5\u5b58\u6d88\u606f\u7684\u5b57\u5178\uff0c\u6839\u636e\u4fe1\u606f\u7c7b\u578b\u62fc\u63a5\u6587\u5b57\u6216\u6587\u5b57\u52a0\u6587\u4ef6\uff0c\u7136\u540e\u53d1\u9001\u7ed9\u6587\u4ef6\u4f20\u8f93\u52a9\u624b\u3002\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\uff01 @itchat . msg_register ([ NOTE ], isFriendChat = True , isGroupChat = True ) def revoke_msg ( msg ): if revoke_msg_compile . search ( msg [ 'Content' ]) is not None : old_msg_id = extract_msgid_compile . search ( msg [ 'Content' ]) . group ( 1 ) old_msg = rec_msg_dict . get ( old_msg_id , {}) # \u5148\u53d1\u9001\u4e00\u6761\u6587\u5b57\u4fe1\u606f itchat . send_msg ( str ( old_msg . get ( 'msg_from_user' ) + \"\u64a4\u56de\u4e86\u4e00\u6761\u4fe1\u606f\uff1a\" + old_msg . get ( 'msg_content' )), toUserName = \"filehelper\" ) # \u5224\u65ad\u6587msg_content\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u8bf4\u660e\u53ef\u80fd\u662f if os . path . exists ( os . path . join ( rec_tmp_dir , old_msg . get ( 'msg_content' ))): if old_msg . get ( 'msg_type' ) == 'Picture' : itchat . send_image ( os . path . join ( rec_tmp_dir , old_msg . get ( 'msg_content' )), toUserName = \"filehelper\" ) elif old_msg . get ( 'msg_type' ) == 'Video' : itchat . send_video ( os . path . join ( rec_tmp_dir , old_msg . get ( 'msg_content' )), toUserName = \"filehelper\" ) elif old_msg . get ( 'msg_type' ) == 'Attachment' \\ or old_msg . get ( 'msg_type' ) == 'Recording' : itchat . send_file ( os . path . join ( rec_tmp_dir , old_msg . get ( 'msg_content' )), toUserName = \"filehelper\" ) \u5341\u4e8c\u3001\u5b9a\u65f6\u6e05\u7406\u7f13\u5b58 \u00b6 \u53e6\u5916\uff0c\u6211\u4eec\u7684\u4fe1\u606f\u90fd\u662f\u7528\u4e00\u4e2a\u5b57\u5178\u5b58\u7740\u7684\uff0c\u65f6\u95f4\u957f\u4e86\u7684\u8bdd\uff0c\u6570\u636e\u4f1a\u5f88\u591a\uff0c\u800c\u4e14\u56fe\u7247\u6587\u4ef6\u8fd9\u4e9b\u4f1a\u8d8a\u6512\u8d8a\u591a\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u6bd4\u5982\u6bcf\u9694\u4e94\u5206\u949f\u6e05\u7406\u4e00\u4e0b\u521b\u5efa\u65f6\u957f\u8d85\u8fc72\u5206\u949f\u7684\u4fe1\u606f\u548c\u5bf9\u5e94\u7684\u6587\u4ef6\u3002\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a # \u6bcf\u9694\u4e94\u79cd\u5206\u949f\u6267\u884c\u4e00\u6b21\u6e05\u7406\u4efb\u52a1 def clear_cache (): # \u5f53\u524d\u65f6\u95f4 cur_time = time . time () # \u904d\u5386\u5b57\u5178\uff0c\u5982\u679c\u6709\u521b\u5efa\u65f6\u95f4\u8d85\u8fc72\u5206\u949f(120s)\u7684\u8bb0\u5f55\uff0c\u5220\u9664\uff0c\u975e\u6587\u672c\u7684\u8bdd\uff0c\u8fde\u6587\u4ef6\u4e5f\u5220\u9664 for key in list ( rec_msg_dict . keys ()): if int ( cur_time ) - int ( rec_msg_dict . get ( key ) . get ( 'msg_create_time' )) > 120 : if not rec_msg_dict . get ( key ) . get ( 'msg_type' ) == 'Text' : file_path = os . path . join ( rec_tmp_dir , rec_msg_dict . get ( key ) . get ( 'msg_content' )) print ( file_path ) if os . path . exists ( file_path ): os . remove ( file_path ) rec_msg_dict . pop ( key ) # \u5f00\u59cb\u8f6e\u8be2\u4efb\u52a1 def start_schedule (): sched . add_job ( clear_cache , 'interval' , minutes = 2 ) sched . start () # \u9000\u51fa\u505c\u6b62\u6240\u6709\u4efb\u52a1\u5e76\u6e05\u7a7a\u7f13\u5b58\u6587\u4ef6\u5939 def after_logout (): sched . shutdown () shutil . rmtree ( rec_tmp_dir ) if __name__ == '__main__' : sched = BlockingScheduler () if not os . path . exists ( rec_tmp_dir ): os . mkdir ( rec_tmp_dir ) itchat . auto_login ( exitCallback = after_logout ) itchat . run ( blockThread = False ) start_schedule () \u611f\u8c22\uff1a https://blog.csdn.net/fxbin123/article/details/80428216 https://www.kancloud.cn/turing/www-tuling123-com/718227 https://www.cnblogs.com/sunshine-long/p/8522175.html https://www.shiyanlou.com/courses/684/labs/2237/document/#%E4%B8%80%E3%80%81%E8%AF%BE%E7%A8%8B%E4%BB%8B%E7%BB%8D https://github.com/littlecodersh/ItChat https://blog.csdn.net/coder_pig/article/details/81357810#commentsedit \u5341\u4e09\u3001\u90e8\u7f72\u5230\u4e91\u670d\u52a1\u5668\u5b9e\u73b024\u5c0f\u65f6\u5728\u7ebf\u966a\u804a \u00b6 \u4ee5\u4e0a\u90fd\u662f\u5728\u672c\u5730\u8fdb\u884c\u6d4b\u8bd5\uff0c\u7535\u8111\u4e0d\u53ef\u80fd24\u5c0f\u65f6\u5f00\u7740\uff0c\u6d6a\u8d39\u7535\u6d6a\u8d39\u94b1\u3002\u6545\u8bb2\u672c\u811a\u672c\u4e0a\u4e91\u3002\u5373\u4e0a\u4e91\u670d\u52a1\u5668\u3002 1\u3001\u767e\u5ea6\u4e91\u670d\u52a1\u5668 \u6211\u8d2d\u4e70\u7684\u662f\u767e\u5ea6\u4e91\u670d\u52a1\u5668\uff0c\u91c7\u7528\u65b0\u6ce8\u518c\u7684\u8d26\u53f7\uff0c\u6709\u6298\u6263\u6d3b\u52a8\uff0c\u4e09\u4e2a\u6708\u4e94\u5341\u51e0\uff0c\u914d\u7f6e1\u68381G\uff0c\u5df2\u7ecf\u5b8c\u5168\u591f\u7528\uff0c\u7cfb\u7edf\u662fCentOs7\uff0c\u91cc\u9762\u81ea\u5e26\u7684python\u7248\u672c\u662f2.7\uff08\u5982\u975e\u7279\u6b8a\u9700\u8981\uff0c\u53ef\u4ee5\u6682\u65f6\u4e0d\u7528\u4e0b\u8f7d\u6700\u65b0\u7248\u7684python\uff0c\u6211\u5c31\u662f\u56e0\u4e3a\u60f3\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684python\uff0c\u7ed3\u679c\u641e\u6765\u641e\u53bb\uff0c\u628a\u670d\u52a1\u5668\u641e\u574f\u4e86\uff0c\u6253\u7535\u8bdd\u7ed9\u4e86\u767e\u5ea6\u4e91\u5ba2\u670d\uff0c\u5de5\u7a0b\u5e08\u5f88\u5feb\u7ed9\u6211\u89e3\u51b3\u4e86\uff0c\u6211\u91cd\u65b0\u5b89\u88c5\u4e86\u4e0b\u7cfb\u7edf\u540e\u51b3\u5b9a\u7528\u7cfb\u7edf\u81ea\u5e26\u7684python\u7248\u672c\uff0c\u51e0\u6b65\u8f7b\u677e\u641e\u5b9a\uff09\u3002 2\u3001\u670d\u52a1\u5668\u9ed8\u8ba4\u662f\u6ca1\u6709\u5b89\u88c5pip\u7684\uff0c\u6240\u4ee5\u5148\u8981\u5b89\u88c5pip $ wget https://bootstrap.pypa.io/get-pip.py $ python get-pip.py $ pip -V \u3000\u3000 #\u67e5\u770bpip\u7248\u672c \u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u968f\u4fbfpip\u5b89\u88c5\u4e1c\u897f\u4e86 \u6309\u7167\u4e0a\u9762\u7684\u6b65\u9aa4\u5b89\u88c5itchat\uff0c\u767b\u5f55\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u6dfb\u52a0enableCmdQR=True\u53c2\u6570\uff0c\u8ba9\u4e8c\u7ef4\u7801\u663e\u793a\u5230\u547d\u4ee4\u884c\u4e0a\uff0c\u53e6\u5916\u90e8\u5206\u7cfb\u7edf\u53ef\u80fd\u5b57\u7b26\u5bbd\u5ea6\u6709\u51fa\u5165\uff0c\u53ef\u4ee5\u901a\u8fc7\u628aenableCmdQR\u8d4b\u503c\u4e3a\u7279\u5b9a\u7684\u500d\u6570\u8fdb\u884c\u8c03\u6574\uff08\u6211\u8bbe\u7f6e\u7684\u662f2\uff09\u3002","title":"wechat-robot-demo01"},{"location":"06-third-part-lib/wechat-robot-demo01/#itchat","text":"\u5b9a\u65f6\u53d1\u9001\u5fae\u4fe1\u6d88\u606f\uff0c\u6d88\u606f\u9632\u64a4\u56de\uff0c\u6d88\u606f\u76d1\u63a7\uff0c\u81ea\u5b9a\u4e49\u56de\u590d\u6d88\u606f","title":"itchat\u5b9e\u73b0\u5fae\u4fe1\u804a\u5929\u673a\u5668\u4eba"},{"location":"06-third-part-lib/wechat-robot-demo01/#_1","text":"\u7531\u4e8e\u5728\u6296\u97f3\u4e0a\u5237\u5230\u5fae\u4fe1\u673a\u5668\u4eba\u81ea\u52a8\u966a\u804a\uff0c\u5fc3\u8840\u6765\u6f6e\uff0c\u81ea\u5df1\u5229\u7528itchat\u548c\u56fe\u7075\u673a\u5668\u4eba\u5b9e\u73b0\u4e86\u5fae\u4fe1\u81ea\u52a8\u56de\u590d\uff0c\u76d1\u542c\u6d88\u606f\uff0c\u6d88\u606f\u9632\u64a4\u56de\u7b49\u3002\u5468\u672b\u5fc3\u60c5\u4e0d\u597d\u641e\u4e86\u4e00\u4e2a\u5fae\u4fe1\u966a\u804a\u673a\u5668\u4eba\u966a\u6211\u804a\u5929\u3002 \u6ce8\u610f\uff1a 1\u3001\u56fe\u7075\u673a\u5668\u4eba\u66f4\u65b0\uff0c\u5bf9\u4e8e\u65b0\u6ce8\u518c\u7684\u53f7\u672a\u8ba4\u8bc1\u6bcf\u4e2a\u53f7\u4ec5\u67092\u6b21\u8bf7\u6c42\uff0c\u8bf7\u6ce8\u518c\u540e\u5c3d\u5feb\u5b8c\u6210\u8eab\u4efd\u8ba4\u8bc1\u3002 2\u3001\u7528\u5230\u4e86python\u7684\u90e8\u5206\u77e5\u8bc6\uff08\u4e0d\u4f1a\u4e5f\u65e0\u5173\u7d27\u8981\uff09\uff0c\u4f1a\u5b89\u88c5\u5373\u53ef\u3002 3\u3001\u6709\u5f88\u591a\u4eba\u60f3\u7528\u81ea\u5df1\u7684\u5fae\u4fe1\u5c0f\u53f7\u8fdb\u884c\u73a9\u800d\uff0c\u4f46\u4e0d\u5e78\u7684\u662f\uff0c\u5fae\u4fe1\u5b98\u65b9\u5df2\u7ecf\u7981\u6b62\u8fd9\u79cd\u884c\u4e3a\uff0c\u5176\u5b9e\u81ea\u52a8\u56de\u590d\u673a\u5668\u4eba\u672c\u8d28\u662f\u57fa\u4e8e\u5fae\u4fe1\u7f51\u9875\u7248\u539f\u7406\u5b9e\u73b0\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f88\u591a\u5fae\u4fe1\u5c0f\u53f7\uff0c\u8fde\u5fae\u4fe1\u7f51\u9875\u7248\u90fd\u88ab\u9650\u5236\u4e86\u4e0d\u80fd\u767b\u5f55\uff0c\u90a3\u4e48\u8fd9\u4e2a\u673a\u5668\u4eba\u662f\u4e0d\u4f1a\u6210\u529f\u7684\u3002\u6240\u4ee5\uff0c\u9996\u5148\u786e\u4fdd\u5fae\u4fe1\u80fd\u767b\u4e0a\u7f51\u9875\u7248\u3002 4\u3001\u5173\u4e8e\u5b89\u5168\u95ee\u9898\uff0c\u7531\u4e8eitchat\u662f\u522b\u4eba\u5f00\u53d1\u7684\u5f00\u6e90\u5e93\uff0c\u6709\u6ca1\u6709\u5b89\u5168\u98ce\u9669\u6682\u65f6\u4e0d\u5f97\u800c\u77e5\u3002\u5728\u5f00\u59cb\u6d4b\u8bd5\u524d\u8bf7\u786e\u4fdd\u4f60\u5df2\u77e5\u6089\u76f8\u5e94\u7684\u98ce\u9669\u3002","title":"\u4e00\u3001\u524d\u8a00"},{"location":"06-third-part-lib/wechat-robot-demo01/#itchat_1","text":"itchat\u7684\u4ed3\u5e93\u5730\u5740\uff1a https://github.com/littlecodersh/ItChat itchat\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5fae\u4fe1\u4e2a\u4eba\u53f7\u63a5\u53e3\uff0c\u4f7f\u7528python\u8c03\u7528\u5fae\u4fe1\u4ece\u672a\u5982\u6b64\u7b80\u5355 \u4f7f\u7528\u4e0d\u5230\u4e09\u5341\u884c\u7684\u4ee3\u7801\uff0c\u4f60\u5c31\u53ef\u4ee5\u5b8c\u6210\u4e00\u4e2a\u80fd\u591f\u5904\u7406\u6240\u6709\u4fe1\u606f\u7684\u5fae\u4fe1\u673a\u5668\u4eba\u3002","title":"\u4e8c\u3001itchat\u5e93\u8be6\u89e3"},{"location":"06-third-part-lib/wechat-robot-demo01/#python","text":"\u4e0b\u8f7d\u5730\u5740\uff1a https://www.python.org/downloads/windows/ \uff08\u5b98\u7f51\u5730\u5740\uff09\u4e0b\u8f7d\u6700\u65b0\u7248\u672c3.7.3 \u70b9\u51fbdownload windows x86-64 executable installer\u4e0b\u8f7dwindows64\u4f4dexe\u53ef\u6267\u884c\u6027\u6587\u4ef6 \u8be6\u7ec6 \u4e0b\u8f7d\u5b89\u88c5\u6b65\u9aa4\u53c2\u8003\uff1a https://blog.csdn.net/mingzhuo_126/article/details/81239156","title":"\u4e09\u3001Python\u4e0b\u8f7d\u4e0e\u5b89\u88c5"},{"location":"06-third-part-lib/wechat-robot-demo01/#itchat_2","text":"\u6253\u5f00cmd\u6216\u8005Python3.7 pip install itchat \u67e5\u770b\u4e0b\u8f7d\u6210\u529f\u4e0e\u5426 python -c \"import itchat\" \u5982\u679c\u6ca1\u6709\u62a5\u9519\u4fe1\u606f\u8bf4\u660e\u4f60\u5df2\u7ecf\u5c06\u5b9e\u9a8c\u73af\u5883\u5b89\u88c5\u5b8c\u6210\u3002","title":"\u56db\u3001itchat\u5e93\u4e0b\u8f7d"},{"location":"06-third-part-lib/wechat-robot-demo01/#_2","text":"\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u8ba9\u8bfb\u8005\u4f53\u4f1a\u4e0b\u901a\u8fc7itchat\u7f16\u5199\u4e00\u4e2a\u5fae\u4fe1\u673a\u5668\u4eba\u6709\u591a\u7b80\u5355\uff0c\u4ee3\u7801\u529f\u80fd\uff1a \u626b\u7801\u767b\u5f55\u540e\u7ed9\u6587\u4ef6\u52a9\u624b\u53d1\u9001\u4e00\u6761\u4fe1\u606f\uff0c\u76d1\u542c\u63a5\u6536\u5230\u7684\u6587\u4ef6\u4fe1\u606f\uff0c\u6253\u5370\u51fa\u6765\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\u3002 \u6ce8\u610f\uff1a\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\u5747\u5728Python3.7\u5ba2\u6237\u7aef\u8fd0\u884c import itchat import time @itchat . msg_register ( itchat . content . TEXT ) def reply_msg ( msg ): print ( \"\u6536\u5230\u4e00\u6761\u4fe1\u606f\uff1a\" , msg . text ) if __name__ == '__main__' : itchat . auto_login () time . sleep ( 5 ) itchat . send ( \"\u6587\u4ef6\u52a9\u624b\u4f60\u597d\u54e6\" , toUserName = \"filehelper\" ) itchat . run () \u4ee3\u7801\u6267\u884c\u7ed3\u679c \u5148\u4f1a\u5f39\u51fa\u4e00\u4e2a\u4e8c\u7ef4\u7801\u56fe\u7247\uff0c\u626b\u63cf\u540e\u4f1a\u767b\u9646\u7f51\u9875\u7aef\u5fae\u4fe1\uff0c\u95f4\u9694\u4e00\u4f1a\u513f\u540e\u6587\u4ef6\u52a9\u624b\u6536\u5230\u76f8\u5173\u7684\u4fe1\u606f \u6587\u4ef6\u52a9\u624b\u4f60\u597d\u54e6 \u7136\u540e\u7528\u53e6\u4e00\u4e2a\u8d26\u53f7\u53d1\u9001\u4e00\u6761\u4fe1\u606f\u7ed9\u8fd9\u4e2a\u8d26\u53f7\uff0c\u63a7\u5236\u53f0\u4f1a\u628a\u63a5\u6536\u5230\u7684\u4fe1\u606f\u6253\u5370\u51fa\u6765 Getting uuid of QR code . Downloading QR code . Please scan the QR code to log in . Please press confirm on your phone . Loading the contact , this may take a little while . TERM environment variable not set . Login successfully as Robot Pig Start auto replying . \u6536\u5230\u4e00\u6761\u4fe1\u606f\uff1a \u4f60\u597d \u901a\u8fc7\u4e0a\u97628\u884c\u6709\u6548\u4ee3\u7801\u5c31\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6280\u5de7\u4eba\uff0c\u9177\u4e0d\u9177\uff0c\u5e26\u7740\u8fd9\u6837\u7684\u601d\u8def\uff0c\u6211\u4eec\u53ef\u4ee5\u8fdb\u884c\u6269\u5c55\uff0c\u6bd4\u5982\u6dfb\u52a0\u4e00\u4e2a\u81ea\u52a8\u56de\u590d\u7684\u529f\u80fd\uff0c\u6bd4\u5982\u5728\u5fd9\u7684\u65f6\u5019\uff0c\u522b\u4eba\u7ed9\u4f60\u53d1\u4fe1\u606f\uff0c\u81ea\u52a8\u56de\u590d\uff1a\u201d\u5728\u5fd9\uff0c\u665a\u70b9\u7ed9\u4f60\u56de\u590d\u4fe1\u606f\u201d\u7b49\u3002","title":"\u4e94\u3001\u7b80\u5355\u793a\u4f8b"},{"location":"06-third-part-lib/wechat-robot-demo01/#_3","text":"\u5728\u5fae\u4fe1\u7f51\u9875\u7aef\u6539\u7248\u540e\uff0c\u521b\u5efa\u7fa4\u804a\u3001\u62c9\u4eba\u8fdb\u7fa4\u548c\u5220\u9664\u7fa4\u804a\u8fd9\u51e0\u4e2a\u63a5\u53e3\u90fd\u7528\u4e0d\u4e86\uff0c\u73b0\u5728\u5229\u7528itchat\u80fd\u505a\u7684\u6709\uff1a\u67e5\u627e\u7fa4\u804a\uff0c\u5f80\u7fa4\u804a\u53d1\u9001\u4fe1\u606f\uff0c\u4ee5\u53ca\u76d1\u63a7\u7fa4\u804a\u4fe1\u606f\uff0c\u4f7f\u7528\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a import itchat import time @itchat . msg_register ( itchat . content . TEXT , isGroupChat = True ) def reply_msg ( msg ): print ( \"\u6536\u5230\u4e00\u6761\u7fa4\u4fe1\u606f\uff1a\" , msg [ 'ActualNickName' ], msg [ 'Content' ]) def after_login (): # \u83b7\u5f97\u5b8c\u6574\u7684\u7fa4\u804a\u5217\u8868 print ( \"\u5b8c\u6574\u7684\u7fa4\u804a\u5217\u8868\u5982\u4e0b\uff1a\" ) print ( itchat . get_chatrooms ()) # \u67e5\u627e\u7279\u5b9a\u7fa4\u804a time . sleep ( 10 ) # \u901a\u8fc7\u7fa4\u804a\u540d\u67e5\u627e chat_rooms = itchat . search_chatrooms ( name = '\u5c0f\u732a\u7684Python\u5b66\u4e60\u4ea4\u6d41\u7fa4' ) if len ( chat_rooms ) > 0 : itchat . send_msg ( '\u6d4b\u8bd5' , chat_rooms [ 0 ][ 'UserName' ]) if __name__ == '__main__' : itchat . auto_login ( loginCallback = after_login ) itchat . run () \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b \uff1a \u5b8c\u6574\u7684\u7fa4\u804a\u5217\u8868\u5982\u4e0b\uff1a [<Chatroom: {'MemberList': <ContactList: []>, 'Uin': 0, 'UserName': '@@60dc5027bbbb83d532aa633b8d126szcf497a98ceea5c098d2c65f0932139b88', 'NickName': '\u6e56\u5317\u4eba\u5728\u6df1\u573390\u540e', 'HeadImgUrl': '/cgi-bin/mmwebwx-bin/webwxgetheadimg?seq=625714901&username=@@60dc502769a783d532aa633b8d126190f497a98ceea5c098d2c65f0932139b88&skey=@crypt_2d4a1972_ea00536c8ac4e35fae1c2a1c48dfe40d', 'ContactFlag': 3, 'MemberCount': 82, 'RemarkName': '', 'HideInputBarFlag': 0, 'Sex': 0, 'Signature': '', 'VerifyFlag': 0, 'OwnerUin': 0, 'PYInitial': 'HBRZSZ90H', 'PYQuanPin': 'hubeirenzaishenzhen90hou', 'RemarkPYInitial': '', 'RemarkPYQuanPin': '', 'StarFriend': 0, 'AppAccountFlag': 0, 'Statues': 0, 'AttrStatus': 0, 'Province': '', 'City': '', 'Alias': '', 'SnsFlag': 0, 'UniFriend': 0, 'DisplayName': '', 'ChatRoomId': 0, 'KeyWord': '', 'EncryChatRoomId': '', 'IsOwner': 0, 'IsAdmin': None, 'Self': <User: {'MemberList': <ContactList: []>, 'UserName': '@29b9cb6386352503319f411754e7424e383ae09e50a224feca754a4516db6a13', 'City': '', 'DisplayName': '', 'PYQuanPin': '', 'RemarkPYInitial': '', 'Province': '', 'KeyWord': '', 'RemarkName': '', 'PYInitial': '', 'EncryChatRoomId': '', 'Alias': '', 'Signature': '(\u00b4v\uff40o)\u2661', 'NickName': 'Robot Pig', 'RemarkPYQuanPin': '', 'HeadImgUrl': '/cgi-bin/mmwebwx-bin/webwxgeticon?seq=275167114&username=@29b9cb6386352503319f411754e7424e383ae09e50a224feca754a4516db6a13&skey=@crypt_2d4a1972_ea00536c8ac4e35fae1c2a1c48dfe40d', 'UniFriend': 0, 'Sex': 2, 'AppAccountFlag': 0, 'VerifyFlag': 0, 'ChatRoomId': 0, 'HideInputBarFlag': 0, 'AttrStatus': 0, 'SnsFlag': 1, 'MemberCount': 0, 'OwnerUin': 0, 'ContactFlag': 0, 'Uin': 3454488193, 'StarFriend': 0, 'Statues': 0, 'WebWxPluginSwitch': 0, 'HeadImgFlag': 1}>}> \u5185\u5bb9\u8fc7\u591a\u7701\u7565... ] \u53e6\u5916\uff0c\u7fa4\u804a\u9664\u4e86\u901a\u8fc7\u7fa4\u540d\u641c\u7d22\u5916\u8fd8\u53ef\u4ee5\u901a\u8fc7username\u6765\u67e5\u627e\uff0c\u6216\u8005\u4e24\u8005\u642d\u914d\u4f7f\u7528\uff1b \u5728msg\u91cc\u6709\u4e00\u4e2aisAt\u5b57\u6bb5\uff0c\u53ef\u7528\u4e8e\u5224\u65ad\u662f\u5426\u88ab\u4eba@\u4e86 \u4f7f\u7528\u65b9\u5f0f\u548c\u7fa4\u804a\u7684\u975e\u5e38\u7c7b\u4f3c\uff0c\u641c\u7d22\u516c\u4f17\u53f7\u65b9\u6cd5search_mps\uff0c\u76d1\u542c\u516c\u4f17\u53f7\u4fe1\u606f\u6dfb\u52a0isMpChat=True\u5143\u7d20\uff0c\u4f7f\u7528\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a import itchat @itchat . msg_register ( itchat . content . TEXT , isMpChat = True ) def reply_msg ( msg ): print ( \"\u6536\u5230\u4e00\u6761\u516c\u4f17\u53f7\u4fe1\u606f\uff1a\" , msg [ 'User' ][ 'NickName' ], msg [ 'Content' ]) def login_after (): mps = itchat . search_mps ( name = 'CoderPig' ) if len ( mps ) > 0 : print ( mps ) itchat . send_msg ( '\u4eba\u751f\u82e6\u77ed' , toUserName = mps [ 0 ][ 'UserName' ]) if __name__ == '__main__' : itchat . auto_login ( loginCallback = login_after ) itchat . run () \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a [<MassivePlatform: {'MemberList': <ContactList: []>, 'Uin': 0, 'UserName': '@07585e92f75be7320e49627cf0c3ad43', 'NickName': 'CoderPig', 'HeadImgUrl': '/cgi-bin/mmwebwx-bin/webwxgeticon?seq=610904174&username=@07585e92f75be7320e49627cf0c3ad43&skey=@crypt_2d4a1972_bc443bf966f94fa11f2db8f812e456cf', 'ContactFlag': 3, 'MemberCount': 0, 'RemarkName': '', 'HideInputBarFlag': 0, 'Sex': 0, 'Signature': '\u4e00\u679a\u54b8\u9c7cAndroid\u5f00\u53d1\uff0c\u4f1a\u70b9Python\uff0c\u5206\u4eab\u70b9\u5b66\u4e60\u7ecf\u9a8c\uff0c\u603b\u7ed3\uff0c\u9e21\u6c64\uff0c\u8bfb\u4e66\u7b14\u8bb0\uff0c\u751f\u6d3b\u6280\u5de7', 'VerifyFlag': 8, 'OwnerUin': 0, 'PYInitial': 'CODERPIG', 'PYQuanPin': 'CoderPig', 'RemarkPYInitial': '', 'RemarkPYQuanPin': '', 'StarFriend': 0, 'AppAccountFlag': 0, 'Statues': 0, 'AttrStatus': 0, 'Province': '\u5e7f\u4e1c', 'City': '\u6df1\u5733', 'Alias': '', 'SnsFlag': 0, 'UniFriend': 0, 'DisplayName': '', 'ChatRoomId': 0, 'KeyWord': 'gh_', 'EncryChatRoomId': '', 'IsOwner': 0}>] \u6536\u5230\u4e00\u6761\u516c\u4f17\u53f7\u4fe1\u606f\uff1a CoderPig \u6211\u7528Python","title":"\u516d\u3001\u7fa4\u804a"},{"location":"06-third-part-lib/wechat-robot-demo01/#_4","text":"\u5b9a\u65f6\u53d1\u9001\u4fe1\u606f\u8fd9\u4e2a\u64cd\u4f5c\u5728\u65e5\u5e38\u751f\u6d3b\u4e2d\u975e\u5e38\u5b9e\u7528\uff0c\u6bd4\u5982\u7ed9\u522b\u4eba\u53d1\u751f\u65e5\u6216\u8005\u8282\u65e5\u795d\u798f\uff0c\u665a\u4e0a12\u70b9\u51c6\u65f6\u53d1\uff0c\u5982\u679c\u6709\u65e9\u7761\u4e60\u60ef\u7684\u8981\u71ac\u523012\u70b9\u5c31\u5f88\u96be\u53d7\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u5229\u7528itchat\u7f16\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u5b9a\u65f6\u53d1\u9001\u4fe1\u606f\u811a\u672c\u3002\u8fd9\u91cc\u6211\u4eec\u7528\u5230\u4e00\u4e2aapscheduler\u5b9a\u65f6\u8c03\u5ea6\u4efb\u52a1\u6a21\u5757\uff0c\u5728\u547d\u4ee4\u884c\u952e\u5165pip install apscheduler\u5373\u53ef\u5b8c\u6210\u5b89\u88c5\u3002\u8fd9\u91cc\u5e76\u4e0d\u4f1a\u8be6\u7ec6\u8bb2\u89e3\uff0c\u6709\u5174\u8da3\u7684\u53ef\u79fb\u6b65\u5230\u5b98\u65b9\u6587\u6863\u81ea\u884c\u67e5\u9605\uff1a http://apscheduler.readthedocs.io/en/latest/userguide.html import itchat from apscheduler.schedulers.blocking import BlockingScheduler import time # \u53d1\u9001\u4fe1\u606f def send_msg (): user_info = itchat . search_friends ( name = '\u57f9\u6770' ) if len ( user_info ) > 0 : user_name = user_info [ 0 ][ 'UserName' ] itchat . send_msg ( '\u751f\u65e5\u5feb\u4e50\u54e6\uff01' , toUserName = user_name ) def after_login (): sched . add_job ( send_msg , 'cron' , year = 2018 , month = 7 , day = 28 , hour = 16 , minute = 5 , second = 30 ) sched . start () def after_logout (): sched . shutdown () if __name__ == '__main__' : sched = BlockingScheduler () itchat . auto_login ( loginCallback = after_login , exitCallback = after_login ) itchat . run () \u8fd9\u4e2a\u53ef\u4ee5\u7528\u6765\u64a9\u59b9\u6700\u4e0d\u9519\u4e86\uff0c\u6bcf\u5929\u5b9a\u65f6\u7684\u65e9\u5b89\u665a\u5b89\uff0c\u7edd\u5bf9\u4e00\u79d2\u90fd\u4e0d\u4f1a\u843d","title":"\u4e03\u3001\u5b9a\u65f6\u53d1\u9001\u6d88\u606f"},{"location":"06-third-part-lib/wechat-robot-demo01/#api","text":"\u56fe\u7075\u673a\u5668\u4eba\u5b98\u7f51\uff1a http://www.tuling123.com/member/robot/index.jhtml \u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\u540e\uff0c\u70b9\u51fb\u521b\u5efa\u673a\u5668\u4eba\uff0c\u7531\u4e8e\u6700\u8fd1\u521a\u521a\u6574\u6539\uff0c\u5fc5\u987b\u7ecf\u8fc7\u5b9e\u540d\u8ba4\u8bc1\u624d\u53ef\u4ee5\u8c03\u7528 \u5728\u8c03\u7528\u524d\u53ef\u4ee5\u5728postman\u91cc\u9762\u6d4b\u8bd5\u4e00\u4e0b\u56fe\u7075\u673a\u5668\u4eba\u7684\u9b54\u529b\u3002\u6d4b\u8bd5\u53ef\u4ee5\u53c2\u8003\u5b98\u65b9\u6587\u6863\uff1a https://www.kancloud.cn/turing/www-tuling123-com/718227 \u6ce8\u518c\u4e00\u4e2a\u8d26\u53f7\u540e\uff0c\u70b9\u51fb\u521b\u5efa\u673a\u5668\u4eba\uff0c\u4f1a\u5f39\u51fa\u5982\u56fe\u6240\u793a\u7684\u9762\u677f\uff0c\u6309\u9700\u914d\u7f6e\u4e0b\u5373\u53ef\u3002 \u8fd9\u91cc\u8bb0\u4e0bapikey\u8c03\u7528\u63a5\u53e3\u7528\u7684\u79d8\u94a5\u3002 \u5177\u4f53\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b\uff1a import itchat import requests def get_response ( _info ): print ( _info ) # \u4ece\u597d\u53cb\u53d1\u8fc7\u6765\u7684\u6d88\u606f api_url = 'http://www.tuling123.com/openapi/api' # \u56fe\u7075\u673a\u5668\u4eba\u7f51\u5740 data = { 'key' : '\u8fd9\u91cc\u5199apiKey' , # \u5982\u679c\u8fd9\u4e2a apiKey \u5982\u4e0d\u80fd\u7528\uff0c\u90a3\u5c31\u6ce8\u518c\u4e00\u6b21 'info' : _info , # \u8fd9\u662f\u6211\u4eec\u4ece\u597d\u53cb\u63a5\u6536\u5230\u7684\u6d88\u606f \u7136\u540e\u8f6c\u53d1\u7ed9\u56fe\u7075\u673a\u5668\u4eba 'userid' : 'wechat-robot' , # \u8fd9\u91cc\u4f60\u60f3\u6539\u4ec0\u4e48\u90fd\u53ef\u4ee5 } r = requests . post ( api_url , data = data ) . json () # \u628adata\u6570\u636e\u53d1 print ( r . get ( 'text' )) # \u673a\u5668\u4eba\u56de\u590d\u7ed9\u597d\u53cb\u7684\u6d88\u606f return r @itchat . msg_register ( itchat . content . TEXT ) def text_reply ( msg ): return \"\u3010\u6211\u662f\u5929\u624d^_^\u3011\" + get_response ( msg [ \"Text\" ])[ \"text\" ] if __name__ == '__main__' : itchat . auto_login ( hotReload = True , enableCmdQR = 2 ) # hotReload = True, \u4fdd\u6301\u5728\u7ebf\uff0c\u4e0b\u6b21\u8fd0\u884c\u4ee3\u7801\u53ef\u81ea\u52a8\u767b\u5f55,\u53ef\u4ee5\u6dfb\u52a0enableCmdQR=True\u53c2\u6570\uff0c\u8ba9\u4e8c\u7ef4\u7801\u663e\u793a\u5230\u547d\u4ee4\u884c\u4e0a\uff0c\u53e6\u5916\u90e8\u5206\u7cfb\u7edf\u53ef\u80fd\u5b57\u7b26\u5bbd\u5ea6\u6709\u51fa\u5165\uff0c\u53ef\u4ee5\u901a\u8fc7\u628aenableCmdQR\u8d4b\u503c\u4e3a\u7279\u5b9a\u7684\u500d\u6570\u8fdb\u884c\u8c03\u6574\u3002\u5982\u8bbe\u7f6e\u503c\u4e3a2 itchat . run ()","title":"\u516b\u3001\u96c6\u6210\u56fe\u7075API\u5236\u4f5c\u804a\u5929\u673a\u5668\u4eba"},{"location":"06-third-part-lib/wechat-robot-demo01/#_5","text":"\u5148\u662f\u76d1\u63a7\u4fe1\u606f\uff0c\u4fe1\u606f\u53c8\u5206\u4e3a\u597d\u53cb\u804a\u5929\u548c\u7fa4\u804a\uff0c\u6211\u4eec\u7f16\u5199\u4ee3\u7801\u6765\u76d1\u63a7\u4e0b\u6536\u5230\u7684\u6570\u636e\u662f\u600e\u4e48\u6837\u7684\uff1f import itchat from itchat.content import * # \u597d\u53cb\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isFriendChat = True ) def handle_friend_msg ( msg ): print ( \"\u597d\u53cb\u4fe1\u606f: \" , msg ) # \u7fa4\u804a\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isGroupChat = True ) def information ( msg ): print ( \"\u7fa4\u804a\u4fe1\u606f: \" , msg ) if __name__ == '__main__' : itchat . auto_login () itchat . run () \u7ed9\u673a\u5668\u4eba\u53d1\u9001\u4e00\u6761\u4fe1\u606f\uff0c\u8fd8\u6709\u5f80\u7fa4\u804a\u91cc\u53d1\u9001\u4e00\u6761\u4fe1\u606f\uff0c\u67e5\u770b\u6253\u5370\u7684\u4fe1\u606f\u5185\u5bb9\uff0c\u5148\u662f\u597d\u53cb\u4fe1\u606f \u597d\u53cb\u4fe1\u606f: {'MsgId': '5500935424291030814', 'FromUserName': '@8fd8b5b2bd0862ed5d0d573bc6c08362', 'ToUserName': '@913c3124d973db6ae25924bd0598b48a0028e0c2d01e18d8095cc6fd58db116b', 'MsgType': 1, 'Content': '123', 'Status': 3, 'ImgStatus': 1, 'CreateTime': 1533010285, 'VoiceLength': 0, 'PlayLength': 0, 'FileName': '', 'FileSize': '', 'MediaId': '', 'Url': '', 'AppMsgType': 0, 'StatusNotifyCode': 0, 'StatusNotifyUserName': '', 'RecommendInfo': {'UserName': '', 'NickName': '', 'QQNum': 0, 'Province': '', 'City': '', 'Content': '', 'Signature': '', 'Alias': '', 'Scene': 0, 'VerifyFlag': 0, 'AttrStatus': 0, 'Sex': 0, 'Ticket': '', 'OpCode': 0}, 'ForwardFlag': 0, 'AppInfo': {'AppID': '', 'Type': 0}, 'HasProductId': 0, 'Ticket': '', 'ImgHeight': 0, 'ImgWidth': 0, 'SubMsgType': 0, 'NewMsgId': 5500935424291030814, 'OriContent': '', 'EncryFileName': '', 'User': <User: {'MemberList': <ContactList: []>, 'Uin': 0, 'UserName': '@8fd8b5b2bd0862ed5d0d573bc6c08362', 'NickName': 'CoderPig', 'HeadImgUrl': '/cgi-bin/mmwebwx-bin/webwxgeticon?seq=625711027&username=@8fd8b5b2bd0862ed5d0d573bc6c08362&skey=@crypt_2d4a1972_26dc3be99a177455b82518b3ca6e6cc5', 'ContactFlag': 3, 'MemberCount': 0, 'RemarkName': '', 'HideInputBarFlag': 0, 'Sex': 1, 'Signature': '\u4e0d\u670d\u6c14\uff0c\u5c31\u7528\u884c\u52a8\u53bb\u8bc1\u660e\uff0c\u5c11\u8bf4\u591a\u505a...2018.7.29', 'VerifyFlag': 0, 'OwnerUin': 0, 'PYInitial': 'CODERPIG', 'PYQuanPin': 'CoderPig', 'RemarkPYInitial': '', 'RemarkPYQuanPin': '', 'StarFriend': 0, 'AppAccountFlag': 0, 'Statues': 0, 'AttrStatus': 33783847, 'Province': '\u5e7f\u4e1c', 'City': '\u6c5f\u95e8', 'Alias': '', 'SnsFlag': 17, 'UniFriend': 0, 'DisplayName': '', 'ChatRoomId': 0, 'KeyWord': 'zpj', 'EncryChatRoomId': '', 'IsOwner': 0}>, 'Type': 'Text', 'Text': '123'} 1 \u5206\u6790\u4e0b\u8981\u91c7\u96c6\u7684\u6570\u636e\uff0cMsgId\uff08\u5fae\u4fe1\u4fe1\u606f\u7684\u6807\u8bc6\uff0c\u7528\u6765\u4f5c\u4e3a\u952e\uff09\uff0cNickName\uff08\u53d1\u9001\u8005\u7684\u7528\u6237\u540d\uff09\uff0cContent\uff08\u4fe1\u606f\u5185\u5bb9\uff09\uff0cCreateTime\uff08\u521b\u5efa\u65f6\u95f4\uff09\uff0c Type\uff08\u4fe1\u606f\u7c7b\u578b\uff09\u3002\u63a5\u7740\u662f\u7fa4\u804a\u4fe1\u606f\uff1a \u7fa4\u804a\u4fe1\u606f: {'MsgId': '3177606925001563512', 'FromUserName': '@@16521484d35b2fe9c953282d98ec4f11456607924b3a7cc6d7fb671fe7e3081c', 'ToUserName': '@913c3124d973db6ae25924bd0598b48a0028e0c2d01e18d8095cc6fd58db116b', 'MsgType': 1, 'Content': '\u563f\u563f', 'Status': 3, 'ImgStatus': 1, 'CreateTime': 1533010298, 'VoiceLength': 0, 'PlayLength': 0, 'FileName': '', 'FileSize': '', 'MediaId': '', 'Url': '', 'AppMsgType': 0, 'StatusNotifyCode': 0, 'StatusNotifyUserName': '', 'RecommendInfo': {'UserName': '', 'NickName': '', 'QQNum': 0, 'Province': '', 'City': '', 'Content': '', 'Signature': '', 'Alias': '', 'Scene': 0, 'VerifyFlag': 0, 'AttrStatus': 0, 'Sex': 0, 'Ticket': '', 'OpCode': 0}, 'ForwardFlag': 0, 'AppInfo': {'AppID': '', 'Type': 0}, 'HasProductId': 0, 'Ticket': '', 'ImgHeight': 0, 'ImgWidth': 0, 'SubMsgType': 0, 'NewMsgId': 3177606925001563512, 'OriContent': '', 'EncryFileName': '', 'ActualNickName': '\u6613\u2642\u5efa\u2642\u8054', 'IsAt': False, 'ActualUserName': '@8fd8b5b2bd0862ed5d0d573bc6c08362', 'User': \u540c\u6837\u5206\u6790\u4e0b\u8981\u91c7\u96c6\u7684\u6570\u636e\uff0cMsgId\uff08\u5fae\u4fe1\u4fe1\u606f\u7684\u6807\u8bc6\uff09\uff0cActualNickName\uff08\u53d1\u9001\u8005\u7fa4\u540d\u79f0\uff09\uff0cContent\uff08\u4fe1\u606f\u5185\u5bb9\uff09\uff0cCreateTime\uff08\u521b\u5efa\u65f6\u95f4\uff09\uff0c Type\uff08\u4fe1\u606f\u7c7b\u578b\uff09\u3002\u6539\u4e0b\u6211\u4eec\u7684\u7a0b\u5e8f\uff0c\u628a\u8fd9\u4e9b\u90fd\u63d0\u53d6\u6253\u5370\u51fa\u6765\u3002 import itchat from itchat.content import * # \u597d\u53cb\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isFriendChat = True ) def handle_friend_msg ( msg ): msg_id = msg [ 'MsgId' ] msg_from_user = msg [ 'User' ][ 'NickName' ] msg_content = msg [ 'Content' ] msg_create_time = msg [ 'CreateTime' ] msg_type = msg [ 'Type' ] print ( \"\u6536\u5230\u4fe1\u606f: \" , msg_id , msg_from_user , msg_content , msg_create_time , msg_type ) # \u7fa4\u804a\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isGroupChat = True ) def information ( msg ): msg_id = msg [ 'MsgId' ] msg_from_user = msg [ 'ActualNickName' ] msg_content = msg [ 'Content' ] msg_create_time = msg [ 'CreateTime' ] msg_type = msg [ 'Type' ] print ( \"\u7fa4\u804a\u4fe1\u606f: \" , msg_id , msg_from_user , msg_content , msg_create_time , msg_type ) if __name__ == '__main__' : itchat . auto_login () itchat . run () \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u7fa4\u804a\u4fe1\u606f: 2254622820807367335 \u80e1\u5c0f\u97ec \u5bf9\u624b\u516c\u53f8 1533023277 Text \u7fa4\u804a\u4fe1\u606f: 1765614482944449471 xia_ang \u8fd8\u6709\u81ea\u5e72\u4e94 1533023285 Text \u597d\u53cb\u4fe1\u606f: 615083621872361432 CoderPig \u54c8\u54c8 1533023293 Text \u597d\u53cb\u4fe1\u606f: 7292909308782687092 CoderPig \u4f60\u597d\u54e6 1533023302 Text","title":"\u4e5d\u3001\u76d1\u63a7\u63a5\u6536\u5230\u7684\u6570\u636e"},{"location":"06-third-part-lib/wechat-robot-demo01/#_6","text":"\u55ef\uff0c\u4fe1\u606f\u63d0\u53d6\u6210\u529f\uff0c\u63a5\u4e0b\u6765\u8981\u9a8c\u8bc1\u7684\u662f\u4e0d\u540c\u7684\u4fe1\u606f\u7c7b\u578b\u548c\u5bf9\u5e94\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u6587\u5b57\uff0c\u56fe\u7247(\u8868\u60c5)\uff0c\u97f3\u9891\uff0c\u89c6\u9891\uff0c\u6587\u4ef6\u4e94\u79cd\uff0c\u540e\u9762\u56db\u79cd\u90fd\u9700\u8981\u4e0b\u8f7d\u5230\u672c\u5730\uff0citchat\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0b\u8f7d\u6587\u4ef6\u7684\u65b9\u6cd5msg\u2019Text\u2019\uff0c\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u5373\u53ef\u5b8c\u6210\u6587\u4ef6\u4e0b\u8f7d\uff0c\u4fee\u6539\u540e\u7684\u4ee3\u7801\u5982\u4e0b\uff1a import itchat from itchat.content import * import os import time # \u6587\u4ef6\u4e34\u65f6\u5b58\u50a8\u9875 rec_tmp_dir = os . path . join ( os . getcwd (), 'tmp/' ) # \u5b58\u50a8\u6570\u636e\u7684\u5b57\u5178 rec_msg_dict = {} # \u597d\u53cb\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isFriendChat = True ) def handle_friend_msg ( msg ): msg_id = msg [ 'MsgId' ] msg_from_user = msg [ 'User' ][ 'NickName' ] msg_content = '' # \u6536\u5230\u4fe1\u606f\u7684\u65f6\u95f4 msg_time_rec = time . strftime ( \"%Y-%m- %d %H:%M%S\" , time . localtime ()) msg_create_time = msg [ 'CreateTime' ] msg_type = msg [ 'Type' ] if msg [ 'Type' ] == 'Text' : msg_content = msg [ 'Content' ] elif msg [ 'Type' ] == 'Picture' \\ or msg [ 'Type' ] == 'Recording' \\ or msg [ 'Type' ] == 'Video' \\ or msg [ 'Type' ] == 'Attachment' : msg_content = r \"\" + msg [ 'FileName' ] msg [ 'Text' ]( rec_tmp_dir + msg [ 'FileName' ]) rec_msg_dict . update ({ msg_id : { 'msg_from_user' : msg_from_user , 'msg_time_rec' : msg_time_rec , 'msg_create_time' : msg_create_time , 'msg_type' : msg_type , 'msg_content' : msg_content } }) print ( msg ) # \u7fa4\u804a\u4fe1\u606f\u76d1\u542c @itchat . msg_register ([ TEXT , PICTURE , RECORDING , ATTACHMENT , VIDEO ], isGroupChat = True ) def information ( msg ): msg_id = msg [ 'MsgId' ] msg_from_user = msg [ 'ActualNickName' ] msg_content = '' # \u6536\u5230\u4fe1\u606f\u7684\u65f6\u95f4 msg_time_rec = time . strftime ( \"%Y-%m- %d %H:%M%S\" , time . localtime ()) msg_create_time = msg [ 'CreateTime' ] msg_type = msg [ 'Type' ] if msg [ 'Type' ] == 'Text' : msg_content = msg [ 'Content' ] elif msg [ 'Type' ] == 'Picture' \\ or msg [ 'Type' ] == 'Recording' \\ or msg [ 'Type' ] == 'Video' \\ or msg [ 'Type' ] == 'Attachment' : msg_content = r \"\" + msg [ 'FileName' ] msg [ 'Text' ]( rec_tmp_dir + msg [ 'FileName' ]) rec_msg_dict . update ({ msg_id : { 'msg_from_user' : msg_from_user , 'msg_time_rec' : msg_time_rec , 'msg_create_time' : msg_create_time , 'msg_type' : msg_type , 'msg_content' : msg_content } }) print ( msg ) if __name__ == '__main__' : if not os . path . exists ( rec_tmp_dir ): os . mkdir ( rec_tmp_dir ) itchat . auto_login () itchat . run ()","title":"\u5341\u3001\u9a8c\u8bc1\u4e0d\u540c\u4fe1\u606f\u7c7b\u578b\u548c\u5bf9\u5e94\u5904\u7406\u65b9\u5f0f"},{"location":"06-third-part-lib/wechat-robot-demo01/#_7","text":"\u63a5\u7740\u5230\u64a4\u56de\u4fe1\u606f\u7684\u76d1\u63a7\uff0c\u64a4\u56de\u7684\u4fe1\u606f\u7c7b\u578b\u662fNOTE\uff0c\u6211\u4eec\u76d1\u542c\u4e0b\u770b\u770b\uff0c\u770b\u770b\u64a4\u56de\u7684\u4fe1\u606f\u5177\u4f53\u5185\u5bb9\u3002 {'MsgId': '7399110162640182490', 'FromUserName': '@9c1a8bf4e28771a6b3ab635991dea2a1', 'ToUserName': '@49d1d90b90371099297a08da1009f3cdd042f21194239ef47b60e8f0b52e4553', 'MsgType': 10002, 'Content': '<sysmsg type=\"revokemsg\"><revokemsg><session>zpj779878443</session><oldmsgid>1625723544</oldmsgid><msgid>3154925139554625499</msgid><replacemsg><![CDATA[\"CoderPig\" \u64a4\u56de\u4e86\u4e00\u6761\u6d88\u606f]]></replacemsg></revokemsg></sysmsg>', 'Status': 4, 'ImgStatus': 1, 'CreateTime': 1533103679, 'VoiceLength': 0, 'PlayLength': 0, 'FileName': '', 'FileSize': '', 'MediaId': '', 'Url': '', 'AppMsgType': 0, 'StatusNotifyCode': 0, 'StatusNotifyUserName': '', 'RecommendInfo': {'UserName': '', 'NickName': '', 'QQNum': 0, 'Province': '', 'City': '', 'Content': '', 'Signature': '', 'Alias': '', 'Scene': 0, 'VerifyFlag': 0, 'AttrStatus': 0, 'Sex': 0, 'Ticket': '', 'OpCode': 0}, 'ForwardFlag': 0, 'AppInfo': {'AppID': '', 'Type': 0}, 'HasProductId': 0, 'Ticket': '', 'ImgHeight': 0, 'ImgWidth': 0, 'SubMsgType': 0, 'NewMsgId': 7399110162640182490, 'OriContent': '', 'EncryFileName': '', 'User': <User: {'MemberList': <ContactList: []>, 'Uin': 0, 'UserName': '@9c1a8bf4e28771a6b3ab635991dea2a1', 'NickName': 'CoderPig', 'HeadImgUrl': '/cgi-bin/mmwebwx-bin/webwxgeticon?seq=625711027&username=@9c1a8bf4e28771a6b3ab635991dea2a1&skey=@crypt_2d4a1972_e0963a9b961045c2e06293043f1c98a8', 'ContactFlag': 3, 'MemberCount': 0, 'RemarkName': '', 'HideInputBarFlag': 0, 'Sex': 1, 'Signature': '\u4e0d\u670d\u6c14\uff0c\u5c31\u7528\u884c\u52a8\u53bb\u8bc1\u660e\uff0c\u5c11\u8bf4\u591a\u505a...2018.7.29', 'VerifyFlag': 0, 'OwnerUin': 0, 'PYInitial': 'CODERPIG', 'PYQuanPin': 'CoderPig', 'RemarkPYInitial': '', 'RemarkPYQuanPin': '', 'StarFriend': 0, 'AppAccountFlag': 0, 'Statues': 0, 'AttrStatus': 33783847, 'Province': '\u5e7f\u4e1c', 'City': '\u6c5f\u95e8', 'Alias': '', 'SnsFlag': 17, 'UniFriend': 0, 'DisplayName': '', 'ChatRoomId': 0, 'KeyWord': 'zpj', 'EncryChatRoomId': '', 'IsOwner': 0}>, 'Type': 'Note', 'Text': '\"CoderPig\" \u64a4\u56de\u4e86\u4e00\u6761\u6d88\u606f'} 1 \u9996\u5148\u662f\u5224\u65ad\u7cfb\u7edf\u4fe1\u606f\u662f\u9ed8\u8ba4\u64a4\u56de\u4e86\u4e00\u6761\u4fe1\u606f\uff0c\u5185\u5bb9\u662f\uff1a \u663e\u793a\u5224\u65ad\u662f\u5426\u662f\u64a4\u56de\u7684\u4fe1\u606f\uff0c\u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\u8fd9\u6837\u7684\u4e32\u5b57\u7b26\u4e32\uff1a<![CDATA[\"CoderPig\" \u64a4\u56de\u4e86\u4e00\u6761\u6d88\u606f]]>\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5199\u4e2a\u6b63\u5219\u5224\u65ad\u662f\u5426\u6709\u8fd9\u6837\u7684\u5185\u5bb9\uff0c\u6709\u8bf4\u660e\u662f\u64a4\u56de\u7684\u4fe1\u606f\u63d0\u9192\uff0c\u63a5\u7740\u627e\u64a4\u56de\u7684\u4fe1\u606fMsgId\uff0c\u5728\u4e0a\u9762\u8fd9\u4e32\u4fe1\u606f\u7684\u524d\u9762\u5c31\u662f\u4e86\uff1a3154925139554625499\uff0c\u540c\u6837\u7528\u6b63\u5219\u63d0\u53d6\u3002\u63a5\u7740\u8981\u505a\u7684\u5c31\u662f\u62ff\u7740MsgId\u53bb\u67e5\u5b58\u6d88\u606f\u7684\u5b57\u5178\uff0c\u6839\u636e\u4fe1\u606f\u7c7b\u578b\u62fc\u63a5\u6587\u5b57\u6216\u6587\u5b57\u52a0\u6587\u4ef6\uff0c\u7136\u540e\u53d1\u9001\u7ed9\u6587\u4ef6\u4f20\u8f93\u52a9\u624b\u3002\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a\uff01 @itchat . msg_register ([ NOTE ], isFriendChat = True , isGroupChat = True ) def revoke_msg ( msg ): if revoke_msg_compile . search ( msg [ 'Content' ]) is not None : old_msg_id = extract_msgid_compile . search ( msg [ 'Content' ]) . group ( 1 ) old_msg = rec_msg_dict . get ( old_msg_id , {}) # \u5148\u53d1\u9001\u4e00\u6761\u6587\u5b57\u4fe1\u606f itchat . send_msg ( str ( old_msg . get ( 'msg_from_user' ) + \"\u64a4\u56de\u4e86\u4e00\u6761\u4fe1\u606f\uff1a\" + old_msg . get ( 'msg_content' )), toUserName = \"filehelper\" ) # \u5224\u65ad\u6587msg_content\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u8bf4\u660e\u53ef\u80fd\u662f if os . path . exists ( os . path . join ( rec_tmp_dir , old_msg . get ( 'msg_content' ))): if old_msg . get ( 'msg_type' ) == 'Picture' : itchat . send_image ( os . path . join ( rec_tmp_dir , old_msg . get ( 'msg_content' )), toUserName = \"filehelper\" ) elif old_msg . get ( 'msg_type' ) == 'Video' : itchat . send_video ( os . path . join ( rec_tmp_dir , old_msg . get ( 'msg_content' )), toUserName = \"filehelper\" ) elif old_msg . get ( 'msg_type' ) == 'Attachment' \\ or old_msg . get ( 'msg_type' ) == 'Recording' : itchat . send_file ( os . path . join ( rec_tmp_dir , old_msg . get ( 'msg_content' )), toUserName = \"filehelper\" )","title":"\u5341\u4e00\u3001\u76d1\u63a7\u64a4\u56de\u4fe1\u606f\u548c\u6570\u636e\u63d0\u53d6"},{"location":"06-third-part-lib/wechat-robot-demo01/#_8","text":"\u53e6\u5916\uff0c\u6211\u4eec\u7684\u4fe1\u606f\u90fd\u662f\u7528\u4e00\u4e2a\u5b57\u5178\u5b58\u7740\u7684\uff0c\u65f6\u95f4\u957f\u4e86\u7684\u8bdd\uff0c\u6570\u636e\u4f1a\u5f88\u591a\uff0c\u800c\u4e14\u56fe\u7247\u6587\u4ef6\u8fd9\u4e9b\u4f1a\u8d8a\u6512\u8d8a\u591a\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff0c\u6bd4\u5982\u6bcf\u9694\u4e94\u5206\u949f\u6e05\u7406\u4e00\u4e0b\u521b\u5efa\u65f6\u957f\u8d85\u8fc72\u5206\u949f\u7684\u4fe1\u606f\u548c\u5bf9\u5e94\u7684\u6587\u4ef6\u3002\u76f8\u5173\u4ee3\u7801\u5982\u4e0b\uff1a # \u6bcf\u9694\u4e94\u79cd\u5206\u949f\u6267\u884c\u4e00\u6b21\u6e05\u7406\u4efb\u52a1 def clear_cache (): # \u5f53\u524d\u65f6\u95f4 cur_time = time . time () # \u904d\u5386\u5b57\u5178\uff0c\u5982\u679c\u6709\u521b\u5efa\u65f6\u95f4\u8d85\u8fc72\u5206\u949f(120s)\u7684\u8bb0\u5f55\uff0c\u5220\u9664\uff0c\u975e\u6587\u672c\u7684\u8bdd\uff0c\u8fde\u6587\u4ef6\u4e5f\u5220\u9664 for key in list ( rec_msg_dict . keys ()): if int ( cur_time ) - int ( rec_msg_dict . get ( key ) . get ( 'msg_create_time' )) > 120 : if not rec_msg_dict . get ( key ) . get ( 'msg_type' ) == 'Text' : file_path = os . path . join ( rec_tmp_dir , rec_msg_dict . get ( key ) . get ( 'msg_content' )) print ( file_path ) if os . path . exists ( file_path ): os . remove ( file_path ) rec_msg_dict . pop ( key ) # \u5f00\u59cb\u8f6e\u8be2\u4efb\u52a1 def start_schedule (): sched . add_job ( clear_cache , 'interval' , minutes = 2 ) sched . start () # \u9000\u51fa\u505c\u6b62\u6240\u6709\u4efb\u52a1\u5e76\u6e05\u7a7a\u7f13\u5b58\u6587\u4ef6\u5939 def after_logout (): sched . shutdown () shutil . rmtree ( rec_tmp_dir ) if __name__ == '__main__' : sched = BlockingScheduler () if not os . path . exists ( rec_tmp_dir ): os . mkdir ( rec_tmp_dir ) itchat . auto_login ( exitCallback = after_logout ) itchat . run ( blockThread = False ) start_schedule () \u611f\u8c22\uff1a https://blog.csdn.net/fxbin123/article/details/80428216 https://www.kancloud.cn/turing/www-tuling123-com/718227 https://www.cnblogs.com/sunshine-long/p/8522175.html https://www.shiyanlou.com/courses/684/labs/2237/document/#%E4%B8%80%E3%80%81%E8%AF%BE%E7%A8%8B%E4%BB%8B%E7%BB%8D https://github.com/littlecodersh/ItChat https://blog.csdn.net/coder_pig/article/details/81357810#commentsedit","title":"\u5341\u4e8c\u3001\u5b9a\u65f6\u6e05\u7406\u7f13\u5b58"},{"location":"06-third-part-lib/wechat-robot-demo01/#24","text":"\u4ee5\u4e0a\u90fd\u662f\u5728\u672c\u5730\u8fdb\u884c\u6d4b\u8bd5\uff0c\u7535\u8111\u4e0d\u53ef\u80fd24\u5c0f\u65f6\u5f00\u7740\uff0c\u6d6a\u8d39\u7535\u6d6a\u8d39\u94b1\u3002\u6545\u8bb2\u672c\u811a\u672c\u4e0a\u4e91\u3002\u5373\u4e0a\u4e91\u670d\u52a1\u5668\u3002 1\u3001\u767e\u5ea6\u4e91\u670d\u52a1\u5668 \u6211\u8d2d\u4e70\u7684\u662f\u767e\u5ea6\u4e91\u670d\u52a1\u5668\uff0c\u91c7\u7528\u65b0\u6ce8\u518c\u7684\u8d26\u53f7\uff0c\u6709\u6298\u6263\u6d3b\u52a8\uff0c\u4e09\u4e2a\u6708\u4e94\u5341\u51e0\uff0c\u914d\u7f6e1\u68381G\uff0c\u5df2\u7ecf\u5b8c\u5168\u591f\u7528\uff0c\u7cfb\u7edf\u662fCentOs7\uff0c\u91cc\u9762\u81ea\u5e26\u7684python\u7248\u672c\u662f2.7\uff08\u5982\u975e\u7279\u6b8a\u9700\u8981\uff0c\u53ef\u4ee5\u6682\u65f6\u4e0d\u7528\u4e0b\u8f7d\u6700\u65b0\u7248\u7684python\uff0c\u6211\u5c31\u662f\u56e0\u4e3a\u60f3\u4e0b\u8f7d\u6700\u65b0\u7248\u672c\u7684python\uff0c\u7ed3\u679c\u641e\u6765\u641e\u53bb\uff0c\u628a\u670d\u52a1\u5668\u641e\u574f\u4e86\uff0c\u6253\u7535\u8bdd\u7ed9\u4e86\u767e\u5ea6\u4e91\u5ba2\u670d\uff0c\u5de5\u7a0b\u5e08\u5f88\u5feb\u7ed9\u6211\u89e3\u51b3\u4e86\uff0c\u6211\u91cd\u65b0\u5b89\u88c5\u4e86\u4e0b\u7cfb\u7edf\u540e\u51b3\u5b9a\u7528\u7cfb\u7edf\u81ea\u5e26\u7684python\u7248\u672c\uff0c\u51e0\u6b65\u8f7b\u677e\u641e\u5b9a\uff09\u3002 2\u3001\u670d\u52a1\u5668\u9ed8\u8ba4\u662f\u6ca1\u6709\u5b89\u88c5pip\u7684\uff0c\u6240\u4ee5\u5148\u8981\u5b89\u88c5pip $ wget https://bootstrap.pypa.io/get-pip.py $ python get-pip.py $ pip -V \u3000\u3000 #\u67e5\u770bpip\u7248\u672c \u63a5\u4e0b\u6765\u5c31\u53ef\u4ee5\u968f\u4fbfpip\u5b89\u88c5\u4e1c\u897f\u4e86 \u6309\u7167\u4e0a\u9762\u7684\u6b65\u9aa4\u5b89\u88c5itchat\uff0c\u767b\u5f55\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u6dfb\u52a0enableCmdQR=True\u53c2\u6570\uff0c\u8ba9\u4e8c\u7ef4\u7801\u663e\u793a\u5230\u547d\u4ee4\u884c\u4e0a\uff0c\u53e6\u5916\u90e8\u5206\u7cfb\u7edf\u53ef\u80fd\u5b57\u7b26\u5bbd\u5ea6\u6709\u51fa\u5165\uff0c\u53ef\u4ee5\u901a\u8fc7\u628aenableCmdQR\u8d4b\u503c\u4e3a\u7279\u5b9a\u7684\u500d\u6570\u8fdb\u884c\u8c03\u6574\uff08\u6211\u8bbe\u7f6e\u7684\u662f2\uff09\u3002","title":"\u5341\u4e09\u3001\u90e8\u7f72\u5230\u4e91\u670d\u52a1\u5668\u5b9e\u73b024\u5c0f\u65f6\u5728\u7ebf\u966a\u804a"},{"location":"06-third-part-lib/%E5%B8%B8%E7%94%A8%E7%9A%84python%E5%BA%93/","text":"\u5e38\u7528\u7684python\u5e93 \u00b6 \u7b80\u5355\u8bb0\u5f55\u4e00\u4e0b\u5e38\u7528\u7684Python\u5e93\uff0c\u6587\u6863\u4e0d\u65ad\u66f4\u65b0\u4e2d\u3002 \u6211\u81ea\u5df1\u6709\u5370\u8c61\u7684\u5de5\u5177\u548c\u5e93 beaufifulSoup \u628aHTML\u5b57\u7b26\u4e32\u8f6c\u6362\u6210DOM\u8282\u70b9\u7684\u5de5\u5177\uff0c\u4e3b\u8981\u7528\u4e8e\u722c\u866b Turtle \u7b80\u5355\u7ed8\u56fe django \u590d\u6742\u5b8c\u6574\u7684web\u6846\u67b6(django-webpack_loader\u7b49\u4e00\u7cfb\u5217\u5de5\u5177) flask \u8f7b\u91cf\u7ea7web\u6846\u67b6 pandas \u6570\u636e\u7edf\u8ba1\u5206\u6790 python-mysql \u6570\u636e\u5e93\u8fde\u63a5\u5de5\u5177\uff08mysqlclient\uff09 Qrcode \u4e8c\u7ef4\u7801\u5236\u4f5c\u5de5\u5177\uff0cPython \u5199\u7684\u751f\u6210\u52a8\u6001\u3001\u5f69\u8272\u3001\u5404\u5f0f\u5404\u6837\u7684\u4e8c\u7ef4\u7801\uff0c\u8be6\u7ec6\u7684 \u4e2d\u6587\u6587\u6863 \u3002 fabric \u547d\u4ee4\u884c\u811a\u672c\u5de5\u5177\uff0c\u7528\u4e8e\u66f4\u65b0 transifix transifex-client \u7ffb\u8bd1\u5de5\u5177 beautifulsoup4 4.11.2 bs4 0.0.1 certifi 2022.12.7 charset-normalizer 3.0.1 idna 3.4 pip 22.3.1 requests 2.28.2 setuptools 65.6.3 soupsieve 2.3.2.post1 urllib3 1.26.14 wheel 0.38.4 \u6784\u5efa\u5de5\u5177 virtual-env \u865a\u62df\u73af\u5883 pip \u5305\u7ba1\u7406\u5de5\u5177 \u5176\u4ed6\u5e38\u7528\u5de5\u5177 \u00b6 1. gopup \uff1a\u91c7\u96c6\u5404\u79cd\u6743\u5a01\u516c\u5f00\u6570\u636e\u7684 Python \u5e93\u3002\u793a\u4f8b\u4ee3\u7801\uff1a # \u5b89\u88c5\uff1apip isntall gopup import gopup as gp covid_baidu_df = gp . covid_baidu ( indicator = \"\u70ed\u641c\u8c23\u8a00\u7c89\u788e\" ) print ( covid_baidu_df ) 2. streamlit \uff1a\u80fd\u591f\u5feb\u901f\u5730\u628a\u6570\u636e\u5236\u4f5c\u6210\u53ef\u89c6\u5316\u3001\u4ea4\u4e92\u9875\u9762\u7684 Python \u6846\u67b6\u3002\u5206\u5206\u949f\u8ba9\u4f60\u7684\u6570\u636e\u53d8\u6210\u56fe\u8868\uff0c\u5e76\u4e14\u8be5\u9879\u76ee\u63d0\u4f9b\u514d\u8d39\u7684\u5171\u4eab\u670d\u52a1\u5e73\u53f0\u5e2e\u4f60\u7684\u9879\u76ee\u4e0a\u7ebf\uff0c\u65b9\u4fbf\u6570\u636e\u7684\u5171\u4eab\u548c\u8ba8\u8bba\u3002 3. playwright-python \uff1a\u5fae\u8f6f\u5f00\u6e90\u7684\u6d4f\u89c8\u5668\u81ea\u52a8\u5316\u5de5\u5177\uff0c\u53ef\u4ee5\u7528 Python \u8bed\u8a00\u64cd\u4f5c\u6d4f\u89c8\u5668\u5566\u3002\u652f\u6301 Linux\u3001macOS\u3001Windows \u7cfb\u7edf\u4e0b\u7684 Chromium\u3001Firefox \u548c WebKit \u6d4f\u89c8\u5668\u3002 python -m playwright codegen wikipedia.org 4. wagtail \uff1a\u76ee\u524d\u6700\u5f3a\u5927\u7684\u5f00\u6e90 Django CMS\uff08\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff09\u4e4b\u4e00\u3002\u9996\u5148\u8be5\u9879\u76ee\u66f4\u65b0\u3001\u8fed\u4ee3\u6d3b\u8dc3\uff0c\u5176\u6b21\u9879\u76ee\u9996\u9875\u63d0\u5230\u7684\u529f\u80fd\u90fd\u662f\u514d\u8d39\u7684\uff0c\u6ca1\u6709\u4ed8\u8d39\u89e3\u9501\u7684\u9a9a\u64cd\u4f5c\u3002wagtail \u4e13\u6ce8\u4e8e\u5185\u5bb9\u7ba1\u7406\uff0c\u4e0d\u675f\u7f1a\u524d\u7aef\u5b9e\u73b0\u3002\u6709\u8da3\u7684 StreamField \u6280\u672f\u8ba9\u4f60\u7684\u5185\u5bb9\u53d8\u5f97\u7075\u6d3b\u4e14\u4e0d\u5931\u7ed3\u6784\uff0c\u7adf\u7136\u8fd8\u652f\u6301 A/B \u6d4b\u8bd5\uff0c\u6700\u540e Google\u3001NASA \u4ed6\u4eec\u90fd\u5728\u7528\u8fd9\u4e2a\u9879\u76ee\u3002 5. practical-python \uff1a\u4e00\u4e2a\u975e\u5e38\u597d\u7684python\u5b66\u4e60\u8d44\u6e90\uff0cmd\u683c\u5f0f\uff0c\u9644\u8d60\u8054\u7cfb\u3002 6. learn-python3 \uff1a\u4e00\u4efd Python3 \u7684\u6559\u7a0b\uff0c\u8bf7\u67e5\u6536\u3002\u8be5\u6559\u7a0b\u91c7\u7528 Jupyter notebooks \u5f62\u5f0f\uff0c\u4fbf\u4e8e\u8fd0\u884c\u548c\u9605\u8bfb\u3002\u5e76\u4e14\u8fd8\u5305\u542b\u4e86\u7ec3\u4e60\u9898\uff0c\u5bf9\u65b0\u624b\u53cb\u597d\u3002\u7f3a\u70b9\u7684\u8bdd\u5c31\u662f\u82f1\u6587\u7684\u6559\u7a0b\uff0c\u4f46\u662f\u6211\u90fd\u80fd\u770b\u61c2\u4f60\u80af\u5b9a\u4e5f\u53ef\u4ee5\u3002 7. fastapi \uff1a\u57fa\u4e8e Python 3.6+ \u7684\u9ad8\u6027\u80fd Web \u6846\u67b6\u3002\u201c\u4eba\u5982\u5176\u540d\u201d\u7528 FastAPI \u5199\u63a5\u53e3\u90a3\u53eb\u4e00\u4e2a\u5feb\u3001\u8c03\u8bd5\u65b9\u4fbf\uff0cPython \u5728\u8fdb\u6b65\u800c\u5b83\u57fa\u4e8e\u8fd9\u4e9b\u8fdb\u6b65\uff0c\u8ba9 Web \u5f00\u53d1\u53d8\u5f97\u66f4\u5feb\u3001\u66f4\u5f3a\u3002\u793a\u4f8b\u4ee3\u7801\uff1a from fastapi import FastAPI app = FastAPI () @app . get ( \"/\" ) async def read_root (): return { \"Hello\" : \"World\" } @app . get ( \"/items/ {item_id} \" ) async def read_item ( item_id : int , q : str = None ): return { \"item_id\" : item_id , \"q\" : q } # \u542f\u52a8\u547d\u4ee4\uff1auvicorn main:app --reload 8. gpustat \uff1a\u4e00\u4e2a\u65b9\u4fbf\u67e5\u8be2 GPU \u72b6\u6001\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u3002 9. akshare \uff1a\u4e00\u6b3e\u57fa\u4e8e Python \u7684\u5f00\u6e90\u91d1\u878d\u6570\u636e\u63a5\u53e3\u5e93\u3002\u63d0\u4f9b\u4e86\u80a1\u7968\u3001\u671f\u8d27\u3001\u671f\u6743\u3001\u57fa\u91d1\u3001\u6570\u5b57\u8d27\u5e01\u7b49\u91d1\u878d\u4ea7\u54c1\u7684\u57fa\u672c\u6570\u636e\u3001\u5b9e\u65f6\u548c\u5386\u53f2\u884c\u60c5\u6570\u636e\u3001\u884d\u751f\u6570\u636e\uff0c\u5305\u542b\u6570\u636e\u91c7\u96c6\u3001\u6570\u636e\u6e05\u6d17\u3001\u5230\u6570\u636e\u843d\u5730\u7684\u4e00\u5957\u5f00\u6e90\u5de5\u5177\u3002\u6ee1\u8db3\u4e86\u91d1\u878d\u6570\u636e\u79d1\u5b66\u5bb6\u3001\u6570\u636e\u79d1\u5b66\u7231\u597d\u8005\u5728\u91d1\u878d\u6570\u636e\u83b7\u53d6\u65b9\u9762\u7684\u9700\u6c42\u3002\u793a\u4f8b\u4ee3\u7801\uff1a import akshare as ak bond_df = ak . bond_spot_deal () print ( bond_df ) \u503a\u5238\u7b80\u79f0 \u6210\u4ea4\u51c0\u4ef7 ( \u5143 ) \u6700\u65b0\u6536\u76ca\u7387 ( % ) \u6da8\u8dcc ( BP ) \u52a0\u6743\u6536\u76ca\u7387 ( % ) \u4ea4\u6613\u91cf ( \u4ebf ) 0 19 \u56fd\u5f0015 98.97 3.5750 1.00 3.5826 None 1 19 \u9644\u606f\u56fd\u503a03 99.82 2.7714 0.14 2.7772 None 2 19 \u9644\u606f\u56fd\u503a11 99.87 2.8000 0.25 2.7963 None 3 19 \u9644\u606f\u56fd\u503a04 100.82 2.9832 - 1.54 2.9747 None 4 15 \u9644\u606f\u56fd\u503a05 102.95 3.0359 - 1.41 3.0359 None 10. KeymouseGo \uff1aPython \u5b9e\u73b0\u7684\u7cbe\u7b80\u7eff\u8272\u7248\u6309\u952e\u7cbe\u7075\u3002\u8bb0\u5f55\u7528\u6237\u7684\u9f20\u6807\u3001\u952e\u76d8\u64cd\u4f5c\uff0c\u81ea\u52a8\u6267\u884c\u4e4b\u524d\u8bb0\u5f55\u7684\u64cd\u4f5c\uff0c\u53ef\u8bbe\u5b9a\u6267\u884c\u7684\u6b21\u6570\u3002\u5728\u8fdb\u884c\u67d0\u4e9b\u7b80\u5355\u3001\u5355\u8c03\u91cd\u590d\u7684\u64cd\u4f5c\u65f6\uff0c\u4f7f\u7528\u8be5\u8f6f\u4ef6\u53ef\u4ee5\u5341\u5206\u7701\u4e8b\u513f\u3002\u53ea\u9700\u8981\u5f55\u5236\u4e00\u904d\uff0c\u5269\u4e0b\u7684\u4ea4\u7ed9 KeymouseGo \u6765\u505a\u5c31\u53ef\u4ee5\u4e86\u3002 11. GeneralNewsExtractor \uff1a\u57fa\u4e8e\u300a\u57fa\u4e8e\u6587\u672c\u53ca\u7b26\u53f7\u5bc6\u5ea6\u7684\u7f51\u9875\u6b63\u6587\u63d0\u53d6\u65b9\u6cd5\u300b\u8bba\u6587\u7528 Python \u5b9e\u73b0\u7684\u6b63\u6587\u62bd\u53d6\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u63d0\u53d6 HTML \u4e2d\u6b63\u6587\u7684\u5185\u5bb9\u3001\u4f5c\u8005\u3001\u6807\u9898\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7ed3\u5408\u722c\u866b\u4f7f\u7528\u3002\u9996\u5148\u7528\u722c\u866b\u83b7\u53d6\u7f51\u9875\u5168\u90e8\u5185\u5bb9\uff0c\u7136\u540e\u4f7f\u7528\u6536\u53d6\u5668\u83b7\u53d6\u6b63\u6587\u5185\u5bb9\uff0c\u8fc7\u6ee4\u566a\u97f3\u3002 12. Jtyoui \uff1a\u5e2e\u52a9\u5b66\u4e60 Python \u7684\u4ee3\u7801\u96c6\u5408\u5305\u3002\u5305\u542b 20 \u591a\u4e2a\u7b80\u5355\u6613\u7528\u7684\u5e38\u7528\u65b9\u6cd5\u548c\u6570\u5b66\u51fd\u6570\uff0c\u5927\u591a\u6570\u65b9\u6cd5\u5728 100 \u884c\u5de6\u53f3\uff0c\u800c\u4e14\u6bcf\u4e00\u4e2a\u7c7b\u7684\u4f7f\u7528\u90fd\u6709\u5bf9\u5e94\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002\u975e\u5e38\u65b9\u4fbf\u521d\u5b66\u8005\u5b66\u4e60\uff0c\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u6709\u7ecf\u9a8c\u7684\u5f00\u53d1\u8005\u5feb\u901f\u5b9e\u73b0\u4e00\u4e9b\u529f\u80fd\u3002\u793a\u4f8b\u4ee3\u7801\uff1a # \u8fd9\u662f\u4e00\u4e2a\u9633\u5386\u8f6c\u5316\u519c\u5386\u7684\u7a0b\u5e8f from jtyoui.plunar import SC if __name__ == '__main__' : lun = SC ( year = 2018 , month = 1 , day = 2 ) #\u9633\u5386\u8f6c\u519c\u5386 print ( lun . y ) # \u519c\u5386\u7684\u5e74,\u4e2d\u6587\u5b57\u7b26 \u4e8c\u96f6\u4e00\u4e5d print ( lun . year ) # \u519c\u5386\u7684\u5e74\uff0c\u963f\u62c9\u4f2f\u6570\u5b57 2019 ... print ( lun ) # \u4e8c\u96f6\u4e00\u4e5d\u5e74 \u4e03\u6708 \u5341\u56db \u661f\u671f\u56db \u65e0 13. one-python-craftsman \uff1a\u5982\u4f55\u7f16\u5199\u4f18\u79c0\u7684 Python \u4ee3\u7801\uff1f\u4f18\u79c0\u7684\u4ee3\u7801\u5c31\u662f\u7531\u65e0\u6570\u4f18\u79c0\u7684\u7ec6\u8282\u7ec4\u6210\u7684\u3002\u8fd9\u4e2a\u9879\u76ee\u5c31\u662f\u8be6\u7ec6\u8bb2\u89e3 Python \u90a3\u4e9b\u7ec6\u8282\uff0c\u6bd4\u5982\u4f55\u65f6\u4f7f\u7528\u5f02\u5e38\u3001\u600e\u4e48\u7ed9\u53d8\u91cf\u8d77\u540d\u3001\u600e\u4e48\u7f16\u5199\u6761\u4ef6\u5206\u652f\u7b49\u7b49\uff0c\u770b\u4f3c\u7b80\u5355\u7684\u53ef\u80fd\u4e5f\u662f\u6700\u96be\u7684\u5730\u65b9\u3002\u672c\u9879\u76ee\u4f5c\u8005\u662f\u8d44\u6df1\u7684 Python \u5f00\u53d1\uff0c\u5185\u5bb9\u8d34\u8fd1\u5b9e\u9645\u5de5\u4f5c\u548c\u4e1a\u52a1\u573a\u666f\uff0c\u76f8\u4fe1\u8ba4\u771f\u5b66\u4e60\u5b8c\u672c\u9879\u76ee\uff0c\u4f60\u7684\u7f16\u7801\u80fd\u529b\u4e00\u5b9a\u4f1a\u5f97\u5230\u5f88\u5927\u63d0\u5347\uff0c\u5e2e\u4f60\u5728 Python \u7684\u5f00\u53d1\u9053\u8def\u4e0a\u8d70\u7684\u66f4\u9ad8\u3001\u66f4\u8fdc\u3002 14. you-get \uff1a\u4e00\u4e2a Python \u5199\u7684\u89c6\u9891\u4e0b\u8f7d\u5de5\u5177\uff0c\u4e0b\u8f7d\u5de5\u5177\u5343\u4e07\u4e2a\u4f46\u6211\u4ec5\u4ec5\u63a8\u8350\u4e86\u8fd9\u4e2a\u5de5\u5177\u3002\u662f\u56e0\u4e3a\u6b63\u5e38\u60c5\u51b5\u4e0b\u8f7d\u4e0d\u4e86\u89c6\u9891\u7684\u7f51\u7ad9\uff0c\u7528\u5b83\u4f60\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u4e0b\u8f7d\u4e0b\u6765\u3002\u5269\u4e0b\u7684\u8981\u81ea\u5df1\u53bb\u770b\u4ecb\u7ecd\uff0c\u4e0d\u80fd\u518d\u591a\u8bf4\u4e86 ( env ) \u279c ~ you - get 'https://v.ifeng.com/c/7msWmwppMPC' Site : ifeng . com Title : \u5b8c\u6574\u7248\u7b2c\u4e94\u671f \uff1a \u9648\u6653\u537f \u4e2d\u56fd\u6709\u4fe9\u884c\u5f53\u95e8\u69db\u6781\u4f4e \u2014\u2014 \u7f8e\u98df\u5708\u548c\u6444\u5f71\u5708 Type : MPEG - 4 video ( video / mp4 ) Size : 0.01 MiB ( 8578 Bytes ) Downloading \u5b8c\u6574\u7248\u7b2c\u4e94\u671f \uff1a \u9648\u6653\u537f \u4e2d\u56fd\u6709\u4fe9\u884c\u5f53\u95e8\u69db\u6781\u4f4e \u2014\u2014 \u7f8e\u98df\u5708\u548c\u6444\u5f71\u5708 . mp4 100 % ( 0.0 / 0.0 MB ) \u251c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2524 [ 1 / 1 ] 71 kB / s 15. ds-cheatsheets \uff1aPython \u5728\u6570\u636e\u79d1\u5b66\u65b9\u9762\u4f7f\u7528\u5e93\u7684\u901f\u67e5\u8868\uff0c\u5305\u542b\u4e86 Pandas\u3001Jupyter\u3001SQL\u3001Dask \u7b49\u3002\u867d\u7136\u90fd\u662f\u4e9b\u57fa\u672c\u7684 API \u8c03\u7528\uff0c\u4f46\u662f\u7528\u6765\u5907\u5fd8\u548c\u901f\u67e5\u8db3\u4ee5 16. awesome-python-login-model \uff1a\u8be5\u9879\u76ee\u6536\u96c6\u4e86\u5404\u5927\u7f51\u7ad9\u767b\u9646\u65b9\u5f0f\u548c\u90e8\u5206\u7f51\u7ad9\u7684\u722c\u866b\u7a0b\u5e8f\u3002\u767b\u9646\u65b9\u5f0f\u5b9e\u73b0\u5305\u542b selenium \u767b\u5f55\u3001\u901a\u8fc7\u6293\u5305\u76f4\u63a5\u6a21\u62df\u767b\u5f55\u7b49\u3002\u6709\u52a9\u4e8e\u65b0\u624b\u7814\u7a76\u3001\u7f16\u5199\u722c\u866b\u3002 17. click \uff1aPython \u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u7528\u4e8e\u5feb\u901f\u521b\u5efa\u547d\u4ee4\u884c\u3002\u652f\u6301\u88c5\u9970\u5668\u65b9\u5f0f\u8c03\u7528\u3001\u591a\u79cd\u53c2\u6570\u7c7b\u578b\u3001\u81ea\u52a8\u751f\u6210\u5e2e\u52a9\u4fe1\u606f\u7b49\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a import click @click . command () @click . option ( \"--count\" , default = 1 , help = \"Number of greetings.\" ) @click . option ( \"--name\" , prompt = \"Your name\" , help = \"The person to greet.\" ) def hello ( count , name ): \"\"\"Simple program that greets NAME for a total of COUNT times.\"\"\" for _ in range ( count ): click . echo ( \"Hello, %s !\" % name ) if __name__ == '__main__' : hello () # \u4e0b\u9762\u4e3a\u8fd0\u884c\u6548\u679c $ python hello . py -- count = 3 Your name : Click Hello , Click ! Hello , Click ! Hello , Click ! 18. awesome-python-applications \uff1a\uff08\u82f1\u6587\uff09\u4ecb\u7ecd Python \u6709\u8da3\u3001\u795e\u5947\u7684\u5f00\u6e90\u9879\u76ee\u3002\u76ee\u524d\u6db5\u76d6\u591a\u4e2a\u9886\u57df\u3001\u9879\u76ee\u4e30\u5bcc\u3002 19. loguru \uff1a\u4e00\u4e2a\u8ba9 Python \u8bb0\u5f55\u65e5\u5fd7\u53d8\u5f97\u7b80\u5355\u7684\u5e93\u3002 21. scylla \uff1a\u4e00\u6b3e\u9ad8\u8d28\u91cf\u7684\u514d\u8d39\u4ee3\u7406 IP \u6c60\u5de5\u5177\uff0c\u4ec5\u652f\u6301 Python 3.6\u3002 \u4e2d\u6587\u6587\u6863 \uff0c\u7279\u6027\u5982\u4e0b\uff1a\u81ea\u52a8\u5316\u7684\u4ee3\u7406 IP \u722c\u53d6\u4e0e\u9a8c\u8bc1\u3001\u6613\u7528\u7684 JSON API\u3001\u7b80\u5355\u4f46\u7f8e\u89c2\u7684 web \u7528\u6237\u754c\u9762\uff0c\u57fa\u4e8e TypeScript \u548c React\uff08\u4f8b\u5982\uff0c\u4ee3\u7406\u7684\u5730\u7406\u5206\u5e03\uff09\u6700\u5c11\u4ec5\u7528\u4e00\u884c\u4ee3\u7801\u5373\u53ef\u4e0e Scrapy \u548c requests \u8fdb\u884c\u96c6\u6210 22. Synonyms \uff1a\u4e2d\u6587\u8fd1\u4e49\u8bcd\u5de5\u5177\u5305\u3002\u652f\u6301\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u7684\u5f88\u591a\u4efb\u52a1\uff1a\u6587\u672c\u5bf9\u9f50\u3001\u63a8\u8350\u7b97\u6cd5\u3001\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u3001\u8bed\u4e49\u504f\u79fb\u3001\u5173\u952e\u5b57\u63d0\u53d6\u3001\u6982\u5ff5\u63d0\u53d6\u3001\u81ea\u52a8\u6458\u8981\u3001\u641c\u7d22\u5f15\u64ce\u7b49\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a import synonyms synonyms . seg ( \"\u80fd\u91cf\" ) 23. wtfpython \uff1a\u6709\u8da3\u3001\u4ee4\u4eba\u60ca\u8bb6\uff08\u5751\u7239\uff09\u3001\u9c9c\u4e3a\u4eba\u77e5\u7684 Python \u4ee3\u7801\u7247\u6bb5\u96c6\u5408\u3002 24. tqdm \uff1a\u5f3a\u5927\u3001\u5feb\u901f\u3001\u6613\u6269\u5c55\u7684 Python \u8fdb\u5ea6\u6761\u5e93\u3002\u6211\u60f3\u901a\u8fc7\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u548c\u6548\u679c\u5c55\u793a\u56fe\uff0c\u4f60\u4f1a\u8dd1\u53bb\u7ed9\u8fd9\u4e2a\u9879\u76ee\u6765\u4e2a Star \u7684 from tqdm import tqdm for i in tqdm ( range ( 10000 )): pass # \u8f93\u51fa\u7ed3\u679c\uff1a # 76%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 7568/10000 [00:33<00:10, 229.00it/s] 25. youtube-dl \uff1a\u5f3a\u5927\u7684\u89c6\u9891\u4e0b\u8f7d\u5de5\u5177\uff0c\u652f\u6301\u51e0\u767e\u4e2a\u56fd\u5185\u5916\u4e3b\u6d41\u89c6\u9891\u7f51\u7ad9\u3002\u6b63\u5982\u540d\u5b57\u4e00\u6837\uff0c\u6700\u521d\u662f\u4e3a\u4e86\u4e0b\u8f7d youtube \u4e0a\u7684\u89c6\u9891\u800c\u5f00\u53d1\u7684\u3002\u5982\u679c\u6709\u56fd\u5916\u670d\u52a1\u5668\u7684\u670b\u53cb\uff0c\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8fd9\u4e2a\u5de5\u5177\uff0c\u4e0b\u8f7d youtube \u4e0a\u7684\u89c6\u9891\uff0c\u901f\u5ea6\u4e0d\u8981\u592a\u723d\u3002\u4e0b\u9762\u4ecb\u7ecd\u5b89\u88c5\u3001\u4e0b\u8f7d\u89c6\u9891\u7b49\u547d\u4ee4\uff1a # 1. \u5b89\u88c5\u547d\u4ee4\uff1asudo pip install youtube-dl Installing collected packages : youtube - dl Successfully installed youtube - dl - 2017.12.14 # 2. \u67e5\u770b URL \u652f\u6301\u683c\u5f0f\uff1ayoutube-dl --list-formats URL format code extension resolution note 134 mp4 450 x360 DASH video 449 k , avc1 .4 d4015 , 25 fps , video only 17 3 gp 176 x144 small , mp4v .20.3 , mp4a .40.2 @ 24 k 36 3 gp 300 x240 small , mp4v .20.3 , mp4a .40.2 18 mp4 450 x360 medium , avc1 .42001 E , mp4a .40.2 @ 96 k 43 webm 640 x360 medium , vp8 .0 , vorbis @ 128 k ( best ) # 3. \u9009\u62e9\u683c\u5f0f\u4e0b\u8f7d\u89c6\u9891\uff1ayoutube-dl -f 18 URL \uff0818\u4e3amp4 450x360\u683c\u5f0f\uff09 [ youtube : playlist ] Downloading playlist PLF90USSyuoYzPhhFG7XFBRn63Zvs -- lNP - add -- no - playlist to just download video JyLducMVYVg [ youtube : playlist ] PLF90USSyuoYzPhhFG7XFBRn63Zvs -- lNP : Downloading webpage [ download ] Downloading playlist : \u60c5\u6ee1\u56db\u5408\u9662\u5b8c\u6574\u7248 [ youtube : playlist ] playlist \u60c5\u6ee1\u56db\u5408\u9662\u5b8c\u6574\u7248 : Downloading 42 videos [ download ] Downloading video 1 of 42 ... # 4. \u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u6700\u540e\u4f7f\u7528 https://github.com/houtianze/bypy \u5e93\u628a\u4e0b\u8f7d\u7684\u89c6\u9891\u540c\u6b65\u5230\u767e\u5ea6\u7f51\u76d8\u4e0a 26. pandas-tutorial \uff1a\u8fd9\u5957 pandas \u6559\u7a0b\u5305\u542b\u4ece\u521d\u7ea7\u5230\u8fdb\u9636\u7684\u5185\u5bb9\uff0c\u9002\u5408\u521d\u5b66\u8005\u548c\u5e0c\u671b\u8fdb\u9636\u5efa\u7acb\u77e5\u8bc6\u4f53\u7cfb\u7684\u6570\u636e\u79d1\u5b66\u4ece\u4e1a\u8005\u9605\u8bfb\u3002\u4f5c\u8005\u8fd8\u5728\u6301\u7eed\u66f4\u65b0\u9ad8\u7ea7\u5185\u5bb9\uff0c\u4f60\u503c\u5f97\u62e5\u6709\uff01 27. pysheeet \uff1aPython \u901f\u67e5\u8868\u3002 28. ItChat \uff1a\u5f00\u6e90\u7684\u5fae\u4fe1\u4e2a\u4eba\u53f7SDK\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u529f\u80fd\u3002\u4ece\u800c\u4f7f\u5f97 Python \u8c03\u7528\u5fae\u4fe1\u3001\u53d1\u9001\u6d88\u606f\u3001\u4f20\u8f93\u6587\u4ef6\u7b49\u64cd\u4f5c\u53ea\u9700\u8981\u7f16\u5199\u6781\u5c11\u7684\u4ee3\u7801\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a import itchat itchat . auto_login () itchat . send ( 'Hello, filehelper' , toUserName = 'filehelper' ) 29. pygorithm \uff1a\u4e00\u4e2a\u5e2e\u52a9\u5b66\u4e60\u4e3b\u8981\u7b97\u6cd5\u7684\u5e93\uff0c\u53ef\u4ee5\u901a\u8fc7\u7406\u89e3\u8fd9\u4e9b\u7b97\u6cd5\u7684\u5b9e\u73b0\uff0c\u63d0\u9ad8\u81ea\u5df1\u7684\u7b97\u6cd5\u6c34\u5e73\u3002 30. faker \uff1a\u7528\u4e8e\u751f\u6210\u5047\u6570\u636e\u7684\u5e93\uff0c\u652f\u6301\u591a\u79cd\u8bed\u8a00\uff0c\u4f60\u503c\u5f97\u62e5\u6709\u3002\u793a\u4f8b\u4ee3\u7801\uff1a fake . address () # '\u8fbd\u5b81\u7701\u96ea\u5e02\u9759\u5b89\u5ec9\u8857b\u5ea7 998259' fake . street_address () # '\u5de2\u6e56\u8857U\u5ea7' fake . building_number () # 'x\u5ea7' fake . city_suffix () # '\u5e02' fake . latitude () # Decimal('-0.295126') fake . province () # '\u6e56\u5317\u7701' 31. proxy_pool \uff1a\u57fa\u4e8e Python \u7684\u81ea\u5efa\u4ee3\u7406 IP \u6c60\u670d\u52a1\uff0c\u901a\u8fc7\u7f51\u7edc\u722c\u866b\u6293\u53d6\u4e92\u8054\u7f51\u4e0a\u514d\u8d39\u7684\u4ee3\u7406 IP\uff0c\u672c\u5730\u6821\u9a8c\u3001\u5254\u9664\u5931\u6548\u7684\u4ee3\u7406IP\uff0c\u4ece\u800c\u5b9e\u73b0\u9ad8\u53ef\u7528\u7684\u4ee3\u7406 IP \u6c60\u3002\u6700\u540e\u4f7f\u7528 Flask \u642d\u5efa\u63d0\u4f9b\u4ee3\u7406 IP \u670d\u52a1\uff0c\u5305\u62ec\u4ee3\u7406\u6c60\u5237\u65b0\u3001\u65e0\u6548\u4ee3\u7406\u5220\u9664\u3001\u4ee3\u7406\u83b7\u53d6\u7b49\u3002\u8be5\u9879\u76ee\u8bbe\u8ba1\u6587\u6863\u8be6\u7ec6\u3001\u6a21\u5757\u7ed3\u6784\u7b80\u660e\u6613\u61c2\uff0c\u540c\u65f6\u9002\u5408\u722c\u866b\u65b0\u624b\u66f4\u597d\u7684\u5b66\u4e60\u722c\u866b\u6280\u672f\u3002 32. getproxy \uff1a\u6781\u7b80\u7684\u6293\u53d6\u4ee3\u7406\u9879\u76ee\uff0c\u65e0\u9700\u914d\u7f6e\u3002\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u83b7\u53d6\u4ee3\u7406\u811a\u672c\uff0c\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7 \u8be5\u9875\u9762 \uff0c\u76f4\u63a5\u83b7\u53d6\u53ef\u7528\u4ee3\u7406\uff0815min \u66f4\u65b0\u3001\u7c7b\u578b\u5305\u542bhttp\u548chttps\uff09\u3002 33. syncPlaylist \uff1a\u5728\u7f51\u6613\u4e91\u97f3\u4e50\u4e0e QQ \u97f3\u4e50\u4e4b\u95f4\u540c\u6b65\u6b4c\u5355\u3002\u6613\u4e8e\u4f7f\u7528\u3001\u914d\u7f6e\u65b9\u4fbf\u3001\u4ee3\u7801\u7b80\u5355\uff0c\u7528\u5230\u7684\u6280\u672f\uff1a requests + beautifulsoup \u4ee5\u53ca selenium + phantomjs 34. django-blog-tutorial \uff1a\u57fa\u4e8e\u6700\u65b0\u7248 Django 1.10 \u548c Python 3.5\uff0c\u901a\u8fc7 26 \u7bc7\u6559\u7a0b\u4e00\u6b65\u6b65\u5e26\u4f60\u4f7f\u7528 Django \u4ece\u96f6\u5f00\u53d1\u4e00\u4e2a\u4e2a\u4eba\u535a\u5ba2\u7cfb\u7edf\uff0c\u5728\u5b9e\u8df5\u7684\u540c\u65f6\u638c\u63e1 Django \u7684\u5f00\u53d1\u6280\u5de7\u3002 35. snake \uff1a\u8d2a\u5403\u86c7\u6e38\u620f AI \u7248\uff0c\u901a\u8fc7\u7b97\u6cd5\u5b9e\u73b0\u8ba9\u5c0f\u86c7\u901a\u8fc7\u5403\u8c46\uff0c\u6700\u540e\u86c7\u7684\u8eab\u4f53\u586b\u6ee1\u6574\u4e2a\u5730\u56fe\u7b97\u7ed3\u675f\u3002\u8be5\u9879\u76ee\u8be6\u7ec6\u63cf\u8ff0\u5b9e\u73b0\u601d\u60f3\u4ee5\u53ca\u76f8\u5173\u7b97\u6cd5\u7684\u8ba8\u8bba\u3002 36. algorithms \uff1a\u57fa\u672c\u7b97\u6cd5\u3001\u6570\u636e\u7ed3\u6784\u7684 Python \u5b9e\u73b0 \u3002 37. searx \uff1a\u5206\u5206\u949f\u6253\u9020\u4e00\u4e2a\u805a\u5408\u7684\u641c\u7d22\u5f15\u64ce\uff0c\u4f7f\u7528\u7b80\u5355\uff0c\u90e8\u7f72\u65b9\u4fbf\u3002\u62d3\u5c55\u65b9\u4fbf\uff0c\u57fa\u4e8e\u63d2\u4ef6\u5f0f\u7684\u7ba1\u7406\u3002 38. sh \uff1ash \u662f\u4e00\u4e2a\u6210\u719f\uff0c\u7528\u4e8e\u66ff\u4ee3 subprocess\uff0c\u5b83\u5141\u8bb8\u4f60\u8c03\u7528\u4efb\u4f55\u7a0b\u5e8f\uff0c\u5c31\u50cf\u5b83\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u652f\u6301 Python2.6 - 3.5\u3002 from sh import ifconfig print ifconfig ( \"eth0\" ) 39. saythanks.io \uff1aKennethreitz \u5199\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u7f51\u7ad9\uff08\u57fa\u4e8e Flask\uff09\uff0c\u7528\u4e8e\u5411\u5f00\u6e90\u9879\u76ee\u4f5c\u8005\u53d1\u9001\u611f\u8c22\u90ae\u4ef6\u7684 Web App\u3002\u8be5\u9879\u76ee\u7ed3\u6784\u7b80\u5355\uff0c\u53ef\u4ee5\u7528\u6765\u5b66\u4e60\u5927\u795e\u662f\u5982\u4f55\u5feb\u901f\u5f00\u53d1 Web \u9879\u76ee\u3001\u65b9\u6cd5\u3001\u4ee3\u7801\u98ce\u683c\u3001\u5f00\u53d1\u5e38\u7528\u5e93\u3002 40. fake-useragent \uff1a\u4f2a\u88c5\u6d4f\u89c8\u5668\u8eab\u4efd\uff0c\u5e38\u7528\u4e8e\u722c\u866b\u3002\u8fd9\u4e2a\u9879\u76ee\u7684\u4ee3\u7801\u5f88\u5c11\uff0c\u53ef\u4ee5\u9605\u8bfb\u4e00\u4e0b\uff0c\u770b\u770b ua.random \u662f\u5982\u4f55\u8fd4\u56de\u968f\u673a\u7684\u6d4f\u89c8\u5668\u8eab\u4efd\u7684 \uff0c\u793a\u4f8b\u4ee3\u7801\uff1a from fake_useragent import UserAgent ua = UserAgent () ua . ie # Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US); ua . msie # Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)' ua [ 'Internet Explorer' ] # Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 3.3.69573; WOW64; en-US) ua . opera # Opera/9.80 (X11; Linux i686; U; ru) Presto/2.8.131 Version/11.11 ua . chrome # Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.2 (KHTML, like Gecko) Chrome/22.0.1216.0 Safari/537.2' ua . google # Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.13 (KHTML, like Gecko) Chrome/24.0.1290.1 Safari/537.13 ua [ 'google chrome' ] # Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11 ua . firefox # Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/16.0.1 ua . ff # Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1 ua . safari # Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25 # and the best one, random via real world browser usage statistic ua . random 41. textfilter \uff1a\u57fa\u4e8e\u67d0 1w \u8bcd\u654f\u611f\u8bcd\u5e93\uff0c\u7528 Python \u5b9e\u73b0\u51e0\u79cd\u4e0d\u540c\u7684\u8fc7\u6ee4\u65b9\u5f0f\u3002 \u7528\u4e8e\u8fc7\u6ee4\u654f\u611f\u8bcd\u7684\u5b9e\u7528\u6a21\u5757 \uff0c\u793a\u4f8b\u4ee3\u7801\uff1a from filter import DFAFilter gfw = DFAFilter () gfw . parse ( \"keywords\" ) print \"\u5f85\u8fc7\u6ee4\uff1a\u552e\u5047\u4eba\u6c11\u5e01 \u6211\u64cd\u64cd\u64cd\" print \"\u8fc7\u6ee4\u540e\uff1a\" , gfw . filter ( \"\u552e\u5047\u4eba\u6c11\u5e01 \u6211\u64cd\u64cd\u64cd\" , \"*\" ) test_first_character () # \u8fd0\u884c\u7ed3\u679c # \u5f85\u8fc7\u6ee4\uff1a\u552e\u5047\u4eba\u6c11\u5e01 \u6211\u64cd\u64cd\u64cd # \u8fc7\u6ee4\u540e\uff1a \u552e\u5047**\u5e01 **** 43. python-guide \uff1aRequests \u5e93\u7684\u4f5c\u8005\u2014\u2014kennethreitz\uff0c\u5199\u7684 Python \u5165\u95e8\u6559\u7a0b\u3002\u4e0d\u5355\u5355\u662f\u8bed\u6cd5\u5c42\u9762\u7684\uff0c\u6db5\u76d6\u9879\u76ee\u7ed3\u6784\u3001\u4ee3\u7801\u98ce\u683c\uff0c\u8fdb\u9636\u3001\u5de5\u5177\u7b49\u65b9\u65b9\u9762\u9762\u3002\u867d\u7136\u662f**\u82f1\u6587\u7248**( \u4e2d\u6587\u7ffb\u8bd1\u7248 )\uff0c\u4f46\u6211\u8fd9\u4e2a\u82f1\u8bed\u6e23\u90fd\u80fd\u770b\u61c2\uff0c\u4f60\u80af\u5b9a\u4e5f\u53ef\u4ee5\uff0c\u5feb\u53bb\u770b\u770b\u5427\uff0c\u5f00\u5377\u6709\u76ca\u3002 44. d2l-zh \uff0c\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60 & pytorch\u7248\u672c\uff1aDive-into-DL-PyTorch \u53c2\u8003\u94fe\u63a5 \u00b6 https://github.com/521xueweihan/HelloGitHub","title":"\u5e38\u7528\u7684python\u5e93"},{"location":"06-third-part-lib/%E5%B8%B8%E7%94%A8%E7%9A%84python%E5%BA%93/#python","text":"\u7b80\u5355\u8bb0\u5f55\u4e00\u4e0b\u5e38\u7528\u7684Python\u5e93\uff0c\u6587\u6863\u4e0d\u65ad\u66f4\u65b0\u4e2d\u3002 \u6211\u81ea\u5df1\u6709\u5370\u8c61\u7684\u5de5\u5177\u548c\u5e93 beaufifulSoup \u628aHTML\u5b57\u7b26\u4e32\u8f6c\u6362\u6210DOM\u8282\u70b9\u7684\u5de5\u5177\uff0c\u4e3b\u8981\u7528\u4e8e\u722c\u866b Turtle \u7b80\u5355\u7ed8\u56fe django \u590d\u6742\u5b8c\u6574\u7684web\u6846\u67b6(django-webpack_loader\u7b49\u4e00\u7cfb\u5217\u5de5\u5177) flask \u8f7b\u91cf\u7ea7web\u6846\u67b6 pandas \u6570\u636e\u7edf\u8ba1\u5206\u6790 python-mysql \u6570\u636e\u5e93\u8fde\u63a5\u5de5\u5177\uff08mysqlclient\uff09 Qrcode \u4e8c\u7ef4\u7801\u5236\u4f5c\u5de5\u5177\uff0cPython \u5199\u7684\u751f\u6210\u52a8\u6001\u3001\u5f69\u8272\u3001\u5404\u5f0f\u5404\u6837\u7684\u4e8c\u7ef4\u7801\uff0c\u8be6\u7ec6\u7684 \u4e2d\u6587\u6587\u6863 \u3002 fabric \u547d\u4ee4\u884c\u811a\u672c\u5de5\u5177\uff0c\u7528\u4e8e\u66f4\u65b0 transifix transifex-client \u7ffb\u8bd1\u5de5\u5177 beautifulsoup4 4.11.2 bs4 0.0.1 certifi 2022.12.7 charset-normalizer 3.0.1 idna 3.4 pip 22.3.1 requests 2.28.2 setuptools 65.6.3 soupsieve 2.3.2.post1 urllib3 1.26.14 wheel 0.38.4 \u6784\u5efa\u5de5\u5177 virtual-env \u865a\u62df\u73af\u5883 pip \u5305\u7ba1\u7406\u5de5\u5177","title":"\u5e38\u7528\u7684python\u5e93"},{"location":"06-third-part-lib/%E5%B8%B8%E7%94%A8%E7%9A%84python%E5%BA%93/#_1","text":"1. gopup \uff1a\u91c7\u96c6\u5404\u79cd\u6743\u5a01\u516c\u5f00\u6570\u636e\u7684 Python \u5e93\u3002\u793a\u4f8b\u4ee3\u7801\uff1a # \u5b89\u88c5\uff1apip isntall gopup import gopup as gp covid_baidu_df = gp . covid_baidu ( indicator = \"\u70ed\u641c\u8c23\u8a00\u7c89\u788e\" ) print ( covid_baidu_df ) 2. streamlit \uff1a\u80fd\u591f\u5feb\u901f\u5730\u628a\u6570\u636e\u5236\u4f5c\u6210\u53ef\u89c6\u5316\u3001\u4ea4\u4e92\u9875\u9762\u7684 Python \u6846\u67b6\u3002\u5206\u5206\u949f\u8ba9\u4f60\u7684\u6570\u636e\u53d8\u6210\u56fe\u8868\uff0c\u5e76\u4e14\u8be5\u9879\u76ee\u63d0\u4f9b\u514d\u8d39\u7684\u5171\u4eab\u670d\u52a1\u5e73\u53f0\u5e2e\u4f60\u7684\u9879\u76ee\u4e0a\u7ebf\uff0c\u65b9\u4fbf\u6570\u636e\u7684\u5171\u4eab\u548c\u8ba8\u8bba\u3002 3. playwright-python \uff1a\u5fae\u8f6f\u5f00\u6e90\u7684\u6d4f\u89c8\u5668\u81ea\u52a8\u5316\u5de5\u5177\uff0c\u53ef\u4ee5\u7528 Python \u8bed\u8a00\u64cd\u4f5c\u6d4f\u89c8\u5668\u5566\u3002\u652f\u6301 Linux\u3001macOS\u3001Windows \u7cfb\u7edf\u4e0b\u7684 Chromium\u3001Firefox \u548c WebKit \u6d4f\u89c8\u5668\u3002 python -m playwright codegen wikipedia.org 4. wagtail \uff1a\u76ee\u524d\u6700\u5f3a\u5927\u7684\u5f00\u6e90 Django CMS\uff08\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff09\u4e4b\u4e00\u3002\u9996\u5148\u8be5\u9879\u76ee\u66f4\u65b0\u3001\u8fed\u4ee3\u6d3b\u8dc3\uff0c\u5176\u6b21\u9879\u76ee\u9996\u9875\u63d0\u5230\u7684\u529f\u80fd\u90fd\u662f\u514d\u8d39\u7684\uff0c\u6ca1\u6709\u4ed8\u8d39\u89e3\u9501\u7684\u9a9a\u64cd\u4f5c\u3002wagtail \u4e13\u6ce8\u4e8e\u5185\u5bb9\u7ba1\u7406\uff0c\u4e0d\u675f\u7f1a\u524d\u7aef\u5b9e\u73b0\u3002\u6709\u8da3\u7684 StreamField \u6280\u672f\u8ba9\u4f60\u7684\u5185\u5bb9\u53d8\u5f97\u7075\u6d3b\u4e14\u4e0d\u5931\u7ed3\u6784\uff0c\u7adf\u7136\u8fd8\u652f\u6301 A/B \u6d4b\u8bd5\uff0c\u6700\u540e Google\u3001NASA \u4ed6\u4eec\u90fd\u5728\u7528\u8fd9\u4e2a\u9879\u76ee\u3002 5. practical-python \uff1a\u4e00\u4e2a\u975e\u5e38\u597d\u7684python\u5b66\u4e60\u8d44\u6e90\uff0cmd\u683c\u5f0f\uff0c\u9644\u8d60\u8054\u7cfb\u3002 6. learn-python3 \uff1a\u4e00\u4efd Python3 \u7684\u6559\u7a0b\uff0c\u8bf7\u67e5\u6536\u3002\u8be5\u6559\u7a0b\u91c7\u7528 Jupyter notebooks \u5f62\u5f0f\uff0c\u4fbf\u4e8e\u8fd0\u884c\u548c\u9605\u8bfb\u3002\u5e76\u4e14\u8fd8\u5305\u542b\u4e86\u7ec3\u4e60\u9898\uff0c\u5bf9\u65b0\u624b\u53cb\u597d\u3002\u7f3a\u70b9\u7684\u8bdd\u5c31\u662f\u82f1\u6587\u7684\u6559\u7a0b\uff0c\u4f46\u662f\u6211\u90fd\u80fd\u770b\u61c2\u4f60\u80af\u5b9a\u4e5f\u53ef\u4ee5\u3002 7. fastapi \uff1a\u57fa\u4e8e Python 3.6+ \u7684\u9ad8\u6027\u80fd Web \u6846\u67b6\u3002\u201c\u4eba\u5982\u5176\u540d\u201d\u7528 FastAPI \u5199\u63a5\u53e3\u90a3\u53eb\u4e00\u4e2a\u5feb\u3001\u8c03\u8bd5\u65b9\u4fbf\uff0cPython \u5728\u8fdb\u6b65\u800c\u5b83\u57fa\u4e8e\u8fd9\u4e9b\u8fdb\u6b65\uff0c\u8ba9 Web \u5f00\u53d1\u53d8\u5f97\u66f4\u5feb\u3001\u66f4\u5f3a\u3002\u793a\u4f8b\u4ee3\u7801\uff1a from fastapi import FastAPI app = FastAPI () @app . get ( \"/\" ) async def read_root (): return { \"Hello\" : \"World\" } @app . get ( \"/items/ {item_id} \" ) async def read_item ( item_id : int , q : str = None ): return { \"item_id\" : item_id , \"q\" : q } # \u542f\u52a8\u547d\u4ee4\uff1auvicorn main:app --reload 8. gpustat \uff1a\u4e00\u4e2a\u65b9\u4fbf\u67e5\u8be2 GPU \u72b6\u6001\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u3002 9. akshare \uff1a\u4e00\u6b3e\u57fa\u4e8e Python \u7684\u5f00\u6e90\u91d1\u878d\u6570\u636e\u63a5\u53e3\u5e93\u3002\u63d0\u4f9b\u4e86\u80a1\u7968\u3001\u671f\u8d27\u3001\u671f\u6743\u3001\u57fa\u91d1\u3001\u6570\u5b57\u8d27\u5e01\u7b49\u91d1\u878d\u4ea7\u54c1\u7684\u57fa\u672c\u6570\u636e\u3001\u5b9e\u65f6\u548c\u5386\u53f2\u884c\u60c5\u6570\u636e\u3001\u884d\u751f\u6570\u636e\uff0c\u5305\u542b\u6570\u636e\u91c7\u96c6\u3001\u6570\u636e\u6e05\u6d17\u3001\u5230\u6570\u636e\u843d\u5730\u7684\u4e00\u5957\u5f00\u6e90\u5de5\u5177\u3002\u6ee1\u8db3\u4e86\u91d1\u878d\u6570\u636e\u79d1\u5b66\u5bb6\u3001\u6570\u636e\u79d1\u5b66\u7231\u597d\u8005\u5728\u91d1\u878d\u6570\u636e\u83b7\u53d6\u65b9\u9762\u7684\u9700\u6c42\u3002\u793a\u4f8b\u4ee3\u7801\uff1a import akshare as ak bond_df = ak . bond_spot_deal () print ( bond_df ) \u503a\u5238\u7b80\u79f0 \u6210\u4ea4\u51c0\u4ef7 ( \u5143 ) \u6700\u65b0\u6536\u76ca\u7387 ( % ) \u6da8\u8dcc ( BP ) \u52a0\u6743\u6536\u76ca\u7387 ( % ) \u4ea4\u6613\u91cf ( \u4ebf ) 0 19 \u56fd\u5f0015 98.97 3.5750 1.00 3.5826 None 1 19 \u9644\u606f\u56fd\u503a03 99.82 2.7714 0.14 2.7772 None 2 19 \u9644\u606f\u56fd\u503a11 99.87 2.8000 0.25 2.7963 None 3 19 \u9644\u606f\u56fd\u503a04 100.82 2.9832 - 1.54 2.9747 None 4 15 \u9644\u606f\u56fd\u503a05 102.95 3.0359 - 1.41 3.0359 None 10. KeymouseGo \uff1aPython \u5b9e\u73b0\u7684\u7cbe\u7b80\u7eff\u8272\u7248\u6309\u952e\u7cbe\u7075\u3002\u8bb0\u5f55\u7528\u6237\u7684\u9f20\u6807\u3001\u952e\u76d8\u64cd\u4f5c\uff0c\u81ea\u52a8\u6267\u884c\u4e4b\u524d\u8bb0\u5f55\u7684\u64cd\u4f5c\uff0c\u53ef\u8bbe\u5b9a\u6267\u884c\u7684\u6b21\u6570\u3002\u5728\u8fdb\u884c\u67d0\u4e9b\u7b80\u5355\u3001\u5355\u8c03\u91cd\u590d\u7684\u64cd\u4f5c\u65f6\uff0c\u4f7f\u7528\u8be5\u8f6f\u4ef6\u53ef\u4ee5\u5341\u5206\u7701\u4e8b\u513f\u3002\u53ea\u9700\u8981\u5f55\u5236\u4e00\u904d\uff0c\u5269\u4e0b\u7684\u4ea4\u7ed9 KeymouseGo \u6765\u505a\u5c31\u53ef\u4ee5\u4e86\u3002 11. GeneralNewsExtractor \uff1a\u57fa\u4e8e\u300a\u57fa\u4e8e\u6587\u672c\u53ca\u7b26\u53f7\u5bc6\u5ea6\u7684\u7f51\u9875\u6b63\u6587\u63d0\u53d6\u65b9\u6cd5\u300b\u8bba\u6587\u7528 Python \u5b9e\u73b0\u7684\u6b63\u6587\u62bd\u53d6\u5668\uff0c\u53ef\u4ee5\u7528\u6765\u63d0\u53d6 HTML \u4e2d\u6b63\u6587\u7684\u5185\u5bb9\u3001\u4f5c\u8005\u3001\u6807\u9898\u3002\u8fd9\u4e2a\u53ef\u4ee5\u7ed3\u5408\u722c\u866b\u4f7f\u7528\u3002\u9996\u5148\u7528\u722c\u866b\u83b7\u53d6\u7f51\u9875\u5168\u90e8\u5185\u5bb9\uff0c\u7136\u540e\u4f7f\u7528\u6536\u53d6\u5668\u83b7\u53d6\u6b63\u6587\u5185\u5bb9\uff0c\u8fc7\u6ee4\u566a\u97f3\u3002 12. Jtyoui \uff1a\u5e2e\u52a9\u5b66\u4e60 Python \u7684\u4ee3\u7801\u96c6\u5408\u5305\u3002\u5305\u542b 20 \u591a\u4e2a\u7b80\u5355\u6613\u7528\u7684\u5e38\u7528\u65b9\u6cd5\u548c\u6570\u5b66\u51fd\u6570\uff0c\u5927\u591a\u6570\u65b9\u6cd5\u5728 100 \u884c\u5de6\u53f3\uff0c\u800c\u4e14\u6bcf\u4e00\u4e2a\u7c7b\u7684\u4f7f\u7528\u90fd\u6709\u5bf9\u5e94\u7684\u6d4b\u8bd5\u7528\u4f8b\u3002\u975e\u5e38\u65b9\u4fbf\u521d\u5b66\u8005\u5b66\u4e60\uff0c\u4e5f\u53ef\u4ee5\u5e2e\u52a9\u6709\u7ecf\u9a8c\u7684\u5f00\u53d1\u8005\u5feb\u901f\u5b9e\u73b0\u4e00\u4e9b\u529f\u80fd\u3002\u793a\u4f8b\u4ee3\u7801\uff1a # \u8fd9\u662f\u4e00\u4e2a\u9633\u5386\u8f6c\u5316\u519c\u5386\u7684\u7a0b\u5e8f from jtyoui.plunar import SC if __name__ == '__main__' : lun = SC ( year = 2018 , month = 1 , day = 2 ) #\u9633\u5386\u8f6c\u519c\u5386 print ( lun . y ) # \u519c\u5386\u7684\u5e74,\u4e2d\u6587\u5b57\u7b26 \u4e8c\u96f6\u4e00\u4e5d print ( lun . year ) # \u519c\u5386\u7684\u5e74\uff0c\u963f\u62c9\u4f2f\u6570\u5b57 2019 ... print ( lun ) # \u4e8c\u96f6\u4e00\u4e5d\u5e74 \u4e03\u6708 \u5341\u56db \u661f\u671f\u56db \u65e0 13. one-python-craftsman \uff1a\u5982\u4f55\u7f16\u5199\u4f18\u79c0\u7684 Python \u4ee3\u7801\uff1f\u4f18\u79c0\u7684\u4ee3\u7801\u5c31\u662f\u7531\u65e0\u6570\u4f18\u79c0\u7684\u7ec6\u8282\u7ec4\u6210\u7684\u3002\u8fd9\u4e2a\u9879\u76ee\u5c31\u662f\u8be6\u7ec6\u8bb2\u89e3 Python \u90a3\u4e9b\u7ec6\u8282\uff0c\u6bd4\u5982\u4f55\u65f6\u4f7f\u7528\u5f02\u5e38\u3001\u600e\u4e48\u7ed9\u53d8\u91cf\u8d77\u540d\u3001\u600e\u4e48\u7f16\u5199\u6761\u4ef6\u5206\u652f\u7b49\u7b49\uff0c\u770b\u4f3c\u7b80\u5355\u7684\u53ef\u80fd\u4e5f\u662f\u6700\u96be\u7684\u5730\u65b9\u3002\u672c\u9879\u76ee\u4f5c\u8005\u662f\u8d44\u6df1\u7684 Python \u5f00\u53d1\uff0c\u5185\u5bb9\u8d34\u8fd1\u5b9e\u9645\u5de5\u4f5c\u548c\u4e1a\u52a1\u573a\u666f\uff0c\u76f8\u4fe1\u8ba4\u771f\u5b66\u4e60\u5b8c\u672c\u9879\u76ee\uff0c\u4f60\u7684\u7f16\u7801\u80fd\u529b\u4e00\u5b9a\u4f1a\u5f97\u5230\u5f88\u5927\u63d0\u5347\uff0c\u5e2e\u4f60\u5728 Python \u7684\u5f00\u53d1\u9053\u8def\u4e0a\u8d70\u7684\u66f4\u9ad8\u3001\u66f4\u8fdc\u3002 14. you-get \uff1a\u4e00\u4e2a Python \u5199\u7684\u89c6\u9891\u4e0b\u8f7d\u5de5\u5177\uff0c\u4e0b\u8f7d\u5de5\u5177\u5343\u4e07\u4e2a\u4f46\u6211\u4ec5\u4ec5\u63a8\u8350\u4e86\u8fd9\u4e2a\u5de5\u5177\u3002\u662f\u56e0\u4e3a\u6b63\u5e38\u60c5\u51b5\u4e0b\u8f7d\u4e0d\u4e86\u89c6\u9891\u7684\u7f51\u7ad9\uff0c\u7528\u5b83\u4f60\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5730\u4e0b\u8f7d\u4e0b\u6765\u3002\u5269\u4e0b\u7684\u8981\u81ea\u5df1\u53bb\u770b\u4ecb\u7ecd\uff0c\u4e0d\u80fd\u518d\u591a\u8bf4\u4e86 ( env ) \u279c ~ you - get 'https://v.ifeng.com/c/7msWmwppMPC' Site : ifeng . com Title : \u5b8c\u6574\u7248\u7b2c\u4e94\u671f \uff1a \u9648\u6653\u537f \u4e2d\u56fd\u6709\u4fe9\u884c\u5f53\u95e8\u69db\u6781\u4f4e \u2014\u2014 \u7f8e\u98df\u5708\u548c\u6444\u5f71\u5708 Type : MPEG - 4 video ( video / mp4 ) Size : 0.01 MiB ( 8578 Bytes ) Downloading \u5b8c\u6574\u7248\u7b2c\u4e94\u671f \uff1a \u9648\u6653\u537f \u4e2d\u56fd\u6709\u4fe9\u884c\u5f53\u95e8\u69db\u6781\u4f4e \u2014\u2014 \u7f8e\u98df\u5708\u548c\u6444\u5f71\u5708 . mp4 100 % ( 0.0 / 0.0 MB ) \u251c\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2524 [ 1 / 1 ] 71 kB / s 15. ds-cheatsheets \uff1aPython \u5728\u6570\u636e\u79d1\u5b66\u65b9\u9762\u4f7f\u7528\u5e93\u7684\u901f\u67e5\u8868\uff0c\u5305\u542b\u4e86 Pandas\u3001Jupyter\u3001SQL\u3001Dask \u7b49\u3002\u867d\u7136\u90fd\u662f\u4e9b\u57fa\u672c\u7684 API \u8c03\u7528\uff0c\u4f46\u662f\u7528\u6765\u5907\u5fd8\u548c\u901f\u67e5\u8db3\u4ee5 16. awesome-python-login-model \uff1a\u8be5\u9879\u76ee\u6536\u96c6\u4e86\u5404\u5927\u7f51\u7ad9\u767b\u9646\u65b9\u5f0f\u548c\u90e8\u5206\u7f51\u7ad9\u7684\u722c\u866b\u7a0b\u5e8f\u3002\u767b\u9646\u65b9\u5f0f\u5b9e\u73b0\u5305\u542b selenium \u767b\u5f55\u3001\u901a\u8fc7\u6293\u5305\u76f4\u63a5\u6a21\u62df\u767b\u5f55\u7b49\u3002\u6709\u52a9\u4e8e\u65b0\u624b\u7814\u7a76\u3001\u7f16\u5199\u722c\u866b\u3002 17. click \uff1aPython \u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u7528\u4e8e\u5feb\u901f\u521b\u5efa\u547d\u4ee4\u884c\u3002\u652f\u6301\u88c5\u9970\u5668\u65b9\u5f0f\u8c03\u7528\u3001\u591a\u79cd\u53c2\u6570\u7c7b\u578b\u3001\u81ea\u52a8\u751f\u6210\u5e2e\u52a9\u4fe1\u606f\u7b49\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a import click @click . command () @click . option ( \"--count\" , default = 1 , help = \"Number of greetings.\" ) @click . option ( \"--name\" , prompt = \"Your name\" , help = \"The person to greet.\" ) def hello ( count , name ): \"\"\"Simple program that greets NAME for a total of COUNT times.\"\"\" for _ in range ( count ): click . echo ( \"Hello, %s !\" % name ) if __name__ == '__main__' : hello () # \u4e0b\u9762\u4e3a\u8fd0\u884c\u6548\u679c $ python hello . py -- count = 3 Your name : Click Hello , Click ! Hello , Click ! Hello , Click ! 18. awesome-python-applications \uff1a\uff08\u82f1\u6587\uff09\u4ecb\u7ecd Python \u6709\u8da3\u3001\u795e\u5947\u7684\u5f00\u6e90\u9879\u76ee\u3002\u76ee\u524d\u6db5\u76d6\u591a\u4e2a\u9886\u57df\u3001\u9879\u76ee\u4e30\u5bcc\u3002 19. loguru \uff1a\u4e00\u4e2a\u8ba9 Python \u8bb0\u5f55\u65e5\u5fd7\u53d8\u5f97\u7b80\u5355\u7684\u5e93\u3002 21. scylla \uff1a\u4e00\u6b3e\u9ad8\u8d28\u91cf\u7684\u514d\u8d39\u4ee3\u7406 IP \u6c60\u5de5\u5177\uff0c\u4ec5\u652f\u6301 Python 3.6\u3002 \u4e2d\u6587\u6587\u6863 \uff0c\u7279\u6027\u5982\u4e0b\uff1a\u81ea\u52a8\u5316\u7684\u4ee3\u7406 IP \u722c\u53d6\u4e0e\u9a8c\u8bc1\u3001\u6613\u7528\u7684 JSON API\u3001\u7b80\u5355\u4f46\u7f8e\u89c2\u7684 web \u7528\u6237\u754c\u9762\uff0c\u57fa\u4e8e TypeScript \u548c React\uff08\u4f8b\u5982\uff0c\u4ee3\u7406\u7684\u5730\u7406\u5206\u5e03\uff09\u6700\u5c11\u4ec5\u7528\u4e00\u884c\u4ee3\u7801\u5373\u53ef\u4e0e Scrapy \u548c requests \u8fdb\u884c\u96c6\u6210 22. Synonyms \uff1a\u4e2d\u6587\u8fd1\u4e49\u8bcd\u5de5\u5177\u5305\u3002\u652f\u6301\u81ea\u7136\u8bed\u8a00\u7406\u89e3\u7684\u5f88\u591a\u4efb\u52a1\uff1a\u6587\u672c\u5bf9\u9f50\u3001\u63a8\u8350\u7b97\u6cd5\u3001\u76f8\u4f3c\u5ea6\u8ba1\u7b97\u3001\u8bed\u4e49\u504f\u79fb\u3001\u5173\u952e\u5b57\u63d0\u53d6\u3001\u6982\u5ff5\u63d0\u53d6\u3001\u81ea\u52a8\u6458\u8981\u3001\u641c\u7d22\u5f15\u64ce\u7b49\u3002\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a import synonyms synonyms . seg ( \"\u80fd\u91cf\" ) 23. wtfpython \uff1a\u6709\u8da3\u3001\u4ee4\u4eba\u60ca\u8bb6\uff08\u5751\u7239\uff09\u3001\u9c9c\u4e3a\u4eba\u77e5\u7684 Python \u4ee3\u7801\u7247\u6bb5\u96c6\u5408\u3002 24. tqdm \uff1a\u5f3a\u5927\u3001\u5feb\u901f\u3001\u6613\u6269\u5c55\u7684 Python \u8fdb\u5ea6\u6761\u5e93\u3002\u6211\u60f3\u901a\u8fc7\u4e0b\u9762\u7684\u793a\u4f8b\u4ee3\u7801\u548c\u6548\u679c\u5c55\u793a\u56fe\uff0c\u4f60\u4f1a\u8dd1\u53bb\u7ed9\u8fd9\u4e2a\u9879\u76ee\u6765\u4e2a Star \u7684 from tqdm import tqdm for i in tqdm ( range ( 10000 )): pass # \u8f93\u51fa\u7ed3\u679c\uff1a # 76%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 7568/10000 [00:33<00:10, 229.00it/s] 25. youtube-dl \uff1a\u5f3a\u5927\u7684\u89c6\u9891\u4e0b\u8f7d\u5de5\u5177\uff0c\u652f\u6301\u51e0\u767e\u4e2a\u56fd\u5185\u5916\u4e3b\u6d41\u89c6\u9891\u7f51\u7ad9\u3002\u6b63\u5982\u540d\u5b57\u4e00\u6837\uff0c\u6700\u521d\u662f\u4e3a\u4e86\u4e0b\u8f7d youtube \u4e0a\u7684\u89c6\u9891\u800c\u5f00\u53d1\u7684\u3002\u5982\u679c\u6709\u56fd\u5916\u670d\u52a1\u5668\u7684\u670b\u53cb\uff0c\u53ef\u4ee5\u5145\u5206\u5229\u7528\u8fd9\u4e2a\u5de5\u5177\uff0c\u4e0b\u8f7d youtube \u4e0a\u7684\u89c6\u9891\uff0c\u901f\u5ea6\u4e0d\u8981\u592a\u723d\u3002\u4e0b\u9762\u4ecb\u7ecd\u5b89\u88c5\u3001\u4e0b\u8f7d\u89c6\u9891\u7b49\u547d\u4ee4\uff1a # 1. \u5b89\u88c5\u547d\u4ee4\uff1asudo pip install youtube-dl Installing collected packages : youtube - dl Successfully installed youtube - dl - 2017.12.14 # 2. \u67e5\u770b URL \u652f\u6301\u683c\u5f0f\uff1ayoutube-dl --list-formats URL format code extension resolution note 134 mp4 450 x360 DASH video 449 k , avc1 .4 d4015 , 25 fps , video only 17 3 gp 176 x144 small , mp4v .20.3 , mp4a .40.2 @ 24 k 36 3 gp 300 x240 small , mp4v .20.3 , mp4a .40.2 18 mp4 450 x360 medium , avc1 .42001 E , mp4a .40.2 @ 96 k 43 webm 640 x360 medium , vp8 .0 , vorbis @ 128 k ( best ) # 3. \u9009\u62e9\u683c\u5f0f\u4e0b\u8f7d\u89c6\u9891\uff1ayoutube-dl -f 18 URL \uff0818\u4e3amp4 450x360\u683c\u5f0f\uff09 [ youtube : playlist ] Downloading playlist PLF90USSyuoYzPhhFG7XFBRn63Zvs -- lNP - add -- no - playlist to just download video JyLducMVYVg [ youtube : playlist ] PLF90USSyuoYzPhhFG7XFBRn63Zvs -- lNP : Downloading webpage [ download ] Downloading playlist : \u60c5\u6ee1\u56db\u5408\u9662\u5b8c\u6574\u7248 [ youtube : playlist ] playlist \u60c5\u6ee1\u56db\u5408\u9662\u5b8c\u6574\u7248 : Downloading 42 videos [ download ] Downloading video 1 of 42 ... # 4. \u4e0b\u8f7d\u5b8c\u6210\u540e\uff0c\u6700\u540e\u4f7f\u7528 https://github.com/houtianze/bypy \u5e93\u628a\u4e0b\u8f7d\u7684\u89c6\u9891\u540c\u6b65\u5230\u767e\u5ea6\u7f51\u76d8\u4e0a 26. pandas-tutorial \uff1a\u8fd9\u5957 pandas \u6559\u7a0b\u5305\u542b\u4ece\u521d\u7ea7\u5230\u8fdb\u9636\u7684\u5185\u5bb9\uff0c\u9002\u5408\u521d\u5b66\u8005\u548c\u5e0c\u671b\u8fdb\u9636\u5efa\u7acb\u77e5\u8bc6\u4f53\u7cfb\u7684\u6570\u636e\u79d1\u5b66\u4ece\u4e1a\u8005\u9605\u8bfb\u3002\u4f5c\u8005\u8fd8\u5728\u6301\u7eed\u66f4\u65b0\u9ad8\u7ea7\u5185\u5bb9\uff0c\u4f60\u503c\u5f97\u62e5\u6709\uff01 27. pysheeet \uff1aPython \u901f\u67e5\u8868\u3002 28. ItChat \uff1a\u5f00\u6e90\u7684\u5fae\u4fe1\u4e2a\u4eba\u53f7SDK\uff0c\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u529f\u80fd\u3002\u4ece\u800c\u4f7f\u5f97 Python \u8c03\u7528\u5fae\u4fe1\u3001\u53d1\u9001\u6d88\u606f\u3001\u4f20\u8f93\u6587\u4ef6\u7b49\u64cd\u4f5c\u53ea\u9700\u8981\u7f16\u5199\u6781\u5c11\u7684\u4ee3\u7801\uff0c\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a import itchat itchat . auto_login () itchat . send ( 'Hello, filehelper' , toUserName = 'filehelper' ) 29. pygorithm \uff1a\u4e00\u4e2a\u5e2e\u52a9\u5b66\u4e60\u4e3b\u8981\u7b97\u6cd5\u7684\u5e93\uff0c\u53ef\u4ee5\u901a\u8fc7\u7406\u89e3\u8fd9\u4e9b\u7b97\u6cd5\u7684\u5b9e\u73b0\uff0c\u63d0\u9ad8\u81ea\u5df1\u7684\u7b97\u6cd5\u6c34\u5e73\u3002 30. faker \uff1a\u7528\u4e8e\u751f\u6210\u5047\u6570\u636e\u7684\u5e93\uff0c\u652f\u6301\u591a\u79cd\u8bed\u8a00\uff0c\u4f60\u503c\u5f97\u62e5\u6709\u3002\u793a\u4f8b\u4ee3\u7801\uff1a fake . address () # '\u8fbd\u5b81\u7701\u96ea\u5e02\u9759\u5b89\u5ec9\u8857b\u5ea7 998259' fake . street_address () # '\u5de2\u6e56\u8857U\u5ea7' fake . building_number () # 'x\u5ea7' fake . city_suffix () # '\u5e02' fake . latitude () # Decimal('-0.295126') fake . province () # '\u6e56\u5317\u7701' 31. proxy_pool \uff1a\u57fa\u4e8e Python \u7684\u81ea\u5efa\u4ee3\u7406 IP \u6c60\u670d\u52a1\uff0c\u901a\u8fc7\u7f51\u7edc\u722c\u866b\u6293\u53d6\u4e92\u8054\u7f51\u4e0a\u514d\u8d39\u7684\u4ee3\u7406 IP\uff0c\u672c\u5730\u6821\u9a8c\u3001\u5254\u9664\u5931\u6548\u7684\u4ee3\u7406IP\uff0c\u4ece\u800c\u5b9e\u73b0\u9ad8\u53ef\u7528\u7684\u4ee3\u7406 IP \u6c60\u3002\u6700\u540e\u4f7f\u7528 Flask \u642d\u5efa\u63d0\u4f9b\u4ee3\u7406 IP \u670d\u52a1\uff0c\u5305\u62ec\u4ee3\u7406\u6c60\u5237\u65b0\u3001\u65e0\u6548\u4ee3\u7406\u5220\u9664\u3001\u4ee3\u7406\u83b7\u53d6\u7b49\u3002\u8be5\u9879\u76ee\u8bbe\u8ba1\u6587\u6863\u8be6\u7ec6\u3001\u6a21\u5757\u7ed3\u6784\u7b80\u660e\u6613\u61c2\uff0c\u540c\u65f6\u9002\u5408\u722c\u866b\u65b0\u624b\u66f4\u597d\u7684\u5b66\u4e60\u722c\u866b\u6280\u672f\u3002 32. getproxy \uff1a\u6781\u7b80\u7684\u6293\u53d6\u4ee3\u7406\u9879\u76ee\uff0c\u65e0\u9700\u914d\u7f6e\u3002\u4e0d\u4ec5\u63d0\u4f9b\u4e86\u83b7\u53d6\u4ee3\u7406\u811a\u672c\uff0c\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7 \u8be5\u9875\u9762 \uff0c\u76f4\u63a5\u83b7\u53d6\u53ef\u7528\u4ee3\u7406\uff0815min \u66f4\u65b0\u3001\u7c7b\u578b\u5305\u542bhttp\u548chttps\uff09\u3002 33. syncPlaylist \uff1a\u5728\u7f51\u6613\u4e91\u97f3\u4e50\u4e0e QQ \u97f3\u4e50\u4e4b\u95f4\u540c\u6b65\u6b4c\u5355\u3002\u6613\u4e8e\u4f7f\u7528\u3001\u914d\u7f6e\u65b9\u4fbf\u3001\u4ee3\u7801\u7b80\u5355\uff0c\u7528\u5230\u7684\u6280\u672f\uff1a requests + beautifulsoup \u4ee5\u53ca selenium + phantomjs 34. django-blog-tutorial \uff1a\u57fa\u4e8e\u6700\u65b0\u7248 Django 1.10 \u548c Python 3.5\uff0c\u901a\u8fc7 26 \u7bc7\u6559\u7a0b\u4e00\u6b65\u6b65\u5e26\u4f60\u4f7f\u7528 Django \u4ece\u96f6\u5f00\u53d1\u4e00\u4e2a\u4e2a\u4eba\u535a\u5ba2\u7cfb\u7edf\uff0c\u5728\u5b9e\u8df5\u7684\u540c\u65f6\u638c\u63e1 Django \u7684\u5f00\u53d1\u6280\u5de7\u3002 35. snake \uff1a\u8d2a\u5403\u86c7\u6e38\u620f AI \u7248\uff0c\u901a\u8fc7\u7b97\u6cd5\u5b9e\u73b0\u8ba9\u5c0f\u86c7\u901a\u8fc7\u5403\u8c46\uff0c\u6700\u540e\u86c7\u7684\u8eab\u4f53\u586b\u6ee1\u6574\u4e2a\u5730\u56fe\u7b97\u7ed3\u675f\u3002\u8be5\u9879\u76ee\u8be6\u7ec6\u63cf\u8ff0\u5b9e\u73b0\u601d\u60f3\u4ee5\u53ca\u76f8\u5173\u7b97\u6cd5\u7684\u8ba8\u8bba\u3002 36. algorithms \uff1a\u57fa\u672c\u7b97\u6cd5\u3001\u6570\u636e\u7ed3\u6784\u7684 Python \u5b9e\u73b0 \u3002 37. searx \uff1a\u5206\u5206\u949f\u6253\u9020\u4e00\u4e2a\u805a\u5408\u7684\u641c\u7d22\u5f15\u64ce\uff0c\u4f7f\u7528\u7b80\u5355\uff0c\u90e8\u7f72\u65b9\u4fbf\u3002\u62d3\u5c55\u65b9\u4fbf\uff0c\u57fa\u4e8e\u63d2\u4ef6\u5f0f\u7684\u7ba1\u7406\u3002 38. sh \uff1ash \u662f\u4e00\u4e2a\u6210\u719f\uff0c\u7528\u4e8e\u66ff\u4ee3 subprocess\uff0c\u5b83\u5141\u8bb8\u4f60\u8c03\u7528\u4efb\u4f55\u7a0b\u5e8f\uff0c\u5c31\u50cf\u5b83\u662f\u4e00\u4e2a\u51fd\u6570\uff0c\u652f\u6301 Python2.6 - 3.5\u3002 from sh import ifconfig print ifconfig ( \"eth0\" ) 39. saythanks.io \uff1aKennethreitz \u5199\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u7f51\u7ad9\uff08\u57fa\u4e8e Flask\uff09\uff0c\u7528\u4e8e\u5411\u5f00\u6e90\u9879\u76ee\u4f5c\u8005\u53d1\u9001\u611f\u8c22\u90ae\u4ef6\u7684 Web App\u3002\u8be5\u9879\u76ee\u7ed3\u6784\u7b80\u5355\uff0c\u53ef\u4ee5\u7528\u6765\u5b66\u4e60\u5927\u795e\u662f\u5982\u4f55\u5feb\u901f\u5f00\u53d1 Web \u9879\u76ee\u3001\u65b9\u6cd5\u3001\u4ee3\u7801\u98ce\u683c\u3001\u5f00\u53d1\u5e38\u7528\u5e93\u3002 40. fake-useragent \uff1a\u4f2a\u88c5\u6d4f\u89c8\u5668\u8eab\u4efd\uff0c\u5e38\u7528\u4e8e\u722c\u866b\u3002\u8fd9\u4e2a\u9879\u76ee\u7684\u4ee3\u7801\u5f88\u5c11\uff0c\u53ef\u4ee5\u9605\u8bfb\u4e00\u4e0b\uff0c\u770b\u770b ua.random \u662f\u5982\u4f55\u8fd4\u56de\u968f\u673a\u7684\u6d4f\u89c8\u5668\u8eab\u4efd\u7684 \uff0c\u793a\u4f8b\u4ee3\u7801\uff1a from fake_useragent import UserAgent ua = UserAgent () ua . ie # Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US); ua . msie # Mozilla/5.0 (compatible; MSIE 10.0; Macintosh; Intel Mac OS X 10_7_3; Trident/6.0)' ua [ 'Internet Explorer' ] # Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.1; Trident/4.0; GTB7.4; InfoPath.2; SV1; .NET CLR 3.3.69573; WOW64; en-US) ua . opera # Opera/9.80 (X11; Linux i686; U; ru) Presto/2.8.131 Version/11.11 ua . chrome # Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.2 (KHTML, like Gecko) Chrome/22.0.1216.0 Safari/537.2' ua . google # Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_4) AppleWebKit/537.13 (KHTML, like Gecko) Chrome/24.0.1290.1 Safari/537.13 ua [ 'google chrome' ] # Mozilla/5.0 (X11; CrOS i686 2268.111.0) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.57 Safari/536.11 ua . firefox # Mozilla/5.0 (Windows NT 6.2; Win64; x64; rv:16.0.1) Gecko/20121011 Firefox/16.0.1 ua . ff # Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:15.0) Gecko/20100101 Firefox/15.0.1 ua . safari # Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25 # and the best one, random via real world browser usage statistic ua . random 41. textfilter \uff1a\u57fa\u4e8e\u67d0 1w \u8bcd\u654f\u611f\u8bcd\u5e93\uff0c\u7528 Python \u5b9e\u73b0\u51e0\u79cd\u4e0d\u540c\u7684\u8fc7\u6ee4\u65b9\u5f0f\u3002 \u7528\u4e8e\u8fc7\u6ee4\u654f\u611f\u8bcd\u7684\u5b9e\u7528\u6a21\u5757 \uff0c\u793a\u4f8b\u4ee3\u7801\uff1a from filter import DFAFilter gfw = DFAFilter () gfw . parse ( \"keywords\" ) print \"\u5f85\u8fc7\u6ee4\uff1a\u552e\u5047\u4eba\u6c11\u5e01 \u6211\u64cd\u64cd\u64cd\" print \"\u8fc7\u6ee4\u540e\uff1a\" , gfw . filter ( \"\u552e\u5047\u4eba\u6c11\u5e01 \u6211\u64cd\u64cd\u64cd\" , \"*\" ) test_first_character () # \u8fd0\u884c\u7ed3\u679c # \u5f85\u8fc7\u6ee4\uff1a\u552e\u5047\u4eba\u6c11\u5e01 \u6211\u64cd\u64cd\u64cd # \u8fc7\u6ee4\u540e\uff1a \u552e\u5047**\u5e01 **** 43. python-guide \uff1aRequests \u5e93\u7684\u4f5c\u8005\u2014\u2014kennethreitz\uff0c\u5199\u7684 Python \u5165\u95e8\u6559\u7a0b\u3002\u4e0d\u5355\u5355\u662f\u8bed\u6cd5\u5c42\u9762\u7684\uff0c\u6db5\u76d6\u9879\u76ee\u7ed3\u6784\u3001\u4ee3\u7801\u98ce\u683c\uff0c\u8fdb\u9636\u3001\u5de5\u5177\u7b49\u65b9\u65b9\u9762\u9762\u3002\u867d\u7136\u662f**\u82f1\u6587\u7248**( \u4e2d\u6587\u7ffb\u8bd1\u7248 )\uff0c\u4f46\u6211\u8fd9\u4e2a\u82f1\u8bed\u6e23\u90fd\u80fd\u770b\u61c2\uff0c\u4f60\u80af\u5b9a\u4e5f\u53ef\u4ee5\uff0c\u5feb\u53bb\u770b\u770b\u5427\uff0c\u5f00\u5377\u6709\u76ca\u3002 44. d2l-zh \uff0c\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60 & pytorch\u7248\u672c\uff1aDive-into-DL-PyTorch","title":"\u5176\u4ed6\u5e38\u7528\u5de5\u5177"},{"location":"06-third-part-lib/%E5%B8%B8%E7%94%A8%E7%9A%84python%E5%BA%93/#_2","text":"https://github.com/521xueweihan/HelloGitHub","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"06-third-part-lib/%E6%A1%88%E4%BE%8B-Python%E5%8F%AF%E8%A7%86%E5%8C%96%E4%BA%A4%E9%80%9A%E6%8B%A5%E5%A0%B5%E6%83%85%E5%86%B5/","text":"Python\u53ef\u89c6\u5316\u4ea4\u901a\u62e5\u5835\u60c5\u51b5 \u00b6 \u524d\u8a00 \u00b6 \u7279\u522b\u8bf4\u660e\uff1a\u7531\u4e8e\u6570\u636e\u5177\u6709\u5b9e\u65f6\u6027\uff0c\u753b\u56fe\u65f6\u5df2\u7ecf\u8fc7\u4e86\u9ad8\u5cf0\u671f\uff0c\u4e8e\u662f\u56fe\u4e0a\u4e00\u7247\u7eff\u6cb9\u6cb9\u4e5f\u5e76\u4e0d\u5947\u602a\u3002 \u6709\u611f\u5174\u8da3\u7684\u5ba2\u5b98\uff0c\u60a8\u63a5\u7740\u5f80\u4e0b\u770b\uff0c\u5f85\u6211\u7ed9\u60a8\u6162\u6162\u5206\u89e3\u3002\uff08ps.\u6d89\u53ca\u5230**\u722c\u866b**\u3001 pyecharts \u3001**flask**\u7b49\uff09 \u4e00\u3001\u722c\u53d6\u62e5\u5835\u6307\u6570 \u00b6 \u67d0\u5ea6\u667a\u6167\u4ea4\u901a\u63d0\u4f9b\u4e86\u5404\u4e2a\u57ce\u5e02\u7684\u62e5\u5835\u6307\u6570\u7684\u6570\u636e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u51e0\u884c\u4ee3\u7801\u4fbf\u53ef\u8f7b\u677e\u6293\u53d6\uff1a # \u83b7\u53d6\u5404\u57ce\u5e02\u7684\u62e5\u5835\u6307\u6570 url = 'https://jiaotong.baidu.com/trafficindex/city/list' # \u63a5\u53e3api res = requests . get ( url ) data = res . json () \u5176\u4e2d\uff0curl\u4e3a\u83b7\u53d6\u6570\u636e\u7684\u63a5\u53e3\u5730\u5740\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u6293\u5305\u5206\u6790\u4fbf\u80fd\u77e5\u9053\u3002\u800cdata\u4e3a\u8fd4\u56de\u540e\u7684\u6570\u636e\uff0c\u5b83\u5305\u62ec\u5f88\u591a\u5b57\u6bb5\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u9700\u8981\u63d0\u53d6\u5176\u4e2d\u7684**\u57ce\u5e02\u540d**\u548c**\u62e5\u5835\u6307\u6570**\u5373\u53ef\uff1a # \u63d0\u53d6\u6570\u636e citys = [ i [ 'cityname' ] for i in data [ 'data' ][ 'list' ]] # \u63d0\u53d6\u57ce\u5e02 indexs = [ float ( i [ 'index' ]) for i in data [ 'data' ][ 'list' ]] # \u63d0\u53d6\u5bf9\u5e94\u7684\u6307\u6570 \u6709\u4e86\u6570\u636e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5176\u53ef\u89c6\u5316\u5c55\u793a\u51fa\u6765\u3002 \u4e8c\u3001\u6570\u636e\u53ef\u89c6\u5316 \u00b6 \u5229\u7528\u53ef\u89c6\u5316\u795e\u5668pyecharts\u5e93\u7ed8\u5236\u5730\u56fe\uff0c\u5e76\u5c06\u57ce\u5e02\u4ee5\u53ca\u5bf9\u5e94\u7684\u62e5\u5835\u6307\u6570\u8868\u793a\u51fa\u6765\u3002\u5176\u5b89\u88c5\u5982\u4e0b\uff1a pip install pyecharts \u90e8\u5206\u7248\u672c\u9700\u8981\u518d\u5b89\u88c5\u989d\u5916\u7684\u5730\u56fe\u5e93\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a pip install echarts-countries-pypkg pip install echarts-cities-pypkg pip install echarts-china-provinces-pypkg pip install echarts-china-cities-pypkg \u9996\u5148\u5b9a\u4e49\u5730\u56fe\uff1a geo = Geo () geo . add_schema ( maptype = 'china' ) # \u52a0\u5165\u4e2d\u56fd\u5730\u56fe \u6dfb\u52a0\u6570\u636e\u5e76\u8fdb\u884c\u76f8\u5173\u8bbe\u7f6e\uff1a geo . add ( '\u5404\u57ce\u5e02\u62e5\u5835\u6307\u6570' , zip ( citys , indexs ), type_ = 'effectScatter' ) # \u8bbe\u7f6e\u5730\u56fe\u7c7b\u578b\u53ca\u6570\u636e geo . set_series_opts ( label_opts = opts . LabelOpts ( is_show = False )) #\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u6807\u7b7e \u6839\u636e\u62e5\u5835\u6307\u6570\u7684\u5927\u5c0f\u8fdb\u884c\u5206\u7c7b\uff0c\u5206\u522b\u4e3a\u7545\u901a\u3001\u7f13\u884c\u3001\u62e5\u5835\u3001\u4e25\u91cd\u62e5\u5835\uff1a geo . set_global_opts ( visualmap_opts = opts . VisualMapOpts ( #max_ = 2.5, # \u7528\u4e8e\u8fde\u7eed\u8868\u793a is_piecewise = True , # \u662f\u5426\u5206\u6bb5 pieces = [{ 'min' : 1.0 , 'max' : 1.5 , 'label' : '\u7545\u901a' , 'color' : '#16CE95' }, { 'min' : 1.5 , 'max' : 1.8 , 'label' : '\u7f13\u884c' , 'color' : '#F79D06' }, { 'min' : 1.8 , 'max' : 2.0 , 'label' : '\u62e5\u5835' , 'color' : '#D80304' }, { 'min' : 2.0 , 'max' : 2.5 , 'label' : '\u4e25\u91cd\u62e5\u5835' , 'color' : '#8F0921' }])) # \u8bbe\u7f6e\u56fe\u4f8b\u663e\u793a \u6700\u540e\u5c06\u5730\u56fe\u4fdd\u5b58\u5728\u672c\u5730\uff1a geo . render ( path = '\u5404\u57ce\u5e02\u62e5\u5835\u6307\u6570.html' ) \u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6587\u7ae0\u4e00\u5f00\u59cb\u770b\u5230\u7684\u90a3\u5f20\u56fe~ \u7136\u800c\uff0c\u7531\u4e8e\u62e5\u5835\u6570\u636e\u662f\u5b9e\u65f6\u53d8\u5316\u7684\uff0c\u5982\u679c\u6211\u6bcf\u6b21\u90fd\u8981\u53bb\u8fd0\u884c\u4e00\u6b21\u4ee3\u7801\u5c82\u4e0d\u662f\u5f88\u9ebb\u70e6\uff1f\u5f88\u663e\u7136\uff0c\u673a\u667a\u7684\u793e\u4f1a\u4e3b\u4e49\u9752\u5e74\u662f\u4e0d\u4f1a\u8fd9\u4e48\u505a\u7684\uff0c\u60a8\u63a5\u7740\u5f80\u4e0b\u770b\u3002 \u4e09\u3001\u642d\u5efa\u5c55\u793a\u7f51\u7ad9 \u00b6 \u4e3a\u4e86\u66f4\u52a0\u65b9\u4fbf\u5730\u5c06\u5404\u57ce\u5e02\u62e5\u5835\u60c5\u51b5\u5c55\u793a\u51fa\u6765\uff0c\u6211\u51b3\u5b9a\u642d\u5efa\u4e00\u4e2a\u7528\u4e8e\u5c55\u793a\u7684\u7f51\u7ad9\u3002\u65b9\u6cd5\u53ef\u4ee5\u662f\u5404\u5f0f\u5404\u6837\u7684\uff0c\u5728\u8fd9\u91cc\u6211\u9009\u62e9\u4e86\u5229\u7528**flask\u6846\u67b6**\uff0c\u7b80\u5355\u5feb\u6377~ \u6211\u7684\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b: # -*- coding: utf-8 -*- \"\"\" Created on Sun Nov 15 01:34:36 2020 @author: kimol_love \"\"\" import requests from pyecharts.charts import Geo from pyecharts import options as opts from flask import Flask , render_template def get_data (): ''' \u83b7\u53d6\u62e5\u5835\u6307\u6570 ''' # \u83b7\u53d6\u5404\u57ce\u5e02\u7684\u62e5\u5835\u6307\u6570 url = 'https://jiaotong.baidu.com/trafficindex/city/list' # \u63a5\u53e3api res = requests . get ( url ) data = res . json () # \u63d0\u53d6\u6570\u636e citys = [ i [ 'cityname' ] for i in data [ 'data' ][ 'list' ]] # \u63d0\u53d6\u57ce\u5e02 indexs = [ float ( i [ 'index' ]) for i in data [ 'data' ][ 'list' ]] # \u63d0\u53d6\u5bf9\u5e94\u7684\u6307\u6570 # \u8fd4\u56de\u6570\u636e return zip ( citys , indexs ) def get_geo (): ''' \u83b7\u53d6\u5730\u56fe ''' # \u83b7\u53d6\u5404\u57ce\u5e02\u7684\u62e5\u5835\u6307\u6570 data = get_data () # \u7ed8\u5236\u6563\u70b9\u5206\u5e03\u56fe geo = Geo () geo . add_schema ( maptype = 'china' ) # \u52a0\u5165\u4e2d\u56fd\u5730\u56fe geo . add ( '\u5404\u57ce\u5e02\u62e5\u5835\u6307\u6570 by kimol' , data , type_ = 'effectScatter' ) # \u8bbe\u7f6e\u5730\u56fe\u7c7b\u578b\u53ca\u6570\u636e geo . set_series_opts ( label_opts = opts . LabelOpts ( is_show = False )) #\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u6807\u7b7e geo . set_global_opts ( visualmap_opts = opts . VisualMapOpts ( #max_ = 2.5, # \u7528\u4e8e\u8fde\u7eed\u8868\u793a is_piecewise = True , # \u662f\u5426\u5206\u6bb5 pieces = [{ 'min' : 1.0 , 'max' : 1.5 , 'label' : '\u7545\u901a' , 'color' : '#16CE95' }, { 'min' : 1.5 , 'max' : 1.8 , 'label' : '\u7f13\u884c' , 'color' : '#F79D06' }, { 'min' : 1.8 , 'max' : 2.0 , 'label' : '\u62e5\u5835' , 'color' : '#D80304' }, { 'min' : 2.0 , 'max' : 2.5 , 'label' : '\u4e25\u91cd\u62e5\u5835' , 'color' : '#8F0921' }])) # \u8bbe\u7f6e\u56fe\u4f8b\u663e\u793a # \u8fd4\u56de\u5730\u56fe return geo # \u5b9a\u4e49app app = Flask ( __name__ ) # \u5b9a\u4e49\u4e3b\u754c\u9762 @app . route ( \"/\" ) def hello (): geo = get_geo () return render_template ( 'geo.html' , mygeo = geo . render_embed ()) if __name__ == \"__main__\" : #\u8fd0\u884c\u9879\u76ee app . run () \u5176\u4e2d\uff0cget_geo()\u4e3a\u83b7\u53d6\u5730\u56fe\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u4e86pyecharts\u7ed8\u5236\u7684\u5730\u56fe\u3002\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u521b\u5efa**templates**\u6587\u4ef6\u5939\uff0c\u5e76\u521b\u5efa\u6a21\u5757\u6587\u4ef6**geo.html**\uff0c\u5982\u4e0b\uff1a <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" > < title > \u5404\u57ce\u5e02\u4ea4\u901a\u62e5\u5835\u6307\u6570 </ title > </ head > < body > {{mygeo|safe}} </ body > </ html > \u81f3\u6b64\uff0c\u8bbf\u95ee\u7f51\u7ad9\u5730\u5740\u5373\u53ef\u770b\u5230\u7ed8\u5236\u7684\u62e5\u5835\u60c5\u51b5\u5730\u56fe~","title":"\u6848\u4f8b-Python\u53ef\u89c6\u5316\u4ea4\u901a\u62e5\u5835\u60c5\u51b5"},{"location":"06-third-part-lib/%E6%A1%88%E4%BE%8B-Python%E5%8F%AF%E8%A7%86%E5%8C%96%E4%BA%A4%E9%80%9A%E6%8B%A5%E5%A0%B5%E6%83%85%E5%86%B5/#python","text":"","title":"Python\u53ef\u89c6\u5316\u4ea4\u901a\u62e5\u5835\u60c5\u51b5"},{"location":"06-third-part-lib/%E6%A1%88%E4%BE%8B-Python%E5%8F%AF%E8%A7%86%E5%8C%96%E4%BA%A4%E9%80%9A%E6%8B%A5%E5%A0%B5%E6%83%85%E5%86%B5/#_1","text":"\u7279\u522b\u8bf4\u660e\uff1a\u7531\u4e8e\u6570\u636e\u5177\u6709\u5b9e\u65f6\u6027\uff0c\u753b\u56fe\u65f6\u5df2\u7ecf\u8fc7\u4e86\u9ad8\u5cf0\u671f\uff0c\u4e8e\u662f\u56fe\u4e0a\u4e00\u7247\u7eff\u6cb9\u6cb9\u4e5f\u5e76\u4e0d\u5947\u602a\u3002 \u6709\u611f\u5174\u8da3\u7684\u5ba2\u5b98\uff0c\u60a8\u63a5\u7740\u5f80\u4e0b\u770b\uff0c\u5f85\u6211\u7ed9\u60a8\u6162\u6162\u5206\u89e3\u3002\uff08ps.\u6d89\u53ca\u5230**\u722c\u866b**\u3001 pyecharts \u3001**flask**\u7b49\uff09","title":"\u524d\u8a00"},{"location":"06-third-part-lib/%E6%A1%88%E4%BE%8B-Python%E5%8F%AF%E8%A7%86%E5%8C%96%E4%BA%A4%E9%80%9A%E6%8B%A5%E5%A0%B5%E6%83%85%E5%86%B5/#_2","text":"\u67d0\u5ea6\u667a\u6167\u4ea4\u901a\u63d0\u4f9b\u4e86\u5404\u4e2a\u57ce\u5e02\u7684\u62e5\u5835\u6307\u6570\u7684\u6570\u636e\uff0c\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7\u51e0\u884c\u4ee3\u7801\u4fbf\u53ef\u8f7b\u677e\u6293\u53d6\uff1a # \u83b7\u53d6\u5404\u57ce\u5e02\u7684\u62e5\u5835\u6307\u6570 url = 'https://jiaotong.baidu.com/trafficindex/city/list' # \u63a5\u53e3api res = requests . get ( url ) data = res . json () \u5176\u4e2d\uff0curl\u4e3a\u83b7\u53d6\u6570\u636e\u7684\u63a5\u53e3\u5730\u5740\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u6293\u5305\u5206\u6790\u4fbf\u80fd\u77e5\u9053\u3002\u800cdata\u4e3a\u8fd4\u56de\u540e\u7684\u6570\u636e\uff0c\u5b83\u5305\u62ec\u5f88\u591a\u5b57\u6bb5\uff0c\u4f46\u662f\u6211\u4eec\u53ea\u9700\u8981\u63d0\u53d6\u5176\u4e2d\u7684**\u57ce\u5e02\u540d**\u548c**\u62e5\u5835\u6307\u6570**\u5373\u53ef\uff1a # \u63d0\u53d6\u6570\u636e citys = [ i [ 'cityname' ] for i in data [ 'data' ][ 'list' ]] # \u63d0\u53d6\u57ce\u5e02 indexs = [ float ( i [ 'index' ]) for i in data [ 'data' ][ 'list' ]] # \u63d0\u53d6\u5bf9\u5e94\u7684\u6307\u6570 \u6709\u4e86\u6570\u636e\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5176\u53ef\u89c6\u5316\u5c55\u793a\u51fa\u6765\u3002","title":"\u4e00\u3001\u722c\u53d6\u62e5\u5835\u6307\u6570"},{"location":"06-third-part-lib/%E6%A1%88%E4%BE%8B-Python%E5%8F%AF%E8%A7%86%E5%8C%96%E4%BA%A4%E9%80%9A%E6%8B%A5%E5%A0%B5%E6%83%85%E5%86%B5/#_3","text":"\u5229\u7528\u53ef\u89c6\u5316\u795e\u5668pyecharts\u5e93\u7ed8\u5236\u5730\u56fe\uff0c\u5e76\u5c06\u57ce\u5e02\u4ee5\u53ca\u5bf9\u5e94\u7684\u62e5\u5835\u6307\u6570\u8868\u793a\u51fa\u6765\u3002\u5176\u5b89\u88c5\u5982\u4e0b\uff1a pip install pyecharts \u90e8\u5206\u7248\u672c\u9700\u8981\u518d\u5b89\u88c5\u989d\u5916\u7684\u5730\u56fe\u5e93\uff0c\u65b9\u6cd5\u5982\u4e0b\uff1a pip install echarts-countries-pypkg pip install echarts-cities-pypkg pip install echarts-china-provinces-pypkg pip install echarts-china-cities-pypkg \u9996\u5148\u5b9a\u4e49\u5730\u56fe\uff1a geo = Geo () geo . add_schema ( maptype = 'china' ) # \u52a0\u5165\u4e2d\u56fd\u5730\u56fe \u6dfb\u52a0\u6570\u636e\u5e76\u8fdb\u884c\u76f8\u5173\u8bbe\u7f6e\uff1a geo . add ( '\u5404\u57ce\u5e02\u62e5\u5835\u6307\u6570' , zip ( citys , indexs ), type_ = 'effectScatter' ) # \u8bbe\u7f6e\u5730\u56fe\u7c7b\u578b\u53ca\u6570\u636e geo . set_series_opts ( label_opts = opts . LabelOpts ( is_show = False )) #\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u6807\u7b7e \u6839\u636e\u62e5\u5835\u6307\u6570\u7684\u5927\u5c0f\u8fdb\u884c\u5206\u7c7b\uff0c\u5206\u522b\u4e3a\u7545\u901a\u3001\u7f13\u884c\u3001\u62e5\u5835\u3001\u4e25\u91cd\u62e5\u5835\uff1a geo . set_global_opts ( visualmap_opts = opts . VisualMapOpts ( #max_ = 2.5, # \u7528\u4e8e\u8fde\u7eed\u8868\u793a is_piecewise = True , # \u662f\u5426\u5206\u6bb5 pieces = [{ 'min' : 1.0 , 'max' : 1.5 , 'label' : '\u7545\u901a' , 'color' : '#16CE95' }, { 'min' : 1.5 , 'max' : 1.8 , 'label' : '\u7f13\u884c' , 'color' : '#F79D06' }, { 'min' : 1.8 , 'max' : 2.0 , 'label' : '\u62e5\u5835' , 'color' : '#D80304' }, { 'min' : 2.0 , 'max' : 2.5 , 'label' : '\u4e25\u91cd\u62e5\u5835' , 'color' : '#8F0921' }])) # \u8bbe\u7f6e\u56fe\u4f8b\u663e\u793a \u6700\u540e\u5c06\u5730\u56fe\u4fdd\u5b58\u5728\u672c\u5730\uff1a geo . render ( path = '\u5404\u57ce\u5e02\u62e5\u5835\u6307\u6570.html' ) \u5230\u8fd9\u91cc\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6587\u7ae0\u4e00\u5f00\u59cb\u770b\u5230\u7684\u90a3\u5f20\u56fe~ \u7136\u800c\uff0c\u7531\u4e8e\u62e5\u5835\u6570\u636e\u662f\u5b9e\u65f6\u53d8\u5316\u7684\uff0c\u5982\u679c\u6211\u6bcf\u6b21\u90fd\u8981\u53bb\u8fd0\u884c\u4e00\u6b21\u4ee3\u7801\u5c82\u4e0d\u662f\u5f88\u9ebb\u70e6\uff1f\u5f88\u663e\u7136\uff0c\u673a\u667a\u7684\u793e\u4f1a\u4e3b\u4e49\u9752\u5e74\u662f\u4e0d\u4f1a\u8fd9\u4e48\u505a\u7684\uff0c\u60a8\u63a5\u7740\u5f80\u4e0b\u770b\u3002","title":"\u4e8c\u3001\u6570\u636e\u53ef\u89c6\u5316"},{"location":"06-third-part-lib/%E6%A1%88%E4%BE%8B-Python%E5%8F%AF%E8%A7%86%E5%8C%96%E4%BA%A4%E9%80%9A%E6%8B%A5%E5%A0%B5%E6%83%85%E5%86%B5/#_4","text":"\u4e3a\u4e86\u66f4\u52a0\u65b9\u4fbf\u5730\u5c06\u5404\u57ce\u5e02\u62e5\u5835\u60c5\u51b5\u5c55\u793a\u51fa\u6765\uff0c\u6211\u51b3\u5b9a\u642d\u5efa\u4e00\u4e2a\u7528\u4e8e\u5c55\u793a\u7684\u7f51\u7ad9\u3002\u65b9\u6cd5\u53ef\u4ee5\u662f\u5404\u5f0f\u5404\u6837\u7684\uff0c\u5728\u8fd9\u91cc\u6211\u9009\u62e9\u4e86\u5229\u7528**flask\u6846\u67b6**\uff0c\u7b80\u5355\u5feb\u6377~ \u6211\u7684\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b: # -*- coding: utf-8 -*- \"\"\" Created on Sun Nov 15 01:34:36 2020 @author: kimol_love \"\"\" import requests from pyecharts.charts import Geo from pyecharts import options as opts from flask import Flask , render_template def get_data (): ''' \u83b7\u53d6\u62e5\u5835\u6307\u6570 ''' # \u83b7\u53d6\u5404\u57ce\u5e02\u7684\u62e5\u5835\u6307\u6570 url = 'https://jiaotong.baidu.com/trafficindex/city/list' # \u63a5\u53e3api res = requests . get ( url ) data = res . json () # \u63d0\u53d6\u6570\u636e citys = [ i [ 'cityname' ] for i in data [ 'data' ][ 'list' ]] # \u63d0\u53d6\u57ce\u5e02 indexs = [ float ( i [ 'index' ]) for i in data [ 'data' ][ 'list' ]] # \u63d0\u53d6\u5bf9\u5e94\u7684\u6307\u6570 # \u8fd4\u56de\u6570\u636e return zip ( citys , indexs ) def get_geo (): ''' \u83b7\u53d6\u5730\u56fe ''' # \u83b7\u53d6\u5404\u57ce\u5e02\u7684\u62e5\u5835\u6307\u6570 data = get_data () # \u7ed8\u5236\u6563\u70b9\u5206\u5e03\u56fe geo = Geo () geo . add_schema ( maptype = 'china' ) # \u52a0\u5165\u4e2d\u56fd\u5730\u56fe geo . add ( '\u5404\u57ce\u5e02\u62e5\u5835\u6307\u6570 by kimol' , data , type_ = 'effectScatter' ) # \u8bbe\u7f6e\u5730\u56fe\u7c7b\u578b\u53ca\u6570\u636e geo . set_series_opts ( label_opts = opts . LabelOpts ( is_show = False )) #\u8bbe\u7f6e\u662f\u5426\u663e\u793a\u6807\u7b7e geo . set_global_opts ( visualmap_opts = opts . VisualMapOpts ( #max_ = 2.5, # \u7528\u4e8e\u8fde\u7eed\u8868\u793a is_piecewise = True , # \u662f\u5426\u5206\u6bb5 pieces = [{ 'min' : 1.0 , 'max' : 1.5 , 'label' : '\u7545\u901a' , 'color' : '#16CE95' }, { 'min' : 1.5 , 'max' : 1.8 , 'label' : '\u7f13\u884c' , 'color' : '#F79D06' }, { 'min' : 1.8 , 'max' : 2.0 , 'label' : '\u62e5\u5835' , 'color' : '#D80304' }, { 'min' : 2.0 , 'max' : 2.5 , 'label' : '\u4e25\u91cd\u62e5\u5835' , 'color' : '#8F0921' }])) # \u8bbe\u7f6e\u56fe\u4f8b\u663e\u793a # \u8fd4\u56de\u5730\u56fe return geo # \u5b9a\u4e49app app = Flask ( __name__ ) # \u5b9a\u4e49\u4e3b\u754c\u9762 @app . route ( \"/\" ) def hello (): geo = get_geo () return render_template ( 'geo.html' , mygeo = geo . render_embed ()) if __name__ == \"__main__\" : #\u8fd0\u884c\u9879\u76ee app . run () \u5176\u4e2d\uff0cget_geo()\u4e3a\u83b7\u53d6\u5730\u56fe\u7684\u51fd\u6570\uff0c\u8fd4\u56de\u4e86pyecharts\u7ed8\u5236\u7684\u5730\u56fe\u3002\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u521b\u5efa**templates**\u6587\u4ef6\u5939\uff0c\u5e76\u521b\u5efa\u6a21\u5757\u6587\u4ef6**geo.html**\uff0c\u5982\u4e0b\uff1a <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" > < title > \u5404\u57ce\u5e02\u4ea4\u901a\u62e5\u5835\u6307\u6570 </ title > </ head > < body > {{mygeo|safe}} </ body > </ html > \u81f3\u6b64\uff0c\u8bbf\u95ee\u7f51\u7ad9\u5730\u5740\u5373\u53ef\u770b\u5230\u7ed8\u5236\u7684\u62e5\u5835\u60c5\u51b5\u5730\u56fe~","title":"\u4e09\u3001\u642d\u5efa\u5c55\u793a\u7f51\u7ad9"},{"location":"06-third-part-lib/%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/","text":"\u722c\u866b \u00b6 \u5b66\u4e60\u7f51\u7edc\u722c\u866b\u7684\u5fc5\u5907\u6280\u672f\uff1a \u00b6 python http\u534f\u8bae html \u7528\u5230\u7684\u5e93\uff1a \u00b6 requests\uff08\u7528\u4e8ehttp\u8bf7\u6c42\uff09,beautifulsoup\uff08\u7528\u4e8e\u89e3\u6790\u7ed3\u679c\uff09 requests\u5b89\u88c5\u65b9\u5f0f\uff08\u4e00\u822c\u5df2\u7ecf\u5b89\u88c5\u597d\uff0c\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u597d\uff1aimport requests\uff09\uff1a 1.pip install requests 2.git clone git://github.com/kennethreitz/requests.git 3.curl -OL https://github.com/requests/requests/tarball/master request\u4ecb\u7ecd\uff1a https://2.python-requests.org//zh_CN/latest/user/quickstart.html beautifulsoup\u5b89\u88c5(\u9a8c\u8bc1\uff1a**from bs4 import BeautifulSoup )\uff1a** 1.\u4e0b\u8f7d\u5730\u5740\uff1a https://pypi.org/project/beautifulsoup4/#files 2.pip install bs4 beautifulsoup\u5b89\u88c5\u9047\u5230\u7684\u95ee\u9898\uff1a \u95ee\u9898\uff1a 1.bs4.FeatureNotFound: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library? pip install lxml 2.\u5982\u679c\u662f\u624b\u52a8\u4e0b\u8f7d\uff1a\u53ef\u80fd\u4f1a\u51fa\u73b0:/usr/lib/python2.7/site-packages/beautifulsoup4-4.7.1-py2.7.egg/bs4/element.py:16: UserWarning: The soupsieve package is not installed. CSS selectors cannot be used.'The soupsieve package is not installed. CSS selectors cannot be used.' \u624b\u52a8\u4e0b\u8f7d\u8fd9\u4e9b\u5305\uff0c\u6216\u8005\u6539\u7528pip install \u5b89\u88c5 \u5e93\u7684\u5165\u95e8\u4ecb\u7ecd\uff1a \u00b6 1.requests\u5e93\u7684\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5 import requests request = requests . get ( 'http://baidu.com' ) #type print type ( request ) print request . url print request . status_code print request . text #get cookie print request . cookies print ( type ( request . cookies )) for k , v in request . cookies . items (): print ( k + ':' + v ) #if content is type json #print request.json() #get params get_params = { 'wd' : 'qq' } request = requests . get ( \"http://www.baidu.com/s\" , params = get_params ) print request . text 2.beautifusoup\u7684\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5 from bs4 import BeautifulSoup html_doc = \"\"\" <html><head><title>Test BeautifulSoup</title></head> <body> <p class=\"title\"><b>Test BeautifulSoup</b></p> <p class=\"list\"> <a href=\"http://test1.com\" class=\"href\" id=\"item1\">test1</a> <a href=\"http://test2.com\" class=\"href\" id=\"item2\">test2</a> </p> <p class=\"content\">Test1 Test2 Test3 ...</p> \"\"\" html = BeautifulSoup ( html_doc , features = \"html.parser\" ) print \"result\" # Standard indentation format print ( html . prettify ()) print 'title:' , html . title print 'title_name:' , html . title . name print 'title_string:' , html . title . string print 'title_parent_name:' , html . title . parent . name print 'p:' , html . p print 'p_class:' , html . p [ 'class' ] print 'a:' , html . a print 'all_a:' , html . find_all ( 'a' ) print 'id=link3:' , html . find ( id = \"item1\" ) print 'a_href:' for link in html . find_all ( 'a' ): print ( link . get ( 'href' )) print \"all_text:\" , html . get_text () \u8d44\u6599\uff1a \u00b6 http\u72b6\u6001\u7801\uff1a https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81 requests\u6587\u6863\uff1a http://cn.python-requests.org/zh_CN/latest/ requests \u8be6\u7ec6\u4f7f\u7528\uff1a https://www.cnblogs.com/mzc1997/p/7813801.html beautifulsoup\u6587\u6863\uff1a https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.html","title":"\u722c\u866b\u6280\u672f\u4ecb\u7ecd"},{"location":"06-third-part-lib/%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/#_1","text":"","title":"\u722c\u866b"},{"location":"06-third-part-lib/%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/#_2","text":"python http\u534f\u8bae html","title":"\u5b66\u4e60\u7f51\u7edc\u722c\u866b\u7684\u5fc5\u5907\u6280\u672f\uff1a"},{"location":"06-third-part-lib/%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/#_3","text":"requests\uff08\u7528\u4e8ehttp\u8bf7\u6c42\uff09,beautifulsoup\uff08\u7528\u4e8e\u89e3\u6790\u7ed3\u679c\uff09 requests\u5b89\u88c5\u65b9\u5f0f\uff08\u4e00\u822c\u5df2\u7ecf\u5b89\u88c5\u597d\uff0c\u68c0\u67e5\u662f\u5426\u5b89\u88c5\u597d\uff1aimport requests\uff09\uff1a 1.pip install requests 2.git clone git://github.com/kennethreitz/requests.git 3.curl -OL https://github.com/requests/requests/tarball/master request\u4ecb\u7ecd\uff1a https://2.python-requests.org//zh_CN/latest/user/quickstart.html beautifulsoup\u5b89\u88c5(\u9a8c\u8bc1\uff1a**from bs4 import BeautifulSoup )\uff1a** 1.\u4e0b\u8f7d\u5730\u5740\uff1a https://pypi.org/project/beautifulsoup4/#files 2.pip install bs4 beautifulsoup\u5b89\u88c5\u9047\u5230\u7684\u95ee\u9898\uff1a \u95ee\u9898\uff1a 1.bs4.FeatureNotFound: Couldn't find a tree builder with the features you requested: lxml. Do you need to install a parser library? pip install lxml 2.\u5982\u679c\u662f\u624b\u52a8\u4e0b\u8f7d\uff1a\u53ef\u80fd\u4f1a\u51fa\u73b0:/usr/lib/python2.7/site-packages/beautifulsoup4-4.7.1-py2.7.egg/bs4/element.py:16: UserWarning: The soupsieve package is not installed. CSS selectors cannot be used.'The soupsieve package is not installed. CSS selectors cannot be used.' \u624b\u52a8\u4e0b\u8f7d\u8fd9\u4e9b\u5305\uff0c\u6216\u8005\u6539\u7528pip install \u5b89\u88c5","title":"\u7528\u5230\u7684\u5e93\uff1a"},{"location":"06-third-part-lib/%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/#_4","text":"1.requests\u5e93\u7684\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5 import requests request = requests . get ( 'http://baidu.com' ) #type print type ( request ) print request . url print request . status_code print request . text #get cookie print request . cookies print ( type ( request . cookies )) for k , v in request . cookies . items (): print ( k + ':' + v ) #if content is type json #print request.json() #get params get_params = { 'wd' : 'qq' } request = requests . get ( \"http://www.baidu.com/s\" , params = get_params ) print request . text 2.beautifusoup\u7684\u57fa\u672c\u4f7f\u7528\u65b9\u6cd5 from bs4 import BeautifulSoup html_doc = \"\"\" <html><head><title>Test BeautifulSoup</title></head> <body> <p class=\"title\"><b>Test BeautifulSoup</b></p> <p class=\"list\"> <a href=\"http://test1.com\" class=\"href\" id=\"item1\">test1</a> <a href=\"http://test2.com\" class=\"href\" id=\"item2\">test2</a> </p> <p class=\"content\">Test1 Test2 Test3 ...</p> \"\"\" html = BeautifulSoup ( html_doc , features = \"html.parser\" ) print \"result\" # Standard indentation format print ( html . prettify ()) print 'title:' , html . title print 'title_name:' , html . title . name print 'title_string:' , html . title . string print 'title_parent_name:' , html . title . parent . name print 'p:' , html . p print 'p_class:' , html . p [ 'class' ] print 'a:' , html . a print 'all_a:' , html . find_all ( 'a' ) print 'id=link3:' , html . find ( id = \"item1\" ) print 'a_href:' for link in html . find_all ( 'a' ): print ( link . get ( 'href' )) print \"all_text:\" , html . get_text ()","title":"\u5e93\u7684\u5165\u95e8\u4ecb\u7ecd\uff1a"},{"location":"06-third-part-lib/%E7%88%AC%E8%99%AB%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/#_5","text":"http\u72b6\u6001\u7801\uff1a https://zh.wikipedia.org/wiki/HTTP%E7%8A%B6%E6%80%81%E7%A0%81 requests\u6587\u6863\uff1a http://cn.python-requests.org/zh_CN/latest/ requests \u8be6\u7ec6\u4f7f\u7528\uff1a https://www.cnblogs.com/mzc1997/p/7813801.html beautifulsoup\u6587\u6863\uff1a https://www.crummy.com/software/BeautifulSoup/bs4/doc/index.html","title":"\u8d44\u6599\uff1a"},{"location":"06-third-part-lib/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E7%AE%80%E4%BB%8B/","text":"\u722c\u866b\u7cfb\u5217(\u4e00) \u7f51\u7edc\u722c\u866b\u7b80\u4ecb \u00b6 \u76ee\u5f55 \u00b6 \u722c\u866b\u7cfb\u5217(\u4e00) \u7f51\u7edc\u722c\u866b\u7b80\u4ecb \u722c\u866b\u7cfb\u5217(\u4e8c) Chrome\u6293\u5305\u5206\u6790 \u722c\u866b\u7cfb\u5217(\u4e09) urllib\u7684\u57fa\u672c\u4f7f\u7528 \u722c\u866b\u7cfb\u5217(\u56db) \u7528urllib\u5b9e\u73b0\u82f1\u8bed\u7ffb\u8bd1 \u722c\u866b\u7cfb\u5217(\u4e94) re\u7684\u57fa\u672c\u4f7f\u7528 \u722c\u866b\u7cfb\u5217(\u516d) \u7528urllib\u548cre\u722c\u53d6\u767e\u5ea6\u8d34\u5427 \u722c\u866b\u7cfb\u5217(\u4e03) requests\u7684\u57fa\u672c\u4f7f\u7528 \u722c\u866b\u7cfb\u5217(\u516b) \u7528requests\u5b9e\u73b0\u5929\u6c14\u67e5\u8be2 \u722c\u866b\u7cfb\u5217(\u4e5d) xpath\u7684\u57fa\u672c\u4f7f\u7528 \u722c\u866b\u7cfb\u5217(\u5341) \u7528requests\u548cxpath\u722c\u53d6\u8c46\u74e3\u7535\u5f71 \u722c\u866b\u7cfb\u5217(\u5341\u4e00) \u7528requests\u548cxpath\u722c\u53d6\u8c46\u74e3\u7535\u5f71\u8bc4\u8bba \u722c\u866b\u7cfb\u5217(\u5341\u4e8c) selenium\u7684\u57fa\u672c\u4f7f\u7528 \u722c\u866b\u7cfb\u5217(\u5341\u4e09) \u7528selenium\u722c\u53d6\u4eac\u4e1c\u5546\u54c1 \u5199\u5728\u524d\u9762\u7684\u8bdd \uff1a\u6700\u8fd1\u535a\u4e3b\u5728\u5b66\u4e60\u7f51\u7edc\u722c\u866b\u7684\u76f8\u5173\u6280\u672f\uff08\u57fa\u4e8e Python \u8bed\u8a00\uff09\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5b66\u4e60\u7684\u603b\u7ed3\uff0c\u6253\u7b97\u7528\u535a\u5ba2\u8bb0\u5f55\u4e0b\u6765\uff0c\u4e5f\u5e0c\u671b\u548c\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u81ea\u5df1\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u7684\u70b9\u70b9\u6ef4\u6ef4\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8ba9\u6211\u4eec\u9a6c\u4e0a\u5f00\u59cb\u5427 \u4e00\u3001\u722c\u866b\u57fa\u672c\u7b80\u4ecb \u4ec0\u4e48\u662f\u7f51\u7edc\u722c\u866b\uff0c\u8fd9\u91cc\u5148\u5f15\u7528\u4e00\u4e0b \u767e\u5ea6\u767e\u79d1 \u4e0a\u7684\u89e3\u6790\uff1a \u7f51\u7edc\u722c\u866b\u662f\u4e00\u79cd\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5219\uff0c\u81ea\u52a8\u5730\u6293\u53d6\u4e07\u7ef4\u7f51\u4fe1\u606f\u7684\u7a0b\u5e8f\u6216\u8005\u811a\u672c \u8bf4\u8d77\u7f51\u7edc\u722c\u866b\uff0c\u4eba\u4eec\u5e38\u5e38\u4f1a\u7528\u8fd9\u6837\u4e00\u4e2a\u6bd4\u55bb\uff1a\u5982\u679c\u628a\u4e92\u8054\u7f51\u6bd4\u55bb\u6210\u4e00\u5f20\u7f51\uff0c\u90a3\u4e48\u7f51\u7edc\u722c\u866b\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5728\u7f51\u4e0a\u722c\u6765\u722c\u53bb\u7684\u5c0f\u866b\u5b50\uff0c\u5b83\u901a\u8fc7\u7f51\u9875\u7684\u94fe\u63a5\u5730\u5740\u6765\u5bfb\u627e\u7f51\u9875\uff0c\u901a\u8fc7\u7279\u5b9a\u7684\u641c\u7d22\u7b97\u6cd5\u6765\u786e\u5b9a\u8def\u7ebf\uff0c\u901a\u5e38\u4ece\u7f51\u7ad9\u7684\u67d0\u4e00\u4e2a\u9875\u9762\u5f00\u59cb\uff0c\u8bfb\u53d6\u7f51\u9875\u7684\u5185\u5bb9\uff0c\u627e\u5230\u5728\u7f51\u9875\u4e2d\u7684\u5176\u5b83\u94fe\u63a5\u5730\u5740\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e9b\u94fe\u63a5\u5730\u5740\u5bfb\u627e\u4e0b\u4e00\u4e2a\u7f51\u9875\uff0c\u8fd9\u6837\u4e00\u76f4\u5faa\u73af\u4e0b\u53bb\uff0c\u76f4\u5230\u628a\u8fd9\u4e2a\u7f51\u7ad9\u6240\u6709\u7f51\u9875\u90fd\u6293\u53d6\u5b8c\u4e3a\u6b62 \u4e8c\u3001\u722c\u866b\u57fa\u672c\u539f\u7406 \u4e0b\u9762\u7684\u56fe\u7247\u5f88\u597d\u7684\u5c55\u73b0\u4e86\u4e00\u822c\u7f51\u7edc\u722c\u866b\u7684\u57fa\u672c\u8fc7\u7a0b\uff0c\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b\u8fd9\u5f20\u56fe\u7247\u7684\u542b\u4e49\u5427 1\u3001\u53d1\u9001\u8bf7\u6c42 \u722c\u866b\u7684\u7b2c\u4e00\u4e2a\u6b65\u9aa4\u5c31\u662f\u5bf9\u8d77\u59cb URL \u53d1\u9001\u8bf7\u6c42\uff0c\u4ee5\u83b7\u53d6\u5176\u8fd4\u56de\u7684\u54cd\u5e94 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u53d1\u9001\u8bf7\u6c42\u5b9e\u8d28\u4e0a\u662f\u6307\u53d1\u9001\u8bf7\u6c42\u62a5\u6587\u7684\u8fc7\u7a0b \u8bf7\u6c42\u62a5\u6587 \u5305\u62ec\u4ee5\u4e0b\u56db\u4e2a\u65b9\u9762\uff1a\u8bf7\u6c42\u884c\u3001\u8bf7\u6c42\u5934\u3001\u7a7a\u884c\u548c\u8bf7\u6c42\u4f53 \u4f46\u662f\uff0c\u5f80\u5f80\u5728\u4f7f\u7528 Python \u76f8\u5173\u7684\u7f51\u7edc\u8bf7\u6c42\u5e93\u53d1\u9001\u8bf7\u6c42\u65f6\uff0c\u53ea\u9700\u5173\u6ce8\u67d0\u4e9b\u7279\u6b8a\u7684\u90e8\u5206\u5373\u53ef\uff0c\u800c\u975e\u5b8c\u6574\u7684\u8bf7\u6c42\u62a5\u6587\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u4ee5\u7c97\u4f53\u7684\u5f62\u5f0f\u6807\u8bc6\u51fa\u6211\u4eec\u9700\u8981\u7279\u522b\u5173\u6ce8\u7684\u90e8\u5206 \uff081\uff09\u8bf7\u6c42\u884c \u8bf7\u6c42\u884c\u7531\u8bf7\u6c42\u65b9\u6cd5\u3001\u8bf7\u6c42 URL \u548c HTTP \u534f\u8bae\u7248\u672c 3 \u4e2a\u5b57\u6bb5\u7ec4\u6210\uff0c\u5b57\u6bb5\u95f4\u4f7f\u7528\u7a7a\u683c\u5206\u9694 \u2460 \u8bf7\u6c42\u65b9\u6cd5\uff1a\u8bf7\u6c42\u65b9\u6cd5\u662f\u6307\u5bf9\u76ee\u6807\u8d44\u6e90\u7684\u64cd\u4f5c\u65b9\u5f0f\uff0c\u5e38\u89c1\u7684\u6709 GET \u65b9\u6cd5\u548c POST \u65b9\u6cd5 GET\uff1a\u4ece\u6307\u5b9a\u7684\u8d44\u6e90\u8bf7\u6c42\u6570\u636e\uff0c\u67e5\u8be2\u5b57\u7b26\u4e32\u5305\u542b\u5728 URL \u4e2d\u53d1\u9001 POST\uff1a\u5411\u6307\u5b9a\u7684\u8d44\u6e90\u63d0\u4ea4\u8981\u88ab\u5904\u7406\u7684\u6570\u636e\uff0c\u67e5\u8be2\u5b57\u7b26\u4e32\u5305\u542b\u5728\u8bf7\u6c42\u4f53\u4e2d\u53d1\u9001 \u2461 \u8bf7\u6c42 URL\uff1a\u8bf7\u6c42 URL \u662f\u6307\u76ee\u6807\u7f51\u7ad9\u7684\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26 (Uniform Resource Locator\uff0cURL) \u2462 HTTP \u534f\u8bae\u7248\u672c\uff1aHTTP \u534f\u8bae\u662f\u6307\u901a\u4fe1\u53cc\u65b9\u5728\u901a\u4fe1\u6d41\u7a0b\u548c\u5185\u5bb9\u683c\u5f0f\u4e0a\u5171\u540c\u9075\u5b88\u7684\u6807\u51c6 \uff082\uff09\u8bf7\u6c42\u5934 \u8bf7\u6c42\u5934 \u88ab\u8ba4\u4e3a\u662f\u8bf7\u6c42\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u4ee5\u4e0b\u5217\u4e3e\u51fa\u5e38\u7528\u7684\u8bf7\u6c42\u5934\u4fe1\u606f\uff08\u6301\u7eed\u8865\u5145\u4e2d\uff09 User-Agent\uff1a\u5305\u542b\u53d1\u51fa\u8bf7\u6c42\u7684\u7528\u6237\u7684\u4fe1\u606f\uff0c\u8bbe\u7f6e User-Agent \u5e38\u7528\u4e8e\u5904\u7406\u53cd\u722c\u866b Cookie\uff1a\u5305\u542b\u5148\u524d\u8bf7\u6c42\u7684\u5185\u5bb9\uff0c\u8bbe\u7f6e Cookie \u5e38\u7528\u4e8e\u6a21\u62df\u767b\u9646 Referer\uff1a\u6307\u793a\u8bf7\u6c42\u7684\u6765\u6e90\uff0c\u7528\u4e8e\u53ef\u4ee5\u9632\u6b62\u94fe\u76d7\u4ee5\u53ca\u6076\u610f\u8bf7\u6c42 \uff083\uff09\u7a7a\u884c \u7a7a\u884c\u6807\u5fd7\u7740\u8bf7\u6c42\u5934\u7684\u7ed3\u675f \uff084\uff09\u8bf7\u6c42\u4f53 \u8bf7\u6c42\u4f53 \u6839\u636e\u4e0d\u540c\u7684\u8bf7\u6c42\u65b9\u6cd5\u5305\u542b\u4e0d\u540c\u7684\u5185\u5bb9 \u82e5\u8bf7\u6c42\u65b9\u6cd5\u4e3a GET\uff0c\u5219\u6b64\u9879\u4e3a\u7a7a\uff1b\u82e5\u8bf7\u6c42\u65b9\u6cd5\u4e3a POST\uff0c\u5219\u6b64\u9879\u4e3a\u5f85\u63d0\u4ea4\u7684\u6570\u636e\uff08\u5373\u8868\u5355\u6570\u636e\uff09 2\u3001\u83b7\u53d6\u54cd\u5e94 \u722c\u866b\u7684\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\u5c31\u662f\u83b7\u53d6\u7279\u5b9a URL \u8fd4\u56de\u7684\u54cd\u5e94\uff0c\u4ee5\u63d0\u53d6\u5305\u542b\u5728\u5176\u4e2d\u7684\u6570\u636e \u540c\u6837\u7684\uff0c\u54cd\u5e94\u5176\u5b9e\u662f\u6307\u5b8c\u6574\u54cd\u5e94\u62a5\u6587\uff0c\u5b83\u5305\u62ec\u56db\u4e2a\u90e8\u5206\uff1a\u54cd\u5e94\u884c\u3001\u54cd\u5e94\u5934\u3001\u7a7a\u884c\u548c\u54cd\u5e94\u4f53 \uff081\uff09\u54cd\u5e94\u884c \u54cd\u5e94\u884c\u7531 HTTP \u534f\u8bae\u7248\u672c\u3001\u72b6\u6001\u7801\u53ca\u5176\u63cf\u8ff0\u7ec4\u6210 \u2460 HTTP \u534f\u8bae\u7248\u672c\uff1aHTTP \u534f\u8bae\u662f\u6307\u901a\u4fe1\u53cc\u65b9\u5728\u901a\u4fe1\u6d41\u7a0b\u548c\u5185\u5bb9\u683c\u5f0f\u4e0a\u5171\u540c\u9075\u5b88\u7684\u6807\u51c6 \u2461 \u72b6\u6001\u7801\u53ca\u5176\u63cf\u8ff0 100~199\uff1a\u4fe1\u606f\uff0c\u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\uff0c\u9700\u8981\u8bf7\u6c42\u8005\u7ee7\u7eed\u6267\u884c\u64cd\u4f5c 200~299\uff1a\u6210\u529f\uff0c\u64cd\u4f5c\u88ab\u6210\u529f\u63a5\u6536\u5e76\u5904\u7406 300~399\uff1a\u91cd\u5b9a\u5411\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u64cd\u4f5c\u4ee5\u5b8c\u6210\u8bf7\u6c42 400~499\uff1a\u5ba2\u6237\u7aef\u9519\u8bef\uff0c\u8bf7\u6c42\u5305\u542b\u8bed\u6cd5\u9519\u8bef\u6216\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42 500~599\uff1a\u670d\u52a1\u5668\u9519\u8bef\uff0c\u670d\u52a1\u5668\u5728\u5904\u7406\u8bf7\u6c42\u7684\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef \uff082\uff09\u54cd\u5e94\u5934 \u54cd\u5e94\u5934 \u7528\u4e8e\u63cf\u8ff0\u670d\u52a1\u5668\u548c\u6570\u636e\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u4ee5\u4e0b\u5217\u4e3e\u51fa\u5e38\u7528\u7684\u54cd\u5e94\u5934\u4fe1\u606f\uff08\u6301\u7eed\u8865\u5145\u4e2d\uff09 Set-Cookie\uff1a\u8bbe\u7f6e\u6d4f\u89c8\u5668 Cookie\uff0c\u4ee5\u540e\u5f53\u6d4f\u89c8\u5668\u8bbf\u95ee\u7b26\u5408\u6761\u4ef6\u7684 URL \u65f6\uff0c\u4f1a\u81ea\u52a8\u5e26\u4e0a\u8be5 Cooike \uff083\uff09\u7a7a\u884c \u7a7a\u884c\u6807\u5fd7\u7740\u54cd\u5e94\u5934\u7684\u7ed3\u675f \uff084\uff09\u54cd\u5e94\u4f53 \u54cd\u5e94\u4f53 \u5c31\u662f\u7f51\u7ad9\u8fd4\u56de\u7684\u6570\u636e\uff0c\u5728\u4e0b\u4e00\u4e2a\u6b65\u9aa4\u4e2d\u6211\u4eec\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u5206\u6790\u5904\u7406 3\u3001\u89e3\u6790\u7f51\u9875 \u89e3\u6790\u7f51\u9875\u5b9e\u8d28\u4e0a\u9700\u8981\u5b8c\u6210\u4e24\u4ef6\u4e8b\u60c5\uff0c\u4e00\u662f\u63d0\u53d6\u7f51\u9875\u4e0a\u7684\u94fe\u63a5\uff0c\u4e8c\u662f\u63d0\u53d6\u7f51\u9875\u4e0a\u7684\u8d44\u6e90 \uff081\uff09\u63d0\u53d6\u94fe\u63a5 \u63d0\u53d6\u94fe\u63a5\u5b9e\u8d28\u4e0a\u662f\u6307\u83b7\u53d6\u5b58\u5728\u4e8e\u5f85\u89e3\u6790\u7f51\u9875\u4e0a\u7684\u5176\u4ed6\u7f51\u9875\u7684\u94fe\u63a5 \u7f51\u7edc\u722c\u866b\u9700\u8981\u7ed9\u8fd9\u4e9b\u94fe\u63a5\u53d1\u9001\u8bf7\u6c42\uff0c\u5982\u6b64\u5faa\u73af\uff0c\u76f4\u81f3\u628a\u7279\u5b9a\u7f51\u7ad9\u5168\u90e8\u6293\u53d6\u5b8c\u6bd5\u4e3a\u6b62 \uff082\uff09\u63d0\u53d6\u8d44\u6e90 \u63d0\u53d6\u6570\u636e\u5219\u662f\u722c\u866b\u7684\u76ee\u7684\uff0c\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u5982\u4e0b\uff1a \u6587\u672c\uff1aHTML\uff0cJSON \u7b49 \u56fe\u7247\uff1aJPG\uff0cGIF\uff0cPNG \u7b49 \u89c6\u9891\uff1aMPEG-1\u3001MPEG-2 \u548c MPEG4\uff0cAVI \u7b49 \u6700\u7ec8\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6240\u83b7\u5f97\u7684\u8d44\u6e90\u4f5c\u8fdb\u4e00\u6b65\u7684\u5904\u7406\uff0c\u4ece\u800c\u63d0\u53d6\u51fa\u6709\u4ef7\u503c\u7684\u4fe1\u606f","title":"\u7f51\u7edc\u722c\u866b\u7b80\u4ecb"},{"location":"06-third-part-lib/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E7%AE%80%E4%BB%8B/#_1","text":"","title":"\u722c\u866b\u7cfb\u5217(\u4e00) \u7f51\u7edc\u722c\u866b\u7b80\u4ecb"},{"location":"06-third-part-lib/%E7%BD%91%E7%BB%9C%E7%88%AC%E8%99%AB%E7%AE%80%E4%BB%8B/#_2","text":"\u722c\u866b\u7cfb\u5217(\u4e00) \u7f51\u7edc\u722c\u866b\u7b80\u4ecb \u722c\u866b\u7cfb\u5217(\u4e8c) Chrome\u6293\u5305\u5206\u6790 \u722c\u866b\u7cfb\u5217(\u4e09) urllib\u7684\u57fa\u672c\u4f7f\u7528 \u722c\u866b\u7cfb\u5217(\u56db) \u7528urllib\u5b9e\u73b0\u82f1\u8bed\u7ffb\u8bd1 \u722c\u866b\u7cfb\u5217(\u4e94) re\u7684\u57fa\u672c\u4f7f\u7528 \u722c\u866b\u7cfb\u5217(\u516d) \u7528urllib\u548cre\u722c\u53d6\u767e\u5ea6\u8d34\u5427 \u722c\u866b\u7cfb\u5217(\u4e03) requests\u7684\u57fa\u672c\u4f7f\u7528 \u722c\u866b\u7cfb\u5217(\u516b) \u7528requests\u5b9e\u73b0\u5929\u6c14\u67e5\u8be2 \u722c\u866b\u7cfb\u5217(\u4e5d) xpath\u7684\u57fa\u672c\u4f7f\u7528 \u722c\u866b\u7cfb\u5217(\u5341) \u7528requests\u548cxpath\u722c\u53d6\u8c46\u74e3\u7535\u5f71 \u722c\u866b\u7cfb\u5217(\u5341\u4e00) \u7528requests\u548cxpath\u722c\u53d6\u8c46\u74e3\u7535\u5f71\u8bc4\u8bba \u722c\u866b\u7cfb\u5217(\u5341\u4e8c) selenium\u7684\u57fa\u672c\u4f7f\u7528 \u722c\u866b\u7cfb\u5217(\u5341\u4e09) \u7528selenium\u722c\u53d6\u4eac\u4e1c\u5546\u54c1 \u5199\u5728\u524d\u9762\u7684\u8bdd \uff1a\u6700\u8fd1\u535a\u4e3b\u5728\u5b66\u4e60\u7f51\u7edc\u722c\u866b\u7684\u76f8\u5173\u6280\u672f\uff08\u57fa\u4e8e Python \u8bed\u8a00\uff09\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u5b66\u4e60\u7684\u603b\u7ed3\uff0c\u6253\u7b97\u7528\u535a\u5ba2\u8bb0\u5f55\u4e0b\u6765\uff0c\u4e5f\u5e0c\u671b\u548c\u5927\u5bb6\u5206\u4eab\u4e00\u4e0b\u81ea\u5df1\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u7684\u70b9\u70b9\u6ef4\u6ef4\uff0c\u8bdd\u4e0d\u591a\u8bf4\uff0c\u8ba9\u6211\u4eec\u9a6c\u4e0a\u5f00\u59cb\u5427 \u4e00\u3001\u722c\u866b\u57fa\u672c\u7b80\u4ecb \u4ec0\u4e48\u662f\u7f51\u7edc\u722c\u866b\uff0c\u8fd9\u91cc\u5148\u5f15\u7528\u4e00\u4e0b \u767e\u5ea6\u767e\u79d1 \u4e0a\u7684\u89e3\u6790\uff1a \u7f51\u7edc\u722c\u866b\u662f\u4e00\u79cd\u6309\u7167\u4e00\u5b9a\u7684\u89c4\u5219\uff0c\u81ea\u52a8\u5730\u6293\u53d6\u4e07\u7ef4\u7f51\u4fe1\u606f\u7684\u7a0b\u5e8f\u6216\u8005\u811a\u672c \u8bf4\u8d77\u7f51\u7edc\u722c\u866b\uff0c\u4eba\u4eec\u5e38\u5e38\u4f1a\u7528\u8fd9\u6837\u4e00\u4e2a\u6bd4\u55bb\uff1a\u5982\u679c\u628a\u4e92\u8054\u7f51\u6bd4\u55bb\u6210\u4e00\u5f20\u7f51\uff0c\u90a3\u4e48\u7f51\u7edc\u722c\u866b\u5c31\u53ef\u4ee5\u8ba4\u4e3a\u662f\u4e00\u4e2a\u5728\u7f51\u4e0a\u722c\u6765\u722c\u53bb\u7684\u5c0f\u866b\u5b50\uff0c\u5b83\u901a\u8fc7\u7f51\u9875\u7684\u94fe\u63a5\u5730\u5740\u6765\u5bfb\u627e\u7f51\u9875\uff0c\u901a\u8fc7\u7279\u5b9a\u7684\u641c\u7d22\u7b97\u6cd5\u6765\u786e\u5b9a\u8def\u7ebf\uff0c\u901a\u5e38\u4ece\u7f51\u7ad9\u7684\u67d0\u4e00\u4e2a\u9875\u9762\u5f00\u59cb\uff0c\u8bfb\u53d6\u7f51\u9875\u7684\u5185\u5bb9\uff0c\u627e\u5230\u5728\u7f51\u9875\u4e2d\u7684\u5176\u5b83\u94fe\u63a5\u5730\u5740\uff0c\u7136\u540e\u901a\u8fc7\u8fd9\u4e9b\u94fe\u63a5\u5730\u5740\u5bfb\u627e\u4e0b\u4e00\u4e2a\u7f51\u9875\uff0c\u8fd9\u6837\u4e00\u76f4\u5faa\u73af\u4e0b\u53bb\uff0c\u76f4\u5230\u628a\u8fd9\u4e2a\u7f51\u7ad9\u6240\u6709\u7f51\u9875\u90fd\u6293\u53d6\u5b8c\u4e3a\u6b62 \u4e8c\u3001\u722c\u866b\u57fa\u672c\u539f\u7406 \u4e0b\u9762\u7684\u56fe\u7247\u5f88\u597d\u7684\u5c55\u73b0\u4e86\u4e00\u822c\u7f51\u7edc\u722c\u866b\u7684\u57fa\u672c\u8fc7\u7a0b\uff0c\u4e0b\u9762\u8ba9\u6211\u4eec\u6765\u8be6\u7ec6\u89e3\u91ca\u4e00\u4e0b\u8fd9\u5f20\u56fe\u7247\u7684\u542b\u4e49\u5427 1\u3001\u53d1\u9001\u8bf7\u6c42 \u722c\u866b\u7684\u7b2c\u4e00\u4e2a\u6b65\u9aa4\u5c31\u662f\u5bf9\u8d77\u59cb URL \u53d1\u9001\u8bf7\u6c42\uff0c\u4ee5\u83b7\u53d6\u5176\u8fd4\u56de\u7684\u54cd\u5e94 \u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u53d1\u9001\u8bf7\u6c42\u5b9e\u8d28\u4e0a\u662f\u6307\u53d1\u9001\u8bf7\u6c42\u62a5\u6587\u7684\u8fc7\u7a0b \u8bf7\u6c42\u62a5\u6587 \u5305\u62ec\u4ee5\u4e0b\u56db\u4e2a\u65b9\u9762\uff1a\u8bf7\u6c42\u884c\u3001\u8bf7\u6c42\u5934\u3001\u7a7a\u884c\u548c\u8bf7\u6c42\u4f53 \u4f46\u662f\uff0c\u5f80\u5f80\u5728\u4f7f\u7528 Python \u76f8\u5173\u7684\u7f51\u7edc\u8bf7\u6c42\u5e93\u53d1\u9001\u8bf7\u6c42\u65f6\uff0c\u53ea\u9700\u5173\u6ce8\u67d0\u4e9b\u7279\u6b8a\u7684\u90e8\u5206\u5373\u53ef\uff0c\u800c\u975e\u5b8c\u6574\u7684\u8bf7\u6c42\u62a5\u6587\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u4ee5\u7c97\u4f53\u7684\u5f62\u5f0f\u6807\u8bc6\u51fa\u6211\u4eec\u9700\u8981\u7279\u522b\u5173\u6ce8\u7684\u90e8\u5206 \uff081\uff09\u8bf7\u6c42\u884c \u8bf7\u6c42\u884c\u7531\u8bf7\u6c42\u65b9\u6cd5\u3001\u8bf7\u6c42 URL \u548c HTTP \u534f\u8bae\u7248\u672c 3 \u4e2a\u5b57\u6bb5\u7ec4\u6210\uff0c\u5b57\u6bb5\u95f4\u4f7f\u7528\u7a7a\u683c\u5206\u9694 \u2460 \u8bf7\u6c42\u65b9\u6cd5\uff1a\u8bf7\u6c42\u65b9\u6cd5\u662f\u6307\u5bf9\u76ee\u6807\u8d44\u6e90\u7684\u64cd\u4f5c\u65b9\u5f0f\uff0c\u5e38\u89c1\u7684\u6709 GET \u65b9\u6cd5\u548c POST \u65b9\u6cd5 GET\uff1a\u4ece\u6307\u5b9a\u7684\u8d44\u6e90\u8bf7\u6c42\u6570\u636e\uff0c\u67e5\u8be2\u5b57\u7b26\u4e32\u5305\u542b\u5728 URL \u4e2d\u53d1\u9001 POST\uff1a\u5411\u6307\u5b9a\u7684\u8d44\u6e90\u63d0\u4ea4\u8981\u88ab\u5904\u7406\u7684\u6570\u636e\uff0c\u67e5\u8be2\u5b57\u7b26\u4e32\u5305\u542b\u5728\u8bf7\u6c42\u4f53\u4e2d\u53d1\u9001 \u2461 \u8bf7\u6c42 URL\uff1a\u8bf7\u6c42 URL \u662f\u6307\u76ee\u6807\u7f51\u7ad9\u7684\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26 (Uniform Resource Locator\uff0cURL) \u2462 HTTP \u534f\u8bae\u7248\u672c\uff1aHTTP \u534f\u8bae\u662f\u6307\u901a\u4fe1\u53cc\u65b9\u5728\u901a\u4fe1\u6d41\u7a0b\u548c\u5185\u5bb9\u683c\u5f0f\u4e0a\u5171\u540c\u9075\u5b88\u7684\u6807\u51c6 \uff082\uff09\u8bf7\u6c42\u5934 \u8bf7\u6c42\u5934 \u88ab\u8ba4\u4e3a\u662f\u8bf7\u6c42\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u4ee5\u4e0b\u5217\u4e3e\u51fa\u5e38\u7528\u7684\u8bf7\u6c42\u5934\u4fe1\u606f\uff08\u6301\u7eed\u8865\u5145\u4e2d\uff09 User-Agent\uff1a\u5305\u542b\u53d1\u51fa\u8bf7\u6c42\u7684\u7528\u6237\u7684\u4fe1\u606f\uff0c\u8bbe\u7f6e User-Agent \u5e38\u7528\u4e8e\u5904\u7406\u53cd\u722c\u866b Cookie\uff1a\u5305\u542b\u5148\u524d\u8bf7\u6c42\u7684\u5185\u5bb9\uff0c\u8bbe\u7f6e Cookie \u5e38\u7528\u4e8e\u6a21\u62df\u767b\u9646 Referer\uff1a\u6307\u793a\u8bf7\u6c42\u7684\u6765\u6e90\uff0c\u7528\u4e8e\u53ef\u4ee5\u9632\u6b62\u94fe\u76d7\u4ee5\u53ca\u6076\u610f\u8bf7\u6c42 \uff083\uff09\u7a7a\u884c \u7a7a\u884c\u6807\u5fd7\u7740\u8bf7\u6c42\u5934\u7684\u7ed3\u675f \uff084\uff09\u8bf7\u6c42\u4f53 \u8bf7\u6c42\u4f53 \u6839\u636e\u4e0d\u540c\u7684\u8bf7\u6c42\u65b9\u6cd5\u5305\u542b\u4e0d\u540c\u7684\u5185\u5bb9 \u82e5\u8bf7\u6c42\u65b9\u6cd5\u4e3a GET\uff0c\u5219\u6b64\u9879\u4e3a\u7a7a\uff1b\u82e5\u8bf7\u6c42\u65b9\u6cd5\u4e3a POST\uff0c\u5219\u6b64\u9879\u4e3a\u5f85\u63d0\u4ea4\u7684\u6570\u636e\uff08\u5373\u8868\u5355\u6570\u636e\uff09 2\u3001\u83b7\u53d6\u54cd\u5e94 \u722c\u866b\u7684\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\u5c31\u662f\u83b7\u53d6\u7279\u5b9a URL \u8fd4\u56de\u7684\u54cd\u5e94\uff0c\u4ee5\u63d0\u53d6\u5305\u542b\u5728\u5176\u4e2d\u7684\u6570\u636e \u540c\u6837\u7684\uff0c\u54cd\u5e94\u5176\u5b9e\u662f\u6307\u5b8c\u6574\u54cd\u5e94\u62a5\u6587\uff0c\u5b83\u5305\u62ec\u56db\u4e2a\u90e8\u5206\uff1a\u54cd\u5e94\u884c\u3001\u54cd\u5e94\u5934\u3001\u7a7a\u884c\u548c\u54cd\u5e94\u4f53 \uff081\uff09\u54cd\u5e94\u884c \u54cd\u5e94\u884c\u7531 HTTP \u534f\u8bae\u7248\u672c\u3001\u72b6\u6001\u7801\u53ca\u5176\u63cf\u8ff0\u7ec4\u6210 \u2460 HTTP \u534f\u8bae\u7248\u672c\uff1aHTTP \u534f\u8bae\u662f\u6307\u901a\u4fe1\u53cc\u65b9\u5728\u901a\u4fe1\u6d41\u7a0b\u548c\u5185\u5bb9\u683c\u5f0f\u4e0a\u5171\u540c\u9075\u5b88\u7684\u6807\u51c6 \u2461 \u72b6\u6001\u7801\u53ca\u5176\u63cf\u8ff0 100~199\uff1a\u4fe1\u606f\uff0c\u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\uff0c\u9700\u8981\u8bf7\u6c42\u8005\u7ee7\u7eed\u6267\u884c\u64cd\u4f5c 200~299\uff1a\u6210\u529f\uff0c\u64cd\u4f5c\u88ab\u6210\u529f\u63a5\u6536\u5e76\u5904\u7406 300~399\uff1a\u91cd\u5b9a\u5411\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u7684\u64cd\u4f5c\u4ee5\u5b8c\u6210\u8bf7\u6c42 400~499\uff1a\u5ba2\u6237\u7aef\u9519\u8bef\uff0c\u8bf7\u6c42\u5305\u542b\u8bed\u6cd5\u9519\u8bef\u6216\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42 500~599\uff1a\u670d\u52a1\u5668\u9519\u8bef\uff0c\u670d\u52a1\u5668\u5728\u5904\u7406\u8bf7\u6c42\u7684\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef \uff082\uff09\u54cd\u5e94\u5934 \u54cd\u5e94\u5934 \u7528\u4e8e\u63cf\u8ff0\u670d\u52a1\u5668\u548c\u6570\u636e\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u4ee5\u4e0b\u5217\u4e3e\u51fa\u5e38\u7528\u7684\u54cd\u5e94\u5934\u4fe1\u606f\uff08\u6301\u7eed\u8865\u5145\u4e2d\uff09 Set-Cookie\uff1a\u8bbe\u7f6e\u6d4f\u89c8\u5668 Cookie\uff0c\u4ee5\u540e\u5f53\u6d4f\u89c8\u5668\u8bbf\u95ee\u7b26\u5408\u6761\u4ef6\u7684 URL \u65f6\uff0c\u4f1a\u81ea\u52a8\u5e26\u4e0a\u8be5 Cooike \uff083\uff09\u7a7a\u884c \u7a7a\u884c\u6807\u5fd7\u7740\u54cd\u5e94\u5934\u7684\u7ed3\u675f \uff084\uff09\u54cd\u5e94\u4f53 \u54cd\u5e94\u4f53 \u5c31\u662f\u7f51\u7ad9\u8fd4\u56de\u7684\u6570\u636e\uff0c\u5728\u4e0b\u4e00\u4e2a\u6b65\u9aa4\u4e2d\u6211\u4eec\u9700\u8981\u5bf9\u5176\u8fdb\u884c\u5206\u6790\u5904\u7406 3\u3001\u89e3\u6790\u7f51\u9875 \u89e3\u6790\u7f51\u9875\u5b9e\u8d28\u4e0a\u9700\u8981\u5b8c\u6210\u4e24\u4ef6\u4e8b\u60c5\uff0c\u4e00\u662f\u63d0\u53d6\u7f51\u9875\u4e0a\u7684\u94fe\u63a5\uff0c\u4e8c\u662f\u63d0\u53d6\u7f51\u9875\u4e0a\u7684\u8d44\u6e90 \uff081\uff09\u63d0\u53d6\u94fe\u63a5 \u63d0\u53d6\u94fe\u63a5\u5b9e\u8d28\u4e0a\u662f\u6307\u83b7\u53d6\u5b58\u5728\u4e8e\u5f85\u89e3\u6790\u7f51\u9875\u4e0a\u7684\u5176\u4ed6\u7f51\u9875\u7684\u94fe\u63a5 \u7f51\u7edc\u722c\u866b\u9700\u8981\u7ed9\u8fd9\u4e9b\u94fe\u63a5\u53d1\u9001\u8bf7\u6c42\uff0c\u5982\u6b64\u5faa\u73af\uff0c\u76f4\u81f3\u628a\u7279\u5b9a\u7f51\u7ad9\u5168\u90e8\u6293\u53d6\u5b8c\u6bd5\u4e3a\u6b62 \uff082\uff09\u63d0\u53d6\u8d44\u6e90 \u63d0\u53d6\u6570\u636e\u5219\u662f\u722c\u866b\u7684\u76ee\u7684\uff0c\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u5982\u4e0b\uff1a \u6587\u672c\uff1aHTML\uff0cJSON \u7b49 \u56fe\u7247\uff1aJPG\uff0cGIF\uff0cPNG \u7b49 \u89c6\u9891\uff1aMPEG-1\u3001MPEG-2 \u548c MPEG4\uff0cAVI \u7b49 \u6700\u7ec8\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6240\u83b7\u5f97\u7684\u8d44\u6e90\u4f5c\u8fdb\u4e00\u6b65\u7684\u5904\u7406\uff0c\u4ece\u800c\u63d0\u53d6\u51fa\u6709\u4ef7\u503c\u7684\u4fe1\u606f","title":"\u76ee\u5f55"}]}