{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u5199\u5728\u524d\u9762 \u00b6 \u8fd9\u91cc\u662f\u603b\u7ed3\u7684 web\u5f00\u53d1 \u76f8\u5173\u5f52\u6863\u5b66\u4e60\u8d44\u6599\uff0c\u540c\u65f6\u4e5f\u662f\u81ea\u5df1\u5e73\u65f6\u5de5\u4f5c\u4e2d\u7684\u603b\u7ed3\u3002 \u6b22\u8fce\u5927\u5bb6\u63d0\u4ea4 PR \u6216\u8005 issue\u3002\u559c\u6b22\u7684\u670b\u53cb\u53ef\u4ee5 star \uff0c\u4f60\u4eec\u7684\u652f\u6301\u662f\u6211\u6301\u7eed\u66f4\u65b0\u7684\u52a8\u529b\uff01 \u7f51\u7ad9\u6539\u7248\u8bd5\u8fd0\u884c\u4e2d\uff08\u6240\u4ee5\u6709\u4e0d\u5c11 todos\uff0c\u9700\u8981\u540e\u9762\u4e0d\u65ad\u5b8c\u5584\uff09 \u5173\u4e8e\u6211 \u00b6 2016\u5e74\u672c\u79d1\u6bd5\u4e1a\uff0c\u73b0\u5728\u662f Seafile Ltd \u7684\u524d\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08\uff0cemail: 1822852997@qq.com . \u672c\u4eba\u5076\u5c14\u4e5f\u4f1a\u5199\u5199\u535a\u5ba2\uff0c\u5982\u679c\u6709\u559c\u6b22\u73a9\u535a\u5ba2\u7684\u670b\u53cb\u4e5f\u53ef\u4ee5\u4e00\u8d77\u5206\u4eab\u4ea4\u6d41\uff0c\u5206\u4eab\u4e5f\u662f\u4e00\u79cd\u5b66\u4e60\uff01 github CSDN stackoverflow \u5176\u4ed6\u9879\u76ee \u00b6 \u6211\u7684\u5176\u4ed6\u9879\u76ee\u8fd8\u5728 coding \u4e2d\uff0c\u57fa\u672c\u6210\u578b\u540e\u6211\u4f1a\u9010\u6b65\u5f00\u6e90\u3002 \u5c0f\u6e38\u620f\u5f00\u53d1 Javasccript Python Typescript VUE \u535a\u5ba2\u6784\u5efa \u00b6 \u535a\u5ba2\u5f00\u53d1\u6587\u6863 mkdocs.org \u5e38\u7528\u547d\u4ee4 \u00b6 mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site.","title":"\u8bf4\u660e"},{"location":"#_1","text":"\u8fd9\u91cc\u662f\u603b\u7ed3\u7684 web\u5f00\u53d1 \u76f8\u5173\u5f52\u6863\u5b66\u4e60\u8d44\u6599\uff0c\u540c\u65f6\u4e5f\u662f\u81ea\u5df1\u5e73\u65f6\u5de5\u4f5c\u4e2d\u7684\u603b\u7ed3\u3002 \u6b22\u8fce\u5927\u5bb6\u63d0\u4ea4 PR \u6216\u8005 issue\u3002\u559c\u6b22\u7684\u670b\u53cb\u53ef\u4ee5 star \uff0c\u4f60\u4eec\u7684\u652f\u6301\u662f\u6211\u6301\u7eed\u66f4\u65b0\u7684\u52a8\u529b\uff01 \u7f51\u7ad9\u6539\u7248\u8bd5\u8fd0\u884c\u4e2d\uff08\u6240\u4ee5\u6709\u4e0d\u5c11 todos\uff0c\u9700\u8981\u540e\u9762\u4e0d\u65ad\u5b8c\u5584\uff09","title":"\u5199\u5728\u524d\u9762"},{"location":"#_2","text":"2016\u5e74\u672c\u79d1\u6bd5\u4e1a\uff0c\u73b0\u5728\u662f Seafile Ltd \u7684\u524d\u7aef\u5f00\u53d1\u5de5\u7a0b\u5e08\uff0cemail: 1822852997@qq.com . \u672c\u4eba\u5076\u5c14\u4e5f\u4f1a\u5199\u5199\u535a\u5ba2\uff0c\u5982\u679c\u6709\u559c\u6b22\u73a9\u535a\u5ba2\u7684\u670b\u53cb\u4e5f\u53ef\u4ee5\u4e00\u8d77\u5206\u4eab\u4ea4\u6d41\uff0c\u5206\u4eab\u4e5f\u662f\u4e00\u79cd\u5b66\u4e60\uff01 github CSDN stackoverflow","title":"\u5173\u4e8e\u6211"},{"location":"#_3","text":"\u6211\u7684\u5176\u4ed6\u9879\u76ee\u8fd8\u5728 coding \u4e2d\uff0c\u57fa\u672c\u6210\u578b\u540e\u6211\u4f1a\u9010\u6b65\u5f00\u6e90\u3002 \u5c0f\u6e38\u620f\u5f00\u53d1 Javasccript Python Typescript VUE","title":"\u5176\u4ed6\u9879\u76ee"},{"location":"#_4","text":"\u535a\u5ba2\u5f00\u53d1\u6587\u6863 mkdocs.org","title":"\u535a\u5ba2\u6784\u5efa"},{"location":"#_5","text":"mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site.","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"log/","text":"Michael An's Coding Log \u00b6 2018 \u00b6 This repository is the first trial repository of Michael An. 2018.01 \u00b6 I start to learn front-end development. There are plenty of differences between traditional webpage editing (such as using Adobe Dreamweaver software to design a webpage). The new standards of HTML5 and CSS3 are amazing. These parts are easy , I think. Probablly because I can use photoshop, firework and other Adobe softwares fluentlly. What's more, it is easy to use css. But using it well isn't an easy task. 2018.02 \u00b6 learning basic javascript codes. Basic JS codes are similar to other coding languages. JS is an O-O programming language. The polymorphism isn't obvious. ECMAscript, a standard coding plan, is developing rapidly. ES5 is ripe and stable. In 2015, ES6 use class to create an object (from cpp?). And ES6 use string module. It maybe come from Ruby. Recently some frineds told me that NodeJS could work in desktop application. In one day JS will work every place. 2018.03 \u00b6 I got a github account. Learning git is an essential step. When I fell asleep, I find that writing and coding could make me patient and calm. I find a project, Codecombat. Codecombat is a perfect open-source project. It uses coffeeScript rather than javascript. A little upset => => In this project, people can learn coding including Python, Javascript, Java and other languages. Learing coding and English every day! 2018.04 \u00b6 Read readme.text of data repository. Finish user's information setting in github. I can make a basic webpage using sublime editor. HTML is the structure of pages, CSS is the style of pages, JS is the magic and action of pages. Other small JS plug-ins can help me to ease working stress. The fullpage plug-in can make different pages switching fluently. And a small shopping project (similar to JD) and a take-out meal project are finished. 2018.05 \u00b6 laern senior javascript programming. And JS is not easy. Some JS codes are unique. Such as 0.1 plus 0.2 not equal 0.3, however, 0.1 plus 0.5 equal 0.6. And ajax is excellent. Now axios can work well without ajax. In the free time, I learn about main structures and MVC or MVVM design modal. (Modal-View-View-Modal). The main structures are Angular, Vue and React. Recently, Angular is too large to design a single page, so people choose React or Vue. And I design three shopping webpages for mobile devices. The pages use different methods to suit different length and height(percentage, flex, rem). Now I should use it fluently. 2018.06 \u00b6 Continue learning structue. Using modals can save more time and make codes use widely. Start designing Leisure website and a company fullpage. We have a small team and my main job is to design webpages. And I need to test my codes with others groupnumbers. There are many bugs that we can't realise until testing together. And sometimes designer perfer another color or logo, I need to clip them right away. The jobs are interesting and busy. Tired but happy. And I learn some chrome inside render methods. There are three engines and each engines can render diferent parts of webpage. There are much knowledge that I need to learn. As a developing front-end develper, I have to know Internet basic and data structure knowledge as quickly as I can. 2018.07 \u00b6 I start to learn Mina frame for WeChat small app. I have a personal Wechat Official Platform. In one day, I will design my own WeChat Small App by myself. The Mina frame use different programming language, wxml and wxss. Wxml language uses different tags(such as View tag). Wxss use different length, rpx, rather than px or percentage methods. This frame has many useful modules and we can easily use the APIs. However, data tramsfer by using props and state is not easy for me. Never stop coding! 2018.08 \u00b6 August is a very busy month. Not only did I finish so mush codes of html, css, js, but also I learn plenty of new knowledge points. To be honest, I didn't have one day rest. At night I always learn new grammar. And there are some details about August. Do some unit test. It is significant to do unit test before using a new javascript API. When we finished writing an API, we must test it right away. The main test tool are Mocha or Jest. Using assertions to test if the API could return a right value. Unit test is basic test. The basic method is test APIs one by one. The advanced method is test lots of APIs once. Using one result as other API's parameters. But you should make sure that most of APIs are right and can return what you want. If there are some errors or warnings, you should check them one by one. For a fresh bird, I choose the first method now. In the future, I will use the advanced methods to release my work pressure and deal with other projects. Time is precious. learn new OS\uff08operating system\uff09 I heard MAC OS and Linux OS before. But I didn't operate them before. Now I need to learn the basic knowledge. The Linux system is much different from Windows system. I use Ubuntu, a special linux OS. The base and vim command line need to remember. In the future, I will use them much. Bye-Bye windows. Till now I can't find adequate PS and other softwares in MAC. I didn't have an Apple ID so I can't down app from App Store. The NodeJS and NPM parts are useful in MAC. I still use sublime as my editor software. The webstorm and atom editor are useful too. new knowledge of Jest What's more, there are many new knowledge points. I need to learn reactstrap(bootstrap in react framework). The ECMAscript6 is necessary. The differences between const and let (let use much memory than const, about 2% to 3% maybe). And array function is useful. It can bind this to using function automaticly.Others, learn button/DropDown/Modal compoennts of reactstrap. React framework contains several life cycle fucntion. How to use them fluently needs much time to practice. And slate.js framework, a rich text framework, is also important. Map Object/Selectiom/Value/Change and ... blob file. write later because there are much things to deal now. reading blog from RuanYF. 2018.09 \u00b6 Plan: learn slate.js (the main APIs) and react framework step by step. Hurry up! And this is the first time to use vim to write readme.md And use it more. There are so many things to learn. And I found that it is important for us to learn not only code basic using but also inner logic of basic. For instance, learning slate-core codes is significant for understanding lower codes logic. And I learn code (JS) data structure of JS. The bacis data strcuture is Array. In JS, we can use Array to create other complex data structure. (queue/stack/linked chart). What's more, the basic network knowledge is also essential and basic. 2018.10 \u00b6 For a front-end engineer, I should use front-end technique fluently. The main structure and basic logic and data structure. And I thought that I should not only know my aspects but also learn other aspects. The basic network and back-end knowledge are also important. I needn't write back-end codes, I just know their methods and thoughts. And I should learn front-end parts firstly. Recently work is not busy (compared with Sep). And there are other things I have to deal with, such as tax, insurance, family tree : ) I will spend at least 20 percentages of my time and monty into future development (books and other online lecture). Never give up! Just hurry up! There are so many things to learn. And I found that it is important for us to learn not only code basic using but also inner logic of basic. For instance, learning slate-core codes is significant for understanding lower codes logic. And I learn code (JS) data structure of JS. The bacis data strcuture is Array. In JS, we can use Array to create other complex data structure. (queue/stack/linked chart). What's more, the basic network knowledge is also essential and basic. 2018.11 \u00b6 1.Basic knowledge Recently I read some books of traditional JS methods. Before ES6 ( class and other new points of OO, object-oriented ) come into our eyes, the constructor is important. The curry function, which use less parameters in a single function, can gain more useful features. Eg: for a pure function, y = f(x). When we set a special x, this function can return a solid y for this special x. This function is called pure function. And if we enter a special parameters into another function, that function returns are not fixed. There are a lot of mess. So the main thoughts of curry function is that we should use only one parameters in a special function. If a function have too much codes and parameters, we should separate them into different parts. This method can decrease function coupling\uff0c and increase codes reusability. (PS: learn more CS words). The memory of function. In fibonacci method, we can use resursion to culculate. function return n < 2 ? n : fibonacci(n-1) + fibonacci(n-2). The basic method has a shortage. And we have to calculate fibonacci(3) for too many time for instance. A new method is we can use closure, and create an array to store some result. If function has calculated some results, read it from the result array directly, else calculate it and store the results into array. The result array is in a closure. Finally, we just return the last result rather than result array. If n equals 10, traditional methods need 400 times, however, new method just needs about 30 times. 2.Learning methods learn more of data structure. If I just use some basic components in my daily work, I won't get more new information of CS development. It is necessary for me to learn new method and new grammar(ES7). The latest React structure has some useful utils. React-Routers and React-Native are some of them. I need to learn them. We all know that if you didn't study every day, you would been last for a long distance. So just hurry up! Don't hesitate to learn new knowledge. We all know that it is totally diffcult for us to learn in such a short periods, but we need to learn for the future. Two years age, angular is hot in whole China, plenty of my friends use angular as their basic front-end structure. Now, if you use angular, it is not a wise choice. 3.Singles' day thoughts Today is Nov 11 th , the traditional shopping days. Ten years age, shopping day was created by Alibaba. Ten years later, there are 100 billion yuan trades during just ten hours. But I never buy any goods, because I must learn new CS knowledge. During ten years development, the main trades have changed a lot. Much people use mobile Apps to buy goods thought internet. And basic desktop browsers are decrease. And I need to learn some mobile front-end methods. First, mobile app use lastest brower in Android or iphone, so we need't deal with old ie version. The new mobile screen and flex design are more important. Second, our mobile phone's hardwares are becoming more and more gaint. We can add some complex tecnology to increase clients thought. Third, 5G network will use in daily life. And we need to thought how to open web page sooner. And sending much data or async functions will use much. Using lazy-loading tec is also important. 2018.12 \u00b6 The last month of 2018 is arriving. How time flies! This year I faced lots of differences in my life. It is a turning point for me. There are lots of bugs in my codes which I wrote in last several months. In the beginning period, our product has a basic design, however, now design has some adjustments so that some codes are not good enough for new features. So fix them as soon as possible. I learn some design method in React. We all know that React use props and status. When some datas need to transfered from one component to another comonennt, we can use props. But when we want to transfer data from child component to parent component, props are not useful as before. So we can set a hoop-function in parent component. Transfer this function by props. When child component was rendered or some events happen, we can use this hoop function to listen event happened. The function name can use \"on doing something\". I find it is so busy in my daily life. And it may be the real life. Just face the difficults and overcome my weaknesses. I have to balance life, job, health, family and so on. It may be a little tough in the early period. Step by step, just do it! 2019 \u00b6 2019.01 \u00b6 Happy new year and just continue coding! In 2019, there are several things I need to learn. It is obvious that CS develep rapidly, so learning new knowledge is necessary to every code farmer(hahaha). Don't hesitate to code! There are much things that are useful. I am sure that svg and canvas will replace traditional image ,such as png and icon. And I think watermark-dom and echarts are amazing. Using python to create html is so convenient. These techs should be learned as soon as possible. Canvas and csv image are also useful. These days I found that old knowledge should be learned again so that we can get new treasure. And fix some weaknesses during this period. Learning some difficult things is needed. 2019.02 \u00b6 Happy Spring Festicval! The code-mirror is a useful library when we show codes in different styles. These days I think that we should learn new knowledge forever. 2019.03 \u00b6 At the last day in March, I need a review about this month. There are some thoughts. How to deal with new knowledge and old tect knowledge? React-Router is much better than hash-transfer. And it may save more resources. When we use tag to jump to other page, the whole page don't reload, React just repaint for the added component. The inner tag is , and react-router forbid the default function of tag. You shouldn't create a circle, and you should use the circle. Make our dialogs and other component more useful. Everyone have same time in one day. God gives us same time. In a whole day, working hard and having a rest and having a date is not an easy thing. Now I should grasp more precious time in learning. And exeresicing is also important in the free time. Don't sit for a long time and don't sleep too late. If you did that, you would regret in one day. 2019.04 \u00b6 I read a book called\u300aMake you code cleaner\u300b.This is the main opinions: a function should contain single function and codes as less as possible. Use clear parameter as name of variable. A funciton should do only one thing. A class or a component in React should show a single UI component. And modify your codes after you write down them. When you review your codes, you can change and delete much useless codes. RYF said, we should learn inner knowledge of coding. We all know that structure can change in one day, but the basic data structure and algie is still there. Write more and learn some inner thought in code. It is important. In the free time ,wu shouldn't do the basic things once and another times, but we can deal with tough problems for many hours. Because if you can resolve the tough problem, you are making progress. 2019.05 \u00b6 What is the difference between code farmer and code designer? The farmer can only fix some bugs, can build a wall which is not good, however, thr designer can create some codes and build a beautiful house. So basic logic is more important than fix some easy bugs. And important methods are also important. 2019.06 \u00b6 After about one year coding, I found that I have wrote down more than 40 thousands lines of code in public repo in github(seahub/editor/dtable/api). I need to learn more knowledge about network/algie/data-structure in my free time. There are many coding language in different area, but the above basic points is similar. Seven years age, I started to learn basic computer programming(C), then I learned basic C++ by myself(just a little C++). Five years age, python was hot and I know it is a glue and can generate codes from C and C++, however, I didn't learn python at that time. Two years ago, I learn a little visual basic(VB) when I use excel software, it is boring. And I learn HTML/CSS/JS in the whole year. Last year, I learn a little ruby/java because my co-worker use them as network backend. Now I learn python in my free time, python can do much thing, such as network programming(django/flask), Artificial Intelligence, Machine learning, scaning webpage, it is amazing. During these years, my data-structure and database was still weak. Hurry up and make great progress! 2019.07 \u00b6 July is a little busy. During daily work time, I spent much time on dtable. This project is a table just like excel. And data structure and view-model structure is complex. From table to view, from mast to canvas row cell editor. App-store and apply-invert data are devided in several files. And there are many views, a function should work well in every views. There is a mess. In my free time, I learn basic ES5 again.(including DOM Event, except BOM, because I waste much time on other thing). The e-book was written by RYF. Lucky, I pull two requests into this book after I find some mistakes. I thought I could learn it before July 15 th , but I didn't. On weekends(only six days), I climbed mountains and enjoy with friends. So DDL is not valid. Otherwise, it was really hot in my house without a fan or air-conditioner. I bought it last week thought Taobao but I can't receive fan till now! It is hot now! So I have to stay at KFC at evening. Sometimes there were some mosquitos in my house. It was terrible. And I have worked in Seafile for a whole year, I learn much things during the whole year. Everyone have same time in his lives, I am trying to save my time and learn efficiently. 2019.08 \u00b6 Things are still complex. A pile of papers and blogs should be reviewed.I have studied ECMA5 from RuanYF and basic ES6. The mind map is doing. 2019.09 \u00b6 I reviewed and rewrite some notes from 2018-09 to 2018-12. Till now, notes in 2018 have been reviewed. I found some informations: The basic knowledge(JS basic grammar) is more important than structure(such as jquery and react). During the last three years, we used backbone, angular, react, VUE, and in the future, new structure will replace react and VUE again. And basic knowledge is stable. So next month I should learn basic knowledge again. remove C and Java codes from this repo. move VUE to another Repo(special for VUE) review codes in 2018\uff0cthen put them into learn folder. (Sig and eme) 2018-08\uff082019-09 1th week\uff09 2018-09\uff082019-09 2th week\uff09 2018-10\uff082019-09 2th week\uff09 2018-11\uff082019-09 3th week\uff09 2018-12\uff082019-09 3th week\uff09 move makefile and babel into another repo(webpack-babel)\uff0cremove src folder and dist folder. 2019.10 \u00b6 There are less than 100 days left in 2019. Don't leave any regrets these days. Delete all VUE and python codes Data structure Pre 60 page (1th) 60-80 (1th) 80-100 (1th) 100-120 (2th) 120-140 (2th) 140-160 (3th) review codes in 2019 2019-01(3th) 2019-02(4 th ) 2019-03(4 th ) 2019.11 \u00b6 basic MySQL by aliyun education Whole stack basic by RYF\uff08React+node+test\uff09 React video JSpang(not good) Leetcode 50 + unit test + pytest 2019.12 \u00b6 The most important thing is that review whole year knowledge. And try to sovel leetcode problems as many as possible. It is really busy in December. leetcode 100+ 2020 \u00b6 2020.01 \u00b6 The main task is review 2019 codes. During 2019, I have learned basic knowledge of ES5 and ES6, mysql and data structure. And try my best to finish at least 100 Leetcode issues. It is a challenge for me at first. In 2020, learn and review them again.review 2019 notes 2020.02 \u00b6 China Spring Festival Hiliday and COVID-19.NetEase senior frontend lessions. 2020.03 \u00b6 I should remember these useful knowledge in this repo. If I just write down and never review and remember it, these knowledge can not become my own knowledge. That is why I read mamy books and articles but I find nothing. Write it down -> remember several times is a useful method. 2020.04 \u00b6 How to improve programming ability\uff1f read books (learn net knowledge fast) do projects (know how to use these knowledge) read source code (know other people's code) find answer in google(know slices of useful knowledge) learn NetEase senior lessions1 and lession2 2020.12 \u00b6 learn leetcode basic methods(sort, search) review basic data structure(array, object, list, tree, graph and so on). 2021 \u00b6 2021.01 \u00b6 todo 2021.02 \u00b6 todo 2021.03 \u00b6 rebuild personal blog using mkdocs and seperate it into several parts use some autometic method to refresh blog todo: read, remember and rewrite blog soon.","title":"\u5b66\u4e60\u65e5\u5fd7"},{"location":"log/#michael-ans-coding-log","text":"","title":"Michael An's Coding Log"},{"location":"log/#2018","text":"This repository is the first trial repository of Michael An.","title":"2018"},{"location":"log/#201801","text":"I start to learn front-end development. There are plenty of differences between traditional webpage editing (such as using Adobe Dreamweaver software to design a webpage). The new standards of HTML5 and CSS3 are amazing. These parts are easy , I think. Probablly because I can use photoshop, firework and other Adobe softwares fluentlly. What's more, it is easy to use css. But using it well isn't an easy task.","title":"2018.01"},{"location":"log/#201802","text":"learning basic javascript codes. Basic JS codes are similar to other coding languages. JS is an O-O programming language. The polymorphism isn't obvious. ECMAscript, a standard coding plan, is developing rapidly. ES5 is ripe and stable. In 2015, ES6 use class to create an object (from cpp?). And ES6 use string module. It maybe come from Ruby. Recently some frineds told me that NodeJS could work in desktop application. In one day JS will work every place.","title":"2018.02"},{"location":"log/#201803","text":"I got a github account. Learning git is an essential step. When I fell asleep, I find that writing and coding could make me patient and calm. I find a project, Codecombat. Codecombat is a perfect open-source project. It uses coffeeScript rather than javascript. A little upset => => In this project, people can learn coding including Python, Javascript, Java and other languages. Learing coding and English every day!","title":"2018.03"},{"location":"log/#201804","text":"Read readme.text of data repository. Finish user's information setting in github. I can make a basic webpage using sublime editor. HTML is the structure of pages, CSS is the style of pages, JS is the magic and action of pages. Other small JS plug-ins can help me to ease working stress. The fullpage plug-in can make different pages switching fluently. And a small shopping project (similar to JD) and a take-out meal project are finished.","title":"2018.04"},{"location":"log/#201805","text":"laern senior javascript programming. And JS is not easy. Some JS codes are unique. Such as 0.1 plus 0.2 not equal 0.3, however, 0.1 plus 0.5 equal 0.6. And ajax is excellent. Now axios can work well without ajax. In the free time, I learn about main structures and MVC or MVVM design modal. (Modal-View-View-Modal). The main structures are Angular, Vue and React. Recently, Angular is too large to design a single page, so people choose React or Vue. And I design three shopping webpages for mobile devices. The pages use different methods to suit different length and height(percentage, flex, rem). Now I should use it fluently.","title":"2018.05"},{"location":"log/#201806","text":"Continue learning structue. Using modals can save more time and make codes use widely. Start designing Leisure website and a company fullpage. We have a small team and my main job is to design webpages. And I need to test my codes with others groupnumbers. There are many bugs that we can't realise until testing together. And sometimes designer perfer another color or logo, I need to clip them right away. The jobs are interesting and busy. Tired but happy. And I learn some chrome inside render methods. There are three engines and each engines can render diferent parts of webpage. There are much knowledge that I need to learn. As a developing front-end develper, I have to know Internet basic and data structure knowledge as quickly as I can.","title":"2018.06"},{"location":"log/#201807","text":"I start to learn Mina frame for WeChat small app. I have a personal Wechat Official Platform. In one day, I will design my own WeChat Small App by myself. The Mina frame use different programming language, wxml and wxss. Wxml language uses different tags(such as View tag). Wxss use different length, rpx, rather than px or percentage methods. This frame has many useful modules and we can easily use the APIs. However, data tramsfer by using props and state is not easy for me. Never stop coding!","title":"2018.07"},{"location":"log/#201808","text":"August is a very busy month. Not only did I finish so mush codes of html, css, js, but also I learn plenty of new knowledge points. To be honest, I didn't have one day rest. At night I always learn new grammar. And there are some details about August. Do some unit test. It is significant to do unit test before using a new javascript API. When we finished writing an API, we must test it right away. The main test tool are Mocha or Jest. Using assertions to test if the API could return a right value. Unit test is basic test. The basic method is test APIs one by one. The advanced method is test lots of APIs once. Using one result as other API's parameters. But you should make sure that most of APIs are right and can return what you want. If there are some errors or warnings, you should check them one by one. For a fresh bird, I choose the first method now. In the future, I will use the advanced methods to release my work pressure and deal with other projects. Time is precious. learn new OS\uff08operating system\uff09 I heard MAC OS and Linux OS before. But I didn't operate them before. Now I need to learn the basic knowledge. The Linux system is much different from Windows system. I use Ubuntu, a special linux OS. The base and vim command line need to remember. In the future, I will use them much. Bye-Bye windows. Till now I can't find adequate PS and other softwares in MAC. I didn't have an Apple ID so I can't down app from App Store. The NodeJS and NPM parts are useful in MAC. I still use sublime as my editor software. The webstorm and atom editor are useful too. new knowledge of Jest What's more, there are many new knowledge points. I need to learn reactstrap(bootstrap in react framework). The ECMAscript6 is necessary. The differences between const and let (let use much memory than const, about 2% to 3% maybe). And array function is useful. It can bind this to using function automaticly.Others, learn button/DropDown/Modal compoennts of reactstrap. React framework contains several life cycle fucntion. How to use them fluently needs much time to practice. And slate.js framework, a rich text framework, is also important. Map Object/Selectiom/Value/Change and ... blob file. write later because there are much things to deal now. reading blog from RuanYF.","title":"2018.08"},{"location":"log/#201809","text":"Plan: learn slate.js (the main APIs) and react framework step by step. Hurry up! And this is the first time to use vim to write readme.md And use it more. There are so many things to learn. And I found that it is important for us to learn not only code basic using but also inner logic of basic. For instance, learning slate-core codes is significant for understanding lower codes logic. And I learn code (JS) data structure of JS. The bacis data strcuture is Array. In JS, we can use Array to create other complex data structure. (queue/stack/linked chart). What's more, the basic network knowledge is also essential and basic.","title":"2018.09"},{"location":"log/#201810","text":"For a front-end engineer, I should use front-end technique fluently. The main structure and basic logic and data structure. And I thought that I should not only know my aspects but also learn other aspects. The basic network and back-end knowledge are also important. I needn't write back-end codes, I just know their methods and thoughts. And I should learn front-end parts firstly. Recently work is not busy (compared with Sep). And there are other things I have to deal with, such as tax, insurance, family tree : ) I will spend at least 20 percentages of my time and monty into future development (books and other online lecture). Never give up! Just hurry up! There are so many things to learn. And I found that it is important for us to learn not only code basic using but also inner logic of basic. For instance, learning slate-core codes is significant for understanding lower codes logic. And I learn code (JS) data structure of JS. The bacis data strcuture is Array. In JS, we can use Array to create other complex data structure. (queue/stack/linked chart). What's more, the basic network knowledge is also essential and basic.","title":"2018.10"},{"location":"log/#201811","text":"1.Basic knowledge Recently I read some books of traditional JS methods. Before ES6 ( class and other new points of OO, object-oriented ) come into our eyes, the constructor is important. The curry function, which use less parameters in a single function, can gain more useful features. Eg: for a pure function, y = f(x). When we set a special x, this function can return a solid y for this special x. This function is called pure function. And if we enter a special parameters into another function, that function returns are not fixed. There are a lot of mess. So the main thoughts of curry function is that we should use only one parameters in a special function. If a function have too much codes and parameters, we should separate them into different parts. This method can decrease function coupling\uff0c and increase codes reusability. (PS: learn more CS words). The memory of function. In fibonacci method, we can use resursion to culculate. function return n < 2 ? n : fibonacci(n-1) + fibonacci(n-2). The basic method has a shortage. And we have to calculate fibonacci(3) for too many time for instance. A new method is we can use closure, and create an array to store some result. If function has calculated some results, read it from the result array directly, else calculate it and store the results into array. The result array is in a closure. Finally, we just return the last result rather than result array. If n equals 10, traditional methods need 400 times, however, new method just needs about 30 times. 2.Learning methods learn more of data structure. If I just use some basic components in my daily work, I won't get more new information of CS development. It is necessary for me to learn new method and new grammar(ES7). The latest React structure has some useful utils. React-Routers and React-Native are some of them. I need to learn them. We all know that if you didn't study every day, you would been last for a long distance. So just hurry up! Don't hesitate to learn new knowledge. We all know that it is totally diffcult for us to learn in such a short periods, but we need to learn for the future. Two years age, angular is hot in whole China, plenty of my friends use angular as their basic front-end structure. Now, if you use angular, it is not a wise choice. 3.Singles' day thoughts Today is Nov 11 th , the traditional shopping days. Ten years age, shopping day was created by Alibaba. Ten years later, there are 100 billion yuan trades during just ten hours. But I never buy any goods, because I must learn new CS knowledge. During ten years development, the main trades have changed a lot. Much people use mobile Apps to buy goods thought internet. And basic desktop browsers are decrease. And I need to learn some mobile front-end methods. First, mobile app use lastest brower in Android or iphone, so we need't deal with old ie version. The new mobile screen and flex design are more important. Second, our mobile phone's hardwares are becoming more and more gaint. We can add some complex tecnology to increase clients thought. Third, 5G network will use in daily life. And we need to thought how to open web page sooner. And sending much data or async functions will use much. Using lazy-loading tec is also important.","title":"2018.11"},{"location":"log/#201812","text":"The last month of 2018 is arriving. How time flies! This year I faced lots of differences in my life. It is a turning point for me. There are lots of bugs in my codes which I wrote in last several months. In the beginning period, our product has a basic design, however, now design has some adjustments so that some codes are not good enough for new features. So fix them as soon as possible. I learn some design method in React. We all know that React use props and status. When some datas need to transfered from one component to another comonennt, we can use props. But when we want to transfer data from child component to parent component, props are not useful as before. So we can set a hoop-function in parent component. Transfer this function by props. When child component was rendered or some events happen, we can use this hoop function to listen event happened. The function name can use \"on doing something\". I find it is so busy in my daily life. And it may be the real life. Just face the difficults and overcome my weaknesses. I have to balance life, job, health, family and so on. It may be a little tough in the early period. Step by step, just do it!","title":"2018.12"},{"location":"log/#2019","text":"","title":"2019"},{"location":"log/#201901","text":"Happy new year and just continue coding! In 2019, there are several things I need to learn. It is obvious that CS develep rapidly, so learning new knowledge is necessary to every code farmer(hahaha). Don't hesitate to code! There are much things that are useful. I am sure that svg and canvas will replace traditional image ,such as png and icon. And I think watermark-dom and echarts are amazing. Using python to create html is so convenient. These techs should be learned as soon as possible. Canvas and csv image are also useful. These days I found that old knowledge should be learned again so that we can get new treasure. And fix some weaknesses during this period. Learning some difficult things is needed.","title":"2019.01"},{"location":"log/#201902","text":"Happy Spring Festicval! The code-mirror is a useful library when we show codes in different styles. These days I think that we should learn new knowledge forever.","title":"2019.02"},{"location":"log/#201903","text":"At the last day in March, I need a review about this month. There are some thoughts. How to deal with new knowledge and old tect knowledge? React-Router is much better than hash-transfer. And it may save more resources. When we use tag to jump to other page, the whole page don't reload, React just repaint for the added component. The inner tag is , and react-router forbid the default function of tag. You shouldn't create a circle, and you should use the circle. Make our dialogs and other component more useful. Everyone have same time in one day. God gives us same time. In a whole day, working hard and having a rest and having a date is not an easy thing. Now I should grasp more precious time in learning. And exeresicing is also important in the free time. Don't sit for a long time and don't sleep too late. If you did that, you would regret in one day.","title":"2019.03"},{"location":"log/#201904","text":"I read a book called\u300aMake you code cleaner\u300b.This is the main opinions: a function should contain single function and codes as less as possible. Use clear parameter as name of variable. A funciton should do only one thing. A class or a component in React should show a single UI component. And modify your codes after you write down them. When you review your codes, you can change and delete much useless codes. RYF said, we should learn inner knowledge of coding. We all know that structure can change in one day, but the basic data structure and algie is still there. Write more and learn some inner thought in code. It is important. In the free time ,wu shouldn't do the basic things once and another times, but we can deal with tough problems for many hours. Because if you can resolve the tough problem, you are making progress.","title":"2019.04"},{"location":"log/#201905","text":"What is the difference between code farmer and code designer? The farmer can only fix some bugs, can build a wall which is not good, however, thr designer can create some codes and build a beautiful house. So basic logic is more important than fix some easy bugs. And important methods are also important.","title":"2019.05"},{"location":"log/#201906","text":"After about one year coding, I found that I have wrote down more than 40 thousands lines of code in public repo in github(seahub/editor/dtable/api). I need to learn more knowledge about network/algie/data-structure in my free time. There are many coding language in different area, but the above basic points is similar. Seven years age, I started to learn basic computer programming(C), then I learned basic C++ by myself(just a little C++). Five years age, python was hot and I know it is a glue and can generate codes from C and C++, however, I didn't learn python at that time. Two years ago, I learn a little visual basic(VB) when I use excel software, it is boring. And I learn HTML/CSS/JS in the whole year. Last year, I learn a little ruby/java because my co-worker use them as network backend. Now I learn python in my free time, python can do much thing, such as network programming(django/flask), Artificial Intelligence, Machine learning, scaning webpage, it is amazing. During these years, my data-structure and database was still weak. Hurry up and make great progress!","title":"2019.06"},{"location":"log/#201907","text":"July is a little busy. During daily work time, I spent much time on dtable. This project is a table just like excel. And data structure and view-model structure is complex. From table to view, from mast to canvas row cell editor. App-store and apply-invert data are devided in several files. And there are many views, a function should work well in every views. There is a mess. In my free time, I learn basic ES5 again.(including DOM Event, except BOM, because I waste much time on other thing). The e-book was written by RYF. Lucky, I pull two requests into this book after I find some mistakes. I thought I could learn it before July 15 th , but I didn't. On weekends(only six days), I climbed mountains and enjoy with friends. So DDL is not valid. Otherwise, it was really hot in my house without a fan or air-conditioner. I bought it last week thought Taobao but I can't receive fan till now! It is hot now! So I have to stay at KFC at evening. Sometimes there were some mosquitos in my house. It was terrible. And I have worked in Seafile for a whole year, I learn much things during the whole year. Everyone have same time in his lives, I am trying to save my time and learn efficiently.","title":"2019.07"},{"location":"log/#201908","text":"Things are still complex. A pile of papers and blogs should be reviewed.I have studied ECMA5 from RuanYF and basic ES6. The mind map is doing.","title":"2019.08"},{"location":"log/#201909","text":"I reviewed and rewrite some notes from 2018-09 to 2018-12. Till now, notes in 2018 have been reviewed. I found some informations: The basic knowledge(JS basic grammar) is more important than structure(such as jquery and react). During the last three years, we used backbone, angular, react, VUE, and in the future, new structure will replace react and VUE again. And basic knowledge is stable. So next month I should learn basic knowledge again. remove C and Java codes from this repo. move VUE to another Repo(special for VUE) review codes in 2018\uff0cthen put them into learn folder. (Sig and eme) 2018-08\uff082019-09 1th week\uff09 2018-09\uff082019-09 2th week\uff09 2018-10\uff082019-09 2th week\uff09 2018-11\uff082019-09 3th week\uff09 2018-12\uff082019-09 3th week\uff09 move makefile and babel into another repo(webpack-babel)\uff0cremove src folder and dist folder.","title":"2019.09"},{"location":"log/#201910","text":"There are less than 100 days left in 2019. Don't leave any regrets these days. Delete all VUE and python codes Data structure Pre 60 page (1th) 60-80 (1th) 80-100 (1th) 100-120 (2th) 120-140 (2th) 140-160 (3th) review codes in 2019 2019-01(3th) 2019-02(4 th ) 2019-03(4 th )","title":"2019.10"},{"location":"log/#201911","text":"basic MySQL by aliyun education Whole stack basic by RYF\uff08React+node+test\uff09 React video JSpang(not good) Leetcode 50 + unit test + pytest","title":"2019.11"},{"location":"log/#201912","text":"The most important thing is that review whole year knowledge. And try to sovel leetcode problems as many as possible. It is really busy in December. leetcode 100+","title":"2019.12"},{"location":"log/#2020","text":"","title":"2020"},{"location":"log/#202001","text":"The main task is review 2019 codes. During 2019, I have learned basic knowledge of ES5 and ES6, mysql and data structure. And try my best to finish at least 100 Leetcode issues. It is a challenge for me at first. In 2020, learn and review them again.review 2019 notes","title":"2020.01"},{"location":"log/#202002","text":"China Spring Festival Hiliday and COVID-19.NetEase senior frontend lessions.","title":"2020.02"},{"location":"log/#202003","text":"I should remember these useful knowledge in this repo. If I just write down and never review and remember it, these knowledge can not become my own knowledge. That is why I read mamy books and articles but I find nothing. Write it down -> remember several times is a useful method.","title":"2020.03"},{"location":"log/#202004","text":"How to improve programming ability\uff1f read books (learn net knowledge fast) do projects (know how to use these knowledge) read source code (know other people's code) find answer in google(know slices of useful knowledge) learn NetEase senior lessions1 and lession2","title":"2020.04"},{"location":"log/#202012","text":"learn leetcode basic methods(sort, search) review basic data structure(array, object, list, tree, graph and so on).","title":"2020.12"},{"location":"log/#2021","text":"","title":"2021"},{"location":"log/#202101","text":"todo","title":"2021.01"},{"location":"log/#202102","text":"todo","title":"2021.02"},{"location":"log/#202103","text":"rebuild personal blog using mkdocs and seperate it into several parts use some autometic method to refresh blog todo: read, remember and rewrite blog soon.","title":"2021.03"},{"location":"%E4%B8%B4%E6%97%B6/","text":"\u8fd9\u91cc\u8bb0\u5f55\u4e34\u65f6\u5f85\u6574\u7406\u7684\u60f3\u6cd5 \u00b6 03-14 \u00b6 \u7ba1\u7406\u5b66\u8bc4\u4f30\u9879\u76ee \u00b6 \u7acb\u9879\uff1a\u8003\u8651\u9879\u76ee\u7684\u5fc5\u8981\u6027\uff08\u91cd\u8981\u6027\uff0c\u7d27\u6025\u6027\uff09\u3001\u53ef\u884c\u6027\uff08\u65f6\u95f4\u6210\u672c\u3001\u91d1\u94b1\u6210\u672c\uff09\u3002\u5927\u76ee\u6807\u9700\u8981\u7cbe\u786e\u7acb\u9879\u3002 \u5927\u76ee\u6807\uff0c\u5206\u89e3\u6210\u82e5\u5e72\u5c0f\u76ee\u6807\uff0c\u9010\u4e2a\u5b8c\u6210\u3002\u4ece\u9879\u76ee\u548c\u65f6\u95f4\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u6307\u5b9a\u5f53\u524d\u7684\u4e8b\u60c5 \u4eba\u751f\u76ee\u6807\uff1a5\u5e74\u5468\u671f \u5927\u76ee\u6807\uff1a1\u5e74\u5468\u671f \u4e2d\u76ee\u6807\uff1a1\u6708\u5468\u671f \u5c0f\u76ee\u6807\uff1a1\u5468\u5468\u671f \u4e0d\u80fd\u5b9a\u91cf\u63cf\u8ff0\u7684\u76ee\u6807\uff08\u5065\u8eab\u3001\u770b\u4e66\u3001\u5b66\u4e60\u722c\u866b\u3001\u7092\u80a1\u8d5a\u94b1\uff09\uff0c\u5c31\u9700\u8981\u4fee\u6539 \u901a\u5e38\u7a7a\u51fa 20% \u7684\u5f39\u6027\u65f6\u95f4\uff08\u4e00\u5468\u7a7a\u51fa\u4e00\u5929\u5f39\u6027\u65f6\u95f4\uff0c\u5904\u7406\u4e34\u65f6\u7d27\u6025\u4efb\u52a1\uff09 \u6267\u884c\u8fc7\u7a0b\uff1a\u5f3a\u8c03\u7ec6\u8282\uff0c\u4fdd\u8d28\u4fdd\u91cf\u3002\u6267\u884c\u8fc7\u7a0b\u4e2d\u53cd\u9988\u8c03\u8282\u3002 \u65f6\u95f4\u7ed3\u675f\u3002\u8bc4\u4f30\u9879\u76ee\u5b8c\u6210\u60c5\u51b5\u3002 \u5982\u679c\u987a\u5229\u5b8c\u6210\uff0c\u7b80\u5355\u603b\u7ed3\uff0c\u8fdb\u5165\u4e0b\u4e00\u4e2a\u9879\u76ee\u3002 \u5982\u679c\u6ca1\u6709\u5b8c\u6210\uff0c\u5206\u6790\u539f\u56e0\uff08\u5982\u679c\u65f6\u95f4\u4e0d\u5145\u8db3\uff0c\u90a3\u4e48\u589e\u52a0\u65f6\u95f4\u7ee7\u7eed\u5b8c\u6210\uff0c\u6216\u8005\u4e0b\u4e00\u4e2a\u5468\u671f\u7d27\u5f20\u4e00\u70b9\uff1b\u5982\u679c\u96be\u5ea6\u5f88\u5927\uff0c\u6743\u8861\u8fd9\u4e2a\u4efb\u52a1\u662f\u5426\u73b0\u5728\u5b8c\u6210\uff0c\u65b9\u6cd5\u662f\u5426\u53ef\u4ee5\u4f18\u5316\u7b49\u7b49\uff09 \u5b66\u4e60\u7ec6\u8282 \u00b6 \u628a\u63e1\u6574\u4f53\u76ee\u5f55\u7ed3\u6784 \u5b66\u4e60\u6bcf\u4e00\u4e2a\u6a21\u5757\uff0c\u4e0d\u65ad\u9057\u5fd8\u65f6\u95f4\u590d\u4e60 \u91cd\u590d\u6b65\u9aa42\uff0c\u76f4\u5230\u5b66\u4e60\u5168\u90e8\u77e5\u8bc6\uff0c\u81ea\u5df1\u53ef\u4ee5\u53e3\u8ff0 \u6784\u5efa\u4e00\u4e2a Xmind \u77e5\u8bc6\u4f53\u7cfb\uff0c\u5b8f\u89c2\u628a\u63e1 \u9879\u76ee\u5b9e\u9645\u4f7f\u7528\uff0c\u4e0d\u65ad\u66f4\u6539\u7b14\u8bb0 \u5f85\u5b8c\u6210\u4e8b\u9879 \u00b6 \u6574\u7406\u603b\u7ed3\u81ea\u5df1\u591a\u5e74\u7684\u7b14\u8bb0\uff08\u4e13\u4e1a+\u975e\u4e13\u4e1a\uff09 \u8ba1\u7b97\u673a\u5e38\u89c1\u7684 bug \u53ca\u89e3\u51b3\u65b9\u6848 \u81ea\u5df1\u63a5\u89e6\u8fc7\u7684\u9879\u76ee\u7684\u7ed3\u6784\u548c\u91cd\u96be\u70b9 \u6574\u7406\u5b8c\u5584\u535a\u5ba2","title":"\u4e34\u65f6\u65e5\u5fd7"},{"location":"%E4%B8%B4%E6%97%B6/#_1","text":"","title":"\u8fd9\u91cc\u8bb0\u5f55\u4e34\u65f6\u5f85\u6574\u7406\u7684\u60f3\u6cd5"},{"location":"%E4%B8%B4%E6%97%B6/#03-14","text":"","title":"03-14"},{"location":"%E4%B8%B4%E6%97%B6/#_2","text":"\u7acb\u9879\uff1a\u8003\u8651\u9879\u76ee\u7684\u5fc5\u8981\u6027\uff08\u91cd\u8981\u6027\uff0c\u7d27\u6025\u6027\uff09\u3001\u53ef\u884c\u6027\uff08\u65f6\u95f4\u6210\u672c\u3001\u91d1\u94b1\u6210\u672c\uff09\u3002\u5927\u76ee\u6807\u9700\u8981\u7cbe\u786e\u7acb\u9879\u3002 \u5927\u76ee\u6807\uff0c\u5206\u89e3\u6210\u82e5\u5e72\u5c0f\u76ee\u6807\uff0c\u9010\u4e2a\u5b8c\u6210\u3002\u4ece\u9879\u76ee\u548c\u65f6\u95f4\u4e24\u4e2a\u7ef4\u5ea6\uff0c\u6307\u5b9a\u5f53\u524d\u7684\u4e8b\u60c5 \u4eba\u751f\u76ee\u6807\uff1a5\u5e74\u5468\u671f \u5927\u76ee\u6807\uff1a1\u5e74\u5468\u671f \u4e2d\u76ee\u6807\uff1a1\u6708\u5468\u671f \u5c0f\u76ee\u6807\uff1a1\u5468\u5468\u671f \u4e0d\u80fd\u5b9a\u91cf\u63cf\u8ff0\u7684\u76ee\u6807\uff08\u5065\u8eab\u3001\u770b\u4e66\u3001\u5b66\u4e60\u722c\u866b\u3001\u7092\u80a1\u8d5a\u94b1\uff09\uff0c\u5c31\u9700\u8981\u4fee\u6539 \u901a\u5e38\u7a7a\u51fa 20% \u7684\u5f39\u6027\u65f6\u95f4\uff08\u4e00\u5468\u7a7a\u51fa\u4e00\u5929\u5f39\u6027\u65f6\u95f4\uff0c\u5904\u7406\u4e34\u65f6\u7d27\u6025\u4efb\u52a1\uff09 \u6267\u884c\u8fc7\u7a0b\uff1a\u5f3a\u8c03\u7ec6\u8282\uff0c\u4fdd\u8d28\u4fdd\u91cf\u3002\u6267\u884c\u8fc7\u7a0b\u4e2d\u53cd\u9988\u8c03\u8282\u3002 \u65f6\u95f4\u7ed3\u675f\u3002\u8bc4\u4f30\u9879\u76ee\u5b8c\u6210\u60c5\u51b5\u3002 \u5982\u679c\u987a\u5229\u5b8c\u6210\uff0c\u7b80\u5355\u603b\u7ed3\uff0c\u8fdb\u5165\u4e0b\u4e00\u4e2a\u9879\u76ee\u3002 \u5982\u679c\u6ca1\u6709\u5b8c\u6210\uff0c\u5206\u6790\u539f\u56e0\uff08\u5982\u679c\u65f6\u95f4\u4e0d\u5145\u8db3\uff0c\u90a3\u4e48\u589e\u52a0\u65f6\u95f4\u7ee7\u7eed\u5b8c\u6210\uff0c\u6216\u8005\u4e0b\u4e00\u4e2a\u5468\u671f\u7d27\u5f20\u4e00\u70b9\uff1b\u5982\u679c\u96be\u5ea6\u5f88\u5927\uff0c\u6743\u8861\u8fd9\u4e2a\u4efb\u52a1\u662f\u5426\u73b0\u5728\u5b8c\u6210\uff0c\u65b9\u6cd5\u662f\u5426\u53ef\u4ee5\u4f18\u5316\u7b49\u7b49\uff09","title":"\u7ba1\u7406\u5b66\u8bc4\u4f30\u9879\u76ee"},{"location":"%E4%B8%B4%E6%97%B6/#_3","text":"\u628a\u63e1\u6574\u4f53\u76ee\u5f55\u7ed3\u6784 \u5b66\u4e60\u6bcf\u4e00\u4e2a\u6a21\u5757\uff0c\u4e0d\u65ad\u9057\u5fd8\u65f6\u95f4\u590d\u4e60 \u91cd\u590d\u6b65\u9aa42\uff0c\u76f4\u5230\u5b66\u4e60\u5168\u90e8\u77e5\u8bc6\uff0c\u81ea\u5df1\u53ef\u4ee5\u53e3\u8ff0 \u6784\u5efa\u4e00\u4e2a Xmind \u77e5\u8bc6\u4f53\u7cfb\uff0c\u5b8f\u89c2\u628a\u63e1 \u9879\u76ee\u5b9e\u9645\u4f7f\u7528\uff0c\u4e0d\u65ad\u66f4\u6539\u7b14\u8bb0","title":"\u5b66\u4e60\u7ec6\u8282"},{"location":"%E4%B8%B4%E6%97%B6/#_4","text":"\u6574\u7406\u603b\u7ed3\u81ea\u5df1\u591a\u5e74\u7684\u7b14\u8bb0\uff08\u4e13\u4e1a+\u975e\u4e13\u4e1a\uff09 \u8ba1\u7b97\u673a\u5e38\u89c1\u7684 bug \u53ca\u89e3\u51b3\u65b9\u6848 \u81ea\u5df1\u63a5\u89e6\u8fc7\u7684\u9879\u76ee\u7684\u7ed3\u6784\u548c\u91cd\u96be\u70b9 \u6574\u7406\u5b8c\u5584\u535a\u5ba2","title":"\u5f85\u5b8c\u6210\u4e8b\u9879"},{"location":"old/BUG-Auto%20packing%20the%20repository%20in%20background%20for%20optimum%20performance/","text":"\u62a5\u9519 Auto packing the repository in background for optimum performance \u00b6 git \u62a5\u9519 Auto packing the repository in background for optimum performance \u672c\u5730 \u201c\u60ac\u7a7a\u5bf9\u8c61\u201d\u592a\u591a(git\u5220\u9664\u5206\u652f\u6216\u8005\u6e05\u7a7astash\u7684\u65f6\u5019\uff0c\u8fd9\u4e9b\u5176\u5b9e\u8fd8\u6ca1\u6709\u771f\u6b63\u5220\u9664\uff0c\u6210\u4e3a\u60ac\u7a7a\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528merge\u547d\u4ee4\u53ef\u4ee5\u4ece\u4e2d\u6062\u590d\u4e00\u4e9b\u6587\u4ef6) \u89e3\u51b3\uff1a\u5220\u9664\u60ac\u6302\u7684\u5206\u652f git fsck --lost-found # \u53ef\u4ee5\u770b\u5230\u597d\u591a\u201cdangling commit\u201d git gc --prune = now #\u5b8c\u6210","title":"BUG-Auto packing the repository in background for optimum performance"},{"location":"old/BUG-Auto%20packing%20the%20repository%20in%20background%20for%20optimum%20performance/#auto-packing-the-repository-in-background-for-optimum-performance","text":"git \u62a5\u9519 Auto packing the repository in background for optimum performance \u672c\u5730 \u201c\u60ac\u7a7a\u5bf9\u8c61\u201d\u592a\u591a(git\u5220\u9664\u5206\u652f\u6216\u8005\u6e05\u7a7astash\u7684\u65f6\u5019\uff0c\u8fd9\u4e9b\u5176\u5b9e\u8fd8\u6ca1\u6709\u771f\u6b63\u5220\u9664\uff0c\u6210\u4e3a\u60ac\u7a7a\u5bf9\u8c61\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528merge\u547d\u4ee4\u53ef\u4ee5\u4ece\u4e2d\u6062\u590d\u4e00\u4e9b\u6587\u4ef6) \u89e3\u51b3\uff1a\u5220\u9664\u60ac\u6302\u7684\u5206\u652f git fsck --lost-found # \u53ef\u4ee5\u770b\u5230\u597d\u591a\u201cdangling commit\u201d git gc --prune = now #\u5b8c\u6210","title":"\u62a5\u9519 Auto packing the repository in background for optimum performance"},{"location":"old/JS-testing/","text":"JavaScript\u6d4b\u8bd5 \u00b6 \u6982\u8ff0 \u00b6 Web\u5e94\u7528\u7a0b\u5e8f\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u8fd9\u610f\u5473\u7740\u6709\u66f4\u591a\u7684\u53ef\u80fd\u51fa\u9519\u3002\u6d4b\u8bd5\u662f\u5e2e\u52a9\u6211\u4eec\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u3001\u964d\u4f4e\u9519\u8bef\u7684\u6700\u597d\u65b9\u6cd5\u548c\u5de5\u5177\u4e4b\u4e00\u3002 \u5355\u5143\u6d4b\u8bd5 \u00b6 \u5355\u5143\u6d4b\u8bd5\uff08unit testing\uff09\u6307\u7684\u662f\u4ee5\u6a21\u5757\u4e3a\u5355\u4f4d\uff0c\u5bf9\u8f6f\u4ef6\u8fdb\u884c\u6d4b\u8bd5\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u5355\u5143\uff08unit\uff09\u6307\u7684\u5c31\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u51fd\u6570\uff0c\u53ea\u8981\u8f93\u5165\u4e0d\u53d8\uff0c\u5fc5\u5b9a\u8fd4\u56de\u540c\u6837\u7684\u8f93\u51fa\u3002 \u5355\u5143\u6d4b\u8bd5\u901a\u5e38\u91c7\u53d6\u65ad\u8a00\uff08assertion\uff09\u7684\u5f62\u5f0f\uff0c\u4e5f\u5c31\u662f\u6d4b\u8bd5\u67d0\u4e2a\u529f\u80fd\u7684\u8fd4\u56de\u7ed3\u679c\uff0c\u662f\u5426\u4e0e\u9884\u671f\u7ed3\u679c\u4e00\u81f4\u3002\u5982\u679c\u4e0e\u9884\u671f\u4e0d\u4e00\u81f4\uff0c\u5c31\u8868\u793a\u6d4b\u8bd5\u5931\u8d25\u3002 \u5355\u5143\u6d4b\u8bd5\u662f\u51fd\u6570\u6b63\u5e38\u5de5\u4f5c\u3001\u4e0d\u51fa\u9519\u7684\u6700\u57fa\u672c\u3001\u6700\u6709\u6548\u7684\u65b9\u6cd5\u4e4b\u4e00\u3002 \u6bcf\u4e00\u4e2a\u5355\u5143\u6d4b\u8bd5\u53d1\u51fa\u4e00\u4e2a\u7279\u5b9a\u7684\u8f93\u5165\u5230\u6240\u8981\u6d4b\u8bd5\u7684\u51fd\u6570\uff0c\u770b\u770b\u51fd\u6570\u662f\u5426\u8fd4\u56de\u9884\u671f\u7684\u8f93\u51fa\uff0c\u6216\u8005\u91c7\u53d6\u4e86\u9884\u671f\u7684\u884c\u52a8\u3002\u5355\u5143\u6d4b\u8bd5\u8bc1\u660e\u4e86\u6240\u6d4b\u8bd5\u7684\u4ee3\u7801\u884c\u4e3a\u7b26\u5408\u9884\u671f\u3002 \u5355\u5143\u6d4b\u8bd5\u6709\u52a9\u4e8e\u4ee3\u7801\u7684\u6a21\u5757\u5316\uff0c\u56e0\u6b64\u6709\u52a9\u4e8e\u957f\u671f\u7684\u91cd\u7528\u3002\u56e0\u4e3a\u6709\u4e86\u6d4b\u8bd5\uff0c\u4f60\u5c31\u77e5\u9053\u4ee3\u7801\u662f\u53ef\u9760\u7684\uff0c\u53ef\u4ee5\u6309\u7167\u9884\u671f\u8fd0\u884c\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u8bf4\uff0c\u6d4b\u8bd5\u53ef\u4ee5\u8282\u7701\u5f00\u53d1\u65f6\u95f4\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u6709\u4e86\u6d4b\u8bd5\uff0c\u5c31\u7b49\u4e8e\u5c31\u6709\u4e86\u4ee3\u7801\u529f\u80fd\u7684\u6587\u6863\uff0c\u6709\u52a9\u4e8e\u5176\u4ed6\u5f00\u53d1\u8005\u4e86\u89e3\u4ee3\u7801\u7684\u610f\u56fe\u3002 \u5355\u5143\u6d4b\u8bd5\u5e94\u8be5\u907f\u514d\u4f9d\u8d56\u6027\u95ee\u9898\uff0c\u6bd4\u5982\u4e0d\u5b58\u53d6\u6570\u636e\u5e93\u3001\u4e0d\u8bbf\u95ee\u7f51\u7edc\u7b49\u7b49\uff0c\u800c\u662f\u4f7f\u7528\u5de5\u5177\u865a\u62df\u51fa\u8fd0\u884c\u73af\u5883\u3002\u8fd9\u79cd\u865a\u62df\u4f7f\u5f97\u6d4b\u8bd5\u6210\u672c\u6700\u5c0f\u5316\uff0c\u4e0d\u7528\u82b1\u5927\u529b\u6c14\u642d\u5efa\u5404\u79cd\u6d4b\u8bd5\u73af\u5883\u3002 \u5355\u5143\u6d4b\u8bd5\u7684\u6b65\u9aa4 \u642d\u5efa\u6d4b\u8bd5\u73af\u5883 \u89e6\u53d1\u6d4b\u8bd5 \u9a8c\u8bc1\u7ed3\u679c\u662f\u5426\u6b63\u786e \u8fd8\u539f\u88ab\u4fee\u6539\u7684\u73af\u5883 \u5355\u5143\u6d4b\u8bd5\u9700\u8981\u7528\u5230\u6d4b\u8bd5\u6846\u67b6\uff0c\u5e38\u7528\u7684\u6709 Mocha \u548c QUnit \u3002\u5176\u4ed6\u9700\u8981\u7528\u5230\u7684\u5de5\u5177\u8fd8\u6709\u4e0b\u9762\u4e00\u4e9b\u3002 \u65ad\u8a00\u5e93\uff1aExpect.js\u7b49 mock\u5e93\uff1aSinon.js\u7b49 \u8986\u76d6\u7387\u6d4b\u8bd5\u5de5\u5177\uff1aistanbul \u96c6\u6210\u6d4b\u8bd5\uff08Integration test\uff09 \u00b6 \u96c6\u6210\u6d4b\u8bd5\u6307\u7684\u662f\u591a\u4e2a\u90e8\u5206\u5728\u4e00\u8d77\u6d4b\u8bd5\uff0c\u6bd4\u5982\u5728\u4e00\u4e2a\u6d4b\u8bd5\u6570\u636e\u5e93\u4e0a\uff0c\u6d4b\u8bd5\u6570\u636e\u5e93\u8fde\u63a5\u6a21\u5757\u3002 \u529f\u80fd\u6d4b\u8bd5\uff08Functional test\uff09 \u00b6 \u529f\u80fd\u6d4b\u8bd5\u6307\u7684\u662f\uff0c\u81ea\u52a8\u6d4b\u8bd5\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u67d0\u4e2a\u529f\u80fd\uff0c\u6bd4\u5982\u4f7f\u7528Selenium\u5de5\u5177\u81ea\u52a8\u6253\u5f00\u6d4f\u89c8\u5668\u8fd0\u884c\u7a0b\u5e8f\u3002 TDD \u00b6 TDD\u662f\u6d4b\u8bd5\u9a71\u52a8\u578b\u5f00\u53d1\uff08Test-Driven Development\uff09\u7684\u7f29\u5199\uff0c\u6307\u7684\u662f\u5148\u5199\u597d\u6d4b\u8bd5\uff0c\u7136\u540e\u518d\u6839\u636e\u6d4b\u8bd5\u5b8c\u6210\u5f00\u53d1\u3002\u4f7f\u7528\u8fd9\u79cd\u5f00\u53d1\u65b9\u5f0f\uff0c\u4f1a\u6709\u5f88\u9ad8\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u3002 TDD\u7684\u5f00\u53d1\u6b65\u9aa4\u5982\u4e0b\u3002 \u5148\u5199\u4e00\u4e2a\u6d4b\u8bd5\u3002 \u5199\u51fa\u6700\u5c0f\u6570\u91cf\u7684\u4ee3\u7801\uff0c\u4f7f\u5176\u80fd\u591f\u901a\u8fc7\u6d4b\u8bd5\u3002 \u4f18\u5316\u4ee3\u7801\u3002 \u91cd\u590d\u524d\u9762\u4e09\u6b65\u3002 TDD\u5f00\u53d1\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u901a\u5e38\u572890%\u4ee5\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u7ef4\u62a4\u4ee3\u7801\u548c\u65b0\u589e\u7279\u6027\u4f1a\u975e\u5e38\u5bb9\u6613\u3002\u56e0\u4e3a\u6d4b\u8bd5\u4fdd\u8bc1\u4e86\u4f60\u53ef\u4ee5\u4fe1\u4efb\u8fd9\u4e9b\u4ee3\u7801\uff0c\u4fee\u6539\u5b83\u4eec\u4e0d\u4f1a\u7834\u574f\u5176\u4ed6\u4ee3\u7801\u7684\u8fd0\u884c\u3002 BDD \u00b6 BDD\u662f\u884c\u4e3a\u9a71\u52a8\u5f00\u53d1\uff08Behavior-Driven Development\uff09\u7684\u7f29\u5199\uff0c\u6307\u7684\u662f\u5199\u51fa\u4f18\u79c0\u6d4b\u8bd5\u7684\u6700\u4f73\u5b9e\u8df5\u7684\u603b\u79f0\u3002\u5b83\u5e94\u8be5\u4e0eTDD\u548c\u5355\u5143\u6d4b\u8bd5\u4e00\u8d77\u914d\u5408\u4f7f\u7528\u3002 BDD\u8ba4\u4e3a\uff0c\u4e0d\u5e94\u8be5\u9488\u5bf9\u4ee3\u7801\u7684\u5b9e\u73b0\u7ec6\u8282\u5199\u6d4b\u8bd5\uff0c\u800c\u662f\u8981\u9488\u5bf9\u884c\u4e3a\u5199\u6d4b\u8bd5\u3002\u8bf7\u770b\u4e0b\u9762\u6d4b\u8bd5\u8ba1\u6570\u5668\u662f\u5426\u52a01\u7684\u4f8b\u5b50\u3002 suite ( 'Counter' , function () { test ( 'tick increases count to 1' , function () { var counter = new Counter (); counter . tick (); assert . equal ( counter . count , 1 ); }); }); \u4e0a\u9762\u4ee3\u7801\u6d4b\u8bd5\u7684\u662fCounter\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u5373Counter\u5b9e\u4f8b\u7684\u9ed8\u8ba4\u503c\u4e3a0\uff0c\u8c03\u7528tick\u65b9\u6cd5\u540e\u589e\u52a0\u4e3a1\u3002 BDD\u6d4b\u8bd5\u7684\u662f\u884c\u4e3a\uff0c\u5373\u5e94\u8be5\u600e\u6837\u8fd0\u884c\u3002 describe ( 'Counter' , function () { it ( 'should increase count by 1 after calling tick' , function () { var counter = new Counter (); var expectedCount = counter . count + 1 ; counter . tick (); assert . equal ( counter . count , expectedCount ); }); }); \u603b\u7ed3\u4e00\u4e0b\uff0c\u5c31\u662fTDD\u544a\u8bc9\u4f60\u4f55\u65f6\u5199\u6d4b\u8bd5\uff0c\u4f55\u65f6\u5199\u4ee3\u7801\uff0cBDD\u544a\u8bc9\u4f60\u5982\u4f55\u5199\u6d4b\u8bd5\uff0c\u4e24\u8005\u5e94\u8be5\u7ed3\u5408\u8d77\u6765\u3002 QUnit \u00b6 QUnit\u7684\u4f5c\u8005\u5c31\u662fjQuery\u7684\u4f5c\u8005\uff0c\u4ece2008\u5e74\u521b\u7acb\uff0c\u6700\u65e9\u53ea\u80fd\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u3002 QUint\u81ea\u5e26\u65ad\u8a00\u5e93\uff08assert\u5bf9\u8c61\uff09\uff0c\u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u5916\u90e8\u7684\u65ad\u8a00\u5e93\u3002 QUnit . test ( \"hello test\" , function ( assert ) { assert . ok ( 1 == \"1\" , \"Passed!\" ); }); \u65ad\u8a00\u7684\u4e09\u79cd\u98ce\u683c \u00b6 assert\u3001expext\u3001should\u662f\u65ad\u8a00\u7684\u4e09\u79cd\u98ce\u683c\u3002 // with an assert style assert . equal ( event . detail . item , '(item).); // or an expect style expect(event.detail.item).to.equal(' ( item ) '); // or should style event.detail.item.should.equal(' ( item ) ' ); done (); Chai.js \u00b6 assert\u98ce\u683c \u00b6 var assert = require ( 'chai' ). assert , foo = 'bar' , beverages = { tea : [ 'chai' , 'matcha' , 'oolong' ] }; assert . typeOf ( foo , 'string' , 'foo is a string' ); assert . equal ( foo , 'bar' , 'foo equal `bar`' ); assert . lengthOf ( foo , 3 , 'foo`s value has a length of 3' ); assert . lengthOf ( beverages . tea , 3 , 'beverages has 3 types of tea' ); \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0cassert\u65b9\u6cd5\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u9519\u8bef\u63d0\u793a\u4fe1\u606f\uff0c\u53ea\u6709\u6d4b\u8bd5\u6ca1\u6709\u901a\u8fc7\u65f6\uff0c\u624d\u4f1a\u663e\u793a\u3002 expect\u98ce\u683c \u00b6 var expect = require ( 'chai' ). expect , foo = 'bar' , beverages = { tea : [ 'chai' , 'matcha' , 'oolong' ] }; expect ( foo ). to . be . a ( 'string' ); expect ( foo ). to . equal ( 'bar' ); expect ( foo ). to . have . length ( 3 ); expect ( beverages ). to . have . property ( 'tea' ). with . length ( 3 ); \u663e\u793a\u7684\u9519\u8bef\u63d0\u793a\u5982\u4e0b\u3002 var answer = 43 ; // AssertionError: expected 43 to equal 42. expect ( answer ). to . equal ( 42 ); // AssertionError: topic [answer]: expected 43 to equal 42. expect ( answer , 'topic [answer]' ). to . equal ( 42 ); Expect.js\u7684\u4f8b\u5b50\u3002 expect ({}). to . be . an ( 'object' ); expect ([ 1 , 2 , 3 ]). to . contain ( 2 ); expect ([ 'a' , 'b' , 'c' ]). to . eql ([ 'a' , 'b' , 'c' ]); should\u98ce\u683c \u00b6 var should = require ( 'chai' ). should () //actually call the the function , foo = 'bar' , beverages = { tea : [ 'chai' , 'matcha' , 'oolong' ] }; foo . should . be . a ( 'string' ); foo . should . equal ( 'bar' ); foo . should . have . length ( 3 ); beverages . should . have . property ( 'tea' ). with . length ( 3 ); \u53c2\u8003\u94fe\u63a5 \u00b6 Jon Bretman, Unit Testing JavaScript Jani Hartikainen, What\u2019s the difference between Unit Testing, TDD and BDD?","title":"JS-testing"},{"location":"old/JS-testing/#javascript","text":"","title":"JavaScript\u6d4b\u8bd5"},{"location":"old/JS-testing/#_1","text":"Web\u5e94\u7528\u7a0b\u5e8f\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u8fd9\u610f\u5473\u7740\u6709\u66f4\u591a\u7684\u53ef\u80fd\u51fa\u9519\u3002\u6d4b\u8bd5\u662f\u5e2e\u52a9\u6211\u4eec\u63d0\u9ad8\u4ee3\u7801\u8d28\u91cf\u3001\u964d\u4f4e\u9519\u8bef\u7684\u6700\u597d\u65b9\u6cd5\u548c\u5de5\u5177\u4e4b\u4e00\u3002","title":"\u6982\u8ff0"},{"location":"old/JS-testing/#_2","text":"\u5355\u5143\u6d4b\u8bd5\uff08unit testing\uff09\u6307\u7684\u662f\u4ee5\u6a21\u5757\u4e3a\u5355\u4f4d\uff0c\u5bf9\u8f6f\u4ef6\u8fdb\u884c\u6d4b\u8bd5\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u5355\u5143\uff08unit\uff09\u6307\u7684\u5c31\u662f\u4e00\u4e2a\u7eaf\u7cb9\u7684\u51fd\u6570\uff0c\u53ea\u8981\u8f93\u5165\u4e0d\u53d8\uff0c\u5fc5\u5b9a\u8fd4\u56de\u540c\u6837\u7684\u8f93\u51fa\u3002 \u5355\u5143\u6d4b\u8bd5\u901a\u5e38\u91c7\u53d6\u65ad\u8a00\uff08assertion\uff09\u7684\u5f62\u5f0f\uff0c\u4e5f\u5c31\u662f\u6d4b\u8bd5\u67d0\u4e2a\u529f\u80fd\u7684\u8fd4\u56de\u7ed3\u679c\uff0c\u662f\u5426\u4e0e\u9884\u671f\u7ed3\u679c\u4e00\u81f4\u3002\u5982\u679c\u4e0e\u9884\u671f\u4e0d\u4e00\u81f4\uff0c\u5c31\u8868\u793a\u6d4b\u8bd5\u5931\u8d25\u3002 \u5355\u5143\u6d4b\u8bd5\u662f\u51fd\u6570\u6b63\u5e38\u5de5\u4f5c\u3001\u4e0d\u51fa\u9519\u7684\u6700\u57fa\u672c\u3001\u6700\u6709\u6548\u7684\u65b9\u6cd5\u4e4b\u4e00\u3002 \u6bcf\u4e00\u4e2a\u5355\u5143\u6d4b\u8bd5\u53d1\u51fa\u4e00\u4e2a\u7279\u5b9a\u7684\u8f93\u5165\u5230\u6240\u8981\u6d4b\u8bd5\u7684\u51fd\u6570\uff0c\u770b\u770b\u51fd\u6570\u662f\u5426\u8fd4\u56de\u9884\u671f\u7684\u8f93\u51fa\uff0c\u6216\u8005\u91c7\u53d6\u4e86\u9884\u671f\u7684\u884c\u52a8\u3002\u5355\u5143\u6d4b\u8bd5\u8bc1\u660e\u4e86\u6240\u6d4b\u8bd5\u7684\u4ee3\u7801\u884c\u4e3a\u7b26\u5408\u9884\u671f\u3002 \u5355\u5143\u6d4b\u8bd5\u6709\u52a9\u4e8e\u4ee3\u7801\u7684\u6a21\u5757\u5316\uff0c\u56e0\u6b64\u6709\u52a9\u4e8e\u957f\u671f\u7684\u91cd\u7528\u3002\u56e0\u4e3a\u6709\u4e86\u6d4b\u8bd5\uff0c\u4f60\u5c31\u77e5\u9053\u4ee3\u7801\u662f\u53ef\u9760\u7684\uff0c\u53ef\u4ee5\u6309\u7167\u9884\u671f\u8fd0\u884c\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u8bf4\uff0c\u6d4b\u8bd5\u53ef\u4ee5\u8282\u7701\u5f00\u53d1\u65f6\u95f4\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u53e6\u4e00\u4e2a\u597d\u5904\u662f\uff0c\u6709\u4e86\u6d4b\u8bd5\uff0c\u5c31\u7b49\u4e8e\u5c31\u6709\u4e86\u4ee3\u7801\u529f\u80fd\u7684\u6587\u6863\uff0c\u6709\u52a9\u4e8e\u5176\u4ed6\u5f00\u53d1\u8005\u4e86\u89e3\u4ee3\u7801\u7684\u610f\u56fe\u3002 \u5355\u5143\u6d4b\u8bd5\u5e94\u8be5\u907f\u514d\u4f9d\u8d56\u6027\u95ee\u9898\uff0c\u6bd4\u5982\u4e0d\u5b58\u53d6\u6570\u636e\u5e93\u3001\u4e0d\u8bbf\u95ee\u7f51\u7edc\u7b49\u7b49\uff0c\u800c\u662f\u4f7f\u7528\u5de5\u5177\u865a\u62df\u51fa\u8fd0\u884c\u73af\u5883\u3002\u8fd9\u79cd\u865a\u62df\u4f7f\u5f97\u6d4b\u8bd5\u6210\u672c\u6700\u5c0f\u5316\uff0c\u4e0d\u7528\u82b1\u5927\u529b\u6c14\u642d\u5efa\u5404\u79cd\u6d4b\u8bd5\u73af\u5883\u3002 \u5355\u5143\u6d4b\u8bd5\u7684\u6b65\u9aa4 \u642d\u5efa\u6d4b\u8bd5\u73af\u5883 \u89e6\u53d1\u6d4b\u8bd5 \u9a8c\u8bc1\u7ed3\u679c\u662f\u5426\u6b63\u786e \u8fd8\u539f\u88ab\u4fee\u6539\u7684\u73af\u5883 \u5355\u5143\u6d4b\u8bd5\u9700\u8981\u7528\u5230\u6d4b\u8bd5\u6846\u67b6\uff0c\u5e38\u7528\u7684\u6709 Mocha \u548c QUnit \u3002\u5176\u4ed6\u9700\u8981\u7528\u5230\u7684\u5de5\u5177\u8fd8\u6709\u4e0b\u9762\u4e00\u4e9b\u3002 \u65ad\u8a00\u5e93\uff1aExpect.js\u7b49 mock\u5e93\uff1aSinon.js\u7b49 \u8986\u76d6\u7387\u6d4b\u8bd5\u5de5\u5177\uff1aistanbul","title":"\u5355\u5143\u6d4b\u8bd5"},{"location":"old/JS-testing/#integration-test","text":"\u96c6\u6210\u6d4b\u8bd5\u6307\u7684\u662f\u591a\u4e2a\u90e8\u5206\u5728\u4e00\u8d77\u6d4b\u8bd5\uff0c\u6bd4\u5982\u5728\u4e00\u4e2a\u6d4b\u8bd5\u6570\u636e\u5e93\u4e0a\uff0c\u6d4b\u8bd5\u6570\u636e\u5e93\u8fde\u63a5\u6a21\u5757\u3002","title":"\u96c6\u6210\u6d4b\u8bd5\uff08Integration test\uff09"},{"location":"old/JS-testing/#functional-test","text":"\u529f\u80fd\u6d4b\u8bd5\u6307\u7684\u662f\uff0c\u81ea\u52a8\u6d4b\u8bd5\u6574\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u67d0\u4e2a\u529f\u80fd\uff0c\u6bd4\u5982\u4f7f\u7528Selenium\u5de5\u5177\u81ea\u52a8\u6253\u5f00\u6d4f\u89c8\u5668\u8fd0\u884c\u7a0b\u5e8f\u3002","title":"\u529f\u80fd\u6d4b\u8bd5\uff08Functional test\uff09"},{"location":"old/JS-testing/#tdd","text":"TDD\u662f\u6d4b\u8bd5\u9a71\u52a8\u578b\u5f00\u53d1\uff08Test-Driven Development\uff09\u7684\u7f29\u5199\uff0c\u6307\u7684\u662f\u5148\u5199\u597d\u6d4b\u8bd5\uff0c\u7136\u540e\u518d\u6839\u636e\u6d4b\u8bd5\u5b8c\u6210\u5f00\u53d1\u3002\u4f7f\u7528\u8fd9\u79cd\u5f00\u53d1\u65b9\u5f0f\uff0c\u4f1a\u6709\u5f88\u9ad8\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u3002 TDD\u7684\u5f00\u53d1\u6b65\u9aa4\u5982\u4e0b\u3002 \u5148\u5199\u4e00\u4e2a\u6d4b\u8bd5\u3002 \u5199\u51fa\u6700\u5c0f\u6570\u91cf\u7684\u4ee3\u7801\uff0c\u4f7f\u5176\u80fd\u591f\u901a\u8fc7\u6d4b\u8bd5\u3002 \u4f18\u5316\u4ee3\u7801\u3002 \u91cd\u590d\u524d\u9762\u4e09\u6b65\u3002 TDD\u5f00\u53d1\u7684\u6d4b\u8bd5\u8986\u76d6\u7387\u901a\u5e38\u572890%\u4ee5\u4e0a\uff0c\u8fd9\u610f\u5473\u7740\u7ef4\u62a4\u4ee3\u7801\u548c\u65b0\u589e\u7279\u6027\u4f1a\u975e\u5e38\u5bb9\u6613\u3002\u56e0\u4e3a\u6d4b\u8bd5\u4fdd\u8bc1\u4e86\u4f60\u53ef\u4ee5\u4fe1\u4efb\u8fd9\u4e9b\u4ee3\u7801\uff0c\u4fee\u6539\u5b83\u4eec\u4e0d\u4f1a\u7834\u574f\u5176\u4ed6\u4ee3\u7801\u7684\u8fd0\u884c\u3002","title":"TDD"},{"location":"old/JS-testing/#bdd","text":"BDD\u662f\u884c\u4e3a\u9a71\u52a8\u5f00\u53d1\uff08Behavior-Driven Development\uff09\u7684\u7f29\u5199\uff0c\u6307\u7684\u662f\u5199\u51fa\u4f18\u79c0\u6d4b\u8bd5\u7684\u6700\u4f73\u5b9e\u8df5\u7684\u603b\u79f0\u3002\u5b83\u5e94\u8be5\u4e0eTDD\u548c\u5355\u5143\u6d4b\u8bd5\u4e00\u8d77\u914d\u5408\u4f7f\u7528\u3002 BDD\u8ba4\u4e3a\uff0c\u4e0d\u5e94\u8be5\u9488\u5bf9\u4ee3\u7801\u7684\u5b9e\u73b0\u7ec6\u8282\u5199\u6d4b\u8bd5\uff0c\u800c\u662f\u8981\u9488\u5bf9\u884c\u4e3a\u5199\u6d4b\u8bd5\u3002\u8bf7\u770b\u4e0b\u9762\u6d4b\u8bd5\u8ba1\u6570\u5668\u662f\u5426\u52a01\u7684\u4f8b\u5b50\u3002 suite ( 'Counter' , function () { test ( 'tick increases count to 1' , function () { var counter = new Counter (); counter . tick (); assert . equal ( counter . count , 1 ); }); }); \u4e0a\u9762\u4ee3\u7801\u6d4b\u8bd5\u7684\u662fCounter\u7684\u5185\u90e8\u5b9e\u73b0\uff0c\u5373Counter\u5b9e\u4f8b\u7684\u9ed8\u8ba4\u503c\u4e3a0\uff0c\u8c03\u7528tick\u65b9\u6cd5\u540e\u589e\u52a0\u4e3a1\u3002 BDD\u6d4b\u8bd5\u7684\u662f\u884c\u4e3a\uff0c\u5373\u5e94\u8be5\u600e\u6837\u8fd0\u884c\u3002 describe ( 'Counter' , function () { it ( 'should increase count by 1 after calling tick' , function () { var counter = new Counter (); var expectedCount = counter . count + 1 ; counter . tick (); assert . equal ( counter . count , expectedCount ); }); }); \u603b\u7ed3\u4e00\u4e0b\uff0c\u5c31\u662fTDD\u544a\u8bc9\u4f60\u4f55\u65f6\u5199\u6d4b\u8bd5\uff0c\u4f55\u65f6\u5199\u4ee3\u7801\uff0cBDD\u544a\u8bc9\u4f60\u5982\u4f55\u5199\u6d4b\u8bd5\uff0c\u4e24\u8005\u5e94\u8be5\u7ed3\u5408\u8d77\u6765\u3002","title":"BDD"},{"location":"old/JS-testing/#qunit","text":"QUnit\u7684\u4f5c\u8005\u5c31\u662fjQuery\u7684\u4f5c\u8005\uff0c\u4ece2008\u5e74\u521b\u7acb\uff0c\u6700\u65e9\u53ea\u80fd\u5728\u6d4f\u89c8\u5668\u4e2d\u8fd0\u884c\u3002 QUint\u81ea\u5e26\u65ad\u8a00\u5e93\uff08assert\u5bf9\u8c61\uff09\uff0c\u6240\u4ee5\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u5916\u90e8\u7684\u65ad\u8a00\u5e93\u3002 QUnit . test ( \"hello test\" , function ( assert ) { assert . ok ( 1 == \"1\" , \"Passed!\" ); });","title":"QUnit"},{"location":"old/JS-testing/#_3","text":"assert\u3001expext\u3001should\u662f\u65ad\u8a00\u7684\u4e09\u79cd\u98ce\u683c\u3002 // with an assert style assert . equal ( event . detail . item , '(item).); // or an expect style expect(event.detail.item).to.equal(' ( item ) '); // or should style event.detail.item.should.equal(' ( item ) ' ); done ();","title":"\u65ad\u8a00\u7684\u4e09\u79cd\u98ce\u683c"},{"location":"old/JS-testing/#chaijs","text":"","title":"Chai.js"},{"location":"old/JS-testing/#assert","text":"var assert = require ( 'chai' ). assert , foo = 'bar' , beverages = { tea : [ 'chai' , 'matcha' , 'oolong' ] }; assert . typeOf ( foo , 'string' , 'foo is a string' ); assert . equal ( foo , 'bar' , 'foo equal `bar`' ); assert . lengthOf ( foo , 3 , 'foo`s value has a length of 3' ); assert . lengthOf ( beverages . tea , 3 , 'beverages has 3 types of tea' ); \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0cassert\u65b9\u6cd5\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u662f\u9519\u8bef\u63d0\u793a\u4fe1\u606f\uff0c\u53ea\u6709\u6d4b\u8bd5\u6ca1\u6709\u901a\u8fc7\u65f6\uff0c\u624d\u4f1a\u663e\u793a\u3002","title":"assert\u98ce\u683c"},{"location":"old/JS-testing/#expect","text":"var expect = require ( 'chai' ). expect , foo = 'bar' , beverages = { tea : [ 'chai' , 'matcha' , 'oolong' ] }; expect ( foo ). to . be . a ( 'string' ); expect ( foo ). to . equal ( 'bar' ); expect ( foo ). to . have . length ( 3 ); expect ( beverages ). to . have . property ( 'tea' ). with . length ( 3 ); \u663e\u793a\u7684\u9519\u8bef\u63d0\u793a\u5982\u4e0b\u3002 var answer = 43 ; // AssertionError: expected 43 to equal 42. expect ( answer ). to . equal ( 42 ); // AssertionError: topic [answer]: expected 43 to equal 42. expect ( answer , 'topic [answer]' ). to . equal ( 42 ); Expect.js\u7684\u4f8b\u5b50\u3002 expect ({}). to . be . an ( 'object' ); expect ([ 1 , 2 , 3 ]). to . contain ( 2 ); expect ([ 'a' , 'b' , 'c' ]). to . eql ([ 'a' , 'b' , 'c' ]);","title":"expect\u98ce\u683c"},{"location":"old/JS-testing/#should","text":"var should = require ( 'chai' ). should () //actually call the the function , foo = 'bar' , beverages = { tea : [ 'chai' , 'matcha' , 'oolong' ] }; foo . should . be . a ( 'string' ); foo . should . equal ( 'bar' ); foo . should . have . length ( 3 ); beverages . should . have . property ( 'tea' ). with . length ( 3 );","title":"should\u98ce\u683c"},{"location":"old/JS-testing/#_4","text":"Jon Bretman, Unit Testing JavaScript Jani Hartikainen, What\u2019s the difference between Unit Testing, TDD and BDD?","title":"\u53c2\u8003\u94fe\u63a5"},{"location":"old/JSzip/","text":"JSzip \u00b6 \u524d\u8a00 \u00b6 \u524d\u7aef\u5728\u5904\u7406\u6587\u4ef6\u65f6\uff0c\u5bf9\u4e8e\u5927\u6587\u4ef6\u6216\u8005\u591a\u4e2a\u6587\u4ef6\u4e0a\u4f20\u3001\u4e0b\u8f7d\u3001\u7f16\u8f91\uff0c\u76f4\u63a5\u4f7f\u7528\u539f\u6587\u4ef6\u4e0d\u65b9\u4fbf\uff0c\u6700\u8fd1\u4f7f\u7528\u4e00\u4e2a\u53ef\u4ee5\u524d\u7aef\u4e2d\u5904\u7406 zip \u6587\u4ef6\u7684\u5e93\uff0cJSzip\u3002\u4e3b\u8981\u529f\u80fd\uff1a\u524d\u7aef\u4e2d\u538b\u7f29\u3001\u89e3\u538b\u7f29\u3001\u7f16\u8f91zip\u6587\u4ef6\u3002 \u8fd9\u4e2a\u5e93\u7684\u5b98\u7f51\uff1a https://stuk.github.io/jszip/ \u5b89\u88c5 \u00b6 \u6d4f\u89c8\u5668\u73af\u5883 \u00b6 \u4ee3\u7801\u4e0b\u8f7d\u94fe\u63a5 http://github.com/Stuk/jszip/zipball/master node \u73af\u5883 \u00b6 npm install jszip --save // \u4f7f\u7528ES5\u5f15\u5165 var JSZip = require ( \"jszip\" ); var saveAs = require ( 'file-saver' ); // \u65b0\u5efa\u4e00\u4e2azip\u538b\u7f29\u5bf9\u8c61\u5b9e\u4f8b var zip = new JSZip (); // \u538b\u7f29\u4e00\u4e2a\u6587\u4ef6 zip . file ( \"Hello.txt\" , \"Hello World\\n\" ); // \u538b\u7f29\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5185\u90e8\u5305\u542b\u4e00\u4e2a\u56fe\u7247 zip . folder ( \"images\" ). file ( \"smile.gif\" , imgData , { base64 : true }); // \u5f02\u6b65\u751f\u6210\u538b\u7f29\u6587\u4ef6 zip . generateAsync ({ type : \"blob\" }). then ( function ( content ) { // \u4fdd\u5b58\u5230\u672c\u5730 saveAs ( content , \"example.zip\" ); }); \u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u6d4f\u89c8\u5668\u4e2d\u7684\u6587\u672c\uff08\u6587\u4ef6\uff09\u4fdd\u5b58\u6210zip\u683c\u5f0f\u5b58\u50a8\u5230\u672c\u5730\u4e86\u3002","title":"JSzip"},{"location":"old/JSzip/#jszip","text":"","title":"JSzip"},{"location":"old/JSzip/#_1","text":"\u524d\u7aef\u5728\u5904\u7406\u6587\u4ef6\u65f6\uff0c\u5bf9\u4e8e\u5927\u6587\u4ef6\u6216\u8005\u591a\u4e2a\u6587\u4ef6\u4e0a\u4f20\u3001\u4e0b\u8f7d\u3001\u7f16\u8f91\uff0c\u76f4\u63a5\u4f7f\u7528\u539f\u6587\u4ef6\u4e0d\u65b9\u4fbf\uff0c\u6700\u8fd1\u4f7f\u7528\u4e00\u4e2a\u53ef\u4ee5\u524d\u7aef\u4e2d\u5904\u7406 zip \u6587\u4ef6\u7684\u5e93\uff0cJSzip\u3002\u4e3b\u8981\u529f\u80fd\uff1a\u524d\u7aef\u4e2d\u538b\u7f29\u3001\u89e3\u538b\u7f29\u3001\u7f16\u8f91zip\u6587\u4ef6\u3002 \u8fd9\u4e2a\u5e93\u7684\u5b98\u7f51\uff1a https://stuk.github.io/jszip/","title":"\u524d\u8a00"},{"location":"old/JSzip/#_2","text":"","title":"\u5b89\u88c5"},{"location":"old/JSzip/#_3","text":"\u4ee3\u7801\u4e0b\u8f7d\u94fe\u63a5 http://github.com/Stuk/jszip/zipball/master","title":"\u6d4f\u89c8\u5668\u73af\u5883"},{"location":"old/JSzip/#node","text":"npm install jszip --save // \u4f7f\u7528ES5\u5f15\u5165 var JSZip = require ( \"jszip\" ); var saveAs = require ( 'file-saver' ); // \u65b0\u5efa\u4e00\u4e2azip\u538b\u7f29\u5bf9\u8c61\u5b9e\u4f8b var zip = new JSZip (); // \u538b\u7f29\u4e00\u4e2a\u6587\u4ef6 zip . file ( \"Hello.txt\" , \"Hello World\\n\" ); // \u538b\u7f29\u4e00\u4e2a\u6587\u4ef6\u5939\uff0c\u5185\u90e8\u5305\u542b\u4e00\u4e2a\u56fe\u7247 zip . folder ( \"images\" ). file ( \"smile.gif\" , imgData , { base64 : true }); // \u5f02\u6b65\u751f\u6210\u538b\u7f29\u6587\u4ef6 zip . generateAsync ({ type : \"blob\" }). then ( function ( content ) { // \u4fdd\u5b58\u5230\u672c\u5730 saveAs ( content , \"example.zip\" ); }); \u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u6d4f\u89c8\u5668\u4e2d\u7684\u6587\u672c\uff08\u6587\u4ef6\uff09\u4fdd\u5b58\u6210zip\u683c\u5f0f\u5b58\u50a8\u5230\u672c\u5730\u4e86\u3002","title":"node \u73af\u5883"},{"location":"old/React-Router/","text":"React-Router \u00b6 React-router \u89e3\u51b3\u95ee\u9898\uff1aUI\u4e0eURL\u89e3\u8026 \u95ee\u9898\uff1a\u539f\u59cb\u540c\u4e00\u4e2a\u754c\u9762\u5185\u90e8\u4f7f\u7528 a \u8fdb\u884c\u8df3\u8f6c\uff0c\u4e0d\u540c\u754c\u9762\u4e2d\u4f7f\u7528 # hash \u8df3\u8f6c\u3002\u5982\u679c\u5728React\u6846\u67b6\u4e0b\uff0c\u5bf9\u4e8eSPA\uff0c\u9700\u8981\u83b7\u53d6\u754c\u9762\u7684 hash \u518d\u5224\u65ad\u754c\u9762\u4e2d\u52a0\u8f7d\u4ec0\u4e48\u90e8\u5206\uff08setState\uff09\uff0c\u8fd9\u6837\u6548\u7387\u4f4e\u4e0b\uff0cUI \u4e0e URL \u4e0d\u5206\u79bb\u3002 \u89e3\u51b3\uff1a\u9996\u5148\u4f7f\u7528 <Link to={path}> \u4f5c\u4e3a\u8d85\u94fe\u63a5\uff0c\u70b9\u51fb\u540e\u754c\u9762URL\u6539\u53d8\u3002React-touter \u6839\u636eURL\u53d8\u5316\uff0c\u4e0d\u9700\u8981\u5224\u65ad\uff0c\u76f4\u63a5\u6839\u636e <Router><Component to={path}> \u6e32\u67d3\u90e8\u5206\u5185\u5bb9\uff0c\u6574\u4f53\u754c\u9762\u4e0d\u4f1a\u91cd\u65b0\u52a0\u8f7d\u3002 Link \u00b6 \u539f\u59cbHTML\u754c\u9762\u4e2d\uff0c\u4e0d\u540c\u754c\u9762\u95f4\u8fdb\u884c\u5207\u6362\uff0c\u754c\u9762\u9700\u8981\u91cd\u8f7d\u3002 \u4f7f\u7528Link\u7ec4\u4ef6\u540e\uff0cURL\u4f1a\u66f4\u65b0\uff0c\u754c\u9762\u4e0d\u9700\u8981\u91cd\u8f7d\uff0cReact\u7ec4\u4ef6\u4f1a\u88ab\u91cd\u65b0\u6e32\u67d3\u3002 Link \u7ec4\u4ef6\u901a\u8fc7 to \u5c5e\u6027\u8bbe\u7f6e\u754c\u9762\u7684\u5207\u6362\u3002\u5b9e\u9645\u4e0a\uff0cLink\u6e32\u67d3\u6210 A \u6807\u7b7e\uff0cto\u5c5e\u6027\u53ef\u4ee5\u4f5c\u4e3ahref\u3002Link \u7ec4\u4ef6\u6700\u7ec8\u4f1a\u6e32\u67d3\u4e3a HTML \u6807\u7b7e \uff0c\u5b83\u7684 to\u3001query\u3001hash \u5c5e\u6027\u4f1a\u88ab\u7ec4\u5408\u5728\u4e00\u8d77\u5e76\u6e32\u67d3\u4e3a href \u5c5e\u6027\u3002\u867d\u7136 Link \u88ab\u6e32\u67d3\u4e3a\u8d85\u94fe\u63a5\uff0c\u4f46\u5728\u5185\u90e8\u5b9e\u73b0\u4e0a\u4f7f\u7528\u811a\u672c\u62e6\u622a\u4e86\u6d4f\u89c8\u5668\u7684\u9ed8\u8ba4\u884c\u4e3a\uff0c\u7136\u540e\u8c03\u7528\u4e86history.pushState \u65b9\u6cd5\u3002 To \u901a\u5e38\u53ef\u4ee5\u4f7f\u5b57\u7b26\u4e32\u6216\u8005\u5bf9\u8c61","title":"React-Router"},{"location":"old/React-Router/#react-router","text":"React-router \u89e3\u51b3\u95ee\u9898\uff1aUI\u4e0eURL\u89e3\u8026 \u95ee\u9898\uff1a\u539f\u59cb\u540c\u4e00\u4e2a\u754c\u9762\u5185\u90e8\u4f7f\u7528 a \u8fdb\u884c\u8df3\u8f6c\uff0c\u4e0d\u540c\u754c\u9762\u4e2d\u4f7f\u7528 # hash \u8df3\u8f6c\u3002\u5982\u679c\u5728React\u6846\u67b6\u4e0b\uff0c\u5bf9\u4e8eSPA\uff0c\u9700\u8981\u83b7\u53d6\u754c\u9762\u7684 hash \u518d\u5224\u65ad\u754c\u9762\u4e2d\u52a0\u8f7d\u4ec0\u4e48\u90e8\u5206\uff08setState\uff09\uff0c\u8fd9\u6837\u6548\u7387\u4f4e\u4e0b\uff0cUI \u4e0e URL \u4e0d\u5206\u79bb\u3002 \u89e3\u51b3\uff1a\u9996\u5148\u4f7f\u7528 <Link to={path}> \u4f5c\u4e3a\u8d85\u94fe\u63a5\uff0c\u70b9\u51fb\u540e\u754c\u9762URL\u6539\u53d8\u3002React-touter \u6839\u636eURL\u53d8\u5316\uff0c\u4e0d\u9700\u8981\u5224\u65ad\uff0c\u76f4\u63a5\u6839\u636e <Router><Component to={path}> \u6e32\u67d3\u90e8\u5206\u5185\u5bb9\uff0c\u6574\u4f53\u754c\u9762\u4e0d\u4f1a\u91cd\u65b0\u52a0\u8f7d\u3002","title":"React-Router"},{"location":"old/React-Router/#link","text":"\u539f\u59cbHTML\u754c\u9762\u4e2d\uff0c\u4e0d\u540c\u754c\u9762\u95f4\u8fdb\u884c\u5207\u6362\uff0c\u754c\u9762\u9700\u8981\u91cd\u8f7d\u3002 \u4f7f\u7528Link\u7ec4\u4ef6\u540e\uff0cURL\u4f1a\u66f4\u65b0\uff0c\u754c\u9762\u4e0d\u9700\u8981\u91cd\u8f7d\uff0cReact\u7ec4\u4ef6\u4f1a\u88ab\u91cd\u65b0\u6e32\u67d3\u3002 Link \u7ec4\u4ef6\u901a\u8fc7 to \u5c5e\u6027\u8bbe\u7f6e\u754c\u9762\u7684\u5207\u6362\u3002\u5b9e\u9645\u4e0a\uff0cLink\u6e32\u67d3\u6210 A \u6807\u7b7e\uff0cto\u5c5e\u6027\u53ef\u4ee5\u4f5c\u4e3ahref\u3002Link \u7ec4\u4ef6\u6700\u7ec8\u4f1a\u6e32\u67d3\u4e3a HTML \u6807\u7b7e \uff0c\u5b83\u7684 to\u3001query\u3001hash \u5c5e\u6027\u4f1a\u88ab\u7ec4\u5408\u5728\u4e00\u8d77\u5e76\u6e32\u67d3\u4e3a href \u5c5e\u6027\u3002\u867d\u7136 Link \u88ab\u6e32\u67d3\u4e3a\u8d85\u94fe\u63a5\uff0c\u4f46\u5728\u5185\u90e8\u5b9e\u73b0\u4e0a\u4f7f\u7528\u811a\u672c\u62e6\u622a\u4e86\u6d4f\u89c8\u5668\u7684\u9ed8\u8ba4\u884c\u4e3a\uff0c\u7136\u540e\u8c03\u7528\u4e86history.pushState \u65b9\u6cd5\u3002 To \u901a\u5e38\u53ef\u4ee5\u4f7f\u5b57\u7b26\u4e32\u6216\u8005\u5bf9\u8c61","title":"Link"},{"location":"old/Translation/","text":"JS\u5b9e\u73b0\u7ffb\u8bd1\u7684\u591a\u79cd\u65b9\u6848 \u00b6 1\u3001language.js \u5e93 https://languages.js.org/docs/ \u9002\u5e94\u4e8e React Angular \u548c Vue2 \uff08\u9700\u8981\u65f6\u518d\u5b66\uff09 import Languages from 'languages-js' 2\u3001\u7f51\u4e0a\u53e6\u4e00\u4e2a\u5fae\u8f6fJS\u5e93 $ ( function (){ var script = document . createElement ( \"script\" ); script . type = \"text/javascript\" ; script . src = \"js/translate.js\" ; document . getElementsByTagName ( 'head' )[ 0 ]. appendChild ( script ); var value = sessionStorage . getItem ( \"language\" ); document . onreadystatechange = function () { if ( document . readyState == 'complete' ) { if ( value === \"1\" ){ Microsoft . Translator . Widget . Translate ( 'zh-CHS' , 'en' , onProgress , onError , onComplete , onRestoreOriginal , 2000 ); } } } function onProgress ( value ) { } function onError ( error ) { } function onComplete () { $ ( \"#WidgetFloaterPanels\" ). hide (); } function onRestoreOriginal () { } }); function translate (){ var value = sessionStorage . getItem ( \"language\" ); if ( value === \"1\" ){ sessionStorage . setItem ( \"language\" , \"0\" ); } else { sessionStorage . setItem ( \"language\" , \"1\" ); } window . location . reload (); } \u6d4b\u8bd5\u754c\u9762 < body > < button id = \"change\" > \u4e2d\u82f1\u6587\u5207\u6362 < /button </ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br > < div style = \"text-align: center\" > \u4f60\u597d </ div > </ body > < script type = \"text/javascript\" > $ ( \"#change\" ). click ( function (){ translate (); }) </ script > 3\u3001\u4f7f\u7528\u8c37\u6b4c\u7ffb\u8bd1\u7684API < script type = \"text/javascript\" src = \"http://www.google.com/jsapi\" ></ script > < script type = \"text/javascript\" > google . load ( \"language\" , \"1\" ); function initialize () { var text = document . getElementById ( \"text\" ). innerHTML ; google . language . detect ( text , function ( result ) { if ( ! result . error && result . language ) { google . language . translate ( text , result . language , \"en\" , function ( result ) { var translated = document . getElementById ( \"translation\" ); if ( result . translation ) { translated . innerHTML = result . translation ; } }); } }); } google . setOnLoadCallback ( initialize ); </ script >","title":"Translation"},{"location":"old/Translation/#js","text":"1\u3001language.js \u5e93 https://languages.js.org/docs/ \u9002\u5e94\u4e8e React Angular \u548c Vue2 \uff08\u9700\u8981\u65f6\u518d\u5b66\uff09 import Languages from 'languages-js' 2\u3001\u7f51\u4e0a\u53e6\u4e00\u4e2a\u5fae\u8f6fJS\u5e93 $ ( function (){ var script = document . createElement ( \"script\" ); script . type = \"text/javascript\" ; script . src = \"js/translate.js\" ; document . getElementsByTagName ( 'head' )[ 0 ]. appendChild ( script ); var value = sessionStorage . getItem ( \"language\" ); document . onreadystatechange = function () { if ( document . readyState == 'complete' ) { if ( value === \"1\" ){ Microsoft . Translator . Widget . Translate ( 'zh-CHS' , 'en' , onProgress , onError , onComplete , onRestoreOriginal , 2000 ); } } } function onProgress ( value ) { } function onError ( error ) { } function onComplete () { $ ( \"#WidgetFloaterPanels\" ). hide (); } function onRestoreOriginal () { } }); function translate (){ var value = sessionStorage . getItem ( \"language\" ); if ( value === \"1\" ){ sessionStorage . setItem ( \"language\" , \"0\" ); } else { sessionStorage . setItem ( \"language\" , \"1\" ); } window . location . reload (); } \u6d4b\u8bd5\u754c\u9762 < body > < button id = \"change\" > \u4e2d\u82f1\u6587\u5207\u6362 < /button </ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br ></ br > < div style = \"text-align: center\" > \u4f60\u597d </ div > </ body > < script type = \"text/javascript\" > $ ( \"#change\" ). click ( function (){ translate (); }) </ script > 3\u3001\u4f7f\u7528\u8c37\u6b4c\u7ffb\u8bd1\u7684API < script type = \"text/javascript\" src = \"http://www.google.com/jsapi\" ></ script > < script type = \"text/javascript\" > google . load ( \"language\" , \"1\" ); function initialize () { var text = document . getElementById ( \"text\" ). innerHTML ; google . language . detect ( text , function ( result ) { if ( ! result . error && result . language ) { google . language . translate ( text , result . language , \"en\" , function ( result ) { var translated = document . getElementById ( \"translation\" ); if ( result . translation ) { translated . innerHTML = result . translation ; } }); } }); } google . setOnLoadCallback ( initialize ); </ script >","title":"JS\u5b9e\u73b0\u7ffb\u8bd1\u7684\u591a\u79cd\u65b9\u6848"},{"location":"old/docker-basic-use/","text":"docker \u5e38\u89c1\u64cd\u4f5c\u8865\u5145 \u00b6 \u53c2\u8003\u5b98\u65b9\u6587\u6863 https://docs.docker.com/docker-for-mac/install/ 1. \u57fa\u672c\u64cd\u4f5c \u00b6 \u68c0\u67e5\u5f53\u524d docker \u7248\u672c 192 :~ seafile$ docker --version Docker version 18 .09, build c97c6d6 192 :~ seafile$ docker-compose --version docker-compose version 1 .24.0, build 8dd22a9 192 :~ seafile$ docker-machine --version docker-machine version 0 .16.0, build 9ba6da9 \u8fd0\u884c\u4e00\u4e2a\u955c\u50cf\uff08\u5982\u679c\u6ca1\u6709\u5c31\u4f1a\u8054\u7f51\u5b89\u88c5\uff09 docker run hello-world # \u5982\u679c\u627e\u4e0d\u5230\u5c31\u5230\u5b98\u65b9\u53bb pull \u4f7f\u7528docker\u642d\u5efa\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 nginx docker run --detach --publish = 80 :80 --name = webserver nginx docker run --detach --publish = 80 :80 --name = webserver nginx \u73b0\u5728\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee localhost \u5373\u53ef\u770b\u5230 nginx \u7684\u754c\u9762 \u5f53\u5bb9\u5668\u5df2\u7ecf\u8fd0\u884c\uff0c\u53ef\u4ee5\u67e5\u770b\u5bb9\u5668\u7684\u7ec6\u8282 docker ps # \u7b49\u4ef7\u4e8e docker container ls \u505c\u6b62\u5bb9\u5668 docker container stop webserver docker container rm webserver docker image rm nginx \u5220\u9664\u5df2\u6709\u5bb9\u5668\u548c\u955c\u50cf\u64cd\u4f5c # \u67e5\u770b\u5f53\u524d\u7684\u955c\u50cf\u7684ID(\u5171\u8ba1\u4e94\u4e2a\uff0c\u4e09\u4e2a\u516c\u53f8\u7684\uff0chelloworld nginx) 192 :~ seafile$ docker ps -aq 30b8a8b128f4 ec328f5a228d 73b12bea8807 dfdf5180c891 3b54b280d6ef # \u5217\u51fa\u5f53\u524d\u7684\u955c\u50cf(\u8be6\u60c5)\uff0c\u5c31\u662f\u628a\u4e0a\u9762\u7684\u8be6\u60c5\u5217\u51fa\u6765 192 :~ seafile$ docker image ls REPOSITORY TAG IMAGE ID CREATED SIZE nginx latest 27a188018e18 6 days ago 109MB hello-world latest fce289e99eb9 3 months ago 1 .84kB docker.seafile.top/seafile-dev/seafile-pro-dev master 74f5640d3df7 7 months ago 1 .04GB docker.seafile.top/seafile-dev/mariadb 10 .3 2c73b3262fff 9 months ago 363MB memcached 1 .4-alpine 273374b463b8 21 months ago 7 .68MB # \u5220\u9664\u4e00\u4e2a\u955c\u50cf\uff0c\u4f46\u662f\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\u955c\u50cf\u7684\u4ed3\u5e93\uff0c\u9700\u8981\u5220\u9664\u955c\u50cf\u7684ID 192 :~ seafile$ docker image rm hello-world Error response from daemon: conflict: unable to remove repository reference \"hello-world\" ( must force ) - container ec328f5a228d is using its referenced image fce289e99eb9 # \u5217\u51fa\u5f53\u524d\u7684\u5bb9\u5668 192 :~ seafile$ docker container ls CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 30b8a8b128f4 nginx \"nginx -g 'daemon of\u2026\" 5 hours ago Up 22 minutes 0 .0.0.0:80->80/tcp webserver 73b12bea8807 docker.seafile.top/seafile-dev/seafile-pro-dev:master \"/sbin/my_init -- /r\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:3000->3000/tcp, 0 .0.0.0:8000->8000/tcp, 0 .0.0.0:8082->8082/tcp seafile-dev-pro dfdf5180c891 docker.seafile.top/seafile-dev/mariadb:10.3 \"docker-entrypoint.s\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:3306->3306/tcp seafile-mysql 3b54b280d6ef memcached:1.4-alpine \"docker-entrypoint.s\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:11211->11211/tcp seafile-memcached # \u5f3a\u884c\u5220\u9664 30b8a8b128f4 nginx \u5bb9\u5668 192 :~ seafile$ docker rm -f 30b8a8b128f4 30b8a8b128f4 # \u53ef\u4ee5\u770b\u51fa\u5bb9\u5668\u4ee5\u53ca\u88ab\u5220\u9664 192 :~ seafile$ docker container ls CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 73b12bea8807 docker.seafile.top/seafile-dev/seafile-pro-dev:master \"/sbin/my_init -- /r\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:3000->3000/tcp, 0 .0.0.0:8000->8000/tcp, 0 .0.0.0:8082->8082/tcp seafile-dev-pro dfdf5180c891 docker.seafile.top/seafile-dev/mariadb:10.3 \"docker-entrypoint.s\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:3306->3306/tcp seafile-mysql 3b54b280d6ef memcached:1.4-alpine \"docker-entrypoint.s\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:11211->11211/tcp seafile-memcached # \u5220\u9664\u5bb9\u5668\u540e\uff0c\u518d\u5220\u9664\u955c\u50cf(NGINX) 192 :~ seafile$ docker rmi 27a188018e18 Untagged: nginx:latest Untagged: nginx@sha256:e71b1bf4281f25533cf15e6e5f9be4dac74d2328152edf7ecde23abc54e16c1c Deleted: sha256:27a188018e1847b312022b02146bb7ac3da54e96fab838b7db9f102c8c3dd778 Deleted: sha256:261d1996088c57b71d8ea9412f719bcbb8f4cb68a6e463d30abb85cc5fc5724b Deleted: sha256:e6fbd1f039a7391ab57afeb1b11a73781bcbd6ae8041d98c5988b90c46ce5726 Deleted: sha256:5dacd731af1b0386ead06c8b1feff9f65d9e0bdfec032d2cd0bc03690698feda # \u5df2\u7ecf\u5220\u9664\u955c\u50cf NGINX 192 :~ seafile$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE hello-world latest fce289e99eb9 3 months ago 1 .84kB docker.seafile.top/seafile-dev/seafile-pro-dev master 74f5640d3df7 7 months ago 1 .04GB docker.seafile.top/seafile-dev/mariadb 10 .3 2c73b3262fff 9 months ago 363MB memcached 1 .4-alpine 273374b463b8 21 months ago 7 .68MB 2. \u914d\u7f6e \u00b6 \u5728 docker \u914d\u7f6e\u83dc\u5355\u4e2d \u901a\u7528\uff1a\u914d\u7f6edocker\u5f00\u673a\u542f\u52a8\u3001\u81ea\u52a8\u5347\u7ea7\u3001\u7528\u6237\u7edf\u8ba1\u53cd\u9988\u3001\u865a\u62df\u673a\u5907\u4efd\u3001\u8bb0\u4f4fdocker\u767b\u5f55\u7b49\uff08\u4f7f\u7528\u9ed8\u8ba4\uff09 \u6587\u4ef6\u5171\u4eab\uff1a\u8bbe\u7f6edocker\u7684\u8fd0\u884c\u76ee\u5f55\u3002\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u3002 \u9ad8\u7ea7\uff1a\u8bbe\u7f6edocker\u8fd0\u884c\u7684\u786c\u4ef6\u8d44\u6e90\uff1a\u901a\u5e38\u60c5\u51b5\uff0cdocker\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684\u4e00\u534aCPU\uff08\u5982\u679c\u9700\u8981\u589e\u52a0\u6216\u8005\u51cf\u5c11\u6027\u80fd\uff0c\u53ef\u4ee5\u6539\u53d8CPU\u4e2a\u6570\uff09\uff1b\u5185\u5b58\u901a\u5e38\u4f7f\u7528\u5bbf\u4e3b\u673a\u76842G\u8fd0\u884c\u5185\u5b58\uff08\u53ef\u4ee5\u589e\u52a0\u6216\u8005\u51cf\u5c11\uff09swap \u865a\u62df\u5185\u5b58\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a1G\u865a\u62df\u5185\u5b58\u3002\u73b0\u5728\u7535\u8111\u7684CPU\u5403\u4e0d\u6d88\uff0c\u6240\u4ee5\u589e\u52a0\u5185\u5b58\u548c\u865a\u62df\u5185\u5b58\uff0c\u589e\u52a0CPU\u4e2a\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u7f13\u89e3\u5355\u4e2aCPU\u7684\u6027\u80fd\u3002 \u7528\u6237\u4ee3\u7406\uff1a\u9009\u62e9\u9ed8\u8ba4\u7684\u7528\u6237\u4ee3\u7406 \u5b58\u50a8\u4f4d\u7f6e\u548c\u5bb9\u91cf\uff1a\u53ef\u4ee5\u8fc1\u79fb\u955c\u50cf\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4f4d\u7f6e\u548c\u8bbe\u7f6e\u5bb9\u91cf","title":"docker-basic-use"},{"location":"old/docker-basic-use/#docker","text":"\u53c2\u8003\u5b98\u65b9\u6587\u6863 https://docs.docker.com/docker-for-mac/install/","title":"docker \u5e38\u89c1\u64cd\u4f5c\u8865\u5145"},{"location":"old/docker-basic-use/#1","text":"\u68c0\u67e5\u5f53\u524d docker \u7248\u672c 192 :~ seafile$ docker --version Docker version 18 .09, build c97c6d6 192 :~ seafile$ docker-compose --version docker-compose version 1 .24.0, build 8dd22a9 192 :~ seafile$ docker-machine --version docker-machine version 0 .16.0, build 9ba6da9 \u8fd0\u884c\u4e00\u4e2a\u955c\u50cf\uff08\u5982\u679c\u6ca1\u6709\u5c31\u4f1a\u8054\u7f51\u5b89\u88c5\uff09 docker run hello-world # \u5982\u679c\u627e\u4e0d\u5230\u5c31\u5230\u5b98\u65b9\u53bb pull \u4f7f\u7528docker\u642d\u5efa\u4e00\u4e2a\u7f51\u7edc\u670d\u52a1\u5668 nginx docker run --detach --publish = 80 :80 --name = webserver nginx docker run --detach --publish = 80 :80 --name = webserver nginx \u73b0\u5728\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee localhost \u5373\u53ef\u770b\u5230 nginx \u7684\u754c\u9762 \u5f53\u5bb9\u5668\u5df2\u7ecf\u8fd0\u884c\uff0c\u53ef\u4ee5\u67e5\u770b\u5bb9\u5668\u7684\u7ec6\u8282 docker ps # \u7b49\u4ef7\u4e8e docker container ls \u505c\u6b62\u5bb9\u5668 docker container stop webserver docker container rm webserver docker image rm nginx \u5220\u9664\u5df2\u6709\u5bb9\u5668\u548c\u955c\u50cf\u64cd\u4f5c # \u67e5\u770b\u5f53\u524d\u7684\u955c\u50cf\u7684ID(\u5171\u8ba1\u4e94\u4e2a\uff0c\u4e09\u4e2a\u516c\u53f8\u7684\uff0chelloworld nginx) 192 :~ seafile$ docker ps -aq 30b8a8b128f4 ec328f5a228d 73b12bea8807 dfdf5180c891 3b54b280d6ef # \u5217\u51fa\u5f53\u524d\u7684\u955c\u50cf(\u8be6\u60c5)\uff0c\u5c31\u662f\u628a\u4e0a\u9762\u7684\u8be6\u60c5\u5217\u51fa\u6765 192 :~ seafile$ docker image ls REPOSITORY TAG IMAGE ID CREATED SIZE nginx latest 27a188018e18 6 days ago 109MB hello-world latest fce289e99eb9 3 months ago 1 .84kB docker.seafile.top/seafile-dev/seafile-pro-dev master 74f5640d3df7 7 months ago 1 .04GB docker.seafile.top/seafile-dev/mariadb 10 .3 2c73b3262fff 9 months ago 363MB memcached 1 .4-alpine 273374b463b8 21 months ago 7 .68MB # \u5220\u9664\u4e00\u4e2a\u955c\u50cf\uff0c\u4f46\u662f\u4e0d\u80fd\u76f4\u63a5\u5220\u9664\u955c\u50cf\u7684\u4ed3\u5e93\uff0c\u9700\u8981\u5220\u9664\u955c\u50cf\u7684ID 192 :~ seafile$ docker image rm hello-world Error response from daemon: conflict: unable to remove repository reference \"hello-world\" ( must force ) - container ec328f5a228d is using its referenced image fce289e99eb9 # \u5217\u51fa\u5f53\u524d\u7684\u5bb9\u5668 192 :~ seafile$ docker container ls CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 30b8a8b128f4 nginx \"nginx -g 'daemon of\u2026\" 5 hours ago Up 22 minutes 0 .0.0.0:80->80/tcp webserver 73b12bea8807 docker.seafile.top/seafile-dev/seafile-pro-dev:master \"/sbin/my_init -- /r\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:3000->3000/tcp, 0 .0.0.0:8000->8000/tcp, 0 .0.0.0:8082->8082/tcp seafile-dev-pro dfdf5180c891 docker.seafile.top/seafile-dev/mariadb:10.3 \"docker-entrypoint.s\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:3306->3306/tcp seafile-mysql 3b54b280d6ef memcached:1.4-alpine \"docker-entrypoint.s\u2026\" 6 months ago Up 22 minutes 0 .0.0.0:11211->11211/tcp seafile-memcached # \u5f3a\u884c\u5220\u9664 30b8a8b128f4 nginx \u5bb9\u5668 192 :~ seafile$ docker rm -f 30b8a8b128f4 30b8a8b128f4 # \u53ef\u4ee5\u770b\u51fa\u5bb9\u5668\u4ee5\u53ca\u88ab\u5220\u9664 192 :~ seafile$ docker container ls CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 73b12bea8807 docker.seafile.top/seafile-dev/seafile-pro-dev:master \"/sbin/my_init -- /r\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:3000->3000/tcp, 0 .0.0.0:8000->8000/tcp, 0 .0.0.0:8082->8082/tcp seafile-dev-pro dfdf5180c891 docker.seafile.top/seafile-dev/mariadb:10.3 \"docker-entrypoint.s\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:3306->3306/tcp seafile-mysql 3b54b280d6ef memcached:1.4-alpine \"docker-entrypoint.s\u2026\" 6 months ago Up 23 minutes 0 .0.0.0:11211->11211/tcp seafile-memcached # \u5220\u9664\u5bb9\u5668\u540e\uff0c\u518d\u5220\u9664\u955c\u50cf(NGINX) 192 :~ seafile$ docker rmi 27a188018e18 Untagged: nginx:latest Untagged: nginx@sha256:e71b1bf4281f25533cf15e6e5f9be4dac74d2328152edf7ecde23abc54e16c1c Deleted: sha256:27a188018e1847b312022b02146bb7ac3da54e96fab838b7db9f102c8c3dd778 Deleted: sha256:261d1996088c57b71d8ea9412f719bcbb8f4cb68a6e463d30abb85cc5fc5724b Deleted: sha256:e6fbd1f039a7391ab57afeb1b11a73781bcbd6ae8041d98c5988b90c46ce5726 Deleted: sha256:5dacd731af1b0386ead06c8b1feff9f65d9e0bdfec032d2cd0bc03690698feda # \u5df2\u7ecf\u5220\u9664\u955c\u50cf NGINX 192 :~ seafile$ docker images REPOSITORY TAG IMAGE ID CREATED SIZE hello-world latest fce289e99eb9 3 months ago 1 .84kB docker.seafile.top/seafile-dev/seafile-pro-dev master 74f5640d3df7 7 months ago 1 .04GB docker.seafile.top/seafile-dev/mariadb 10 .3 2c73b3262fff 9 months ago 363MB memcached 1 .4-alpine 273374b463b8 21 months ago 7 .68MB","title":"1. \u57fa\u672c\u64cd\u4f5c"},{"location":"old/docker-basic-use/#2","text":"\u5728 docker \u914d\u7f6e\u83dc\u5355\u4e2d \u901a\u7528\uff1a\u914d\u7f6edocker\u5f00\u673a\u542f\u52a8\u3001\u81ea\u52a8\u5347\u7ea7\u3001\u7528\u6237\u7edf\u8ba1\u53cd\u9988\u3001\u865a\u62df\u673a\u5907\u4efd\u3001\u8bb0\u4f4fdocker\u767b\u5f55\u7b49\uff08\u4f7f\u7528\u9ed8\u8ba4\uff09 \u6587\u4ef6\u5171\u4eab\uff1a\u8bbe\u7f6edocker\u7684\u8fd0\u884c\u76ee\u5f55\u3002\u4f7f\u7528\u9ed8\u8ba4\u914d\u7f6e\u3002 \u9ad8\u7ea7\uff1a\u8bbe\u7f6edocker\u8fd0\u884c\u7684\u786c\u4ef6\u8d44\u6e90\uff1a\u901a\u5e38\u60c5\u51b5\uff0cdocker\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684\u4e00\u534aCPU\uff08\u5982\u679c\u9700\u8981\u589e\u52a0\u6216\u8005\u51cf\u5c11\u6027\u80fd\uff0c\u53ef\u4ee5\u6539\u53d8CPU\u4e2a\u6570\uff09\uff1b\u5185\u5b58\u901a\u5e38\u4f7f\u7528\u5bbf\u4e3b\u673a\u76842G\u8fd0\u884c\u5185\u5b58\uff08\u53ef\u4ee5\u589e\u52a0\u6216\u8005\u51cf\u5c11\uff09swap \u865a\u62df\u5185\u5b58\uff0c\u901a\u5e38\u8bbe\u7f6e\u4e3a1G\u865a\u62df\u5185\u5b58\u3002\u73b0\u5728\u7535\u8111\u7684CPU\u5403\u4e0d\u6d88\uff0c\u6240\u4ee5\u589e\u52a0\u5185\u5b58\u548c\u865a\u62df\u5185\u5b58\uff0c\u589e\u52a0CPU\u4e2a\u6570\uff0c\u8fd9\u6837\u53ef\u4ee5\u7f13\u89e3\u5355\u4e2aCPU\u7684\u6027\u80fd\u3002 \u7528\u6237\u4ee3\u7406\uff1a\u9009\u62e9\u9ed8\u8ba4\u7684\u7528\u6237\u4ee3\u7406 \u5b58\u50a8\u4f4d\u7f6e\u548c\u5bb9\u91cf\uff1a\u53ef\u4ee5\u8fc1\u79fb\u955c\u50cf\u5728\u8ba1\u7b97\u673a\u4e2d\u7684\u4f4d\u7f6e\u548c\u8bbe\u7f6e\u5bb9\u91cf","title":"2. \u914d\u7f6e"},{"location":"old/editor-js/","text":"Editor.js \u00b6 Editor.js \u662f\u4e00\u4e2a\u5728\u7ebf\u5bcc\u6587\u672c\u7f16\u8f91\u5668 \u5b98\u7f51\u94fe\u63a5\uff1a https://editorjs.io/ Editor.js \u5feb\u901f\u5165\u95e8 \u00b6 \u5bfc\u5165\u7f16\u8f91\u5668\u5e93 Install Editor.js \u7f16\u8f91\u5668\u521d\u59cb\u5316 Configure and initialise the Editor \u5b89\u88c5\u5de5\u5177 Install and Tools \u914d\u7f6e\u5de5\u5177 connect tools \u5f15\u5165 \u00b6 \u5b89\u88c5\u5206\u4e3a\u4e09\u79cd\uff0cNode\uff0c CDN\uff08\u94fe\u63a5 https://www.jsdelivr.com/package/npm/@editorjs/editorjs \uff09\uff0c\u672c\u5730\u6587\u4ef6\u5b89\u88c5\u3002\u8fd9\u91cc\u53ea\u4ecb\u7ecd node \u73af\u5883\u3002 npm i @editorjs/editorjs --save-dev import EditorJS from '@editorjs/editorjs' ; \u521d\u59cb\u5316\u914d\u7f6e \u00b6 \u521d\u59cb\u5316\u65f6\uff0c\u53ef\u4ee5\u4e0d\u7528\u5305\u542b\u4efb\u4f55\u53c2\u6570 import EditorJS from '@editorjs/editorjs' ; const editor = new EditorJS (); \u4e0b\u9762\u662f\u589e\u52a0\u914d\u7f6e\u7684\u4ee3\u7801-IE\u6d4f\u89c8\u5668\u9700\u8981\u517c\u5bb9 import EditorJS from '@editorjs/editorjs' ; const editor = new EditorJs ( 'codex-editor' ); import EditorJS from '@editorjs/editorjs' ; const editor = new EditorJs ({ holderId : 'codex-editor' }); \u8be6\u7ec6\u7684\u914d\u7f6e\u6587\u4ef6\u5728\u540e\u6587\u4ecb\u7ecd\u3002 \u5b89\u88c5\u5de5\u5177 \u00b6 \u6bcf\u4e00\u4e2a\u5757\u7ea7\u8282\u70b9\u662f\u4e00\u4e2a\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u65f6\u6211\u4eec\u4ec5\u63d0\u4f9b\u6bb5\u843d\u5757\u7ea7\u8282\u70b9\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u4f7f\u7528\u5176\u4ed6\u7684\u5757\u7ea7\u8282\u70b9\u3002\u70b9\u51fb\u4e0d\u540c\u7684\u5757\u7ea7\u8282\u70b9\u53ef\u4ee5\u83b7\u53d6\u5177\u4f53\u7684\u5b89\u88c5\u6307\u5bfc\u3002 Header Link embeds Raw HTML blocks Simple Image (without backend requirement) Image Checklist List Embeds Quote And some others . \u5b89\u88c5\u5de5\u5177\u540e\uff0c\u4f60\u9700\u8981\u901a\u8fc7\u914d\u7f6e\u5bf9\u8c61\uff0c\u5c06\u7f16\u8f91\u5668\u548c\u5757\u7ea7\u8282\u70b9\u8fde\u63a5\u3002 \u914d\u7f6e\u5de5\u5177 \u00b6 \u5148\u770b\u4e00\u4e0b\u5f00\u59cb\u7684\u6700\u7b80\u5355\u7684\u914d\u7f6e import EditorJs from '@editorjs/editorjs' ; const editor = new EditorJs ({ holderId : 'codex-editor' , }) \u7136\u540e\uff0c\u589e\u52a0\u4e00\u4e9b\u5de5\u5177\u914d\u7f6e\u3002\u53ef\u4ee5\u6dfb\u52a0 tools \u5bf9\u8c61\u3002 import EditorJs from '@editorjs/editorjs' ; import Header from '@editorjs/header' ; import List from '@editorjs/list' ; const editor = new EditorJs ({ /** * Id of Element that should contain the Editor */ holderId : 'codex-editor' , /** * Available Tools list. * Pass Tool's class or Settings object for each Tool you want to use */ tools : { header : Header , list : List }, }); \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u6ca1\u6709\u9009\u9879\u7684\u5de5\u5177\uff08\u53ea\u6709\u5de5\u5177\u540d\u79f0\uff0cheader list\uff09\u3002 \u5f53\u7136\uff0c\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u589e\u52a0\u9009\u9879\u3002\u6211\u4eec\u53ef\u4ee5\u7ed9\u8fd9\u4e9b\u5de5\u5177\u589e\u52a0\u7279\u5b9a\u7684\u9009\u9879\uff08\u4e0b\u9762\u7684class inlineToolbar\uff0c\u8bbe\u5b9a\u4e86\u884c\u5185\u662f\u5426\u663e\u793a\u5de5\u5177\u680f\uff0c\u663e\u793a\u54ea\u4e9b\u5de5\u5177\u680f\uff0c\u5de5\u5177\u7684\u7c7b\u540d\u7b49\uff09\u3002 import EditorJs from '@editorjs/editorjs' ; import Header from '@editorjs/header' ; import List from '@editorjs/list' ; const editor = new EditorJs ({ /** * Id of Element that should contain the Editor */ holderId : 'codex-editor' , /** * Available Tools list. * Pass Tool's class or Settings object for each Tool you want to use */ tools : { header : { class : Header , inlineToolbar : [ 'link' ] }, list : { class : List , inlineToolbar : true } }, }) \u90a3\u4e48\uff0c\u57fa\u672c\u7684 Editor \u5c31\u642d\u5efa\u597d\u4e86\u3002 \u6ce8\u610f\u4e8b\u9879 \u00b6 Editor.js \u662f\u539f\u751f JS\uff0c \u548c React \u6846\u67b6\u5e76\u4e0d\u901a\u7528\u3002","title":"editor-js"},{"location":"old/editor-js/#editorjs","text":"Editor.js \u662f\u4e00\u4e2a\u5728\u7ebf\u5bcc\u6587\u672c\u7f16\u8f91\u5668 \u5b98\u7f51\u94fe\u63a5\uff1a https://editorjs.io/","title":"Editor.js"},{"location":"old/editor-js/#editorjs_1","text":"\u5bfc\u5165\u7f16\u8f91\u5668\u5e93 Install Editor.js \u7f16\u8f91\u5668\u521d\u59cb\u5316 Configure and initialise the Editor \u5b89\u88c5\u5de5\u5177 Install and Tools \u914d\u7f6e\u5de5\u5177 connect tools","title":"Editor.js \u5feb\u901f\u5165\u95e8"},{"location":"old/editor-js/#_1","text":"\u5b89\u88c5\u5206\u4e3a\u4e09\u79cd\uff0cNode\uff0c CDN\uff08\u94fe\u63a5 https://www.jsdelivr.com/package/npm/@editorjs/editorjs \uff09\uff0c\u672c\u5730\u6587\u4ef6\u5b89\u88c5\u3002\u8fd9\u91cc\u53ea\u4ecb\u7ecd node \u73af\u5883\u3002 npm i @editorjs/editorjs --save-dev import EditorJS from '@editorjs/editorjs' ;","title":"\u5f15\u5165"},{"location":"old/editor-js/#_2","text":"\u521d\u59cb\u5316\u65f6\uff0c\u53ef\u4ee5\u4e0d\u7528\u5305\u542b\u4efb\u4f55\u53c2\u6570 import EditorJS from '@editorjs/editorjs' ; const editor = new EditorJS (); \u4e0b\u9762\u662f\u589e\u52a0\u914d\u7f6e\u7684\u4ee3\u7801-IE\u6d4f\u89c8\u5668\u9700\u8981\u517c\u5bb9 import EditorJS from '@editorjs/editorjs' ; const editor = new EditorJs ( 'codex-editor' ); import EditorJS from '@editorjs/editorjs' ; const editor = new EditorJs ({ holderId : 'codex-editor' }); \u8be6\u7ec6\u7684\u914d\u7f6e\u6587\u4ef6\u5728\u540e\u6587\u4ecb\u7ecd\u3002","title":"\u521d\u59cb\u5316\u914d\u7f6e"},{"location":"old/editor-js/#_3","text":"\u6bcf\u4e00\u4e2a\u5757\u7ea7\u8282\u70b9\u662f\u4e00\u4e2a\u63d2\u4ef6\u3002\u521d\u59cb\u5316\u65f6\u6211\u4eec\u4ec5\u63d0\u4f9b\u6bb5\u843d\u5757\u7ea7\u8282\u70b9\u3002\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u4f7f\u7528\u5176\u4ed6\u7684\u5757\u7ea7\u8282\u70b9\u3002\u70b9\u51fb\u4e0d\u540c\u7684\u5757\u7ea7\u8282\u70b9\u53ef\u4ee5\u83b7\u53d6\u5177\u4f53\u7684\u5b89\u88c5\u6307\u5bfc\u3002 Header Link embeds Raw HTML blocks Simple Image (without backend requirement) Image Checklist List Embeds Quote And some others . \u5b89\u88c5\u5de5\u5177\u540e\uff0c\u4f60\u9700\u8981\u901a\u8fc7\u914d\u7f6e\u5bf9\u8c61\uff0c\u5c06\u7f16\u8f91\u5668\u548c\u5757\u7ea7\u8282\u70b9\u8fde\u63a5\u3002","title":"\u5b89\u88c5\u5de5\u5177"},{"location":"old/editor-js/#_4","text":"\u5148\u770b\u4e00\u4e0b\u5f00\u59cb\u7684\u6700\u7b80\u5355\u7684\u914d\u7f6e import EditorJs from '@editorjs/editorjs' ; const editor = new EditorJs ({ holderId : 'codex-editor' , }) \u7136\u540e\uff0c\u589e\u52a0\u4e00\u4e9b\u5de5\u5177\u914d\u7f6e\u3002\u53ef\u4ee5\u6dfb\u52a0 tools \u5bf9\u8c61\u3002 import EditorJs from '@editorjs/editorjs' ; import Header from '@editorjs/header' ; import List from '@editorjs/list' ; const editor = new EditorJs ({ /** * Id of Element that should contain the Editor */ holderId : 'codex-editor' , /** * Available Tools list. * Pass Tool's class or Settings object for each Tool you want to use */ tools : { header : Header , list : List }, }); \u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u6ca1\u6709\u9009\u9879\u7684\u5de5\u5177\uff08\u53ea\u6709\u5de5\u5177\u540d\u79f0\uff0cheader list\uff09\u3002 \u5f53\u7136\uff0c\u8fd9\u4e9b\u5de5\u5177\u53ef\u4ee5\u589e\u52a0\u9009\u9879\u3002\u6211\u4eec\u53ef\u4ee5\u7ed9\u8fd9\u4e9b\u5de5\u5177\u589e\u52a0\u7279\u5b9a\u7684\u9009\u9879\uff08\u4e0b\u9762\u7684class inlineToolbar\uff0c\u8bbe\u5b9a\u4e86\u884c\u5185\u662f\u5426\u663e\u793a\u5de5\u5177\u680f\uff0c\u663e\u793a\u54ea\u4e9b\u5de5\u5177\u680f\uff0c\u5de5\u5177\u7684\u7c7b\u540d\u7b49\uff09\u3002 import EditorJs from '@editorjs/editorjs' ; import Header from '@editorjs/header' ; import List from '@editorjs/list' ; const editor = new EditorJs ({ /** * Id of Element that should contain the Editor */ holderId : 'codex-editor' , /** * Available Tools list. * Pass Tool's class or Settings object for each Tool you want to use */ tools : { header : { class : Header , inlineToolbar : [ 'link' ] }, list : { class : List , inlineToolbar : true } }, }) \u90a3\u4e48\uff0c\u57fa\u672c\u7684 Editor \u5c31\u642d\u5efa\u597d\u4e86\u3002","title":"\u914d\u7f6e\u5de5\u5177"},{"location":"old/editor-js/#_5","text":"Editor.js \u662f\u539f\u751f JS\uff0c \u548c React \u6846\u67b6\u5e76\u4e0d\u901a\u7528\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"old/install-ruby/","text":"run this in terminal, then create new blogs. brew install ruby ruby install gem gem install jekyll mkdir test jelyll new bolb # install rvm toolc(Ruby version management tool) curl -L https://get.rvm.io | bash -s stable Installation of RVM in /Users/seafile/.rvm/ is almost complete: # start use RVM: To start using RVM you need to run `source /Users/seafile/.rvm/scripts/rvm` source ~/.rvm/scripts/rvm # view Ruby version and make sure install successfully rvm -v rvm 1 .29.7 # list all Ruby versions rvm list known @ MRI Rubies [ ruby- ] 1 .8.6 [ -p420 ] [ ruby- ] 1 .8.7 [ -head ] @ security released on head [ ruby- ] 1 .9.1 [ -p431 ] [ ruby- ] 1 .9.2 [ -p330 ] [ ruby- ] 1 .9.3 [ -p551 ] [ ruby- ] 2 .0.0 [ -p648 ] [ ruby- ] 2 .1 [ .10 ] [ ruby- ] 2 .2 [ .10 ] [ ruby- ] 2 .3 [ .8 ] [ ruby- ] 2 .4 [ .5 ] [ ruby- ] 2 .5 [ .3 ] [ ruby- ] 2 .6 [ .0 ] ruby-head # use RVM to install Ruby (version 2.3 upper) # you can also use brew install Ruby in Mac rvm install 2 .0.0 Searching for binary rubies, this might take some time. Checking requirements for osx. ruby-2.0.0-p648 - @configuring................................................. ruby-2.0.0-p648 - @post-configuration. ruby-2.0.0-p648 - @compiling................................................... | ruby-2.0.0-p648 - @installing.............. ruby-2.0.0-p648 - @making binaries executable.. ruby-2.0.0-p648 - @downloading rubygems-2.7.9 # view ruby version\uff0cmake sure install successfully ruby --version ruby 2 .0.0p648 ( 2015 -12-16 revision 53162 ) [ x86_64-darwin17.5.0 ] # install version 2.6.0 rvm install 2 .6.0 Searching for binary rubies, this might take some time. ruby-2.6.0 - @making binaries executable.. ruby-2.6.0 - @gemset created /Users/seafile/.rvm/gems/ruby-2.6.0@global ruby-2.6.0 - @importing gemset /Users/seafile/.rvm/gemsets/global.gems.........- ruby-2.6.0 - @generating global wrappers....... ruby-2.6.0 - @gemset created /Users/seafile/.rvm/gems/ruby-2.6.0 ruby-2.6.0 - @generating default wrappers....... ruby-2.6.0 - @adjusting @shebangs for ( gem irb erb ri rdoc testrb rake ) . Install of ruby-2.6.0 - @complete # view ruby version\uff0cmake sure version 2.6 install successfully ruby --version ruby 2 .6.0p0 ( 2018 -12-25 revision 66547 ) [ x86_64-darwin17 ] # download ruby-gem and install cd desktop/rubygems-3.0.3/ ruby setup.rb Bundler 1 .17.3 installed RubyGems 3 .0.3 installed Regenerating binstubs Parsing documentation for rubygems-3.0.3 Installing ri documentation for rubygems-3.0.3 # view ruby-gem version\uff0cmake sure install successfully gem --version 3 .0.3 # use gem to install jekyll gem install jekyll Fetching rouge-3.3.0.gem Fetching rouge-3.3.0.gem ... 25 gems installed # view jekyll version\uff0cmake sure install successfully jekyll --version jekyll 3 .8.5 # During install jekyll, we should install cocoapods gem install cocoapods YAML safe loading is not available. Please upgrade psych to a version that supports safe loading ( > = 2 .0 ) . # suger\uff1awe can use brew to install ruby rather than rvm brew install ruby == > Installing dependencies for ruby: openssl == > Installing ruby dependency: openssl ... More Info\uff1a https://www.cnblogs.com/daguo/p/4097263.html https://www.jianshu.com/p/c073e6fc01f5","title":"install-ruby"},{"location":"old/jekyll-install/","text":"In termanal, initialize jekyll then generate some bolgs. # make directory mkdir test-blog cd test-blog/ # use jekyll generate bolgs jekyll new blog Could not load Bundler. Bundle install skipped. New jekyll site installed in /Users/seafile/Desktop/code-myrepo/Michael/test-blog/blog. cd blog/ # run blogs\uff0cbut there are some bugs\uff1acannot load such file -- bundler (LoadError) jekyll serve --watch /System/Library/Frameworks/Ruby.framework/Versions/2.3/usr/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in ` require ': cannot load such file -- bundler (LoadError) from /System/Library/Frameworks/Ruby.framework/Versions/2.3/usr/lib/ruby/2.3.0/rubygems/core_ext/kernel_require.rb:55:in `require' from /Library/Ruby/Gems/2.3.0/gems/jekyll-3.8.5/lib/jekyll/plugin_manager.rb:48:in ` require_from_bundler ' from /Library/Ruby/Gems/2.3.0/gems/jekyll-3.8.5/exe/jekyll:11:in `<top (required)>' from /usr/local/bin/jekyll:22:in ` load ' from /usr/local/bin/jekyll:22:in `<main>' # install bundler to fix sudo gem install bundler -r --source http://rubygems.org/ Fetching: bundler-2.0.1.gem ( 100 % ) Successfully installed bundler-2.0.1 Parsing documentation for bundler-2.0.1 Installing ri documentation for bundler-2.0.1 Done installing documentation for bundler after 5 seconds 1 gem installed # run blogs again\uff0cbut there are other bugs\uff1aCould not find gem minima jekyll serve --watch /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/resolver.rb:287:in ` block in verify_gemfile_dependencies_are_found! ': Could not find gem ' minima ( ~> 2 .0 ) ' in any of the gem sources listed in your Gemfile. (Bundler::GemNotFound) from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/resolver.rb:255:in `each' from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/resolver.rb:255:in ` verify_gemfile_dependencies_are_found! ' from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/resolver.rb:49:in `start' from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/resolver.rb:22:in ` resolve ' from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/definition.rb:258:in `resolve' from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/definition.rb:170:in ` specs ' from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/definition.rb:237:in `specs_for' from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/definition.rb:226:in ` requested_specs ' from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/runtime.rb:108:in `block in definition_method' from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler/runtime.rb:20:in ` setup ' from /Library/Ruby/Gems/2.3.0/gems/bundler-2.0.1/lib/bundler.rb:107:in `setup' from /Library/Ruby/Gems/2.3.0/gems/jekyll-3.8.5/lib/jekyll/plugin_manager.rb:50:in ` require_from_bundler ' from /Library/Ruby/Gems/2.3.0/gems/jekyll-3.8.5/exe/jekyll:11:in `<top (required)>' from /usr/local/bin/jekyll:22:in ` load ' from /usr/local/bin/jekyll:22:in `<main>' # install minima to fix bug sudo gem install minima Fetching: jekyll-feed-0.12.1.gem ( 100 % ) Successfully installed jekyll-feed-0.12.1 3 gems installed # run blogs again\uff0csuccessfully jekyll serve --watch Configuration file: /Users/seafile/Desktop/code-myrepo/Michael/test-blog/blog/_config.yml Source: /Users/seafile/Desktop/code-myrepo/Michael/test-blog/blog Destination: /Users/seafile/Desktop/code-myrepo/Michael/test-blog/blog/_site Incremental build: disabled. Enable with --incremental Generating... Jekyll Feed: Generating feed for posts done in 0 .469 seconds. Auto-regeneration: enabled for '/Users/seafile/Desktop/code-myrepo/Michael/test-blog/blog' Server address: http://127.0.0.1:4000/ Server running... press ctrl-c to stop. [ 2019 -04-08 18 :02:46 ] ERROR ` /favicon.ico ' not found. # open http://127.0.0.1:4000/ in browser to view blogs # warning\uff1a`/favicon.ico' not found. # we should put page ico file in /","title":"jekyll-install"},{"location":"old/markdown-new-style/","text":"\u8fd9\u662f\u5f15\u7528\u8bed\u6cd5 \u00b6 \u4e00\u4e2a\u5177\u6709\u811a\u6ce8\u7684\u6587\u672cA\u3002 1 \u4e00\u4e2a\u5177\u6709\u811a\u6ce8\u7684\u6587\u672cB\u3002 2 \u9700\u8981\u5728\u754c\u9762\u672b\u5c3e\u5199\u51fa\u6ce8\u91ca\u7684\u5185\u5bb9\uff08\u6ce8\u610f\u683c\u5f0f\uff09 \u6d41\u7a0b\u56fe \u00b6 Michael->Tom: Hello Tom! Note right of Tom: Tom is a good boy. Tom->Michael: Nice to meet you. \u8fd9\u662f\u590d\u6742\u7684\u6d41\u7a0b\u56fe \u96f7\u519b->\u674e\u5f66\u5b8f: Hello Tom! \u674e\u5f66\u5b8f->\u9a6c\u4e91: Hello Amy! \u9a6c\u4e91->\u9a6c\u5316\u817e: Hello Trump! \u9a6c\u5316\u817e->\u96f7\u519b: Bye-Bye! \u96f7\u519b->\u9a6c\u4e91: hello\uff01 \u8fd9\u91cc\u5f15\u7528\u7684\u662f\u5b89\u51b0\u7684\u540d\u8a00\u3002 \u21a9 \u8fd9\u91cc\u5f15\u7528\u7684\u662f\u8463\u660e\u73e0\u7684\u8bd7\u53e5\u3002 \u21a9","title":"markdown-new-style"},{"location":"old/markdown-new-style/#_1","text":"\u4e00\u4e2a\u5177\u6709\u811a\u6ce8\u7684\u6587\u672cA\u3002 1 \u4e00\u4e2a\u5177\u6709\u811a\u6ce8\u7684\u6587\u672cB\u3002 2 \u9700\u8981\u5728\u754c\u9762\u672b\u5c3e\u5199\u51fa\u6ce8\u91ca\u7684\u5185\u5bb9\uff08\u6ce8\u610f\u683c\u5f0f\uff09","title":"\u8fd9\u662f\u5f15\u7528\u8bed\u6cd5"},{"location":"old/markdown-new-style/#_2","text":"Michael->Tom: Hello Tom! Note right of Tom: Tom is a good boy. Tom->Michael: Nice to meet you. \u8fd9\u662f\u590d\u6742\u7684\u6d41\u7a0b\u56fe \u96f7\u519b->\u674e\u5f66\u5b8f: Hello Tom! \u674e\u5f66\u5b8f->\u9a6c\u4e91: Hello Amy! \u9a6c\u4e91->\u9a6c\u5316\u817e: Hello Trump! \u9a6c\u5316\u817e->\u96f7\u519b: Bye-Bye! \u96f7\u519b->\u9a6c\u4e91: hello\uff01 \u8fd9\u91cc\u5f15\u7528\u7684\u662f\u5b89\u51b0\u7684\u540d\u8a00\u3002 \u21a9 \u8fd9\u91cc\u5f15\u7528\u7684\u662f\u8463\u660e\u73e0\u7684\u8bd7\u53e5\u3002 \u21a9","title":"\u6d41\u7a0b\u56fe"},{"location":"old/react-responsive/","text":"react-responsive \u00b6 You can use this jsx tag rather media query in css. And it make mobile web page more convenient. # install npm install react-responsive --save basic use import MediaQuery from 'react-responsive'; const Example = () => ( <div> <MediaQuery query=\"(min-device-width: 1224px)\"> <span>You are a desktop</span> </MediaQuery> <MediaQuery query=\"(max-device-width: 1224px)\"> <span>You are sized a mobile phone though</span> </MediaQuery> </div> ); // 1224 means 1224px const Example2 = () => ( <MediaQuery minDeviceWidth={1224}> </MediaQuery> <MediaQuery maxDeviceWidth={1224}> </MediaQuery> ); common use case import Respnosive from 'react-responsive'; const Desktop = props => (<Responsive {...props} minWidth={992}/>); const Tablet = props => <Responsive {...props} minWidth={768} maxWidth={991}/>; const Mobile = props => <Responsive {...props} maxWidth={767}/>; const Default = props => <Responsive {...props} minWidth={768}/>; const Example = () => { <div> <Desktop></Desktop> <Tablet></Tablet> <Mobile></Mobile> <Default></Default> </div> }; export default Example; browser support Don't support old IE\uff08<9\uff09","title":"react-responsive"},{"location":"old/react-responsive/#react-responsive","text":"You can use this jsx tag rather media query in css. And it make mobile web page more convenient. # install npm install react-responsive --save basic use import MediaQuery from 'react-responsive'; const Example = () => ( <div> <MediaQuery query=\"(min-device-width: 1224px)\"> <span>You are a desktop</span> </MediaQuery> <MediaQuery query=\"(max-device-width: 1224px)\"> <span>You are sized a mobile phone though</span> </MediaQuery> </div> ); // 1224 means 1224px const Example2 = () => ( <MediaQuery minDeviceWidth={1224}> </MediaQuery> <MediaQuery maxDeviceWidth={1224}> </MediaQuery> ); common use case import Respnosive from 'react-responsive'; const Desktop = props => (<Responsive {...props} minWidth={992}/>); const Tablet = props => <Responsive {...props} minWidth={768} maxWidth={991}/>; const Mobile = props => <Responsive {...props} maxWidth={767}/>; const Default = props => <Responsive {...props} minWidth={768}/>; const Example = () => { <div> <Desktop></Desktop> <Tablet></Tablet> <Mobile></Mobile> <Default></Default> </div> }; export default Example; browser support Don't support old IE\uff08<9\uff09","title":"react-responsive"},{"location":"old/text-runner/","text":"Text-Runner \u63d2\u4ef6\u8bf4\u660e \u00b6 \u4e3b\u8981\u529f\u80fd\uff1a\u662f\u4e00\u4e2a\u6587\u6863\u5de5\u5177\uff0c\u4f7f\u5f97\u6587\u6863\u5185\u5bb9\u53ef\u4ee5\u6267\u884c\uff0c\u4f7f\u7528 JS \u5c06\u4e00\u6bb5HTML\u6807\u7b7e\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u63d0\u53d6\u5206\u6790\uff0c\u83b7\u53d6\u5185\u90e8\u7684\u8282\u70b9\u548c\u7c7b\u578b\u3002\u7c7b\u4f3c\u529f\u80fd\u5728python\u53ef\u4ee5\u5b9e\u73b0\u3002Test runner for text \u8fd0\u884c\u524d\u9700\u8981\u6267\u884c npm install. TextRunner is an agile documentation tool, in particular a semantic documentation checker. It makes documentation executable. An example is the text you are reading right now, which is verified for correctness by TextRunner. There are no limitations on the text that TextRunner executes/verifies. It can read and understand (if you tell it how) any form of plain text in any human language as well as complex data in tables, bullet point lists, and embedded images. Use cases \u4f7f\u7528\u6848\u4f8b \u00b6 evergreen tutorials: your documentation is always correct, whether you change it or the product it describes semantic versioning: know whether a product change affects documented behavior readme-driven development: documentation is your product prototype and drives its implementation run \u8fd0\u884c\u8bb0\u5f55 \u00b6 # \u6253\u5f00\u9879\u76ee\u6587\u4ef6\u5939 Daniels-MBP:desktop seafile$ cd test # \u5217\u51fa\u9879\u76ee\u7684\u76ee\u5f55(\u5df2\u7ecf\u6267\u884c\u4e86npm install --dev text-runner) Daniels-MBP:test seafile$ ls node_modules package-lock.json package.json # \u8fd0\u884c\u5e2e\u52a9 Daniels-MBP:test seafile$ node_modules/.bin/text-run help TextRunner 3 .6.0 USAGE: text-run [ <options> ] <command> COMMANDS run [ <filename> ] tests the entire documentation, or only the given file/folder add <filename> scaffolds a new block type handler setup creates an example configuration file version shows the currently installed version help shows this help screen OPTIONS --config provide a custom configuration filename --offline don 't check external links # \u521d\u59cb\u5316\u914d\u7f6e \u521b\u5efa\u4e00\u4e2a text-run.yml \u6587\u4ef6 Daniels-MBP:test seafile$ node_modules/.bin/text-run setup Created configuration file text-run.yml with default values # \u6d4b\u8bd5\u6587\u4ef6 Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md # \u521d\u59cb\u5316\u6ca1\u6709 helloworld \u7684\u547d\u4ee4\uff0c\u4e0b\u9762\u662f\u9ed8\u8ba4\u7684\u6d3b\u52a8\u7c7b\u578b test.md:1 -- unknown activity type: helloworld Available built-in activity types: * cd * check-image * check-link * create-directory * create-file * run-async-javascript * run-console-command * run-javascript * start-process * stop-process * validate-javascript * verify-console-command-output * verify-npm-global-command * verify-npm-install * verify-process-output * verify-source-file-content * verify-workspace-contains-directory * verify-workspace-file-content No custom actions defined. # \u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a helloworld \u7684\u6d3b\u52a8\u7c7b\u578b To create a new \"helloworld\" activity type, run \"text-run add helloworld\" > 1 | <a textrun=\"helloworld\"></a> 2 | 1 errors, 1 activities in 1 files, 26ms # \u65b0\u5efa\u4e00\u4e2aJS\u6587\u4ef6\u5e76\u653e\u5165\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u5185\u5bb9\u3002 Daniels-MBP:test seafile$ touch hello-world.js # \u52a0\u5165\u81ea\u5b9a\u4e49\u7684\u547d\u4ee4 Daniels-MBP:test seafile$ node_modules/.bin/text-run add hello-world # \u8fd0\u884c\u81ea\u5b9a\u4e49\u7684\u547d\u4ee4(\u83b7\u53d6\u6587\u6863\u5185\u90e8\u7684\u8282\u70b9) Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md This code runs inside the \"hello-world\" block implementation. I found these elements in your document: AstNodeList [ AstNode { type: ' anchor_open ', tag: ' a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } }, AstNode { type: ' anchor_close ', tag: ' /a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } } ] test.md:1 -- Hello world Success! 1 activities in 1 files, 25ms # \u53ef\u4ee5\u770b\u51fa\uff0c\u5c06\u5185\u90e8\u7684HTML\u6807\u7b7e\u8bfb\u53d6\uff0c\u83b7\u53d6\u4e00\u5bf9a\u6807\u7b7e # \u5728a\u6807\u7b7e\u5185\u653e\u7f6e\u4e00\u6bb5\u5185\u5bb9\uff0c\u5373\u53ef\u83b7\u53d6\u5185\u90e8\u7684\u5185\u5bb9 Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md This code runs inside the \"hello-world\" block implementation. I found these elements in your document: AstNodeList [ AstNode { type: ' anchor_open ', tag: ' a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } }, AstNode { type: ' text ', tag: '', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: ' I start to learn front-end development. There are plenty of differences between traditional webpage editing ( such as using Adobe Dreamweaver software to design a webpage ) . The new standards of HTML5 and CSS3 are amazing. To a certain extent, these parts are easy considering I \\' m familiar with softwares like photoshop, firework and other Adobe softwares and so on. It is easy to use css, but using it well is a challenge. ', attributes: {} }, AstNode { type: ' anchor_close ', tag: ' /a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } } ] test.md:1 -- Hello world Success! 1 activities in 1 files, 24ms Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md This code runs inside the \"hello-world\" block implementation. I found these elements in your document: AstNodeList [ AstNode { type: ' anchor_open ', tag: ' a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } }, AstNode { type: ' anchor_close ', tag: ' /a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } } ] test.md:1 -- Hello world Success! 1 activities in 1 files, 17ms Daniels-MBP:test seafile$ Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md This code runs inside the \"hello-world\" block implementation. I found these elements in your document: AstNodeList [ AstNode { type: ' anchor_open ', tag: ' a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } }, AstNode { type: ' text ', tag: '', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: ' I love potato.I start to learn front-end development. There are plenty of differences between traditional webpage editing ( such as using Adobe Dreamweaver software to design a webpage ) . ', attributes: {} }, AstNode { type: ' anchor_close ', tag: ' /a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } } ] test.md:1 -- Hello world Success! 1 activities in 1 files, 19ms Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md # \u6539\u53d8\u89c4\u5219\uff0c\u8f93\u51fa\u6587\u6863\u7684\u5168\u90e8\u5c5e\u6027\u548c\u8282\u70b9 This code runs inside the \"hello-world\" block implementation. I found these elements in your document: { configuration: { FormatterClass: [Function: DetailedFormatter], actions: {}, classPrefix: ' textrun ', defaultFile: '', exclude: [ ' node_modules ' ], fileGlob: ' test.md ', keepTmp: false, offline: false, publications: Publications [], sourceDir: ' /Users/seafile/Desktop/test ', useSystemTempDirectory: false, workspace: ' /Users/seafile/Desktop/test/tmp ' }, file: ' test.md ', formatter: DetailedFormatter { activity: { file: [AbsoluteFilePath], line: 1, nodes: [AstNodeList], type: ' hello-world ' }, statsCounter: StatsCounter { errorCount: 0, skipCount: 0, successCount: 0, warningCount: 0, time: [Time] }, stdout: { write: [Function: bound log] }, stderr: { write: [Function: bound log] }, output: '', title: ' Hello world ', sourceDir: ' /Users/seafile/Desktop/test ', skipped: false, warned: false, console: { log: [Function: log] } }, line: 1, linkTargets: LinkTargetList { targets: { ' test.md ': [] } }, nodes: AstNodeList [ AstNode { type: ' anchor_open ', tag: ' a ', file: [AbsoluteFilePath], line: 1, content: '', attributes: [Object] }, AstNode { type: ' text ', tag: '', file: [AbsoluteFilePath], line: 1, content: ' I love potato.I start to learn front-end development. There are plenty of differences between traditional webpage editing ( such as using Adobe Dreamweaver software to design a webpage ) . ', attributes: {} }, AstNode { type: ' anchor_close ', tag: ' /a ', file: [AbsoluteFilePath], line: 1, content: '', attributes: [Object] } ] } test.md:1 -- Hello world Success! 1 activities in 1 files, 27ms # \u663e\u793a\u4e0b\u9762\u7684\u5e2e\u52a9\u6587\u6863 Daniels-MBP:test seafile$ node_modules/.bin/text-run help TextRunner 3.6.0 USAGE: text-run [<options>] <command> COMMANDS run [<filename>] tests the entire documentation, or only the given file/folder add <filename> scaffolds a new block type handler setup creates an example configuration file version shows the currently installed version help shows this help screen OPTIONS --config provide a custom configuration filename --offline don' t check external links Daniels-MBP:test seafile$ node_modules/.bin/text-run version TextRunner v3.6.0 Daniels-MBP:test seafile$ node_modules/.bin/text-run cd test.md file or directory does not exist: cd Daniels-MBP:test seafile$ node_modules/.bin/text-run","title":"text-runner"},{"location":"old/text-runner/#text-runner","text":"\u4e3b\u8981\u529f\u80fd\uff1a\u662f\u4e00\u4e2a\u6587\u6863\u5de5\u5177\uff0c\u4f7f\u5f97\u6587\u6863\u5185\u5bb9\u53ef\u4ee5\u6267\u884c\uff0c\u4f7f\u7528 JS \u5c06\u4e00\u6bb5HTML\u6807\u7b7e\u4e2d\u7684\u5185\u5bb9\u8fdb\u884c\u63d0\u53d6\u5206\u6790\uff0c\u83b7\u53d6\u5185\u90e8\u7684\u8282\u70b9\u548c\u7c7b\u578b\u3002\u7c7b\u4f3c\u529f\u80fd\u5728python\u53ef\u4ee5\u5b9e\u73b0\u3002Test runner for text \u8fd0\u884c\u524d\u9700\u8981\u6267\u884c npm install. TextRunner is an agile documentation tool, in particular a semantic documentation checker. It makes documentation executable. An example is the text you are reading right now, which is verified for correctness by TextRunner. There are no limitations on the text that TextRunner executes/verifies. It can read and understand (if you tell it how) any form of plain text in any human language as well as complex data in tables, bullet point lists, and embedded images.","title":"Text-Runner \u63d2\u4ef6\u8bf4\u660e"},{"location":"old/text-runner/#use-cases","text":"evergreen tutorials: your documentation is always correct, whether you change it or the product it describes semantic versioning: know whether a product change affects documented behavior readme-driven development: documentation is your product prototype and drives its implementation","title":"Use cases \u4f7f\u7528\u6848\u4f8b"},{"location":"old/text-runner/#run","text":"# \u6253\u5f00\u9879\u76ee\u6587\u4ef6\u5939 Daniels-MBP:desktop seafile$ cd test # \u5217\u51fa\u9879\u76ee\u7684\u76ee\u5f55(\u5df2\u7ecf\u6267\u884c\u4e86npm install --dev text-runner) Daniels-MBP:test seafile$ ls node_modules package-lock.json package.json # \u8fd0\u884c\u5e2e\u52a9 Daniels-MBP:test seafile$ node_modules/.bin/text-run help TextRunner 3 .6.0 USAGE: text-run [ <options> ] <command> COMMANDS run [ <filename> ] tests the entire documentation, or only the given file/folder add <filename> scaffolds a new block type handler setup creates an example configuration file version shows the currently installed version help shows this help screen OPTIONS --config provide a custom configuration filename --offline don 't check external links # \u521d\u59cb\u5316\u914d\u7f6e \u521b\u5efa\u4e00\u4e2a text-run.yml \u6587\u4ef6 Daniels-MBP:test seafile$ node_modules/.bin/text-run setup Created configuration file text-run.yml with default values # \u6d4b\u8bd5\u6587\u4ef6 Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md # \u521d\u59cb\u5316\u6ca1\u6709 helloworld \u7684\u547d\u4ee4\uff0c\u4e0b\u9762\u662f\u9ed8\u8ba4\u7684\u6d3b\u52a8\u7c7b\u578b test.md:1 -- unknown activity type: helloworld Available built-in activity types: * cd * check-image * check-link * create-directory * create-file * run-async-javascript * run-console-command * run-javascript * start-process * stop-process * validate-javascript * verify-console-command-output * verify-npm-global-command * verify-npm-install * verify-process-output * verify-source-file-content * verify-workspace-contains-directory * verify-workspace-file-content No custom actions defined. # \u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u4e00\u4e2a helloworld \u7684\u6d3b\u52a8\u7c7b\u578b To create a new \"helloworld\" activity type, run \"text-run add helloworld\" > 1 | <a textrun=\"helloworld\"></a> 2 | 1 errors, 1 activities in 1 files, 26ms # \u65b0\u5efa\u4e00\u4e2aJS\u6587\u4ef6\u5e76\u653e\u5165\u5b98\u65b9\u6587\u6863\u4e2d\u7684\u5185\u5bb9\u3002 Daniels-MBP:test seafile$ touch hello-world.js # \u52a0\u5165\u81ea\u5b9a\u4e49\u7684\u547d\u4ee4 Daniels-MBP:test seafile$ node_modules/.bin/text-run add hello-world # \u8fd0\u884c\u81ea\u5b9a\u4e49\u7684\u547d\u4ee4(\u83b7\u53d6\u6587\u6863\u5185\u90e8\u7684\u8282\u70b9) Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md This code runs inside the \"hello-world\" block implementation. I found these elements in your document: AstNodeList [ AstNode { type: ' anchor_open ', tag: ' a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } }, AstNode { type: ' anchor_close ', tag: ' /a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } } ] test.md:1 -- Hello world Success! 1 activities in 1 files, 25ms # \u53ef\u4ee5\u770b\u51fa\uff0c\u5c06\u5185\u90e8\u7684HTML\u6807\u7b7e\u8bfb\u53d6\uff0c\u83b7\u53d6\u4e00\u5bf9a\u6807\u7b7e # \u5728a\u6807\u7b7e\u5185\u653e\u7f6e\u4e00\u6bb5\u5185\u5bb9\uff0c\u5373\u53ef\u83b7\u53d6\u5185\u90e8\u7684\u5185\u5bb9 Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md This code runs inside the \"hello-world\" block implementation. I found these elements in your document: AstNodeList [ AstNode { type: ' anchor_open ', tag: ' a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } }, AstNode { type: ' text ', tag: '', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: ' I start to learn front-end development. There are plenty of differences between traditional webpage editing ( such as using Adobe Dreamweaver software to design a webpage ) . The new standards of HTML5 and CSS3 are amazing. To a certain extent, these parts are easy considering I \\' m familiar with softwares like photoshop, firework and other Adobe softwares and so on. It is easy to use css, but using it well is a challenge. ', attributes: {} }, AstNode { type: ' anchor_close ', tag: ' /a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } } ] test.md:1 -- Hello world Success! 1 activities in 1 files, 24ms Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md This code runs inside the \"hello-world\" block implementation. I found these elements in your document: AstNodeList [ AstNode { type: ' anchor_open ', tag: ' a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } }, AstNode { type: ' anchor_close ', tag: ' /a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } } ] test.md:1 -- Hello world Success! 1 activities in 1 files, 17ms Daniels-MBP:test seafile$ Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md This code runs inside the \"hello-world\" block implementation. I found these elements in your document: AstNodeList [ AstNode { type: ' anchor_open ', tag: ' a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } }, AstNode { type: ' text ', tag: '', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: ' I love potato.I start to learn front-end development. There are plenty of differences between traditional webpage editing ( such as using Adobe Dreamweaver software to design a webpage ) . ', attributes: {} }, AstNode { type: ' anchor_close ', tag: ' /a ', file: AbsoluteFilePath { value: ' test.md ' }, line: 1, content: '', attributes: { textrun: ' hello-world ' } } ] test.md:1 -- Hello world Success! 1 activities in 1 files, 19ms Daniels-MBP:test seafile$ node_modules/.bin/text-run test.md # \u6539\u53d8\u89c4\u5219\uff0c\u8f93\u51fa\u6587\u6863\u7684\u5168\u90e8\u5c5e\u6027\u548c\u8282\u70b9 This code runs inside the \"hello-world\" block implementation. I found these elements in your document: { configuration: { FormatterClass: [Function: DetailedFormatter], actions: {}, classPrefix: ' textrun ', defaultFile: '', exclude: [ ' node_modules ' ], fileGlob: ' test.md ', keepTmp: false, offline: false, publications: Publications [], sourceDir: ' /Users/seafile/Desktop/test ', useSystemTempDirectory: false, workspace: ' /Users/seafile/Desktop/test/tmp ' }, file: ' test.md ', formatter: DetailedFormatter { activity: { file: [AbsoluteFilePath], line: 1, nodes: [AstNodeList], type: ' hello-world ' }, statsCounter: StatsCounter { errorCount: 0, skipCount: 0, successCount: 0, warningCount: 0, time: [Time] }, stdout: { write: [Function: bound log] }, stderr: { write: [Function: bound log] }, output: '', title: ' Hello world ', sourceDir: ' /Users/seafile/Desktop/test ', skipped: false, warned: false, console: { log: [Function: log] } }, line: 1, linkTargets: LinkTargetList { targets: { ' test.md ': [] } }, nodes: AstNodeList [ AstNode { type: ' anchor_open ', tag: ' a ', file: [AbsoluteFilePath], line: 1, content: '', attributes: [Object] }, AstNode { type: ' text ', tag: '', file: [AbsoluteFilePath], line: 1, content: ' I love potato.I start to learn front-end development. There are plenty of differences between traditional webpage editing ( such as using Adobe Dreamweaver software to design a webpage ) . ', attributes: {} }, AstNode { type: ' anchor_close ', tag: ' /a ', file: [AbsoluteFilePath], line: 1, content: '', attributes: [Object] } ] } test.md:1 -- Hello world Success! 1 activities in 1 files, 27ms # \u663e\u793a\u4e0b\u9762\u7684\u5e2e\u52a9\u6587\u6863 Daniels-MBP:test seafile$ node_modules/.bin/text-run help TextRunner 3.6.0 USAGE: text-run [<options>] <command> COMMANDS run [<filename>] tests the entire documentation, or only the given file/folder add <filename> scaffolds a new block type handler setup creates an example configuration file version shows the currently installed version help shows this help screen OPTIONS --config provide a custom configuration filename --offline don' t check external links Daniels-MBP:test seafile$ node_modules/.bin/text-run version TextRunner v3.6.0 Daniels-MBP:test seafile$ node_modules/.bin/text-run cd test.md file or directory does not exist: cd Daniels-MBP:test seafile$ node_modules/.bin/text-run","title":"run \u8fd0\u884c\u8bb0\u5f55"},{"location":"old/welcome-to-jekyll/","text":"You\u2019ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve , which launches a web server and auto-regenerates your site when a file is updated. To add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works. Jekyll also offers powerful support for code snippets: {% highlight ruby %} def print_hi(name) puts \"Hi, #{name}\" end print_hi('Tom') #=> prints 'Hi, Tom' to STDOUT. {% endhighlight %} Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll\u2019s GitHub repo . If you have questions, you can ask them on Jekyll Talk .","title":"welcome-to-jekyll"},{"location":"ruby/readme/","text":"Ruby History \u00b6 Ruby is a dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write The Ideals of Ruby\u2019s Creator \u00b6 Ruby is a language of careful balance. Its creator, Yukihiro \u201cMatz\u201d Matsumoto, blended parts of his favorite languages (Perl, Smalltalk, Eiffel, Ada, and Lisp) to form a new language that balanced functional programming with imperative programming. He has often said that he is \u201ctrying to make Ruby natural, not simple,\u201d in a way that mirrors life. Building on this, he adds: Ruby is simple in appearance, but is very complex inside, just like our human body1. About Ruby\u2019s Growth \u00b6 Since its public release in 1995, Ruby has drawn devoted coders worldwide. In 2006, Ruby achieved mass acceptance. With active user groups formed in the world\u2019s major cities and Ruby-related conferences filled to capacity. Ruby-Talk, the primary mailing list for discussion of the Ruby language, climbed to an average of 200 messages per day in 2006. It has dropped in recent years as the size of the community pushed discussion from one central list into many smaller groups. Ruby is ranked among the top 10 on most of the indices that measure the growth and popularity of programming languages worldwide (such as the TIOBE index). Much of the growth is attributed to the popularity of software written in Ruby, particularly the Ruby on Rails web framework. Ruby is also completely free. Not only free of charge, but also free to use, copy, modify, and distribute. Seeing Everything as an Object \u00b6 Initially, Matz looked at other languages to find an ideal syntax. Recalling his search, he said, \u201cI wanted a scripting language that was more powerful than Perl, and more object-oriented than Python2.\u201d In Ruby, everything is an object. Every bit of information and code can be given their own properties and actions. Object-oriented programming calls properties by the name instance variables and actions are known as methods. Ruby\u2019s pure object-oriented approach is most commonly demonstrated by a bit of code which applies an action to a number. 5.times { print \"We love Ruby -- it's outrageous!\" } In many languages, numbers and other primitive types are not objects. Ruby follows the influence of the Smalltalk language by giving methods and instance variables to all of its types. This eases one\u2019s use of Ruby, since rules applying to objects apply to all of Ruby. Ruby\u2019s Flexibility \u00b6 Ruby is seen as a flexible language, since it allows its users to freely alter its parts. Essential parts of Ruby can be removed or redefined, at will. Existing parts can be added upon. Ruby tries not to restrict the coder. For example, addition is performed with the plus (+) operator. But, if you\u2019d rather use the readable word plus, you could add such a method to Ruby\u2019s builtin Numeric class. class Numeric def plus ( x ) self . + ( x ) end end y = 5 . plus 6 # y is now equal to 11 Ruby\u2019s operators are syntactic sugar for methods. You can redefine them as well. Blocks: a Truly Expressive Feature Ruby\u2019s block are also seen as a source of great flexibility. A programmer can attach a closure to any method, describing how that method should act. The closure is called a block and has become one of the most popular features for newcomers to Ruby from other imperative languages like PHP or Visual Basic. Blocks are inspired by functional languages. Matz said, \u201cin Ruby closures, I wanted to respect the Lisp culture3.\u201d search_engines = %w[Google Yahoo MSN] . map do | engine | \"http://www.\" + engine . downcase + \".com\" end In the above code, the block is described inside the do ... end construct. The map method applies the block to the provided list of words. Many other methods in Ruby leave a hole open for a coder to write their own block to fill in the details of what that method should do. Ruby and the Mixin \u00b6 Unlike many object-oriented languages, Ruby features single inheritance only, on purpose. But Ruby knows the concept of modules (called Categories in Objective-C). Modules are collections of methods. Classes can mixin a module and receive all its methods for free. For example, any class which implements the each method can mixin the Enumerable module, which adds a pile of methods that use each for looping. class MyArray include Enumerable end Generally, Rubyists see this as a much clearer way than multiple inheritance, which is complex and can be too restrictive. Ruby\u2019s Visual Appearance \u00b6 While Ruby often uses very limited punctuation and usually prefers English keywords, some punctuation is used to decorate Ruby. Ruby needs no variable declarations. It uses simple naming conventions to denote the scope of variables. var could be a local variable . @var is an instance variable . $var is a global variable . These sigils enhance readability by allowing the programmer to easily identify the roles of each variable. It also becomes unnecessary to use a tiresome self. prepended to every instance member. Beyond the Basics \u00b6 Ruby has a wealth of other features, among which are the following: Ruby has exception handling features, like Java or Python, to make it easy to handle errors. Ruby features a true mark-and-sweep garbage collector for all Ruby objects. No need to maintain reference counts in extension libraries. As Matz says, \u201cThis is better for your health.\u201d Writing C extensions in Ruby is easier than in Perl or Python, with a very elegant API for calling Ruby from C. This includes calls for embedding Ruby in software, for use as a scripting language. A SWIG interface is also available. Ruby can load extension libraries dynamically if an OS allows. \u00b6 Ruby features OS independent threading. Thus, for all platforms on which Ruby runs, you also have multithreading, regardless of if the OS supports it or not, even on MS-DOS! Ruby is highly portable: it is developed mostly on GNU/Linux, but works on many types of UNIX, macOS, Windows, DOS, BeOS, OS/2, etc. Other Implementations of Ruby \u00b6 Ruby, as a language, has a few different implementations. This page has been discussing the reference implementation, in the community often referred to as MRI (\u201cMatz\u2019s Ruby Interpreter\u201d) or CRuby (since it is written in C), but there are also others. They are often useful in certain situations, provide extra integration to other languages or environments, or have special features that MRI doesn\u2019t. Here\u2019s a list: JRuby is Ruby atop the JVM (Java Virtual Machine), utilizing the JVM\u2019s optimizing JIT compilers, garbage collectors, concurrent threads, tool ecosystem, and vast collection of libraries. Rubinius is \u2018Ruby written in Ruby\u2019. Built on top of LLVM, Rubinius sports a nifty virtual machine that other languages are being built on top of, too. TruffleRuby is a high performance Ruby implementation on top of GraalVM. mruby is a lightweight implementation of the Ruby language that can be linked and embedded within an application. Its development is led by Ruby\u2019s creator Yukihiro \u201cMatz\u201d Matsumoto. IronRuby is an implementation \u201ctightly integrated with the .NET Framework\u201d. MagLev is \u201ca fast, stable, Ruby implementation with integrated object persistence and distributed shared cache\u201d. Cardinal is a \u201cRuby compiler for Parrot Virtual Machine\u201d (Perl 6). For a more complete list, see Awesome Rubies. References \u00b6 1 Matz, speaking on the Ruby-Talk mailing list, May 12 th , 2000. 2 Matz, in An Interview with the Creator of Ruby, Nov. 29 th , 2001. 3 Matz, in Blocks and Closures in Ruby, December 22 nd , 2003.","title":"Ruby"},{"location":"ruby/readme/#ruby-history","text":"Ruby is a dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write","title":"Ruby History"},{"location":"ruby/readme/#the-ideals-of-rubys-creator","text":"Ruby is a language of careful balance. Its creator, Yukihiro \u201cMatz\u201d Matsumoto, blended parts of his favorite languages (Perl, Smalltalk, Eiffel, Ada, and Lisp) to form a new language that balanced functional programming with imperative programming. He has often said that he is \u201ctrying to make Ruby natural, not simple,\u201d in a way that mirrors life. Building on this, he adds: Ruby is simple in appearance, but is very complex inside, just like our human body1.","title":"The Ideals of Ruby\u2019s Creator"},{"location":"ruby/readme/#about-rubys-growth","text":"Since its public release in 1995, Ruby has drawn devoted coders worldwide. In 2006, Ruby achieved mass acceptance. With active user groups formed in the world\u2019s major cities and Ruby-related conferences filled to capacity. Ruby-Talk, the primary mailing list for discussion of the Ruby language, climbed to an average of 200 messages per day in 2006. It has dropped in recent years as the size of the community pushed discussion from one central list into many smaller groups. Ruby is ranked among the top 10 on most of the indices that measure the growth and popularity of programming languages worldwide (such as the TIOBE index). Much of the growth is attributed to the popularity of software written in Ruby, particularly the Ruby on Rails web framework. Ruby is also completely free. Not only free of charge, but also free to use, copy, modify, and distribute.","title":"About Ruby\u2019s Growth"},{"location":"ruby/readme/#seeing-everything-as-an-object","text":"Initially, Matz looked at other languages to find an ideal syntax. Recalling his search, he said, \u201cI wanted a scripting language that was more powerful than Perl, and more object-oriented than Python2.\u201d In Ruby, everything is an object. Every bit of information and code can be given their own properties and actions. Object-oriented programming calls properties by the name instance variables and actions are known as methods. Ruby\u2019s pure object-oriented approach is most commonly demonstrated by a bit of code which applies an action to a number. 5.times { print \"We love Ruby -- it's outrageous!\" } In many languages, numbers and other primitive types are not objects. Ruby follows the influence of the Smalltalk language by giving methods and instance variables to all of its types. This eases one\u2019s use of Ruby, since rules applying to objects apply to all of Ruby.","title":"Seeing Everything as an Object"},{"location":"ruby/readme/#rubys-flexibility","text":"Ruby is seen as a flexible language, since it allows its users to freely alter its parts. Essential parts of Ruby can be removed or redefined, at will. Existing parts can be added upon. Ruby tries not to restrict the coder. For example, addition is performed with the plus (+) operator. But, if you\u2019d rather use the readable word plus, you could add such a method to Ruby\u2019s builtin Numeric class. class Numeric def plus ( x ) self . + ( x ) end end y = 5 . plus 6 # y is now equal to 11 Ruby\u2019s operators are syntactic sugar for methods. You can redefine them as well. Blocks: a Truly Expressive Feature Ruby\u2019s block are also seen as a source of great flexibility. A programmer can attach a closure to any method, describing how that method should act. The closure is called a block and has become one of the most popular features for newcomers to Ruby from other imperative languages like PHP or Visual Basic. Blocks are inspired by functional languages. Matz said, \u201cin Ruby closures, I wanted to respect the Lisp culture3.\u201d search_engines = %w[Google Yahoo MSN] . map do | engine | \"http://www.\" + engine . downcase + \".com\" end In the above code, the block is described inside the do ... end construct. The map method applies the block to the provided list of words. Many other methods in Ruby leave a hole open for a coder to write their own block to fill in the details of what that method should do.","title":"Ruby\u2019s Flexibility"},{"location":"ruby/readme/#ruby-and-the-mixin","text":"Unlike many object-oriented languages, Ruby features single inheritance only, on purpose. But Ruby knows the concept of modules (called Categories in Objective-C). Modules are collections of methods. Classes can mixin a module and receive all its methods for free. For example, any class which implements the each method can mixin the Enumerable module, which adds a pile of methods that use each for looping. class MyArray include Enumerable end Generally, Rubyists see this as a much clearer way than multiple inheritance, which is complex and can be too restrictive.","title":"Ruby and the Mixin"},{"location":"ruby/readme/#rubys-visual-appearance","text":"While Ruby often uses very limited punctuation and usually prefers English keywords, some punctuation is used to decorate Ruby. Ruby needs no variable declarations. It uses simple naming conventions to denote the scope of variables. var could be a local variable . @var is an instance variable . $var is a global variable . These sigils enhance readability by allowing the programmer to easily identify the roles of each variable. It also becomes unnecessary to use a tiresome self. prepended to every instance member.","title":"Ruby\u2019s Visual Appearance"},{"location":"ruby/readme/#beyond-the-basics","text":"Ruby has a wealth of other features, among which are the following: Ruby has exception handling features, like Java or Python, to make it easy to handle errors. Ruby features a true mark-and-sweep garbage collector for all Ruby objects. No need to maintain reference counts in extension libraries. As Matz says, \u201cThis is better for your health.\u201d Writing C extensions in Ruby is easier than in Perl or Python, with a very elegant API for calling Ruby from C. This includes calls for embedding Ruby in software, for use as a scripting language. A SWIG interface is also available.","title":"Beyond the Basics"},{"location":"ruby/readme/#ruby-can-load-extension-libraries-dynamically-if-an-os-allows","text":"Ruby features OS independent threading. Thus, for all platforms on which Ruby runs, you also have multithreading, regardless of if the OS supports it or not, even on MS-DOS! Ruby is highly portable: it is developed mostly on GNU/Linux, but works on many types of UNIX, macOS, Windows, DOS, BeOS, OS/2, etc.","title":"Ruby can load extension libraries dynamically if an OS allows."},{"location":"ruby/readme/#other-implementations-of-ruby","text":"Ruby, as a language, has a few different implementations. This page has been discussing the reference implementation, in the community often referred to as MRI (\u201cMatz\u2019s Ruby Interpreter\u201d) or CRuby (since it is written in C), but there are also others. They are often useful in certain situations, provide extra integration to other languages or environments, or have special features that MRI doesn\u2019t. Here\u2019s a list: JRuby is Ruby atop the JVM (Java Virtual Machine), utilizing the JVM\u2019s optimizing JIT compilers, garbage collectors, concurrent threads, tool ecosystem, and vast collection of libraries. Rubinius is \u2018Ruby written in Ruby\u2019. Built on top of LLVM, Rubinius sports a nifty virtual machine that other languages are being built on top of, too. TruffleRuby is a high performance Ruby implementation on top of GraalVM. mruby is a lightweight implementation of the Ruby language that can be linked and embedded within an application. Its development is led by Ruby\u2019s creator Yukihiro \u201cMatz\u201d Matsumoto. IronRuby is an implementation \u201ctightly integrated with the .NET Framework\u201d. MagLev is \u201ca fast, stable, Ruby implementation with integrated object persistence and distributed shared cache\u201d. Cardinal is a \u201cRuby compiler for Parrot Virtual Machine\u201d (Perl 6). For a more complete list, see Awesome Rubies.","title":"Other Implementations of Ruby"},{"location":"ruby/readme/#references","text":"1 Matz, speaking on the Ruby-Talk mailing list, May 12 th , 2000. 2 Matz, in An Interview with the Creator of Ruby, Nov. 29 th , 2001. 3 Matz, in Blocks and Closures in Ruby, December 22 nd , 2003.","title":"References"}]}