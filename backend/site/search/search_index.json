{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u5199\u5728\u524d\u9762 \u00b6 \u8fd9\u91cc\u662f\u603b\u7ed3\u7684 web\u5f00\u53d1 \u540e\u7aef\u5f00\u53d1\u76f8\u5173\u8d44\u6599\u3002 \u559c\u6b22\u7684\u670b\u53cb\u53ef\u4ee5 star \uff0c\u4f60\u4eec\u7684\u652f\u6301\u662f\u6211\u6301\u7eed\u66f4\u65b0\u7684\u52a8\u529b\uff01 \u7f51\u7ad9\u6539\u7248\u8bd5\u8fd0\u884c\u4e2d\uff08\u6240\u4ee5\u6709\u4e0d\u5c11 todos\uff0c\u9700\u8981\u540e\u9762\u4e0d\u65ad\u5b8c\u5584\uff09\uff0c\u6b22\u8fce\u5927\u5bb6\u63d0\u4ea4 PR \u6216\u8005 issue\u3002 \u76ee\u5f55\u7ed3\u6784 \u00b6 \u251c\u2500\u2500 nodejs \u2502 \u251c\u2500\u2500 01-Node.js \u6559\u7a0b.md \u2502 \u251c\u2500\u2500 02-Node.js \u5b89\u88c5\u914d\u7f6e.md \u2502 \u251c\u2500\u2500 03-Node.js \u521b\u5efa\u7b2c\u4e00\u4e2a\u5e94\u7528.md \u2502 \u251c\u2500\u2500 05-Node.js REPL(\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668).md \u2502 \u251c\u2500\u2500 06-Node.js \u56de\u8c03\u51fd\u6570.md \u2502 \u251c\u2500\u2500 07-Node.js \u4e8b\u4ef6\u5faa\u73af.md \u2502 \u251c\u2500\u2500 08-Node.js EventEmitter.md \u2502 \u251c\u2500\u2500 09-Node.js Buffer(\u7f13\u51b2\u533a).md \u2502 \u251c\u2500\u2500 10-Node.js Stream(\u6d41).md \u2502 \u251c\u2500\u2500 11-Node.js\u6a21\u5757\u7cfb\u7edf.md \u2502 \u251c\u2500\u2500 12-Node.js \u51fd\u6570.md \u2502 \u251c\u2500\u2500 13-Node.js \u8def\u7531.md \u2502 \u251c\u2500\u2500 14-Node.js \u5168\u5c40\u5bf9\u8c61.md \u2502 \u251c\u2500\u2500 15-Node.js \u5e38\u7528\u5de5\u5177.md \u2502 \u251c\u2500\u2500 16-Node.js \u6587\u4ef6\u7cfb\u7edf.md \u2502 \u251c\u2500\u2500 17-Node.js GETPOST\u8bf7\u6c42.md \u2502 \u251c\u2500\u2500 18-Node.js \u5de5\u5177\u6a21\u5757.md \u2502 \u251c\u2500\u2500 19-Node.js Web \u6a21\u5757.md \u2502 \u251c\u2500\u2500 20-Node.js Express \u6846\u67b6.md \u2502 \u251c\u2500\u2500 21-Node.js RESTful API.md \u2502 \u251c\u2500\u2500 22-Node.js \u591a\u8fdb\u7a0b.md \u2502 \u251c\u2500\u2500 23-Node.js JXcore \u6253\u5305.md \u2502 \u251c\u2500\u2500 24-Node.js \u8fde\u63a5 MySQL.md \u2502 \u251c\u2500\u2500 25-Node.js \u8fde\u63a5 MongoDB.md \u2502 \u251c\u2500\u2500 Node \u4e0b LDAP \u5b9e\u73b0.md \u2502 \u251c\u2500\u2500 Node.js-fs\u6587\u6863.md \u2502 \u251c\u2500\u2500 Node.js-path.md \u2502 \u251c\u2500\u2500 Node.js-\u5168\u5c40\u53d8\u91cf.md \u2502 \u251c\u2500\u2500 Node.js\u4f7f\u7528Nodemailer\u53d1\u9001\u90ae\u4ef6.md \u2502 \u251c\u2500\u2500 NodeJS.md \u2502 \u251c\u2500\u2500 node-debug.md \u2502 \u251c\u2500\u2500 nodeJS \u57fa\u7840\u6559\u7a0b.md \u2502 \u251c\u2500\u2500 nodeJS+mysql+\u8fde\u63a5\u6c60.md \u2502 \u251c\u2500\u2500 nodejs api\u5b66\u4e60\uff1afs.createReadStreame().md \u2502 \u251c\u2500\u2500 node\u5b9a\u65f6\u5668.md \u2502 \u251c\u2500\u2500 \u4f7f\u7528nodejs\u8fde\u63a5mysql\u6570\u636e\u5e93\u5b9e\u73b0\u589e\u5220\u6539\u67e5.md \u2502 \u251c\u2500\u2500 \u5ed6\u96ea\u5cf0 NodeJS.md \u2502 \u2514\u2500\u2500 \u547d\u4ee4\u884c\u7684nodeJS.md \u251c\u2500\u2500 SQL \u2502 \u251c\u2500\u2500 Mac pip install mysql-python unsuccessful.md \u2502 \u251c\u2500\u2500 Mac\u5b89\u88c5MySQLdb\uff08python-mysql\uff09\u6a21\u5757.md \u2502 \u251c\u2500\u2500 Python\u64cd\u4f5c MySQL\u6570\u636e\u5e93.md \u2502 \u251c\u2500\u2500 SQLite-API-Python.md \u2502 \u251c\u2500\u2500 \u6df1\u5165MySQL\u6570\u636e\u5e93.md \u2502 \u251c\u2500\u2500 \u963f\u91cc\u4e91MySQL\u5165\u95e8.md \u2502 \u2514\u2500\u2500 \u6570\u636e\u5e93\u6982\u5ff5.md \u2514\u2500\u2500 python \u251c\u2500\u2500 ERROR No matching distribution found for Django==3.0.2 (from -r requirements.txt (line 4)).md \u251c\u2500\u2500 django-basic.md \u251c\u2500\u2500 django.md \u251c\u2500\u2500 falsk\u5feb\u901f\u5f00\u59cb.md \u251c\u2500\u2500 flask \u7f51\u6613\u4e91\u8bfe\u5802.md \u251c\u2500\u2500 \u5b89\u88c5pandas\u65f6\u51fa\u73b0\u73af\u5883\u9519\u8bef.md \u251c\u2500\u2500 \u642d\u5efapython3\u5f00\u53d1\u73af\u5883.md \u2514\u2500\u2500 \u3010\u89e3\u51b3\u3011ValueError Length mismatch Expected axis has 0 elements, new values have 2 elements.md","title":"\u4ecb\u7ecd"},{"location":"#_1","text":"\u8fd9\u91cc\u662f\u603b\u7ed3\u7684 web\u5f00\u53d1 \u540e\u7aef\u5f00\u53d1\u76f8\u5173\u8d44\u6599\u3002 \u559c\u6b22\u7684\u670b\u53cb\u53ef\u4ee5 star \uff0c\u4f60\u4eec\u7684\u652f\u6301\u662f\u6211\u6301\u7eed\u66f4\u65b0\u7684\u52a8\u529b\uff01 \u7f51\u7ad9\u6539\u7248\u8bd5\u8fd0\u884c\u4e2d\uff08\u6240\u4ee5\u6709\u4e0d\u5c11 todos\uff0c\u9700\u8981\u540e\u9762\u4e0d\u65ad\u5b8c\u5584\uff09\uff0c\u6b22\u8fce\u5927\u5bb6\u63d0\u4ea4 PR \u6216\u8005 issue\u3002","title":"\u5199\u5728\u524d\u9762"},{"location":"#_2","text":"\u251c\u2500\u2500 nodejs \u2502 \u251c\u2500\u2500 01-Node.js \u6559\u7a0b.md \u2502 \u251c\u2500\u2500 02-Node.js \u5b89\u88c5\u914d\u7f6e.md \u2502 \u251c\u2500\u2500 03-Node.js \u521b\u5efa\u7b2c\u4e00\u4e2a\u5e94\u7528.md \u2502 \u251c\u2500\u2500 05-Node.js REPL(\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668).md \u2502 \u251c\u2500\u2500 06-Node.js \u56de\u8c03\u51fd\u6570.md \u2502 \u251c\u2500\u2500 07-Node.js \u4e8b\u4ef6\u5faa\u73af.md \u2502 \u251c\u2500\u2500 08-Node.js EventEmitter.md \u2502 \u251c\u2500\u2500 09-Node.js Buffer(\u7f13\u51b2\u533a).md \u2502 \u251c\u2500\u2500 10-Node.js Stream(\u6d41).md \u2502 \u251c\u2500\u2500 11-Node.js\u6a21\u5757\u7cfb\u7edf.md \u2502 \u251c\u2500\u2500 12-Node.js \u51fd\u6570.md \u2502 \u251c\u2500\u2500 13-Node.js \u8def\u7531.md \u2502 \u251c\u2500\u2500 14-Node.js \u5168\u5c40\u5bf9\u8c61.md \u2502 \u251c\u2500\u2500 15-Node.js \u5e38\u7528\u5de5\u5177.md \u2502 \u251c\u2500\u2500 16-Node.js \u6587\u4ef6\u7cfb\u7edf.md \u2502 \u251c\u2500\u2500 17-Node.js GETPOST\u8bf7\u6c42.md \u2502 \u251c\u2500\u2500 18-Node.js \u5de5\u5177\u6a21\u5757.md \u2502 \u251c\u2500\u2500 19-Node.js Web \u6a21\u5757.md \u2502 \u251c\u2500\u2500 20-Node.js Express \u6846\u67b6.md \u2502 \u251c\u2500\u2500 21-Node.js RESTful API.md \u2502 \u251c\u2500\u2500 22-Node.js \u591a\u8fdb\u7a0b.md \u2502 \u251c\u2500\u2500 23-Node.js JXcore \u6253\u5305.md \u2502 \u251c\u2500\u2500 24-Node.js \u8fde\u63a5 MySQL.md \u2502 \u251c\u2500\u2500 25-Node.js \u8fde\u63a5 MongoDB.md \u2502 \u251c\u2500\u2500 Node \u4e0b LDAP \u5b9e\u73b0.md \u2502 \u251c\u2500\u2500 Node.js-fs\u6587\u6863.md \u2502 \u251c\u2500\u2500 Node.js-path.md \u2502 \u251c\u2500\u2500 Node.js-\u5168\u5c40\u53d8\u91cf.md \u2502 \u251c\u2500\u2500 Node.js\u4f7f\u7528Nodemailer\u53d1\u9001\u90ae\u4ef6.md \u2502 \u251c\u2500\u2500 NodeJS.md \u2502 \u251c\u2500\u2500 node-debug.md \u2502 \u251c\u2500\u2500 nodeJS \u57fa\u7840\u6559\u7a0b.md \u2502 \u251c\u2500\u2500 nodeJS+mysql+\u8fde\u63a5\u6c60.md \u2502 \u251c\u2500\u2500 nodejs api\u5b66\u4e60\uff1afs.createReadStreame().md \u2502 \u251c\u2500\u2500 node\u5b9a\u65f6\u5668.md \u2502 \u251c\u2500\u2500 \u4f7f\u7528nodejs\u8fde\u63a5mysql\u6570\u636e\u5e93\u5b9e\u73b0\u589e\u5220\u6539\u67e5.md \u2502 \u251c\u2500\u2500 \u5ed6\u96ea\u5cf0 NodeJS.md \u2502 \u2514\u2500\u2500 \u547d\u4ee4\u884c\u7684nodeJS.md \u251c\u2500\u2500 SQL \u2502 \u251c\u2500\u2500 Mac pip install mysql-python unsuccessful.md \u2502 \u251c\u2500\u2500 Mac\u5b89\u88c5MySQLdb\uff08python-mysql\uff09\u6a21\u5757.md \u2502 \u251c\u2500\u2500 Python\u64cd\u4f5c MySQL\u6570\u636e\u5e93.md \u2502 \u251c\u2500\u2500 SQLite-API-Python.md \u2502 \u251c\u2500\u2500 \u6df1\u5165MySQL\u6570\u636e\u5e93.md \u2502 \u251c\u2500\u2500 \u963f\u91cc\u4e91MySQL\u5165\u95e8.md \u2502 \u2514\u2500\u2500 \u6570\u636e\u5e93\u6982\u5ff5.md \u2514\u2500\u2500 python \u251c\u2500\u2500 ERROR No matching distribution found for Django==3.0.2 (from -r requirements.txt (line 4)).md \u251c\u2500\u2500 django-basic.md \u251c\u2500\u2500 django.md \u251c\u2500\u2500 falsk\u5feb\u901f\u5f00\u59cb.md \u251c\u2500\u2500 flask \u7f51\u6613\u4e91\u8bfe\u5802.md \u251c\u2500\u2500 \u5b89\u88c5pandas\u65f6\u51fa\u73b0\u73af\u5883\u9519\u8bef.md \u251c\u2500\u2500 \u642d\u5efapython3\u5f00\u53d1\u73af\u5883.md \u2514\u2500\u2500 \u3010\u89e3\u51b3\u3011ValueError Length mismatch Expected axis has 0 elements, new values have 2 elements.md","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"nodejs/01-Node.js%20%E6%95%99%E7%A8%8B/","text":"01-Node.js \u6559\u7a0b\uff08ok\uff09 \u00b6 \u7b80\u5355\u7684\u8bf4 Node.js \u5c31\u662f\u8fd0\u884c\u5728\u670d\u52a1\u7aef\u7684 JavaScript\u3002 Node.js \u662f\u4e00\u4e2a\u57fa\u4e8eChrome JavaScript \u8fd0\u884c\u65f6\u5efa\u7acb\u7684\u4e00\u4e2a\u5e73\u53f0\u3002 Node.js\u662f\u4e00\u4e2a\u4e8b\u4ef6\u9a71\u52a8I/O\u670d\u52a1\u7aefJavaScript\u73af\u5883\uff0c\u57fa\u4e8eGoogle\u7684V8\u5f15\u64ce\uff0cV8\u5f15\u64ce\u6267\u884cJavascript\u7684\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u6027\u80fd\u975e\u5e38\u597d\u3002 \u4f7f\u7528\u7684\u7248\u672c \u00b6 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u67e5\u770b\u5f53\u524d\u7684 Node \u7248\u672c\uff1a $ node -v v4.4.3 \u6ce8\u610f \u4e0d\u540c\u7248\u672c\u95f4\u53ef\u80fd\u662f\u6709\u5dee\u5f02\u7684\u3002 \u7b2c\u4e00\u4e2aNode.js\u7a0b\u5e8f\uff1aHello World\uff01 \u00b6 \u811a\u672c\u6a21\u5f0f \u00b6 \u4ee5\u4e0b\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2aNode.js\u7a0b\u5e8f\uff1a console.log(\"Hello World\"); \u4fdd\u5b58\u8be5\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u4e3a helloworld.js\uff0c \u5e76\u901a\u8fc7 node\u547d\u4ee4\u6765\u6267\u884c\uff1a node helloworld.js \u7a0b\u5e8f\u6267\u884c\u540e\uff0c\u6b63\u5e38\u7684\u8bdd\uff0c\u5c31\u4f1a\u5728\u7ec8\u7aef\u8f93\u51fa Hello World\u3002 \u4ea4\u4e92\u6a21\u5f0f \u00b6 \u6253\u5f00\u7ec8\u7aef\uff0c\u952e\u5165node\u8fdb\u5165\u547d\u4ee4\u4ea4\u4e92\u6a21\u5f0f\uff0c\u53ef\u4ee5\u8f93\u5165\u4e00\u6761\u4ee3\u7801\u8bed\u53e5\u540e\u7acb\u5373\u6267\u884c\u5e76\u663e\u793a\u7ed3\u679c\uff0c\u4f8b\u5982\uff1a $ node > console.log('Hello World!'); Hello World!","title":"01-Node.js \u6559\u7a0b"},{"location":"nodejs/01-Node.js%20%E6%95%99%E7%A8%8B/#01-nodejs-ok","text":"\u7b80\u5355\u7684\u8bf4 Node.js \u5c31\u662f\u8fd0\u884c\u5728\u670d\u52a1\u7aef\u7684 JavaScript\u3002 Node.js \u662f\u4e00\u4e2a\u57fa\u4e8eChrome JavaScript \u8fd0\u884c\u65f6\u5efa\u7acb\u7684\u4e00\u4e2a\u5e73\u53f0\u3002 Node.js\u662f\u4e00\u4e2a\u4e8b\u4ef6\u9a71\u52a8I/O\u670d\u52a1\u7aefJavaScript\u73af\u5883\uff0c\u57fa\u4e8eGoogle\u7684V8\u5f15\u64ce\uff0cV8\u5f15\u64ce\u6267\u884cJavascript\u7684\u901f\u5ea6\u975e\u5e38\u5feb\uff0c\u6027\u80fd\u975e\u5e38\u597d\u3002","title":"01-Node.js \u6559\u7a0b\uff08ok\uff09"},{"location":"nodejs/01-Node.js%20%E6%95%99%E7%A8%8B/#_1","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u67e5\u770b\u5f53\u524d\u7684 Node \u7248\u672c\uff1a $ node -v v4.4.3 \u6ce8\u610f \u4e0d\u540c\u7248\u672c\u95f4\u53ef\u80fd\u662f\u6709\u5dee\u5f02\u7684\u3002","title":"\u4f7f\u7528\u7684\u7248\u672c"},{"location":"nodejs/01-Node.js%20%E6%95%99%E7%A8%8B/#nodejshello-world","text":"","title":"\u7b2c\u4e00\u4e2aNode.js\u7a0b\u5e8f\uff1aHello World\uff01"},{"location":"nodejs/01-Node.js%20%E6%95%99%E7%A8%8B/#_2","text":"\u4ee5\u4e0b\u662f\u6211\u4eec\u7684\u7b2c\u4e00\u4e2aNode.js\u7a0b\u5e8f\uff1a console.log(\"Hello World\"); \u4fdd\u5b58\u8be5\u6587\u4ef6\uff0c\u6587\u4ef6\u540d\u4e3a helloworld.js\uff0c \u5e76\u901a\u8fc7 node\u547d\u4ee4\u6765\u6267\u884c\uff1a node helloworld.js \u7a0b\u5e8f\u6267\u884c\u540e\uff0c\u6b63\u5e38\u7684\u8bdd\uff0c\u5c31\u4f1a\u5728\u7ec8\u7aef\u8f93\u51fa Hello World\u3002","title":"\u811a\u672c\u6a21\u5f0f"},{"location":"nodejs/01-Node.js%20%E6%95%99%E7%A8%8B/#_3","text":"\u6253\u5f00\u7ec8\u7aef\uff0c\u952e\u5165node\u8fdb\u5165\u547d\u4ee4\u4ea4\u4e92\u6a21\u5f0f\uff0c\u53ef\u4ee5\u8f93\u5165\u4e00\u6761\u4ee3\u7801\u8bed\u53e5\u540e\u7acb\u5373\u6267\u884c\u5e76\u663e\u793a\u7ed3\u679c\uff0c\u4f8b\u5982\uff1a $ node > console.log('Hello World!'); Hello World!","title":"\u4ea4\u4e92\u6a21\u5f0f"},{"location":"nodejs/02-Node.js%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/","text":"02-Node.js \u5b89\u88c5\u914d\u7f6e\uff08ok\uff09 \u00b6 \u672c\u7ae0\u8282\u6211\u4eec\u5c06\u5411\u5927\u5bb6\u4ecb\u7ecd\u5728 Windows \u548c Linux \u4e0a\u5b89\u88c5 Node.js \u7684\u65b9\u6cd5\u3002 \u672c\u5b89\u88c5\u6559\u7a0b\u4ee5 Node.js v4.4.3 LTS(\u957f\u671f\u652f\u6301\u7248\u672c)\u7248\u672c\u4e3a\u4f8b\u3002 Node.js \u5b89\u88c5\u5305\u53ca\u6e90\u7801\u4e0b\u8f7d\u5730\u5740\u4e3a\uff1a https://nodejs.org/en/download/ \u3002 \u4f60\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u5e73\u53f0\u7cfb\u7edf\u9009\u62e9\u4f60\u9700\u8981\u7684 Node.js \u5b89\u88c5\u5305\u3002 **\u6ce8\u610f\uff1a**Linux \u4e0a\u5b89\u88c5 Node.js \u9700\u8981\u5b89\u88c5 Python 2.6 \u6216 2.7 \uff0c\u4e0d\u5efa\u8bae\u5b89\u88c5 Python 3.0 \u4ee5\u4e0a\u7248\u672c\u3002 Linux \u4e0a\u5b89\u88c5 Node.js \u00b6 \u76f4\u63a5\u4f7f\u7528\u5df2\u7f16\u8bd1\u597d\u7684\u5305 \u00b6 Node \u5b98\u7f51\u5df2\u7ecf\u628a linux \u4e0b\u8f7d\u7248\u672c\u66f4\u6539\u4e3a\u5df2\u7f16\u8bd1\u597d\u7684\u7248\u672c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u89e3\u538b\u540e\u4f7f\u7528\uff1a # wget https://nodejs.org/dist/v10.9.0/node-v10.9.0-linux-x64.tar.xz // \u4e0b\u8f7d # tar xf node-v10.9.0-linux-x64.tar.xz // \u89e3\u538b # cd node-v10.9.0-linux-x64/ // \u8fdb\u5165\u89e3\u538b\u76ee\u5f55 # ./bin/node -v // \u6267\u884cnode\u547d\u4ee4 \u67e5\u770b\u7248\u672c v10.9.0 \u89e3\u538b\u6587\u4ef6\u7684 bin \u76ee\u5f55\u5e95\u4e0b\u5305\u542b\u4e86 node\u3001npm \u7b49\u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ln \u547d\u4ee4\u6765\u8bbe\u7f6e\u8f6f\u8fde\u63a5\uff1a ln -s /usr/software/nodejs/bin/npm /usr/local/bin/ ln -s /usr/software/nodejs/bin/node /usr/local/bin/ Ubuntu \u6e90\u7801\u5b89\u88c5 Node.js \u00b6 \u4ee5\u4e0b\u90e8\u5206\u6211\u4eec\u5c06\u4ecb\u7ecd\u5728 Ubuntu Linux \u4e0b\u4f7f\u7528\u6e90\u7801\u5b89\u88c5 Node.js \u3002 \u5176\u4ed6\u7684 Linux \u7cfb\u7edf\uff0c\u5982 Centos \u7b49\u7c7b\u4f3c\u5982\u4e0b\u5b89\u88c5\u6b65\u9aa4\u3002 \u5728 Github \u4e0a\u83b7\u53d6 Node.js \u6e90\u7801\uff1a $ sudo git clone https://github.com/nodejs/node.git Cloning into 'node'... \u4fee\u6539\u76ee\u5f55\u6743\u9650\uff1a $ sudo chmod -R 755 node \u4f7f\u7528 ./configure \u521b\u5efa\u7f16\u8bd1\u6587\u4ef6\uff0c\u5e76\u6309\u7167\uff1a $ cd node $ sudo ./configure $ sudo make $ sudo make install \u67e5\u770b node \u7248\u672c\uff1a $ node --version v0.10.25 Ubuntu apt-get\u547d\u4ee4\u5b89\u88c5 \u00b6 \u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a sudo apt-get install nodejs sudo apt-get install npm CentOS \u4e0b\u6e90\u7801\u5b89\u88c5 Node.js \u00b6 1\u3001\u4e0b\u8f7d\u6e90\u7801\uff0c\u4f60\u9700\u8981\u5728https://nodejs.org/en/download/\u4e0b\u8f7d\u6700\u65b0\u7684Nodejs\u7248\u672c\uff0c\u672c\u6587\u4ee5v0.10.24\u4e3a\u4f8b: cd /usr/local/src/ wget http://nodejs.org/dist/v0.10.24/node-v0.10.24.tar.gz 2\u3001\u89e3\u538b\u6e90\u7801 tar zxvf node-v0.10.24.tar.gz 3\u3001 \u7f16\u8bd1\u5b89\u88c5 cd node-v0.10.24 ./configure --prefix=/usr/local/node/0.10.24 make make install 4\u3001 \u914d\u7f6eNODE_HOME\uff0c\u8fdb\u5165profile\u7f16\u8f91\u73af\u5883\u53d8\u91cf vim /etc/profile \u8bbe\u7f6e nodejs \u73af\u5883\u53d8\u91cf\uff0c\u5728 export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL \u4e00\u884c\u7684\u4e0a\u9762\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9: #set for nodejs export NODE_HOME=/usr/local/node/0.10.24 export PATH=$NODE_HOME/bin:$PATH :wq\u4fdd\u5b58\u5e76\u9000\u51fa\uff0c\u7f16\u8bd1/etc/profile \u4f7f\u914d\u7f6e\u751f\u6548 source /etc/profile \u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u914d\u7f6e\u6210\u529f node -v \u8f93\u51fa v0.10.24 \u8868\u793a\u914d\u7f6e\u6210\u529f npm\u6a21\u5757\u5b89\u88c5\u8def\u5f84 /usr/local/node/0.10.24/lib/node_modules/ **\u6ce8\uff1a**Nodejs \u5b98\u7f51\u63d0\u4f9b\u4e86\u7f16\u8bd1\u597d\u7684 Linux \u4e8c\u8fdb\u5236\u5305\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u4e0b\u6765\u76f4\u63a5\u5e94\u7528\u3002 Mac OS \u4e0a\u5b89\u88c5 \u00b6 \u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u5728 Mac OS \u4e0a\u6765\u5b89\u88c5 node\uff1a 1\u3001\u5728\u5b98\u65b9\u4e0b\u8f7d\u7f51\u7ad9\u4e0b\u8f7d pkg \u5b89\u88c5\u5305\uff0c\u76f4\u63a5\u70b9\u51fb\u5b89\u88c5\u5373\u53ef\u3002 2\u3001\u4f7f\u7528 brew \u547d\u4ee4\u6765\u5b89\u88c5\uff1a brew install node \u7248\u672c\u7ba1\u7406\u5de5\u5177 nvm \u00b6 \u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528nvm(Node Version Manager) \uff0cnvm\u662f Nodejs \u7248\u672c\u7ba1\u7406\u5668\uff0c\u5b83\u8ba9\u6211\u4eec\u65b9\u4fbf\u7684\u5bf9\u5207\u6362Nodejs \u7248\u672c\u3002 nvm \u4ecb\u7ecd\uff1a \u4f7f\u7528 nvm \u7ba1\u7406\u4e0d\u540c\u7248\u672c\u7684 node \u4e0e npm \u5173\u4e8envm\u7684\u8be6\u7ec6\u5b89\u88c5\u4ee5\u53ca\u4f7f\u7528\u53ef\u4ee5\u8bbf\u95ee\u4ee5\u4e0b\u94fe\u63a5\uff1a Linux : https://github.com/creationix/nvm Windows : https://github.com/coreybutler/nvm-windows \u5728 MAC \u4e0a\u5b89\u88c5\u4f7f\u7528 brew install nvm , \u5176\u4e2d brew \u662f Homebrew\u3002 \u5b89\u88c5 nvm \u540e\u53ef\u80fd\u4f1a\u51fa\u73b0 zsh: command not found: nvm \uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u5b89\u88c5\uff1a curl -o- [ https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh ]( https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh ) | bash [[ -s $HOME /.nvm/nvm.sh ]] && . $HOME /.nvm/nvm.sh \u4f7f\u7528 nvm ls-remote \u67e5\u770b\u6709\u54ea\u4e9bnode\u7248\u672c\u53ef\u4ee5\u5b89\u88c5 nvm \u7528\u4e8e\u7ba1\u7406node \u7248\u672c nvm list \u67e5\u770b\u5f53\u524d\u6240\u6709\u7684node \u7248\u672c nvm install v10.13.0 \u5b89\u88c5\u6307\u5b9a\u7684\u7248\u672c\uff0c\u5b89\u88c5\u591a\u7248\u672c nvm use \u2014delete-prefix 10 .13.0 \u4f7f\u7528nvm use\u5207\u6362\u5230\u6307\u5b9a\u7684\u7248\u672c nvm current \u67e5\u770b\u5f53\u524dnode\u7248\u672c nvm alias default <version> \u547d\u4ee4\u6765\u6307\u5b9a\u4e00\u4e2a\u9ed8\u8ba4\u7684node\u7248\u672c \u7248\u672c\u7ba1\u7406\u5de5\u5177 n \u00b6 n # \u73b0\u5728\u672c\u673a\u5b89\u88c5\u4e09\u4e2a\u7248\u672c\uff0c\u901a\u8fc7\u952e\u76d8\u9009\u62e9\u4f7f\u7528\u7684\u7248\u672c node/8.16.0 node/12.18.4 node/15.9.0","title":"02-Node.js \u5b89\u88c5\u914d\u7f6e"},{"location":"nodejs/02-Node.js%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/#02-nodejs-ok","text":"\u672c\u7ae0\u8282\u6211\u4eec\u5c06\u5411\u5927\u5bb6\u4ecb\u7ecd\u5728 Windows \u548c Linux \u4e0a\u5b89\u88c5 Node.js \u7684\u65b9\u6cd5\u3002 \u672c\u5b89\u88c5\u6559\u7a0b\u4ee5 Node.js v4.4.3 LTS(\u957f\u671f\u652f\u6301\u7248\u672c)\u7248\u672c\u4e3a\u4f8b\u3002 Node.js \u5b89\u88c5\u5305\u53ca\u6e90\u7801\u4e0b\u8f7d\u5730\u5740\u4e3a\uff1a https://nodejs.org/en/download/ \u3002 \u4f60\u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u5e73\u53f0\u7cfb\u7edf\u9009\u62e9\u4f60\u9700\u8981\u7684 Node.js \u5b89\u88c5\u5305\u3002 **\u6ce8\u610f\uff1a**Linux \u4e0a\u5b89\u88c5 Node.js \u9700\u8981\u5b89\u88c5 Python 2.6 \u6216 2.7 \uff0c\u4e0d\u5efa\u8bae\u5b89\u88c5 Python 3.0 \u4ee5\u4e0a\u7248\u672c\u3002","title":"02-Node.js \u5b89\u88c5\u914d\u7f6e\uff08ok\uff09"},{"location":"nodejs/02-Node.js%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/#linux-nodejs","text":"","title":"Linux \u4e0a\u5b89\u88c5 Node.js"},{"location":"nodejs/02-Node.js%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/#_1","text":"Node \u5b98\u7f51\u5df2\u7ecf\u628a linux \u4e0b\u8f7d\u7248\u672c\u66f4\u6539\u4e3a\u5df2\u7f16\u8bd1\u597d\u7684\u7248\u672c\u4e86\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u89e3\u538b\u540e\u4f7f\u7528\uff1a # wget https://nodejs.org/dist/v10.9.0/node-v10.9.0-linux-x64.tar.xz // \u4e0b\u8f7d # tar xf node-v10.9.0-linux-x64.tar.xz // \u89e3\u538b # cd node-v10.9.0-linux-x64/ // \u8fdb\u5165\u89e3\u538b\u76ee\u5f55 # ./bin/node -v // \u6267\u884cnode\u547d\u4ee4 \u67e5\u770b\u7248\u672c v10.9.0 \u89e3\u538b\u6587\u4ef6\u7684 bin \u76ee\u5f55\u5e95\u4e0b\u5305\u542b\u4e86 node\u3001npm \u7b49\u547d\u4ee4\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ln \u547d\u4ee4\u6765\u8bbe\u7f6e\u8f6f\u8fde\u63a5\uff1a ln -s /usr/software/nodejs/bin/npm /usr/local/bin/ ln -s /usr/software/nodejs/bin/node /usr/local/bin/","title":"\u76f4\u63a5\u4f7f\u7528\u5df2\u7f16\u8bd1\u597d\u7684\u5305"},{"location":"nodejs/02-Node.js%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/#ubuntu-nodejs","text":"\u4ee5\u4e0b\u90e8\u5206\u6211\u4eec\u5c06\u4ecb\u7ecd\u5728 Ubuntu Linux \u4e0b\u4f7f\u7528\u6e90\u7801\u5b89\u88c5 Node.js \u3002 \u5176\u4ed6\u7684 Linux \u7cfb\u7edf\uff0c\u5982 Centos \u7b49\u7c7b\u4f3c\u5982\u4e0b\u5b89\u88c5\u6b65\u9aa4\u3002 \u5728 Github \u4e0a\u83b7\u53d6 Node.js \u6e90\u7801\uff1a $ sudo git clone https://github.com/nodejs/node.git Cloning into 'node'... \u4fee\u6539\u76ee\u5f55\u6743\u9650\uff1a $ sudo chmod -R 755 node \u4f7f\u7528 ./configure \u521b\u5efa\u7f16\u8bd1\u6587\u4ef6\uff0c\u5e76\u6309\u7167\uff1a $ cd node $ sudo ./configure $ sudo make $ sudo make install \u67e5\u770b node \u7248\u672c\uff1a $ node --version v0.10.25","title":"Ubuntu \u6e90\u7801\u5b89\u88c5 Node.js"},{"location":"nodejs/02-Node.js%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/#ubuntu-apt-get","text":"\u547d\u4ee4\u683c\u5f0f\u5982\u4e0b\uff1a sudo apt-get install nodejs sudo apt-get install npm","title":"Ubuntu apt-get\u547d\u4ee4\u5b89\u88c5"},{"location":"nodejs/02-Node.js%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/#centos-nodejs","text":"1\u3001\u4e0b\u8f7d\u6e90\u7801\uff0c\u4f60\u9700\u8981\u5728https://nodejs.org/en/download/\u4e0b\u8f7d\u6700\u65b0\u7684Nodejs\u7248\u672c\uff0c\u672c\u6587\u4ee5v0.10.24\u4e3a\u4f8b: cd /usr/local/src/ wget http://nodejs.org/dist/v0.10.24/node-v0.10.24.tar.gz 2\u3001\u89e3\u538b\u6e90\u7801 tar zxvf node-v0.10.24.tar.gz 3\u3001 \u7f16\u8bd1\u5b89\u88c5 cd node-v0.10.24 ./configure --prefix=/usr/local/node/0.10.24 make make install 4\u3001 \u914d\u7f6eNODE_HOME\uff0c\u8fdb\u5165profile\u7f16\u8f91\u73af\u5883\u53d8\u91cf vim /etc/profile \u8bbe\u7f6e nodejs \u73af\u5883\u53d8\u91cf\uff0c\u5728 export PATH USER LOGNAME MAIL HOSTNAME HISTSIZE HISTCONTROL \u4e00\u884c\u7684\u4e0a\u9762\u6dfb\u52a0\u5982\u4e0b\u5185\u5bb9: #set for nodejs export NODE_HOME=/usr/local/node/0.10.24 export PATH=$NODE_HOME/bin:$PATH :wq\u4fdd\u5b58\u5e76\u9000\u51fa\uff0c\u7f16\u8bd1/etc/profile \u4f7f\u914d\u7f6e\u751f\u6548 source /etc/profile \u9a8c\u8bc1\u662f\u5426\u5b89\u88c5\u914d\u7f6e\u6210\u529f node -v \u8f93\u51fa v0.10.24 \u8868\u793a\u914d\u7f6e\u6210\u529f npm\u6a21\u5757\u5b89\u88c5\u8def\u5f84 /usr/local/node/0.10.24/lib/node_modules/ **\u6ce8\uff1a**Nodejs \u5b98\u7f51\u63d0\u4f9b\u4e86\u7f16\u8bd1\u597d\u7684 Linux \u4e8c\u8fdb\u5236\u5305\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u4e0b\u6765\u76f4\u63a5\u5e94\u7528\u3002","title":"CentOS \u4e0b\u6e90\u7801\u5b89\u88c5 Node.js"},{"location":"nodejs/02-Node.js%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/#mac-os","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u5728 Mac OS \u4e0a\u6765\u5b89\u88c5 node\uff1a 1\u3001\u5728\u5b98\u65b9\u4e0b\u8f7d\u7f51\u7ad9\u4e0b\u8f7d pkg \u5b89\u88c5\u5305\uff0c\u76f4\u63a5\u70b9\u51fb\u5b89\u88c5\u5373\u53ef\u3002 2\u3001\u4f7f\u7528 brew \u547d\u4ee4\u6765\u5b89\u88c5\uff1a brew install node","title":"Mac OS \u4e0a\u5b89\u88c5"},{"location":"nodejs/02-Node.js%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/#nvm","text":"\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528nvm(Node Version Manager) \uff0cnvm\u662f Nodejs \u7248\u672c\u7ba1\u7406\u5668\uff0c\u5b83\u8ba9\u6211\u4eec\u65b9\u4fbf\u7684\u5bf9\u5207\u6362Nodejs \u7248\u672c\u3002 nvm \u4ecb\u7ecd\uff1a \u4f7f\u7528 nvm \u7ba1\u7406\u4e0d\u540c\u7248\u672c\u7684 node \u4e0e npm \u5173\u4e8envm\u7684\u8be6\u7ec6\u5b89\u88c5\u4ee5\u53ca\u4f7f\u7528\u53ef\u4ee5\u8bbf\u95ee\u4ee5\u4e0b\u94fe\u63a5\uff1a Linux : https://github.com/creationix/nvm Windows : https://github.com/coreybutler/nvm-windows \u5728 MAC \u4e0a\u5b89\u88c5\u4f7f\u7528 brew install nvm , \u5176\u4e2d brew \u662f Homebrew\u3002 \u5b89\u88c5 nvm \u540e\u53ef\u80fd\u4f1a\u51fa\u73b0 zsh: command not found: nvm \uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u5b89\u88c5\uff1a curl -o- [ https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh ]( https://raw.githubusercontent.com/creationix/nvm/v0.25.4/install.sh ) | bash [[ -s $HOME /.nvm/nvm.sh ]] && . $HOME /.nvm/nvm.sh \u4f7f\u7528 nvm ls-remote \u67e5\u770b\u6709\u54ea\u4e9bnode\u7248\u672c\u53ef\u4ee5\u5b89\u88c5 nvm \u7528\u4e8e\u7ba1\u7406node \u7248\u672c nvm list \u67e5\u770b\u5f53\u524d\u6240\u6709\u7684node \u7248\u672c nvm install v10.13.0 \u5b89\u88c5\u6307\u5b9a\u7684\u7248\u672c\uff0c\u5b89\u88c5\u591a\u7248\u672c nvm use \u2014delete-prefix 10 .13.0 \u4f7f\u7528nvm use\u5207\u6362\u5230\u6307\u5b9a\u7684\u7248\u672c nvm current \u67e5\u770b\u5f53\u524dnode\u7248\u672c nvm alias default <version> \u547d\u4ee4\u6765\u6307\u5b9a\u4e00\u4e2a\u9ed8\u8ba4\u7684node\u7248\u672c","title":"\u7248\u672c\u7ba1\u7406\u5de5\u5177 nvm"},{"location":"nodejs/02-Node.js%20%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/#n","text":"n # \u73b0\u5728\u672c\u673a\u5b89\u88c5\u4e09\u4e2a\u7248\u672c\uff0c\u901a\u8fc7\u952e\u76d8\u9009\u62e9\u4f7f\u7528\u7684\u7248\u672c node/8.16.0 node/12.18.4 node/15.9.0","title":"\u7248\u672c\u7ba1\u7406\u5de5\u5177 n"},{"location":"nodejs/03-Node.js%20%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8/","text":"03-Node.js \u521b\u5efa\u7b2c\u4e00\u4e2a\u5e94\u7528(OK) \u00b6 \u4f7f\u7528 Node.js \u65f6\uff0c\u6211\u4eec\u4e0d\u4ec5\u4ec5\u5728\u5b9e\u73b0\u4e00\u4e2a\u5e94\u7528\uff0c\u540c\u65f6\u8fd8\u5b9e\u73b0\u4e86\u6574\u4e2a HTTP \u670d\u52a1\u5668\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u7684 Web \u5e94\u7528\u4ee5\u53ca\u5bf9\u5e94\u7684 Web \u670d\u52a1\u5668\u57fa\u672c\u4e0a\u662f\u4e00\u6837\u7684\u3002 \u5728\u6211\u4eec\u521b\u5efa Node.js \u7b2c\u4e00\u4e2a \"Hello, World!\" \u5e94\u7528\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u4e86\u89e3\u4e0b Node.js \u5e94\u7528\u662f\u7531\u54ea\u51e0\u90e8\u5206\u7ec4\u6210\u7684\uff1a \u5f15\u5165 required \u6a21\u5757\uff1a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 require \u6307\u4ee4\u6765\u8f7d\u5165 Node.js \u6a21\u5757\u3002 \u521b\u5efa\u670d\u52a1\u5668\uff1a\u670d\u52a1\u5668\u53ef\u4ee5\u76d1\u542c\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u7c7b\u4f3c\u4e8e Apache \u3001Nginx \u7b49 HTTP \u670d\u52a1\u5668\u3002 \u63a5\u6536\u8bf7\u6c42\u4e0e\u54cd\u5e94\u8bf7\u6c42\uff1a\u670d\u52a1\u5668\u5f88\u5bb9\u6613\u521b\u5efa\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u6216\u7ec8\u7aef\u53d1\u9001 HTTP \u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u63a5\u6536\u8bf7\u6c42\u540e\u8fd4\u56de\u54cd\u5e94\u6570\u636e\u3002 \u521b\u5efa Node.js \u5e94\u7528 \u00b6 \u6b65\u9aa4\u4e00\u3001\u5f15\u5165 required \u6a21\u5757 \u00b6 \u6211\u4eec\u4f7f\u7528 require \u6307\u4ee4\u6765\u8f7d\u5165 http \u6a21\u5757\uff0c\u5e76\u5c06\u5b9e\u4f8b\u5316\u7684 HTTP \u8d4b\u503c\u7ed9\u53d8\u91cf http\uff0c\u5b9e\u4f8b\u5982\u4e0b: var http = require ( \"http\" ); \u6b65\u9aa4\u4e8c\u3001\u521b\u5efa\u670d\u52a1\u5668 \u00b6 \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 http.createServer() \u65b9\u6cd5\u521b\u5efa\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528 listen \u65b9\u6cd5\u7ed1\u5b9a 8888 \u7aef\u53e3\u3002 \u51fd\u6570\u901a\u8fc7 request, response \u53c2\u6570\u6765\u63a5\u6536\u548c\u54cd\u5e94\u6570\u636e\u3002 \u5b9e\u4f8b\u5982\u4e0b\uff0c\u5728\u4f60\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u53eb server.js \u7684\u6587\u4ef6\uff0c\u5e76\u5199\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a var http = require ( 'http' ); http . createServer ( function ( request , response ) { // \u53d1\u9001 HTTP \u5934\u90e8 // HTTP \u72b6\u6001\u503c: 200 : OK // \u5185\u5bb9\u7c7b\u578b: text/plain response . writeHead ( 200 , { 'Content-Type' : 'text/plain' }); // \u53d1\u9001\u54cd\u5e94\u6570\u636e \"Hello World\" response . end ( 'Hello World\\n' ); }). listen ( 8888 ); // \u7ec8\u7aef\u6253\u5370\u5982\u4e0b\u4fe1\u606f console . log ( 'Server running at http://127.0.0.1:8888/' ); \u4ee5\u4e0a\u4ee3\u7801\u6211\u4eec\u5b8c\u6210\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5de5\u4f5c\u7684 HTTP \u670d\u52a1\u5668\u3002 \u4f7f\u7528 node \u547d\u4ee4\u6267\u884c\u4ee5\u4e0a\u7684\u4ee3\u7801\uff1a node server.js Server running at http://127.0.0.1:8888/ \u63a5\u4e0b\u6765\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8888/ \uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u5199\u7740 \"Hello World\"\u7684\u7f51\u9875\u3002 \u5206\u6790Node.js \u7684 HTTP \u670d\u52a1\u5668\uff1a \u7b2c\u4e00\u884c\u8bf7\u6c42\uff08require\uff09Node.js \u81ea\u5e26\u7684 http \u6a21\u5757\uff0c\u5e76\u4e14\u628a\u5b83\u8d4b\u503c\u7ed9 http \u53d8\u91cf\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u8c03\u7528 http \u6a21\u5757\u63d0\u4f9b\u7684\u51fd\u6570\uff1a createServer \u3002\u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de \u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u6709\u4e00\u4e2a\u53eb\u505a listen \u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e00\u4e2a\u6570\u503c\u53c2\u6570\uff0c \u6307\u5b9a\u8fd9\u4e2a HTTP \u670d\u52a1\u5668\u76d1\u542c\u7684\u7aef\u53e3\u53f7\u3002","title":"03-Node.js \u521b\u5efa\u7b2c\u4e00\u4e2a\u5e94\u7528"},{"location":"nodejs/03-Node.js%20%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8/#03-nodejs-ok","text":"\u4f7f\u7528 Node.js \u65f6\uff0c\u6211\u4eec\u4e0d\u4ec5\u4ec5\u5728\u5b9e\u73b0\u4e00\u4e2a\u5e94\u7528\uff0c\u540c\u65f6\u8fd8\u5b9e\u73b0\u4e86\u6574\u4e2a HTTP \u670d\u52a1\u5668\u3002\u4e8b\u5b9e\u4e0a\uff0c\u6211\u4eec\u7684 Web \u5e94\u7528\u4ee5\u53ca\u5bf9\u5e94\u7684 Web \u670d\u52a1\u5668\u57fa\u672c\u4e0a\u662f\u4e00\u6837\u7684\u3002 \u5728\u6211\u4eec\u521b\u5efa Node.js \u7b2c\u4e00\u4e2a \"Hello, World!\" \u5e94\u7528\u524d\uff0c\u8ba9\u6211\u4eec\u5148\u4e86\u89e3\u4e0b Node.js \u5e94\u7528\u662f\u7531\u54ea\u51e0\u90e8\u5206\u7ec4\u6210\u7684\uff1a \u5f15\u5165 required \u6a21\u5757\uff1a\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 require \u6307\u4ee4\u6765\u8f7d\u5165 Node.js \u6a21\u5757\u3002 \u521b\u5efa\u670d\u52a1\u5668\uff1a\u670d\u52a1\u5668\u53ef\u4ee5\u76d1\u542c\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u7c7b\u4f3c\u4e8e Apache \u3001Nginx \u7b49 HTTP \u670d\u52a1\u5668\u3002 \u63a5\u6536\u8bf7\u6c42\u4e0e\u54cd\u5e94\u8bf7\u6c42\uff1a\u670d\u52a1\u5668\u5f88\u5bb9\u6613\u521b\u5efa\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u6d4f\u89c8\u5668\u6216\u7ec8\u7aef\u53d1\u9001 HTTP \u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u63a5\u6536\u8bf7\u6c42\u540e\u8fd4\u56de\u54cd\u5e94\u6570\u636e\u3002","title":"03-Node.js \u521b\u5efa\u7b2c\u4e00\u4e2a\u5e94\u7528(OK)"},{"location":"nodejs/03-Node.js%20%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8/#nodejs","text":"","title":"\u521b\u5efa Node.js \u5e94\u7528"},{"location":"nodejs/03-Node.js%20%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8/#required","text":"\u6211\u4eec\u4f7f\u7528 require \u6307\u4ee4\u6765\u8f7d\u5165 http \u6a21\u5757\uff0c\u5e76\u5c06\u5b9e\u4f8b\u5316\u7684 HTTP \u8d4b\u503c\u7ed9\u53d8\u91cf http\uff0c\u5b9e\u4f8b\u5982\u4e0b: var http = require ( \"http\" );","title":"\u6b65\u9aa4\u4e00\u3001\u5f15\u5165 required \u6a21\u5757"},{"location":"nodejs/03-Node.js%20%E5%88%9B%E5%BB%BA%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8/#_1","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 http.createServer() \u65b9\u6cd5\u521b\u5efa\u670d\u52a1\u5668\uff0c\u5e76\u4f7f\u7528 listen \u65b9\u6cd5\u7ed1\u5b9a 8888 \u7aef\u53e3\u3002 \u51fd\u6570\u901a\u8fc7 request, response \u53c2\u6570\u6765\u63a5\u6536\u548c\u54cd\u5e94\u6570\u636e\u3002 \u5b9e\u4f8b\u5982\u4e0b\uff0c\u5728\u4f60\u9879\u76ee\u7684\u6839\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u53eb server.js \u7684\u6587\u4ef6\uff0c\u5e76\u5199\u5165\u4ee5\u4e0b\u4ee3\u7801\uff1a var http = require ( 'http' ); http . createServer ( function ( request , response ) { // \u53d1\u9001 HTTP \u5934\u90e8 // HTTP \u72b6\u6001\u503c: 200 : OK // \u5185\u5bb9\u7c7b\u578b: text/plain response . writeHead ( 200 , { 'Content-Type' : 'text/plain' }); // \u53d1\u9001\u54cd\u5e94\u6570\u636e \"Hello World\" response . end ( 'Hello World\\n' ); }). listen ( 8888 ); // \u7ec8\u7aef\u6253\u5370\u5982\u4e0b\u4fe1\u606f console . log ( 'Server running at http://127.0.0.1:8888/' ); \u4ee5\u4e0a\u4ee3\u7801\u6211\u4eec\u5b8c\u6210\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5de5\u4f5c\u7684 HTTP \u670d\u52a1\u5668\u3002 \u4f7f\u7528 node \u547d\u4ee4\u6267\u884c\u4ee5\u4e0a\u7684\u4ee3\u7801\uff1a node server.js Server running at http://127.0.0.1:8888/ \u63a5\u4e0b\u6765\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8888/ \uff0c\u4f60\u4f1a\u770b\u5230\u4e00\u4e2a\u5199\u7740 \"Hello World\"\u7684\u7f51\u9875\u3002 \u5206\u6790Node.js \u7684 HTTP \u670d\u52a1\u5668\uff1a \u7b2c\u4e00\u884c\u8bf7\u6c42\uff08require\uff09Node.js \u81ea\u5e26\u7684 http \u6a21\u5757\uff0c\u5e76\u4e14\u628a\u5b83\u8d4b\u503c\u7ed9 http \u53d8\u91cf\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u8c03\u7528 http \u6a21\u5757\u63d0\u4f9b\u7684\u51fd\u6570\uff1a createServer \u3002\u8fd9\u4e2a\u51fd\u6570\u4f1a\u8fd4\u56de \u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u6709\u4e00\u4e2a\u53eb\u505a listen \u7684\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e00\u4e2a\u6570\u503c\u53c2\u6570\uff0c \u6307\u5b9a\u8fd9\u4e2a HTTP \u670d\u52a1\u5668\u76d1\u542c\u7684\u7aef\u53e3\u53f7\u3002","title":"\u6b65\u9aa4\u4e8c\u3001\u521b\u5efa\u670d\u52a1\u5668"},{"location":"nodejs/04-NPM%20%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/","text":"NPM \u4f7f\u7528\u4ecb\u7ecd NPM\u662f\u968f\u540cNodeJS\u4e00\u8d77\u5b89\u88c5\u7684\u5305\u7ba1\u7406\u5de5\u5177\uff0c\u80fd\u89e3\u51b3NodeJS\u4ee3\u7801\u90e8\u7f72\u4e0a\u7684\u5f88\u591a\u95ee\u9898\uff0c\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a \u5141\u8bb8\u7528\u6237\u4eceNPM\u670d\u52a1\u5668\u4e0b\u8f7d\u522b\u4eba\u7f16\u5199\u7684\u7b2c\u4e09\u65b9\u5305\u5230\u672c\u5730\u4f7f\u7528\u3002 \u5141\u8bb8\u7528\u6237\u4eceNPM\u670d\u52a1\u5668\u4e0b\u8f7d\u5e76\u5b89\u88c5\u522b\u4eba\u7f16\u5199\u7684\u547d\u4ee4\u884c\u7a0b\u5e8f\u5230\u672c\u5730\u4f7f\u7528\u3002 \u5141\u8bb8\u7528\u6237\u5c06\u81ea\u5df1\u7f16\u5199\u7684\u5305\u6216\u547d\u4ee4\u884c\u7a0b\u5e8f\u4e0a\u4f20\u5230NPM\u670d\u52a1\u5668\u4f9b\u522b\u4eba\u4f7f\u7528\u3002 \u7531\u4e8e\u65b0\u7248\u7684nodejs\u5df2\u7ecf\u96c6\u6210\u4e86npm\uff0c\u6240\u4ee5\u4e4b\u524dnpm\u4e5f\u4e00\u5e76\u5b89\u88c5\u597d\u4e86\u3002\u540c\u6837\u53ef\u4ee5\u901a\u8fc7\u8f93\u5165 \"npm -v\" \u6765\u6d4b\u8bd5\u662f\u5426\u6210\u529f\u5b89\u88c5\u3002\u547d\u4ee4\u5982\u4e0b\uff0c\u51fa\u73b0\u7248\u672c\u63d0\u793a\u8868\u793a\u5b89\u88c5\u6210\u529f: $ npm -v 2.3.0 \u5982\u679c\u4f60\u5b89\u88c5\u7684\u662f\u65e7\u7248\u672c\u7684 npm\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5f97\u901a\u8fc7 npm \u547d\u4ee4\u6765\u5347\u7ea7\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a $ sudo npm install npm -g /usr/local/bin/npm -> /usr/local/lib/node_modules/npm/bin/npm-cli.js npm@2.14.2 /usr/local/lib/node_modules/npm \u5982\u679c\u662f Window \u7cfb\u7edf\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5373\u53ef\uff1a npm install npm -g \u4f7f\u7528\u6dd8\u5b9d\u955c\u50cf\u7684\u547d\u4ee4\uff1a npm install -g cnpm --registry= https://registry.npm.taobao.org \u4f7f\u7528 npm \u547d\u4ee4\u5b89\u88c5\u6a21\u5757 npm \u5b89\u88c5 Node.js \u6a21\u5757\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a $ npm install \u4ee5\u4e0b\u5b9e\u4f8b\uff0c\u6211\u4eec\u4f7f\u7528 npm \u547d\u4ee4\u5b89\u88c5\u5e38\u7528\u7684 Node.js web\u6846\u67b6\u6a21\u5757 express: $ npm install express \u5b89\u88c5\u597d\u4e4b\u540e\uff0cexpress \u5305\u5c31\u653e\u5728\u4e86\u5de5\u7a0b\u76ee\u5f55\u4e0b\u7684 node_modules \u76ee\u5f55\u4e2d\uff0c\u56e0\u6b64\u5728\u4ee3\u7801\u4e2d\u53ea\u9700\u8981\u901a\u8fc7 require('express') \u7684\u65b9\u5f0f\u5c31\u597d\uff0c\u65e0\u9700\u6307\u5b9a\u7b2c\u4e09\u65b9\u5305\u8def\u5f84\u3002 var express = require('express'); \u5168\u5c40\u5b89\u88c5\u4e0e\u672c\u5730\u5b89\u88c5 npm \u7684\u5305\u5b89\u88c5\u5206\u4e3a\u672c\u5730\u5b89\u88c5\uff08local\uff09\u3001\u5168\u5c40\u5b89\u88c5\uff08global\uff09\u4e24\u79cd\uff0c\u4ece\u6572\u7684\u547d\u4ee4\u884c\u6765\u770b\uff0c\u5dee\u522b\u53ea\u662f\u6709\u6ca1\u6709-g\u800c\u5df2\uff0c\u6bd4\u5982 npm install express # \u672c\u5730\u5b89\u88c5 npm install express -g # \u5168\u5c40\u5b89\u88c5 \u5982\u679c\u51fa\u73b0\u4ee5\u4e0b\u9519\u8bef\uff1a npm err! Error: connect ECONNREFUSED 127.0.0.1:8087 \u89e3\u51b3\u529e\u6cd5\u4e3a\uff1a $ npm config set proxy null \u672c\u5730\u5b89\u88c5 1. \u5c06\u5b89\u88c5\u5305\u653e\u5728 ./node_modules \u4e0b\uff08\u8fd0\u884c npm \u547d\u4ee4\u65f6\u6240\u5728\u7684\u76ee\u5f55\uff09\uff0c\u5982\u679c\u6ca1\u6709 node_modules \u76ee\u5f55\uff0c\u4f1a\u5728\u5f53\u524d\u6267\u884c npm \u547d\u4ee4\u7684\u76ee\u5f55\u4e0b\u751f\u6210 node_modules \u76ee\u5f55\u3002 2. \u53ef\u4ee5\u901a\u8fc7 require() \u6765\u5f15\u5165\u672c\u5730\u5b89\u88c5\u7684\u5305\u3002 \u5168\u5c40\u5b89\u88c5 1. \u5c06\u5b89\u88c5\u5305\u653e\u5728 /usr/local \u4e0b\u6216\u8005\u4f60 node \u7684\u5b89\u88c5\u76ee\u5f55\u3002 2. \u53ef\u4ee5\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u91cc\u4f7f\u7528\u3002 \u5982\u679c\u4f60\u5e0c\u671b\u5177\u5907\u4e24\u8005\u529f\u80fd\uff0c\u5219\u9700\u8981\u5728\u4e24\u4e2a\u5730\u65b9\u5b89\u88c5\u5b83\u6216\u4f7f\u7528 npm link\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528\u5168\u5c40\u65b9\u5f0f\u5b89\u88c5 express $ npm install express -g \u5b89\u88c5\u8fc7\u7a0b\u8f93\u51fa\u5982\u4e0b\u5185\u5bb9\uff0c\u7b2c\u4e00\u884c\u8f93\u51fa\u4e86\u6a21\u5757\u7684\u7248\u672c\u53f7\u53ca\u5b89\u88c5\u4f4d\u7f6e\u3002 express@4.13.3 node_modules/express \u251c\u2500\u2500 escape-html@1.0.2 \u251c\u2500\u2500 range-parser@1.0.2 \u251c\u2500\u2500 merge-descriptors@1.0.0 \u251c\u2500\u2500 array-flatten@1.1.1 \u251c\u2500\u2500 cookie@0.1.3 \u251c\u2500\u2500 utils-merge@1.0.0 \u251c\u2500\u2500 parseurl@1.3.0 \u251c\u2500\u2500 cookie-signature@1.0.6 \u251c\u2500\u2500 methods@1.1.1 \u251c\u2500\u2500 fresh@0.3.0 \u251c\u2500\u2500 vary@1.0.1 \u251c\u2500\u2500 path-to-regexp@0.1.7 \u251c\u2500\u2500 content-type@1.0.1 \u251c\u2500\u2500 etag@1.7.0 \u251c\u2500\u2500 serve-static@1.10.0 \u251c\u2500\u2500 content-disposition@0.5.0 \u251c\u2500\u2500 depd@1.0.1 \u251c\u2500\u2500 qs@4.0.0 \u251c\u2500\u2500 finalhandler@0.4.0 ( unpipe@1.0.0 ) \u251c\u2500\u2500 on-finished@2.3.0 ( ee-first@1.1.1 ) \u251c\u2500\u2500 proxy-addr@1.0.8 ( forwarded@0.1.0, ipaddr.js@1.0.1 ) \u251c\u2500\u2500 debug@2.2.0 ( ms@0.7.1 ) \u251c\u2500\u2500 type-is@1.6.8 ( media-typer@0.3.0, mime-types@2.1.6 ) \u251c\u2500\u2500 accepts@1.2.12 ( negotiator@0.5.3, mime-types@2.1.6 ) \u2514\u2500\u2500 send@0.13.0 ( destroy@1.0.3, statuses@1.2.1, ms@0.7.1, mime@1.3.4, http-errors@1.3.1 ) \u67e5\u770b\u5b89\u88c5\u4fe1\u606f \u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u67e5\u770b\u6240\u6709\u5168\u5c40\u5b89\u88c5\u7684\u6a21\u5757\uff1a $ npm list -g \u251c\u2500\u252c cnpm@4.3.2 \u2502 \u251c\u2500\u2500 auto-correct@1.0.0 \u2502 \u251c\u2500\u2500 bagpipe@0.3.5 \u2502 \u251c\u2500\u2500 colors@1.1.2 \u2502 \u251c\u2500\u252c commander@2.9.0 \u2502 \u2502 \u2514\u2500\u2500 graceful-readlink@1.0.1 \u2502 \u251c\u2500\u252c cross-spawn@0.2.9 \u2502 \u2502 \u2514\u2500\u2500 lru-cache@2.7.3 \u5982\u679c\u8981\u67e5\u770b\u67d0\u4e2a\u6a21\u5757\u7684\u7248\u672c\u53f7\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u4ee4\u5982\u4e0b\uff1a $ npm list grunt projectName@projectVersion /path/to/project/folder \u2514\u2500\u2500 grunt@0.4.1 \u4f7f\u7528 package.json package.json \u4f4d\u4e8e\u6a21\u5757\u7684\u76ee\u5f55\u4e0b\uff0c\u7528\u4e8e\u5b9a\u4e49\u5305\u7684\u5c5e\u6027\u3002\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6765\u770b\u4e0b express \u5305\u7684 package.json \u6587\u4ef6\uff0c\u4f4d\u4e8e node_modules/express/package.json \u5185\u5bb9\uff1a { \"name\" : \"express\" , \"description\" : \"Fast, unopinionated, minimalist web framework\" , \"version\" : \"4.13.3\" , \"author\" : { \"name\" : \"TJ Holowaychuk\" , \"email\" : \"tj@vision-media.ca\" }, \"contributors\" : [ { \"name\" : \"Aaron Heckmann\" , \"email\" : \"aaron.heckmann+github@gmail.com\" }, { \"name\" : \"Ciaran Jessup\" , \"email\" : \"ciaranj@gmail.com\" }, { \"name\" : \"Douglas Christopher Wilson\" , \"email\" : \"doug@somethingdoug.com\" }, { \"name\" : \"Guillermo Rauch\" , \"email\" : \"rauchg@gmail.com\" }, { \"name\" : \"Jonathan Ong\" , \"email\" : \"me@jongleberry.com\" }, { \"name\" : \"Roman Shtylman\" , \"email\" : \"shtylman+expressjs@gmail.com\" }, { \"name\" : \"Young Jae Sim\" , \"email\" : \"hanul@hanul.me\" } ], \"license\" : \"MIT\" , \"repository\" : { \"type\" : \"git\" , \"url\" : \"git+https://github.com/strongloop/express.git\" }, \"homepage\" : \"http://expressjs.com/\" , \"keywords\" : [ \"express\" , \"framework\" , \"sinatra\" , \"web\" , \"rest\" , \"restful\" , \"router\" , \"app\" , \"api\" ], \"dependencies\" : { \"accepts\" : \"~1.2.12\" , \"array-flatten\" : \"1.1.1\" , \"content-disposition\" : \"0.5.0\" , \"content-type\" : \"~1.0.1\" , \"cookie\" : \"0.1.3\" , \"cookie-signature\" : \"1.0.6\" , \"debug\" : \"~2.2.0\" , \"depd\" : \"~1.0.1\" , \"escape-html\" : \"1.0.2\" , \"etag\" : \"~1.7.0\" , \"finalhandler\" : \"0.4.0\" , \"fresh\" : \"0.3.0\" , \"merge-descriptors\" : \"1.0.0\" , \"methods\" : \"~1.1.1\" , \"on-finished\" : \"~2.3.0\" , \"parseurl\" : \"~1.3.0\" , \"path-to-regexp\" : \"0.1.7\" , \"proxy-addr\" : \"~1.0.8\" , \"qs\" : \"4.0.0\" , \"range-parser\" : \"~1.0.2\" , \"send\" : \"0.13.0\" , \"serve-static\" : \"~1.10.0\" , \"type-is\" : \"~1.6.6\" , \"utils-merge\" : \"1.0.0\" , \"vary\" : \"~1.0.1\" }, \"devDependencies\" : { \"after\" : \"0.8.1\" , \"ejs\" : \"2.3.3\" , \"istanbul\" : \"0.3.17\" , \"marked\" : \"0.3.5\" , \"mocha\" : \"2.2.5\" , \"should\" : \"7.0.2\" , \"supertest\" : \"1.0.1\" , \"body-parser\" : \"~1.13.3\" , \"connect-redis\" : \"~2.4.1\" , \"cookie-parser\" : \"~1.3.5\" , \"cookie-session\" : \"~1.2.0\" , \"express-session\" : \"~1.11.3\" , \"jade\" : \"~1.11.0\" , \"method-override\" : \"~2.3.5\" , \"morgan\" : \"~1.6.1\" , \"multiparty\" : \"~4.1.2\" , \"vhost\" : \"~3.0.1\" }, \"engines\" : { \"node\" : \">= 0.10.0\" }, \"files\" : [ \"LICENSE\" , \"History.md\" , \"Readme.md\" , \"index.js\" , \"lib/\" ], \"scripts\" : { \"test\" : \"mocha --require test/support/env --reporter spec --bail --check-leaks test/ test/acceptance/\" , \"test-ci\" : \"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/ test/acceptance/\" , \"test-cov\" : \"istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/ test/acceptance/\" , \"test-tap\" : \"mocha --require test/support/env --reporter tap --check-leaks test/ test/acceptance/\" }, \"gitHead\" : \"ef7ad681b245fba023843ce94f6bcb8e275bbb8e\" , \"bugs\" : { \"url\" : \"https://github.com/strongloop/express/issues\" }, \"_id\" : \"express@4.13.3\" , \"_shasum\" : \"ddb2f1fb4502bf33598d2b032b037960ca6c80a3\" , \"_from\" : \"express@*\" , \"_npmVersion\" : \"1.4.28\" , \"_npmUser\" : { \"name\" : \"dougwilson\" , \"email\" : \"doug@somethingdoug.com\" }, \"maintainers\" : [ { \"name\" : \"tjholowaychuk\" , \"email\" : \"tj@vision-media.ca\" }, { \"name\" : \"jongleberry\" , \"email\" : \"jonathanrichardong@gmail.com\" }, { \"name\" : \"dougwilson\" , \"email\" : \"doug@somethingdoug.com\" }, { \"name\" : \"rfeng\" , \"email\" : \"enjoyjava@gmail.com\" }, { \"name\" : \"aredridel\" , \"email\" : \"aredridel@dinhe.net\" }, { \"name\" : \"strongloop\" , \"email\" : \"callback@strongloop.com\" }, { \"name\" : \"defunctzombie\" , \"email\" : \"shtylman@gmail.com\" } ], \"dist\" : { \"shasum\" : \"ddb2f1fb4502bf33598d2b032b037960ca6c80a3\" , \"tarball\" : \"http://registry.npmjs.org/express/-/express-4.13.3.tgz\" }, \"directories\" : {}, \"_resolved\" : \"https://registry.npmjs.org/express/-/express-4.13.3.tgz\" , \"readme\" : \"ERROR: No README data found!\" } Package.json \u5c5e\u6027\u8bf4\u660e name - \u5305\u540d\u3002 version - \u5305\u7684\u7248\u672c\u53f7\u3002 description - \u5305\u7684\u63cf\u8ff0\u3002 homepage - \u5305\u7684\u5b98\u7f51 url \u3002 author - \u5305\u7684\u4f5c\u8005\u59d3\u540d\u3002 contributors - \u5305\u7684\u5176\u4ed6\u8d21\u732e\u8005\u59d3\u540d\u3002 dependencies - \u4f9d\u8d56\u5305\u5217\u8868\u3002\u5982\u679c\u4f9d\u8d56\u5305\u6ca1\u6709\u5b89\u88c5\uff0cnpm \u4f1a\u81ea\u52a8\u5c06\u4f9d\u8d56\u5305\u5b89\u88c5\u5728 node_module \u76ee\u5f55\u4e0b\u3002 repository - \u5305\u4ee3\u7801\u5b58\u653e\u7684\u5730\u65b9\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u662f git \u6216 svn\uff0cgit \u53ef\u5728 Github \u4e0a\u3002 main - main \u5b57\u6bb5\u6307\u5b9a\u4e86\u7a0b\u5e8f\u7684\u4e3b\u5165\u53e3\u6587\u4ef6\uff0crequire('moduleName') \u5c31\u4f1a\u52a0\u8f7d\u8fd9\u4e2a\u6587\u4ef6\u3002\u8fd9\u4e2a\u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c\u662f\u6a21\u5757\u6839\u76ee\u5f55\u4e0b\u9762\u7684 index.js\u3002 keywords - \u5173\u952e\u5b57 \u5378\u8f7d\u6a21\u5757 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u5378\u8f7d Node.js \u6a21\u5757\u3002 $ npm uninstall express \u5378\u8f7d\u540e\uff0c\u4f60\u53ef\u4ee5\u5230 /node_modules/ \u76ee\u5f55\u4e0b\u67e5\u770b\u5305\u662f\u5426\u8fd8\u5b58\u5728\uff0c\u6216\u8005\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u67e5\u770b\uff1a $ npm ls \u66f4\u65b0\u6a21\u5757 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u66f4\u65b0\u6a21\u5757\uff1a $ npm update express \u641c\u7d22\u6a21\u5757 \u4f7f\u7528\u4ee5\u4e0b\u6765\u641c\u7d22\u6a21\u5757\uff1a $ npm search express \u521b\u5efa\u6a21\u5757 \u521b\u5efa\u6a21\u5757\uff0cpackage.json \u6587\u4ef6\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 NPM \u751f\u6210 package.json \u6587\u4ef6\uff0c\u751f\u6210\u7684\u6587\u4ef6\u5305\u542b\u4e86\u57fa\u672c\u7684\u7ed3\u679c\u3002 $ npm init This utility will walk you through creating a package.json file. It only covers the most common items, and tries to guess sensible defaults. See ` npm help json ` for definitive documentation on these fields and exactly what they do . Use ` npm install <pkg> --save ` afterwards to install a package and save it as a dependency in the package.json file. Press ^C at any time to quit. name: ( node_modules ) runoob # \u6a21\u5757\u540d version: ( 1 .0.0 ) description: Node.js \u6d4b\u8bd5\u6a21\u5757 ( www.runoob.com ) # \u63cf\u8ff0 entry point: ( index.js ) test command: make test git repository: https://github.com/runoob/runoob.git # Github \u5730\u5740 keywords: author: license: ( ISC ) About to write to \u2026\u2026/node_modules/package.json: # \u751f\u6210\u5730\u5740 { \"name\" : \"runoob\" , \"version\" : \"1.0.0\" , \"description\" : \"Node.js \u6d4b\u8bd5\u6a21\u5757(www.runoob.com)\" , \u2026\u2026 } Is this ok? ( yes ) yes \u4ee5\u4e0a\u7684\u4fe1\u606f\uff0c\u4f60\u9700\u8981\u6839\u636e\u4f60\u81ea\u5df1\u7684\u60c5\u51b5\u8f93\u5165\u3002\u5728\u6700\u540e\u8f93\u5165 \"yes\" \u540e\u4f1a\u751f\u6210 package.json \u6587\u4ef6\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5728 npm \u8d44\u6e90\u5e93\u4e2d\u6ce8\u518c\u7528\u6237\uff08\u4f7f\u7528\u90ae\u7bb1\u6ce8\u518c\uff09\uff1a $ npm adduser Username: mcmohd Password: Email: (this IS public) mcmohd@gmail.com \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u53d1\u5e03\u6a21\u5757\uff1a $ npm publish \u5982\u679c\u4f60\u4ee5\u4e0a\u7684\u6b65\u9aa4\u90fd\u64cd\u4f5c\u6b63\u786e\uff0c\u4f60\u5c31\u53ef\u4ee5\u8ddf\u5176\u4ed6\u6a21\u5757\u4e00\u6837\u4f7f\u7528 npm \u6765\u5b89\u88c5\u3002 \u7248\u672c\u53f7 \u4f7f\u7528NPM\u4e0b\u8f7d\u548c\u53d1\u5e03\u4ee3\u7801\u65f6\u90fd\u4f1a\u63a5\u89e6\u5230\u7248\u672c\u53f7\u3002NPM\u4f7f\u7528\u8bed\u4e49\u7248\u672c\u53f7\u6765\u7ba1\u7406\u4ee3\u7801\uff0c\u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u3002 \u8bed\u4e49\u7248\u672c\u53f7\u5206\u4e3aX.Y.Z\u4e09\u4f4d\uff0c\u5206\u522b\u4ee3\u8868\u4e3b\u7248\u672c\u53f7\u3001\u6b21\u7248\u672c\u53f7\u548c\u8865\u4e01\u7248\u672c\u53f7\u3002\u5f53\u4ee3\u7801\u53d8\u66f4\u65f6\uff0c\u7248\u672c\u53f7\u6309\u4ee5\u4e0b\u539f\u5219\u66f4\u65b0\u3002 \u5982\u679c\u53ea\u662f\u4fee\u590dbug\uff0c\u9700\u8981\u66f4\u65b0Z\u4f4d\u3002 \u5982\u679c\u662f\u65b0\u589e\u4e86\u529f\u80fd\uff0c\u4f46\u662f\u5411\u4e0b\u517c\u5bb9\uff0c\u9700\u8981\u66f4\u65b0Y\u4f4d\u3002 \u5982\u679c\u6709\u5927\u53d8\u52a8\uff0c\u5411\u4e0b\u4e0d\u517c\u5bb9\uff0c\u9700\u8981\u66f4\u65b0X\u4f4d\u3002 \u7248\u672c\u53f7\u6709\u4e86\u8fd9\u4e2a\u4fdd\u8bc1\u540e\uff0c\u5728\u7533\u660e\u7b2c\u4e09\u65b9\u5305\u4f9d\u8d56\u65f6\uff0c\u9664\u4e86\u53ef\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7248\u672c\u53f7\u5916\uff0c\u8fd8\u53ef\u4f9d\u8d56\u4e8e\u67d0\u4e2a\u8303\u56f4\u7684\u7248\u672c\u53f7\u3002\u4f8b\u5982\"argv\": \"0.0.x\"\u8868\u793a\u4f9d\u8d56\u4e8e0.0.x\u7cfb\u5217\u7684\u6700\u65b0\u7248argv\u3002 NPM\u652f\u6301\u7684\u6240\u6709\u7248\u672c\u53f7\u8303\u56f4\u6307\u5b9a\u65b9\u5f0f\u53ef\u4ee5\u67e5\u770b\u5b98\u65b9\u6587\u6863\u3002 NPM \u5e38\u7528\u547d\u4ee4 \u9664\u4e86\u672c\u7ae0\u4ecb\u7ecd\u7684\u90e8\u5206\u5916\uff0cNPM\u8fd8\u63d0\u4f9b\u4e86\u5f88\u591a\u529f\u80fd\uff0cpackage.json\u91cc\u4e5f\u6709\u5f88\u591a\u5176\u5b83\u6709\u7528\u7684\u5b57\u6bb5\u3002 \u9664\u4e86\u53ef\u4ee5\u5728npmjs.org/doc/\u67e5\u770b\u5b98\u65b9\u6587\u6863\u5916\uff0c\u8fd9\u91cc\u518d\u4ecb\u7ecd\u4e00\u4e9bNPM\u5e38\u7528\u547d\u4ee4\u3002 NPM\u63d0\u4f9b\u4e86\u5f88\u591a\u547d\u4ee4\uff0c\u4f8b\u5982install\u548cpublish\uff0c\u4f7f\u7528npm help\u53ef\u67e5\u770b\u6240\u6709\u547d\u4ee4\u3002 NPM\u63d0\u4f9b\u4e86\u5f88\u591a\u547d\u4ee4\uff0c\u4f8b\u5982install\u548cpublish\uff0c\u4f7f\u7528npm help\u53ef\u67e5\u770b\u6240\u6709\u547d\u4ee4\u3002 \u4f7f\u7528npm help \u53ef\u67e5\u770b\u67d0\u6761\u547d\u4ee4\u7684\u8be6\u7ec6\u5e2e\u52a9\uff0c\u4f8b\u5982npm help install\u3002 \u5728package.json\u6240\u5728\u76ee\u5f55\u4e0b\u4f7f\u7528npm install . -g\u53ef\u5148\u5728\u672c\u5730\u5b89\u88c5\u5f53\u524d\u547d\u4ee4\u884c\u7a0b\u5e8f\uff0c\u53ef\u7528\u4e8e\u53d1\u5e03\u524d\u7684\u672c\u5730\u6d4b\u8bd5\u3002 \u4f7f\u7528npm update \u53ef\u4ee5\u628a\u5f53\u524d\u76ee\u5f55\u4e0bnode_modules\u5b50\u76ee\u5f55\u91cc\u8fb9\u7684\u5bf9\u5e94\u6a21\u5757\u66f4\u65b0\u81f3\u6700\u65b0\u7248\u672c\u3002 \u4f7f\u7528npm update -g\u53ef\u4ee5\u628a\u5168\u5c40\u5b89\u88c5\u7684\u5bf9\u5e94\u547d\u4ee4\u884c\u7a0b\u5e8f\u66f4\u65b0\u81f3\u6700\u65b0\u7248\u3002 \u4f7f\u7528npm cache clear\u53ef\u4ee5\u6e05\u7a7aNPM\u672c\u5730\u7f13\u5b58\uff0c\u7528\u4e8e\u5bf9\u4ed8\u4f7f\u7528\u76f8\u540c\u7248\u672c\u53f7\u53d1\u5e03\u65b0\u7248\u672c\u4ee3\u7801\u7684\u4eba\u3002 \u4f7f\u7528npm unpublish @ \u53ef\u4ee5\u64a4\u9500\u53d1\u5e03\u81ea\u5df1\u53d1\u5e03\u8fc7\u7684\u67d0\u4e2a\u7248\u672c\u4ee3\u7801\u3002 \u4f7f\u7528\u6dd8\u5b9d NPM \u955c\u50cf \u5927\u5bb6\u90fd\u77e5\u9053\u56fd\u5185\u76f4\u63a5\u4f7f\u7528 npm \u7684\u5b98\u65b9\u955c\u50cf\u662f\u975e\u5e38\u6162\u7684\uff0c\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528\u6dd8\u5b9d NPM \u955c\u50cf\u3002 \u6dd8\u5b9d NPM \u955c\u50cf\u662f\u4e00\u4e2a\u5b8c\u6574 npmjs.org \u955c\u50cf\uff0c\u4f60\u53ef\u4ee5\u7528\u6b64\u4ee3\u66ff\u5b98\u65b9\u7248\u672c(\u53ea\u8bfb)\uff0c\u540c\u6b65\u9891\u7387\u76ee\u524d\u4e3a 10\u5206\u949f \u4e00\u6b21\u4ee5\u4fdd\u8bc1\u5c3d\u91cf\u4e0e\u5b98\u65b9\u670d\u52a1\u540c\u6b65\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528\u6dd8\u5b9d\u5b9a\u5236\u7684 cnpm (gzip \u538b\u7f29\u652f\u6301) \u547d\u4ee4\u884c\u5de5\u5177\u4ee3\u66ff\u9ed8\u8ba4\u7684 npm: $ npm install -g cnpm --registry= https://registry.npm.taobao.org \u8fd9\u6837\u5c31\u53ef\u4ee5\u4f7f\u7528 cnpm \u547d\u4ee4\u6765\u5b89\u88c5\u6a21\u5757\u4e86\uff1a $ cnpm install [name] \u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u67e5\u9605\uff1a http://npm.taobao.org/ \u3002 \u5982\u679c\u4f60\u9047\u5230\u4e86\u4f7f\u7528 npm \u5b89 \u88c5node_modules \u603b\u662f\u63d0\u793a\u62a5\u9519\uff1a\u62a5\u9519: npm resource busy or locked.....\u3002 \u53ef\u4ee5\u5148\u5220\u9664\u4ee5\u524d\u5b89\u88c5\u7684 node_modules : npm cache clean npm install","title":"04-NPM \u4f7f\u7528"},{"location":"nodejs/05-Node.js%20REPL%28%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%A7%A3%E9%87%8A%E5%99%A8%29/","text":"Node.js REPL(\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668) \u00b6 Node.js REPL(Read Eval Print Loop:\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668) \u8868\u793a\u4e00\u4e2a\u7535\u8111\u7684\u73af\u5883\uff0c\u7c7b\u4f3c Window \u7cfb\u7edf\u7684\u7ec8\u7aef\u6216 Unix/Linux shell\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u547d\u4ee4\uff0c\u5e76\u63a5\u6536\u7cfb\u7edf\u7684\u54cd\u5e94\u3002 Node \u81ea\u5e26\u4e86\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u4efb\u52a1\uff1a \u8bfb\u53d6 - \u8bfb\u53d6\u7528\u6237\u8f93\u5165\uff0c\u89e3\u6790\u8f93\u5165\u4e86Javascript \u6570\u636e\u7ed3\u6784\u5e76\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u3002 \u6267\u884c - \u6267\u884c\u8f93\u5165\u7684\u6570\u636e\u7ed3\u6784 \u6253\u5370 - \u8f93\u51fa\u7ed3\u679c \u5faa\u73af - \u5faa\u73af\u64cd\u4f5c\u4ee5\u4e0a\u6b65\u9aa4\u76f4\u5230\u7528\u6237\u4e24\u6b21\u6309\u4e0b ctrl-c \u6309\u94ae\u9000\u51fa\u3002 Node \u7684\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u53ef\u4ee5\u5f88\u597d\u7684\u8c03\u8bd5 Javascript \u4ee3\u7801\u3002 \u7b80\u5355\u7684\u8868\u8fbe\u5f0f\u8fd0\u7b97 \u00b6 \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u5728 Node.js REPL \u7684\u547d\u4ee4\u884c\u7a97\u53e3\u4e2d\u6267\u884c\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff1a $ node > 1 +4 5 > 5 / 2 2.5 > 3 * 6 18 > 4 - 1 3 > 1 + ( 2 * 3 ) - 4 3 > \u4f7f\u7528\u53d8\u91cf \u00b6 \u4f60\u53ef\u4ee5\u5c06\u6570\u636e\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\uff0c\u5e76\u5728\u4f60\u9700\u8981\u7684\u65f6\u5019\u4f7f\u7528\u5b83\u3002 \u53d8\u91cf\u58f0\u660e\u9700\u8981\u4f7f\u7528 var \u5173\u952e\u5b57\uff0c\u5982\u679c\u6ca1\u6709\u4f7f\u7528 var \u5173\u952e\u5b57\u53d8\u91cf\u4f1a\u76f4\u63a5\u6253\u5370\u51fa\u6765\u3002 \u4f7f\u7528 var \u5173\u952e\u5b57\u7684\u53d8\u91cf\u53ef\u4ee5\u4f7f\u7528 console.log() \u6765\u8f93\u51fa\u53d8\u91cf\u3002 $ node > x = 10 10 > var y = 10 undefined > x + y 20 > console.log(\"Hello World\") Hello World undefined \u591a\u884c\u8868\u8fbe\u5f0f \u00b6 Node REPL \u652f\u6301\u8f93\u5165\u591a\u884c\u8868\u8fbe\u5f0f\uff0c\u8fd9\u5c31\u6709\u70b9\u7c7b\u4f3c JavaScript\u3002\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6765\u6267\u884c\u4e00\u4e2a do-while \u5faa\u73af\uff1a $ node > var x = 0 undefined > do { ... x++; ... console.log(\"x: \" + x); ... } while ( x < 5 ); x: 1 x: 2 x: 3 x: 4 x: 5 undefined > ... \u4e09\u4e2a\u70b9\u7684\u7b26\u53f7\u662f\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\u7684\uff0c\u4f60\u56de\u8f66\u6362\u884c\u540e\u5373\u53ef\u3002Node \u4f1a\u81ea\u52a8\u68c0\u6d4b\u662f\u5426\u4e3a\u8fde\u7eed\u7684\u8868\u8fbe\u5f0f\u3002 \u4e0b\u5212\u7ebf(_)\u53d8\u91cf \u00b6 \u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5212\u7ebf(_)\u83b7\u53d6\u4e0a\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u8fd0\u7b97\u7ed3\u679c\uff1a $ node > var x = 10 undefined > var y = 20 undefined > x + y 30 > var sum = _ undefined > console.log(sum) 30 undefined > REPL \u547d\u4ee4 \u00b6 ctrl + c - \u9000\u51fa\u5f53\u524d\u7ec8\u7aef\u3002 ctrl + c \u6309\u4e0b\u4e24\u6b21 - \u9000\u51fa Node REPL\u3002 ctrl + d - \u9000\u51fa Node REPL. \u5411\u4e0a/\u5411\u4e0b \u952e - \u67e5\u770b\u8f93\u5165\u7684\u5386\u53f2\u547d\u4ee4 tab \u952e - \u5217\u51fa\u5f53\u524d\u547d\u4ee4 .help - \u5217\u51fa\u4f7f\u7528\u547d\u4ee4 .break - \u9000\u51fa\u591a\u884c\u8868\u8fbe\u5f0f .clear - \u9000\u51fa\u591a\u884c\u8868\u8fbe\u5f0f .save *filename* - \u4fdd\u5b58\u5f53\u524d\u7684 Node REPL \u4f1a\u8bdd\u5230\u6307\u5b9a\u6587\u4ef6 .load *filename* - \u8f7d\u5165\u5f53\u524d Node REPL \u4f1a\u8bdd\u7684\u6587\u4ef6\u5185\u5bb9\u3002","title":"05-Node.js REPL(\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668)"},{"location":"nodejs/05-Node.js%20REPL%28%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%A7%A3%E9%87%8A%E5%99%A8%29/#nodejs-repl","text":"Node.js REPL(Read Eval Print Loop:\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668) \u8868\u793a\u4e00\u4e2a\u7535\u8111\u7684\u73af\u5883\uff0c\u7c7b\u4f3c Window \u7cfb\u7edf\u7684\u7ec8\u7aef\u6216 Unix/Linux shell\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u7ec8\u7aef\u4e2d\u8f93\u5165\u547d\u4ee4\uff0c\u5e76\u63a5\u6536\u7cfb\u7edf\u7684\u54cd\u5e94\u3002 Node \u81ea\u5e26\u4e86\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\uff0c\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u4efb\u52a1\uff1a \u8bfb\u53d6 - \u8bfb\u53d6\u7528\u6237\u8f93\u5165\uff0c\u89e3\u6790\u8f93\u5165\u4e86Javascript \u6570\u636e\u7ed3\u6784\u5e76\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u3002 \u6267\u884c - \u6267\u884c\u8f93\u5165\u7684\u6570\u636e\u7ed3\u6784 \u6253\u5370 - \u8f93\u51fa\u7ed3\u679c \u5faa\u73af - \u5faa\u73af\u64cd\u4f5c\u4ee5\u4e0a\u6b65\u9aa4\u76f4\u5230\u7528\u6237\u4e24\u6b21\u6309\u4e0b ctrl-c \u6309\u94ae\u9000\u51fa\u3002 Node \u7684\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668\u53ef\u4ee5\u5f88\u597d\u7684\u8c03\u8bd5 Javascript \u4ee3\u7801\u3002","title":"Node.js REPL(\u4ea4\u4e92\u5f0f\u89e3\u91ca\u5668)"},{"location":"nodejs/05-Node.js%20REPL%28%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%A7%A3%E9%87%8A%E5%99%A8%29/#_1","text":"\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u5728 Node.js REPL \u7684\u547d\u4ee4\u884c\u7a97\u53e3\u4e2d\u6267\u884c\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff1a $ node > 1 +4 5 > 5 / 2 2.5 > 3 * 6 18 > 4 - 1 3 > 1 + ( 2 * 3 ) - 4 3 >","title":"\u7b80\u5355\u7684\u8868\u8fbe\u5f0f\u8fd0\u7b97"},{"location":"nodejs/05-Node.js%20REPL%28%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%A7%A3%E9%87%8A%E5%99%A8%29/#_2","text":"\u4f60\u53ef\u4ee5\u5c06\u6570\u636e\u5b58\u50a8\u5728\u53d8\u91cf\u4e2d\uff0c\u5e76\u5728\u4f60\u9700\u8981\u7684\u65f6\u5019\u4f7f\u7528\u5b83\u3002 \u53d8\u91cf\u58f0\u660e\u9700\u8981\u4f7f\u7528 var \u5173\u952e\u5b57\uff0c\u5982\u679c\u6ca1\u6709\u4f7f\u7528 var \u5173\u952e\u5b57\u53d8\u91cf\u4f1a\u76f4\u63a5\u6253\u5370\u51fa\u6765\u3002 \u4f7f\u7528 var \u5173\u952e\u5b57\u7684\u53d8\u91cf\u53ef\u4ee5\u4f7f\u7528 console.log() \u6765\u8f93\u51fa\u53d8\u91cf\u3002 $ node > x = 10 10 > var y = 10 undefined > x + y 20 > console.log(\"Hello World\") Hello World undefined","title":"\u4f7f\u7528\u53d8\u91cf"},{"location":"nodejs/05-Node.js%20REPL%28%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%A7%A3%E9%87%8A%E5%99%A8%29/#_3","text":"Node REPL \u652f\u6301\u8f93\u5165\u591a\u884c\u8868\u8fbe\u5f0f\uff0c\u8fd9\u5c31\u6709\u70b9\u7c7b\u4f3c JavaScript\u3002\u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6765\u6267\u884c\u4e00\u4e2a do-while \u5faa\u73af\uff1a $ node > var x = 0 undefined > do { ... x++; ... console.log(\"x: \" + x); ... } while ( x < 5 ); x: 1 x: 2 x: 3 x: 4 x: 5 undefined > ... \u4e09\u4e2a\u70b9\u7684\u7b26\u53f7\u662f\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\u7684\uff0c\u4f60\u56de\u8f66\u6362\u884c\u540e\u5373\u53ef\u3002Node \u4f1a\u81ea\u52a8\u68c0\u6d4b\u662f\u5426\u4e3a\u8fde\u7eed\u7684\u8868\u8fbe\u5f0f\u3002","title":"\u591a\u884c\u8868\u8fbe\u5f0f"},{"location":"nodejs/05-Node.js%20REPL%28%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%A7%A3%E9%87%8A%E5%99%A8%29/#_","text":"\u4f60\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5212\u7ebf(_)\u83b7\u53d6\u4e0a\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u8fd0\u7b97\u7ed3\u679c\uff1a $ node > var x = 10 undefined > var y = 20 undefined > x + y 30 > var sum = _ undefined > console.log(sum) 30 undefined >","title":"\u4e0b\u5212\u7ebf(_)\u53d8\u91cf"},{"location":"nodejs/05-Node.js%20REPL%28%E4%BA%A4%E4%BA%92%E5%BC%8F%E8%A7%A3%E9%87%8A%E5%99%A8%29/#repl","text":"ctrl + c - \u9000\u51fa\u5f53\u524d\u7ec8\u7aef\u3002 ctrl + c \u6309\u4e0b\u4e24\u6b21 - \u9000\u51fa Node REPL\u3002 ctrl + d - \u9000\u51fa Node REPL. \u5411\u4e0a/\u5411\u4e0b \u952e - \u67e5\u770b\u8f93\u5165\u7684\u5386\u53f2\u547d\u4ee4 tab \u952e - \u5217\u51fa\u5f53\u524d\u547d\u4ee4 .help - \u5217\u51fa\u4f7f\u7528\u547d\u4ee4 .break - \u9000\u51fa\u591a\u884c\u8868\u8fbe\u5f0f .clear - \u9000\u51fa\u591a\u884c\u8868\u8fbe\u5f0f .save *filename* - \u4fdd\u5b58\u5f53\u524d\u7684 Node REPL \u4f1a\u8bdd\u5230\u6307\u5b9a\u6587\u4ef6 .load *filename* - \u8f7d\u5165\u5f53\u524d Node REPL \u4f1a\u8bdd\u7684\u6587\u4ef6\u5185\u5bb9\u3002","title":"REPL \u547d\u4ee4"},{"location":"nodejs/06-Node.js%20%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/","text":"Node.js \u56de\u8c03\u51fd\u6570 \u00b6 Node.js \u5f02\u6b65\u7f16\u7a0b\u7684\u76f4\u63a5\u4f53\u73b0\u5c31\u662f\u56de\u8c03\u3002 \u5f02\u6b65\u7f16\u7a0b\u4f9d\u6258\u4e8e\u56de\u8c03\u6765\u5b9e\u73b0\uff0c\u4f46\u4e0d\u80fd\u8bf4\u4f7f\u7528\u4e86\u56de\u8c03\u540e\u7a0b\u5e8f\u5c31\u5f02\u6b65\u5316\u4e86\u3002 \u56de\u8c03\u51fd\u6570\u5728\u5b8c\u6210\u4efb\u52a1\u540e\u5c31\u4f1a\u88ab\u8c03\u7528\uff0cNode \u4f7f\u7528\u4e86\u5927\u91cf\u7684\u56de\u8c03\u51fd\u6570\uff0cNode \u6240\u6709 API \u90fd\u652f\u6301\u56de\u8c03\u51fd\u6570\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u8fb9\u8bfb\u53d6\u6587\u4ef6\uff0c\u4e00\u8fb9\u6267\u884c\u5176\u4ed6\u547d\u4ee4\uff0c\u5728\u6587\u4ef6\u8bfb\u53d6\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c06\u6587\u4ef6\u5185\u5bb9\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\u8fd4\u56de\u3002\u8fd9\u6837\u5728\u6267\u884c\u4ee3\u7801\u65f6\u5c31\u6ca1\u6709\u963b\u585e\u6216\u7b49\u5f85\u6587\u4ef6 I/O \u64cd\u4f5c\u3002\u8fd9\u5c31\u5927\u5927\u63d0\u9ad8\u4e86 Node.js \u7684\u6027\u80fd\uff0c\u53ef\u4ee5\u5904\u7406\u5927\u91cf\u7684\u5e76\u53d1\u8bf7\u6c42\u3002 \u56de\u8c03\u51fd\u6570\u4e00\u822c\u4f5c\u4e3a\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u51fa\u73b0\uff1a function foo1(name, age, callback) { } function foo2(value, callback1, callback2) { } \u963b\u585e\u4ee3\u7801\u5b9e\u4f8b \u00b6 \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 input.txt \uff0c\u5185\u5bb9\u5982\u4e0b\uff1a Michael loves nodeJS \u521b\u5efa main.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); var data = fs.readFileSync('input.txt'); console.log(data.toString()); console.log(\"\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f!\"); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node main.js Michael loves nodeJS \u7a0b\u5e8f\u6267\u884c\u7ed3\u675f! \u975e\u963b\u585e\u4ee3\u7801\u5b9e\u4f8b \u00b6 \u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 input.txt \uff0c\u5185\u5bb9\u5982\u4e0b\uff1a Michael loves nodeJS \u521b\u5efa main.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); fs.readFile('input.txt', function (err, data) { if (err) return console.error(err); console.log(data.toString()); }); console.log(\"\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f!\"); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node main.js \u7a0b\u5e8f\u6267\u884c\u7ed3\u675f! Michael loves nodeJS \u4ee5\u4e0a\u4e24\u4e2a\u5b9e\u4f8b\u6211\u4eec\u4e86\u89e3\u4e86\u963b\u585e\u4e0e\u975e\u963b\u585e\u8c03\u7528\u7684\u4e0d\u540c\u3002\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u5728\u6587\u4ef6\u8bfb\u53d6\u5b8c\u540e\u624d\u6267\u884c\u7a0b\u5e8f\u3002 \u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u6211\u4eec\u4e0d\u9700\u8981\u7b49\u5f85\u6587\u4ef6\u8bfb\u53d6\u5b8c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u8bfb\u53d6\u6587\u4ef6\u65f6\u540c\u65f6\u6267\u884c\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u6027\u80fd\u3002 \u56e0\u6b64\uff0c\u963b\u585e\u662f\u6309\u987a\u5e8f\u6267\u884c\u7684\uff0c\u800c\u975e\u963b\u585e\u662f\u4e0d\u9700\u8981\u6309\u987a\u5e8f\u7684\uff0c\u6240\u4ee5\u5982\u679c\u9700\u8981\u5904\u7406\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5199\u5728\u56de\u8c03\u51fd\u6570\u5185\u3002","title":"06-Node.js \u56de\u8c03\u51fd\u6570"},{"location":"nodejs/06-Node.js%20%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/#nodejs","text":"Node.js \u5f02\u6b65\u7f16\u7a0b\u7684\u76f4\u63a5\u4f53\u73b0\u5c31\u662f\u56de\u8c03\u3002 \u5f02\u6b65\u7f16\u7a0b\u4f9d\u6258\u4e8e\u56de\u8c03\u6765\u5b9e\u73b0\uff0c\u4f46\u4e0d\u80fd\u8bf4\u4f7f\u7528\u4e86\u56de\u8c03\u540e\u7a0b\u5e8f\u5c31\u5f02\u6b65\u5316\u4e86\u3002 \u56de\u8c03\u51fd\u6570\u5728\u5b8c\u6210\u4efb\u52a1\u540e\u5c31\u4f1a\u88ab\u8c03\u7528\uff0cNode \u4f7f\u7528\u4e86\u5927\u91cf\u7684\u56de\u8c03\u51fd\u6570\uff0cNode \u6240\u6709 API \u90fd\u652f\u6301\u56de\u8c03\u51fd\u6570\u3002 \u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u8fb9\u8bfb\u53d6\u6587\u4ef6\uff0c\u4e00\u8fb9\u6267\u884c\u5176\u4ed6\u547d\u4ee4\uff0c\u5728\u6587\u4ef6\u8bfb\u53d6\u5b8c\u6210\u540e\uff0c\u6211\u4eec\u5c06\u6587\u4ef6\u5185\u5bb9\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\u8fd4\u56de\u3002\u8fd9\u6837\u5728\u6267\u884c\u4ee3\u7801\u65f6\u5c31\u6ca1\u6709\u963b\u585e\u6216\u7b49\u5f85\u6587\u4ef6 I/O \u64cd\u4f5c\u3002\u8fd9\u5c31\u5927\u5927\u63d0\u9ad8\u4e86 Node.js \u7684\u6027\u80fd\uff0c\u53ef\u4ee5\u5904\u7406\u5927\u91cf\u7684\u5e76\u53d1\u8bf7\u6c42\u3002 \u56de\u8c03\u51fd\u6570\u4e00\u822c\u4f5c\u4e3a\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u51fa\u73b0\uff1a function foo1(name, age, callback) { } function foo2(value, callback1, callback2) { }","title":"Node.js \u56de\u8c03\u51fd\u6570"},{"location":"nodejs/06-Node.js%20%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/#_1","text":"\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 input.txt \uff0c\u5185\u5bb9\u5982\u4e0b\uff1a Michael loves nodeJS \u521b\u5efa main.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); var data = fs.readFileSync('input.txt'); console.log(data.toString()); console.log(\"\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f!\"); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node main.js Michael loves nodeJS \u7a0b\u5e8f\u6267\u884c\u7ed3\u675f!","title":"\u963b\u585e\u4ee3\u7801\u5b9e\u4f8b"},{"location":"nodejs/06-Node.js%20%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0/#_2","text":"\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 input.txt \uff0c\u5185\u5bb9\u5982\u4e0b\uff1a Michael loves nodeJS \u521b\u5efa main.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); fs.readFile('input.txt', function (err, data) { if (err) return console.error(err); console.log(data.toString()); }); console.log(\"\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f!\"); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node main.js \u7a0b\u5e8f\u6267\u884c\u7ed3\u675f! Michael loves nodeJS \u4ee5\u4e0a\u4e24\u4e2a\u5b9e\u4f8b\u6211\u4eec\u4e86\u89e3\u4e86\u963b\u585e\u4e0e\u975e\u963b\u585e\u8c03\u7528\u7684\u4e0d\u540c\u3002\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u5728\u6587\u4ef6\u8bfb\u53d6\u5b8c\u540e\u624d\u6267\u884c\u7a0b\u5e8f\u3002 \u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u6211\u4eec\u4e0d\u9700\u8981\u7b49\u5f85\u6587\u4ef6\u8bfb\u53d6\u5b8c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u8bfb\u53d6\u6587\u4ef6\u65f6\u540c\u65f6\u6267\u884c\u63a5\u4e0b\u6765\u7684\u4ee3\u7801\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u7a0b\u5e8f\u7684\u6027\u80fd\u3002 \u56e0\u6b64\uff0c\u963b\u585e\u662f\u6309\u987a\u5e8f\u6267\u884c\u7684\uff0c\u800c\u975e\u963b\u585e\u662f\u4e0d\u9700\u8981\u6309\u987a\u5e8f\u7684\uff0c\u6240\u4ee5\u5982\u679c\u9700\u8981\u5904\u7406\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\uff0c\u6211\u4eec\u5c31\u9700\u8981\u5199\u5728\u56de\u8c03\u51fd\u6570\u5185\u3002","title":"\u975e\u963b\u585e\u4ee3\u7801\u5b9e\u4f8b"},{"location":"nodejs/07-Node.js%20%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/","text":"Node.js \u4e8b\u4ef6\u5faa\u73af \u00b6 Node.js \u662f\u5355\u8fdb\u7a0b\u5355\u7ebf\u7a0b\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u662f\u56e0\u4e3a V8 \u5f15\u64ce\u63d0\u4f9b\u7684\u5f02\u6b65\u6267\u884c\u56de\u8c03\u63a5\u53e3\uff0c\u901a\u8fc7\u8fd9\u4e9b\u63a5\u53e3\u53ef\u4ee5\u5904\u7406\u5927\u91cf\u7684\u5e76\u53d1\uff0c\u6240\u4ee5\u6027\u80fd\u975e\u5e38\u9ad8\u3002 Node.js \u51e0\u4e4e\u6bcf\u4e00\u4e2a API \u90fd\u662f\u652f\u6301\u56de\u8c03\u51fd\u6570\u7684\u3002 Node.js \u57fa\u672c\u4e0a\u6240\u6709\u7684\u4e8b\u4ef6\u673a\u5236\u90fd\u662f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u89c2\u5bdf\u8005\u6a21\u5f0f\u5b9e\u73b0\u3002 Node.js \u5355\u7ebf\u7a0b\u7c7b\u4f3c\u8fdb\u5165\u4e00\u4e2awhile(true)\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u76f4\u5230\u6ca1\u6709\u4e8b\u4ef6\u89c2\u5bdf\u8005\u9000\u51fa\uff0c\u6bcf\u4e2a\u5f02\u6b65\u4e8b\u4ef6\u90fd\u751f\u6210\u4e00\u4e2a\u4e8b\u4ef6\u89c2\u5bdf\u8005\uff0c\u5982\u679c\u6709\u4e8b\u4ef6\u53d1\u751f\u5c31\u8c03\u7528\u8be5\u56de\u8c03\u51fd\u6570. \u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f \u00b6 Node.js \u4f7f\u7528\u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b\uff0c\u5f53web server\u63a5\u6536\u5230\u8bf7\u6c42\uff0c\u5c31\u628a\u5b83\u5173\u95ed\u7136\u540e\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u53bb\u670d\u52a1\u4e0b\u4e00\u4e2aweb\u8bf7\u6c42\u3002 \u5f53\u8fd9\u4e2a\u8bf7\u6c42\u5b8c\u6210\uff0c\u5b83\u88ab\u653e\u56de\u5904\u7406\u961f\u5217\uff0c\u5f53\u5230\u8fbe\u961f\u5217\u5f00\u5934\uff0c\u8fd9\u4e2a\u7ed3\u679c\u88ab\u8fd4\u56de\u7ed9\u7528\u6237\u3002 \u8fd9\u4e2a\u6a21\u578b\u975e\u5e38\u9ad8\u6548\u53ef\u6269\u5c55\u6027\u975e\u5e38\u5f3a\uff0c\u56e0\u4e3a webserver \u4e00\u76f4\u63a5\u53d7\u8bf7\u6c42\u800c\u4e0d\u7b49\u5f85\u4efb\u4f55\u8bfb\u5199\u64cd\u4f5c\u3002\uff08\u8fd9\u4e5f\u79f0\u4e4b\u4e3a\u975e\u963b\u585e\u5f0fIO\u6216\u8005\u4e8b\u4ef6\u9a71\u52a8IO\uff09 \u5728\u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b\u4e2d\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u4e3b\u5faa\u73af\u6765\u76d1\u542c\u4e8b\u4ef6\uff0c\u5f53\u68c0\u6d4b\u5230\u4e8b\u4ef6\u65f6\u89e6\u53d1\u56de\u8c03\u51fd\u6570\u3002 \u6574\u4e2a\u4e8b\u4ef6\u9a71\u52a8\u7684\u6d41\u7a0b\u5c31\u662f\u8fd9\u4e48\u5b9e\u73b0\u7684\uff0c\u975e\u5e38\u7b80\u6d01\u3002\u6709\u70b9\u7c7b\u4f3c\u4e8e\u89c2\u5bdf\u8005\u6a21\u5f0f\uff0c\u4e8b\u4ef6\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4e3b\u9898(Subject)\uff0c\u800c\u6240\u6709\u6ce8\u518c\u5230\u8fd9\u4e2a\u4e8b\u4ef6\u4e0a\u7684\u5904\u7406\u51fd\u6570\u76f8\u5f53\u4e8e\u89c2\u5bdf\u8005(Observer)\u3002 Node.js \u6709\u591a\u4e2a\u5185\u7f6e\u7684\u4e8b\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165 events \u6a21\u5757\uff0c\u5e76\u901a\u8fc7\u5b9e\u4f8b\u5316 EventEmitter \u7c7b\u6765\u7ed1\u5b9a\u548c\u76d1\u542c\u4e8b\u4ef6\uff0c\u5982\u4e0b\u5b9e\u4f8b\uff1a // \u5f15\u5165 events \u6a21\u5757 var events = require('events'); // \u521b\u5efa eventEmitter \u5bf9\u8c61 var eventEmitter = new events.EventEmitter(); \u4ee5\u4e0b\u7a0b\u5e8f\u7ed1\u5b9a\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\uff1a // \u7ed1\u5b9a\u4e8b\u4ef6\u53ca\u4e8b\u4ef6\u7684\u5904\u7406\u7a0b\u5e8f eventEmitter.on('eventName', eventHandler); \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7a0b\u5e8f\u89e6\u53d1\u4e8b\u4ef6\uff1a // \u89e6\u53d1\u4e8b\u4ef6 eventEmitter.emit('eventName'); \u5b9e\u4f8b \u00b6 \u521b\u5efa main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a \u5b9e\u4f8b \u00b6 // \u5f15\u5165 events \u6a21\u5757 var events = require ( 'events' ); // \u521b\u5efa eventEmitter \u5bf9\u8c61 var eventEmitter = new events . EventEmitter (); // \u521b\u5efa\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f var connectHandler = function connected () { console . log ( '\u8fde\u63a5\u6210\u529f\u3002' ); // \u89e6\u53d1 data_received \u4e8b\u4ef6 eventEmitter . emit ( 'data_received' ); } // \u7ed1\u5b9a connection \u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f eventEmitter . on ( 'connection' , connectHandler ); // \u4f7f\u7528\u533f\u540d\u51fd\u6570\u7ed1\u5b9a data_received \u4e8b\u4ef6 eventEmitter . on ( 'data_received' , function (){ console . log ( '\u6570\u636e\u63a5\u6536\u6210\u529f\u3002' ); }); // \u89e6\u53d1 connection \u4e8b\u4ef6 eventEmitter . emit ( 'connection' ); console . log ( \"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002\" ); \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node main.js \u8fde\u63a5\u6210\u529f\u3002 \u6570\u636e\u63a5\u6536\u6210\u529f\u3002 \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002 Node \u5e94\u7528\u7a0b\u5e8f\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f \u00b6 \u5728 Node \u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6267\u884c\u5f02\u6b65\u64cd\u4f5c\u7684\u51fd\u6570\u5c06\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c \u56de\u8c03\u51fd\u6570\u63a5\u6536\u9519\u8bef\u5bf9\u8c61\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002 \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6765\u91cd\u65b0\u770b\u4e0b\u524d\u9762\u7684\u5b9e\u4f8b\uff0c\u521b\u5efa\u4e00\u4e2a input.txt ,\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u521b\u5efa main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); fs.readFile('input.txt', function (err, data) { if (err){ console.log(err.stack); return; } console.log(data.toString()); }); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\"); \u4ee5\u4e0a\u7a0b\u5e8f\u4e2d fs.readFile() \u662f\u5f02\u6b65\u51fd\u6570\u7528\u4e8e\u8bfb\u53d6\u6587\u4ef6\u3002 \u5982\u679c\u5728\u8bfb\u53d6\u6587\u4ef6\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\uff0c\u9519\u8bef err \u5bf9\u8c61\u5c31\u4f1a\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002 \u5982\u679c\u6ca1\u53d1\u751f\u9519\u8bef\uff0creadFile \u8df3\u8fc7 err \u5bf9\u8c61\u7684\u8f93\u51fa\uff0c\u6587\u4ef6\u5185\u5bb9\u5c31\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u8f93\u51fa\u3002 \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5 \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u63a5\u4e0b\u6765\u6211\u4eec\u5220\u9664 input.txt \u6587\u4ef6\uff0c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5 Error: ENOENT, open 'input.txt' \u56e0\u4e3a\u6587\u4ef6 input.txt \u4e0d\u5b58\u5728\uff0c\u6240\u4ee5\u8f93\u51fa\u4e86\u9519\u8bef\u4fe1\u606f\u3002","title":"07-Node.js \u4e8b\u4ef6\u5faa\u73af"},{"location":"nodejs/07-Node.js%20%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/#nodejs","text":"Node.js \u662f\u5355\u8fdb\u7a0b\u5355\u7ebf\u7a0b\u5e94\u7528\u7a0b\u5e8f\uff0c\u4f46\u662f\u56e0\u4e3a V8 \u5f15\u64ce\u63d0\u4f9b\u7684\u5f02\u6b65\u6267\u884c\u56de\u8c03\u63a5\u53e3\uff0c\u901a\u8fc7\u8fd9\u4e9b\u63a5\u53e3\u53ef\u4ee5\u5904\u7406\u5927\u91cf\u7684\u5e76\u53d1\uff0c\u6240\u4ee5\u6027\u80fd\u975e\u5e38\u9ad8\u3002 Node.js \u51e0\u4e4e\u6bcf\u4e00\u4e2a API \u90fd\u662f\u652f\u6301\u56de\u8c03\u51fd\u6570\u7684\u3002 Node.js \u57fa\u672c\u4e0a\u6240\u6709\u7684\u4e8b\u4ef6\u673a\u5236\u90fd\u662f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\u89c2\u5bdf\u8005\u6a21\u5f0f\u5b9e\u73b0\u3002 Node.js \u5355\u7ebf\u7a0b\u7c7b\u4f3c\u8fdb\u5165\u4e00\u4e2awhile(true)\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u76f4\u5230\u6ca1\u6709\u4e8b\u4ef6\u89c2\u5bdf\u8005\u9000\u51fa\uff0c\u6bcf\u4e2a\u5f02\u6b65\u4e8b\u4ef6\u90fd\u751f\u6210\u4e00\u4e2a\u4e8b\u4ef6\u89c2\u5bdf\u8005\uff0c\u5982\u679c\u6709\u4e8b\u4ef6\u53d1\u751f\u5c31\u8c03\u7528\u8be5\u56de\u8c03\u51fd\u6570.","title":"Node.js \u4e8b\u4ef6\u5faa\u73af"},{"location":"nodejs/07-Node.js%20%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/#_1","text":"Node.js \u4f7f\u7528\u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b\uff0c\u5f53web server\u63a5\u6536\u5230\u8bf7\u6c42\uff0c\u5c31\u628a\u5b83\u5173\u95ed\u7136\u540e\u8fdb\u884c\u5904\u7406\uff0c\u7136\u540e\u53bb\u670d\u52a1\u4e0b\u4e00\u4e2aweb\u8bf7\u6c42\u3002 \u5f53\u8fd9\u4e2a\u8bf7\u6c42\u5b8c\u6210\uff0c\u5b83\u88ab\u653e\u56de\u5904\u7406\u961f\u5217\uff0c\u5f53\u5230\u8fbe\u961f\u5217\u5f00\u5934\uff0c\u8fd9\u4e2a\u7ed3\u679c\u88ab\u8fd4\u56de\u7ed9\u7528\u6237\u3002 \u8fd9\u4e2a\u6a21\u578b\u975e\u5e38\u9ad8\u6548\u53ef\u6269\u5c55\u6027\u975e\u5e38\u5f3a\uff0c\u56e0\u4e3a webserver \u4e00\u76f4\u63a5\u53d7\u8bf7\u6c42\u800c\u4e0d\u7b49\u5f85\u4efb\u4f55\u8bfb\u5199\u64cd\u4f5c\u3002\uff08\u8fd9\u4e5f\u79f0\u4e4b\u4e3a\u975e\u963b\u585e\u5f0fIO\u6216\u8005\u4e8b\u4ef6\u9a71\u52a8IO\uff09 \u5728\u4e8b\u4ef6\u9a71\u52a8\u6a21\u578b\u4e2d\uff0c\u4f1a\u751f\u6210\u4e00\u4e2a\u4e3b\u5faa\u73af\u6765\u76d1\u542c\u4e8b\u4ef6\uff0c\u5f53\u68c0\u6d4b\u5230\u4e8b\u4ef6\u65f6\u89e6\u53d1\u56de\u8c03\u51fd\u6570\u3002 \u6574\u4e2a\u4e8b\u4ef6\u9a71\u52a8\u7684\u6d41\u7a0b\u5c31\u662f\u8fd9\u4e48\u5b9e\u73b0\u7684\uff0c\u975e\u5e38\u7b80\u6d01\u3002\u6709\u70b9\u7c7b\u4f3c\u4e8e\u89c2\u5bdf\u8005\u6a21\u5f0f\uff0c\u4e8b\u4ef6\u76f8\u5f53\u4e8e\u4e00\u4e2a\u4e3b\u9898(Subject)\uff0c\u800c\u6240\u6709\u6ce8\u518c\u5230\u8fd9\u4e2a\u4e8b\u4ef6\u4e0a\u7684\u5904\u7406\u51fd\u6570\u76f8\u5f53\u4e8e\u89c2\u5bdf\u8005(Observer)\u3002 Node.js \u6709\u591a\u4e2a\u5185\u7f6e\u7684\u4e8b\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165 events \u6a21\u5757\uff0c\u5e76\u901a\u8fc7\u5b9e\u4f8b\u5316 EventEmitter \u7c7b\u6765\u7ed1\u5b9a\u548c\u76d1\u542c\u4e8b\u4ef6\uff0c\u5982\u4e0b\u5b9e\u4f8b\uff1a // \u5f15\u5165 events \u6a21\u5757 var events = require('events'); // \u521b\u5efa eventEmitter \u5bf9\u8c61 var eventEmitter = new events.EventEmitter(); \u4ee5\u4e0b\u7a0b\u5e8f\u7ed1\u5b9a\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\uff1a // \u7ed1\u5b9a\u4e8b\u4ef6\u53ca\u4e8b\u4ef6\u7684\u5904\u7406\u7a0b\u5e8f eventEmitter.on('eventName', eventHandler); \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u7a0b\u5e8f\u89e6\u53d1\u4e8b\u4ef6\uff1a // \u89e6\u53d1\u4e8b\u4ef6 eventEmitter.emit('eventName');","title":"\u4e8b\u4ef6\u9a71\u52a8\u7a0b\u5e8f"},{"location":"nodejs/07-Node.js%20%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/#_2","text":"\u521b\u5efa main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a","title":"\u5b9e\u4f8b"},{"location":"nodejs/07-Node.js%20%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/#_3","text":"// \u5f15\u5165 events \u6a21\u5757 var events = require ( 'events' ); // \u521b\u5efa eventEmitter \u5bf9\u8c61 var eventEmitter = new events . EventEmitter (); // \u521b\u5efa\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f var connectHandler = function connected () { console . log ( '\u8fde\u63a5\u6210\u529f\u3002' ); // \u89e6\u53d1 data_received \u4e8b\u4ef6 eventEmitter . emit ( 'data_received' ); } // \u7ed1\u5b9a connection \u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f eventEmitter . on ( 'connection' , connectHandler ); // \u4f7f\u7528\u533f\u540d\u51fd\u6570\u7ed1\u5b9a data_received \u4e8b\u4ef6 eventEmitter . on ( 'data_received' , function (){ console . log ( '\u6570\u636e\u63a5\u6536\u6210\u529f\u3002' ); }); // \u89e6\u53d1 connection \u4e8b\u4ef6 eventEmitter . emit ( 'connection' ); console . log ( \"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002\" ); \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node main.js \u8fde\u63a5\u6210\u529f\u3002 \u6570\u636e\u63a5\u6536\u6210\u529f\u3002 \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002","title":"\u5b9e\u4f8b"},{"location":"nodejs/07-Node.js%20%E4%BA%8B%E4%BB%B6%E5%BE%AA%E7%8E%AF/#node","text":"\u5728 Node \u5e94\u7528\u7a0b\u5e8f\u4e2d\uff0c\u6267\u884c\u5f02\u6b65\u64cd\u4f5c\u7684\u51fd\u6570\u5c06\u56de\u8c03\u51fd\u6570\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c \u56de\u8c03\u51fd\u6570\u63a5\u6536\u9519\u8bef\u5bf9\u8c61\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u3002 \u63a5\u4e0b\u6765\u8ba9\u6211\u4eec\u6765\u91cd\u65b0\u770b\u4e0b\u524d\u9762\u7684\u5b9e\u4f8b\uff0c\u521b\u5efa\u4e00\u4e2a input.txt ,\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u521b\u5efa main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); fs.readFile('input.txt', function (err, data) { if (err){ console.log(err.stack); return; } console.log(data.toString()); }); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\"); \u4ee5\u4e0a\u7a0b\u5e8f\u4e2d fs.readFile() \u662f\u5f02\u6b65\u51fd\u6570\u7528\u4e8e\u8bfb\u53d6\u6587\u4ef6\u3002 \u5982\u679c\u5728\u8bfb\u53d6\u6587\u4ef6\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\uff0c\u9519\u8bef err \u5bf9\u8c61\u5c31\u4f1a\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002 \u5982\u679c\u6ca1\u53d1\u751f\u9519\u8bef\uff0creadFile \u8df3\u8fc7 err \u5bf9\u8c61\u7684\u8f93\u51fa\uff0c\u6587\u4ef6\u5185\u5bb9\u5c31\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u8f93\u51fa\u3002 \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5 \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u63a5\u4e0b\u6765\u6211\u4eec\u5220\u9664 input.txt \u6587\u4ef6\uff0c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5 Error: ENOENT, open 'input.txt' \u56e0\u4e3a\u6587\u4ef6 input.txt \u4e0d\u5b58\u5728\uff0c\u6240\u4ee5\u8f93\u51fa\u4e86\u9519\u8bef\u4fe1\u606f\u3002","title":"Node \u5e94\u7528\u7a0b\u5e8f\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f"},{"location":"nodejs/08-Node.js%20EventEmitter/","text":"Node.js EventEmitter \u00b6 Node.js \u6240\u6709\u7684\u5f02\u6b65 I/O \u64cd\u4f5c\u5728\u5b8c\u6210\u65f6\u90fd\u4f1a\u53d1\u9001\u4e00\u4e2a\u4e8b\u4ef6\u5230\u4e8b\u4ef6\u961f\u5217\u3002 Node.js \u91cc\u9762\u7684\u8bb8\u591a\u5bf9\u8c61\u90fd\u4f1a\u5206\u53d1\u4e8b\u4ef6\uff1a\u4e00\u4e2a net.Server \u5bf9\u8c61\u4f1a\u5728\u6bcf\u6b21\u6709\u65b0\u8fde\u63a5\u65f6\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\uff0c \u4e00\u4e2a fs.readStream \u5bf9\u8c61\u4f1a\u5728\u6587\u4ef6\u88ab\u6253\u5f00\u7684\u65f6\u5019\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\u3002 \u6240\u6709\u8fd9\u4e9b\u4ea7\u751f\u4e8b\u4ef6\u7684\u5bf9\u8c61\u90fd\u662f events.EventEmitter \u7684\u5b9e\u4f8b\u3002 EventEmitter \u7c7b \u00b6 events \u6a21\u5757\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff1a events.EventEmitter\u3002EventEmitter \u7684\u6838\u5fc3\u5c31\u662f\u4e8b\u4ef6\u89e6\u53d1\u4e0e\u4e8b\u4ef6\u76d1\u542c\u5668\u529f\u80fd\u7684\u5c01\u88c5\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7require(\"events\");\u6765\u8bbf\u95ee\u8be5\u6a21\u5757\u3002 // \u5f15\u5165 events \u6a21\u5757 var events = require('events'); // \u521b\u5efa eventEmitter \u5bf9\u8c61 var eventEmitter = new events.EventEmitter(); EventEmitter \u5bf9\u8c61\u5982\u679c\u5728\u5b9e\u4f8b\u5316\u65f6\u53d1\u751f\u9519\u8bef\uff0c\u4f1a\u89e6\u53d1 error \u4e8b\u4ef6\u3002\u5f53\u6dfb\u52a0\u65b0\u7684\u76d1\u542c\u5668\u65f6\uff0cnewListener \u4e8b\u4ef6\u4f1a\u89e6\u53d1\uff0c\u5f53\u76d1\u542c\u5668\u88ab\u79fb\u9664\u65f6\uff0cremoveListener \u4e8b\u4ef6\u88ab\u89e6\u53d1\u3002 \u4e0b\u9762\u6211\u4eec\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u8bf4\u660e EventEmitter \u7684\u7528\u6cd5\uff1a //event.js \u6587\u4ef6 var EventEmitter = require('events').EventEmitter; var event = new EventEmitter(); event.on('some_event', function() { console.log('some_event \u4e8b\u4ef6\u89e6\u53d1'); }); setTimeout(function() { event.emit('some_event'); }, 1000); \u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff0c1 \u79d2\u540e\u63a7\u5236\u53f0\u8f93\u51fa\u4e86 'some_event \u4e8b\u4ef6\u89e6\u53d1' \u3002\u5176\u539f\u7406\u662f event \u5bf9\u8c61\u6ce8\u518c\u4e86\u4e8b\u4ef6 some_event \u7684\u4e00\u4e2a\u76d1\u542c\u5668\uff0c\u7136\u540e\u6211\u4eec\u901a\u8fc7 setTimeout \u5728 1000 \u6beb\u79d2\u4ee5\u540e\u5411 event \u5bf9\u8c61\u53d1\u9001\u4e8b\u4ef6 some_event\uff0c\u6b64\u65f6\u4f1a\u8c03\u7528some_event \u7684\u76d1\u542c\u5668\u3002 $ node event.js some_event \u4e8b\u4ef6\u89e6\u53d1 EventEmitter \u7684\u6bcf\u4e2a\u4e8b\u4ef6\u7531\u4e00\u4e2a\u4e8b\u4ef6\u540d\u548c\u82e5\u5e72\u4e2a\u53c2\u6570\u7ec4\u6210\uff0c\u4e8b\u4ef6\u540d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u901a\u5e38\u8868\u8fbe\u4e00\u5b9a\u7684\u8bed\u4e49\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4e8b\u4ef6\uff0cEventEmitter \u652f\u6301 \u82e5\u5e72\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668\u3002 \u5f53\u4e8b\u4ef6\u89e6\u53d1\u65f6\uff0c\u6ce8\u518c\u5230\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u4e8b\u4ef6\u76d1\u542c\u5668\u88ab\u4f9d\u6b21\u8c03\u7528\uff0c\u4e8b\u4ef6\u53c2\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u53c2\u6570\u4f20\u9012\u3002 \u8ba9\u6211\u4eec\u4ee5\u4e0b\u9762\u7684\u4f8b\u5b50\u89e3\u91ca\u8fd9\u4e2a\u8fc7\u7a0b\uff1a //event.js \u6587\u4ef6 var events = require('events'); var emitter = new events.EventEmitter(); emitter.on('someEvent', function(arg1, arg2) { console.log('listener1', arg1, arg2); }); emitter.on('someEvent', function(arg1, arg2) { console.log('listener2', arg1, arg2); }); emitter.emit('someEvent', 'arg1 \u53c2\u6570', 'arg2 \u53c2\u6570'); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8fd0\u884c\u7684\u7ed3\u679c\u5982\u4e0b\uff1a $ node event.js listener1 arg1 \u53c2\u6570 arg2 \u53c2\u6570 listener2 arg1 \u53c2\u6570 arg2 \u53c2\u6570 \u4ee5\u4e0a\u4f8b\u5b50\u4e2d\uff0cemitter \u4e3a\u4e8b\u4ef6 someEvent \u6ce8\u518c\u4e86\u4e24\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668\uff0c\u7136\u540e\u89e6\u53d1\u4e86 someEvent \u4e8b\u4ef6\u3002 \u8fd0\u884c\u7ed3\u679c\u4e2d\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668\u56de\u8c03\u51fd\u6570\u88ab\u5148\u540e\u8c03\u7528\u3002 \u8fd9\u5c31\u662fEventEmitter\u6700\u7b80\u5355\u7684\u7528\u6cd5\u3002 EventEmitter \u63d0\u4f9b\u4e86\u591a\u4e2a\u5c5e\u6027\uff0c\u5982 on \u548c emit \u3002 on \u51fd\u6570\u7528\u4e8e\u7ed1\u5b9a\u4e8b\u4ef6\u51fd\u6570\uff0c emit \u5c5e\u6027\u7528\u4e8e\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5177\u4f53\u770b\u4e0b EventEmitter \u7684\u5c5e\u6027\u4ecb\u7ecd\u3002 \u65b9\u6cd5 \u00b6 \u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 addListener(event, listener) \u4e3a\u6307\u5b9a\u4e8b\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u76d1\u542c\u5668\u5230\u76d1\u542c\u5668\u6570\u7ec4\u7684\u5c3e\u90e8\u3002 2 on(event, listener) \u4e3a\u6307\u5b9a\u4e8b\u4ef6\u6ce8\u518c\u4e00\u4e2a\u76d1\u542c\u5668\uff0c\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32 event \u548c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u3002 server.on('connection', function (stream) { console.log('someone connected!'); }); 3 once(event, listener) \u4e3a\u6307\u5b9a\u4e8b\u4ef6\u6ce8\u518c\u4e00\u4e2a\u5355\u6b21\u76d1\u542c\u5668\uff0c\u5373 \u76d1\u542c\u5668\u6700\u591a\u53ea\u4f1a\u89e6\u53d1\u4e00\u6b21\uff0c\u89e6\u53d1\u540e\u7acb\u523b\u89e3\u9664\u8be5\u76d1\u542c\u5668\u3002 server.once('connection', function (stream) { console.log('Ah, we have our first user!'); }); 4 removeListener(event, listener) \u79fb\u9664\u6307\u5b9a\u4e8b\u4ef6\u7684\u67d0\u4e2a\u76d1\u542c\u5668\uff0c\u76d1\u542c\u5668\u5fc5\u987b\u662f\u8be5\u4e8b\u4ef6\u5df2\u7ecf\u6ce8\u518c\u8fc7\u7684\u76d1\u542c\u5668\u3002\u5b83\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u4e8b\u4ef6\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u662f\u56de\u8c03\u51fd\u6570\u540d\u79f0\u3002 var callback = function(stream) { console.log('someone connected!'); }; server.on('connection', callback); // ... server.removeListener('connection', callback); 5 removeAllListeners([event]) \u79fb\u9664\u6240\u6709\u4e8b\u4ef6\u7684\u6240\u6709\u76d1\u542c\u5668\uff0c \u5982\u679c\u6307\u5b9a\u4e8b\u4ef6\uff0c\u5219\u79fb\u9664\u6307\u5b9a\u4e8b\u4ef6\u7684\u6240\u6709\u76d1\u542c\u5668\u3002 6 setMaxListeners(n) \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c EventEmitters \u5982\u679c\u4f60\u6dfb\u52a0\u7684\u76d1\u542c\u5668\u8d85\u8fc7 10 \u4e2a\u5c31\u4f1a\u8f93\u51fa\u8b66\u544a\u4fe1\u606f\u3002 setMaxListeners \u51fd\u6570\u7528\u4e8e\u63d0\u9ad8\u76d1\u542c\u5668\u7684\u9ed8\u8ba4\u9650\u5236\u7684\u6570\u91cf\u3002 7 listeners(event) \u8fd4\u56de\u6307\u5b9a\u4e8b\u4ef6\u7684\u76d1\u542c\u5668\u6570\u7ec4\u3002 8 emit(event, [arg1], [arg2], [...]) \u6309\u76d1\u542c\u5668\u7684\u987a\u5e8f\u6267\u884c\u6267\u884c\u6bcf\u4e2a\u76d1\u542c\u5668\uff0c\u5982\u679c\u4e8b\u4ef6\u6709\u6ce8\u518c\u76d1\u542c\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 \u7c7b\u65b9\u6cd5 \u00b6 \u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 listenerCount(emitter, event) \u8fd4\u56de\u6307\u5b9a\u4e8b\u4ef6\u7684\u76d1\u542c\u5668\u6570\u91cf\u3002 events.EventEmitter.listenerCount(emitter, eventName) //\u5df2\u5e9f\u5f03\uff0c\u4e0d\u63a8\u8350 events.emitter.listenerCount(eventName) //\u63a8\u8350 \u4e8b\u4ef6 \u00b6 \u5e8f\u53f7 \u4e8b\u4ef6 & \u63cf\u8ff0 1 newListener event - \u5b57\u7b26\u4e32\uff0c\u4e8b\u4ef6\u540d\u79f0**listener** - \u5904\u7406\u4e8b\u4ef6\u51fd\u6570\u8be5\u4e8b\u4ef6\u5728\u6dfb\u52a0\u65b0\u76d1\u542c\u5668\u65f6\u88ab\u89e6\u53d1\u3002 2 removeListener event - \u5b57\u7b26\u4e32\uff0c\u4e8b\u4ef6\u540d\u79f0**listener** - \u5904\u7406\u4e8b\u4ef6\u51fd\u6570\u4ece\u6307\u5b9a\u76d1\u542c\u5668\u6570\u7ec4\u4e2d\u5220\u9664\u4e00\u4e2a\u76d1\u542c\u5668\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u64cd\u4f5c\u5c06\u4f1a\u6539\u53d8\u5904\u4e8e\u88ab\u5220\u76d1\u542c\u5668\u4e4b\u540e\u7684\u90a3\u4e9b\u76d1\u542c\u5668\u7684\u7d22\u5f15\u3002 \u5b9e\u4f8b \u00b6 \u4ee5\u4e0b\u5b9e\u4f8b\u901a\u8fc7 connection\uff08\u8fde\u63a5\uff09\u4e8b\u4ef6\u6f14\u793a\u4e86 EventEmitter \u7c7b\u7684\u5e94\u7528\u3002 \u521b\u5efa main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a var events = require('events'); var eventEmitter = new events.EventEmitter(); // \u76d1\u542c\u5668 #1 var listener1 = function listener1() { console.log('\u76d1\u542c\u5668 listener1 \u6267\u884c\u3002'); } // \u76d1\u542c\u5668 #2 var listener2 = function listener2() { console.log('\u76d1\u542c\u5668 listener2 \u6267\u884c\u3002'); } // \u7ed1\u5b9a connection \u4e8b\u4ef6\uff0c\u5904\u7406\u51fd\u6570\u4e3a listener1 eventEmitter.addListener('connection', listener1); // \u7ed1\u5b9a connection \u4e8b\u4ef6\uff0c\u5904\u7406\u51fd\u6570\u4e3a listener2 eventEmitter.on('connection', listener2); var eventListeners = eventEmitter.listenerCount('connection'); console.log(eventListeners + \" \u4e2a\u76d1\u542c\u5668\u76d1\u542c\u8fde\u63a5\u4e8b\u4ef6\u3002\"); // \u5904\u7406 connection \u4e8b\u4ef6 eventEmitter.emit('connection'); // \u79fb\u9664\u76d1\u7ed1\u5b9a\u7684 listener1 \u51fd\u6570 eventEmitter.removeListener('connection', listener1); console.log(\"listener1 \u4e0d\u518d\u53d7\u76d1\u542c\u3002\"); // \u89e6\u53d1\u8fde\u63a5\u4e8b\u4ef6 eventEmitter.emit('connection'); eventListeners = eventEmitter.listenerCount('connection'); console.log(eventListeners + \" \u4e2a\u76d1\u542c\u5668\u76d1\u542c\u8fde\u63a5\u4e8b\u4ef6\u3002\"); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002\"); \u4ee5\u4e0a\u4ee3\u7801\uff0c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a $ node main.js 2 \u4e2a\u76d1\u542c\u5668\u76d1\u542c\u8fde\u63a5\u4e8b\u4ef6\u3002 \u76d1\u542c\u5668 listener1 \u6267\u884c\u3002 \u76d1\u542c\u5668 listener2 \u6267\u884c\u3002 listener1 \u4e0d\u518d\u53d7\u76d1\u542c\u3002 \u76d1\u542c\u5668 listener2 \u6267\u884c\u3002 1 \u4e2a\u76d1\u542c\u5668\u76d1\u542c\u8fde\u63a5\u4e8b\u4ef6\u3002 \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002 error \u4e8b\u4ef6 \u00b6 EventEmitter \u5b9a\u4e49\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u4e8b\u4ef6 error\uff0c\u5b83\u5305\u542b\u4e86\u9519\u8bef\u7684\u8bed\u4e49\uff0c\u6211\u4eec\u5728\u9047\u5230 \u5f02\u5e38\u7684\u65f6\u5019\u901a\u5e38\u4f1a\u89e6\u53d1 error \u4e8b\u4ef6\u3002 \u5f53 error \u88ab\u89e6\u53d1\u65f6\uff0cEventEmitter \u89c4\u5b9a\u5982\u679c\u6ca1\u6709\u54cd \u5e94\u7684\u76d1\u542c\u5668\uff0cNode.js \u4f1a\u628a\u5b83\u5f53\u4f5c\u5f02\u5e38\uff0c\u9000\u51fa\u7a0b\u5e8f\u5e76\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002 \u6211\u4eec\u4e00\u822c\u8981\u4e3a\u4f1a\u89e6\u53d1 error \u4e8b\u4ef6\u7684\u5bf9\u8c61\u8bbe\u7f6e\u76d1\u542c\u5668\uff0c\u907f\u514d\u9047\u5230\u9519\u8bef\u540e\u6574\u4e2a\u7a0b\u5e8f\u5d29\u6e83\u3002\u4f8b\u5982\uff1a var events = require('events'); var emitter = new events.EventEmitter(); emitter.emit('error'); \u8fd0\u884c\u65f6\u4f1a\u663e\u793a\u4ee5\u4e0b\u9519\u8bef\uff1a node.js:201 throw e; // process.nextTick error, or 'error' event on first tick ^ Error: Uncaught, unspecified 'error' event. at EventEmitter.emit (events.js:50:15) at Object.<anonymous> (/home/byvoid/error.js:5:9) at Module._compile (module.js:441:26) at Object..js (module.js:459:10) at Module.load (module.js:348:31) at Function._load (module.js:308:12) at Array.0 (module.js:479:10) at EventEmitter._tickCallback (node.js:192:40) \u7ee7\u627f EventEmitter \u00b6 \u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 EventEmitter\uff0c\u800c\u662f\u5728\u5bf9\u8c61\u4e2d\u7ee7\u627f\u5b83\u3002\u5305\u62ec fs\u3001net\u3001 http \u5728\u5185\u7684\uff0c\u53ea\u8981\u662f\u652f\u6301\u4e8b\u4ef6\u54cd\u5e94\u7684\u6838\u5fc3\u6a21\u5757\u90fd\u662f EventEmitter \u7684\u5b50\u7c7b\u3002 \u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462\uff1f\u539f\u56e0\u6709\u4e24\u70b9\uff1a \u9996\u5148\uff0c\u5177\u6709\u67d0\u4e2a\u5b9e\u4f53\u529f\u80fd\u7684\u5bf9\u8c61\u5b9e\u73b0\u4e8b\u4ef6\u7b26\u5408\u8bed\u4e49\uff0c \u4e8b\u4ef6\u7684\u76d1\u542c\u548c\u53d1\u751f\u5e94\u8be5\u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002 \u5176\u6b21 JavaScript \u7684\u5bf9\u8c61\u673a\u5236\u662f\u57fa\u4e8e\u539f\u578b\u7684\uff0c\u652f\u6301 \u90e8\u5206\u591a\u91cd\u7ee7\u627f\uff0c\u7ee7\u627f EventEmitter \u4e0d\u4f1a\u6253\u4e71\u5bf9\u8c61\u539f\u6709\u7684\u7ee7\u627f\u5173\u7cfb\u3002","title":"08-Node.js EventEmitter"},{"location":"nodejs/08-Node.js%20EventEmitter/#nodejs-eventemitter","text":"Node.js \u6240\u6709\u7684\u5f02\u6b65 I/O \u64cd\u4f5c\u5728\u5b8c\u6210\u65f6\u90fd\u4f1a\u53d1\u9001\u4e00\u4e2a\u4e8b\u4ef6\u5230\u4e8b\u4ef6\u961f\u5217\u3002 Node.js \u91cc\u9762\u7684\u8bb8\u591a\u5bf9\u8c61\u90fd\u4f1a\u5206\u53d1\u4e8b\u4ef6\uff1a\u4e00\u4e2a net.Server \u5bf9\u8c61\u4f1a\u5728\u6bcf\u6b21\u6709\u65b0\u8fde\u63a5\u65f6\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\uff0c \u4e00\u4e2a fs.readStream \u5bf9\u8c61\u4f1a\u5728\u6587\u4ef6\u88ab\u6253\u5f00\u7684\u65f6\u5019\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\u3002 \u6240\u6709\u8fd9\u4e9b\u4ea7\u751f\u4e8b\u4ef6\u7684\u5bf9\u8c61\u90fd\u662f events.EventEmitter \u7684\u5b9e\u4f8b\u3002","title":"Node.js EventEmitter"},{"location":"nodejs/08-Node.js%20EventEmitter/#eventemitter","text":"events \u6a21\u5757\u53ea\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff1a events.EventEmitter\u3002EventEmitter \u7684\u6838\u5fc3\u5c31\u662f\u4e8b\u4ef6\u89e6\u53d1\u4e0e\u4e8b\u4ef6\u76d1\u542c\u5668\u529f\u80fd\u7684\u5c01\u88c5\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7require(\"events\");\u6765\u8bbf\u95ee\u8be5\u6a21\u5757\u3002 // \u5f15\u5165 events \u6a21\u5757 var events = require('events'); // \u521b\u5efa eventEmitter \u5bf9\u8c61 var eventEmitter = new events.EventEmitter(); EventEmitter \u5bf9\u8c61\u5982\u679c\u5728\u5b9e\u4f8b\u5316\u65f6\u53d1\u751f\u9519\u8bef\uff0c\u4f1a\u89e6\u53d1 error \u4e8b\u4ef6\u3002\u5f53\u6dfb\u52a0\u65b0\u7684\u76d1\u542c\u5668\u65f6\uff0cnewListener \u4e8b\u4ef6\u4f1a\u89e6\u53d1\uff0c\u5f53\u76d1\u542c\u5668\u88ab\u79fb\u9664\u65f6\uff0cremoveListener \u4e8b\u4ef6\u88ab\u89e6\u53d1\u3002 \u4e0b\u9762\u6211\u4eec\u7528\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u8bf4\u660e EventEmitter \u7684\u7528\u6cd5\uff1a //event.js \u6587\u4ef6 var EventEmitter = require('events').EventEmitter; var event = new EventEmitter(); event.on('some_event', function() { console.log('some_event \u4e8b\u4ef6\u89e6\u53d1'); }); setTimeout(function() { event.emit('some_event'); }, 1000); \u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u8fd0\u884c\u8fd9\u6bb5\u4ee3\u7801\uff0c1 \u79d2\u540e\u63a7\u5236\u53f0\u8f93\u51fa\u4e86 'some_event \u4e8b\u4ef6\u89e6\u53d1' \u3002\u5176\u539f\u7406\u662f event \u5bf9\u8c61\u6ce8\u518c\u4e86\u4e8b\u4ef6 some_event \u7684\u4e00\u4e2a\u76d1\u542c\u5668\uff0c\u7136\u540e\u6211\u4eec\u901a\u8fc7 setTimeout \u5728 1000 \u6beb\u79d2\u4ee5\u540e\u5411 event \u5bf9\u8c61\u53d1\u9001\u4e8b\u4ef6 some_event\uff0c\u6b64\u65f6\u4f1a\u8c03\u7528some_event \u7684\u76d1\u542c\u5668\u3002 $ node event.js some_event \u4e8b\u4ef6\u89e6\u53d1 EventEmitter \u7684\u6bcf\u4e2a\u4e8b\u4ef6\u7531\u4e00\u4e2a\u4e8b\u4ef6\u540d\u548c\u82e5\u5e72\u4e2a\u53c2\u6570\u7ec4\u6210\uff0c\u4e8b\u4ef6\u540d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u901a\u5e38\u8868\u8fbe\u4e00\u5b9a\u7684\u8bed\u4e49\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u4e8b\u4ef6\uff0cEventEmitter \u652f\u6301 \u82e5\u5e72\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668\u3002 \u5f53\u4e8b\u4ef6\u89e6\u53d1\u65f6\uff0c\u6ce8\u518c\u5230\u8fd9\u4e2a\u4e8b\u4ef6\u7684\u4e8b\u4ef6\u76d1\u542c\u5668\u88ab\u4f9d\u6b21\u8c03\u7528\uff0c\u4e8b\u4ef6\u53c2\u6570\u4f5c\u4e3a\u56de\u8c03\u51fd\u6570\u53c2\u6570\u4f20\u9012\u3002 \u8ba9\u6211\u4eec\u4ee5\u4e0b\u9762\u7684\u4f8b\u5b50\u89e3\u91ca\u8fd9\u4e2a\u8fc7\u7a0b\uff1a //event.js \u6587\u4ef6 var events = require('events'); var emitter = new events.EventEmitter(); emitter.on('someEvent', function(arg1, arg2) { console.log('listener1', arg1, arg2); }); emitter.on('someEvent', function(arg1, arg2) { console.log('listener2', arg1, arg2); }); emitter.emit('someEvent', 'arg1 \u53c2\u6570', 'arg2 \u53c2\u6570'); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8fd0\u884c\u7684\u7ed3\u679c\u5982\u4e0b\uff1a $ node event.js listener1 arg1 \u53c2\u6570 arg2 \u53c2\u6570 listener2 arg1 \u53c2\u6570 arg2 \u53c2\u6570 \u4ee5\u4e0a\u4f8b\u5b50\u4e2d\uff0cemitter \u4e3a\u4e8b\u4ef6 someEvent \u6ce8\u518c\u4e86\u4e24\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668\uff0c\u7136\u540e\u89e6\u53d1\u4e86 someEvent \u4e8b\u4ef6\u3002 \u8fd0\u884c\u7ed3\u679c\u4e2d\u53ef\u4ee5\u770b\u5230\u4e24\u4e2a\u4e8b\u4ef6\u76d1\u542c\u5668\u56de\u8c03\u51fd\u6570\u88ab\u5148\u540e\u8c03\u7528\u3002 \u8fd9\u5c31\u662fEventEmitter\u6700\u7b80\u5355\u7684\u7528\u6cd5\u3002 EventEmitter \u63d0\u4f9b\u4e86\u591a\u4e2a\u5c5e\u6027\uff0c\u5982 on \u548c emit \u3002 on \u51fd\u6570\u7528\u4e8e\u7ed1\u5b9a\u4e8b\u4ef6\u51fd\u6570\uff0c emit \u5c5e\u6027\u7528\u4e8e\u89e6\u53d1\u4e00\u4e2a\u4e8b\u4ef6\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5177\u4f53\u770b\u4e0b EventEmitter \u7684\u5c5e\u6027\u4ecb\u7ecd\u3002","title":"EventEmitter \u7c7b"},{"location":"nodejs/08-Node.js%20EventEmitter/#_1","text":"\u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 addListener(event, listener) \u4e3a\u6307\u5b9a\u4e8b\u4ef6\u6dfb\u52a0\u4e00\u4e2a\u76d1\u542c\u5668\u5230\u76d1\u542c\u5668\u6570\u7ec4\u7684\u5c3e\u90e8\u3002 2 on(event, listener) \u4e3a\u6307\u5b9a\u4e8b\u4ef6\u6ce8\u518c\u4e00\u4e2a\u76d1\u542c\u5668\uff0c\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32 event \u548c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u3002 server.on('connection', function (stream) { console.log('someone connected!'); }); 3 once(event, listener) \u4e3a\u6307\u5b9a\u4e8b\u4ef6\u6ce8\u518c\u4e00\u4e2a\u5355\u6b21\u76d1\u542c\u5668\uff0c\u5373 \u76d1\u542c\u5668\u6700\u591a\u53ea\u4f1a\u89e6\u53d1\u4e00\u6b21\uff0c\u89e6\u53d1\u540e\u7acb\u523b\u89e3\u9664\u8be5\u76d1\u542c\u5668\u3002 server.once('connection', function (stream) { console.log('Ah, we have our first user!'); }); 4 removeListener(event, listener) \u79fb\u9664\u6307\u5b9a\u4e8b\u4ef6\u7684\u67d0\u4e2a\u76d1\u542c\u5668\uff0c\u76d1\u542c\u5668\u5fc5\u987b\u662f\u8be5\u4e8b\u4ef6\u5df2\u7ecf\u6ce8\u518c\u8fc7\u7684\u76d1\u542c\u5668\u3002\u5b83\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u4e8b\u4ef6\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u662f\u56de\u8c03\u51fd\u6570\u540d\u79f0\u3002 var callback = function(stream) { console.log('someone connected!'); }; server.on('connection', callback); // ... server.removeListener('connection', callback); 5 removeAllListeners([event]) \u79fb\u9664\u6240\u6709\u4e8b\u4ef6\u7684\u6240\u6709\u76d1\u542c\u5668\uff0c \u5982\u679c\u6307\u5b9a\u4e8b\u4ef6\uff0c\u5219\u79fb\u9664\u6307\u5b9a\u4e8b\u4ef6\u7684\u6240\u6709\u76d1\u542c\u5668\u3002 6 setMaxListeners(n) \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c EventEmitters \u5982\u679c\u4f60\u6dfb\u52a0\u7684\u76d1\u542c\u5668\u8d85\u8fc7 10 \u4e2a\u5c31\u4f1a\u8f93\u51fa\u8b66\u544a\u4fe1\u606f\u3002 setMaxListeners \u51fd\u6570\u7528\u4e8e\u63d0\u9ad8\u76d1\u542c\u5668\u7684\u9ed8\u8ba4\u9650\u5236\u7684\u6570\u91cf\u3002 7 listeners(event) \u8fd4\u56de\u6307\u5b9a\u4e8b\u4ef6\u7684\u76d1\u542c\u5668\u6570\u7ec4\u3002 8 emit(event, [arg1], [arg2], [...]) \u6309\u76d1\u542c\u5668\u7684\u987a\u5e8f\u6267\u884c\u6267\u884c\u6bcf\u4e2a\u76d1\u542c\u5668\uff0c\u5982\u679c\u4e8b\u4ef6\u6709\u6ce8\u518c\u76d1\u542c\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002","title":"\u65b9\u6cd5"},{"location":"nodejs/08-Node.js%20EventEmitter/#_2","text":"\u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 listenerCount(emitter, event) \u8fd4\u56de\u6307\u5b9a\u4e8b\u4ef6\u7684\u76d1\u542c\u5668\u6570\u91cf\u3002 events.EventEmitter.listenerCount(emitter, eventName) //\u5df2\u5e9f\u5f03\uff0c\u4e0d\u63a8\u8350 events.emitter.listenerCount(eventName) //\u63a8\u8350","title":"\u7c7b\u65b9\u6cd5"},{"location":"nodejs/08-Node.js%20EventEmitter/#_3","text":"\u5e8f\u53f7 \u4e8b\u4ef6 & \u63cf\u8ff0 1 newListener event - \u5b57\u7b26\u4e32\uff0c\u4e8b\u4ef6\u540d\u79f0**listener** - \u5904\u7406\u4e8b\u4ef6\u51fd\u6570\u8be5\u4e8b\u4ef6\u5728\u6dfb\u52a0\u65b0\u76d1\u542c\u5668\u65f6\u88ab\u89e6\u53d1\u3002 2 removeListener event - \u5b57\u7b26\u4e32\uff0c\u4e8b\u4ef6\u540d\u79f0**listener** - \u5904\u7406\u4e8b\u4ef6\u51fd\u6570\u4ece\u6307\u5b9a\u76d1\u542c\u5668\u6570\u7ec4\u4e2d\u5220\u9664\u4e00\u4e2a\u76d1\u542c\u5668\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u64cd\u4f5c\u5c06\u4f1a\u6539\u53d8\u5904\u4e8e\u88ab\u5220\u76d1\u542c\u5668\u4e4b\u540e\u7684\u90a3\u4e9b\u76d1\u542c\u5668\u7684\u7d22\u5f15\u3002","title":"\u4e8b\u4ef6"},{"location":"nodejs/08-Node.js%20EventEmitter/#_4","text":"\u4ee5\u4e0b\u5b9e\u4f8b\u901a\u8fc7 connection\uff08\u8fde\u63a5\uff09\u4e8b\u4ef6\u6f14\u793a\u4e86 EventEmitter \u7c7b\u7684\u5e94\u7528\u3002 \u521b\u5efa main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a var events = require('events'); var eventEmitter = new events.EventEmitter(); // \u76d1\u542c\u5668 #1 var listener1 = function listener1() { console.log('\u76d1\u542c\u5668 listener1 \u6267\u884c\u3002'); } // \u76d1\u542c\u5668 #2 var listener2 = function listener2() { console.log('\u76d1\u542c\u5668 listener2 \u6267\u884c\u3002'); } // \u7ed1\u5b9a connection \u4e8b\u4ef6\uff0c\u5904\u7406\u51fd\u6570\u4e3a listener1 eventEmitter.addListener('connection', listener1); // \u7ed1\u5b9a connection \u4e8b\u4ef6\uff0c\u5904\u7406\u51fd\u6570\u4e3a listener2 eventEmitter.on('connection', listener2); var eventListeners = eventEmitter.listenerCount('connection'); console.log(eventListeners + \" \u4e2a\u76d1\u542c\u5668\u76d1\u542c\u8fde\u63a5\u4e8b\u4ef6\u3002\"); // \u5904\u7406 connection \u4e8b\u4ef6 eventEmitter.emit('connection'); // \u79fb\u9664\u76d1\u7ed1\u5b9a\u7684 listener1 \u51fd\u6570 eventEmitter.removeListener('connection', listener1); console.log(\"listener1 \u4e0d\u518d\u53d7\u76d1\u542c\u3002\"); // \u89e6\u53d1\u8fde\u63a5\u4e8b\u4ef6 eventEmitter.emit('connection'); eventListeners = eventEmitter.listenerCount('connection'); console.log(eventListeners + \" \u4e2a\u76d1\u542c\u5668\u76d1\u542c\u8fde\u63a5\u4e8b\u4ef6\u3002\"); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002\"); \u4ee5\u4e0a\u4ee3\u7801\uff0c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a $ node main.js 2 \u4e2a\u76d1\u542c\u5668\u76d1\u542c\u8fde\u63a5\u4e8b\u4ef6\u3002 \u76d1\u542c\u5668 listener1 \u6267\u884c\u3002 \u76d1\u542c\u5668 listener2 \u6267\u884c\u3002 listener1 \u4e0d\u518d\u53d7\u76d1\u542c\u3002 \u76d1\u542c\u5668 listener2 \u6267\u884c\u3002 1 \u4e2a\u76d1\u542c\u5668\u76d1\u542c\u8fde\u63a5\u4e8b\u4ef6\u3002 \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002","title":"\u5b9e\u4f8b"},{"location":"nodejs/08-Node.js%20EventEmitter/#error","text":"EventEmitter \u5b9a\u4e49\u4e86\u4e00\u4e2a\u7279\u6b8a\u7684\u4e8b\u4ef6 error\uff0c\u5b83\u5305\u542b\u4e86\u9519\u8bef\u7684\u8bed\u4e49\uff0c\u6211\u4eec\u5728\u9047\u5230 \u5f02\u5e38\u7684\u65f6\u5019\u901a\u5e38\u4f1a\u89e6\u53d1 error \u4e8b\u4ef6\u3002 \u5f53 error \u88ab\u89e6\u53d1\u65f6\uff0cEventEmitter \u89c4\u5b9a\u5982\u679c\u6ca1\u6709\u54cd \u5e94\u7684\u76d1\u542c\u5668\uff0cNode.js \u4f1a\u628a\u5b83\u5f53\u4f5c\u5f02\u5e38\uff0c\u9000\u51fa\u7a0b\u5e8f\u5e76\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002 \u6211\u4eec\u4e00\u822c\u8981\u4e3a\u4f1a\u89e6\u53d1 error \u4e8b\u4ef6\u7684\u5bf9\u8c61\u8bbe\u7f6e\u76d1\u542c\u5668\uff0c\u907f\u514d\u9047\u5230\u9519\u8bef\u540e\u6574\u4e2a\u7a0b\u5e8f\u5d29\u6e83\u3002\u4f8b\u5982\uff1a var events = require('events'); var emitter = new events.EventEmitter(); emitter.emit('error'); \u8fd0\u884c\u65f6\u4f1a\u663e\u793a\u4ee5\u4e0b\u9519\u8bef\uff1a node.js:201 throw e; // process.nextTick error, or 'error' event on first tick ^ Error: Uncaught, unspecified 'error' event. at EventEmitter.emit (events.js:50:15) at Object.<anonymous> (/home/byvoid/error.js:5:9) at Module._compile (module.js:441:26) at Object..js (module.js:459:10) at Module.load (module.js:348:31) at Function._load (module.js:308:12) at Array.0 (module.js:479:10) at EventEmitter._tickCallback (node.js:192:40)","title":"error \u4e8b\u4ef6"},{"location":"nodejs/08-Node.js%20EventEmitter/#eventemitter_1","text":"\u5927\u591a\u6570\u65f6\u5019\u6211\u4eec\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 EventEmitter\uff0c\u800c\u662f\u5728\u5bf9\u8c61\u4e2d\u7ee7\u627f\u5b83\u3002\u5305\u62ec fs\u3001net\u3001 http \u5728\u5185\u7684\uff0c\u53ea\u8981\u662f\u652f\u6301\u4e8b\u4ef6\u54cd\u5e94\u7684\u6838\u5fc3\u6a21\u5757\u90fd\u662f EventEmitter \u7684\u5b50\u7c7b\u3002 \u4e3a\u4ec0\u4e48\u8981\u8fd9\u6837\u505a\u5462\uff1f\u539f\u56e0\u6709\u4e24\u70b9\uff1a \u9996\u5148\uff0c\u5177\u6709\u67d0\u4e2a\u5b9e\u4f53\u529f\u80fd\u7684\u5bf9\u8c61\u5b9e\u73b0\u4e8b\u4ef6\u7b26\u5408\u8bed\u4e49\uff0c \u4e8b\u4ef6\u7684\u76d1\u542c\u548c\u53d1\u751f\u5e94\u8be5\u662f\u4e00\u4e2a\u5bf9\u8c61\u7684\u65b9\u6cd5\u3002 \u5176\u6b21 JavaScript \u7684\u5bf9\u8c61\u673a\u5236\u662f\u57fa\u4e8e\u539f\u578b\u7684\uff0c\u652f\u6301 \u90e8\u5206\u591a\u91cd\u7ee7\u627f\uff0c\u7ee7\u627f EventEmitter \u4e0d\u4f1a\u6253\u4e71\u5bf9\u8c61\u539f\u6709\u7684\u7ee7\u627f\u5173\u7cfb\u3002","title":"\u7ee7\u627f EventEmitter"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/","text":"Node.js Buffer(\u7f13\u51b2\u533a) \u00b6 JavaScript \u8bed\u8a00\u81ea\u8eab\u53ea\u6709\u5b57\u7b26\u4e32\u6570\u636e\u7c7b\u578b\uff0c\u6ca1\u6709\u4e8c\u8fdb\u5236\u6570\u636e\u7c7b\u578b\u3002 \u4f46\u5728\u5904\u7406\u50cfTCP\u6d41\u6216\u6587\u4ef6\u6d41\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528\u5230\u4e8c\u8fdb\u5236\u6570\u636e\u3002\u56e0\u6b64\u5728 Node.js\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Buffer \u7c7b\uff0c\u8be5\u7c7b\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u4e13\u95e8\u5b58\u653e\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u7f13\u5b58\u533a\u3002 \u5728 Node.js \u4e2d\uff0cBuffer \u7c7b\u662f\u968f Node \u5185\u6838\u4e00\u8d77\u53d1\u5e03\u7684\u6838\u5fc3\u5e93\u3002Buffer \u5e93\u4e3a Node.js \u5e26\u6765\u4e86\u4e00\u79cd\u5b58\u50a8\u539f\u59cb\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9 Node.js \u5904\u7406\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6bcf\u5f53\u9700\u8981\u5728 Node.js \u4e2d\u5904\u7406I/O\u64cd\u4f5c\u4e2d\u79fb\u52a8\u7684\u6570\u636e\u65f6\uff0c\u5c31\u6709\u53ef\u80fd\u4f7f\u7528 Buffer \u5e93\u3002\u539f\u59cb\u6570\u636e\u5b58\u50a8\u5728 Buffer \u7c7b\u7684\u5b9e\u4f8b\u4e2d\u3002\u4e00\u4e2a Buffer \u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u4f46\u5b83\u5bf9\u5e94\u4e8e V8 \u5806\u5185\u5b58\u4e4b\u5916\u7684\u4e00\u5757\u539f\u59cb\u5185\u5b58\u3002 \u5728v6.0\u4e4b\u524d\u521b\u5efaBuffer\u5bf9\u8c61\u76f4\u63a5\u4f7f\u7528new Buffer()\u6784\u9020\u51fd\u6570\u6765\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u4f46\u662fBuffer\u5bf9\u5185\u5b58\u7684\u6743\u9650\u64cd\u4f5c\u76f8\u6bd4\u5f88\u5927\uff0c\u53ef\u4ee5\u76f4\u63a5\u6355\u83b7\u4e00\u4e9b\u654f\u611f\u4fe1\u606f\uff0c\u6240\u4ee5\u5728v6.0\u4ee5\u540e\uff0c\u5b98\u65b9\u6587\u6863\u91cc\u9762\u5efa\u8bae\u4f7f\u7528 Buffer.from() \u63a5\u53e3\u53bb\u521b\u5efaBuffer\u5bf9\u8c61\u3002 Buffer \u4e0e\u5b57\u7b26\u7f16\u7801 \u00b6 Buffer \u5b9e\u4f8b\u4e00\u822c\u7528\u4e8e\u8868\u793a\u7f16\u7801\u5b57\u7b26\u7684\u5e8f\u5217\uff0c\u6bd4\u5982 UTF-8 \u3001 UCS2 \u3001 Base64 \u3001\u6216\u5341\u516d\u8fdb\u5236\u7f16\u7801\u7684\u6570\u636e\u3002 \u901a\u8fc7\u4f7f\u7528\u663e\u5f0f\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u5c31\u53ef\u4ee5\u5728 Buffer \u5b9e\u4f8b\u4e0e\u666e\u901a\u7684 JavaScript \u5b57\u7b26\u4e32\u4e4b\u95f4\u8fdb\u884c\u76f8\u4e92\u8f6c\u6362\u3002 const buf = Buffer.from('runoob', 'ascii'); // \u8f93\u51fa 72756e6f6f62 console.log(buf.toString('hex')); // \u8f93\u51fa cnVub29i console.log(buf.toString('base64')); Node.js \u76ee\u524d\u652f\u6301\u7684\u5b57\u7b26\u7f16\u7801\u5305\u62ec\uff1a ascii - \u4ec5\u652f\u6301 7 \u4f4d ASCII \u6570\u636e\u3002\u5982\u679c\u8bbe\u7f6e\u53bb\u6389\u9ad8\u4f4d\u7684\u8bdd\uff0c\u8fd9\u79cd\u7f16\u7801\u662f\u975e\u5e38\u5feb\u7684\u3002 utf8 - \u591a\u5b57\u8282\u7f16\u7801\u7684 Unicode \u5b57\u7b26\u3002\u8bb8\u591a\u7f51\u9875\u548c\u5176\u4ed6\u6587\u6863\u683c\u5f0f\u90fd\u4f7f\u7528 UTF-8 \u3002 utf16le - 2 \u6216 4 \u4e2a\u5b57\u8282\uff0c\u5c0f\u5b57\u8282\u5e8f\u7f16\u7801\u7684 Unicode \u5b57\u7b26\u3002\u652f\u6301\u4ee3\u7406\u5bf9\uff08U+10000 \u81f3 U+10FFFF\uff09\u3002 ucs2 - utf16le \u7684\u522b\u540d\u3002 base64 - Base64 \u7f16\u7801\u3002 latin1 - \u4e00\u79cd\u628a Buffer \u7f16\u7801\u6210\u4e00\u5b57\u8282\u7f16\u7801\u7684\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u3002 binary - latin1 \u7684\u522b\u540d\u3002 hex - \u5c06\u6bcf\u4e2a\u5b57\u8282\u7f16\u7801\u4e3a\u4e24\u4e2a\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u3002 \u521b\u5efa Buffer \u7c7b \u00b6 Buffer \u63d0\u4f9b\u4e86\u4ee5\u4e0b API \u6765\u521b\u5efa Buffer \u7c7b\uff1a Buffer.alloc(size[, fill[, encoding]])\uff1a \u8fd4\u56de\u4e00\u4e2a\u6307\u5b9a\u5927\u5c0f\u7684 Buffer \u5b9e\u4f8b\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e fill\uff0c\u5219\u9ed8\u8ba4\u586b\u6ee1 0 Buffer.allocUnsafe(size)\uff1a \u8fd4\u56de\u4e00\u4e2a\u6307\u5b9a\u5927\u5c0f\u7684 Buffer \u5b9e\u4f8b\uff0c\u4f46\u662f\u5b83\u4e0d\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u6240\u4ee5\u5b83\u53ef\u80fd\u5305\u542b\u654f\u611f\u7684\u6570\u636e Buffer.allocUnsafeSlow(size) Buffer.from(array)\uff1a \u8fd4\u56de\u4e00\u4e2a\u88ab array \u7684\u503c\u521d\u59cb\u5316\u7684\u65b0\u7684 Buffer \u5b9e\u4f8b\uff08\u4f20\u5165\u7684 array \u7684\u5143\u7d20\u53ea\u80fd\u662f\u6570\u5b57\uff0c\u4e0d\u7136\u5c31\u4f1a\u81ea\u52a8\u88ab 0 \u8986\u76d6\uff09 Buffer.from(arrayBuffer[, byteOffset[, length]])\uff1a \u8fd4\u56de\u4e00\u4e2a\u65b0\u5efa\u7684\u4e0e\u7ed9\u5b9a\u7684 ArrayBuffer \u5171\u4eab\u540c\u4e00\u5185\u5b58\u7684 Buffer\u3002 Buffer.from(buffer)\uff1a \u590d\u5236\u4f20\u5165\u7684 Buffer \u5b9e\u4f8b\u7684\u6570\u636e\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 Buffer \u5b9e\u4f8b Buffer.from(string[, encoding])\uff1a \u8fd4\u56de\u4e00\u4e2a\u88ab string \u7684\u503c\u521d\u59cb\u5316\u7684\u65b0\u7684 Buffer \u5b9e\u4f8b // \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a 10\u3001\u4e14\u7528 0 \u586b\u5145\u7684 Buffer\u3002 const buf1 = Buffer.alloc(10); // \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a 10\u3001\u4e14\u7528 0x1 \u586b\u5145\u7684 Buffer\u3002 const buf2 = Buffer.alloc(10, 1); // \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a 10\u3001\u4e14\u672a\u521d\u59cb\u5316\u7684 Buffer\u3002 // \u8fd9\u4e2a\u65b9\u6cd5\u6bd4\u8c03\u7528 Buffer.alloc() \u66f4\u5feb\uff0c // \u4f46\u8fd4\u56de\u7684 Buffer \u5b9e\u4f8b\u53ef\u80fd\u5305\u542b\u65e7\u6570\u636e\uff0c // \u56e0\u6b64\u9700\u8981\u4f7f\u7528 fill() \u6216 write() \u91cd\u5199\u3002 const buf3 = Buffer.allocUnsafe(10); // \u521b\u5efa\u4e00\u4e2a\u5305\u542b [0x1, 0x2, 0x3] \u7684 Buffer\u3002 const buf4 = Buffer.from([1, 2, 3]); // \u521b\u5efa\u4e00\u4e2a\u5305\u542b UTF-8 \u5b57\u8282 [0x74, 0xc3, 0xa9, 0x73, 0x74] \u7684 Buffer\u3002 const buf5 = Buffer.from('t\u00e9st'); // \u521b\u5efa\u4e00\u4e2a\u5305\u542b Latin-1 \u5b57\u8282 [0x74, 0xe9, 0x73, 0x74] \u7684 Buffer\u3002 const buf6 = Buffer.from('t\u00e9st', 'latin1'); \u5199\u5165\u7f13\u51b2\u533a \u00b6 \u8bed\u6cd5 \u00b6 \u5199\u5165 Node \u7f13\u51b2\u533a\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a buf.write(string[, offset[, length]][, encoding]) \u53c2\u6570 \u00b6 \u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a string - \u5199\u5165\u7f13\u51b2\u533a\u7684\u5b57\u7b26\u4e32\u3002 offset - \u7f13\u51b2\u533a\u5f00\u59cb\u5199\u5165\u7684\u7d22\u5f15\u503c\uff0c\u9ed8\u8ba4\u4e3a 0 \u3002 length - \u5199\u5165\u7684\u5b57\u8282\u6570\uff0c\u9ed8\u8ba4\u4e3a buffer.length encoding - \u4f7f\u7528\u7684\u7f16\u7801\u3002\u9ed8\u8ba4\u4e3a 'utf8' \u3002 \u6839\u636e encoding \u7684\u5b57\u7b26\u7f16\u7801\u5199\u5165 string \u5230 buf \u4e2d\u7684 offset \u4f4d\u7f6e\u3002 length \u53c2\u6570\u662f\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u5982\u679c buf \u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u4fdd\u5b58\u6574\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u53ea\u4f1a\u5199\u5165 string \u7684\u4e00\u90e8\u5206\u3002 \u53ea\u90e8\u5206\u89e3\u7801\u7684\u5b57\u7b26\u4e0d\u4f1a\u88ab\u5199\u5165\u3002 \u8fd4\u56de\u503c \u00b6 \u8fd4\u56de\u5b9e\u9645\u5199\u5165\u7684\u5927\u5c0f\u3002\u5982\u679c buffer \u7a7a\u95f4\u4e0d\u8db3\uff0c \u5219\u53ea\u4f1a\u5199\u5165\u90e8\u5206\u5b57\u7b26\u4e32\u3002 \u5b9e\u4f8b \u00b6 buf = Buffer.alloc(256); len = buf.write(\"www.runoob.com\"); console.log(\"\u5199\u5165\u5b57\u8282\u6570 : \"+ len); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $node main.js \u5199\u5165\u5b57\u8282\u6570 : 14 \u4ece\u7f13\u51b2\u533a\u8bfb\u53d6\u6570\u636e \u00b6 \u8bed\u6cd5 \u00b6 \u8bfb\u53d6 Node \u7f13\u51b2\u533a\u6570\u636e\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a buf.toString([encoding[, start[, end]]]) \u53c2\u6570 \u00b6 \u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a encoding - \u4f7f\u7528\u7684\u7f16\u7801\u3002\u9ed8\u8ba4\u4e3a 'utf8' \u3002 start - \u6307\u5b9a\u5f00\u59cb\u8bfb\u53d6\u7684\u7d22\u5f15\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 0\u3002 end - \u7ed3\u675f\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a\u7f13\u51b2\u533a\u7684\u672b\u5c3e\u3002 \u8fd4\u56de\u503c \u00b6 \u89e3\u7801\u7f13\u51b2\u533a\u6570\u636e\u5e76\u4f7f\u7528\u6307\u5b9a\u7684\u7f16\u7801\u8fd4\u56de\u5b57\u7b26\u4e32\u3002 \u5b9e\u4f8b \u00b6 buf = Buffer.alloc(26); for (var i = 0 ; i < 26 ; i++) { buf[i] = i + 97; } console.log( buf.toString('ascii')); // \u8f93\u51fa: abcdefghijklmnopqrstuvwxyz console.log( buf.toString('ascii',0,5)); //\u4f7f\u7528 'ascii' \u7f16\u7801, \u5e76\u8f93\u51fa: abcde console.log( buf.toString('utf8',0,5)); // \u4f7f\u7528 'utf8' \u7f16\u7801, \u5e76\u8f93\u51fa: abcde console.log( buf.toString(undefined,0,5)); // \u4f7f\u7528\u9ed8\u8ba4\u7684 'utf8' \u7f16\u7801, \u5e76\u8f93\u51fa: abcde \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $ node main.js abcdefghijklmnopqrstuvwxyz abcde abcde abcde \u5c06 Buffer \u8f6c\u6362\u4e3a JSON \u5bf9\u8c61 \u00b6 \u8bed\u6cd5 \u00b6 \u5c06 Node Buffer \u8f6c\u6362\u4e3a JSON \u5bf9\u8c61\u7684\u51fd\u6570\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a buf.toJSON() \u5f53\u5b57\u7b26\u4e32\u5316\u4e00\u4e2a Buffer \u5b9e\u4f8b\u65f6\uff0c JSON.stringify() \u4f1a\u9690\u5f0f\u5730\u8c03\u7528\u8be5 toJSON() \u3002 \u8fd4\u56de\u503c \u00b6 \u8fd4\u56de JSON \u5bf9\u8c61\u3002 \u5b9e\u4f8b \u00b6 const buf = Buffer.from([0x1, 0x2, 0x3, 0x4, 0x5]); const json = JSON.stringify(buf); // \u8f93\u51fa: {\"type\":\"Buffer\",\"data\":[1,2,3,4,5]} console.log(json); const copy = JSON.parse(json, (key, value) => { return value && value.type === 'Buffer' ? Buffer.from(value.data) : value; }); // \u8f93\u51fa: <Buffer 01 02 03 04 05> console.log(copy); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a {\"type\":\"Buffer\",\"data\":[1,2,3,4,5]} <Buffer 01 02 03 04 05> \u7f13\u51b2\u533a\u5408\u5e76 \u00b6 \u8bed\u6cd5 \u00b6 Node \u7f13\u51b2\u533a\u5408\u5e76\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a Buffer.concat(list[, totalLength]) \u53c2\u6570 \u00b6 \u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a list - \u7528\u4e8e\u5408\u5e76\u7684 Buffer \u5bf9\u8c61\u6570\u7ec4\u5217\u8868\u3002 totalLength - \u6307\u5b9a\u5408\u5e76\u540eBuffer\u5bf9\u8c61\u7684\u603b\u957f\u5ea6\u3002 \u8fd4\u56de\u503c \u00b6 \u8fd4\u56de\u4e00\u4e2a\u591a\u4e2a\u6210\u5458\u5408\u5e76\u7684\u65b0 Buffer \u5bf9\u8c61\u3002 \u5b9e\u4f8b \u00b6 var buffer1 = Buffer.from(('\u83dc\u9e1f\u6559\u7a0b')); var buffer2 = Buffer.from(('www.runoob.com')); var buffer3 = Buffer.concat([buffer1,buffer2]); console.log(\"buffer3 \u5185\u5bb9: \" + buffer3.toString()); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a buffer3 \u5185\u5bb9: \u83dc\u9e1f\u6559\u7a0bwww.runoob.com \u7f13\u51b2\u533a\u6bd4\u8f83 \u00b6 \u8bed\u6cd5 \u00b6 Node Buffer \u6bd4\u8f83\u7684\u51fd\u6570\u8bed\u6cd5\u5982\u4e0b\u6240\u793a, \u8be5\u65b9\u6cd5\u5728 Node.js v0.12.2 \u7248\u672c\u5f15\u5165\uff1a buf.compare(otherBuffer); \u53c2\u6570 \u00b6 \u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a otherBuffer - \u4e0e buf \u5bf9\u8c61\u6bd4\u8f83\u7684\u53e6\u5916\u4e00\u4e2a Buffer \u5bf9\u8c61\u3002 \u8fd4\u56de\u503c \u00b6 \u8fd4\u56de\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a buf \u5728 otherBuffer \u4e4b\u524d\uff0c\u4e4b\u540e\u6216\u76f8\u540c\u3002 \u5b9e\u4f8b \u00b6 var buffer1 = Buffer.from('ABC'); var buffer2 = Buffer.from('ABCD'); var result = buffer1.compare(buffer2); if(result < 0) { console.log(buffer1 + \" \u5728 \" + buffer2 + \"\u4e4b\u524d\"); }else if(result == 0){ console.log(buffer1 + \" \u4e0e \" + buffer2 + \"\u76f8\u540c\"); }else { console.log(buffer1 + \" \u5728 \" + buffer2 + \"\u4e4b\u540e\"); } \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a ABC\u5728ABCD\u4e4b\u524d \u62f7\u8d1d\u7f13\u51b2\u533a \u00b6 \u8bed\u6cd5 \u00b6 Node \u7f13\u51b2\u533a\u62f7\u8d1d\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a buf.copy(targetBuffer[, targetStart[, sourceStart[, sourceEnd]]]) \u53c2\u6570 \u00b6 \u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a targetBuffer - \u8981\u62f7\u8d1d\u7684 Buffer \u5bf9\u8c61\u3002 targetStart - \u6570\u5b57, \u53ef\u9009, \u9ed8\u8ba4: 0 sourceStart - \u6570\u5b57, \u53ef\u9009, \u9ed8\u8ba4: 0 sourceEnd - \u6570\u5b57, \u53ef\u9009, \u9ed8\u8ba4: buffer.length \u8fd4\u56de\u503c \u00b6 \u6ca1\u6709\u8fd4\u56de\u503c\u3002 \u5b9e\u4f8b \u00b6 var buf1 = Buffer.from('abcdefghijkl'); var buf2 = Buffer.from('RUNOOB'); //\u5c06 buf2 \u63d2\u5165\u5230 buf1 \u6307\u5b9a\u4f4d\u7f6e\u4e0a buf2.copy(buf1, 2); console.log(buf1.toString()); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a abRUNOOBijkl \u7f13\u51b2\u533a\u88c1\u526a \u00b6 Node \u7f13\u51b2\u533a\u88c1\u526a\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a buf.slice([start[, end]]) \u53c2\u6570 \u00b6 \u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a start - \u6570\u5b57, \u53ef\u9009, \u9ed8\u8ba4: 0 end - \u6570\u5b57, \u53ef\u9009, \u9ed8\u8ba4: buffer.length \u8fd4\u56de\u503c \u00b6 \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u533a\uff0c\u5b83\u548c\u65e7\u7f13\u51b2\u533a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\uff0c\u4f46\u662f\u4ece\u7d22\u5f15 start \u5230 end \u7684\u4f4d\u7f6e\u526a\u5207\u3002 \u5b9e\u4f8b \u00b6 var buffer1 = Buffer.from('runoob'); // \u526a\u5207\u7f13\u51b2\u533a var buffer2 = buffer1.slice(0,2); console.log(\"buffer2 content: \" + buffer2.toString()); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a buffer2 content: ru \u7f13\u51b2\u533a\u957f\u5ea6 \u00b6 \u8bed\u6cd5 \u00b6 Node \u7f13\u51b2\u533a\u957f\u5ea6\u8ba1\u7b97\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a buf.length; \u8fd4\u56de\u503c \u00b6 \u8fd4\u56de Buffer \u5bf9\u8c61\u6240\u5360\u636e\u7684\u5185\u5b58\u957f\u5ea6\u3002 \u5b9e\u4f8b \u00b6 var buffer = Buffer.from('www.runoob.com'); // \u7f13\u51b2\u533a\u957f\u5ea6 console.log(\"buffer length: \" + buffer.length); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a buffer length: 14 \u65b9\u6cd5\u53c2\u8003\u624b\u518c \u00b6 \u4ee5\u4e0b\u5217\u51fa\u4e86 Node.js Buffer \u6a21\u5757\u5e38\u7528\u7684\u65b9\u6cd5\uff08\u6ce8\u610f\u6709\u4e9b\u65b9\u6cd5\u5728\u65e7\u7248\u672c\u662f\u6ca1\u6709\u7684\uff09\uff1a \u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 new Buffer(size) \u5206\u914d\u4e00\u4e2a\u65b0\u7684 size \u5927\u5c0f\u5355\u4f4d\u4e3a8\u4f4d\u5b57\u8282\u7684 buffer\u3002 \u6ce8\u610f, size \u5fc5\u987b\u5c0f\u4e8e kMaxLength\uff0c\u5426\u5219\uff0c\u5c06\u4f1a\u629b\u51fa\u5f02\u5e38 RangeError\u3002\u5e9f\u5f03\u7684: \u4f7f\u7528 Buffer.alloc() \u4ee3\u66ff\uff08\u6216 Buffer.allocUnsafe()\uff09\u3002 2 new Buffer(buffer) \u62f7\u8d1d\u53c2\u6570 buffer \u7684\u6570\u636e\u5230 Buffer \u5b9e\u4f8b\u3002\u5e9f\u5f03\u7684: \u4f7f\u7528 Buffer.from(buffer) \u4ee3\u66ff\u3002 3 new Buffer(str[, encoding]) \u5206\u914d\u4e00\u4e2a\u65b0\u7684 buffer \uff0c\u5176\u4e2d\u5305\u542b\u7740\u4f20\u5165\u7684 str \u5b57\u7b26\u4e32\u3002 encoding \u7f16\u7801\u65b9\u5f0f\u9ed8\u8ba4\u4e3a 'utf8'\u3002 \u5e9f\u5f03\u7684: \u4f7f\u7528 Buffer.from(string[, encoding]) \u4ee3\u66ff\u3002 4 buf.length \u8fd4\u56de\u8fd9\u4e2a buffer \u7684 bytes \u6570\u3002\u6ce8\u610f\u8fd9\u672a\u5fc5\u662f buffer \u91cc\u9762\u5185\u5bb9\u7684\u5927\u5c0f\u3002length \u662f buffer \u5bf9\u8c61\u6240\u5206\u914d\u7684\u5185\u5b58\u6570\uff0c\u5b83\u4e0d\u4f1a\u968f\u7740\u8fd9\u4e2a buffer \u5bf9\u8c61\u5185\u5bb9\u7684\u6539\u53d8\u800c\u6539\u53d8\u3002 5 buf.write(string[, offset[, length]][, encoding]) \u6839\u636e\u53c2\u6570 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 encoding \u7f16\u7801\u65b9\u5f0f\uff0c\u5c06\u53c2\u6570 string \u6570\u636e\u5199\u5165buffer\u3002 offset \u504f\u79fb\u91cf\u9ed8\u8ba4\u503c\u662f 0, encoding \u7f16\u7801\u65b9\u5f0f\u9ed8\u8ba4\u662f utf8\u3002 length \u957f\u5ea6\u662f\u5c06\u8981\u5199\u5165\u7684\u5b57\u7b26\u4e32\u7684 bytes \u5927\u5c0f\u3002 \u8fd4\u56de number \u7c7b\u578b\uff0c\u8868\u793a\u5199\u5165\u4e86\u591a\u5c11 8 \u4f4d\u5b57\u8282\u6d41\u3002\u5982\u679c buffer \u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u653e\u6574\u4e2a string\uff0c\u5b83\u5c06\u53ea\u4f1a\u53ea\u5199\u5165\u90e8\u5206\u5b57\u7b26\u4e32\u3002 length \u9ed8\u8ba4\u662f buffer.length - offset\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u4f1a\u51fa\u73b0\u5199\u5165\u90e8\u5206\u5b57\u7b26\u3002 6 buf.writeUIntLE(value, offset, byteLength[, noAssert]) \u5c06 value \u5199\u5165\u5230 buffer \u91cc\uff0c \u5b83\u7531 offset \u548c byteLength \u51b3\u5b9a\uff0c\u6700\u9ad8\u652f\u6301 48 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\uff0c\u4f8b\u5982\uff1a const buf = Buffer.allocUnsafe(6); buf.writeUIntLE(0x1234567890ab, 0, 6); // \u8f93\u51fa: console.log(buf); noAssert \u503c\u4e3a true \u65f6\uff0c\u4e0d\u518d\u9a8c\u8bc1 value \u548c offset \u7684\u6709\u6548\u6027\u3002 \u9ed8\u8ba4\u662f false\u3002 7 buf.writeUIntBE(value, offset, byteLength[, noAssert]) \u5c06 value \u5199\u5165\u5230 buffer \u91cc\uff0c \u5b83\u7531 offset \u548c byteLength \u51b3\u5b9a\uff0c\u6700\u9ad8\u652f\u6301 48 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c\u4e0d\u518d\u9a8c\u8bc1 value \u548c offset \u7684\u6709\u6548\u6027\u3002 \u9ed8\u8ba4\u662f false\u3002 const buf = Buffer.allocUnsafe(6); buf.writeUIntBE(0x1234567890ab, 0, 6); // \u8f93\u51fa: console.log(buf); 8 buf.writeIntLE(value, offset, byteLength[, noAssert]) \u5c06value \u5199\u5165\u5230 buffer \u91cc\uff0c \u5b83\u7531offset \u548c byteLength \u51b3\u5b9a\uff0c\u6700\u9ad8\u652f\u630148\u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c\u4e0d\u518d\u9a8c\u8bc1 value \u548c offset \u7684\u6709\u6548\u6027\u3002 \u9ed8\u8ba4\u662f false\u3002 9 buf.writeIntBE(value, offset, byteLength[, noAssert]) \u5c06value \u5199\u5165\u5230 buffer \u91cc\uff0c \u5b83\u7531offset \u548c byteLength \u51b3\u5b9a\uff0c\u6700\u9ad8\u652f\u630148\u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c\u4e0d\u518d\u9a8c\u8bc1 value \u548c offset \u7684\u6709\u6548\u6027\u3002 \u9ed8\u8ba4\u662f false\u3002 10 buf.readUIntLE(offset, byteLength[, noAssert]) \u652f\u6301\u8bfb\u53d6 48 \u4f4d\u4ee5\u4e0b\u7684\u65e0\u7b26\u53f7\u6570\u5b57\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c offset \u4e0d\u518d\u9a8c\u8bc1\u662f\u5426\u8d85\u8fc7 buffer \u7684\u957f\u5ea6\uff0c\u9ed8\u8ba4\u4e3a false\u3002 11 buf.readUIntBE(offset, byteLength[, noAssert]) \u652f\u6301\u8bfb\u53d6 48 \u4f4d\u4ee5\u4e0b\u7684\u65e0\u7b26\u53f7\u6570\u5b57\uff0c\u5927\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c offset \u4e0d\u518d\u9a8c\u8bc1\u662f\u5426\u8d85\u8fc7 buffer \u7684\u957f\u5ea6\uff0c\u9ed8\u8ba4\u4e3a false\u3002 12 buf.readIntLE(offset, byteLength[, noAssert]) \u652f\u6301\u8bfb\u53d6 48 \u4f4d\u4ee5\u4e0b\u7684\u6709\u7b26\u53f7\u6570\u5b57\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c offset \u4e0d\u518d\u9a8c\u8bc1\u662f\u5426\u8d85\u8fc7 buffer \u7684\u957f\u5ea6\uff0c\u9ed8\u8ba4\u4e3a false\u3002 13 buf.readIntBE(offset, byteLength[, noAssert]) \u652f\u6301\u8bfb\u53d6 48 \u4f4d\u4ee5\u4e0b\u7684\u6709\u7b26\u53f7\u6570\u5b57\uff0c\u5927\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c offset \u4e0d\u518d\u9a8c\u8bc1\u662f\u5426\u8d85\u8fc7 buffer \u7684\u957f\u5ea6\uff0c\u9ed8\u8ba4\u4e3a false\u3002 14 buf.toString([encoding[, start[, end]]]) \u6839\u636e encoding \u53c2\u6570\uff08\u9ed8\u8ba4\u662f 'utf8'\uff09\u8fd4\u56de\u4e00\u4e2a\u89e3\u7801\u8fc7\u7684 string \u7c7b\u578b\u3002\u8fd8\u4f1a\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570 start (\u9ed8\u8ba4\u662f 0) \u548c end (\u9ed8\u8ba4\u662f buffer.length)\u4f5c\u4e3a\u53d6\u503c\u8303\u56f4\u3002 15 buf.toJSON() \u5c06 Buffer \u5b9e\u4f8b\u8f6c\u6362\u4e3a JSON \u5bf9\u8c61\u3002 16 buf[index] \u83b7\u53d6\u6216\u8bbe\u7f6e\u6307\u5b9a\u7684\u5b57\u8282\u3002\u8fd4\u56de\u503c\u4ee3\u8868\u4e00\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5\u8fd4\u56de\u503c\u7684\u5408\u6cd5\u8303\u56f4\u662f\u5341\u516d\u8fdb\u52360x00\u52300xFF \u6216\u8005\u5341\u8fdb\u52360\u81f3 255\u3002 17 buf.equals(otherBuffer) \u6bd4\u8f83\u4e24\u4e2a\u7f13\u51b2\u533a\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u662f\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 18 buf.compare(otherBuffer) \u6bd4\u8f83\u4e24\u4e2a Buffer \u5bf9\u8c61\uff0c\u8fd4\u56de\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a buf \u5728 otherBuffer \u4e4b\u524d\uff0c\u4e4b\u540e\u6216\u76f8\u540c\u3002 19 buf.copy(targetBuffer[, targetStart[, sourceStart[, sourceEnd]]]) buffer \u62f7\u8d1d\uff0c\u6e90\u548c\u76ee\u6807\u53ef\u4ee5\u76f8\u540c\u3002 targetStart \u76ee\u6807\u5f00\u59cb\u504f\u79fb\u548c sourceStart \u6e90\u5f00\u59cb\u504f\u79fb\u9ed8\u8ba4\u90fd\u662f 0\u3002 sourceEnd \u6e90\u7ed3\u675f\u4f4d\u7f6e\u504f\u79fb\u9ed8\u8ba4\u662f\u6e90\u7684\u957f\u5ea6 buffer.length \u3002 20 buf.slice([start[, end]]) \u526a\u5207 Buffer \u5bf9\u8c61\uff0c\u6839\u636e start(\u9ed8\u8ba4\u662f 0 ) \u548c end (\u9ed8\u8ba4\u662f buffer.length ) \u504f\u79fb\u548c\u88c1\u526a\u4e86\u7d22\u5f15\u3002 \u8d1f\u7684\u7d22\u5f15\u662f\u4ece buffer \u5c3e\u90e8\u5f00\u59cb\u8ba1\u7b97\u7684\u3002 21 buf.readUInt8(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u8bfb\u53d6\u4e00\u4e2a\u65e0\u7b26\u53f7 8 \u4f4d\u6574\u6570\u3002\u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u5982\u679c\u8fd9\u6837 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 22 buf.readUInt16LE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u7279\u6b8a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u65e0\u7b26\u53f7 16 \u4f4d\u6574\u6570\u3002\u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 23 buf.readUInt16BE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u7279\u6b8a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u65e0\u7b26\u53f7 16 \u4f4d\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002\u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 24 buf.readUInt32LE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u65e0\u7b26\u53f7 32 \u4f4d\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 25 buf.readUInt32BE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u65e0\u7b26\u53f7 32 \u4f4d\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 26 buf.readInt8(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u8bfb\u53d6\u4e00\u4e2a\u6709\u7b26\u53f7 8 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 27 buf.readInt16LE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u7279\u6b8a\u7684 endian \u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a \u6709\u7b26\u53f7 16 \u4f4d\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 28 buf.readInt16BE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u7279\u6b8a\u7684 endian \u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a \u6709\u7b26\u53f7 16 \u4f4d\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 29 buf.readInt32LE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u6709\u7b26\u53f7 32 \u4f4d\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 30 buf.readInt32BE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u6709\u7b26\u53f7 32 \u4f4d\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 31 buf.readFloatLE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a 32 \u4f4d\u53cc\u6d6e\u70b9\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 32 buf.readFloatBE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a 32 \u4f4d\u53cc\u6d6e\u70b9\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 33 buf.readDoubleLE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian\u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a 64 \u4f4d\u53cc\u7cbe\u5ea6\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 34 buf.readDoubleBE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian\u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a 64 \u4f4d\u53cc\u7cbe\u5ea6\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 35 buf.writeUInt8(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65e0\u7b26\u53f7 8 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 36 buf.writeUInt16LE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65e0\u7b26\u53f7 16 \u4f4d\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 37 buf.writeUInt16BE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65e0\u7b26\u53f7 16 \u4f4d\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 38 buf.writeUInt32LE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f(LITTLE-ENDIAN:\u5c0f\u5b57\u8282\u5e8f)\u5c06 value \u5199\u5165buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65e0\u7b26\u53f7 32 \u4f4d\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005offset\u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 39 buf.writeUInt32BE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f(Big-Endian:\u5927\u5b57\u8282\u5e8f)\u5c06 value \u5199\u5165buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u6709\u7b26\u53f7 32 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005offset\u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 40 buf.writeInt8(value, offset[, noAssert]) 41 buf.writeInt16LE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 signed 16 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false \u3002 42 buf.writeInt16BE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 signed 16 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false \u3002 43 buf.writeInt32LE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 signed 32 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 44 buf.writeInt32BE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 signed 32 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 45 buf.writeFloatLE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer \u3002\u6ce8\u610f\uff1a\u5f53 value \u4e0d\u662f\u4e00\u4e2a 32 \u4f4d\u6d6e\u70b9\u6570\u7c7b\u578b\u7684\u503c\u65f6\uff0c\u7ed3\u679c\u5c06\u662f\u4e0d\u786e\u5b9a\u7684\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value\u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 46 buf.writeFloatBE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer \u3002\u6ce8\u610f\uff1a\u5f53 value \u4e0d\u662f\u4e00\u4e2a 32 \u4f4d\u6d6e\u70b9\u6570\u7c7b\u578b\u7684\u503c\u65f6\uff0c\u7ed3\u679c\u5c06\u662f\u4e0d\u786e\u5b9a\u7684\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value\u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 47 buf.writeDoubleLE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u7684 64 \u4f4ddouble \u7c7b\u578b\u7684\u503c\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210value\u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 48 buf.writeDoubleBE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u7684 64 \u4f4ddouble \u7c7b\u578b\u7684\u503c\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210value\u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 49 buf.fill(value[, offset][, end]) \u4f7f\u7528\u6307\u5b9a\u7684 value \u6765\u586b\u5145\u8fd9\u4e2a buffer\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a offset (\u9ed8\u8ba4\u662f 0) \u5e76\u4e14 end (\u9ed8\u8ba4\u662f buffer.length) \uff0c\u5c06\u4f1a\u586b\u5145\u6574\u4e2abuffer\u3002 Node.js EventEmitter Node.js Stream 2 \u7bc7\u7b14\u8bb0 \u5199\u7b14\u8bb0 \u00b6 \u66fe\u7ecf\u88ab\u72fc\u54ac xuj*** 1024612@163.com 27 buf.compare(otherBuffer); \u8fd9\u4e2a\u65b9\u6cd5\u662f\u6309\u4f4d\u6bd4\u8f83\u7684\u3002 buffer1.compare(buffer2) \uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u6309\u4f4d\u6bd4\u8f83\u7684\u3002 buffer1 \u7684\u7b2c\u4e00\u4f4d\u6bd4\u8f83 buffer2 \u7684\u7b2c\u4e00\u4f4d\uff0c\u76f8\u7b49\u7684\u8bdd\u6bd4\u8f83\u7b2c\u4e8c\u4f4d\u4ee5\u6b64\u7c7b\u63a8\u76f4\u5230\u5f97\u51fa\u7ed3\u679c\u3002 \u4e3e\u4f8b\uff1a var buffer1 = Buffer.from('ABCDEF99'); var buffer2 = Buffer.from('ABCDEF98765'); \u4e0a\u9762\u90a3\u4e2a buffer1 \u548c buffer2 \u6bd4\u8f83\u7684\u8bdd\uff0c result \u7684\u7ed3\u679c\u662f 1 \uff0c\u524d\u9762\u7684\u7ed3\u679c\u90fd\u662f\u76f8\u7b49\uff0c\u76f4\u5230\u6bd4\u8f83 9>8 \u7684\u65f6\u5019\u51fa\u7ed3\u679c\u3002\u6309\u4f4d\u9010\u4e00\u6bd4\u8f83\u76f4\u5230\u51fa\u7ed3\u679c\u3002 \u90a3\u4e48\u8bf4\u5982\u679c\u628a buffer1 \u8bbe\u4e3a 12313213121 \u8fd9\u79cd\u7eaf\u6570\u5b57\u5462\uff0c\u6570\u5b57\u548c\u5b57\u6bcd\u6bd4\u8f83\u7684\u7ed3\u679c\u5c31\u662f -1 \u3002 \u66fe\u7ecf\u88ab\u72fc\u54ac \u66fe\u7ecf\u88ab\u72fc\u54ac xuj***1024612@163.com2\u5e74\u524d (2018-07-20) martin 546*** 926@qq.com 43 buffer.slice(); \u88c1\u526a\u529f\u80fd\u8fd4\u56de\u7684\u5b9e\u9645\u662f\u539f\u59cb\u7f13\u5b58\u533a buffer \u6216\u8005\u4e00\u90e8\u5206\uff0c\u64cd\u4f5c\u7684\u662f\u4e0e\u539f\u59cb buffer \u540c\u4e00\u5757\u5185\u5b58\u533a\u57df\u3002 // \u88c1\u526a var buffer_origin = Buffer.from('runoob'); var buffer_slice = buffer_origin.slice(0,2); console.log(\"buffer slice content: \"+buffer_slice.toString()); console.log(\"buffer origin content: \"+buffer_origin.toString()); buffer_slice.write(\"wirte\"); // Write buffer slice // \u88c1\u526a\u524d\u4e0e\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u6539\u53d8 console.log(\"buffer slice content: \"+buffer_slice.toString()); console.log(\"buffer origin content: \"+buffer_origin.toString()); \u8f93\u51fa\uff1a buffer slice content: ru buffer origin content: runoob buffer slice content: wi buffer origin content: winoob \u53ef\u4ee5\u770b\u5230\u5bf9\u88c1\u526a\u8fd4\u56de\u7684 buffer \u8fdb\u884c\u5199\u64cd\u4f5c\u540c\u65f6\uff0c\u4e5f\u5bf9\u539f\u59cb buffer \u8fdb\u884c\u4e86\u5199\u64cd\u4f5c\u3002","title":"09-Node.js Buffer(\u7f13\u51b2\u533a)"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#nodejs-buffer","text":"JavaScript \u8bed\u8a00\u81ea\u8eab\u53ea\u6709\u5b57\u7b26\u4e32\u6570\u636e\u7c7b\u578b\uff0c\u6ca1\u6709\u4e8c\u8fdb\u5236\u6570\u636e\u7c7b\u578b\u3002 \u4f46\u5728\u5904\u7406\u50cfTCP\u6d41\u6216\u6587\u4ef6\u6d41\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528\u5230\u4e8c\u8fdb\u5236\u6570\u636e\u3002\u56e0\u6b64\u5728 Node.js\u4e2d\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2a Buffer \u7c7b\uff0c\u8be5\u7c7b\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u4e13\u95e8\u5b58\u653e\u4e8c\u8fdb\u5236\u6570\u636e\u7684\u7f13\u5b58\u533a\u3002 \u5728 Node.js \u4e2d\uff0cBuffer \u7c7b\u662f\u968f Node \u5185\u6838\u4e00\u8d77\u53d1\u5e03\u7684\u6838\u5fc3\u5e93\u3002Buffer \u5e93\u4e3a Node.js \u5e26\u6765\u4e86\u4e00\u79cd\u5b58\u50a8\u539f\u59cb\u6570\u636e\u7684\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8ba9 Node.js \u5904\u7406\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6bcf\u5f53\u9700\u8981\u5728 Node.js \u4e2d\u5904\u7406I/O\u64cd\u4f5c\u4e2d\u79fb\u52a8\u7684\u6570\u636e\u65f6\uff0c\u5c31\u6709\u53ef\u80fd\u4f7f\u7528 Buffer \u5e93\u3002\u539f\u59cb\u6570\u636e\u5b58\u50a8\u5728 Buffer \u7c7b\u7684\u5b9e\u4f8b\u4e2d\u3002\u4e00\u4e2a Buffer \u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u4f46\u5b83\u5bf9\u5e94\u4e8e V8 \u5806\u5185\u5b58\u4e4b\u5916\u7684\u4e00\u5757\u539f\u59cb\u5185\u5b58\u3002 \u5728v6.0\u4e4b\u524d\u521b\u5efaBuffer\u5bf9\u8c61\u76f4\u63a5\u4f7f\u7528new Buffer()\u6784\u9020\u51fd\u6570\u6765\u521b\u5efa\u5bf9\u8c61\u5b9e\u4f8b\uff0c\u4f46\u662fBuffer\u5bf9\u5185\u5b58\u7684\u6743\u9650\u64cd\u4f5c\u76f8\u6bd4\u5f88\u5927\uff0c\u53ef\u4ee5\u76f4\u63a5\u6355\u83b7\u4e00\u4e9b\u654f\u611f\u4fe1\u606f\uff0c\u6240\u4ee5\u5728v6.0\u4ee5\u540e\uff0c\u5b98\u65b9\u6587\u6863\u91cc\u9762\u5efa\u8bae\u4f7f\u7528 Buffer.from() \u63a5\u53e3\u53bb\u521b\u5efaBuffer\u5bf9\u8c61\u3002","title":"Node.js Buffer(\u7f13\u51b2\u533a)"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#buffer","text":"Buffer \u5b9e\u4f8b\u4e00\u822c\u7528\u4e8e\u8868\u793a\u7f16\u7801\u5b57\u7b26\u7684\u5e8f\u5217\uff0c\u6bd4\u5982 UTF-8 \u3001 UCS2 \u3001 Base64 \u3001\u6216\u5341\u516d\u8fdb\u5236\u7f16\u7801\u7684\u6570\u636e\u3002 \u901a\u8fc7\u4f7f\u7528\u663e\u5f0f\u7684\u5b57\u7b26\u7f16\u7801\uff0c\u5c31\u53ef\u4ee5\u5728 Buffer \u5b9e\u4f8b\u4e0e\u666e\u901a\u7684 JavaScript \u5b57\u7b26\u4e32\u4e4b\u95f4\u8fdb\u884c\u76f8\u4e92\u8f6c\u6362\u3002 const buf = Buffer.from('runoob', 'ascii'); // \u8f93\u51fa 72756e6f6f62 console.log(buf.toString('hex')); // \u8f93\u51fa cnVub29i console.log(buf.toString('base64')); Node.js \u76ee\u524d\u652f\u6301\u7684\u5b57\u7b26\u7f16\u7801\u5305\u62ec\uff1a ascii - \u4ec5\u652f\u6301 7 \u4f4d ASCII \u6570\u636e\u3002\u5982\u679c\u8bbe\u7f6e\u53bb\u6389\u9ad8\u4f4d\u7684\u8bdd\uff0c\u8fd9\u79cd\u7f16\u7801\u662f\u975e\u5e38\u5feb\u7684\u3002 utf8 - \u591a\u5b57\u8282\u7f16\u7801\u7684 Unicode \u5b57\u7b26\u3002\u8bb8\u591a\u7f51\u9875\u548c\u5176\u4ed6\u6587\u6863\u683c\u5f0f\u90fd\u4f7f\u7528 UTF-8 \u3002 utf16le - 2 \u6216 4 \u4e2a\u5b57\u8282\uff0c\u5c0f\u5b57\u8282\u5e8f\u7f16\u7801\u7684 Unicode \u5b57\u7b26\u3002\u652f\u6301\u4ee3\u7406\u5bf9\uff08U+10000 \u81f3 U+10FFFF\uff09\u3002 ucs2 - utf16le \u7684\u522b\u540d\u3002 base64 - Base64 \u7f16\u7801\u3002 latin1 - \u4e00\u79cd\u628a Buffer \u7f16\u7801\u6210\u4e00\u5b57\u8282\u7f16\u7801\u7684\u5b57\u7b26\u4e32\u7684\u65b9\u5f0f\u3002 binary - latin1 \u7684\u522b\u540d\u3002 hex - \u5c06\u6bcf\u4e2a\u5b57\u8282\u7f16\u7801\u4e3a\u4e24\u4e2a\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u3002","title":"Buffer \u4e0e\u5b57\u7b26\u7f16\u7801"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#buffer_1","text":"Buffer \u63d0\u4f9b\u4e86\u4ee5\u4e0b API \u6765\u521b\u5efa Buffer \u7c7b\uff1a Buffer.alloc(size[, fill[, encoding]])\uff1a \u8fd4\u56de\u4e00\u4e2a\u6307\u5b9a\u5927\u5c0f\u7684 Buffer \u5b9e\u4f8b\uff0c\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e fill\uff0c\u5219\u9ed8\u8ba4\u586b\u6ee1 0 Buffer.allocUnsafe(size)\uff1a \u8fd4\u56de\u4e00\u4e2a\u6307\u5b9a\u5927\u5c0f\u7684 Buffer \u5b9e\u4f8b\uff0c\u4f46\u662f\u5b83\u4e0d\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u6240\u4ee5\u5b83\u53ef\u80fd\u5305\u542b\u654f\u611f\u7684\u6570\u636e Buffer.allocUnsafeSlow(size) Buffer.from(array)\uff1a \u8fd4\u56de\u4e00\u4e2a\u88ab array \u7684\u503c\u521d\u59cb\u5316\u7684\u65b0\u7684 Buffer \u5b9e\u4f8b\uff08\u4f20\u5165\u7684 array \u7684\u5143\u7d20\u53ea\u80fd\u662f\u6570\u5b57\uff0c\u4e0d\u7136\u5c31\u4f1a\u81ea\u52a8\u88ab 0 \u8986\u76d6\uff09 Buffer.from(arrayBuffer[, byteOffset[, length]])\uff1a \u8fd4\u56de\u4e00\u4e2a\u65b0\u5efa\u7684\u4e0e\u7ed9\u5b9a\u7684 ArrayBuffer \u5171\u4eab\u540c\u4e00\u5185\u5b58\u7684 Buffer\u3002 Buffer.from(buffer)\uff1a \u590d\u5236\u4f20\u5165\u7684 Buffer \u5b9e\u4f8b\u7684\u6570\u636e\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 Buffer \u5b9e\u4f8b Buffer.from(string[, encoding])\uff1a \u8fd4\u56de\u4e00\u4e2a\u88ab string \u7684\u503c\u521d\u59cb\u5316\u7684\u65b0\u7684 Buffer \u5b9e\u4f8b // \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a 10\u3001\u4e14\u7528 0 \u586b\u5145\u7684 Buffer\u3002 const buf1 = Buffer.alloc(10); // \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a 10\u3001\u4e14\u7528 0x1 \u586b\u5145\u7684 Buffer\u3002 const buf2 = Buffer.alloc(10, 1); // \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a 10\u3001\u4e14\u672a\u521d\u59cb\u5316\u7684 Buffer\u3002 // \u8fd9\u4e2a\u65b9\u6cd5\u6bd4\u8c03\u7528 Buffer.alloc() \u66f4\u5feb\uff0c // \u4f46\u8fd4\u56de\u7684 Buffer \u5b9e\u4f8b\u53ef\u80fd\u5305\u542b\u65e7\u6570\u636e\uff0c // \u56e0\u6b64\u9700\u8981\u4f7f\u7528 fill() \u6216 write() \u91cd\u5199\u3002 const buf3 = Buffer.allocUnsafe(10); // \u521b\u5efa\u4e00\u4e2a\u5305\u542b [0x1, 0x2, 0x3] \u7684 Buffer\u3002 const buf4 = Buffer.from([1, 2, 3]); // \u521b\u5efa\u4e00\u4e2a\u5305\u542b UTF-8 \u5b57\u8282 [0x74, 0xc3, 0xa9, 0x73, 0x74] \u7684 Buffer\u3002 const buf5 = Buffer.from('t\u00e9st'); // \u521b\u5efa\u4e00\u4e2a\u5305\u542b Latin-1 \u5b57\u8282 [0x74, 0xe9, 0x73, 0x74] \u7684 Buffer\u3002 const buf6 = Buffer.from('t\u00e9st', 'latin1');","title":"\u521b\u5efa Buffer \u7c7b"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_1","text":"","title":"\u5199\u5165\u7f13\u51b2\u533a"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_2","text":"\u5199\u5165 Node \u7f13\u51b2\u533a\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a buf.write(string[, offset[, length]][, encoding])","title":"\u8bed\u6cd5"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_3","text":"\u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a string - \u5199\u5165\u7f13\u51b2\u533a\u7684\u5b57\u7b26\u4e32\u3002 offset - \u7f13\u51b2\u533a\u5f00\u59cb\u5199\u5165\u7684\u7d22\u5f15\u503c\uff0c\u9ed8\u8ba4\u4e3a 0 \u3002 length - \u5199\u5165\u7684\u5b57\u8282\u6570\uff0c\u9ed8\u8ba4\u4e3a buffer.length encoding - \u4f7f\u7528\u7684\u7f16\u7801\u3002\u9ed8\u8ba4\u4e3a 'utf8' \u3002 \u6839\u636e encoding \u7684\u5b57\u7b26\u7f16\u7801\u5199\u5165 string \u5230 buf \u4e2d\u7684 offset \u4f4d\u7f6e\u3002 length \u53c2\u6570\u662f\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u5982\u679c buf \u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u4fdd\u5b58\u6574\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u53ea\u4f1a\u5199\u5165 string \u7684\u4e00\u90e8\u5206\u3002 \u53ea\u90e8\u5206\u89e3\u7801\u7684\u5b57\u7b26\u4e0d\u4f1a\u88ab\u5199\u5165\u3002","title":"\u53c2\u6570"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_4","text":"\u8fd4\u56de\u5b9e\u9645\u5199\u5165\u7684\u5927\u5c0f\u3002\u5982\u679c buffer \u7a7a\u95f4\u4e0d\u8db3\uff0c \u5219\u53ea\u4f1a\u5199\u5165\u90e8\u5206\u5b57\u7b26\u4e32\u3002","title":"\u8fd4\u56de\u503c"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_5","text":"buf = Buffer.alloc(256); len = buf.write(\"www.runoob.com\"); console.log(\"\u5199\u5165\u5b57\u8282\u6570 : \"+ len); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $node main.js \u5199\u5165\u5b57\u8282\u6570 : 14","title":"\u5b9e\u4f8b"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_6","text":"","title":"\u4ece\u7f13\u51b2\u533a\u8bfb\u53d6\u6570\u636e"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_7","text":"\u8bfb\u53d6 Node \u7f13\u51b2\u533a\u6570\u636e\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a buf.toString([encoding[, start[, end]]])","title":"\u8bed\u6cd5"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_8","text":"\u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a encoding - \u4f7f\u7528\u7684\u7f16\u7801\u3002\u9ed8\u8ba4\u4e3a 'utf8' \u3002 start - \u6307\u5b9a\u5f00\u59cb\u8bfb\u53d6\u7684\u7d22\u5f15\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 0\u3002 end - \u7ed3\u675f\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u4e3a\u7f13\u51b2\u533a\u7684\u672b\u5c3e\u3002","title":"\u53c2\u6570"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_9","text":"\u89e3\u7801\u7f13\u51b2\u533a\u6570\u636e\u5e76\u4f7f\u7528\u6307\u5b9a\u7684\u7f16\u7801\u8fd4\u56de\u5b57\u7b26\u4e32\u3002","title":"\u8fd4\u56de\u503c"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_10","text":"buf = Buffer.alloc(26); for (var i = 0 ; i < 26 ; i++) { buf[i] = i + 97; } console.log( buf.toString('ascii')); // \u8f93\u51fa: abcdefghijklmnopqrstuvwxyz console.log( buf.toString('ascii',0,5)); //\u4f7f\u7528 'ascii' \u7f16\u7801, \u5e76\u8f93\u51fa: abcde console.log( buf.toString('utf8',0,5)); // \u4f7f\u7528 'utf8' \u7f16\u7801, \u5e76\u8f93\u51fa: abcde console.log( buf.toString(undefined,0,5)); // \u4f7f\u7528\u9ed8\u8ba4\u7684 'utf8' \u7f16\u7801, \u5e76\u8f93\u51fa: abcde \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $ node main.js abcdefghijklmnopqrstuvwxyz abcde abcde abcde","title":"\u5b9e\u4f8b"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#buffer-json","text":"","title":"\u5c06 Buffer \u8f6c\u6362\u4e3a JSON \u5bf9\u8c61"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_11","text":"\u5c06 Node Buffer \u8f6c\u6362\u4e3a JSON \u5bf9\u8c61\u7684\u51fd\u6570\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a buf.toJSON() \u5f53\u5b57\u7b26\u4e32\u5316\u4e00\u4e2a Buffer \u5b9e\u4f8b\u65f6\uff0c JSON.stringify() \u4f1a\u9690\u5f0f\u5730\u8c03\u7528\u8be5 toJSON() \u3002","title":"\u8bed\u6cd5"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_12","text":"\u8fd4\u56de JSON \u5bf9\u8c61\u3002","title":"\u8fd4\u56de\u503c"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_13","text":"const buf = Buffer.from([0x1, 0x2, 0x3, 0x4, 0x5]); const json = JSON.stringify(buf); // \u8f93\u51fa: {\"type\":\"Buffer\",\"data\":[1,2,3,4,5]} console.log(json); const copy = JSON.parse(json, (key, value) => { return value && value.type === 'Buffer' ? Buffer.from(value.data) : value; }); // \u8f93\u51fa: <Buffer 01 02 03 04 05> console.log(copy); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a {\"type\":\"Buffer\",\"data\":[1,2,3,4,5]} <Buffer 01 02 03 04 05>","title":"\u5b9e\u4f8b"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_14","text":"","title":"\u7f13\u51b2\u533a\u5408\u5e76"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_15","text":"Node \u7f13\u51b2\u533a\u5408\u5e76\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a Buffer.concat(list[, totalLength])","title":"\u8bed\u6cd5"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_16","text":"\u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a list - \u7528\u4e8e\u5408\u5e76\u7684 Buffer \u5bf9\u8c61\u6570\u7ec4\u5217\u8868\u3002 totalLength - \u6307\u5b9a\u5408\u5e76\u540eBuffer\u5bf9\u8c61\u7684\u603b\u957f\u5ea6\u3002","title":"\u53c2\u6570"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_17","text":"\u8fd4\u56de\u4e00\u4e2a\u591a\u4e2a\u6210\u5458\u5408\u5e76\u7684\u65b0 Buffer \u5bf9\u8c61\u3002","title":"\u8fd4\u56de\u503c"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_18","text":"var buffer1 = Buffer.from(('\u83dc\u9e1f\u6559\u7a0b')); var buffer2 = Buffer.from(('www.runoob.com')); var buffer3 = Buffer.concat([buffer1,buffer2]); console.log(\"buffer3 \u5185\u5bb9: \" + buffer3.toString()); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a buffer3 \u5185\u5bb9: \u83dc\u9e1f\u6559\u7a0bwww.runoob.com","title":"\u5b9e\u4f8b"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_19","text":"","title":"\u7f13\u51b2\u533a\u6bd4\u8f83"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_20","text":"Node Buffer \u6bd4\u8f83\u7684\u51fd\u6570\u8bed\u6cd5\u5982\u4e0b\u6240\u793a, \u8be5\u65b9\u6cd5\u5728 Node.js v0.12.2 \u7248\u672c\u5f15\u5165\uff1a buf.compare(otherBuffer);","title":"\u8bed\u6cd5"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_21","text":"\u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a otherBuffer - \u4e0e buf \u5bf9\u8c61\u6bd4\u8f83\u7684\u53e6\u5916\u4e00\u4e2a Buffer \u5bf9\u8c61\u3002","title":"\u53c2\u6570"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_22","text":"\u8fd4\u56de\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a buf \u5728 otherBuffer \u4e4b\u524d\uff0c\u4e4b\u540e\u6216\u76f8\u540c\u3002","title":"\u8fd4\u56de\u503c"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_23","text":"var buffer1 = Buffer.from('ABC'); var buffer2 = Buffer.from('ABCD'); var result = buffer1.compare(buffer2); if(result < 0) { console.log(buffer1 + \" \u5728 \" + buffer2 + \"\u4e4b\u524d\"); }else if(result == 0){ console.log(buffer1 + \" \u4e0e \" + buffer2 + \"\u76f8\u540c\"); }else { console.log(buffer1 + \" \u5728 \" + buffer2 + \"\u4e4b\u540e\"); } \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a ABC\u5728ABCD\u4e4b\u524d","title":"\u5b9e\u4f8b"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_24","text":"","title":"\u62f7\u8d1d\u7f13\u51b2\u533a"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_25","text":"Node \u7f13\u51b2\u533a\u62f7\u8d1d\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a buf.copy(targetBuffer[, targetStart[, sourceStart[, sourceEnd]]])","title":"\u8bed\u6cd5"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_26","text":"\u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a targetBuffer - \u8981\u62f7\u8d1d\u7684 Buffer \u5bf9\u8c61\u3002 targetStart - \u6570\u5b57, \u53ef\u9009, \u9ed8\u8ba4: 0 sourceStart - \u6570\u5b57, \u53ef\u9009, \u9ed8\u8ba4: 0 sourceEnd - \u6570\u5b57, \u53ef\u9009, \u9ed8\u8ba4: buffer.length","title":"\u53c2\u6570"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_27","text":"\u6ca1\u6709\u8fd4\u56de\u503c\u3002","title":"\u8fd4\u56de\u503c"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_28","text":"var buf1 = Buffer.from('abcdefghijkl'); var buf2 = Buffer.from('RUNOOB'); //\u5c06 buf2 \u63d2\u5165\u5230 buf1 \u6307\u5b9a\u4f4d\u7f6e\u4e0a buf2.copy(buf1, 2); console.log(buf1.toString()); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a abRUNOOBijkl","title":"\u5b9e\u4f8b"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_29","text":"Node \u7f13\u51b2\u533a\u88c1\u526a\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a buf.slice([start[, end]])","title":"\u7f13\u51b2\u533a\u88c1\u526a"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_30","text":"\u53c2\u6570\u63cf\u8ff0\u5982\u4e0b\uff1a start - \u6570\u5b57, \u53ef\u9009, \u9ed8\u8ba4: 0 end - \u6570\u5b57, \u53ef\u9009, \u9ed8\u8ba4: buffer.length","title":"\u53c2\u6570"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_31","text":"\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u7f13\u51b2\u533a\uff0c\u5b83\u548c\u65e7\u7f13\u51b2\u533a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\uff0c\u4f46\u662f\u4ece\u7d22\u5f15 start \u5230 end \u7684\u4f4d\u7f6e\u526a\u5207\u3002","title":"\u8fd4\u56de\u503c"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_32","text":"var buffer1 = Buffer.from('runoob'); // \u526a\u5207\u7f13\u51b2\u533a var buffer2 = buffer1.slice(0,2); console.log(\"buffer2 content: \" + buffer2.toString()); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a buffer2 content: ru","title":"\u5b9e\u4f8b"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_33","text":"","title":"\u7f13\u51b2\u533a\u957f\u5ea6"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_34","text":"Node \u7f13\u51b2\u533a\u957f\u5ea6\u8ba1\u7b97\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a buf.length;","title":"\u8bed\u6cd5"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_35","text":"\u8fd4\u56de Buffer \u5bf9\u8c61\u6240\u5360\u636e\u7684\u5185\u5b58\u957f\u5ea6\u3002","title":"\u8fd4\u56de\u503c"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_36","text":"var buffer = Buffer.from('www.runoob.com'); // \u7f13\u51b2\u533a\u957f\u5ea6 console.log(\"buffer length: \" + buffer.length); \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a buffer length: 14","title":"\u5b9e\u4f8b"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#_37","text":"\u4ee5\u4e0b\u5217\u51fa\u4e86 Node.js Buffer \u6a21\u5757\u5e38\u7528\u7684\u65b9\u6cd5\uff08\u6ce8\u610f\u6709\u4e9b\u65b9\u6cd5\u5728\u65e7\u7248\u672c\u662f\u6ca1\u6709\u7684\uff09\uff1a \u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 new Buffer(size) \u5206\u914d\u4e00\u4e2a\u65b0\u7684 size \u5927\u5c0f\u5355\u4f4d\u4e3a8\u4f4d\u5b57\u8282\u7684 buffer\u3002 \u6ce8\u610f, size \u5fc5\u987b\u5c0f\u4e8e kMaxLength\uff0c\u5426\u5219\uff0c\u5c06\u4f1a\u629b\u51fa\u5f02\u5e38 RangeError\u3002\u5e9f\u5f03\u7684: \u4f7f\u7528 Buffer.alloc() \u4ee3\u66ff\uff08\u6216 Buffer.allocUnsafe()\uff09\u3002 2 new Buffer(buffer) \u62f7\u8d1d\u53c2\u6570 buffer \u7684\u6570\u636e\u5230 Buffer \u5b9e\u4f8b\u3002\u5e9f\u5f03\u7684: \u4f7f\u7528 Buffer.from(buffer) \u4ee3\u66ff\u3002 3 new Buffer(str[, encoding]) \u5206\u914d\u4e00\u4e2a\u65b0\u7684 buffer \uff0c\u5176\u4e2d\u5305\u542b\u7740\u4f20\u5165\u7684 str \u5b57\u7b26\u4e32\u3002 encoding \u7f16\u7801\u65b9\u5f0f\u9ed8\u8ba4\u4e3a 'utf8'\u3002 \u5e9f\u5f03\u7684: \u4f7f\u7528 Buffer.from(string[, encoding]) \u4ee3\u66ff\u3002 4 buf.length \u8fd4\u56de\u8fd9\u4e2a buffer \u7684 bytes \u6570\u3002\u6ce8\u610f\u8fd9\u672a\u5fc5\u662f buffer \u91cc\u9762\u5185\u5bb9\u7684\u5927\u5c0f\u3002length \u662f buffer \u5bf9\u8c61\u6240\u5206\u914d\u7684\u5185\u5b58\u6570\uff0c\u5b83\u4e0d\u4f1a\u968f\u7740\u8fd9\u4e2a buffer \u5bf9\u8c61\u5185\u5bb9\u7684\u6539\u53d8\u800c\u6539\u53d8\u3002 5 buf.write(string[, offset[, length]][, encoding]) \u6839\u636e\u53c2\u6570 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 encoding \u7f16\u7801\u65b9\u5f0f\uff0c\u5c06\u53c2\u6570 string \u6570\u636e\u5199\u5165buffer\u3002 offset \u504f\u79fb\u91cf\u9ed8\u8ba4\u503c\u662f 0, encoding \u7f16\u7801\u65b9\u5f0f\u9ed8\u8ba4\u662f utf8\u3002 length \u957f\u5ea6\u662f\u5c06\u8981\u5199\u5165\u7684\u5b57\u7b26\u4e32\u7684 bytes \u5927\u5c0f\u3002 \u8fd4\u56de number \u7c7b\u578b\uff0c\u8868\u793a\u5199\u5165\u4e86\u591a\u5c11 8 \u4f4d\u5b57\u8282\u6d41\u3002\u5982\u679c buffer \u6ca1\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u6765\u653e\u6574\u4e2a string\uff0c\u5b83\u5c06\u53ea\u4f1a\u53ea\u5199\u5165\u90e8\u5206\u5b57\u7b26\u4e32\u3002 length \u9ed8\u8ba4\u662f buffer.length - offset\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u4f1a\u51fa\u73b0\u5199\u5165\u90e8\u5206\u5b57\u7b26\u3002 6 buf.writeUIntLE(value, offset, byteLength[, noAssert]) \u5c06 value \u5199\u5165\u5230 buffer \u91cc\uff0c \u5b83\u7531 offset \u548c byteLength \u51b3\u5b9a\uff0c\u6700\u9ad8\u652f\u6301 48 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\uff0c\u4f8b\u5982\uff1a const buf = Buffer.allocUnsafe(6); buf.writeUIntLE(0x1234567890ab, 0, 6); // \u8f93\u51fa: console.log(buf); noAssert \u503c\u4e3a true \u65f6\uff0c\u4e0d\u518d\u9a8c\u8bc1 value \u548c offset \u7684\u6709\u6548\u6027\u3002 \u9ed8\u8ba4\u662f false\u3002 7 buf.writeUIntBE(value, offset, byteLength[, noAssert]) \u5c06 value \u5199\u5165\u5230 buffer \u91cc\uff0c \u5b83\u7531 offset \u548c byteLength \u51b3\u5b9a\uff0c\u6700\u9ad8\u652f\u6301 48 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c\u4e0d\u518d\u9a8c\u8bc1 value \u548c offset \u7684\u6709\u6548\u6027\u3002 \u9ed8\u8ba4\u662f false\u3002 const buf = Buffer.allocUnsafe(6); buf.writeUIntBE(0x1234567890ab, 0, 6); // \u8f93\u51fa: console.log(buf); 8 buf.writeIntLE(value, offset, byteLength[, noAssert]) \u5c06value \u5199\u5165\u5230 buffer \u91cc\uff0c \u5b83\u7531offset \u548c byteLength \u51b3\u5b9a\uff0c\u6700\u9ad8\u652f\u630148\u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c\u4e0d\u518d\u9a8c\u8bc1 value \u548c offset \u7684\u6709\u6548\u6027\u3002 \u9ed8\u8ba4\u662f false\u3002 9 buf.writeIntBE(value, offset, byteLength[, noAssert]) \u5c06value \u5199\u5165\u5230 buffer \u91cc\uff0c \u5b83\u7531offset \u548c byteLength \u51b3\u5b9a\uff0c\u6700\u9ad8\u652f\u630148\u4f4d\u6709\u7b26\u53f7\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c\u4e0d\u518d\u9a8c\u8bc1 value \u548c offset \u7684\u6709\u6548\u6027\u3002 \u9ed8\u8ba4\u662f false\u3002 10 buf.readUIntLE(offset, byteLength[, noAssert]) \u652f\u6301\u8bfb\u53d6 48 \u4f4d\u4ee5\u4e0b\u7684\u65e0\u7b26\u53f7\u6570\u5b57\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c offset \u4e0d\u518d\u9a8c\u8bc1\u662f\u5426\u8d85\u8fc7 buffer \u7684\u957f\u5ea6\uff0c\u9ed8\u8ba4\u4e3a false\u3002 11 buf.readUIntBE(offset, byteLength[, noAssert]) \u652f\u6301\u8bfb\u53d6 48 \u4f4d\u4ee5\u4e0b\u7684\u65e0\u7b26\u53f7\u6570\u5b57\uff0c\u5927\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c offset \u4e0d\u518d\u9a8c\u8bc1\u662f\u5426\u8d85\u8fc7 buffer \u7684\u957f\u5ea6\uff0c\u9ed8\u8ba4\u4e3a false\u3002 12 buf.readIntLE(offset, byteLength[, noAssert]) \u652f\u6301\u8bfb\u53d6 48 \u4f4d\u4ee5\u4e0b\u7684\u6709\u7b26\u53f7\u6570\u5b57\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c offset \u4e0d\u518d\u9a8c\u8bc1\u662f\u5426\u8d85\u8fc7 buffer \u7684\u957f\u5ea6\uff0c\u9ed8\u8ba4\u4e3a false\u3002 13 buf.readIntBE(offset, byteLength[, noAssert]) \u652f\u6301\u8bfb\u53d6 48 \u4f4d\u4ee5\u4e0b\u7684\u6709\u7b26\u53f7\u6570\u5b57\uff0c\u5927\u7aef\u5bf9\u9f50\u3002noAssert \u503c\u4e3a true \u65f6\uff0c offset \u4e0d\u518d\u9a8c\u8bc1\u662f\u5426\u8d85\u8fc7 buffer \u7684\u957f\u5ea6\uff0c\u9ed8\u8ba4\u4e3a false\u3002 14 buf.toString([encoding[, start[, end]]]) \u6839\u636e encoding \u53c2\u6570\uff08\u9ed8\u8ba4\u662f 'utf8'\uff09\u8fd4\u56de\u4e00\u4e2a\u89e3\u7801\u8fc7\u7684 string \u7c7b\u578b\u3002\u8fd8\u4f1a\u6839\u636e\u4f20\u5165\u7684\u53c2\u6570 start (\u9ed8\u8ba4\u662f 0) \u548c end (\u9ed8\u8ba4\u662f buffer.length)\u4f5c\u4e3a\u53d6\u503c\u8303\u56f4\u3002 15 buf.toJSON() \u5c06 Buffer \u5b9e\u4f8b\u8f6c\u6362\u4e3a JSON \u5bf9\u8c61\u3002 16 buf[index] \u83b7\u53d6\u6216\u8bbe\u7f6e\u6307\u5b9a\u7684\u5b57\u8282\u3002\u8fd4\u56de\u503c\u4ee3\u8868\u4e00\u4e2a\u5b57\u8282\uff0c\u6240\u4ee5\u8fd4\u56de\u503c\u7684\u5408\u6cd5\u8303\u56f4\u662f\u5341\u516d\u8fdb\u52360x00\u52300xFF \u6216\u8005\u5341\u8fdb\u52360\u81f3 255\u3002 17 buf.equals(otherBuffer) \u6bd4\u8f83\u4e24\u4e2a\u7f13\u51b2\u533a\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u662f\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 18 buf.compare(otherBuffer) \u6bd4\u8f83\u4e24\u4e2a Buffer \u5bf9\u8c61\uff0c\u8fd4\u56de\u4e00\u4e2a\u6570\u5b57\uff0c\u8868\u793a buf \u5728 otherBuffer \u4e4b\u524d\uff0c\u4e4b\u540e\u6216\u76f8\u540c\u3002 19 buf.copy(targetBuffer[, targetStart[, sourceStart[, sourceEnd]]]) buffer \u62f7\u8d1d\uff0c\u6e90\u548c\u76ee\u6807\u53ef\u4ee5\u76f8\u540c\u3002 targetStart \u76ee\u6807\u5f00\u59cb\u504f\u79fb\u548c sourceStart \u6e90\u5f00\u59cb\u504f\u79fb\u9ed8\u8ba4\u90fd\u662f 0\u3002 sourceEnd \u6e90\u7ed3\u675f\u4f4d\u7f6e\u504f\u79fb\u9ed8\u8ba4\u662f\u6e90\u7684\u957f\u5ea6 buffer.length \u3002 20 buf.slice([start[, end]]) \u526a\u5207 Buffer \u5bf9\u8c61\uff0c\u6839\u636e start(\u9ed8\u8ba4\u662f 0 ) \u548c end (\u9ed8\u8ba4\u662f buffer.length ) \u504f\u79fb\u548c\u88c1\u526a\u4e86\u7d22\u5f15\u3002 \u8d1f\u7684\u7d22\u5f15\u662f\u4ece buffer \u5c3e\u90e8\u5f00\u59cb\u8ba1\u7b97\u7684\u3002 21 buf.readUInt8(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u8bfb\u53d6\u4e00\u4e2a\u65e0\u7b26\u53f7 8 \u4f4d\u6574\u6570\u3002\u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u5982\u679c\u8fd9\u6837 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 22 buf.readUInt16LE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u7279\u6b8a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u65e0\u7b26\u53f7 16 \u4f4d\u6574\u6570\u3002\u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 23 buf.readUInt16BE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u7279\u6b8a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u65e0\u7b26\u53f7 16 \u4f4d\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002\u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 24 buf.readUInt32LE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u65e0\u7b26\u53f7 32 \u4f4d\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 25 buf.readUInt32BE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u65e0\u7b26\u53f7 32 \u4f4d\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 26 buf.readInt8(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u8bfb\u53d6\u4e00\u4e2a\u6709\u7b26\u53f7 8 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 27 buf.readInt16LE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u7279\u6b8a\u7684 endian \u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a \u6709\u7b26\u53f7 16 \u4f4d\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 28 buf.readInt16BE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u7279\u6b8a\u7684 endian \u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a \u6709\u7b26\u53f7 16 \u4f4d\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 29 buf.readInt32LE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u6709\u7b26\u53f7 32 \u4f4d\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 30 buf.readInt32BE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a\u6709\u7b26\u53f7 32 \u4f4d\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 31 buf.readFloatLE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a 32 \u4f4d\u53cc\u6d6e\u70b9\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 32 buf.readFloatBE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian \u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a 32 \u4f4d\u53cc\u6d6e\u70b9\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 33 buf.readDoubleLE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian\u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a 64 \u4f4d\u53cc\u7cbe\u5ea6\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 34 buf.readDoubleBE(offset[, noAssert]) \u6839\u636e\u6307\u5b9a\u7684\u504f\u79fb\u91cf\uff0c\u4f7f\u7528\u6307\u5b9a\u7684 endian\u5b57\u8282\u5e8f\u683c\u5f0f\u8bfb\u53d6\u4e00\u4e2a 64 \u4f4d\u53cc\u7cbe\u5ea6\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer \u7684\u672b\u5c3e\u3002\u9ed8\u8ba4\u662f false\u3002 35 buf.writeUInt8(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65e0\u7b26\u53f7 8 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 36 buf.writeUInt16LE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65e0\u7b26\u53f7 16 \u4f4d\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 37 buf.writeUInt16BE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65e0\u7b26\u53f7 16 \u4f4d\u6574\u6570\uff0c\u5927\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 38 buf.writeUInt32LE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f(LITTLE-ENDIAN:\u5c0f\u5b57\u8282\u5e8f)\u5c06 value \u5199\u5165buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u65e0\u7b26\u53f7 32 \u4f4d\u6574\u6570\uff0c\u5c0f\u7aef\u5bf9\u9f50\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005offset\u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 39 buf.writeUInt32BE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f(Big-Endian:\u5927\u5b57\u8282\u5e8f)\u5c06 value \u5199\u5165buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u6709\u7b26\u53f7 32 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005offset\u53ef\u80fd\u4f1a\u8d85\u51fabuffer\u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 40 buf.writeInt8(value, offset[, noAssert]) 41 buf.writeInt16LE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 signed 16 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false \u3002 42 buf.writeInt16BE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 signed 16 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false \u3002 43 buf.writeInt32LE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 signed 32 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 44 buf.writeInt32BE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 signed 32 \u4f4d\u6574\u6570\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 45 buf.writeFloatLE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer \u3002\u6ce8\u610f\uff1a\u5f53 value \u4e0d\u662f\u4e00\u4e2a 32 \u4f4d\u6d6e\u70b9\u6570\u7c7b\u578b\u7684\u503c\u65f6\uff0c\u7ed3\u679c\u5c06\u662f\u4e0d\u786e\u5b9a\u7684\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value\u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 46 buf.writeFloatBE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer \u3002\u6ce8\u610f\uff1a\u5f53 value \u4e0d\u662f\u4e00\u4e2a 32 \u4f4d\u6d6e\u70b9\u6570\u7c7b\u578b\u7684\u503c\u65f6\uff0c\u7ed3\u679c\u5c06\u662f\u4e0d\u786e\u5b9a\u7684\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value\u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210 value \u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 47 buf.writeDoubleLE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u7684 64 \u4f4ddouble \u7c7b\u578b\u7684\u503c\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210value\u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 48 buf.writeDoubleBE(value, offset[, noAssert]) \u6839\u636e\u4f20\u5165\u7684 offset \u504f\u79fb\u91cf\u548c\u6307\u5b9a\u7684 endian \u683c\u5f0f\u5c06 value \u5199\u5165 buffer\u3002\u6ce8\u610f\uff1avalue \u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u7684 64 \u4f4ddouble \u7c7b\u578b\u7684\u503c\u3002 \u82e5\u53c2\u6570 noAssert \u4e3a true \u5c06\u4e0d\u4f1a\u9a8c\u8bc1 value \u548c offset \u504f\u79fb\u91cf\u53c2\u6570\u3002 \u8fd9\u610f\u5473\u7740 value \u53ef\u80fd\u8fc7\u5927\uff0c\u6216\u8005 offset \u53ef\u80fd\u4f1a\u8d85\u51fa buffer \u7684\u672b\u5c3e\u4ece\u800c\u9020\u6210value\u88ab\u4e22\u5f03\u3002 \u9664\u975e\u4f60\u5bf9\u8fd9\u4e2a\u53c2\u6570\u975e\u5e38\u6709\u628a\u63e1\uff0c\u5426\u5219\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u3002\u9ed8\u8ba4\u662f false\u3002 49 buf.fill(value[, offset][, end]) \u4f7f\u7528\u6307\u5b9a\u7684 value \u6765\u586b\u5145\u8fd9\u4e2a buffer\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a offset (\u9ed8\u8ba4\u662f 0) \u5e76\u4e14 end (\u9ed8\u8ba4\u662f buffer.length) \uff0c\u5c06\u4f1a\u586b\u5145\u6574\u4e2abuffer\u3002 Node.js EventEmitter Node.js Stream","title":"\u65b9\u6cd5\u53c2\u8003\u624b\u518c"},{"location":"nodejs/09-Node.js%20Buffer%28%E7%BC%93%E5%86%B2%E5%8C%BA%29/#2","text":"\u66fe\u7ecf\u88ab\u72fc\u54ac xuj*** 1024612@163.com 27 buf.compare(otherBuffer); \u8fd9\u4e2a\u65b9\u6cd5\u662f\u6309\u4f4d\u6bd4\u8f83\u7684\u3002 buffer1.compare(buffer2) \uff0c\u8fd9\u4e2a\u65b9\u6cd5\u662f\u6309\u4f4d\u6bd4\u8f83\u7684\u3002 buffer1 \u7684\u7b2c\u4e00\u4f4d\u6bd4\u8f83 buffer2 \u7684\u7b2c\u4e00\u4f4d\uff0c\u76f8\u7b49\u7684\u8bdd\u6bd4\u8f83\u7b2c\u4e8c\u4f4d\u4ee5\u6b64\u7c7b\u63a8\u76f4\u5230\u5f97\u51fa\u7ed3\u679c\u3002 \u4e3e\u4f8b\uff1a var buffer1 = Buffer.from('ABCDEF99'); var buffer2 = Buffer.from('ABCDEF98765'); \u4e0a\u9762\u90a3\u4e2a buffer1 \u548c buffer2 \u6bd4\u8f83\u7684\u8bdd\uff0c result \u7684\u7ed3\u679c\u662f 1 \uff0c\u524d\u9762\u7684\u7ed3\u679c\u90fd\u662f\u76f8\u7b49\uff0c\u76f4\u5230\u6bd4\u8f83 9>8 \u7684\u65f6\u5019\u51fa\u7ed3\u679c\u3002\u6309\u4f4d\u9010\u4e00\u6bd4\u8f83\u76f4\u5230\u51fa\u7ed3\u679c\u3002 \u90a3\u4e48\u8bf4\u5982\u679c\u628a buffer1 \u8bbe\u4e3a 12313213121 \u8fd9\u79cd\u7eaf\u6570\u5b57\u5462\uff0c\u6570\u5b57\u548c\u5b57\u6bcd\u6bd4\u8f83\u7684\u7ed3\u679c\u5c31\u662f -1 \u3002 \u66fe\u7ecf\u88ab\u72fc\u54ac \u66fe\u7ecf\u88ab\u72fc\u54ac xuj***1024612@163.com2\u5e74\u524d (2018-07-20) martin 546*** 926@qq.com 43 buffer.slice(); \u88c1\u526a\u529f\u80fd\u8fd4\u56de\u7684\u5b9e\u9645\u662f\u539f\u59cb\u7f13\u5b58\u533a buffer \u6216\u8005\u4e00\u90e8\u5206\uff0c\u64cd\u4f5c\u7684\u662f\u4e0e\u539f\u59cb buffer \u540c\u4e00\u5757\u5185\u5b58\u533a\u57df\u3002 // \u88c1\u526a var buffer_origin = Buffer.from('runoob'); var buffer_slice = buffer_origin.slice(0,2); console.log(\"buffer slice content: \"+buffer_slice.toString()); console.log(\"buffer origin content: \"+buffer_origin.toString()); buffer_slice.write(\"wirte\"); // Write buffer slice // \u88c1\u526a\u524d\u4e0e\u539f\u59cb\u5b57\u7b26\u4e32\u7684\u6539\u53d8 console.log(\"buffer slice content: \"+buffer_slice.toString()); console.log(\"buffer origin content: \"+buffer_origin.toString()); \u8f93\u51fa\uff1a buffer slice content: ru buffer origin content: runoob buffer slice content: wi buffer origin content: winoob \u53ef\u4ee5\u770b\u5230\u5bf9\u88c1\u526a\u8fd4\u56de\u7684 buffer \u8fdb\u884c\u5199\u64cd\u4f5c\u540c\u65f6\uff0c\u4e5f\u5bf9\u539f\u59cb buffer \u8fdb\u884c\u4e86\u5199\u64cd\u4f5c\u3002","title":"2 \u7bc7\u7b14\u8bb0 \u5199\u7b14\u8bb0"},{"location":"nodejs/10-Node.js%20Stream%28%E6%B5%81%29/","text":"Node.js Stream(\u6d41) \u00b6 Stream \u662f\u4e00\u4e2a\u62bd\u8c61\u63a5\u53e3\uff0cNode \u4e2d\u6709\u5f88\u591a\u5bf9\u8c61\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\u3002\u4f8b\u5982\uff0c\u5bf9http \u670d\u52a1\u5668\u53d1\u8d77\u8bf7\u6c42\u7684request \u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a Stream\uff0c\u8fd8\u6709stdout\uff08\u6807\u51c6\u8f93\u51fa\uff09\u3002 Node.js\uff0cStream \u6709\u56db\u79cd\u6d41\u7c7b\u578b\uff1a Readable - \u53ef\u8bfb\u64cd\u4f5c\u3002 Writable - \u53ef\u5199\u64cd\u4f5c\u3002 Duplex - \u53ef\u8bfb\u53ef\u5199\u64cd\u4f5c. Transform - \u64cd\u4f5c\u88ab\u5199\u5165\u6570\u636e\uff0c\u7136\u540e\u8bfb\u51fa\u7ed3\u679c\u3002 \u6240\u6709\u7684 Stream \u5bf9\u8c61\u90fd\u662f EventEmitter \u7684\u5b9e\u4f8b\u3002\u5e38\u7528\u7684\u4e8b\u4ef6\u6709\uff1a data - \u5f53\u6709\u6570\u636e\u53ef\u8bfb\u65f6\u89e6\u53d1\u3002 end - \u6ca1\u6709\u66f4\u591a\u7684\u6570\u636e\u53ef\u8bfb\u65f6\u89e6\u53d1\u3002 error - \u5728\u63a5\u6536\u548c\u5199\u5165\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\u65f6\u89e6\u53d1\u3002 finish - \u6240\u6709\u6570\u636e\u5df2\u88ab\u5199\u5165\u5230\u5e95\u5c42\u7cfb\u7edf\u65f6\u89e6\u53d1\u3002 \u672c\u6559\u7a0b\u4f1a\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5e38\u7528\u7684\u6d41\u64cd\u4f5c\u3002 \u4ece\u6d41\u4e2d\u8bfb\u53d6\u6570\u636e \u00b6 \u521b\u5efa input.txt \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u521b\u5efa main.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); var data = ''; // \u521b\u5efa\u53ef\u8bfb\u6d41 var readerStream = fs.createReadStream('input.txt'); // \u8bbe\u7f6e\u7f16\u7801\u4e3a utf8\u3002 readerStream.setEncoding('UTF8'); // \u5904\u7406\u6d41\u4e8b\u4ef6 --> data, end, and error readerStream.on('data', function(chunk) { data += chunk; }); readerStream.on('end',function(){ console.log(data); }); readerStream.on('error', function(err){ console.log(err.stack); }); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\"); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5 \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u5199\u5165\u6d41 \u00b6 \u521b\u5efa main.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); var data = '\u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com'; // \u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u5199\u5165\u7684\u6d41\uff0c\u5199\u5165\u5230\u6587\u4ef6 output.txt \u4e2d var writerStream = fs.createWriteStream('output.txt'); // \u4f7f\u7528 utf8 \u7f16\u7801\u5199\u5165\u6570\u636e writerStream.write(data,'UTF8'); // \u6807\u8bb0\u6587\u4ef6\u672b\u5c3e writerStream.end(); // \u5904\u7406\u6d41\u4e8b\u4ef6 --> data, end, and error writerStream.on('finish', function() { console.log(\"\u5199\u5165\u5b8c\u6210\u3002\"); }); writerStream.on('error', function(err){ console.log(err.stack); }); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\"); \u4ee5\u4e0a\u7a0b\u5e8f\u4f1a\u5c06 data \u53d8\u91cf\u7684\u6570\u636e\u5199\u5165\u5230 output.txt \u6587\u4ef6\u4e2d\u3002\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node main.js \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5 \u5199\u5165\u5b8c\u6210\u3002 \u67e5\u770b output.txt \u6587\u4ef6\u7684\u5185\u5bb9\uff1a $ cat output.txt \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u7ba1\u9053\u6d41 \u00b6 \u7ba1\u9053\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f93\u51fa\u6d41\u5230\u8f93\u5165\u6d41\u7684\u673a\u5236\u3002\u901a\u5e38\u6211\u4eec\u7528\u4e8e\u4ece\u4e00\u4e2a\u6d41\u4e2d\u83b7\u53d6\u6570\u636e\u5e76\u5c06\u6570\u636e\u4f20\u9012\u5230\u53e6\u5916\u4e00\u4e2a\u6d41\u4e2d\u3002 \u5982\u4e0a\u9762\u7684\u56fe\u7247\u6240\u793a\uff0c\u6211\u4eec\u628a\u6587\u4ef6\u6bd4\u4f5c\u88c5\u6c34\u7684\u6876\uff0c\u800c\u6c34\u5c31\u662f\u6587\u4ef6\u91cc\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u7528\u4e00\u6839\u7ba1\u5b50(pipe)\u8fde\u63a5\u4e24\u4e2a\u6876\u4f7f\u5f97\u6c34\u4ece\u4e00\u4e2a\u6876\u6d41\u5165\u53e6\u4e00\u4e2a\u6876\uff0c\u8fd9\u6837\u5c31\u6162\u6162\u7684\u5b9e\u73b0\u4e86\u5927\u6587\u4ef6\u7684\u590d\u5236\u8fc7\u7a0b\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u6211\u4eec\u901a\u8fc7\u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\u5185\u5bb9\u5e76\u5c06\u5185\u5bb9\u5199\u5165\u5230\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 \u8bbe\u7f6e input.txt \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u7ba1\u9053\u6d41\u64cd\u4f5c\u5b9e\u4f8b \u521b\u5efa main.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); // \u521b\u5efa\u4e00\u4e2a\u53ef\u8bfb\u6d41 var readerStream = fs.createReadStream('input.txt'); // \u521b\u5efa\u4e00\u4e2a\u53ef\u5199\u6d41 var writerStream = fs.createWriteStream('output.txt'); // \u7ba1\u9053\u8bfb\u5199\u64cd\u4f5c // \u8bfb\u53d6 input.txt \u6587\u4ef6\u5185\u5bb9\uff0c\u5e76\u5c06\u5185\u5bb9\u5199\u5165\u5230 output.txt \u6587\u4ef6\u4e2d readerStream.pipe(writerStream); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\"); \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node main.js \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5 \u67e5\u770b output.txt \u6587\u4ef6\u7684\u5185\u5bb9\uff1a $ cat output.txt \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u7ba1\u9053\u6d41\u64cd\u4f5c\u5b9e\u4f8b \u94fe\u5f0f\u6d41 \u00b6 \u94fe\u5f0f\u662f\u901a\u8fc7\u8fde\u63a5\u8f93\u51fa\u6d41\u5230\u53e6\u5916\u4e00\u4e2a\u6d41\u5e76\u521b\u5efa\u591a\u4e2a\u6d41\u64cd\u4f5c\u94fe\u7684\u673a\u5236\u3002\u94fe\u5f0f\u6d41\u4e00\u822c\u7528\u4e8e\u7ba1\u9053\u64cd\u4f5c\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u662f\u7528\u7ba1\u9053\u548c\u94fe\u5f0f\u6765\u538b\u7f29\u548c\u89e3\u538b\u6587\u4ef6\u3002 \u521b\u5efa compress.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); var zlib = require('zlib'); // \u538b\u7f29 input.txt \u6587\u4ef6\u4e3a input.txt.gz fs.createReadStream('input.txt') .pipe(zlib.createGzip()) .pipe(fs.createWriteStream('input.txt.gz')); console.log(\"\u6587\u4ef6\u538b\u7f29\u5b8c\u6210\u3002\"); \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node compress.js \u6587\u4ef6\u538b\u7f29\u5b8c\u6210\u3002 \u6267\u884c\u5b8c\u4ee5\u4e0a\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e86 input.txt \u7684\u538b\u7f29\u6587\u4ef6 input.txt.gz\u3002 \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6765\u89e3\u538b\u8be5\u6587\u4ef6\uff0c\u521b\u5efa decompress.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); var zlib = require('zlib'); // \u89e3\u538b input.txt.gz \u6587\u4ef6\u4e3a input.txt fs.createReadStream('input.txt.gz') .pipe(zlib.createGunzip()) .pipe(fs.createWriteStream('input.txt')); console.log(\"\u6587\u4ef6\u89e3\u538b\u5b8c\u6210\u3002\"); \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node decompress.js \u6587\u4ef6\u89e3\u538b\u5b8c\u6210\u3002","title":"10-Node.js Stream(\u6d41)"},{"location":"nodejs/10-Node.js%20Stream%28%E6%B5%81%29/#nodejs-stream","text":"Stream \u662f\u4e00\u4e2a\u62bd\u8c61\u63a5\u53e3\uff0cNode \u4e2d\u6709\u5f88\u591a\u5bf9\u8c61\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u63a5\u53e3\u3002\u4f8b\u5982\uff0c\u5bf9http \u670d\u52a1\u5668\u53d1\u8d77\u8bf7\u6c42\u7684request \u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a Stream\uff0c\u8fd8\u6709stdout\uff08\u6807\u51c6\u8f93\u51fa\uff09\u3002 Node.js\uff0cStream \u6709\u56db\u79cd\u6d41\u7c7b\u578b\uff1a Readable - \u53ef\u8bfb\u64cd\u4f5c\u3002 Writable - \u53ef\u5199\u64cd\u4f5c\u3002 Duplex - \u53ef\u8bfb\u53ef\u5199\u64cd\u4f5c. Transform - \u64cd\u4f5c\u88ab\u5199\u5165\u6570\u636e\uff0c\u7136\u540e\u8bfb\u51fa\u7ed3\u679c\u3002 \u6240\u6709\u7684 Stream \u5bf9\u8c61\u90fd\u662f EventEmitter \u7684\u5b9e\u4f8b\u3002\u5e38\u7528\u7684\u4e8b\u4ef6\u6709\uff1a data - \u5f53\u6709\u6570\u636e\u53ef\u8bfb\u65f6\u89e6\u53d1\u3002 end - \u6ca1\u6709\u66f4\u591a\u7684\u6570\u636e\u53ef\u8bfb\u65f6\u89e6\u53d1\u3002 error - \u5728\u63a5\u6536\u548c\u5199\u5165\u8fc7\u7a0b\u4e2d\u53d1\u751f\u9519\u8bef\u65f6\u89e6\u53d1\u3002 finish - \u6240\u6709\u6570\u636e\u5df2\u88ab\u5199\u5165\u5230\u5e95\u5c42\u7cfb\u7edf\u65f6\u89e6\u53d1\u3002 \u672c\u6559\u7a0b\u4f1a\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5e38\u7528\u7684\u6d41\u64cd\u4f5c\u3002","title":"Node.js Stream(\u6d41)"},{"location":"nodejs/10-Node.js%20Stream%28%E6%B5%81%29/#_1","text":"\u521b\u5efa input.txt \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u521b\u5efa main.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); var data = ''; // \u521b\u5efa\u53ef\u8bfb\u6d41 var readerStream = fs.createReadStream('input.txt'); // \u8bbe\u7f6e\u7f16\u7801\u4e3a utf8\u3002 readerStream.setEncoding('UTF8'); // \u5904\u7406\u6d41\u4e8b\u4ef6 --> data, end, and error readerStream.on('data', function(chunk) { data += chunk; }); readerStream.on('end',function(){ console.log(data); }); readerStream.on('error', function(err){ console.log(err.stack); }); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\"); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5 \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com","title":"\u4ece\u6d41\u4e2d\u8bfb\u53d6\u6570\u636e"},{"location":"nodejs/10-Node.js%20Stream%28%E6%B5%81%29/#_2","text":"\u521b\u5efa main.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); var data = '\u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com'; // \u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u5199\u5165\u7684\u6d41\uff0c\u5199\u5165\u5230\u6587\u4ef6 output.txt \u4e2d var writerStream = fs.createWriteStream('output.txt'); // \u4f7f\u7528 utf8 \u7f16\u7801\u5199\u5165\u6570\u636e writerStream.write(data,'UTF8'); // \u6807\u8bb0\u6587\u4ef6\u672b\u5c3e writerStream.end(); // \u5904\u7406\u6d41\u4e8b\u4ef6 --> data, end, and error writerStream.on('finish', function() { console.log(\"\u5199\u5165\u5b8c\u6210\u3002\"); }); writerStream.on('error', function(err){ console.log(err.stack); }); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\"); \u4ee5\u4e0a\u7a0b\u5e8f\u4f1a\u5c06 data \u53d8\u91cf\u7684\u6570\u636e\u5199\u5165\u5230 output.txt \u6587\u4ef6\u4e2d\u3002\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node main.js \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5 \u5199\u5165\u5b8c\u6210\u3002 \u67e5\u770b output.txt \u6587\u4ef6\u7684\u5185\u5bb9\uff1a $ cat output.txt \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com","title":"\u5199\u5165\u6d41"},{"location":"nodejs/10-Node.js%20Stream%28%E6%B5%81%29/#_3","text":"\u7ba1\u9053\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f93\u51fa\u6d41\u5230\u8f93\u5165\u6d41\u7684\u673a\u5236\u3002\u901a\u5e38\u6211\u4eec\u7528\u4e8e\u4ece\u4e00\u4e2a\u6d41\u4e2d\u83b7\u53d6\u6570\u636e\u5e76\u5c06\u6570\u636e\u4f20\u9012\u5230\u53e6\u5916\u4e00\u4e2a\u6d41\u4e2d\u3002 \u5982\u4e0a\u9762\u7684\u56fe\u7247\u6240\u793a\uff0c\u6211\u4eec\u628a\u6587\u4ef6\u6bd4\u4f5c\u88c5\u6c34\u7684\u6876\uff0c\u800c\u6c34\u5c31\u662f\u6587\u4ef6\u91cc\u7684\u5185\u5bb9\uff0c\u6211\u4eec\u7528\u4e00\u6839\u7ba1\u5b50(pipe)\u8fde\u63a5\u4e24\u4e2a\u6876\u4f7f\u5f97\u6c34\u4ece\u4e00\u4e2a\u6876\u6d41\u5165\u53e6\u4e00\u4e2a\u6876\uff0c\u8fd9\u6837\u5c31\u6162\u6162\u7684\u5b9e\u73b0\u4e86\u5927\u6587\u4ef6\u7684\u590d\u5236\u8fc7\u7a0b\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u6211\u4eec\u901a\u8fc7\u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\u5185\u5bb9\u5e76\u5c06\u5185\u5bb9\u5199\u5165\u5230\u53e6\u5916\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002 \u8bbe\u7f6e input.txt \u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u7ba1\u9053\u6d41\u64cd\u4f5c\u5b9e\u4f8b \u521b\u5efa main.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); // \u521b\u5efa\u4e00\u4e2a\u53ef\u8bfb\u6d41 var readerStream = fs.createReadStream('input.txt'); // \u521b\u5efa\u4e00\u4e2a\u53ef\u5199\u6d41 var writerStream = fs.createWriteStream('output.txt'); // \u7ba1\u9053\u8bfb\u5199\u64cd\u4f5c // \u8bfb\u53d6 input.txt \u6587\u4ef6\u5185\u5bb9\uff0c\u5e76\u5c06\u5185\u5bb9\u5199\u5165\u5230 output.txt \u6587\u4ef6\u4e2d readerStream.pipe(writerStream); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\"); \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node main.js \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5 \u67e5\u770b output.txt \u6587\u4ef6\u7684\u5185\u5bb9\uff1a $ cat output.txt \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u7ba1\u9053\u6d41\u64cd\u4f5c\u5b9e\u4f8b","title":"\u7ba1\u9053\u6d41"},{"location":"nodejs/10-Node.js%20Stream%28%E6%B5%81%29/#_4","text":"\u94fe\u5f0f\u662f\u901a\u8fc7\u8fde\u63a5\u8f93\u51fa\u6d41\u5230\u53e6\u5916\u4e00\u4e2a\u6d41\u5e76\u521b\u5efa\u591a\u4e2a\u6d41\u64cd\u4f5c\u94fe\u7684\u673a\u5236\u3002\u94fe\u5f0f\u6d41\u4e00\u822c\u7528\u4e8e\u7ba1\u9053\u64cd\u4f5c\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u662f\u7528\u7ba1\u9053\u548c\u94fe\u5f0f\u6765\u538b\u7f29\u548c\u89e3\u538b\u6587\u4ef6\u3002 \u521b\u5efa compress.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); var zlib = require('zlib'); // \u538b\u7f29 input.txt \u6587\u4ef6\u4e3a input.txt.gz fs.createReadStream('input.txt') .pipe(zlib.createGzip()) .pipe(fs.createWriteStream('input.txt.gz')); console.log(\"\u6587\u4ef6\u538b\u7f29\u5b8c\u6210\u3002\"); \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node compress.js \u6587\u4ef6\u538b\u7f29\u5b8c\u6210\u3002 \u6267\u884c\u5b8c\u4ee5\u4e0a\u64cd\u4f5c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\u751f\u6210\u4e86 input.txt \u7684\u538b\u7f29\u6587\u4ef6 input.txt.gz\u3002 \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6765\u89e3\u538b\u8be5\u6587\u4ef6\uff0c\u521b\u5efa decompress.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); var zlib = require('zlib'); // \u89e3\u538b input.txt.gz \u6587\u4ef6\u4e3a input.txt fs.createReadStream('input.txt.gz') .pipe(zlib.createGunzip()) .pipe(fs.createWriteStream('input.txt')); console.log(\"\u6587\u4ef6\u89e3\u538b\u5b8c\u6210\u3002\"); \u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node decompress.js \u6587\u4ef6\u89e3\u538b\u5b8c\u6210\u3002","title":"\u94fe\u5f0f\u6d41"},{"location":"nodejs/11-Node.js%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F/","text":"Node.js\u6a21\u5757\u7cfb\u7edf \u00b6 \u4e3a\u4e86\u8ba9Node.js\u7684\u6587\u4ef6\u53ef\u4ee5\u76f8\u4e92\u8c03\u7528\uff0cNode.js\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u5757\u7cfb\u7edf\u3002 \u6a21\u5757\u662fNode.js \u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff0c\u6587\u4ef6\u548c\u6a21\u5757\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u6362\u8a00\u4e4b\uff0c\u4e00\u4e2a Node.js \u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u80fd\u662fJavaScript \u4ee3\u7801\u3001JSON \u6216\u8005\u7f16\u8bd1\u8fc7\u7684C/C++ \u6269\u5c55\u3002 \u521b\u5efa\u6a21\u5757 \u00b6 \u5728 Node.js \u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u6a21\u5757\u975e\u5e38\u7b80\u5355\uff0c\u5982\u4e0b\u6211\u4eec\u521b\u5efa\u4e00\u4e2a main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b: var hello = require('./hello'); hello.world(); \u4ee5\u4e0a\u5b9e\u4f8b\u4e2d\uff0c\u4ee3\u7801 require('./hello') \u5f15\u5165\u4e86\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 hello.js \u6587\u4ef6\uff08./ \u4e3a\u5f53\u524d\u76ee\u5f55\uff0cnode.js \u9ed8\u8ba4\u540e\u7f00\u4e3a js\uff09\u3002 Node.js \u63d0\u4f9b\u4e86 exports \u548c require \u4e24\u4e2a\u5bf9\u8c61\uff0c\u5176\u4e2d exports \u662f\u6a21\u5757\u516c\u5f00\u7684\u63a5\u53e3\uff0crequire \u7528\u4e8e\u4ece\u5916\u90e8\u83b7\u53d6\u4e00\u4e2a\u6a21\u5757\u7684\u63a5\u53e3\uff0c\u5373\u6240\u83b7\u53d6\u6a21\u5757\u7684 exports \u5bf9\u8c61\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u521b\u5efa hello.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a exports.world = function() { console.log('Hello World'); } \u5728\u4ee5\u4e0a\u793a\u4f8b\u4e2d\uff0chello.js \u901a\u8fc7 exports \u5bf9\u8c61\u628a world \u4f5c\u4e3a\u6a21\u5757\u7684\u8bbf\u95ee\u63a5\u53e3\uff0c\u5728 main.js \u4e2d\u901a\u8fc7 require('./hello') \u52a0\u8f7d\u8fd9\u4e2a\u6a21\u5757\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u8bbf \u95ee hello.js \u4e2d exports \u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u4e86\u3002 \u6709\u65f6\u5019\u6211\u4eec\u53ea\u662f\u60f3\u628a\u4e00\u4e2a\u5bf9\u8c61\u5c01\u88c5\u5230\u6a21\u5757\u4e2d\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a module.exports = function() { // ... } \u4f8b\u5982: //hello.js function Hello() { var name; this.setName = function(thyName) { name = thyName; }; this.sayHello = function() { console.log('Hello ' + name); }; }; module.exports = Hello; \u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u83b7\u5f97\u8fd9\u4e2a\u5bf9\u8c61\u4e86\uff1a //main.js var Hello = require('./hello'); hello = new Hello(); hello.setName('BYVoid'); hello.sayHello(); \u6a21\u5757\u63a5\u53e3\u7684\u552f\u4e00\u53d8\u5316\u662f\u4f7f\u7528 module.exports = Hello \u4ee3\u66ff\u4e86exports.world = function(){}\u3002 \u5728\u5916\u90e8\u5f15\u7528\u8be5\u6a21\u5757\u65f6\uff0c\u5176\u63a5\u53e3\u5bf9\u8c61\u5c31\u662f\u8981\u8f93\u51fa\u7684 Hello \u5bf9\u8c61\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u539f\u5148\u7684 exports\u3002 \u670d\u52a1\u7aef\u7684\u6a21\u5757\u653e\u5728\u54ea\u91cc \u00b6 \u4e5f\u8bb8\u4f60\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u6a21\u5757\u4e86\u3002\u50cf\u8fd9\u6837\uff1a var http = require(\"http\"); ... http.createServer(...); Node.js \u4e2d\u81ea\u5e26\u4e86\u4e00\u4e2a\u53eb\u505a http \u7684\u6a21\u5757\uff0c\u6211\u4eec\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u8bf7\u6c42\u5b83\u5e76\u628a\u8fd4\u56de\u503c\u8d4b\u7ed9\u4e00\u4e2a\u672c\u5730\u53d8\u91cf\u3002 \u8fd9\u628a\u6211\u4eec\u7684\u672c\u5730\u53d8\u91cf\u53d8\u6210\u4e86\u4e00\u4e2a\u62e5\u6709\u6240\u6709 http \u6a21\u5757\u6240\u63d0\u4f9b\u7684\u516c\u5171\u65b9\u6cd5\u7684\u5bf9\u8c61\u3002 Node.js \u7684 require \u65b9\u6cd5\u4e2d\u7684\u6587\u4ef6\u67e5\u627e\u7b56\u7565\u5982\u4e0b\uff1a \u7531\u4e8e Node.js \u4e2d\u5b58\u5728 4 \u7c7b\u6a21\u5757\uff08\u539f\u751f\u6a21\u5757\u548c3\u79cd\u6587\u4ef6\u6a21\u5757\uff09\uff0c\u5c3d\u7ba1 require \u65b9\u6cd5\u6781\u5176\u7b80\u5355\uff0c\u4f46\u662f\u5185\u90e8\u7684\u52a0\u8f7d\u5374\u662f\u5341\u5206\u590d\u6742\u7684\uff0c\u5176\u52a0\u8f7d\u4f18\u5148\u7ea7\u4e5f\u5404\u81ea\u4e0d\u540c\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4ece\u6587\u4ef6\u6a21\u5757\u7f13\u5b58\u4e2d\u52a0\u8f7d \u00b6 \u5c3d\u7ba1\u539f\u751f\u6a21\u5757\u4e0e\u6587\u4ef6\u6a21\u5757\u7684\u4f18\u5148\u7ea7\u4e0d\u540c\uff0c\u4f46\u662f\u90fd\u4f1a\u4f18\u5148\u4ece\u6587\u4ef6\u6a21\u5757\u7684\u7f13\u5b58\u4e2d\u52a0\u8f7d\u5df2\u7ecf\u5b58\u5728\u7684\u6a21\u5757\u3002 \u4ece\u539f\u751f\u6a21\u5757\u52a0\u8f7d \u00b6 \u539f\u751f\u6a21\u5757\u7684\u4f18\u5148\u7ea7\u4ec5\u6b21\u4e8e\u6587\u4ef6\u6a21\u5757\u7f13\u5b58\u7684\u4f18\u5148\u7ea7\u3002require \u65b9\u6cd5\u5728\u89e3\u6790\u6587\u4ef6\u540d\u4e4b\u540e\uff0c\u4f18\u5148\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5728\u539f\u751f\u6a21\u5757\u5217\u8868\u4e2d\u3002\u4ee5http\u6a21\u5757\u4e3a\u4f8b\uff0c\u5c3d\u7ba1\u5728\u76ee\u5f55\u4e0b\u5b58\u5728\u4e00\u4e2a http/http.js/http.node/http.json \u6587\u4ef6\uff0crequire(\"http\") \u90fd\u4e0d\u4f1a\u4ece\u8fd9\u4e9b\u6587\u4ef6\u4e2d\u52a0\u8f7d\uff0c\u800c\u662f\u4ece\u539f\u751f\u6a21\u5757\u4e2d\u52a0\u8f7d\u3002 \u539f\u751f\u6a21\u5757\u4e5f\u6709\u4e00\u4e2a\u7f13\u5b58\u533a\uff0c\u540c\u6837\u4e5f\u662f\u4f18\u5148\u4ece\u7f13\u5b58\u533a\u52a0\u8f7d\u3002\u5982\u679c\u7f13\u5b58\u533a\u6ca1\u6709\u88ab\u52a0\u8f7d\u8fc7\uff0c\u5219\u8c03\u7528\u539f\u751f\u6a21\u5757\u7684\u52a0\u8f7d\u65b9\u5f0f\u8fdb\u884c\u52a0\u8f7d\u548c\u6267\u884c\u3002 \u4ece\u6587\u4ef6\u52a0\u8f7d \u00b6 \u5f53\u6587\u4ef6\u6a21\u5757\u7f13\u5b58\u4e2d\u4e0d\u5b58\u5728\uff0c\u800c\u4e14\u4e0d\u662f\u539f\u751f\u6a21\u5757\u7684\u65f6\u5019\uff0cNode.js \u4f1a\u89e3\u6790 require \u65b9\u6cd5\u4f20\u5165\u7684\u53c2\u6570\uff0c\u5e76\u4ece\u6587\u4ef6\u7cfb\u7edf\u4e2d\u52a0\u8f7d\u5b9e\u9645\u7684\u6587\u4ef6\uff0c\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\u7684\u5305\u88c5\u548c\u7f16\u8bd1\u7ec6\u8282\u5728\u524d\u4e00\u8282\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u8be6\u7ec6\u63cf\u8ff0\u67e5\u627e\u6587\u4ef6\u6a21\u5757\u7684\u8fc7\u7a0b\uff0c\u5176\u4e2d\uff0c\u4e5f\u6709\u4e00\u4e9b\u7ec6\u8282\u503c\u5f97\u77e5\u6653\u3002 require\u65b9\u6cd5\u63a5\u53d7\u4ee5\u4e0b\u51e0\u79cd\u53c2\u6570\u7684\u4f20\u9012\uff1a http\u3001fs\u3001path\u7b49\uff0c\u539f\u751f\u6a21\u5757\u3002 ./mod\u6216../mod\uff0c\u76f8\u5bf9\u8def\u5f84\u7684\u6587\u4ef6\u6a21\u5757\u3002 /pathtomodule/mod\uff0c\u7edd\u5bf9\u8def\u5f84\u7684\u6587\u4ef6\u6a21\u5757\u3002 mod\uff0c\u975e\u539f\u751f\u6a21\u5757\u7684\u6587\u4ef6\u6a21\u5757\u3002 \u5728\u8def\u5f84 Y \u4e0b\u6267\u884c require(X) \u8bed\u53e5\u6267\u884c\u987a\u5e8f\uff1a 1. \u5982\u679c X \u662f\u5185\u7f6e\u6a21\u5757 a. \u8fd4\u56de\u5185\u7f6e\u6a21\u5757 b. \u505c\u6b62\u6267\u884c 2. \u5982\u679c X \u4ee5 '/' \u5f00\u5934 a. \u8bbe\u7f6e Y \u4e3a\u6587\u4ef6\u6839\u8def\u5f84 3. \u5982\u679c X \u4ee5 './' \u6216 '/' or '../' \u5f00\u5934 a. LOAD_AS_FILE(Y + X) b. LOAD_AS_DIRECTORY(Y + X) 4. LOAD_NODE_MODULES(X, dirname(Y)) 5. \u629b\u51fa\u5f02\u5e38 \"not found\" LOAD_AS_FILE(X) 1. \u5982\u679c X \u662f\u4e00\u4e2a\u6587\u4ef6, \u5c06 X \u4f5c\u4e3a JavaScript \u6587\u672c\u8f7d\u5165\u5e76\u505c\u6b62\u6267\u884c\u3002 2. \u5982\u679c X.js \u662f\u4e00\u4e2a\u6587\u4ef6, \u5c06 X.js \u4f5c\u4e3a JavaScript \u6587\u672c\u8f7d\u5165\u5e76\u505c\u6b62\u6267\u884c\u3002 3. \u5982\u679c X.json \u662f\u4e00\u4e2a\u6587\u4ef6, \u89e3\u6790 X.json \u4e3a JavaScript \u5bf9\u8c61\u5e76\u505c\u6b62\u6267\u884c\u3002 4. \u5982\u679c X.node \u662f\u4e00\u4e2a\u6587\u4ef6, \u5c06 X.node \u4f5c\u4e3a\u4e8c\u8fdb\u5236\u63d2\u4ef6\u8f7d\u5165\u5e76\u505c\u6b62\u6267\u884c\u3002 LOAD_INDEX(X) 1. \u5982\u679c X/index.js \u662f\u4e00\u4e2a\u6587\u4ef6, \u5c06 X/index.js \u4f5c\u4e3a JavaScript \u6587\u672c\u8f7d\u5165\u5e76\u505c\u6b62\u6267\u884c\u3002 2. \u5982\u679c X/index.json \u662f\u4e00\u4e2a\u6587\u4ef6, \u89e3\u6790 X/index.json \u4e3a JavaScript \u5bf9\u8c61\u5e76\u505c\u6b62\u6267\u884c\u3002 3. \u5982\u679c X/index.node \u662f\u4e00\u4e2a\u6587\u4ef6, \u5c06 X/index.node \u4f5c\u4e3a\u4e8c\u8fdb\u5236\u63d2\u4ef6\u8f7d\u5165\u5e76\u505c\u6b62\u6267\u884c\u3002 LOAD_AS_DIRECTORY(X) 1. \u5982\u679c X/package.json \u662f\u4e00\u4e2a\u6587\u4ef6, a. \u89e3\u6790 X/package.json, \u5e76\u67e5\u627e \"main\" \u5b57\u6bb5\u3002 b. let M = X + (json main \u5b57\u6bb5) c. LOAD_AS_FILE(M) d. LOAD_INDEX(M) 2. LOAD_INDEX(X) LOAD_NODE_MODULES(X, START) 1. let DIRS=NODE_MODULES_PATHS(START) 2. for each DIR in DIRS: a. LOAD_AS_FILE(DIR/X) b. LOAD_AS_DIRECTORY(DIR/X) NODE_MODULES_PATHS(START) 1. let PARTS = path split(START) 2. let I = count of PARTS - 1 3. let DIRS = [] 4. while I >= 0, a. if PARTS[I] = \"node_modules\" CONTINUE b. DIR = path join(PARTS[0 .. I] + \"node_modules\") c. DIRS = DIRS + DIR d. let I = I - 1 5. return DIRS exports \u548c module.exports \u7684\u4f7f\u7528 \u5982\u679c\u8981\u5bf9\u5916\u66b4\u9732\u5c5e\u6027\u6216\u65b9\u6cd5\uff0c\u5c31\u7528 exports \u5c31\u884c\uff0c\u8981\u66b4\u9732\u5bf9\u8c61(\u7c7b\u4f3cclass\uff0c\u5305\u542b\u4e86\u5f88\u591a\u5c5e\u6027\u548c\u65b9\u6cd5)\uff0c\u5c31\u7528 module.exports \u3002 Node.js Stream Node.js \u51fd\u6570 1 \u7bc7\u7b14\u8bb0 \u5199\u7b14\u8bb0 \u00b6 mapbar_front 619*** 632@qq.com 30 \u4e0d\u5efa\u8bae\u540c\u65f6\u4f7f\u7528 exports \u548c module.exports\u3002 \u5982\u679c\u5148\u4f7f\u7528 exports \u5bf9\u5916\u66b4\u9732\u5c5e\u6027\u6216\u65b9\u6cd5\uff0c\u518d\u4f7f\u7528 module.exports \u66b4\u9732\u5bf9\u8c61\uff0c\u4f1a\u4f7f\u5f97 exports \u4e0a\u66b4\u9732\u7684\u5c5e\u6027\u6216\u8005\u65b9\u6cd5\u5931\u6548\u3002 \u539f\u56e0\u5728\u4e8e\uff0cexports \u4ec5\u4ec5\u662f module.exports \u7684\u4e00\u4e2a\u5f15\u7528\u3002\u5728 nodejs \u4e2d\uff0c\u662f\u8fd9\u4e48\u8bbe\u8ba1 require \u51fd\u6570\u7684\uff1a function require(...){ var module = {exports: {}}; ((module, exports) => { function myfn () {} // \u8fd9\u4e2amyfn\u5c31\u662f\u6211\u4eec\u81ea\u5df1\u7684\u4ee3\u7801 exports.myfn = myfn; // \u8fd9\u91cc\u662f\u5728\u539f\u672c\u7684\u5bf9\u8c61\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2amyfn\u65b9\u6cd5\u3002 module.exports = myfn;// \u8fd9\u4e2a\u76f4\u63a5\u628a\u5f53\u521d\u7684\u5bf9\u8c61\u8fdb\u884c\u8986\u76d6\u3002 })(module,module.exports) return module.exports; } mapbar_front mapbar_front 619***632@qq.com2\u4e2a\u6708\u524d (02-09)","title":"11-Node.js\u6a21\u5757\u7cfb\u7edf"},{"location":"nodejs/11-Node.js%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F/#nodejs","text":"\u4e3a\u4e86\u8ba9Node.js\u7684\u6587\u4ef6\u53ef\u4ee5\u76f8\u4e92\u8c03\u7528\uff0cNode.js\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6a21\u5757\u7cfb\u7edf\u3002 \u6a21\u5757\u662fNode.js \u5e94\u7528\u7a0b\u5e8f\u7684\u57fa\u672c\u7ec4\u6210\u90e8\u5206\uff0c\u6587\u4ef6\u548c\u6a21\u5757\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\u3002\u6362\u8a00\u4e4b\uff0c\u4e00\u4e2a Node.js \u6587\u4ef6\u5c31\u662f\u4e00\u4e2a\u6a21\u5757\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u80fd\u662fJavaScript \u4ee3\u7801\u3001JSON \u6216\u8005\u7f16\u8bd1\u8fc7\u7684C/C++ \u6269\u5c55\u3002","title":"Node.js\u6a21\u5757\u7cfb\u7edf"},{"location":"nodejs/11-Node.js%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F/#_1","text":"\u5728 Node.js \u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u6a21\u5757\u975e\u5e38\u7b80\u5355\uff0c\u5982\u4e0b\u6211\u4eec\u521b\u5efa\u4e00\u4e2a main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b: var hello = require('./hello'); hello.world(); \u4ee5\u4e0a\u5b9e\u4f8b\u4e2d\uff0c\u4ee3\u7801 require('./hello') \u5f15\u5165\u4e86\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 hello.js \u6587\u4ef6\uff08./ \u4e3a\u5f53\u524d\u76ee\u5f55\uff0cnode.js \u9ed8\u8ba4\u540e\u7f00\u4e3a js\uff09\u3002 Node.js \u63d0\u4f9b\u4e86 exports \u548c require \u4e24\u4e2a\u5bf9\u8c61\uff0c\u5176\u4e2d exports \u662f\u6a21\u5757\u516c\u5f00\u7684\u63a5\u53e3\uff0crequire \u7528\u4e8e\u4ece\u5916\u90e8\u83b7\u53d6\u4e00\u4e2a\u6a21\u5757\u7684\u63a5\u53e3\uff0c\u5373\u6240\u83b7\u53d6\u6a21\u5757\u7684 exports \u5bf9\u8c61\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u5c31\u6765\u521b\u5efa hello.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a exports.world = function() { console.log('Hello World'); } \u5728\u4ee5\u4e0a\u793a\u4f8b\u4e2d\uff0chello.js \u901a\u8fc7 exports \u5bf9\u8c61\u628a world \u4f5c\u4e3a\u6a21\u5757\u7684\u8bbf\u95ee\u63a5\u53e3\uff0c\u5728 main.js \u4e2d\u901a\u8fc7 require('./hello') \u52a0\u8f7d\u8fd9\u4e2a\u6a21\u5757\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u76f4\u63a5\u8bbf \u95ee hello.js \u4e2d exports \u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u4e86\u3002 \u6709\u65f6\u5019\u6211\u4eec\u53ea\u662f\u60f3\u628a\u4e00\u4e2a\u5bf9\u8c61\u5c01\u88c5\u5230\u6a21\u5757\u4e2d\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a module.exports = function() { // ... } \u4f8b\u5982: //hello.js function Hello() { var name; this.setName = function(thyName) { name = thyName; }; this.sayHello = function() { console.log('Hello ' + name); }; }; module.exports = Hello; \u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u83b7\u5f97\u8fd9\u4e2a\u5bf9\u8c61\u4e86\uff1a //main.js var Hello = require('./hello'); hello = new Hello(); hello.setName('BYVoid'); hello.sayHello(); \u6a21\u5757\u63a5\u53e3\u7684\u552f\u4e00\u53d8\u5316\u662f\u4f7f\u7528 module.exports = Hello \u4ee3\u66ff\u4e86exports.world = function(){}\u3002 \u5728\u5916\u90e8\u5f15\u7528\u8be5\u6a21\u5757\u65f6\uff0c\u5176\u63a5\u53e3\u5bf9\u8c61\u5c31\u662f\u8981\u8f93\u51fa\u7684 Hello \u5bf9\u8c61\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u539f\u5148\u7684 exports\u3002","title":"\u521b\u5efa\u6a21\u5757"},{"location":"nodejs/11-Node.js%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F/#_2","text":"\u4e5f\u8bb8\u4f60\u5df2\u7ecf\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u5df2\u7ecf\u5728\u4ee3\u7801\u4e2d\u4f7f\u7528\u4e86\u6a21\u5757\u4e86\u3002\u50cf\u8fd9\u6837\uff1a var http = require(\"http\"); ... http.createServer(...); Node.js \u4e2d\u81ea\u5e26\u4e86\u4e00\u4e2a\u53eb\u505a http \u7684\u6a21\u5757\uff0c\u6211\u4eec\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\u8bf7\u6c42\u5b83\u5e76\u628a\u8fd4\u56de\u503c\u8d4b\u7ed9\u4e00\u4e2a\u672c\u5730\u53d8\u91cf\u3002 \u8fd9\u628a\u6211\u4eec\u7684\u672c\u5730\u53d8\u91cf\u53d8\u6210\u4e86\u4e00\u4e2a\u62e5\u6709\u6240\u6709 http \u6a21\u5757\u6240\u63d0\u4f9b\u7684\u516c\u5171\u65b9\u6cd5\u7684\u5bf9\u8c61\u3002 Node.js \u7684 require \u65b9\u6cd5\u4e2d\u7684\u6587\u4ef6\u67e5\u627e\u7b56\u7565\u5982\u4e0b\uff1a \u7531\u4e8e Node.js \u4e2d\u5b58\u5728 4 \u7c7b\u6a21\u5757\uff08\u539f\u751f\u6a21\u5757\u548c3\u79cd\u6587\u4ef6\u6a21\u5757\uff09\uff0c\u5c3d\u7ba1 require \u65b9\u6cd5\u6781\u5176\u7b80\u5355\uff0c\u4f46\u662f\u5185\u90e8\u7684\u52a0\u8f7d\u5374\u662f\u5341\u5206\u590d\u6742\u7684\uff0c\u5176\u52a0\u8f7d\u4f18\u5148\u7ea7\u4e5f\u5404\u81ea\u4e0d\u540c\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"\u670d\u52a1\u7aef\u7684\u6a21\u5757\u653e\u5728\u54ea\u91cc"},{"location":"nodejs/11-Node.js%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F/#_3","text":"\u5c3d\u7ba1\u539f\u751f\u6a21\u5757\u4e0e\u6587\u4ef6\u6a21\u5757\u7684\u4f18\u5148\u7ea7\u4e0d\u540c\uff0c\u4f46\u662f\u90fd\u4f1a\u4f18\u5148\u4ece\u6587\u4ef6\u6a21\u5757\u7684\u7f13\u5b58\u4e2d\u52a0\u8f7d\u5df2\u7ecf\u5b58\u5728\u7684\u6a21\u5757\u3002","title":"\u4ece\u6587\u4ef6\u6a21\u5757\u7f13\u5b58\u4e2d\u52a0\u8f7d"},{"location":"nodejs/11-Node.js%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F/#_4","text":"\u539f\u751f\u6a21\u5757\u7684\u4f18\u5148\u7ea7\u4ec5\u6b21\u4e8e\u6587\u4ef6\u6a21\u5757\u7f13\u5b58\u7684\u4f18\u5148\u7ea7\u3002require \u65b9\u6cd5\u5728\u89e3\u6790\u6587\u4ef6\u540d\u4e4b\u540e\uff0c\u4f18\u5148\u68c0\u67e5\u6a21\u5757\u662f\u5426\u5728\u539f\u751f\u6a21\u5757\u5217\u8868\u4e2d\u3002\u4ee5http\u6a21\u5757\u4e3a\u4f8b\uff0c\u5c3d\u7ba1\u5728\u76ee\u5f55\u4e0b\u5b58\u5728\u4e00\u4e2a http/http.js/http.node/http.json \u6587\u4ef6\uff0crequire(\"http\") \u90fd\u4e0d\u4f1a\u4ece\u8fd9\u4e9b\u6587\u4ef6\u4e2d\u52a0\u8f7d\uff0c\u800c\u662f\u4ece\u539f\u751f\u6a21\u5757\u4e2d\u52a0\u8f7d\u3002 \u539f\u751f\u6a21\u5757\u4e5f\u6709\u4e00\u4e2a\u7f13\u5b58\u533a\uff0c\u540c\u6837\u4e5f\u662f\u4f18\u5148\u4ece\u7f13\u5b58\u533a\u52a0\u8f7d\u3002\u5982\u679c\u7f13\u5b58\u533a\u6ca1\u6709\u88ab\u52a0\u8f7d\u8fc7\uff0c\u5219\u8c03\u7528\u539f\u751f\u6a21\u5757\u7684\u52a0\u8f7d\u65b9\u5f0f\u8fdb\u884c\u52a0\u8f7d\u548c\u6267\u884c\u3002","title":"\u4ece\u539f\u751f\u6a21\u5757\u52a0\u8f7d"},{"location":"nodejs/11-Node.js%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F/#_5","text":"\u5f53\u6587\u4ef6\u6a21\u5757\u7f13\u5b58\u4e2d\u4e0d\u5b58\u5728\uff0c\u800c\u4e14\u4e0d\u662f\u539f\u751f\u6a21\u5757\u7684\u65f6\u5019\uff0cNode.js \u4f1a\u89e3\u6790 require \u65b9\u6cd5\u4f20\u5165\u7684\u53c2\u6570\uff0c\u5e76\u4ece\u6587\u4ef6\u7cfb\u7edf\u4e2d\u52a0\u8f7d\u5b9e\u9645\u7684\u6587\u4ef6\uff0c\u52a0\u8f7d\u8fc7\u7a0b\u4e2d\u7684\u5305\u88c5\u548c\u7f16\u8bd1\u7ec6\u8282\u5728\u524d\u4e00\u8282\u4e2d\u5df2\u7ecf\u4ecb\u7ecd\u8fc7\uff0c\u8fd9\u91cc\u6211\u4eec\u5c06\u8be6\u7ec6\u63cf\u8ff0\u67e5\u627e\u6587\u4ef6\u6a21\u5757\u7684\u8fc7\u7a0b\uff0c\u5176\u4e2d\uff0c\u4e5f\u6709\u4e00\u4e9b\u7ec6\u8282\u503c\u5f97\u77e5\u6653\u3002 require\u65b9\u6cd5\u63a5\u53d7\u4ee5\u4e0b\u51e0\u79cd\u53c2\u6570\u7684\u4f20\u9012\uff1a http\u3001fs\u3001path\u7b49\uff0c\u539f\u751f\u6a21\u5757\u3002 ./mod\u6216../mod\uff0c\u76f8\u5bf9\u8def\u5f84\u7684\u6587\u4ef6\u6a21\u5757\u3002 /pathtomodule/mod\uff0c\u7edd\u5bf9\u8def\u5f84\u7684\u6587\u4ef6\u6a21\u5757\u3002 mod\uff0c\u975e\u539f\u751f\u6a21\u5757\u7684\u6587\u4ef6\u6a21\u5757\u3002 \u5728\u8def\u5f84 Y \u4e0b\u6267\u884c require(X) \u8bed\u53e5\u6267\u884c\u987a\u5e8f\uff1a 1. \u5982\u679c X \u662f\u5185\u7f6e\u6a21\u5757 a. \u8fd4\u56de\u5185\u7f6e\u6a21\u5757 b. \u505c\u6b62\u6267\u884c 2. \u5982\u679c X \u4ee5 '/' \u5f00\u5934 a. \u8bbe\u7f6e Y \u4e3a\u6587\u4ef6\u6839\u8def\u5f84 3. \u5982\u679c X \u4ee5 './' \u6216 '/' or '../' \u5f00\u5934 a. LOAD_AS_FILE(Y + X) b. LOAD_AS_DIRECTORY(Y + X) 4. LOAD_NODE_MODULES(X, dirname(Y)) 5. \u629b\u51fa\u5f02\u5e38 \"not found\" LOAD_AS_FILE(X) 1. \u5982\u679c X \u662f\u4e00\u4e2a\u6587\u4ef6, \u5c06 X \u4f5c\u4e3a JavaScript \u6587\u672c\u8f7d\u5165\u5e76\u505c\u6b62\u6267\u884c\u3002 2. \u5982\u679c X.js \u662f\u4e00\u4e2a\u6587\u4ef6, \u5c06 X.js \u4f5c\u4e3a JavaScript \u6587\u672c\u8f7d\u5165\u5e76\u505c\u6b62\u6267\u884c\u3002 3. \u5982\u679c X.json \u662f\u4e00\u4e2a\u6587\u4ef6, \u89e3\u6790 X.json \u4e3a JavaScript \u5bf9\u8c61\u5e76\u505c\u6b62\u6267\u884c\u3002 4. \u5982\u679c X.node \u662f\u4e00\u4e2a\u6587\u4ef6, \u5c06 X.node \u4f5c\u4e3a\u4e8c\u8fdb\u5236\u63d2\u4ef6\u8f7d\u5165\u5e76\u505c\u6b62\u6267\u884c\u3002 LOAD_INDEX(X) 1. \u5982\u679c X/index.js \u662f\u4e00\u4e2a\u6587\u4ef6, \u5c06 X/index.js \u4f5c\u4e3a JavaScript \u6587\u672c\u8f7d\u5165\u5e76\u505c\u6b62\u6267\u884c\u3002 2. \u5982\u679c X/index.json \u662f\u4e00\u4e2a\u6587\u4ef6, \u89e3\u6790 X/index.json \u4e3a JavaScript \u5bf9\u8c61\u5e76\u505c\u6b62\u6267\u884c\u3002 3. \u5982\u679c X/index.node \u662f\u4e00\u4e2a\u6587\u4ef6, \u5c06 X/index.node \u4f5c\u4e3a\u4e8c\u8fdb\u5236\u63d2\u4ef6\u8f7d\u5165\u5e76\u505c\u6b62\u6267\u884c\u3002 LOAD_AS_DIRECTORY(X) 1. \u5982\u679c X/package.json \u662f\u4e00\u4e2a\u6587\u4ef6, a. \u89e3\u6790 X/package.json, \u5e76\u67e5\u627e \"main\" \u5b57\u6bb5\u3002 b. let M = X + (json main \u5b57\u6bb5) c. LOAD_AS_FILE(M) d. LOAD_INDEX(M) 2. LOAD_INDEX(X) LOAD_NODE_MODULES(X, START) 1. let DIRS=NODE_MODULES_PATHS(START) 2. for each DIR in DIRS: a. LOAD_AS_FILE(DIR/X) b. LOAD_AS_DIRECTORY(DIR/X) NODE_MODULES_PATHS(START) 1. let PARTS = path split(START) 2. let I = count of PARTS - 1 3. let DIRS = [] 4. while I >= 0, a. if PARTS[I] = \"node_modules\" CONTINUE b. DIR = path join(PARTS[0 .. I] + \"node_modules\") c. DIRS = DIRS + DIR d. let I = I - 1 5. return DIRS exports \u548c module.exports \u7684\u4f7f\u7528 \u5982\u679c\u8981\u5bf9\u5916\u66b4\u9732\u5c5e\u6027\u6216\u65b9\u6cd5\uff0c\u5c31\u7528 exports \u5c31\u884c\uff0c\u8981\u66b4\u9732\u5bf9\u8c61(\u7c7b\u4f3cclass\uff0c\u5305\u542b\u4e86\u5f88\u591a\u5c5e\u6027\u548c\u65b9\u6cd5)\uff0c\u5c31\u7528 module.exports \u3002 Node.js Stream Node.js \u51fd\u6570","title":"\u4ece\u6587\u4ef6\u52a0\u8f7d"},{"location":"nodejs/11-Node.js%E6%A8%A1%E5%9D%97%E7%B3%BB%E7%BB%9F/#1","text":"mapbar_front 619*** 632@qq.com 30 \u4e0d\u5efa\u8bae\u540c\u65f6\u4f7f\u7528 exports \u548c module.exports\u3002 \u5982\u679c\u5148\u4f7f\u7528 exports \u5bf9\u5916\u66b4\u9732\u5c5e\u6027\u6216\u65b9\u6cd5\uff0c\u518d\u4f7f\u7528 module.exports \u66b4\u9732\u5bf9\u8c61\uff0c\u4f1a\u4f7f\u5f97 exports \u4e0a\u66b4\u9732\u7684\u5c5e\u6027\u6216\u8005\u65b9\u6cd5\u5931\u6548\u3002 \u539f\u56e0\u5728\u4e8e\uff0cexports \u4ec5\u4ec5\u662f module.exports \u7684\u4e00\u4e2a\u5f15\u7528\u3002\u5728 nodejs \u4e2d\uff0c\u662f\u8fd9\u4e48\u8bbe\u8ba1 require \u51fd\u6570\u7684\uff1a function require(...){ var module = {exports: {}}; ((module, exports) => { function myfn () {} // \u8fd9\u4e2amyfn\u5c31\u662f\u6211\u4eec\u81ea\u5df1\u7684\u4ee3\u7801 exports.myfn = myfn; // \u8fd9\u91cc\u662f\u5728\u539f\u672c\u7684\u5bf9\u8c61\u4e0a\u6dfb\u52a0\u4e86\u4e00\u4e2amyfn\u65b9\u6cd5\u3002 module.exports = myfn;// \u8fd9\u4e2a\u76f4\u63a5\u628a\u5f53\u521d\u7684\u5bf9\u8c61\u8fdb\u884c\u8986\u76d6\u3002 })(module,module.exports) return module.exports; } mapbar_front mapbar_front 619***632@qq.com2\u4e2a\u6708\u524d (02-09)","title":"1 \u7bc7\u7b14\u8bb0 \u5199\u7b14\u8bb0"},{"location":"nodejs/12-Node.js%20%E5%87%BD%E6%95%B0/","text":"Node.js \u51fd\u6570 \u00b6 \u5728JavaScript\u4e2d\uff0c\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u4f20\u9012\uff0c\u4e5f\u53ef\u4ee5\u5728\u4f20\u9012\u53c2\u6570\u7684\u5730\u65b9\u76f4\u63a5\u5b9a\u4e49\u51fd\u6570\u3002 Node.js\u4e2d\u51fd\u6570\u7684\u4f7f\u7528\u4e0eJavascript\u7c7b\u4f3c\uff0c\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a function say(word) { console.log(word); } function execute(someFunction, value) { someFunction(value); } execute(say, \"Hello\"); \u4ee5\u4e0a\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u628a say \u51fd\u6570\u4f5c\u4e3aexecute\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53d8\u91cf\u8fdb\u884c\u4e86\u4f20\u9012\u3002\u8fd9\u91cc\u4f20\u9012\u7684\u4e0d\u662f say \u7684\u8fd4\u56de\u503c\uff0c\u800c\u662f say \u672c\u8eab\uff01 \u8fd9\u6837\u4e00\u6765\uff0c say \u5c31\u53d8\u6210\u4e86execute \u4e2d\u7684\u672c\u5730\u53d8\u91cf someFunction \uff0cexecute\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 someFunction() \uff08\u5e26\u62ec\u53f7\u7684\u5f62\u5f0f\uff09\u6765\u4f7f\u7528 say \u51fd\u6570\u3002 \u5f53\u7136\uff0c\u56e0\u4e3a say \u6709\u4e00\u4e2a\u53d8\u91cf\uff0c execute \u5728\u8c03\u7528 someFunction \u65f6\u53ef\u4ee5\u4f20\u9012\u8fd9\u6837\u4e00\u4e2a\u53d8\u91cf\u3002 \u533f\u540d\u51fd\u6570 \u00b6 \u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53d8\u91cf\u4f20\u9012\u3002\u4f46\u662f\u6211\u4eec\u4e0d\u4e00\u5b9a\u8981\u7ed5\u8fd9\u4e2a\"\u5148\u5b9a\u4e49\uff0c\u518d\u4f20\u9012\"\u7684\u5708\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u53e6\u4e00\u4e2a\u51fd\u6570\u7684\u62ec\u53f7\u4e2d\u5b9a\u4e49\u548c\u4f20\u9012\u8fd9\u4e2a\u51fd\u6570\uff1a function execute(someFunction, value) { someFunction(value); } execute(function(word){ console.log(word) }, \"Hello\"); \u6211\u4eec\u5728 execute \u63a5\u53d7\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u5730\u65b9\u76f4\u63a5\u5b9a\u4e49\u4e86\u6211\u4eec\u51c6\u5907\u4f20\u9012\u7ed9 execute \u7684\u51fd\u6570\u3002 \u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u751a\u81f3\u4e0d\u7528\u7ed9\u8fd9\u4e2a\u51fd\u6570\u8d77\u540d\u5b57\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u5b83\u88ab\u53eb\u505a\u533f\u540d\u51fd\u6570 \u3002 \u51fd\u6570\u4f20\u9012\u662f\u5982\u4f55\u8ba9HTTP\u670d\u52a1\u5668\u5de5\u4f5c\u7684 \u00b6 \u5e26\u7740\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b\u6211\u4eec\u7b80\u7ea6\u800c\u4e0d\u7b80\u5355\u7684HTTP\u670d\u52a1\u5668\uff1a var http = require(\"http\"); http.createServer(function(request, response) { response.writeHead(200, {\"Content-Type\": \"text/plain\"}); response.write(\"Hello World\"); response.end(); }).listen(8888); \u73b0\u5728\u5b83\u770b\u4e0a\u53bb\u5e94\u8be5\u6e05\u6670\u4e86\u5f88\u591a\uff1a\u6211\u4eec\u5411 createServer \u51fd\u6570\u4f20\u9012\u4e86\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u3002 \u7528\u8fd9\u6837\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u8fbe\u5230\u540c\u6837\u7684\u76ee\u7684\uff1a var http = require(\"http\"); function onRequest(request, response) { response.writeHead(200, {\"Content-Type\": \"text/plain\"}); response.write(\"Hello World\"); response.end(); } http.createServer(onRequest).listen(8888);","title":"12-Node.js \u51fd\u6570"},{"location":"nodejs/12-Node.js%20%E5%87%BD%E6%95%B0/#nodejs","text":"\u5728JavaScript\u4e2d\uff0c\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u5148\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff0c\u7136\u540e\u4f20\u9012\uff0c\u4e5f\u53ef\u4ee5\u5728\u4f20\u9012\u53c2\u6570\u7684\u5730\u65b9\u76f4\u63a5\u5b9a\u4e49\u51fd\u6570\u3002 Node.js\u4e2d\u51fd\u6570\u7684\u4f7f\u7528\u4e0eJavascript\u7c7b\u4f3c\uff0c\u4e3e\u4f8b\u6765\u8bf4\uff0c\u4f60\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a function say(word) { console.log(word); } function execute(someFunction, value) { someFunction(value); } execute(say, \"Hello\"); \u4ee5\u4e0a\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u628a say \u51fd\u6570\u4f5c\u4e3aexecute\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53d8\u91cf\u8fdb\u884c\u4e86\u4f20\u9012\u3002\u8fd9\u91cc\u4f20\u9012\u7684\u4e0d\u662f say \u7684\u8fd4\u56de\u503c\uff0c\u800c\u662f say \u672c\u8eab\uff01 \u8fd9\u6837\u4e00\u6765\uff0c say \u5c31\u53d8\u6210\u4e86execute \u4e2d\u7684\u672c\u5730\u53d8\u91cf someFunction \uff0cexecute\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 someFunction() \uff08\u5e26\u62ec\u53f7\u7684\u5f62\u5f0f\uff09\u6765\u4f7f\u7528 say \u51fd\u6570\u3002 \u5f53\u7136\uff0c\u56e0\u4e3a say \u6709\u4e00\u4e2a\u53d8\u91cf\uff0c execute \u5728\u8c03\u7528 someFunction \u65f6\u53ef\u4ee5\u4f20\u9012\u8fd9\u6837\u4e00\u4e2a\u53d8\u91cf\u3002","title":"Node.js \u51fd\u6570"},{"location":"nodejs/12-Node.js%20%E5%87%BD%E6%95%B0/#_1","text":"\u6211\u4eec\u53ef\u4ee5\u628a\u4e00\u4e2a\u51fd\u6570\u4f5c\u4e3a\u53d8\u91cf\u4f20\u9012\u3002\u4f46\u662f\u6211\u4eec\u4e0d\u4e00\u5b9a\u8981\u7ed5\u8fd9\u4e2a\"\u5148\u5b9a\u4e49\uff0c\u518d\u4f20\u9012\"\u7684\u5708\u5b50\uff0c\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5728\u53e6\u4e00\u4e2a\u51fd\u6570\u7684\u62ec\u53f7\u4e2d\u5b9a\u4e49\u548c\u4f20\u9012\u8fd9\u4e2a\u51fd\u6570\uff1a function execute(someFunction, value) { someFunction(value); } execute(function(word){ console.log(word) }, \"Hello\"); \u6211\u4eec\u5728 execute \u63a5\u53d7\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u5730\u65b9\u76f4\u63a5\u5b9a\u4e49\u4e86\u6211\u4eec\u51c6\u5907\u4f20\u9012\u7ed9 execute \u7684\u51fd\u6570\u3002 \u7528\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u751a\u81f3\u4e0d\u7528\u7ed9\u8fd9\u4e2a\u51fd\u6570\u8d77\u540d\u5b57\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u5b83\u88ab\u53eb\u505a\u533f\u540d\u51fd\u6570 \u3002","title":"\u533f\u540d\u51fd\u6570"},{"location":"nodejs/12-Node.js%20%E5%87%BD%E6%95%B0/#http","text":"\u5e26\u7740\u8fd9\u4e9b\u77e5\u8bc6\uff0c\u6211\u4eec\u518d\u6765\u770b\u770b\u6211\u4eec\u7b80\u7ea6\u800c\u4e0d\u7b80\u5355\u7684HTTP\u670d\u52a1\u5668\uff1a var http = require(\"http\"); http.createServer(function(request, response) { response.writeHead(200, {\"Content-Type\": \"text/plain\"}); response.write(\"Hello World\"); response.end(); }).listen(8888); \u73b0\u5728\u5b83\u770b\u4e0a\u53bb\u5e94\u8be5\u6e05\u6670\u4e86\u5f88\u591a\uff1a\u6211\u4eec\u5411 createServer \u51fd\u6570\u4f20\u9012\u4e86\u4e00\u4e2a\u533f\u540d\u51fd\u6570\u3002 \u7528\u8fd9\u6837\u7684\u4ee3\u7801\u4e5f\u53ef\u4ee5\u8fbe\u5230\u540c\u6837\u7684\u76ee\u7684\uff1a var http = require(\"http\"); function onRequest(request, response) { response.writeHead(200, {\"Content-Type\": \"text/plain\"}); response.write(\"Hello World\"); response.end(); } http.createServer(onRequest).listen(8888);","title":"\u51fd\u6570\u4f20\u9012\u662f\u5982\u4f55\u8ba9HTTP\u670d\u52a1\u5668\u5de5\u4f5c\u7684"},{"location":"nodejs/13-Node.js%20%E8%B7%AF%E7%94%B1/","text":"Node.js \u8def\u7531 \u00b6 \u6211\u4eec\u8981\u4e3a\u8def\u7531\u63d0\u4f9b\u8bf7\u6c42\u7684 URL \u548c\u5176\u4ed6\u9700\u8981\u7684 GET \u53ca POST \u53c2\u6570\uff0c\u968f\u540e\u8def\u7531\u9700\u8981\u6839\u636e\u8fd9\u4e9b\u6570\u636e\u6765\u6267\u884c\u76f8\u5e94\u7684\u4ee3\u7801\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u67e5\u770b HTTP \u8bf7\u6c42\uff0c\u4ece\u4e2d\u63d0\u53d6\u51fa\u8bf7\u6c42\u7684 URL \u4ee5\u53ca GET/POST \u53c2\u6570\u3002\u8fd9\u4e00\u529f\u80fd\u5e94\u5f53\u5c5e\u4e8e\u8def\u7531\u8fd8\u662f\u670d\u52a1\u5668\uff08\u751a\u81f3\u4f5c\u4e3a\u4e00\u4e2a\u6a21\u5757\u81ea\u8eab\u7684\u529f\u80fd\uff09\u786e\u5b9e\u503c\u5f97\u63a2\u8ba8\uff0c\u4f46\u8fd9\u91cc\u6682\u5b9a\u5176\u4e3a\u6211\u4eec\u7684HTTP\u670d\u52a1\u5668\u7684\u529f\u80fd\u3002 \u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u6570\u636e\u90fd\u4f1a\u5305\u542b\u5728 request \u5bf9\u8c61\u4e2d\uff0c\u8be5\u5bf9\u8c61\u4f5c\u4e3a onRequest() \u56de\u8c03\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u3002\u4f46\u662f\u4e3a\u4e86\u89e3\u6790\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u989d\u5916\u7684 Node.JS \u6a21\u5757\uff0c\u5b83\u4eec\u5206\u522b\u662f url \u548c querystring \u6a21\u5757\u3002 url.parse(string).query | url.parse(string).pathname | | | | | ------ ------------------- http://localhost:8888/start?foo=bar&hello=world --- ----- | | | | querystring.parse(queryString)[\"foo\"] | | querystring.parse(queryString)[\"hello\"] \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 querystring \u6a21\u5757\u6765\u89e3\u6790 POST \u8bf7\u6c42\u4f53\u4e2d\u7684\u53c2\u6570\uff0c\u7a0d\u540e\u4f1a\u6709\u6f14\u793a\u3002 \u73b0\u5728\u6211\u4eec\u6765\u7ed9 onRequest() \u51fd\u6570\u52a0\u4e0a\u4e00\u4e9b\u903b\u8f91\uff0c\u7528\u6765\u627e\u51fa\u6d4f\u89c8\u5668\u8bf7\u6c42\u7684 URL \u8def\u5f84\uff1a server.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 var http = require(\"http\"); var url = require(\"url\"); function start() { function onRequest(request, response) { var pathname = url.parse(request.url).pathname; console.log(\"Request for \" + pathname + \" received.\"); response.writeHead(200, {\"Content-Type\": \"text/plain\"}); response.write(\"Hello World\"); response.end(); } http.createServer(onRequest).listen(8888); console.log(\"Server has started.\"); } exports.start = start; \u597d\u4e86\uff0c\u6211\u4eec\u7684\u5e94\u7528\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u7684 URL \u8def\u5f84\u6765\u533a\u522b\u4e0d\u540c\u8bf7\u6c42\u4e86--\u8fd9\u4f7f\u6211\u4eec\u5f97\u4ee5\u4f7f\u7528\u8def\u7531\uff08\u8fd8\u672a\u5b8c\u6210\uff09\u6765\u5c06\u8bf7\u6c42\u4ee5 URL \u8def\u5f84\u4e3a\u57fa\u51c6\u6620\u5c04\u5230\u5904\u7406\u7a0b\u5e8f\u4e0a\u3002 \u5728\u6211\u4eec\u6240\u8981\u6784\u5efa\u7684\u5e94\u7528\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u6765\u81ea /start \u548c /upload \u7684\u8bf7\u6c42\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u4ee3\u7801\u6765\u5904\u7406\u3002\u7a0d\u540e\u6211\u4eec\u5c06\u770b\u5230\u8fd9\u4e9b\u5185\u5bb9\u662f\u5982\u4f55\u6574\u5408\u5230\u4e00\u8d77\u7684\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u6765\u7f16\u5199\u8def\u7531\u4e86\uff0c\u5efa\u7acb\u4e00\u4e2a\u540d\u4e3a router.js \u7684\u6587\u4ef6\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a router.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 function route(pathname) { console.log(\"About to route a request for \" + pathname); } exports.route = route; \u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u6bb5\u4ee3\u7801\u4ec0\u4e48\u4e5f\u6ca1\u5e72\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u73b0\u5728\u6765\u8bf4\u8fd9\u662f\u5e94\u8be5\u7684\u3002\u5728\u6dfb\u52a0\u66f4\u591a\u7684\u903b\u8f91\u4ee5\u524d\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u5982\u4f55\u628a\u8def\u7531\u548c\u670d\u52a1\u5668\u6574\u5408\u8d77\u6765\u3002 \u6211\u4eec\u7684\u670d\u52a1\u5668\u5e94\u5f53\u77e5\u9053\u8def\u7531\u7684\u5b58\u5728\u5e76\u52a0\u4ee5\u6709\u6548\u5229\u7528\u3002\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u901a\u8fc7\u786c\u7f16\u7801\u7684\u65b9\u5f0f\u5c06\u8fd9\u4e00\u4f9d\u8d56\u9879\u7ed1\u5b9a\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u4f46\u662f\u5176\u5b83\u8bed\u8a00\u7684\u7f16\u7a0b\u7ecf\u9a8c\u544a\u8bc9\u6211\u4eec\u8fd9\u4f1a\u662f\u4e00\u4ef6\u975e\u5e38\u75db\u82e6\u7684\u4e8b\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\u8f83\u677e\u6563\u5730\u6dfb\u52a0\u8def\u7531\u6a21\u5757\u3002 \u9996\u5148\uff0c\u6211\u4eec\u6765\u6269\u5c55\u4e00\u4e0b\u670d\u52a1\u5668\u7684 start() \u51fd\u6570\uff0c\u4ee5\u4fbf\u5c06\u8def\u7531\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fc7\u53bb\uff0c server.js \u6587\u4ef6\u4ee3\u7801\u5982\u4e0b server.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 var http = require(\"http\"); var url = require(\"url\"); function start(route) { function onRequest(request, response) { var pathname = url.parse(request.url).pathname; console.log(\"Request for \" + pathname + \" received.\"); route(pathname); response.writeHead(200, {\"Content-Type\": \"text/plain\"}); response.write(\"Hello World\"); response.end(); } http.createServer(onRequest).listen(8888); console.log(\"Server has started.\"); } exports.start = start; \u540c\u65f6\uff0c\u6211\u4eec\u4f1a\u76f8\u5e94\u6269\u5c55 index.js\uff0c\u4f7f\u5f97\u8def\u7531\u51fd\u6570\u53ef\u4ee5\u88ab\u6ce8\u5165\u5230\u670d\u52a1\u5668\u4e2d\uff1a index.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 var server = require(\"./server\"); var router = require(\"./router\"); server.start(router.route); \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4f20\u9012\u7684\u51fd\u6570\u4f9d\u65e7\u4ec0\u4e48\u4e5f\u6ca1\u505a\u3002 \u5982\u679c\u73b0\u5728\u542f\u52a8\u5e94\u7528\uff08node index.js\uff0c\u59cb\u7ec8\u8bb0\u5f97\u8fd9\u4e2a\u547d\u4ee4\u884c\uff09\uff0c\u968f\u540e\u8bf7\u6c42\u4e00\u4e2aURL\uff0c\u4f60\u5c06\u4f1a\u770b\u5230\u5e94\u7528\u8f93\u51fa\u76f8\u5e94\u7684\u4fe1\u606f\uff0c\u8fd9\u8868\u660e\u6211\u4eec\u7684HTTP\u670d\u52a1\u5668\u5df2\u7ecf\u5728\u4f7f\u7528\u8def\u7531\u6a21\u5757\u4e86\uff0c\u5e76\u4f1a\u5c06\u8bf7\u6c42\u7684\u8def\u5f84\u4f20\u9012\u7ed9\u8def\u7531\uff1a $ node index.js Server has started. \u4ee5\u4e0a\u8f93\u51fa\u5df2\u7ecf\u53bb\u6389\u4e86\u6bd4\u8f83\u70e6\u4eba\u7684 /favicon.ico \u8bf7\u6c42\u76f8\u5173\u7684\u90e8\u5206\u3002 \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8888/ \uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a","title":"13-Node.js \u8def\u7531"},{"location":"nodejs/13-Node.js%20%E8%B7%AF%E7%94%B1/#nodejs","text":"\u6211\u4eec\u8981\u4e3a\u8def\u7531\u63d0\u4f9b\u8bf7\u6c42\u7684 URL \u548c\u5176\u4ed6\u9700\u8981\u7684 GET \u53ca POST \u53c2\u6570\uff0c\u968f\u540e\u8def\u7531\u9700\u8981\u6839\u636e\u8fd9\u4e9b\u6570\u636e\u6765\u6267\u884c\u76f8\u5e94\u7684\u4ee3\u7801\u3002 \u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u67e5\u770b HTTP \u8bf7\u6c42\uff0c\u4ece\u4e2d\u63d0\u53d6\u51fa\u8bf7\u6c42\u7684 URL \u4ee5\u53ca GET/POST \u53c2\u6570\u3002\u8fd9\u4e00\u529f\u80fd\u5e94\u5f53\u5c5e\u4e8e\u8def\u7531\u8fd8\u662f\u670d\u52a1\u5668\uff08\u751a\u81f3\u4f5c\u4e3a\u4e00\u4e2a\u6a21\u5757\u81ea\u8eab\u7684\u529f\u80fd\uff09\u786e\u5b9e\u503c\u5f97\u63a2\u8ba8\uff0c\u4f46\u8fd9\u91cc\u6682\u5b9a\u5176\u4e3a\u6211\u4eec\u7684HTTP\u670d\u52a1\u5668\u7684\u529f\u80fd\u3002 \u6211\u4eec\u9700\u8981\u7684\u6240\u6709\u6570\u636e\u90fd\u4f1a\u5305\u542b\u5728 request \u5bf9\u8c61\u4e2d\uff0c\u8be5\u5bf9\u8c61\u4f5c\u4e3a onRequest() \u56de\u8c03\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u3002\u4f46\u662f\u4e3a\u4e86\u89e3\u6790\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u9700\u8981\u989d\u5916\u7684 Node.JS \u6a21\u5757\uff0c\u5b83\u4eec\u5206\u522b\u662f url \u548c querystring \u6a21\u5757\u3002 url.parse(string).query | url.parse(string).pathname | | | | | ------ ------------------- http://localhost:8888/start?foo=bar&hello=world --- ----- | | | | querystring.parse(queryString)[\"foo\"] | | querystring.parse(queryString)[\"hello\"] \u5f53\u7136\u6211\u4eec\u4e5f\u53ef\u4ee5\u7528 querystring \u6a21\u5757\u6765\u89e3\u6790 POST \u8bf7\u6c42\u4f53\u4e2d\u7684\u53c2\u6570\uff0c\u7a0d\u540e\u4f1a\u6709\u6f14\u793a\u3002 \u73b0\u5728\u6211\u4eec\u6765\u7ed9 onRequest() \u51fd\u6570\u52a0\u4e0a\u4e00\u4e9b\u903b\u8f91\uff0c\u7528\u6765\u627e\u51fa\u6d4f\u89c8\u5668\u8bf7\u6c42\u7684 URL \u8def\u5f84\uff1a","title":"Node.js \u8def\u7531"},{"location":"nodejs/13-Node.js%20%E8%B7%AF%E7%94%B1/#serverjs","text":"var http = require(\"http\"); var url = require(\"url\"); function start() { function onRequest(request, response) { var pathname = url.parse(request.url).pathname; console.log(\"Request for \" + pathname + \" received.\"); response.writeHead(200, {\"Content-Type\": \"text/plain\"}); response.write(\"Hello World\"); response.end(); } http.createServer(onRequest).listen(8888); console.log(\"Server has started.\"); } exports.start = start; \u597d\u4e86\uff0c\u6211\u4eec\u7684\u5e94\u7528\u73b0\u5728\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u7684 URL \u8def\u5f84\u6765\u533a\u522b\u4e0d\u540c\u8bf7\u6c42\u4e86--\u8fd9\u4f7f\u6211\u4eec\u5f97\u4ee5\u4f7f\u7528\u8def\u7531\uff08\u8fd8\u672a\u5b8c\u6210\uff09\u6765\u5c06\u8bf7\u6c42\u4ee5 URL \u8def\u5f84\u4e3a\u57fa\u51c6\u6620\u5c04\u5230\u5904\u7406\u7a0b\u5e8f\u4e0a\u3002 \u5728\u6211\u4eec\u6240\u8981\u6784\u5efa\u7684\u5e94\u7528\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u6765\u81ea /start \u548c /upload \u7684\u8bf7\u6c42\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u4ee3\u7801\u6765\u5904\u7406\u3002\u7a0d\u540e\u6211\u4eec\u5c06\u770b\u5230\u8fd9\u4e9b\u5185\u5bb9\u662f\u5982\u4f55\u6574\u5408\u5230\u4e00\u8d77\u7684\u3002 \u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u6765\u7f16\u5199\u8def\u7531\u4e86\uff0c\u5efa\u7acb\u4e00\u4e2a\u540d\u4e3a router.js \u7684\u6587\u4ef6\uff0c\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9\uff1a","title":"server.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/13-Node.js%20%E8%B7%AF%E7%94%B1/#routerjs","text":"function route(pathname) { console.log(\"About to route a request for \" + pathname); } exports.route = route; \u5982\u4f60\u6240\u89c1\uff0c\u8fd9\u6bb5\u4ee3\u7801\u4ec0\u4e48\u4e5f\u6ca1\u5e72\uff0c\u4e0d\u8fc7\u5bf9\u4e8e\u73b0\u5728\u6765\u8bf4\u8fd9\u662f\u5e94\u8be5\u7684\u3002\u5728\u6dfb\u52a0\u66f4\u591a\u7684\u903b\u8f91\u4ee5\u524d\uff0c\u6211\u4eec\u5148\u6765\u770b\u770b\u5982\u4f55\u628a\u8def\u7531\u548c\u670d\u52a1\u5668\u6574\u5408\u8d77\u6765\u3002 \u6211\u4eec\u7684\u670d\u52a1\u5668\u5e94\u5f53\u77e5\u9053\u8def\u7531\u7684\u5b58\u5728\u5e76\u52a0\u4ee5\u6709\u6548\u5229\u7528\u3002\u6211\u4eec\u5f53\u7136\u53ef\u4ee5\u901a\u8fc7\u786c\u7f16\u7801\u7684\u65b9\u5f0f\u5c06\u8fd9\u4e00\u4f9d\u8d56\u9879\u7ed1\u5b9a\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u4f46\u662f\u5176\u5b83\u8bed\u8a00\u7684\u7f16\u7a0b\u7ecf\u9a8c\u544a\u8bc9\u6211\u4eec\u8fd9\u4f1a\u662f\u4e00\u4ef6\u975e\u5e38\u75db\u82e6\u7684\u4e8b\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u4f7f\u7528\u4f9d\u8d56\u6ce8\u5165\u7684\u65b9\u5f0f\u8f83\u677e\u6563\u5730\u6dfb\u52a0\u8def\u7531\u6a21\u5757\u3002 \u9996\u5148\uff0c\u6211\u4eec\u6765\u6269\u5c55\u4e00\u4e0b\u670d\u52a1\u5668\u7684 start() \u51fd\u6570\uff0c\u4ee5\u4fbf\u5c06\u8def\u7531\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u8fc7\u53bb\uff0c server.js \u6587\u4ef6\u4ee3\u7801\u5982\u4e0b","title":"router.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/13-Node.js%20%E8%B7%AF%E7%94%B1/#serverjs_1","text":"var http = require(\"http\"); var url = require(\"url\"); function start(route) { function onRequest(request, response) { var pathname = url.parse(request.url).pathname; console.log(\"Request for \" + pathname + \" received.\"); route(pathname); response.writeHead(200, {\"Content-Type\": \"text/plain\"}); response.write(\"Hello World\"); response.end(); } http.createServer(onRequest).listen(8888); console.log(\"Server has started.\"); } exports.start = start; \u540c\u65f6\uff0c\u6211\u4eec\u4f1a\u76f8\u5e94\u6269\u5c55 index.js\uff0c\u4f7f\u5f97\u8def\u7531\u51fd\u6570\u53ef\u4ee5\u88ab\u6ce8\u5165\u5230\u670d\u52a1\u5668\u4e2d\uff1a","title":"server.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/13-Node.js%20%E8%B7%AF%E7%94%B1/#indexjs","text":"var server = require(\"./server\"); var router = require(\"./router\"); server.start(router.route); \u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u4f20\u9012\u7684\u51fd\u6570\u4f9d\u65e7\u4ec0\u4e48\u4e5f\u6ca1\u505a\u3002 \u5982\u679c\u73b0\u5728\u542f\u52a8\u5e94\u7528\uff08node index.js\uff0c\u59cb\u7ec8\u8bb0\u5f97\u8fd9\u4e2a\u547d\u4ee4\u884c\uff09\uff0c\u968f\u540e\u8bf7\u6c42\u4e00\u4e2aURL\uff0c\u4f60\u5c06\u4f1a\u770b\u5230\u5e94\u7528\u8f93\u51fa\u76f8\u5e94\u7684\u4fe1\u606f\uff0c\u8fd9\u8868\u660e\u6211\u4eec\u7684HTTP\u670d\u52a1\u5668\u5df2\u7ecf\u5728\u4f7f\u7528\u8def\u7531\u6a21\u5757\u4e86\uff0c\u5e76\u4f1a\u5c06\u8bf7\u6c42\u7684\u8def\u5f84\u4f20\u9012\u7ed9\u8def\u7531\uff1a $ node index.js Server has started. \u4ee5\u4e0a\u8f93\u51fa\u5df2\u7ecf\u53bb\u6389\u4e86\u6bd4\u8f83\u70e6\u4eba\u7684 /favicon.ico \u8bf7\u6c42\u76f8\u5173\u7684\u90e8\u5206\u3002 \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8888/ \uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a","title":"index.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/","text":"Node.js \u5168\u5c40\u5bf9\u8c61 \u00b6 JavaScript \u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u5bf9\u8c61\uff0c\u79f0\u4e3a\u5168\u5c40\u5bf9\u8c61\uff08Global Object\uff09\uff0c\u5b83\u53ca\u5176\u6240\u6709\u5c5e\u6027\u90fd\u53ef\u4ee5\u5728\u7a0b\u5e8f\u7684\u4efb\u4f55\u5730\u65b9\u8bbf\u95ee\uff0c\u5373\u5168\u5c40\u53d8\u91cf\u3002 \u5728\u6d4f\u89c8\u5668 JavaScript \u4e2d\uff0c\u901a\u5e38 window \u662f\u5168\u5c40\u5bf9\u8c61\uff0c \u800c Node.js \u4e2d\u7684\u5168\u5c40\u5bf9\u8c61\u662f global\uff0c\u6240\u6709\u5168\u5c40\u53d8\u91cf\uff08\u9664\u4e86 global \u672c\u8eab\u4ee5\u5916\uff09\u90fd\u662f global \u5bf9\u8c61\u7684\u5c5e\u6027\u3002 \u5728 Node.js \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5230 global \u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u9700\u8981\u5728\u5e94\u7528\u4e2d\u5305\u542b\u5b83\u3002 \u5168\u5c40\u5bf9\u8c61\u4e0e\u5168\u5c40\u53d8\u91cf \u00b6 global \u6700\u6839\u672c\u7684\u4f5c\u7528\u662f\u4f5c\u4e3a\u5168\u5c40\u53d8\u91cf\u7684\u5bbf\u4e3b\u3002\u6309\u7167 ECMAScript \u7684\u5b9a\u4e49\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761 \u4ef6\u7684\u53d8\u91cf\u662f\u5168\u5c40\u53d8\u91cf\uff1a \u5728\u6700\u5916\u5c42\u5b9a\u4e49\u7684\u53d8\u91cf\uff1b \u5168\u5c40\u5bf9\u8c61\u7684\u5c5e\u6027\uff1b \u9690\u5f0f\u5b9a\u4e49\u7684\u53d8\u91cf\uff08\u672a\u5b9a\u4e49\u76f4\u63a5\u8d4b\u503c\u7684\u53d8\u91cf\uff09\u3002 \u5f53\u4f60\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u8fd9\u4e2a\u53d8\u91cf\u540c\u65f6\u4e5f\u4f1a\u6210\u4e3a\u5168\u5c40\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u9700\u8981\u6ce8 \u610f\u7684\u662f\uff0c\u5728 Node.js \u4e2d\u4f60\u4e0d\u53ef\u80fd\u5728\u6700\u5916\u5c42\u5b9a\u4e49\u53d8\u91cf\uff0c\u56e0\u4e3a\u6240\u6709\u7528\u6237\u4ee3\u7801\u90fd\u662f\u5c5e\u4e8e\u5f53\u524d\u6a21\u5757\u7684\uff0c \u800c\u6a21\u5757\u672c\u8eab\u4e0d\u662f\u6700\u5916\u5c42\u4e0a\u4e0b\u6587\u3002 \u6ce8\u610f\uff1a \u6700\u597d\u4e0d\u8981\u4f7f\u7528 var \u5b9a\u4e49\u53d8\u91cf\u4ee5\u907f\u514d\u5f15\u5165\u5168\u5c40\u53d8\u91cf\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u4f1a\u6c61\u67d3\u547d\u540d\u7a7a\u95f4\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u8026\u5408\u98ce\u9669\u3002 __filename \u00b6 __filename \u8868\u793a\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u811a\u672c\u7684\u6587\u4ef6\u540d\u3002\u5b83\u5c06\u8f93\u51fa\u6587\u4ef6\u6240\u5728\u4f4d\u7f6e\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u4e14\u548c\u547d\u4ee4\u884c\u53c2\u6570\u6240\u6307\u5b9a\u7684\u6587\u4ef6\u540d\u4e0d\u4e00\u5b9a\u76f8\u540c\u3002 \u5982\u679c\u5728\u6a21\u5757\u4e2d\uff0c\u8fd4\u56de\u7684\u503c\u662f\u6a21\u5757\u6587\u4ef6\u7684\u8def\u5f84\u3002 \u5b9e\u4f8b \u00b6 \u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a // \u8f93\u51fa\u5168\u5c40\u53d8\u91cf __filename \u7684\u503c console.log( __filename ); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js /web/com/runoob/nodejs/main.js __dirname \u00b6 __dirname \u8868\u793a\u5f53\u524d\u6267\u884c\u811a\u672c\u6240\u5728\u7684\u76ee\u5f55\u3002 \u5b9e\u4f8b \u00b6 \u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a // \u8f93\u51fa\u5168\u5c40\u53d8\u91cf __dirname \u7684\u503c console.log( __dirname ); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js /web/com/runoob/nodejs setTimeout(cb, ms) \u00b6 setTimeout(cb, ms) \u5168\u5c40\u51fd\u6570\u5728\u6307\u5b9a\u7684\u6beb\u79d2(ms)\u6570\u540e\u6267\u884c\u6307\u5b9a\u51fd\u6570(cb)\u3002\uff1asetTimeout() \u53ea\u6267\u884c\u4e00\u6b21\u6307\u5b9a\u51fd\u6570\u3002 \u8fd4\u56de\u4e00\u4e2a\u4ee3\u8868\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u503c\u3002 \u5b9e\u4f8b \u00b6 \u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a function printHello(){ console.log( \"Hello, World!\"); } // \u4e24\u79d2\u540e\u6267\u884c\u4ee5\u4e0a\u51fd\u6570 setTimeout(printHello, 2000); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js Hello, World! clearTimeout(t) \u00b6 clearTimeout( t ) \u5168\u5c40\u51fd\u6570\u7528\u4e8e\u505c\u6b62\u4e00\u4e2a\u4e4b\u524d\u901a\u8fc7 setTimeout() \u521b\u5efa\u7684\u5b9a\u65f6\u5668\u3002 \u53c2\u6570 t \u662f\u901a\u8fc7 setTimeout() \u51fd\u6570\u521b\u5efa\u7684\u5b9a\u65f6\u5668\u3002 \u5b9e\u4f8b \u00b6 \u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a function printHello(){ console.log( \"Hello, World!\"); } // \u4e24\u79d2\u540e\u6267\u884c\u4ee5\u4e0a\u51fd\u6570 var t = setTimeout(printHello, 2000); // \u6e05\u9664\u5b9a\u65f6\u5668 clearTimeout(t); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js setInterval(cb, ms) \u00b6 setInterval(cb, ms) \u5168\u5c40\u51fd\u6570\u5728\u6307\u5b9a\u7684\u6beb\u79d2(ms)\u6570\u540e\u6267\u884c\u6307\u5b9a\u51fd\u6570(cb)\u3002 \u8fd4\u56de\u4e00\u4e2a\u4ee3\u8868\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u503c\u3002\u53ef\u4ee5\u4f7f\u7528 clearInterval(t) \u51fd\u6570\u6765\u6e05\u9664\u5b9a\u65f6\u5668\u3002 setInterval() \u65b9\u6cd5\u4f1a\u4e0d\u505c\u5730\u8c03\u7528\u51fd\u6570\uff0c\u76f4\u5230 clearInterval() \u88ab\u8c03\u7528\u6216\u7a97\u53e3\u88ab\u5173\u95ed\u3002 \u5b9e\u4f8b \u00b6 \u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a function printHello(){ console.log( \"Hello, World!\"); } // \u4e24\u79d2\u540e\u6267\u884c\u4ee5\u4e0a\u51fd\u6570 setInterval(printHello, 2000); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js Hello, World! Hello, World! Hello, World! Hello, World! Hello, World! \u2026\u2026 \u4ee5\u4e0a\u7a0b\u5e8f\u6bcf\u9694\u4e24\u79d2\u5c31\u4f1a\u8f93\u51fa\u4e00\u6b21\"Hello, World!\"\uff0c\u4e14\u4f1a\u6c38\u4e45\u6267\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u4f60\u6309\u4e0b ctrl + c \u6309\u94ae\u3002 console \u00b6 console \u7528\u4e8e\u63d0\u4f9b\u63a7\u5236\u53f0\u6807\u51c6\u8f93\u51fa\uff0c\u5b83\u662f\u7531 Internet Explorer \u7684 JScript \u5f15\u64ce\u63d0\u4f9b\u7684\u8c03\u8bd5\u5de5\u5177\uff0c\u540e\u6765\u9010\u6e10\u6210\u4e3a\u6d4f\u89c8\u5668\u7684\u5b9e\u65bd\u6807\u51c6\u3002 Node.js \u6cbf\u7528\u4e86\u8fd9\u4e2a\u6807\u51c6\uff0c\u63d0\u4f9b\u4e0e\u4e60\u60ef\u884c\u4e3a\u4e00\u81f4\u7684 console \u5bf9\u8c61\uff0c\u7528\u4e8e\u5411\u6807\u51c6\u8f93\u51fa\u6d41\uff08stdout\uff09\u6216\u6807\u51c6\u9519\u8bef\u6d41\uff08stderr\uff09\u8f93\u51fa\u5b57\u7b26\u3002 console \u65b9\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a console \u5bf9\u8c61\u7684\u65b9\u6cd5: \u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 console.log([data][, ...]) \u5411\u6807\u51c6\u8f93\u51fa\u6d41\u6253\u5370\u5b57\u7b26\u5e76\u4ee5\u6362\u884c\u7b26\u7ed3\u675f\u3002\u8be5\u65b9\u6cd5\u63a5\u6536\u82e5\u5e72 \u4e2a\u53c2\u6570\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5219\u8f93\u51fa\u8fd9\u4e2a\u53c2\u6570\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u3002\u5982\u679c\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5219 \u4ee5\u7c7b\u4f3c\u4e8eC \u8bed\u8a00 printf() \u547d\u4ee4\u7684\u683c\u5f0f\u8f93\u51fa\u3002 2 console.info([data][, ...]) \u8be5\u547d\u4ee4\u7684\u4f5c\u7528\u662f\u8fd4\u56de\u4fe1\u606f\u6027\u6d88\u606f\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4e0econsole.log\u5dee\u522b\u5e76\u4e0d\u5927\uff0c\u9664\u4e86\u5728chrome\u4e2d\u53ea\u4f1a\u8f93\u51fa\u6587\u5b57\u5916\uff0c\u5176\u4f59\u7684\u4f1a\u663e\u793a\u4e00\u4e2a\u84dd\u8272\u7684\u60ca\u53f9\u53f7\u3002 3 console.error([data][, ...]) \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u7684\u3002\u63a7\u5236\u53f0\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u4f1a\u663e\u793a\u662f\u7ea2\u8272\u7684\u53c9\u5b50\u3002 4 console.warn([data][, ...]) \u8f93\u51fa\u8b66\u544a\u6d88\u606f\u3002\u63a7\u5236\u53f0\u51fa\u73b0\u6709\u9ec4\u8272\u7684\u60ca\u53f9\u53f7\u3002 5 console.dir(obj[, options]) \u7528\u6765\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u68c0\u67e5\uff08inspect\uff09\uff0c\u5e76\u4ee5\u6613\u4e8e\u9605\u8bfb\u548c\u6253\u5370\u7684\u683c\u5f0f\u663e\u793a\u3002 6 console.time(label) \u8f93\u51fa\u65f6\u95f4\uff0c\u8868\u793a\u8ba1\u65f6\u5f00\u59cb\u3002 7 console.timeEnd(label) \u7ed3\u675f\u65f6\u95f4\uff0c\u8868\u793a\u8ba1\u65f6\u7ed3\u675f\u3002 8 console.trace(message[, ...]) \u5f53\u524d\u6267\u884c\u7684\u4ee3\u7801\u5728\u5806\u6808\u4e2d\u7684\u8c03\u7528\u8def\u5f84\uff0c\u8fd9\u4e2a\u6d4b\u8bd5\u51fd\u6570\u8fd0\u884c\u5f88\u6709\u5e2e\u52a9\uff0c\u53ea\u8981\u7ed9\u60f3\u6d4b\u8bd5\u7684\u51fd\u6570\u91cc\u9762\u52a0\u5165 console.trace \u5c31\u884c\u4e86\u3002 9 console.assert(value[, message][, ...]) \u7528\u4e8e\u5224\u65ad\u67d0\u4e2a\u8868\u8fbe\u5f0f\u6216\u53d8\u91cf\u662f\u5426\u4e3a\u771f\uff0c\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8868\u8fbe\u5f0f\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u4e32\u3002\u53ea\u6709\u5f53\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3afalse\uff0c\u624d\u4f1a\u8f93\u51fa\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u5426\u5219\u4e0d\u4f1a\u6709\u4efb\u4f55\u7ed3\u679c\u3002 console.log()\uff1a\u5411\u6807\u51c6\u8f93\u51fa\u6d41\u6253\u5370\u5b57\u7b26\u5e76\u4ee5\u6362\u884c\u7b26\u7ed3\u675f\u3002 console.log \u63a5\u6536\u82e5\u5e72 \u4e2a\u53c2\u6570\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5219\u8f93\u51fa\u8fd9\u4e2a\u53c2\u6570\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u3002\u5982\u679c\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5219 \u4ee5\u7c7b\u4f3c\u4e8eC \u8bed\u8a00 printf() \u547d\u4ee4\u7684\u683c\u5f0f\u8f93\u51fa\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6ca1\u6709 \u53c2\u6570\uff0c\u53ea\u6253\u5370\u4e00\u4e2a\u6362\u884c\u3002 console.log('Hello world'); console.log('byvoid%diovyb'); console.log('byvoid%diovyb', 1991); \u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a Hello world byvoid%diovyb byvoid1991iovyb console.error()\uff1a\u4e0econsole.log() \u7528\u6cd5\u76f8\u540c\uff0c\u53ea\u662f\u5411\u6807\u51c6\u9519\u8bef\u6d41\u8f93\u51fa\u3002 console.trace()\uff1a\u5411\u6807\u51c6\u9519\u8bef\u6d41\u8f93\u51fa\u5f53\u524d\u7684\u8c03\u7528\u6808\u3002 console.trace(); \u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a Trace: at Object.<anonymous> (/home/byvoid/consoletrace.js:1:71) at Module._compile (module.js:441:26) at Object..js (module.js:459:10) at Module.load (module.js:348:31) at Function._load (module.js:308:12) at Array.0 (module.js:479:10) at EventEmitter._tickCallback (node.js:192:40) \u5b9e\u4f8b \u00b6 \u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a console.info(\"\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\uff1a\"); var counter = 10; console.log(\"\u8ba1\u6570: %d\", counter); console.time(\"\u83b7\u53d6\u6570\u636e\"); // // \u6267\u884c\u4e00\u4e9b\u4ee3\u7801 // console.timeEnd('\u83b7\u53d6\u6570\u636e'); console.info(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002\") \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js \u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\uff1a \u8ba1\u6570: 10 \u83b7\u53d6\u6570\u636e: 0ms \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5 process \u00b6 process \u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5373 global \u5bf9\u8c61\u7684\u5c5e\u6027\u3002 \u5b83\u7528\u4e8e\u63cf\u8ff0\u5f53\u524dNode.js \u8fdb\u7a0b\u72b6\u6001\u7684\u5bf9\u8c61\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u7684\u7b80\u5355\u63a5\u53e3\u3002\u901a\u5e38\u5728\u4f60\u5199\u672c\u5730\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5c11\u4e0d\u4e86\u8981 \u548c\u5b83\u6253\u4ea4\u9053\u3002\u4e0b\u9762\u5c06\u4f1a\u4ecb\u7ecd process \u5bf9\u8c61\u7684\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u6210\u5458\u65b9\u6cd5\u3002 \u5e8f\u53f7 \u4e8b\u4ef6 & \u63cf\u8ff0 1 exit \u5f53\u8fdb\u7a0b\u51c6\u5907\u9000\u51fa\u65f6\u89e6\u53d1\u3002 2 beforeExit \u5f53 node \u6e05\u7a7a\u4e8b\u4ef6\u5faa\u73af\uff0c\u5e76\u4e14\u6ca1\u6709\u5176\u4ed6\u5b89\u6392\u65f6\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u5f53\u6ca1\u6709\u8fdb\u7a0b\u5b89\u6392\u65f6 node \u9000\u51fa\uff0c\u4f46\u662f 'beforeExit' \u7684\u76d1\u542c\u5668\u53ef\u4ee5\u5f02\u6b65\u8c03\u7528\uff0c\u8fd9\u6837 node \u5c31\u4f1a\u7ee7\u7eed\u6267\u884c\u3002 3 uncaughtException \u5f53\u4e00\u4e2a\u5f02\u5e38\u5192\u6ce1\u56de\u5230\u4e8b\u4ef6\u5faa\u73af\uff0c\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6\u3002\u5982\u679c\u7ed9\u5f02\u5e38\u6dfb\u52a0\u4e86\u76d1\u89c6\u5668\uff0c\u9ed8\u8ba4\u7684\u64cd\u4f5c\uff08\u6253\u5370\u5806\u6808\u8ddf\u8e2a\u4fe1\u606f\u5e76\u9000\u51fa\uff09\u5c31\u4e0d\u4f1a\u53d1\u751f\u3002 4 Signal \u4e8b\u4ef6 \u5f53\u8fdb\u7a0b\u63a5\u6536\u5230\u4fe1\u53f7\u65f6\u5c31\u89e6\u53d1\u3002\u4fe1\u53f7\u5217\u8868\u8be6\u89c1\u6807\u51c6\u7684 POSIX \u4fe1\u53f7\u540d\uff0c\u5982 SIGINT\u3001SIGUSR1 \u7b49\u3002 \u5b9e\u4f8b \u00b6 \u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a process.on('exit', function(code) { // \u4ee5\u4e0b\u4ee3\u7801\u6c38\u8fdc\u4e0d\u4f1a\u6267\u884c setTimeout(function() { console.log(\"\u8be5\u4ee3\u7801\u4e0d\u4f1a\u6267\u884c\"); }, 0); console.log('\u9000\u51fa\u7801\u4e3a:', code); }); console.log(\"\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f\"); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js \u7a0b\u5e8f\u6267\u884c\u7ed3\u675f \u9000\u51fa\u7801\u4e3a: 0 \u9000\u51fa\u72b6\u6001\u7801 \u00b6 \u9000\u51fa\u72b6\u6001\u7801\u5982\u4e0b\u6240\u793a\uff1a \u72b6\u6001\u7801 \u540d\u79f0 & \u63cf\u8ff0 1 Uncaught Fatal Exception \u6709\u672a\u6355\u83b7\u5f02\u5e38\uff0c\u5e76\u4e14\u6ca1\u6709\u88ab\u57df\u6216 uncaughtException \u5904\u7406\u51fd\u6570\u5904\u7406\u3002 2 Unused \u4fdd\u7559 3 Internal JavaScript Parse Error JavaScript\u7684\u6e90\u7801\u542f\u52a8 Node \u8fdb\u7a0b\u65f6\u5f15\u8d77\u89e3\u6790\u9519\u8bef\u3002\u975e\u5e38\u7f55\u89c1\uff0c\u4ec5\u4f1a\u5728\u5f00\u53d1 Node \u65f6\u624d\u4f1a\u6709\u3002 4 Internal JavaScript Evaluation Failure JavaScript \u7684\u6e90\u7801\u542f\u52a8 Node \u8fdb\u7a0b\uff0c\u8bc4\u4f30\u65f6\u8fd4\u56de\u51fd\u6570\u5931\u8d25\u3002\u975e\u5e38\u7f55\u89c1\uff0c\u4ec5\u4f1a\u5728\u5f00\u53d1 Node \u65f6\u624d\u4f1a\u6709\u3002 5 Fatal Error V8 \u91cc\u81f4\u547d\u7684\u4e0d\u53ef\u6062\u590d\u7684\u9519\u8bef\u3002\u901a\u5e38\u4f1a\u6253\u5370\u5230 stderr \uff0c\u5185\u5bb9\u4e3a\uff1a FATAL ERROR 6 Non-function Internal Exception Handler \u672a\u6355\u83b7\u5f02\u5e38\uff0c\u5185\u90e8\u5f02\u5e38\u5904\u7406\u51fd\u6570\u4e0d\u77e5\u4e3a\u4f55\u8bbe\u7f6e\u4e3aon-function\uff0c\u5e76\u4e14\u4e0d\u80fd\u88ab\u8c03\u7528\u3002 7 Internal Exception Handler Run-Time Failure \u672a\u6355\u83b7\u7684\u5f02\u5e38\uff0c \u5e76\u4e14\u5f02\u5e38\u5904\u7406\u51fd\u6570\u5904\u7406\u65f6\u81ea\u5df1\u629b\u51fa\u4e86\u5f02\u5e38\u3002\u4f8b\u5982\uff0c\u5982\u679c process.on('uncaughtException') \u6216 domain.on('error') \u629b\u51fa\u4e86\u5f02\u5e38\u3002 8 Unused \u4fdd\u7559 9 Invalid Argument \u53ef\u80fd\u662f\u7ed9\u4e86\u672a\u77e5\u7684\u53c2\u6570\uff0c\u6216\u8005\u7ed9\u7684\u53c2\u6570\u6ca1\u6709\u503c\u3002 10 Internal JavaScript Run-Time Failure JavaScript\u7684\u6e90\u7801\u542f\u52a8 Node \u8fdb\u7a0b\u65f6\u629b\u51fa\u9519\u8bef\uff0c\u975e\u5e38\u7f55\u89c1\uff0c\u4ec5\u4f1a\u5728\u5f00\u53d1 Node \u65f6\u624d\u4f1a\u6709\u3002 12 Invalid Debug Argument \u8bbe\u7f6e\u4e86\u53c2\u6570--debug \u548c/\u6216 --debug-brk\uff0c\u4f46\u662f\u9009\u62e9\u4e86\u9519\u8bef\u7aef\u53e3\u3002 128 Signal Exits \u5982\u679c Node \u63a5\u6536\u5230\u81f4\u547d\u4fe1\u53f7\uff0c\u6bd4\u5982SIGKILL \u6216 SIGHUP\uff0c\u90a3\u4e48\u9000\u51fa\u4ee3\u7801\u5c31\u662f128 \u52a0\u4fe1\u53f7\u4ee3\u7801\u3002\u8fd9\u662f\u6807\u51c6\u7684 Unix \u505a\u6cd5\uff0c\u9000\u51fa\u4fe1\u53f7\u4ee3\u7801\u653e\u5728\u9ad8\u4f4d\u3002 Process \u5c5e\u6027 \u00b6 Process \u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u7528\u7684\u5c5e\u6027\uff0c\u4fbf\u4e8e\u6211\u4eec\u66f4\u597d\u7684\u63a7\u5236\u7cfb\u7edf\u7684\u4ea4\u4e92\uff1a \u5e8f\u53f7. \u5c5e\u6027 & \u63cf\u8ff0 1 stdout \u6807\u51c6\u8f93\u51fa\u6d41\u3002 2 stderr \u6807\u51c6\u9519\u8bef\u6d41\u3002 3 stdin \u6807\u51c6\u8f93\u5165\u6d41\u3002 4 argv argv \u5c5e\u6027\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u7531\u547d\u4ee4\u884c\u6267\u884c\u811a\u672c\u65f6\u7684\u5404\u4e2a\u53c2\u6570\u7ec4\u6210\u3002\u5b83\u7684\u7b2c\u4e00\u4e2a\u6210\u5458\u603b\u662fnode\uff0c\u7b2c\u4e8c\u4e2a\u6210\u5458\u662f\u811a\u672c\u6587\u4ef6\u540d\uff0c\u5176\u4f59\u6210\u5458\u662f\u811a\u672c\u6587\u4ef6\u7684\u53c2\u6570\u3002 5 execPath \u8fd4\u56de\u6267\u884c\u5f53\u524d\u811a\u672c\u7684 Node \u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\u3002 6 execArgv \u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u6210\u5458\u662f\u547d\u4ee4\u884c\u4e0b\u6267\u884c\u811a\u672c\u65f6\uff0c\u5728Node\u53ef\u6267\u884c\u6587\u4ef6\u4e0e\u811a\u672c\u6587\u4ef6\u4e4b\u95f4\u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002 7 env \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6210\u5458\u4e3a\u5f53\u524d shell \u7684\u73af\u5883\u53d8\u91cf 8 exitCode \u8fdb\u7a0b\u9000\u51fa\u65f6\u7684\u4ee3\u7801\uff0c\u5982\u679c\u8fdb\u7a0b\u4f18\u901a\u8fc7 process.exit() \u9000\u51fa\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u9000\u51fa\u7801\u3002 9 version Node \u7684\u7248\u672c\uff0c\u6bd4\u5982v0.10.18\u3002 10 versions \u4e00\u4e2a\u5c5e\u6027\uff0c\u5305\u542b\u4e86 node \u7684\u7248\u672c\u548c\u4f9d\u8d56. 11 config \u4e00\u4e2a\u5305\u542b\u7528\u6765\u7f16\u8bd1\u5f53\u524d node \u6267\u884c\u6587\u4ef6\u7684 javascript \u914d\u7f6e\u9009\u9879\u7684\u5bf9\u8c61\u3002\u5b83\u4e0e\u8fd0\u884c ./configure \u811a\u672c\u751f\u6210\u7684 \"config.gypi\" \u6587\u4ef6\u76f8\u540c\u3002 12 pid \u5f53\u524d\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u53f7\u3002 13 title \u8fdb\u7a0b\u540d\uff0c\u9ed8\u8ba4\u503c\u4e3a\"node\"\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8be5\u503c\u3002 14 arch \u5f53\u524d CPU \u7684\u67b6\u6784\uff1a'arm'\u3001'ia32' \u6216\u8005 'x64'\u3002 15 platform \u8fd0\u884c\u7a0b\u5e8f\u6240\u5728\u7684\u5e73\u53f0\u7cfb\u7edf 'darwin', 'freebsd', 'linux', 'sunos' \u6216 'win32' 16 mainModule require.main \u7684\u5907\u9009\u65b9\u6cd5\u3002\u4e0d\u540c\u70b9\uff0c\u5982\u679c\u4e3b\u6a21\u5757\u5728\u8fd0\u884c\u65f6\u6539\u53d8\uff0crequire.main\u53ef\u80fd\u4f1a\u7ee7\u7eed\u8fd4\u56de\u8001\u7684\u6a21\u5757\u3002\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u8fd9\u4e24\u8005\u5f15\u7528\u4e86\u540c\u4e00\u4e2a\u6a21\u5757\u3002 \u5b9e\u4f8b \u00b6 \u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a // \u8f93\u51fa\u5230\u7ec8\u7aef process.stdout.write(\"Hello World!\" + \"\\n\"); // \u901a\u8fc7\u53c2\u6570\u8bfb\u53d6 process.argv.forEach(function(val, index, array) { console.log(index + ': ' + val); }); // \u83b7\u53d6\u6267\u884c\u8def\u5f84 console.log(process.execPath); // \u5e73\u53f0\u4fe1\u606f console.log(process.platform); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js Hello World! 0: node 1: /web/www/node/main.js /usr/local/node/0.10.36/bin/node darwin \u65b9\u6cd5\u53c2\u8003\u624b\u518c \u00b6 Process \u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u7528\u7684\u65b9\u6cd5\uff0c\u4fbf\u4e8e\u6211\u4eec\u66f4\u597d\u7684\u63a7\u5236\u7cfb\u7edf\u7684\u4ea4\u4e92\uff1a \u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 abort() \u8fd9\u5c06\u5bfc\u81f4 node \u89e6\u53d1 abort \u4e8b\u4ef6\u3002\u4f1a\u8ba9 node \u9000\u51fa\u5e76\u751f\u6210\u4e00\u4e2a\u6838\u5fc3\u6587\u4ef6\u3002 2 chdir(directory) \u6539\u53d8\u5f53\u524d\u5de5\u4f5c\u8fdb\u7a0b\u7684\u76ee\u5f55\uff0c\u5982\u679c\u64cd\u4f5c\u5931\u8d25\u629b\u51fa\u5f02\u5e38\u3002 3 cwd() \u8fd4\u56de\u5f53\u524d\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55 4 exit([code]) \u4f7f\u7528\u6307\u5b9a\u7684 code \u7ed3\u675f\u8fdb\u7a0b\u3002\u5982\u679c\u5ffd\u7565\uff0c\u5c06\u4f1a\u4f7f\u7528 code 0\u3002 5 getgid() \u83b7\u53d6\u8fdb\u7a0b\u7684\u7fa4\u7ec4\u6807\u8bc6\uff08\u53c2\u89c1 getgid(2)\uff09\u3002\u83b7\u53d6\u5230\u5f97\u65f6\u7fa4\u7ec4\u7684\u6570\u5b57 id\uff0c\u800c\u4e0d\u662f\u540d\u5b57\u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 6 setgid(id) \u8bbe\u7f6e\u8fdb\u7a0b\u7684\u7fa4\u7ec4\u6807\u8bc6\uff08\u53c2\u89c1 setgid(2)\uff09\u3002\u53ef\u4ee5\u63a5\u6536\u6570\u5b57 ID \u6216\u8005\u7fa4\u7ec4\u540d\u3002\u5982\u679c\u6307\u5b9a\u4e86\u7fa4\u7ec4\u540d\uff0c\u4f1a\u963b\u585e\u7b49\u5f85\u89e3\u6790\u4e3a\u6570\u5b57 ID \u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 7 getuid() \u83b7\u53d6\u8fdb\u7a0b\u7684\u7528\u6237\u6807\u8bc6(\u53c2\u89c1 getuid(2))\u3002\u8fd9\u662f\u6570\u5b57\u7684\u7528\u6237 id\uff0c\u4e0d\u662f\u7528\u6237\u540d\u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 8 setuid(id) \u8bbe\u7f6e\u8fdb\u7a0b\u7684\u7528\u6237\u6807\u8bc6\uff08\u53c2\u89c1setuid(2)\uff09\u3002\u63a5\u6536\u6570\u5b57 ID\u6216\u5b57\u7b26\u4e32\u540d\u5b57\u3002\u679c\u6307\u5b9a\u4e86\u7fa4\u7ec4\u540d\uff0c\u4f1a\u963b\u585e\u7b49\u5f85\u89e3\u6790\u4e3a\u6570\u5b57 ID \u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 9 getgroups() \u8fd4\u56de\u8fdb\u7a0b\u7684\u7fa4\u7ec4 iD \u6570\u7ec4\u3002POSIX \u7cfb\u7edf\u6ca1\u6709\u4fdd\u8bc1\u4e00\u5b9a\u6709\uff0c\u4f46\u662f node.js \u4fdd\u8bc1\u6709\u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 10 setgroups(groups) \u8bbe\u7f6e\u8fdb\u7a0b\u7684\u7fa4\u7ec4 ID\u3002\u8fd9\u662f\u6388\u6743\u64cd\u4f5c\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u6709 root \u6743\u9650\uff0c\u6216\u8005\u6709 CAP_SETGID \u80fd\u529b\u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 11 initgroups(user, extra_group) \u8bfb\u53d6 /etc/group \uff0c\u5e76\u521d\u59cb\u5316\u7fa4\u7ec4\u8bbf\u95ee\u5217\u8868\uff0c\u4f7f\u7528\u6210\u5458\u6240\u5728\u7684\u6240\u6709\u7fa4\u7ec4\u3002\u8fd9\u662f\u6388\u6743\u64cd\u4f5c\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u6709 root \u6743\u9650\uff0c\u6216\u8005\u6709 CAP_SETGID \u80fd\u529b\u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 12 kill(pid[, signal]) \u53d1\u9001\u4fe1\u53f7\u7ed9\u8fdb\u7a0b. pid \u662f\u8fdb\u7a0bid\uff0c\u5e76\u4e14 signal \u662f\u53d1\u9001\u7684\u4fe1\u53f7\u7684\u5b57\u7b26\u4e32\u63cf\u8ff0\u3002\u4fe1\u53f7\u540d\u662f\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982 'SIGINT' \u6216 'SIGHUP'\u3002\u5982\u679c\u5ffd\u7565\uff0c\u4fe1\u53f7\u4f1a\u662f 'SIGTERM'\u3002 13 memoryUsage() \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u63cf\u8ff0\u4e86 Node \u8fdb\u7a0b\u6240\u7528\u7684\u5185\u5b58\u72b6\u51b5\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\u3002 14 nextTick(callback) \u4e00\u65e6\u5f53\u524d\u4e8b\u4ef6\u5faa\u73af\u7ed3\u675f\uff0c\u8c03\u7528\u56de\u8c03\u51fd\u6570\u3002 15 umask([mask]) \u8bbe\u7f6e\u6216\u8bfb\u53d6\u8fdb\u7a0b\u6587\u4ef6\u7684\u63a9\u7801\u3002\u5b50\u8fdb\u7a0b\u4ece\u7236\u8fdb\u7a0b\u7ee7\u627f\u63a9\u7801\u3002\u5982\u679cmask \u53c2\u6570\u6709\u6548\uff0c\u8fd4\u56de\u65e7\u7684\u63a9\u7801\u3002\u5426\u5219\uff0c\u8fd4\u56de\u5f53\u524d\u63a9\u7801\u3002 16 uptime() \u8fd4\u56de Node \u5df2\u7ecf\u8fd0\u884c\u7684\u79d2\u6570\u3002 17 hrtime() \u8fd4\u56de\u5f53\u524d\u8fdb\u7a0b\u7684\u9ad8\u5206\u8fa8\u65f6\u95f4\uff0c\u5f62\u5f0f\u4e3a [seconds, nanoseconds]\u6570\u7ec4\u3002\u5b83\u662f\u76f8\u5bf9\u4e8e\u8fc7\u53bb\u7684\u4efb\u610f\u4e8b\u4ef6\u3002\u8be5\u503c\u4e0e\u65e5\u671f\u65e0\u5173\uff0c\u56e0\u6b64\u4e0d\u53d7\u65f6\u949f\u6f02\u79fb\u7684\u5f71\u54cd\u3002\u4e3b\u8981\u7528\u9014\u662f\u53ef\u4ee5\u901a\u8fc7\u7cbe\u786e\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u6765\u8861\u91cf\u7a0b\u5e8f\u7684\u6027\u80fd\u3002 \u4f60\u53ef\u4ee5\u5c06\u4e4b\u524d\u7684\u7ed3\u679c\u4f20\u9012\u7ed9\u5f53\u524d\u7684 process.hrtime() \uff0c\u4f1a\u8fd4\u56de\u4e24\u8005\u95f4\u7684\u65f6\u95f4\u5dee\uff0c\u7528\u6765\u57fa\u51c6\u548c\u6d4b\u91cf\u65f6\u95f4\u95f4\u9694\u3002 \u5b9e\u4f8b \u00b6 \u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a // \u8f93\u51fa\u5f53\u524d\u76ee\u5f55 console.log('\u5f53\u524d\u76ee\u5f55: ' + process.cwd()); // \u8f93\u51fa\u5f53\u524d\u7248\u672c console.log('\u5f53\u524d\u7248\u672c: ' + process.version); // \u8f93\u51fa\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 console.log(process.memoryUsage()); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js \u5f53\u524d\u76ee\u5f55: /web/com/runoob/nodejs \u5f53\u524d\u7248\u672c: v0.10.36 { rss: 12541952, heapTotal: 4083456, heapUsed: 2157056 }","title":"14-Node.js \u5168\u5c40\u5bf9\u8c61"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#nodejs","text":"JavaScript \u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684\u5bf9\u8c61\uff0c\u79f0\u4e3a\u5168\u5c40\u5bf9\u8c61\uff08Global Object\uff09\uff0c\u5b83\u53ca\u5176\u6240\u6709\u5c5e\u6027\u90fd\u53ef\u4ee5\u5728\u7a0b\u5e8f\u7684\u4efb\u4f55\u5730\u65b9\u8bbf\u95ee\uff0c\u5373\u5168\u5c40\u53d8\u91cf\u3002 \u5728\u6d4f\u89c8\u5668 JavaScript \u4e2d\uff0c\u901a\u5e38 window \u662f\u5168\u5c40\u5bf9\u8c61\uff0c \u800c Node.js \u4e2d\u7684\u5168\u5c40\u5bf9\u8c61\u662f global\uff0c\u6240\u6709\u5168\u5c40\u53d8\u91cf\uff08\u9664\u4e86 global \u672c\u8eab\u4ee5\u5916\uff09\u90fd\u662f global \u5bf9\u8c61\u7684\u5c5e\u6027\u3002 \u5728 Node.js \u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5230 global \u7684\u5c5e\u6027\uff0c\u800c\u4e0d\u9700\u8981\u5728\u5e94\u7528\u4e2d\u5305\u542b\u5b83\u3002","title":"Node.js \u5168\u5c40\u5bf9\u8c61"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_1","text":"global \u6700\u6839\u672c\u7684\u4f5c\u7528\u662f\u4f5c\u4e3a\u5168\u5c40\u53d8\u91cf\u7684\u5bbf\u4e3b\u3002\u6309\u7167 ECMAScript \u7684\u5b9a\u4e49\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6761 \u4ef6\u7684\u53d8\u91cf\u662f\u5168\u5c40\u53d8\u91cf\uff1a \u5728\u6700\u5916\u5c42\u5b9a\u4e49\u7684\u53d8\u91cf\uff1b \u5168\u5c40\u5bf9\u8c61\u7684\u5c5e\u6027\uff1b \u9690\u5f0f\u5b9a\u4e49\u7684\u53d8\u91cf\uff08\u672a\u5b9a\u4e49\u76f4\u63a5\u8d4b\u503c\u7684\u53d8\u91cf\uff09\u3002 \u5f53\u4f60\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u8fd9\u4e2a\u53d8\u91cf\u540c\u65f6\u4e5f\u4f1a\u6210\u4e3a\u5168\u5c40\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u9700\u8981\u6ce8 \u610f\u7684\u662f\uff0c\u5728 Node.js \u4e2d\u4f60\u4e0d\u53ef\u80fd\u5728\u6700\u5916\u5c42\u5b9a\u4e49\u53d8\u91cf\uff0c\u56e0\u4e3a\u6240\u6709\u7528\u6237\u4ee3\u7801\u90fd\u662f\u5c5e\u4e8e\u5f53\u524d\u6a21\u5757\u7684\uff0c \u800c\u6a21\u5757\u672c\u8eab\u4e0d\u662f\u6700\u5916\u5c42\u4e0a\u4e0b\u6587\u3002 \u6ce8\u610f\uff1a \u6700\u597d\u4e0d\u8981\u4f7f\u7528 var \u5b9a\u4e49\u53d8\u91cf\u4ee5\u907f\u514d\u5f15\u5165\u5168\u5c40\u53d8\u91cf\uff0c\u56e0\u4e3a\u5168\u5c40\u53d8\u91cf\u4f1a\u6c61\u67d3\u547d\u540d\u7a7a\u95f4\uff0c\u63d0\u9ad8\u4ee3\u7801\u7684\u8026\u5408\u98ce\u9669\u3002","title":"\u5168\u5c40\u5bf9\u8c61\u4e0e\u5168\u5c40\u53d8\u91cf"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#__filename","text":"__filename \u8868\u793a\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u811a\u672c\u7684\u6587\u4ef6\u540d\u3002\u5b83\u5c06\u8f93\u51fa\u6587\u4ef6\u6240\u5728\u4f4d\u7f6e\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u4e14\u548c\u547d\u4ee4\u884c\u53c2\u6570\u6240\u6307\u5b9a\u7684\u6587\u4ef6\u540d\u4e0d\u4e00\u5b9a\u76f8\u540c\u3002 \u5982\u679c\u5728\u6a21\u5757\u4e2d\uff0c\u8fd4\u56de\u7684\u503c\u662f\u6a21\u5757\u6587\u4ef6\u7684\u8def\u5f84\u3002","title":"__filename"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_2","text":"\u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a // \u8f93\u51fa\u5168\u5c40\u53d8\u91cf __filename \u7684\u503c console.log( __filename ); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js /web/com/runoob/nodejs/main.js","title":"\u5b9e\u4f8b"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#__dirname","text":"__dirname \u8868\u793a\u5f53\u524d\u6267\u884c\u811a\u672c\u6240\u5728\u7684\u76ee\u5f55\u3002","title":"__dirname"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_3","text":"\u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a // \u8f93\u51fa\u5168\u5c40\u53d8\u91cf __dirname \u7684\u503c console.log( __dirname ); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js /web/com/runoob/nodejs","title":"\u5b9e\u4f8b"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#settimeoutcb-ms","text":"setTimeout(cb, ms) \u5168\u5c40\u51fd\u6570\u5728\u6307\u5b9a\u7684\u6beb\u79d2(ms)\u6570\u540e\u6267\u884c\u6307\u5b9a\u51fd\u6570(cb)\u3002\uff1asetTimeout() \u53ea\u6267\u884c\u4e00\u6b21\u6307\u5b9a\u51fd\u6570\u3002 \u8fd4\u56de\u4e00\u4e2a\u4ee3\u8868\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u503c\u3002","title":"setTimeout(cb, ms)"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_4","text":"\u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a function printHello(){ console.log( \"Hello, World!\"); } // \u4e24\u79d2\u540e\u6267\u884c\u4ee5\u4e0a\u51fd\u6570 setTimeout(printHello, 2000); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js Hello, World!","title":"\u5b9e\u4f8b"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#cleartimeoutt","text":"clearTimeout( t ) \u5168\u5c40\u51fd\u6570\u7528\u4e8e\u505c\u6b62\u4e00\u4e2a\u4e4b\u524d\u901a\u8fc7 setTimeout() \u521b\u5efa\u7684\u5b9a\u65f6\u5668\u3002 \u53c2\u6570 t \u662f\u901a\u8fc7 setTimeout() \u51fd\u6570\u521b\u5efa\u7684\u5b9a\u65f6\u5668\u3002","title":"clearTimeout(t)"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_5","text":"\u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a function printHello(){ console.log( \"Hello, World!\"); } // \u4e24\u79d2\u540e\u6267\u884c\u4ee5\u4e0a\u51fd\u6570 var t = setTimeout(printHello, 2000); // \u6e05\u9664\u5b9a\u65f6\u5668 clearTimeout(t); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js","title":"\u5b9e\u4f8b"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#setintervalcb-ms","text":"setInterval(cb, ms) \u5168\u5c40\u51fd\u6570\u5728\u6307\u5b9a\u7684\u6beb\u79d2(ms)\u6570\u540e\u6267\u884c\u6307\u5b9a\u51fd\u6570(cb)\u3002 \u8fd4\u56de\u4e00\u4e2a\u4ee3\u8868\u5b9a\u65f6\u5668\u7684\u53e5\u67c4\u503c\u3002\u53ef\u4ee5\u4f7f\u7528 clearInterval(t) \u51fd\u6570\u6765\u6e05\u9664\u5b9a\u65f6\u5668\u3002 setInterval() \u65b9\u6cd5\u4f1a\u4e0d\u505c\u5730\u8c03\u7528\u51fd\u6570\uff0c\u76f4\u5230 clearInterval() \u88ab\u8c03\u7528\u6216\u7a97\u53e3\u88ab\u5173\u95ed\u3002","title":"setInterval(cb, ms)"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_6","text":"\u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a function printHello(){ console.log( \"Hello, World!\"); } // \u4e24\u79d2\u540e\u6267\u884c\u4ee5\u4e0a\u51fd\u6570 setInterval(printHello, 2000); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js Hello, World! Hello, World! Hello, World! Hello, World! Hello, World! \u2026\u2026 \u4ee5\u4e0a\u7a0b\u5e8f\u6bcf\u9694\u4e24\u79d2\u5c31\u4f1a\u8f93\u51fa\u4e00\u6b21\"Hello, World!\"\uff0c\u4e14\u4f1a\u6c38\u4e45\u6267\u884c\u4e0b\u53bb\uff0c\u76f4\u5230\u4f60\u6309\u4e0b ctrl + c \u6309\u94ae\u3002","title":"\u5b9e\u4f8b"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#console","text":"console \u7528\u4e8e\u63d0\u4f9b\u63a7\u5236\u53f0\u6807\u51c6\u8f93\u51fa\uff0c\u5b83\u662f\u7531 Internet Explorer \u7684 JScript \u5f15\u64ce\u63d0\u4f9b\u7684\u8c03\u8bd5\u5de5\u5177\uff0c\u540e\u6765\u9010\u6e10\u6210\u4e3a\u6d4f\u89c8\u5668\u7684\u5b9e\u65bd\u6807\u51c6\u3002 Node.js \u6cbf\u7528\u4e86\u8fd9\u4e2a\u6807\u51c6\uff0c\u63d0\u4f9b\u4e0e\u4e60\u60ef\u884c\u4e3a\u4e00\u81f4\u7684 console \u5bf9\u8c61\uff0c\u7528\u4e8e\u5411\u6807\u51c6\u8f93\u51fa\u6d41\uff08stdout\uff09\u6216\u6807\u51c6\u9519\u8bef\u6d41\uff08stderr\uff09\u8f93\u51fa\u5b57\u7b26\u3002","title":"console"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#console_1","text":"\u4ee5\u4e0b\u4e3a console \u5bf9\u8c61\u7684\u65b9\u6cd5: \u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 console.log([data][, ...]) \u5411\u6807\u51c6\u8f93\u51fa\u6d41\u6253\u5370\u5b57\u7b26\u5e76\u4ee5\u6362\u884c\u7b26\u7ed3\u675f\u3002\u8be5\u65b9\u6cd5\u63a5\u6536\u82e5\u5e72 \u4e2a\u53c2\u6570\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5219\u8f93\u51fa\u8fd9\u4e2a\u53c2\u6570\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u3002\u5982\u679c\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5219 \u4ee5\u7c7b\u4f3c\u4e8eC \u8bed\u8a00 printf() \u547d\u4ee4\u7684\u683c\u5f0f\u8f93\u51fa\u3002 2 console.info([data][, ...]) \u8be5\u547d\u4ee4\u7684\u4f5c\u7528\u662f\u8fd4\u56de\u4fe1\u606f\u6027\u6d88\u606f\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4e0econsole.log\u5dee\u522b\u5e76\u4e0d\u5927\uff0c\u9664\u4e86\u5728chrome\u4e2d\u53ea\u4f1a\u8f93\u51fa\u6587\u5b57\u5916\uff0c\u5176\u4f59\u7684\u4f1a\u663e\u793a\u4e00\u4e2a\u84dd\u8272\u7684\u60ca\u53f9\u53f7\u3002 3 console.error([data][, ...]) \u8f93\u51fa\u9519\u8bef\u6d88\u606f\u7684\u3002\u63a7\u5236\u53f0\u5728\u51fa\u73b0\u9519\u8bef\u65f6\u4f1a\u663e\u793a\u662f\u7ea2\u8272\u7684\u53c9\u5b50\u3002 4 console.warn([data][, ...]) \u8f93\u51fa\u8b66\u544a\u6d88\u606f\u3002\u63a7\u5236\u53f0\u51fa\u73b0\u6709\u9ec4\u8272\u7684\u60ca\u53f9\u53f7\u3002 5 console.dir(obj[, options]) \u7528\u6765\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u68c0\u67e5\uff08inspect\uff09\uff0c\u5e76\u4ee5\u6613\u4e8e\u9605\u8bfb\u548c\u6253\u5370\u7684\u683c\u5f0f\u663e\u793a\u3002 6 console.time(label) \u8f93\u51fa\u65f6\u95f4\uff0c\u8868\u793a\u8ba1\u65f6\u5f00\u59cb\u3002 7 console.timeEnd(label) \u7ed3\u675f\u65f6\u95f4\uff0c\u8868\u793a\u8ba1\u65f6\u7ed3\u675f\u3002 8 console.trace(message[, ...]) \u5f53\u524d\u6267\u884c\u7684\u4ee3\u7801\u5728\u5806\u6808\u4e2d\u7684\u8c03\u7528\u8def\u5f84\uff0c\u8fd9\u4e2a\u6d4b\u8bd5\u51fd\u6570\u8fd0\u884c\u5f88\u6709\u5e2e\u52a9\uff0c\u53ea\u8981\u7ed9\u60f3\u6d4b\u8bd5\u7684\u51fd\u6570\u91cc\u9762\u52a0\u5165 console.trace \u5c31\u884c\u4e86\u3002 9 console.assert(value[, message][, ...]) \u7528\u4e8e\u5224\u65ad\u67d0\u4e2a\u8868\u8fbe\u5f0f\u6216\u53d8\u91cf\u662f\u5426\u4e3a\u771f\uff0c\u63a5\u6536\u4e24\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8868\u8fbe\u5f0f\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5b57\u7b26\u4e32\u3002\u53ea\u6709\u5f53\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3afalse\uff0c\u624d\u4f1a\u8f93\u51fa\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u5426\u5219\u4e0d\u4f1a\u6709\u4efb\u4f55\u7ed3\u679c\u3002 console.log()\uff1a\u5411\u6807\u51c6\u8f93\u51fa\u6d41\u6253\u5370\u5b57\u7b26\u5e76\u4ee5\u6362\u884c\u7b26\u7ed3\u675f\u3002 console.log \u63a5\u6536\u82e5\u5e72 \u4e2a\u53c2\u6570\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5219\u8f93\u51fa\u8fd9\u4e2a\u53c2\u6570\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f\u3002\u5982\u679c\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5219 \u4ee5\u7c7b\u4f3c\u4e8eC \u8bed\u8a00 printf() \u547d\u4ee4\u7684\u683c\u5f0f\u8f93\u51fa\u3002 \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u6ca1\u6709 \u53c2\u6570\uff0c\u53ea\u6253\u5370\u4e00\u4e2a\u6362\u884c\u3002 console.log('Hello world'); console.log('byvoid%diovyb'); console.log('byvoid%diovyb', 1991); \u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a Hello world byvoid%diovyb byvoid1991iovyb console.error()\uff1a\u4e0econsole.log() \u7528\u6cd5\u76f8\u540c\uff0c\u53ea\u662f\u5411\u6807\u51c6\u9519\u8bef\u6d41\u8f93\u51fa\u3002 console.trace()\uff1a\u5411\u6807\u51c6\u9519\u8bef\u6d41\u8f93\u51fa\u5f53\u524d\u7684\u8c03\u7528\u6808\u3002 console.trace(); \u8fd0\u884c\u7ed3\u679c\u4e3a\uff1a Trace: at Object.<anonymous> (/home/byvoid/consoletrace.js:1:71) at Module._compile (module.js:441:26) at Object..js (module.js:459:10) at Module.load (module.js:348:31) at Function._load (module.js:308:12) at Array.0 (module.js:479:10) at EventEmitter._tickCallback (node.js:192:40)","title":"console \u65b9\u6cd5"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_7","text":"\u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a console.info(\"\u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\uff1a\"); var counter = 10; console.log(\"\u8ba1\u6570: %d\", counter); console.time(\"\u83b7\u53d6\u6570\u636e\"); // // \u6267\u884c\u4e00\u4e9b\u4ee3\u7801 // console.timeEnd('\u83b7\u53d6\u6570\u636e'); console.info(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002\") \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js \u7a0b\u5e8f\u5f00\u59cb\u6267\u884c\uff1a \u8ba1\u6570: 10 \u83b7\u53d6\u6570\u636e: 0ms \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5","title":"\u5b9e\u4f8b"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#process","text":"process \u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u5373 global \u5bf9\u8c61\u7684\u5c5e\u6027\u3002 \u5b83\u7528\u4e8e\u63cf\u8ff0\u5f53\u524dNode.js \u8fdb\u7a0b\u72b6\u6001\u7684\u5bf9\u8c61\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u7684\u7b80\u5355\u63a5\u53e3\u3002\u901a\u5e38\u5728\u4f60\u5199\u672c\u5730\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684\u65f6\u5019\uff0c\u5c11\u4e0d\u4e86\u8981 \u548c\u5b83\u6253\u4ea4\u9053\u3002\u4e0b\u9762\u5c06\u4f1a\u4ecb\u7ecd process \u5bf9\u8c61\u7684\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u6210\u5458\u65b9\u6cd5\u3002 \u5e8f\u53f7 \u4e8b\u4ef6 & \u63cf\u8ff0 1 exit \u5f53\u8fdb\u7a0b\u51c6\u5907\u9000\u51fa\u65f6\u89e6\u53d1\u3002 2 beforeExit \u5f53 node \u6e05\u7a7a\u4e8b\u4ef6\u5faa\u73af\uff0c\u5e76\u4e14\u6ca1\u6709\u5176\u4ed6\u5b89\u6392\u65f6\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u5f53\u6ca1\u6709\u8fdb\u7a0b\u5b89\u6392\u65f6 node \u9000\u51fa\uff0c\u4f46\u662f 'beforeExit' \u7684\u76d1\u542c\u5668\u53ef\u4ee5\u5f02\u6b65\u8c03\u7528\uff0c\u8fd9\u6837 node \u5c31\u4f1a\u7ee7\u7eed\u6267\u884c\u3002 3 uncaughtException \u5f53\u4e00\u4e2a\u5f02\u5e38\u5192\u6ce1\u56de\u5230\u4e8b\u4ef6\u5faa\u73af\uff0c\u89e6\u53d1\u8fd9\u4e2a\u4e8b\u4ef6\u3002\u5982\u679c\u7ed9\u5f02\u5e38\u6dfb\u52a0\u4e86\u76d1\u89c6\u5668\uff0c\u9ed8\u8ba4\u7684\u64cd\u4f5c\uff08\u6253\u5370\u5806\u6808\u8ddf\u8e2a\u4fe1\u606f\u5e76\u9000\u51fa\uff09\u5c31\u4e0d\u4f1a\u53d1\u751f\u3002 4 Signal \u4e8b\u4ef6 \u5f53\u8fdb\u7a0b\u63a5\u6536\u5230\u4fe1\u53f7\u65f6\u5c31\u89e6\u53d1\u3002\u4fe1\u53f7\u5217\u8868\u8be6\u89c1\u6807\u51c6\u7684 POSIX \u4fe1\u53f7\u540d\uff0c\u5982 SIGINT\u3001SIGUSR1 \u7b49\u3002","title":"process"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_8","text":"\u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a process.on('exit', function(code) { // \u4ee5\u4e0b\u4ee3\u7801\u6c38\u8fdc\u4e0d\u4f1a\u6267\u884c setTimeout(function() { console.log(\"\u8be5\u4ee3\u7801\u4e0d\u4f1a\u6267\u884c\"); }, 0); console.log('\u9000\u51fa\u7801\u4e3a:', code); }); console.log(\"\u7a0b\u5e8f\u6267\u884c\u7ed3\u675f\"); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js \u7a0b\u5e8f\u6267\u884c\u7ed3\u675f \u9000\u51fa\u7801\u4e3a: 0","title":"\u5b9e\u4f8b"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_9","text":"\u9000\u51fa\u72b6\u6001\u7801\u5982\u4e0b\u6240\u793a\uff1a \u72b6\u6001\u7801 \u540d\u79f0 & \u63cf\u8ff0 1 Uncaught Fatal Exception \u6709\u672a\u6355\u83b7\u5f02\u5e38\uff0c\u5e76\u4e14\u6ca1\u6709\u88ab\u57df\u6216 uncaughtException \u5904\u7406\u51fd\u6570\u5904\u7406\u3002 2 Unused \u4fdd\u7559 3 Internal JavaScript Parse Error JavaScript\u7684\u6e90\u7801\u542f\u52a8 Node \u8fdb\u7a0b\u65f6\u5f15\u8d77\u89e3\u6790\u9519\u8bef\u3002\u975e\u5e38\u7f55\u89c1\uff0c\u4ec5\u4f1a\u5728\u5f00\u53d1 Node \u65f6\u624d\u4f1a\u6709\u3002 4 Internal JavaScript Evaluation Failure JavaScript \u7684\u6e90\u7801\u542f\u52a8 Node \u8fdb\u7a0b\uff0c\u8bc4\u4f30\u65f6\u8fd4\u56de\u51fd\u6570\u5931\u8d25\u3002\u975e\u5e38\u7f55\u89c1\uff0c\u4ec5\u4f1a\u5728\u5f00\u53d1 Node \u65f6\u624d\u4f1a\u6709\u3002 5 Fatal Error V8 \u91cc\u81f4\u547d\u7684\u4e0d\u53ef\u6062\u590d\u7684\u9519\u8bef\u3002\u901a\u5e38\u4f1a\u6253\u5370\u5230 stderr \uff0c\u5185\u5bb9\u4e3a\uff1a FATAL ERROR 6 Non-function Internal Exception Handler \u672a\u6355\u83b7\u5f02\u5e38\uff0c\u5185\u90e8\u5f02\u5e38\u5904\u7406\u51fd\u6570\u4e0d\u77e5\u4e3a\u4f55\u8bbe\u7f6e\u4e3aon-function\uff0c\u5e76\u4e14\u4e0d\u80fd\u88ab\u8c03\u7528\u3002 7 Internal Exception Handler Run-Time Failure \u672a\u6355\u83b7\u7684\u5f02\u5e38\uff0c \u5e76\u4e14\u5f02\u5e38\u5904\u7406\u51fd\u6570\u5904\u7406\u65f6\u81ea\u5df1\u629b\u51fa\u4e86\u5f02\u5e38\u3002\u4f8b\u5982\uff0c\u5982\u679c process.on('uncaughtException') \u6216 domain.on('error') \u629b\u51fa\u4e86\u5f02\u5e38\u3002 8 Unused \u4fdd\u7559 9 Invalid Argument \u53ef\u80fd\u662f\u7ed9\u4e86\u672a\u77e5\u7684\u53c2\u6570\uff0c\u6216\u8005\u7ed9\u7684\u53c2\u6570\u6ca1\u6709\u503c\u3002 10 Internal JavaScript Run-Time Failure JavaScript\u7684\u6e90\u7801\u542f\u52a8 Node \u8fdb\u7a0b\u65f6\u629b\u51fa\u9519\u8bef\uff0c\u975e\u5e38\u7f55\u89c1\uff0c\u4ec5\u4f1a\u5728\u5f00\u53d1 Node \u65f6\u624d\u4f1a\u6709\u3002 12 Invalid Debug Argument \u8bbe\u7f6e\u4e86\u53c2\u6570--debug \u548c/\u6216 --debug-brk\uff0c\u4f46\u662f\u9009\u62e9\u4e86\u9519\u8bef\u7aef\u53e3\u3002 128 Signal Exits \u5982\u679c Node \u63a5\u6536\u5230\u81f4\u547d\u4fe1\u53f7\uff0c\u6bd4\u5982SIGKILL \u6216 SIGHUP\uff0c\u90a3\u4e48\u9000\u51fa\u4ee3\u7801\u5c31\u662f128 \u52a0\u4fe1\u53f7\u4ee3\u7801\u3002\u8fd9\u662f\u6807\u51c6\u7684 Unix \u505a\u6cd5\uff0c\u9000\u51fa\u4fe1\u53f7\u4ee3\u7801\u653e\u5728\u9ad8\u4f4d\u3002","title":"\u9000\u51fa\u72b6\u6001\u7801"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#process_1","text":"Process \u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u7528\u7684\u5c5e\u6027\uff0c\u4fbf\u4e8e\u6211\u4eec\u66f4\u597d\u7684\u63a7\u5236\u7cfb\u7edf\u7684\u4ea4\u4e92\uff1a \u5e8f\u53f7. \u5c5e\u6027 & \u63cf\u8ff0 1 stdout \u6807\u51c6\u8f93\u51fa\u6d41\u3002 2 stderr \u6807\u51c6\u9519\u8bef\u6d41\u3002 3 stdin \u6807\u51c6\u8f93\u5165\u6d41\u3002 4 argv argv \u5c5e\u6027\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u7531\u547d\u4ee4\u884c\u6267\u884c\u811a\u672c\u65f6\u7684\u5404\u4e2a\u53c2\u6570\u7ec4\u6210\u3002\u5b83\u7684\u7b2c\u4e00\u4e2a\u6210\u5458\u603b\u662fnode\uff0c\u7b2c\u4e8c\u4e2a\u6210\u5458\u662f\u811a\u672c\u6587\u4ef6\u540d\uff0c\u5176\u4f59\u6210\u5458\u662f\u811a\u672c\u6587\u4ef6\u7684\u53c2\u6570\u3002 5 execPath \u8fd4\u56de\u6267\u884c\u5f53\u524d\u811a\u672c\u7684 Node \u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u7edd\u5bf9\u8def\u5f84\u3002 6 execArgv \u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u6210\u5458\u662f\u547d\u4ee4\u884c\u4e0b\u6267\u884c\u811a\u672c\u65f6\uff0c\u5728Node\u53ef\u6267\u884c\u6587\u4ef6\u4e0e\u811a\u672c\u6587\u4ef6\u4e4b\u95f4\u7684\u547d\u4ee4\u884c\u53c2\u6570\u3002 7 env \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6210\u5458\u4e3a\u5f53\u524d shell \u7684\u73af\u5883\u53d8\u91cf 8 exitCode \u8fdb\u7a0b\u9000\u51fa\u65f6\u7684\u4ee3\u7801\uff0c\u5982\u679c\u8fdb\u7a0b\u4f18\u901a\u8fc7 process.exit() \u9000\u51fa\uff0c\u4e0d\u9700\u8981\u6307\u5b9a\u9000\u51fa\u7801\u3002 9 version Node \u7684\u7248\u672c\uff0c\u6bd4\u5982v0.10.18\u3002 10 versions \u4e00\u4e2a\u5c5e\u6027\uff0c\u5305\u542b\u4e86 node \u7684\u7248\u672c\u548c\u4f9d\u8d56. 11 config \u4e00\u4e2a\u5305\u542b\u7528\u6765\u7f16\u8bd1\u5f53\u524d node \u6267\u884c\u6587\u4ef6\u7684 javascript \u914d\u7f6e\u9009\u9879\u7684\u5bf9\u8c61\u3002\u5b83\u4e0e\u8fd0\u884c ./configure \u811a\u672c\u751f\u6210\u7684 \"config.gypi\" \u6587\u4ef6\u76f8\u540c\u3002 12 pid \u5f53\u524d\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u53f7\u3002 13 title \u8fdb\u7a0b\u540d\uff0c\u9ed8\u8ba4\u503c\u4e3a\"node\"\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8be5\u503c\u3002 14 arch \u5f53\u524d CPU \u7684\u67b6\u6784\uff1a'arm'\u3001'ia32' \u6216\u8005 'x64'\u3002 15 platform \u8fd0\u884c\u7a0b\u5e8f\u6240\u5728\u7684\u5e73\u53f0\u7cfb\u7edf 'darwin', 'freebsd', 'linux', 'sunos' \u6216 'win32' 16 mainModule require.main \u7684\u5907\u9009\u65b9\u6cd5\u3002\u4e0d\u540c\u70b9\uff0c\u5982\u679c\u4e3b\u6a21\u5757\u5728\u8fd0\u884c\u65f6\u6539\u53d8\uff0crequire.main\u53ef\u80fd\u4f1a\u7ee7\u7eed\u8fd4\u56de\u8001\u7684\u6a21\u5757\u3002\u53ef\u4ee5\u8ba4\u4e3a\uff0c\u8fd9\u4e24\u8005\u5f15\u7528\u4e86\u540c\u4e00\u4e2a\u6a21\u5757\u3002","title":"Process \u5c5e\u6027"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_10","text":"\u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a // \u8f93\u51fa\u5230\u7ec8\u7aef process.stdout.write(\"Hello World!\" + \"\\n\"); // \u901a\u8fc7\u53c2\u6570\u8bfb\u53d6 process.argv.forEach(function(val, index, array) { console.log(index + ': ' + val); }); // \u83b7\u53d6\u6267\u884c\u8def\u5f84 console.log(process.execPath); // \u5e73\u53f0\u4fe1\u606f console.log(process.platform); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js Hello World! 0: node 1: /web/www/node/main.js /usr/local/node/0.10.36/bin/node darwin","title":"\u5b9e\u4f8b"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_11","text":"Process \u63d0\u4f9b\u4e86\u5f88\u591a\u6709\u7528\u7684\u65b9\u6cd5\uff0c\u4fbf\u4e8e\u6211\u4eec\u66f4\u597d\u7684\u63a7\u5236\u7cfb\u7edf\u7684\u4ea4\u4e92\uff1a \u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 abort() \u8fd9\u5c06\u5bfc\u81f4 node \u89e6\u53d1 abort \u4e8b\u4ef6\u3002\u4f1a\u8ba9 node \u9000\u51fa\u5e76\u751f\u6210\u4e00\u4e2a\u6838\u5fc3\u6587\u4ef6\u3002 2 chdir(directory) \u6539\u53d8\u5f53\u524d\u5de5\u4f5c\u8fdb\u7a0b\u7684\u76ee\u5f55\uff0c\u5982\u679c\u64cd\u4f5c\u5931\u8d25\u629b\u51fa\u5f02\u5e38\u3002 3 cwd() \u8fd4\u56de\u5f53\u524d\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55 4 exit([code]) \u4f7f\u7528\u6307\u5b9a\u7684 code \u7ed3\u675f\u8fdb\u7a0b\u3002\u5982\u679c\u5ffd\u7565\uff0c\u5c06\u4f1a\u4f7f\u7528 code 0\u3002 5 getgid() \u83b7\u53d6\u8fdb\u7a0b\u7684\u7fa4\u7ec4\u6807\u8bc6\uff08\u53c2\u89c1 getgid(2)\uff09\u3002\u83b7\u53d6\u5230\u5f97\u65f6\u7fa4\u7ec4\u7684\u6570\u5b57 id\uff0c\u800c\u4e0d\u662f\u540d\u5b57\u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 6 setgid(id) \u8bbe\u7f6e\u8fdb\u7a0b\u7684\u7fa4\u7ec4\u6807\u8bc6\uff08\u53c2\u89c1 setgid(2)\uff09\u3002\u53ef\u4ee5\u63a5\u6536\u6570\u5b57 ID \u6216\u8005\u7fa4\u7ec4\u540d\u3002\u5982\u679c\u6307\u5b9a\u4e86\u7fa4\u7ec4\u540d\uff0c\u4f1a\u963b\u585e\u7b49\u5f85\u89e3\u6790\u4e3a\u6570\u5b57 ID \u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 7 getuid() \u83b7\u53d6\u8fdb\u7a0b\u7684\u7528\u6237\u6807\u8bc6(\u53c2\u89c1 getuid(2))\u3002\u8fd9\u662f\u6570\u5b57\u7684\u7528\u6237 id\uff0c\u4e0d\u662f\u7528\u6237\u540d\u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 8 setuid(id) \u8bbe\u7f6e\u8fdb\u7a0b\u7684\u7528\u6237\u6807\u8bc6\uff08\u53c2\u89c1setuid(2)\uff09\u3002\u63a5\u6536\u6570\u5b57 ID\u6216\u5b57\u7b26\u4e32\u540d\u5b57\u3002\u679c\u6307\u5b9a\u4e86\u7fa4\u7ec4\u540d\uff0c\u4f1a\u963b\u585e\u7b49\u5f85\u89e3\u6790\u4e3a\u6570\u5b57 ID \u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 9 getgroups() \u8fd4\u56de\u8fdb\u7a0b\u7684\u7fa4\u7ec4 iD \u6570\u7ec4\u3002POSIX \u7cfb\u7edf\u6ca1\u6709\u4fdd\u8bc1\u4e00\u5b9a\u6709\uff0c\u4f46\u662f node.js \u4fdd\u8bc1\u6709\u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 10 setgroups(groups) \u8bbe\u7f6e\u8fdb\u7a0b\u7684\u7fa4\u7ec4 ID\u3002\u8fd9\u662f\u6388\u6743\u64cd\u4f5c\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u6709 root \u6743\u9650\uff0c\u6216\u8005\u6709 CAP_SETGID \u80fd\u529b\u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 11 initgroups(user, extra_group) \u8bfb\u53d6 /etc/group \uff0c\u5e76\u521d\u59cb\u5316\u7fa4\u7ec4\u8bbf\u95ee\u5217\u8868\uff0c\u4f7f\u7528\u6210\u5458\u6240\u5728\u7684\u6240\u6709\u7fa4\u7ec4\u3002\u8fd9\u662f\u6388\u6743\u64cd\u4f5c\uff0c\u6240\u4ee5\u4f60\u9700\u8981\u6709 root \u6743\u9650\uff0c\u6216\u8005\u6709 CAP_SETGID \u80fd\u529b\u3002 \u6ce8\u610f\uff1a\u8fd9\u4e2a\u51fd\u6570\u4ec5\u5728 POSIX \u5e73\u53f0\u4e0a\u53ef\u7528(\u4f8b\u5982\uff0c\u975eWindows \u548c Android)\u3002 12 kill(pid[, signal]) \u53d1\u9001\u4fe1\u53f7\u7ed9\u8fdb\u7a0b. pid \u662f\u8fdb\u7a0bid\uff0c\u5e76\u4e14 signal \u662f\u53d1\u9001\u7684\u4fe1\u53f7\u7684\u5b57\u7b26\u4e32\u63cf\u8ff0\u3002\u4fe1\u53f7\u540d\u662f\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982 'SIGINT' \u6216 'SIGHUP'\u3002\u5982\u679c\u5ffd\u7565\uff0c\u4fe1\u53f7\u4f1a\u662f 'SIGTERM'\u3002 13 memoryUsage() \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u63cf\u8ff0\u4e86 Node \u8fdb\u7a0b\u6240\u7528\u7684\u5185\u5b58\u72b6\u51b5\uff0c\u5355\u4f4d\u4e3a\u5b57\u8282\u3002 14 nextTick(callback) \u4e00\u65e6\u5f53\u524d\u4e8b\u4ef6\u5faa\u73af\u7ed3\u675f\uff0c\u8c03\u7528\u56de\u8c03\u51fd\u6570\u3002 15 umask([mask]) \u8bbe\u7f6e\u6216\u8bfb\u53d6\u8fdb\u7a0b\u6587\u4ef6\u7684\u63a9\u7801\u3002\u5b50\u8fdb\u7a0b\u4ece\u7236\u8fdb\u7a0b\u7ee7\u627f\u63a9\u7801\u3002\u5982\u679cmask \u53c2\u6570\u6709\u6548\uff0c\u8fd4\u56de\u65e7\u7684\u63a9\u7801\u3002\u5426\u5219\uff0c\u8fd4\u56de\u5f53\u524d\u63a9\u7801\u3002 16 uptime() \u8fd4\u56de Node \u5df2\u7ecf\u8fd0\u884c\u7684\u79d2\u6570\u3002 17 hrtime() \u8fd4\u56de\u5f53\u524d\u8fdb\u7a0b\u7684\u9ad8\u5206\u8fa8\u65f6\u95f4\uff0c\u5f62\u5f0f\u4e3a [seconds, nanoseconds]\u6570\u7ec4\u3002\u5b83\u662f\u76f8\u5bf9\u4e8e\u8fc7\u53bb\u7684\u4efb\u610f\u4e8b\u4ef6\u3002\u8be5\u503c\u4e0e\u65e5\u671f\u65e0\u5173\uff0c\u56e0\u6b64\u4e0d\u53d7\u65f6\u949f\u6f02\u79fb\u7684\u5f71\u54cd\u3002\u4e3b\u8981\u7528\u9014\u662f\u53ef\u4ee5\u901a\u8fc7\u7cbe\u786e\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u6765\u8861\u91cf\u7a0b\u5e8f\u7684\u6027\u80fd\u3002 \u4f60\u53ef\u4ee5\u5c06\u4e4b\u524d\u7684\u7ed3\u679c\u4f20\u9012\u7ed9\u5f53\u524d\u7684 process.hrtime() \uff0c\u4f1a\u8fd4\u56de\u4e24\u8005\u95f4\u7684\u65f6\u95f4\u5dee\uff0c\u7528\u6765\u57fa\u51c6\u548c\u6d4b\u91cf\u65f6\u95f4\u95f4\u9694\u3002","title":"\u65b9\u6cd5\u53c2\u8003\u624b\u518c"},{"location":"nodejs/14-Node.js%20%E5%85%A8%E5%B1%80%E5%AF%B9%E8%B1%A1/#_12","text":"\u521b\u5efa\u6587\u4ef6 main.js \uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a // \u8f93\u51fa\u5f53\u524d\u76ee\u5f55 console.log('\u5f53\u524d\u76ee\u5f55: ' + process.cwd()); // \u8f93\u51fa\u5f53\u524d\u7248\u672c console.log('\u5f53\u524d\u7248\u672c: ' + process.version); // \u8f93\u51fa\u5185\u5b58\u4f7f\u7528\u60c5\u51b5 console.log(process.memoryUsage()); \u6267\u884c main.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a: $ node main.js \u5f53\u524d\u76ee\u5f55: /web/com/runoob/nodejs \u5f53\u524d\u7248\u672c: v0.10.36 { rss: 12541952, heapTotal: 4083456, heapUsed: 2157056 }","title":"\u5b9e\u4f8b"},{"location":"nodejs/15-Node.js%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/","text":"Node.js \u5e38\u7528\u5de5\u5177 \u00b6 util \u662f\u4e00\u4e2aNode.js \u6838\u5fc3\u6a21\u5757\uff0c\u63d0\u4f9b\u5e38\u7528\u51fd\u6570\u7684\u96c6\u5408\uff0c\u7528\u4e8e\u5f25\u8865\u6838\u5fc3 JavaScript \u7684\u529f\u80fd \u8fc7\u4e8e\u7cbe\u7b80\u7684\u4e0d\u8db3\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a const util = require('util'); util.callbackify \u00b6 util.callbackify(original) \u5c06 async \u5f02\u6b65\u51fd\u6570\uff08\u6216\u8005\u4e00\u4e2a\u8fd4\u56de\u503c\u4e3a Promise \u7684\u51fd\u6570\uff09\u8f6c\u6362\u6210\u9075\u5faa\u5f02\u5e38\u4f18\u5148\u7684\u56de\u8c03\u98ce\u683c\u7684\u51fd\u6570\uff0c\u4f8b\u5982\u5c06 (err, value) => ... \u56de\u8c03\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u3002 \u5728\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u62d2\u7edd\u7684\u539f\u56e0\uff08\u5982\u679c Promise \u89e3\u51b3\uff0c\u5219\u4e3a null \uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u662f\u89e3\u51b3\u7684\u503c\u3002 \u5b9e\u4f8b \u00b6 const util = require('util'); async function fn() { return 'hello world'; } const callbackFunction = util.callbackify(fn); callbackFunction((err, ret) => { if (err) throw err; console.log(ret); }); \u4ee5\u4e0a\u4ee3\u7801\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a hello world \u56de\u8c03\u51fd\u6570\u662f\u5f02\u6b65\u6267\u884c\u7684\uff0c\u5e76\u4e14\u6709\u5f02\u5e38\u5806\u6808\u9519\u8bef\u8ffd\u8e2a\u3002 \u5982\u679c\u56de\u8c03\u51fd\u6570\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u8fdb\u7a0b\u4f1a\u89e6\u53d1\u4e00\u4e2a 'uncaughtException' \u5f02\u5e38\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u6355\u83b7\uff0c\u8fdb\u7a0b\u5c06\u4f1a\u9000\u51fa\u3002 null \u5728\u56de\u8c03\u51fd\u6570\u4e2d\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u6709\u5176\u7279\u6b8a\u7684\u610f\u4e49\uff0c\u5982\u679c\u56de\u8c03\u51fd\u6570\u7684\u9996\u4e2a\u53c2\u6570\u4e3a Promise \u62d2\u7edd\u7684\u539f\u56e0\u4e14\u5e26\u6709\u8fd4\u56de\u503c\uff0c\u4e14\u503c\u53ef\u4ee5\u8f6c\u6362\u6210\u5e03\u5c14\u503c false\uff0c\u8fd9\u4e2a\u503c\u4f1a\u88ab\u5c01\u88c5\u5728 Error \u5bf9\u8c61\u91cc\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027 reason \u83b7\u53d6\u3002 function fn() { return Promise.reject(null); } const callbackFunction = util.callbackify(fn); callbackFunction((err, ret) => { // \u5f53 Promise \u88ab\u4ee5 `null` \u62d2\u7edd\u65f6\uff0c\u5b83\u88ab\u5305\u88c5\u4e3a Error \u5e76\u4e14\u539f\u59cb\u503c\u5b58\u50a8\u5728 `reason` \u4e2d\u3002 err && err.hasOwnProperty('reason') && err.reason === null; // true }); original \u4e3a async \u5f02\u6b65\u51fd\u6570\u3002\u8be5\u51fd\u6570\u8fd4\u56de\u4f20\u7edf\u56de\u8c03\u51fd\u6570\u3002 util.inherits \u00b6 util.inherits(constructor, superConstructor) \u662f\u4e00\u4e2a\u5b9e\u73b0\u5bf9\u8c61\u95f4\u539f\u578b\u7ee7\u627f\u7684\u51fd\u6570\u3002 JavaScript \u7684\u9762\u5411\u5bf9\u8c61\u7279\u6027\u662f\u57fa\u4e8e\u539f\u578b\u7684\uff0c\u4e0e\u5e38\u89c1\u7684\u57fa\u4e8e\u7c7b\u7684\u4e0d\u540c\u3002JavaScript \u6ca1\u6709\u63d0\u4f9b\u5bf9\u8c61\u7ee7\u627f\u7684\u8bed\u8a00\u7ea7\u522b\u7279\u6027\uff0c\u800c\u662f\u901a\u8fc7\u539f\u578b\u590d\u5236\u6765\u5b9e\u73b0\u7684\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u53ea\u4ecb\u7ecd util.inherits \u7684\u7528\u6cd5\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a var util = require('util'); function Base() { this.name = 'base'; this.base = 1991; this.sayHello = function() { console.log('Hello ' + this.name); }; } Base.prototype.showName = function() { console.log(this.name); }; function Sub() { this.name = 'sub'; } util.inherits(Sub, Base); var objBase = new Base(); objBase.showName(); objBase.sayHello(); console.log(objBase); var objSub = new Sub(); objSub.showName(); //objSub.sayHello(); console.log(objSub); \u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u57fa\u7840\u5bf9\u8c61 Base \u548c\u4e00\u4e2a\u7ee7\u627f\u81ea Base \u7684 Sub\uff0cBase \u6709\u4e09\u4e2a\u5728\u6784\u9020\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u5c5e\u6027\u548c\u4e00\u4e2a\u539f\u578b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u901a\u8fc7util.inherits \u5b9e\u73b0\u7ee7\u627f\u3002\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a base Hello base { name: 'base', base: 1991, sayHello: [Function] } sub { name: 'sub' } **\u6ce8\u610f\uff1a**Sub \u4ec5\u4ec5\u7ee7\u627f\u4e86Base \u5728\u539f\u578b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u800c\u6784\u9020\u51fd\u6570\u5185\u90e8\u521b\u9020\u7684 base \u5c5e \u6027\u548c sayHello \u51fd\u6570\u90fd\u6ca1\u6709\u88ab Sub \u7ee7\u627f\u3002 \u540c\u65f6\uff0c\u5728\u539f\u578b\u4e2d\u5b9a\u4e49\u7684\u5c5e\u6027\u4e0d\u4f1a\u88ab console.log \u4f5c \u4e3a\u5bf9\u8c61\u7684\u5c5e\u6027\u8f93\u51fa\u3002\u5982\u679c\u6211\u4eec\u53bb\u6389 objSub.sayHello(); \u8fd9\u884c\u7684\u6ce8\u91ca\uff0c\u5c06\u4f1a\u770b\u5230\uff1a node.js:201 throw e; // process.nextTick error, or 'error' event on first tick ^ TypeError: Object #&lt;Sub&gt; has no method 'sayHello' at Object.&lt;anonymous&gt; (/home/byvoid/utilinherits.js:29:8) at Module._compile (module.js:441:26) at Object..js (module.js:459:10) at Module.load (module.js:348:31) at Function._load (module.js:308:12) at Array.0 (module.js:479:10) at EventEmitter._tickCallback (node.js:192:40) util.inspect \u00b6 util.inspect(object,[showHidden],[depth],[colors]) \u662f\u4e00\u4e2a\u5c06\u4efb\u610f\u5bf9\u8c61\u8f6c\u6362 \u4e3a\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\uff0c\u901a\u5e38\u7528\u4e8e\u8c03\u8bd5\u548c\u9519\u8bef\u8f93\u51fa\u3002\u5b83\u81f3\u5c11\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570 object\uff0c\u5373\u8981\u8f6c\u6362\u7684\u5bf9\u8c61\u3002 showHidden \u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5982\u679c\u503c\u4e3a true\uff0c\u5c06\u4f1a\u8f93\u51fa\u66f4\u591a\u9690\u85cf\u4fe1\u606f\u3002 depth \u8868\u793a\u6700\u5927\u9012\u5f52\u7684\u5c42\u6570\uff0c\u5982\u679c\u5bf9\u8c61\u5f88\u590d\u6742\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u5c42\u6570\u4ee5\u63a7\u5236\u8f93\u51fa\u4fe1\u606f\u7684\u591a \u5c11\u3002\u5982\u679c\u4e0d\u6307\u5b9adepth\uff0c\u9ed8\u8ba4\u4f1a\u9012\u5f52 2 \u5c42\uff0c\u6307\u5b9a\u4e3a null \u8868\u793a\u5c06\u4e0d\u9650\u9012\u5f52\u5c42\u6570\u5b8c\u6574\u904d\u5386\u5bf9\u8c61\u3002 \u5982\u679c colors \u503c\u4e3a true\uff0c\u8f93\u51fa\u683c\u5f0f\u5c06\u4f1a\u4ee5 ANSI \u989c\u8272\u7f16\u7801\uff0c\u901a\u5e38\u7528\u4e8e\u5728\u7ec8\u7aef\u663e\u793a\u66f4\u6f02\u4eae \u7684\u6548\u679c\u3002 \u7279\u522b\u8981\u6307\u51fa\u7684\u662f\uff0cutil.inspect \u5e76\u4e0d\u4f1a\u7b80\u5355\u5730\u76f4\u63a5\u628a\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u5373\u4f7f\u8be5\u5bf9 \u8c61\u5b9a\u4e49\u4e86 toString \u65b9\u6cd5\u4e5f\u4e0d\u4f1a\u8c03\u7528\u3002 var util = require('util'); function Person() { this.name = 'byvoid'; this.toString = function() { return this.name; }; } var obj = new Person(); console.log(util.inspect(obj)); console.log(util.inspect(obj, true)); \u8fd0\u884c\u7ed3\u679c\u662f\uff1a Person { name: 'byvoid', toString: [Function] } Person { name: 'byvoid', toString: { [Function] [length]: 0, [name]: '', [arguments]: null, [caller]: null, [prototype]: { [constructor]: [Circular] } } } util.isArray(object) \u00b6 \u5982\u679c\u7ed9\u5b9a\u7684\u53c2\u6570 \"object\" \u662f\u4e00\u4e2a\u6570\u7ec4\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 var util = require('util'); util.isArray([]) // true util.isArray(new Array) // true util.isArray({}) // false util.isRegExp(object) \u00b6 \u5982\u679c\u7ed9\u5b9a\u7684\u53c2\u6570 \"object\" \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002 var util = require('util'); util.isRegExp(/some regexp/) // true util.isRegExp(new RegExp('another regexp')) // true util.isRegExp({}) // false util.isDate(object) \u00b6 \u5982\u679c\u7ed9\u5b9a\u7684\u53c2\u6570 \"object\" \u662f\u4e00\u4e2a\u65e5\u671f\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002 var util = require('util'); util.isDate(new Date()) // true util.isDate(Date()) // false (without 'new' returns a String) util.isDate({}) // false \u66f4\u591a\u8be6\u60c5\u53ef\u4ee5\u8bbf\u95ee http://nodejs.org/api/util.html \u4e86\u89e3\u8be6\u7ec6\u5185\u5bb9\u3002 Node.js \u5168\u5c40\u5bf9\u8c61 Node.js \u6587\u4ef6\u7cfb\u7edf 1 \u7bc7\u7b14\u8bb0 \u5199\u7b14\u8bb0 \u00b6 qwq 106*** 4150@qq.com 20 util.inhrits() \u53ef\u4ee5\u7ee7\u627f\u539f\u578b\u65b9\u6cd5\uff08node \u7248\u672c V10.8.0\uff09\u3002 let util = require('util'); function Base() { this.name = 'name'; this.base = 1995; this.sayHello = function() { console.log('hello ' + this.name); } } Base.prototype.showName = function() { console.log(this.name); } function sub() { this.name = 'sub'; } util.inherits(sub, Base); let baseObj = new Base(); console.log(baseObj); baseObj.showName(); let subObj = new sub(); console.log(subObj); console.log(subObj.name); subObj.showName(); \u8fd0\u884c\u7ed3\u679c\uff1a Base { name: 'name', base: 1995, sayHello: [Function] } name sub { name: 'sub' } sub","title":"15-Node.js \u5e38\u7528\u5de5\u5177"},{"location":"nodejs/15-Node.js%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/#nodejs","text":"util \u662f\u4e00\u4e2aNode.js \u6838\u5fc3\u6a21\u5757\uff0c\u63d0\u4f9b\u5e38\u7528\u51fd\u6570\u7684\u96c6\u5408\uff0c\u7528\u4e8e\u5f25\u8865\u6838\u5fc3 JavaScript \u7684\u529f\u80fd \u8fc7\u4e8e\u7cbe\u7b80\u7684\u4e0d\u8db3\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a const util = require('util');","title":"Node.js \u5e38\u7528\u5de5\u5177"},{"location":"nodejs/15-Node.js%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/#utilcallbackify","text":"util.callbackify(original) \u5c06 async \u5f02\u6b65\u51fd\u6570\uff08\u6216\u8005\u4e00\u4e2a\u8fd4\u56de\u503c\u4e3a Promise \u7684\u51fd\u6570\uff09\u8f6c\u6362\u6210\u9075\u5faa\u5f02\u5e38\u4f18\u5148\u7684\u56de\u8c03\u98ce\u683c\u7684\u51fd\u6570\uff0c\u4f8b\u5982\u5c06 (err, value) => ... \u56de\u8c03\u4f5c\u4e3a\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u3002 \u5728\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a\u62d2\u7edd\u7684\u539f\u56e0\uff08\u5982\u679c Promise \u89e3\u51b3\uff0c\u5219\u4e3a null \uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5219\u662f\u89e3\u51b3\u7684\u503c\u3002","title":"util.callbackify"},{"location":"nodejs/15-Node.js%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/#_1","text":"const util = require('util'); async function fn() { return 'hello world'; } const callbackFunction = util.callbackify(fn); callbackFunction((err, ret) => { if (err) throw err; console.log(ret); }); \u4ee5\u4e0a\u4ee3\u7801\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a hello world \u56de\u8c03\u51fd\u6570\u662f\u5f02\u6b65\u6267\u884c\u7684\uff0c\u5e76\u4e14\u6709\u5f02\u5e38\u5806\u6808\u9519\u8bef\u8ffd\u8e2a\u3002 \u5982\u679c\u56de\u8c03\u51fd\u6570\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u8fdb\u7a0b\u4f1a\u89e6\u53d1\u4e00\u4e2a 'uncaughtException' \u5f02\u5e38\uff0c\u5982\u679c\u6ca1\u6709\u88ab\u6355\u83b7\uff0c\u8fdb\u7a0b\u5c06\u4f1a\u9000\u51fa\u3002 null \u5728\u56de\u8c03\u51fd\u6570\u4e2d\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u6709\u5176\u7279\u6b8a\u7684\u610f\u4e49\uff0c\u5982\u679c\u56de\u8c03\u51fd\u6570\u7684\u9996\u4e2a\u53c2\u6570\u4e3a Promise \u62d2\u7edd\u7684\u539f\u56e0\u4e14\u5e26\u6709\u8fd4\u56de\u503c\uff0c\u4e14\u503c\u53ef\u4ee5\u8f6c\u6362\u6210\u5e03\u5c14\u503c false\uff0c\u8fd9\u4e2a\u503c\u4f1a\u88ab\u5c01\u88c5\u5728 Error \u5bf9\u8c61\u91cc\uff0c\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027 reason \u83b7\u53d6\u3002 function fn() { return Promise.reject(null); } const callbackFunction = util.callbackify(fn); callbackFunction((err, ret) => { // \u5f53 Promise \u88ab\u4ee5 `null` \u62d2\u7edd\u65f6\uff0c\u5b83\u88ab\u5305\u88c5\u4e3a Error \u5e76\u4e14\u539f\u59cb\u503c\u5b58\u50a8\u5728 `reason` \u4e2d\u3002 err && err.hasOwnProperty('reason') && err.reason === null; // true }); original \u4e3a async \u5f02\u6b65\u51fd\u6570\u3002\u8be5\u51fd\u6570\u8fd4\u56de\u4f20\u7edf\u56de\u8c03\u51fd\u6570\u3002","title":"\u5b9e\u4f8b"},{"location":"nodejs/15-Node.js%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/#utilinherits","text":"util.inherits(constructor, superConstructor) \u662f\u4e00\u4e2a\u5b9e\u73b0\u5bf9\u8c61\u95f4\u539f\u578b\u7ee7\u627f\u7684\u51fd\u6570\u3002 JavaScript \u7684\u9762\u5411\u5bf9\u8c61\u7279\u6027\u662f\u57fa\u4e8e\u539f\u578b\u7684\uff0c\u4e0e\u5e38\u89c1\u7684\u57fa\u4e8e\u7c7b\u7684\u4e0d\u540c\u3002JavaScript \u6ca1\u6709\u63d0\u4f9b\u5bf9\u8c61\u7ee7\u627f\u7684\u8bed\u8a00\u7ea7\u522b\u7279\u6027\uff0c\u800c\u662f\u901a\u8fc7\u539f\u578b\u590d\u5236\u6765\u5b9e\u73b0\u7684\u3002 \u5728\u8fd9\u91cc\u6211\u4eec\u53ea\u4ecb\u7ecd util.inherits \u7684\u7528\u6cd5\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a var util = require('util'); function Base() { this.name = 'base'; this.base = 1991; this.sayHello = function() { console.log('Hello ' + this.name); }; } Base.prototype.showName = function() { console.log(this.name); }; function Sub() { this.name = 'sub'; } util.inherits(Sub, Base); var objBase = new Base(); objBase.showName(); objBase.sayHello(); console.log(objBase); var objSub = new Sub(); objSub.showName(); //objSub.sayHello(); console.log(objSub); \u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u57fa\u7840\u5bf9\u8c61 Base \u548c\u4e00\u4e2a\u7ee7\u627f\u81ea Base \u7684 Sub\uff0cBase \u6709\u4e09\u4e2a\u5728\u6784\u9020\u51fd\u6570\u5185\u5b9a\u4e49\u7684\u5c5e\u6027\u548c\u4e00\u4e2a\u539f\u578b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u901a\u8fc7util.inherits \u5b9e\u73b0\u7ee7\u627f\u3002\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a base Hello base { name: 'base', base: 1991, sayHello: [Function] } sub { name: 'sub' } **\u6ce8\u610f\uff1a**Sub \u4ec5\u4ec5\u7ee7\u627f\u4e86Base \u5728\u539f\u578b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\uff0c\u800c\u6784\u9020\u51fd\u6570\u5185\u90e8\u521b\u9020\u7684 base \u5c5e \u6027\u548c sayHello \u51fd\u6570\u90fd\u6ca1\u6709\u88ab Sub \u7ee7\u627f\u3002 \u540c\u65f6\uff0c\u5728\u539f\u578b\u4e2d\u5b9a\u4e49\u7684\u5c5e\u6027\u4e0d\u4f1a\u88ab console.log \u4f5c \u4e3a\u5bf9\u8c61\u7684\u5c5e\u6027\u8f93\u51fa\u3002\u5982\u679c\u6211\u4eec\u53bb\u6389 objSub.sayHello(); \u8fd9\u884c\u7684\u6ce8\u91ca\uff0c\u5c06\u4f1a\u770b\u5230\uff1a node.js:201 throw e; // process.nextTick error, or 'error' event on first tick ^ TypeError: Object #&lt;Sub&gt; has no method 'sayHello' at Object.&lt;anonymous&gt; (/home/byvoid/utilinherits.js:29:8) at Module._compile (module.js:441:26) at Object..js (module.js:459:10) at Module.load (module.js:348:31) at Function._load (module.js:308:12) at Array.0 (module.js:479:10) at EventEmitter._tickCallback (node.js:192:40)","title":"util.inherits"},{"location":"nodejs/15-Node.js%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/#utilinspect","text":"util.inspect(object,[showHidden],[depth],[colors]) \u662f\u4e00\u4e2a\u5c06\u4efb\u610f\u5bf9\u8c61\u8f6c\u6362 \u4e3a\u5b57\u7b26\u4e32\u7684\u65b9\u6cd5\uff0c\u901a\u5e38\u7528\u4e8e\u8c03\u8bd5\u548c\u9519\u8bef\u8f93\u51fa\u3002\u5b83\u81f3\u5c11\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570 object\uff0c\u5373\u8981\u8f6c\u6362\u7684\u5bf9\u8c61\u3002 showHidden \u662f\u4e00\u4e2a\u53ef\u9009\u53c2\u6570\uff0c\u5982\u679c\u503c\u4e3a true\uff0c\u5c06\u4f1a\u8f93\u51fa\u66f4\u591a\u9690\u85cf\u4fe1\u606f\u3002 depth \u8868\u793a\u6700\u5927\u9012\u5f52\u7684\u5c42\u6570\uff0c\u5982\u679c\u5bf9\u8c61\u5f88\u590d\u6742\uff0c\u4f60\u53ef\u4ee5\u6307\u5b9a\u5c42\u6570\u4ee5\u63a7\u5236\u8f93\u51fa\u4fe1\u606f\u7684\u591a \u5c11\u3002\u5982\u679c\u4e0d\u6307\u5b9adepth\uff0c\u9ed8\u8ba4\u4f1a\u9012\u5f52 2 \u5c42\uff0c\u6307\u5b9a\u4e3a null \u8868\u793a\u5c06\u4e0d\u9650\u9012\u5f52\u5c42\u6570\u5b8c\u6574\u904d\u5386\u5bf9\u8c61\u3002 \u5982\u679c colors \u503c\u4e3a true\uff0c\u8f93\u51fa\u683c\u5f0f\u5c06\u4f1a\u4ee5 ANSI \u989c\u8272\u7f16\u7801\uff0c\u901a\u5e38\u7528\u4e8e\u5728\u7ec8\u7aef\u663e\u793a\u66f4\u6f02\u4eae \u7684\u6548\u679c\u3002 \u7279\u522b\u8981\u6307\u51fa\u7684\u662f\uff0cutil.inspect \u5e76\u4e0d\u4f1a\u7b80\u5355\u5730\u76f4\u63a5\u628a\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u5373\u4f7f\u8be5\u5bf9 \u8c61\u5b9a\u4e49\u4e86 toString \u65b9\u6cd5\u4e5f\u4e0d\u4f1a\u8c03\u7528\u3002 var util = require('util'); function Person() { this.name = 'byvoid'; this.toString = function() { return this.name; }; } var obj = new Person(); console.log(util.inspect(obj)); console.log(util.inspect(obj, true)); \u8fd0\u884c\u7ed3\u679c\u662f\uff1a Person { name: 'byvoid', toString: [Function] } Person { name: 'byvoid', toString: { [Function] [length]: 0, [name]: '', [arguments]: null, [caller]: null, [prototype]: { [constructor]: [Circular] } } }","title":"util.inspect"},{"location":"nodejs/15-Node.js%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/#utilisarrayobject","text":"\u5982\u679c\u7ed9\u5b9a\u7684\u53c2\u6570 \"object\" \u662f\u4e00\u4e2a\u6570\u7ec4\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 var util = require('util'); util.isArray([]) // true util.isArray(new Array) // true util.isArray({}) // false","title":"util.isArray(object)"},{"location":"nodejs/15-Node.js%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/#utilisregexpobject","text":"\u5982\u679c\u7ed9\u5b9a\u7684\u53c2\u6570 \"object\" \u662f\u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002 var util = require('util'); util.isRegExp(/some regexp/) // true util.isRegExp(new RegExp('another regexp')) // true util.isRegExp({}) // false","title":"util.isRegExp(object)"},{"location":"nodejs/15-Node.js%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/#utilisdateobject","text":"\u5982\u679c\u7ed9\u5b9a\u7684\u53c2\u6570 \"object\" \u662f\u4e00\u4e2a\u65e5\u671f\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002 var util = require('util'); util.isDate(new Date()) // true util.isDate(Date()) // false (without 'new' returns a String) util.isDate({}) // false \u66f4\u591a\u8be6\u60c5\u53ef\u4ee5\u8bbf\u95ee http://nodejs.org/api/util.html \u4e86\u89e3\u8be6\u7ec6\u5185\u5bb9\u3002 Node.js \u5168\u5c40\u5bf9\u8c61 Node.js \u6587\u4ef6\u7cfb\u7edf","title":"util.isDate(object)"},{"location":"nodejs/15-Node.js%20%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7/#1","text":"qwq 106*** 4150@qq.com 20 util.inhrits() \u53ef\u4ee5\u7ee7\u627f\u539f\u578b\u65b9\u6cd5\uff08node \u7248\u672c V10.8.0\uff09\u3002 let util = require('util'); function Base() { this.name = 'name'; this.base = 1995; this.sayHello = function() { console.log('hello ' + this.name); } } Base.prototype.showName = function() { console.log(this.name); } function sub() { this.name = 'sub'; } util.inherits(sub, Base); let baseObj = new Base(); console.log(baseObj); baseObj.showName(); let subObj = new sub(); console.log(subObj); console.log(subObj.name); subObj.showName(); \u8fd0\u884c\u7ed3\u679c\uff1a Base { name: 'name', base: 1995, sayHello: [Function] } name sub { name: 'sub' } sub","title":"1 \u7bc7\u7b14\u8bb0 \u5199\u7b14\u8bb0"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/","text":"Node.js \u6587\u4ef6\u7cfb\u7edf \u00b6 Node.js \u63d0\u4f9b\u4e00\u7ec4\u7c7b\u4f3c UNIX\uff08POSIX\uff09\u6807\u51c6\u7684\u6587\u4ef6\u64cd\u4f5cAPI\u3002 Node \u5bfc\u5165\u6587\u4ef6\u7cfb\u7edf\u6a21\u5757(fs)\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\") \u5f02\u6b65\u548c\u540c\u6b65 \u00b6 Node.js \u6587\u4ef6\u7cfb\u7edf\uff08fs \u6a21\u5757\uff09\u6a21\u5757\u4e2d\u7684\u65b9\u6cd5\u5747\u6709\u5f02\u6b65\u548c\u540c\u6b65\u7248\u672c\uff0c\u4f8b\u5982\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u7684\u51fd\u6570\u6709\u5f02\u6b65\u7684 fs.readFile() \u548c\u540c\u6b65\u7684 fs.readFileSync()\u3002 \u5f02\u6b65\u7684\u65b9\u6cd5\u51fd\u6570\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5305\u542b\u4e86\u9519\u8bef\u4fe1\u606f(error)\u3002 \u5efa\u8bae\u5927\u5bb6\u4f7f\u7528\u5f02\u6b65\u65b9\u6cd5\uff0c\u6bd4\u8d77\u540c\u6b65\uff0c\u5f02\u6b65\u65b9\u6cd5\u6027\u80fd\u66f4\u9ad8\uff0c\u901f\u5ea6\u66f4\u5feb\uff0c\u800c\u4e14\u6ca1\u6709\u963b\u585e\u3002 \u5b9e\u4f8b \u00b6 \u521b\u5efa input.txt \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u6587\u4ef6\u8bfb\u53d6\u5b9e\u4f8b \u521b\u5efa file.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); // \u5f02\u6b65\u8bfb\u53d6 fs.readFile('input.txt', function (err, data) { if (err) { return console.error(err); } console.log(\"\u5f02\u6b65\u8bfb\u53d6: \" + data.toString()); }); // \u540c\u6b65\u8bfb\u53d6 var data = fs.readFileSync('input.txt'); console.log(\"\u540c\u6b65\u8bfb\u53d6: \" + data.toString()); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002\"); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u540c\u6b65\u8bfb\u53d6: \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u6587\u4ef6\u8bfb\u53d6\u5b9e\u4f8b \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002 \u5f02\u6b65\u8bfb\u53d6: \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u6587\u4ef6\u8bfb\u53d6\u5b9e\u4f8b \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6765\u5177\u4f53\u4e86\u89e3\u4e0b Node.js \u6587\u4ef6\u7cfb\u7edf\u7684\u65b9\u6cd5\u3002 \u6253\u5f00\u6587\u4ef6 \u00b6 \u8bed\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a\u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\u6253\u5f00\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.open(path, flags[, mode], callback) \u53c2\u6570 \u00b6 \u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u7684\u8def\u5f84\u3002 flags - \u6587\u4ef6\u6253\u5f00\u7684\u884c\u4e3a\u3002\u5177\u4f53\u503c\u8be6\u89c1\u4e0b\u6587\u3002 mode - \u8bbe\u7f6e\u6587\u4ef6\u6a21\u5f0f(\u6743\u9650)\uff0c\u6587\u4ef6\u521b\u5efa\u9ed8\u8ba4\u6743\u9650\u4e3a 0666(\u53ef\u8bfb\uff0c\u53ef\u5199)\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\u5982\uff1acallback(err, fd)\u3002 flags \u53c2\u6570\u53ef\u4ee5\u662f\u4ee5\u4e0b\u503c\uff1a Flag \u63cf\u8ff0 r \u4ee5\u8bfb\u53d6\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u629b\u51fa\u5f02\u5e38\u3002 r+ \u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u629b\u51fa\u5f02\u5e38\u3002 rs \u4ee5\u540c\u6b65\u7684\u65b9\u5f0f\u8bfb\u53d6\u6587\u4ef6\u3002 rs+ \u4ee5\u540c\u6b65\u7684\u65b9\u5f0f\u8bfb\u53d6\u548c\u5199\u5165\u6587\u4ef6\u3002 w \u4ee5\u5199\u5165\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u3002 wx \u7c7b\u4f3c 'w'\uff0c\u4f46\u662f\u5982\u679c\u6587\u4ef6\u8def\u5f84\u5b58\u5728\uff0c\u5219\u6587\u4ef6\u5199\u5165\u5931\u8d25\u3002 w+ \u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u3002 wx+ \u7c7b\u4f3c 'w+'\uff0c \u4f46\u662f\u5982\u679c\u6587\u4ef6\u8def\u5f84\u5b58\u5728\uff0c\u5219\u6587\u4ef6\u8bfb\u5199\u5931\u8d25\u3002 a \u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u3002 ax \u7c7b\u4f3c 'a'\uff0c \u4f46\u662f\u5982\u679c\u6587\u4ef6\u8def\u5f84\u5b58\u5728\uff0c\u5219\u6587\u4ef6\u8ffd\u52a0\u5931\u8d25\u3002 a+ \u4ee5\u8bfb\u53d6\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u3002 ax+ \u7c7b\u4f3c 'a+'\uff0c \u4f46\u662f\u5982\u679c\u6587\u4ef6\u8def\u5f84\u5b58\u5728\uff0c\u5219\u6587\u4ef6\u8bfb\u53d6\u8ffd\u52a0\u5931\u8d25\u3002 \u5b9e\u4f8b \u00b6 \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u5e76\u6253\u5f00 input.txt \u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); // \u5f02\u6b65\u6253\u5f00\u6587\u4ef6 console.log(\"\u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01\"); fs.open('input.txt', 'r+', function(err, fd) { if (err) { return console.error(err); } console.log(\"\u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01\"); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01 \u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01 \u83b7\u53d6\u6587\u4ef6\u4fe1\u606f \u00b6 \u8bed\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a\u901a\u8fc7\u5f02\u6b65\u6a21\u5f0f\u83b7\u53d6\u6587\u4ef6\u4fe1\u606f\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.stat(path, callback) \u53c2\u6570 \u00b6 \u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u8def\u5f84\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\u5982\uff1a(err, stats), stats \u662f fs.Stats \u5bf9\u8c61\u3002 fs.stat(path)\u6267\u884c\u540e\uff0c\u4f1a\u5c06stats\u7c7b\u7684\u5b9e\u4f8b\u8fd4\u56de\u7ed9\u5176\u56de\u8c03\u51fd\u6570\u3002\u53ef\u4ee5\u901a\u8fc7stats\u7c7b\u4e2d\u7684\u63d0\u4f9b\u65b9\u6cd5\u5224\u65ad\u6587\u4ef6\u7684\u76f8\u5173\u5c5e\u6027\u3002\u4f8b\u5982\u5224\u65ad\u662f\u5426\u4e3a\u6587\u4ef6\uff1a var fs = require('fs'); fs.stat('/Users/liuht/code/itbilu/demo/fs.js', function (err, stats) { console.log(stats.isFile()); //true }) stats\u7c7b\u4e2d\u7684\u65b9\u6cd5\u6709\uff1a \u65b9\u6cd5 \u63cf\u8ff0 stats.isFile() \u5982\u679c\u662f\u6587\u4ef6\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 stats.isDirectory() \u5982\u679c\u662f\u76ee\u5f55\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 stats.isBlockDevice() \u5982\u679c\u662f\u5757\u8bbe\u5907\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 stats.isCharacterDevice() \u5982\u679c\u662f\u5b57\u7b26\u8bbe\u5907\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 stats.isSymbolicLink() \u5982\u679c\u662f\u8f6f\u94fe\u63a5\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 stats.isFIFO() \u5982\u679c\u662fFIFO\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56de false\u3002FIFO\u662fUNIX\u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u547d\u4ee4\u7ba1\u9053\u3002 stats.isSocket() \u5982\u679c\u662f Socket \u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 \u5b9e\u4f8b \u00b6 \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); console.log(\"\u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01\"); fs.stat('input.txt', function (err, stats) { if (err) { return console.error(err); } console.log(stats); console.log(\"\u8bfb\u53d6\u6587\u4ef6\u4fe1\u606f\u6210\u529f\uff01\"); // \u68c0\u6d4b\u6587\u4ef6\u7c7b\u578b console.log(\"\u662f\u5426\u4e3a\u6587\u4ef6(isFile) ? \" + stats.isFile()); console.log(\"\u662f\u5426\u4e3a\u76ee\u5f55(isDirectory) ? \" + stats.isDirectory()); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01 { dev: 16777220, mode: 33188, nlink: 1, uid: 501, gid: 20, rdev: 0, blksize: 4096, ino: 40333161, size: 61, blocks: 8, atime: Mon Sep 07 2015 17:43:55 GMT+0800 (CST), mtime: Mon Sep 07 2015 17:22:35 GMT+0800 (CST), ctime: Mon Sep 07 2015 17:22:35 GMT+0800 (CST) } \u8bfb\u53d6\u6587\u4ef6\u4fe1\u606f\u6210\u529f\uff01 \u662f\u5426\u4e3a\u6587\u4ef6(isFile) ? true \u662f\u5426\u4e3a\u76ee\u5f55(isDirectory) ? false \u5199\u5165\u6587\u4ef6 \u00b6 \u8bed\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a\u5f02\u6b65\u6a21\u5f0f\u4e0b\u5199\u5165\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.writeFile(file, data[, options], callback) writeFile \u76f4\u63a5\u6253\u5f00\u6587\u4ef6\u9ed8\u8ba4\u662f w \u6a21\u5f0f\uff0c\u6240\u4ee5\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u8be5\u65b9\u6cd5\u5199\u5165\u7684\u5185\u5bb9\u4f1a\u8986\u76d6\u65e7\u7684\u6587\u4ef6\u5185\u5bb9\u3002 \u53c2\u6570 \u00b6 \u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a file - \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 data - \u8981\u5199\u5165\u6587\u4ef6\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u662f String(\u5b57\u7b26\u4e32) \u6216 Buffer(\u7f13\u51b2) \u5bf9\u8c61\u3002 options - \u8be5\u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5305\u542b {encoding, mode, flag}\u3002\u9ed8\u8ba4\u7f16\u7801\u4e3a utf8, \u6a21\u5f0f\u4e3a 0666 \uff0c flag \u4e3a 'w' callback - \u56de\u8c03\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u53ea\u5305\u542b\u9519\u8bef\u4fe1\u606f\u53c2\u6570(err)\uff0c\u5728\u5199\u5165\u5931\u8d25\u65f6\u8fd4\u56de\u3002 \u5b9e\u4f8b \u00b6 \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); console.log(\"\u51c6\u5907\u5199\u5165\u6587\u4ef6\"); fs.writeFile('input.txt', '\u6211\u662f\u901a \u8fc7fs.writeFile \u5199\u5165\u6587\u4ef6\u7684\u5185\u5bb9', function(err) { if (err) { return console.error(err); } console.log(\"\u6570\u636e\u5199\u5165\u6210\u529f\uff01\"); console.log(\"--------\u6211\u662f\u5206\u5272\u7ebf-------------\") console.log(\"\u8bfb\u53d6\u5199\u5165\u7684\u6570\u636e\uff01\"); fs.readFile('input.txt', function (err, data) { if (err) { return console.error(err); } console.log(\"\u5f02\u6b65\u8bfb\u53d6\u6587\u4ef6\u6570\u636e: \" + data.toString()); }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u5199\u5165\u6587\u4ef6 \u6570\u636e\u5199\u5165\u6210\u529f\uff01 --------\u6211\u662f\u5206\u5272\u7ebf------------- \u8bfb\u53d6\u5199\u5165\u7684\u6570\u636e\uff01 \u5f02\u6b65\u8bfb\u53d6\u6587\u4ef6\u6570\u636e: \u6211\u662f\u901a \u8fc7fs.writeFile \u5199\u5165\u6587\u4ef6\u7684\u5185\u5bb9 \u8bfb\u53d6\u6587\u4ef6 \u00b6 \u8bed\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a\u5f02\u6b65\u6a21\u5f0f\u4e0b\u8bfb\u53d6\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.read(fd, buffer, offset, length, position, callback) \u8be5\u65b9\u6cd5\u4f7f\u7528\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u8bfb\u53d6\u6587\u4ef6\u3002 \u53c2\u6570 \u00b6 \u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a fd - \u901a\u8fc7 fs.open() \u65b9\u6cd5\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 buffer - \u6570\u636e\u5199\u5165\u7684\u7f13\u51b2\u533a\u3002 offset - \u7f13\u51b2\u533a\u5199\u5165\u7684\u5199\u5165\u504f\u79fb\u91cf\u3002 length - \u8981\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002 position - \u6587\u4ef6\u8bfb\u53d6\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5982\u679c position \u7684\u503c\u4e3a null\uff0c\u5219\u4f1a\u4ece\u5f53\u524d\u6587\u4ef6\u6307\u9488\u7684\u4f4d\u7f6e\u8bfb\u53d6\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6709\u4e09\u4e2a\u53c2\u6570err, bytesRead, buffer\uff0cerr \u4e3a\u9519\u8bef\u4fe1\u606f\uff0c bytesRead \u8868\u793a\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff0cbuffer \u4e3a\u7f13\u51b2\u533a\u5bf9\u8c61\u3002 \u5b9e\u4f8b \u00b6 input.txt \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); var buf = new Buffer.alloc(1024); console.log(\"\u51c6\u5907\u6253\u5f00\u5df2\u5b58\u5728\u7684\u6587\u4ef6\uff01\"); fs.open('input.txt', 'r+', function(err, fd) { if (err) { return console.error(err); } console.log(\"\u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01\"); console.log(\"\u51c6\u5907\u8bfb\u53d6\u6587\u4ef6\uff1a\"); fs.read(fd, buf, 0, buf.length, 0, function(err, bytes){ if (err){ console.log(err); } console.log(bytes + \" \u5b57\u8282\u88ab\u8bfb\u53d6\"); // \u4ec5\u8f93\u51fa\u8bfb\u53d6\u7684\u5b57\u8282 if(bytes > 0){ console.log(buf.slice(0, bytes).toString()); } }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u6253\u5f00\u5df2\u5b58\u5728\u7684\u6587\u4ef6\uff01 \u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01 \u51c6\u5907\u8bfb\u53d6\u6587\u4ef6\uff1a 42 \u5b57\u8282\u88ab\u8bfb\u53d6 \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u5173\u95ed\u6587\u4ef6 \u00b6 \u8bed\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a\u5f02\u6b65\u6a21\u5f0f\u4e0b\u5173\u95ed\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.close(fd, callback) \u8be5\u65b9\u6cd5\u4f7f\u7528\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u8bfb\u53d6\u6587\u4ef6\u3002 \u53c2\u6570 \u00b6 \u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a fd - \u901a\u8fc7 fs.open() \u65b9\u6cd5\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u3002 \u5b9e\u4f8b \u00b6 input.txt \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); var buf = new Buffer.alloc(1024); console.log(\"\u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01\"); fs.open('input.txt', 'r+', function(err, fd) { if (err) { return console.error(err); } console.log(\"\u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01\"); console.log(\"\u51c6\u5907\u8bfb\u53d6\u6587\u4ef6\uff01\"); fs.read(fd, buf, 0, buf.length, 0, function(err, bytes){ if (err){ console.log(err); } // \u4ec5\u8f93\u51fa\u8bfb\u53d6\u7684\u5b57\u8282 if(bytes > 0){ console.log(buf.slice(0, bytes).toString()); } // \u5173\u95ed\u6587\u4ef6 fs.close(fd, function(err){ if (err){ console.log(err); } console.log(\"\u6587\u4ef6\u5173\u95ed\u6210\u529f\"); }); }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01 \u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01 \u51c6\u5907\u8bfb\u53d6\u6587\u4ef6\uff01 \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u6587\u4ef6\u5173\u95ed\u6210\u529f \u622a\u53d6\u6587\u4ef6 \u00b6 \u8bed\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a\u5f02\u6b65\u6a21\u5f0f\u4e0b\u622a\u53d6\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.ftruncate(fd, len, callback) \u8be5\u65b9\u6cd5\u4f7f\u7528\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u8bfb\u53d6\u6587\u4ef6\u3002 \u53c2\u6570 \u00b6 \u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a fd - \u901a\u8fc7 fs.open() \u65b9\u6cd5\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 len - \u6587\u4ef6\u5185\u5bb9\u622a\u53d6\u7684\u957f\u5ea6\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u3002 \u5b9e\u4f8b \u00b6 input.txt \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a site:www.runoob.com \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); var buf = new Buffer.alloc(1024); console.log(\"\u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01\"); fs.open('input.txt', 'r+', function(err, fd) { if (err) { return console.error(err); } console.log(\"\u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01\"); console.log(\"\u622a\u53d610\u5b57\u8282\u5185\u7684\u6587\u4ef6\u5185\u5bb9\uff0c\u8d85\u51fa\u90e8\u5206\u5c06\u88ab\u53bb\u9664\u3002\"); // \u622a\u53d6\u6587\u4ef6 fs.ftruncate(fd, 10, function(err){ if (err){ console.log(err); } console.log(\"\u6587\u4ef6\u622a\u53d6\u6210\u529f\u3002\"); console.log(\"\u8bfb\u53d6\u76f8\u540c\u7684\u6587\u4ef6\"); fs.read(fd, buf, 0, buf.length, 0, function(err, bytes){ if (err){ console.log(err); } // \u4ec5\u8f93\u51fa\u8bfb\u53d6\u7684\u5b57\u8282 if(bytes > 0){ console.log(buf.slice(0, bytes).toString()); } // \u5173\u95ed\u6587\u4ef6 fs.close(fd, function(err){ if (err){ console.log(err); } console.log(\"\u6587\u4ef6\u5173\u95ed\u6210\u529f\uff01\"); }); }); }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01 \u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01 \u622a\u53d610\u5b57\u8282\u5185\u7684\u6587\u4ef6\u5185\u5bb9\uff0c\u8d85\u51fa\u90e8\u5206\u5c06\u88ab\u53bb\u9664\u3002 \u6587\u4ef6\u622a\u53d6\u6210\u529f\u3002 \u8bfb\u53d6\u76f8\u540c\u7684\u6587\u4ef6 site:www.r \u6587\u4ef6\u5173\u95ed\u6210\u529f \u5220\u9664\u6587\u4ef6 \u00b6 \u8bed\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a\u5220\u9664\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.unlink(path, callback) \u53c2\u6570 \u00b6 \u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u8def\u5f84\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u3002 \u5b9e\u4f8b \u00b6 input.txt \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a site:www.runoob.com \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); console.log(\"\u51c6\u5907\u5220\u9664\u6587\u4ef6\uff01\"); fs.unlink('input.txt', function(err) { if (err) { return console.error(err); } console.log(\"\u6587\u4ef6\u5220\u9664\u6210\u529f\uff01\"); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u5220\u9664\u6587\u4ef6\uff01 \u6587\u4ef6\u5220\u9664\u6210\u529f\uff01 \u518d\u53bb\u67e5\u770b input.txt \u6587\u4ef6\uff0c\u53d1\u73b0\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\u3002 \u521b\u5efa\u76ee\u5f55 \u00b6 \u8bed\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a\u521b\u5efa\u76ee\u5f55\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.mkdir(path[, options], callback) \u53c2\u6570 \u00b6 \u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u8def\u5f84\u3002 options \u53c2\u6570\u53ef\u4ee5\u662f\uff1a recursive - \u662f\u5426\u4ee5\u9012\u5f52\u7684\u65b9\u5f0f\u521b\u5efa\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4e3a false\u3002 mode - \u8bbe\u7f6e\u76ee\u5f55\u6743\u9650\uff0c\u9ed8\u8ba4\u4e3a 0777\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u3002 \u5b9e\u4f8b \u00b6 \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); // tmp \u76ee\u5f55\u5fc5\u987b\u5b58\u5728 console.log(\"\u521b\u5efa\u76ee\u5f55 /tmp/test/\"); fs.mkdir(\"/tmp/test/\",function(err){ if (err) { return console.error(err); } console.log(\"\u76ee\u5f55\u521b\u5efa\u6210\u529f\u3002\"); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u521b\u5efa\u76ee\u5f55 /tmp/test/ \u76ee\u5f55\u521b\u5efa\u6210\u529f\u3002 \u53ef\u4ee5\u6dfb\u52a0 recursive: true \u53c2\u6570\uff0c\u4e0d\u7ba1\u521b\u5efa\u7684\u76ee\u5f55 /tmp \u548c /tmp/a \u662f\u5426\u5b58\u5728\uff1a fs.mkdir('/tmp/a/apple', { recursive: true }, (err) => { if (err) throw err; }); \u8bfb\u53d6\u76ee\u5f55 \u00b6 \u8bed\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a\u8bfb\u53d6\u76ee\u5f55\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.readdir(path, callback) \u53c2\u6570 \u00b6 \u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u8def\u5f84\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u5e26\u6709\u4e24\u4e2a\u53c2\u6570err, files\uff0cerr \u4e3a\u9519\u8bef\u4fe1\u606f\uff0cfiles \u4e3a \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u6570\u7ec4\u5217\u8868\u3002 \u5b9e\u4f8b \u00b6 \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); console.log(\"\u67e5\u770b /tmp \u76ee\u5f55\"); fs.readdir(\"/tmp/\",function(err, files){ if (err) { return console.error(err); } files.forEach( function (file){ console.log( file ); }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u67e5\u770b /tmp \u76ee\u5f55 input.out output.out test test.txt \u5220\u9664\u76ee\u5f55 \u00b6 \u8bed\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a\u5220\u9664\u76ee\u5f55\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.rmdir(path, callback) \u53c2\u6570 \u00b6 \u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u8def\u5f84\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u3002 \u5b9e\u4f8b \u00b6 \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); // \u6267\u884c\u524d\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684 /tmp/test \u76ee\u5f55 console.log(\"\u51c6\u5907\u5220\u9664\u76ee\u5f55 /tmp/test\"); fs.rmdir(\"/tmp/test\",function(err){ if (err) { return console.error(err); } console.log(\"\u8bfb\u53d6 /tmp \u76ee\u5f55\"); fs.readdir(\"/tmp/\",function(err, files){ if (err) { return console.error(err); } files.forEach( function (file){ console.log( file ); }); }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u5220\u9664\u76ee\u5f55 /tmp/test \u8bfb\u53d6 /tmp \u76ee\u5f55 \u2026\u2026 \u6587\u4ef6\u6a21\u5757\u65b9\u6cd5\u53c2\u8003\u624b\u518c \u00b6 \u4ee5\u4e0b\u4e3a Node.js \u6587\u4ef6\u6a21\u5757\u76f8\u540c\u7684\u65b9\u6cd5\u5217\u8868\uff1a \u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 fs.rename(oldPath, newPath, callback) \u5f02\u6b65 rename().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 2 fs.ftruncate(fd, len, callback) \u5f02\u6b65 ftruncate().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 3 fs.ftruncateSync(fd, len) \u540c\u6b65 ftruncate() 4 fs.truncate(path, len, callback) \u5f02\u6b65 truncate().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 5 fs.truncateSync(path, len) \u540c\u6b65 truncate() 6 fs.chown(path, uid, gid, callback) \u5f02\u6b65 chown().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 7 fs.chownSync(path, uid, gid) \u540c\u6b65 chown() 8 fs.fchown(fd, uid, gid, callback) \u5f02\u6b65 fchown().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 9 fs.fchownSync(fd, uid, gid) \u540c\u6b65 fchown() 10 fs.lchown(path, uid, gid, callback) \u5f02\u6b65 lchown().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 11 fs.lchownSync(path, uid, gid) \u540c\u6b65 lchown() 12 fs.chmod(path, mode, callback) \u5f02\u6b65 chmod().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 13 fs.chmodSync(path, mode) \u540c\u6b65 chmod(). 14 fs.fchmod(fd, mode, callback) \u5f02\u6b65 fchmod().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 15 fs.fchmodSync(fd, mode) \u540c\u6b65 fchmod(). 16 fs.lchmod(path, mode, callback) \u5f02\u6b65 lchmod().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002Only available on Mac OS X. 17 fs.lchmodSync(path, mode) \u540c\u6b65 lchmod(). 18 fs.stat(path, callback) \u5f02\u6b65 stat(). \u56de\u8c03\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570 err, stats\uff0cstats \u662f fs.Stats \u5bf9\u8c61\u3002 19 fs.lstat(path, callback) \u5f02\u6b65 lstat(). \u56de\u8c03\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570 err, stats\uff0cstats \u662f fs.Stats \u5bf9\u8c61\u3002 20 fs.fstat(fd, callback) \u5f02\u6b65 fstat(). \u56de\u8c03\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570 err, stats\uff0cstats \u662f fs.Stats \u5bf9\u8c61\u3002 21 fs.statSync(path) \u540c\u6b65 stat(). \u8fd4\u56de fs.Stats \u7684\u5b9e\u4f8b\u3002 22 fs.lstatSync(path) \u540c\u6b65 lstat(). \u8fd4\u56de fs.Stats \u7684\u5b9e\u4f8b\u3002 23 fs.fstatSync(fd) \u540c\u6b65 fstat(). \u8fd4\u56de fs.Stats \u7684\u5b9e\u4f8b\u3002 24 fs.link(srcpath, dstpath, callback) \u5f02\u6b65 link().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 25 fs.linkSync(srcpath, dstpath) \u540c\u6b65 link(). 26 fs.symlink(srcpath, dstpath[, type], callback) \u5f02\u6b65 symlink().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 type \u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u4e3a 'dir', 'file', \u6216 'junction' (\u9ed8\u8ba4\u4e3a 'file') \u3002 27 fs.symlinkSync(srcpath, dstpath[, type]) \u540c\u6b65 symlink(). 28 fs.readlink(path, callback) \u5f02\u6b65 readlink(). \u56de\u8c03\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570 err, linkString\u3002 29 fs.realpath(path[, cache], callback) \u5f02\u6b65 realpath(). \u56de\u8c03\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570 err, resolvedPath\u3002 30 fs.realpathSync(path[, cache]) \u540c\u6b65 realpath()\u3002\u8fd4\u56de\u7edd\u5bf9\u8def\u5f84\u3002 31 fs.unlink(path, callback) \u5f02\u6b65 unlink().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 32 fs.unlinkSync(path) \u540c\u6b65 unlink(). 33 fs.rmdir(path, callback) \u5f02\u6b65 rmdir().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 34 fs.rmdirSync(path) \u540c\u6b65 rmdir(). 35 fs.mkdir(path[, mode], callback) S\u5f02\u6b65 mkdir(2).\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 \u8bbf\u95ee\u6743\u9650\u9ed8\u8ba4\u4e3a 0777\u3002 36 fs.mkdirSync(path[, mode]) \u540c\u6b65 mkdir(). 37 fs.readdir(path, callback) \u5f02\u6b65 readdir(3). \u8bfb\u53d6\u76ee\u5f55\u7684\u5185\u5bb9\u3002 38 fs.readdirSync(path) \u540c\u6b65 readdir().\u8fd4\u56de\u6587\u4ef6\u6570\u7ec4\u5217\u8868\u3002 39 fs.close(fd, callback) \u5f02\u6b65 close().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 40 fs.closeSync(fd) \u540c\u6b65 close(). 41 fs.open(path, flags[, mode], callback) \u5f02\u6b65\u6253\u5f00\u6587\u4ef6\u3002 42 fs.openSync(path, flags[, mode]) \u540c\u6b65 version of fs.open(). 43 fs.utimes(path, atime, mtime, callback) 44 fs.utimesSync(path, atime, mtime) \u4fee\u6539\u6587\u4ef6\u65f6\u95f4\u6233\uff0c\u6587\u4ef6\u901a\u8fc7\u6307\u5b9a\u7684\u6587\u4ef6\u8def\u5f84\u3002 45 fs.futimes(fd, atime, mtime, callback) 46 fs.futimesSync(fd, atime, mtime) \u4fee\u6539\u6587\u4ef6\u65f6\u95f4\u6233\uff0c\u901a\u8fc7\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5b9a\u3002 47 fs.fsync(fd, callback) \u5f02\u6b65 fsync.\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 48 fs.fsyncSync(fd) \u540c\u6b65 fsync. 49 fs.write(fd, buffer, offset, length[, position], callback) \u5c06\u7f13\u51b2\u533a\u5185\u5bb9\u5199\u5165\u5230\u901a\u8fc7\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5b9a\u7684\u6587\u4ef6\u3002 50 fs.write(fd, data[, position[, encoding]], callback) \u901a\u8fc7\u6587\u4ef6\u63cf\u8ff0\u7b26 fd \u5199\u5165\u6587\u4ef6\u5185\u5bb9\u3002 51 fs.writeSync(fd, buffer, offset, length[, position]) \u540c\u6b65\u7248\u7684 fs.write()\u3002 52 fs.writeSync(fd, data[, position[, encoding]]) \u540c\u6b65\u7248\u7684 fs.write(). 53 fs.read(fd, buffer, offset, length, position, callback) \u901a\u8fc7\u6587\u4ef6\u63cf\u8ff0\u7b26 fd \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002 54 fs.readSync(fd, buffer, offset, length, position) \u540c\u6b65\u7248\u7684 fs.read. 55 fs.readFile(filename[, options], callback) \u5f02\u6b65\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002 56 fs.readFileSync(filename[, options]) 57 fs.writeFile(filename, data[, options], callback) \u5f02\u6b65\u5199\u5165\u6587\u4ef6\u5185\u5bb9\u3002 58 fs.writeFileSync(filename, data[, options]) \u540c\u6b65\u7248\u7684 fs.writeFile\u3002 59 fs.appendFile(filename, data[, options], callback) \u5f02\u6b65\u8ffd\u52a0\u6587\u4ef6\u5185\u5bb9\u3002 60 fs.appendFileSync(filename, data[, options]) The \u540c\u6b65 version of fs.appendFile. 61 fs.watchFile(filename[, options], listener) \u67e5\u770b\u6587\u4ef6\u7684\u4fee\u6539\u3002 62 fs.unwatchFile(filename[, listener]) \u505c\u6b62\u67e5\u770b filename \u7684\u4fee\u6539\u3002 63 fs.watch(filename[, options][, listener]) \u67e5\u770b filename \u7684\u4fee\u6539\uff0cfilename \u53ef\u4ee5\u662f\u6587\u4ef6\u6216\u76ee\u5f55\u3002\u8fd4\u56de fs.FSWatcher \u5bf9\u8c61\u3002 64 fs.exists(path, callback) \u68c0\u6d4b\u7ed9\u5b9a\u7684\u8def\u5f84\u662f\u5426\u5b58\u5728\u3002 65 fs.existsSync(path) \u540c\u6b65\u7248\u7684 fs.exists. 66 fs.access(path[, mode], callback) \u6d4b\u8bd5\u6307\u5b9a\u8def\u5f84\u7528\u6237\u6743\u9650\u3002 67 fs.accessSync(path[, mode]) \u540c\u6b65\u7248\u7684 fs.access\u3002 68 fs.createReadStream(path[, options]) \u8fd4\u56deReadStream \u5bf9\u8c61\u3002 69 fs.createWriteStream(path[, options]) \u8fd4\u56de WriteStream \u5bf9\u8c61\u3002 70 fs.symlink(srcpath, dstpath[, type], callback) \u5f02\u6b65 symlink().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 \u66f4\u591a\u5185\u5bb9\uff0c\u8bf7\u67e5\u770b\u5b98\u7f51\u6587\u4ef6\u6a21\u5757\u63cf\u8ff0\uff1a File System \u3002","title":"16-Node.js \u6587\u4ef6\u7cfb\u7edf"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#nodejs","text":"Node.js \u63d0\u4f9b\u4e00\u7ec4\u7c7b\u4f3c UNIX\uff08POSIX\uff09\u6807\u51c6\u7684\u6587\u4ef6\u64cd\u4f5cAPI\u3002 Node \u5bfc\u5165\u6587\u4ef6\u7cfb\u7edf\u6a21\u5757(fs)\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\")","title":"Node.js \u6587\u4ef6\u7cfb\u7edf"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_1","text":"Node.js \u6587\u4ef6\u7cfb\u7edf\uff08fs \u6a21\u5757\uff09\u6a21\u5757\u4e2d\u7684\u65b9\u6cd5\u5747\u6709\u5f02\u6b65\u548c\u540c\u6b65\u7248\u672c\uff0c\u4f8b\u5982\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u7684\u51fd\u6570\u6709\u5f02\u6b65\u7684 fs.readFile() \u548c\u540c\u6b65\u7684 fs.readFileSync()\u3002 \u5f02\u6b65\u7684\u65b9\u6cd5\u51fd\u6570\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u4e3a\u56de\u8c03\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5305\u542b\u4e86\u9519\u8bef\u4fe1\u606f(error)\u3002 \u5efa\u8bae\u5927\u5bb6\u4f7f\u7528\u5f02\u6b65\u65b9\u6cd5\uff0c\u6bd4\u8d77\u540c\u6b65\uff0c\u5f02\u6b65\u65b9\u6cd5\u6027\u80fd\u66f4\u9ad8\uff0c\u901f\u5ea6\u66f4\u5feb\uff0c\u800c\u4e14\u6ca1\u6709\u963b\u585e\u3002","title":"\u5f02\u6b65\u548c\u540c\u6b65"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_2","text":"\u521b\u5efa input.txt \u6587\u4ef6\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u6587\u4ef6\u8bfb\u53d6\u5b9e\u4f8b \u521b\u5efa file.js \u6587\u4ef6, \u4ee3\u7801\u5982\u4e0b\uff1a var fs = require(\"fs\"); // \u5f02\u6b65\u8bfb\u53d6 fs.readFile('input.txt', function (err, data) { if (err) { return console.error(err); } console.log(\"\u5f02\u6b65\u8bfb\u53d6: \" + data.toString()); }); // \u540c\u6b65\u8bfb\u53d6 var data = fs.readFileSync('input.txt'); console.log(\"\u540c\u6b65\u8bfb\u53d6: \" + data.toString()); console.log(\"\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002\"); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u540c\u6b65\u8bfb\u53d6: \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u6587\u4ef6\u8bfb\u53d6\u5b9e\u4f8b \u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u3002 \u5f02\u6b65\u8bfb\u53d6: \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u6587\u4ef6\u8bfb\u53d6\u5b9e\u4f8b \u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6765\u5177\u4f53\u4e86\u89e3\u4e0b Node.js \u6587\u4ef6\u7cfb\u7edf\u7684\u65b9\u6cd5\u3002","title":"\u5b9e\u4f8b"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_3","text":"","title":"\u6253\u5f00\u6587\u4ef6"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_4","text":"\u4ee5\u4e0b\u4e3a\u5728\u5f02\u6b65\u6a21\u5f0f\u4e0b\u6253\u5f00\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.open(path, flags[, mode], callback)","title":"\u8bed\u6cd5"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_5","text":"\u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u7684\u8def\u5f84\u3002 flags - \u6587\u4ef6\u6253\u5f00\u7684\u884c\u4e3a\u3002\u5177\u4f53\u503c\u8be6\u89c1\u4e0b\u6587\u3002 mode - \u8bbe\u7f6e\u6587\u4ef6\u6a21\u5f0f(\u6743\u9650)\uff0c\u6587\u4ef6\u521b\u5efa\u9ed8\u8ba4\u6743\u9650\u4e3a 0666(\u53ef\u8bfb\uff0c\u53ef\u5199)\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\u5982\uff1acallback(err, fd)\u3002 flags \u53c2\u6570\u53ef\u4ee5\u662f\u4ee5\u4e0b\u503c\uff1a Flag \u63cf\u8ff0 r \u4ee5\u8bfb\u53d6\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u629b\u51fa\u5f02\u5e38\u3002 r+ \u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u629b\u51fa\u5f02\u5e38\u3002 rs \u4ee5\u540c\u6b65\u7684\u65b9\u5f0f\u8bfb\u53d6\u6587\u4ef6\u3002 rs+ \u4ee5\u540c\u6b65\u7684\u65b9\u5f0f\u8bfb\u53d6\u548c\u5199\u5165\u6587\u4ef6\u3002 w \u4ee5\u5199\u5165\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u3002 wx \u7c7b\u4f3c 'w'\uff0c\u4f46\u662f\u5982\u679c\u6587\u4ef6\u8def\u5f84\u5b58\u5728\uff0c\u5219\u6587\u4ef6\u5199\u5165\u5931\u8d25\u3002 w+ \u4ee5\u8bfb\u5199\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u3002 wx+ \u7c7b\u4f3c 'w+'\uff0c \u4f46\u662f\u5982\u679c\u6587\u4ef6\u8def\u5f84\u5b58\u5728\uff0c\u5219\u6587\u4ef6\u8bfb\u5199\u5931\u8d25\u3002 a \u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u3002 ax \u7c7b\u4f3c 'a'\uff0c \u4f46\u662f\u5982\u679c\u6587\u4ef6\u8def\u5f84\u5b58\u5728\uff0c\u5219\u6587\u4ef6\u8ffd\u52a0\u5931\u8d25\u3002 a+ \u4ee5\u8bfb\u53d6\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u3002 ax+ \u7c7b\u4f3c 'a+'\uff0c \u4f46\u662f\u5982\u679c\u6587\u4ef6\u8def\u5f84\u5b58\u5728\uff0c\u5219\u6587\u4ef6\u8bfb\u53d6\u8ffd\u52a0\u5931\u8d25\u3002","title":"\u53c2\u6570"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_6","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u5e76\u6253\u5f00 input.txt \u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); // \u5f02\u6b65\u6253\u5f00\u6587\u4ef6 console.log(\"\u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01\"); fs.open('input.txt', 'r+', function(err, fd) { if (err) { return console.error(err); } console.log(\"\u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01\"); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01 \u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01","title":"\u5b9e\u4f8b"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_7","text":"","title":"\u83b7\u53d6\u6587\u4ef6\u4fe1\u606f"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_8","text":"\u4ee5\u4e0b\u4e3a\u901a\u8fc7\u5f02\u6b65\u6a21\u5f0f\u83b7\u53d6\u6587\u4ef6\u4fe1\u606f\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.stat(path, callback)","title":"\u8bed\u6cd5"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_9","text":"\u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u8def\u5f84\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\u5982\uff1a(err, stats), stats \u662f fs.Stats \u5bf9\u8c61\u3002 fs.stat(path)\u6267\u884c\u540e\uff0c\u4f1a\u5c06stats\u7c7b\u7684\u5b9e\u4f8b\u8fd4\u56de\u7ed9\u5176\u56de\u8c03\u51fd\u6570\u3002\u53ef\u4ee5\u901a\u8fc7stats\u7c7b\u4e2d\u7684\u63d0\u4f9b\u65b9\u6cd5\u5224\u65ad\u6587\u4ef6\u7684\u76f8\u5173\u5c5e\u6027\u3002\u4f8b\u5982\u5224\u65ad\u662f\u5426\u4e3a\u6587\u4ef6\uff1a var fs = require('fs'); fs.stat('/Users/liuht/code/itbilu/demo/fs.js', function (err, stats) { console.log(stats.isFile()); //true }) stats\u7c7b\u4e2d\u7684\u65b9\u6cd5\u6709\uff1a \u65b9\u6cd5 \u63cf\u8ff0 stats.isFile() \u5982\u679c\u662f\u6587\u4ef6\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 stats.isDirectory() \u5982\u679c\u662f\u76ee\u5f55\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 stats.isBlockDevice() \u5982\u679c\u662f\u5757\u8bbe\u5907\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 stats.isCharacterDevice() \u5982\u679c\u662f\u5b57\u7b26\u8bbe\u5907\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 stats.isSymbolicLink() \u5982\u679c\u662f\u8f6f\u94fe\u63a5\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002 stats.isFIFO() \u5982\u679c\u662fFIFO\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56de false\u3002FIFO\u662fUNIX\u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u547d\u4ee4\u7ba1\u9053\u3002 stats.isSocket() \u5982\u679c\u662f Socket \u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002","title":"\u53c2\u6570"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_10","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); console.log(\"\u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01\"); fs.stat('input.txt', function (err, stats) { if (err) { return console.error(err); } console.log(stats); console.log(\"\u8bfb\u53d6\u6587\u4ef6\u4fe1\u606f\u6210\u529f\uff01\"); // \u68c0\u6d4b\u6587\u4ef6\u7c7b\u578b console.log(\"\u662f\u5426\u4e3a\u6587\u4ef6(isFile) ? \" + stats.isFile()); console.log(\"\u662f\u5426\u4e3a\u76ee\u5f55(isDirectory) ? \" + stats.isDirectory()); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01 { dev: 16777220, mode: 33188, nlink: 1, uid: 501, gid: 20, rdev: 0, blksize: 4096, ino: 40333161, size: 61, blocks: 8, atime: Mon Sep 07 2015 17:43:55 GMT+0800 (CST), mtime: Mon Sep 07 2015 17:22:35 GMT+0800 (CST), ctime: Mon Sep 07 2015 17:22:35 GMT+0800 (CST) } \u8bfb\u53d6\u6587\u4ef6\u4fe1\u606f\u6210\u529f\uff01 \u662f\u5426\u4e3a\u6587\u4ef6(isFile) ? true \u662f\u5426\u4e3a\u76ee\u5f55(isDirectory) ? false","title":"\u5b9e\u4f8b"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_11","text":"","title":"\u5199\u5165\u6587\u4ef6"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_12","text":"\u4ee5\u4e0b\u4e3a\u5f02\u6b65\u6a21\u5f0f\u4e0b\u5199\u5165\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.writeFile(file, data[, options], callback) writeFile \u76f4\u63a5\u6253\u5f00\u6587\u4ef6\u9ed8\u8ba4\u662f w \u6a21\u5f0f\uff0c\u6240\u4ee5\u5982\u679c\u6587\u4ef6\u5b58\u5728\uff0c\u8be5\u65b9\u6cd5\u5199\u5165\u7684\u5185\u5bb9\u4f1a\u8986\u76d6\u65e7\u7684\u6587\u4ef6\u5185\u5bb9\u3002","title":"\u8bed\u6cd5"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_13","text":"\u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a file - \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 data - \u8981\u5199\u5165\u6587\u4ef6\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u662f String(\u5b57\u7b26\u4e32) \u6216 Buffer(\u7f13\u51b2) \u5bf9\u8c61\u3002 options - \u8be5\u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5305\u542b {encoding, mode, flag}\u3002\u9ed8\u8ba4\u7f16\u7801\u4e3a utf8, \u6a21\u5f0f\u4e3a 0666 \uff0c flag \u4e3a 'w' callback - \u56de\u8c03\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u53ea\u5305\u542b\u9519\u8bef\u4fe1\u606f\u53c2\u6570(err)\uff0c\u5728\u5199\u5165\u5931\u8d25\u65f6\u8fd4\u56de\u3002","title":"\u53c2\u6570"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_14","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); console.log(\"\u51c6\u5907\u5199\u5165\u6587\u4ef6\"); fs.writeFile('input.txt', '\u6211\u662f\u901a \u8fc7fs.writeFile \u5199\u5165\u6587\u4ef6\u7684\u5185\u5bb9', function(err) { if (err) { return console.error(err); } console.log(\"\u6570\u636e\u5199\u5165\u6210\u529f\uff01\"); console.log(\"--------\u6211\u662f\u5206\u5272\u7ebf-------------\") console.log(\"\u8bfb\u53d6\u5199\u5165\u7684\u6570\u636e\uff01\"); fs.readFile('input.txt', function (err, data) { if (err) { return console.error(err); } console.log(\"\u5f02\u6b65\u8bfb\u53d6\u6587\u4ef6\u6570\u636e: \" + data.toString()); }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u5199\u5165\u6587\u4ef6 \u6570\u636e\u5199\u5165\u6210\u529f\uff01 --------\u6211\u662f\u5206\u5272\u7ebf------------- \u8bfb\u53d6\u5199\u5165\u7684\u6570\u636e\uff01 \u5f02\u6b65\u8bfb\u53d6\u6587\u4ef6\u6570\u636e: \u6211\u662f\u901a \u8fc7fs.writeFile \u5199\u5165\u6587\u4ef6\u7684\u5185\u5bb9","title":"\u5b9e\u4f8b"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_15","text":"","title":"\u8bfb\u53d6\u6587\u4ef6"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_16","text":"\u4ee5\u4e0b\u4e3a\u5f02\u6b65\u6a21\u5f0f\u4e0b\u8bfb\u53d6\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.read(fd, buffer, offset, length, position, callback) \u8be5\u65b9\u6cd5\u4f7f\u7528\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u8bfb\u53d6\u6587\u4ef6\u3002","title":"\u8bed\u6cd5"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_17","text":"\u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a fd - \u901a\u8fc7 fs.open() \u65b9\u6cd5\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 buffer - \u6570\u636e\u5199\u5165\u7684\u7f13\u51b2\u533a\u3002 offset - \u7f13\u51b2\u533a\u5199\u5165\u7684\u5199\u5165\u504f\u79fb\u91cf\u3002 length - \u8981\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002 position - \u6587\u4ef6\u8bfb\u53d6\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5982\u679c position \u7684\u503c\u4e3a null\uff0c\u5219\u4f1a\u4ece\u5f53\u524d\u6587\u4ef6\u6307\u9488\u7684\u4f4d\u7f6e\u8bfb\u53d6\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6709\u4e09\u4e2a\u53c2\u6570err, bytesRead, buffer\uff0cerr \u4e3a\u9519\u8bef\u4fe1\u606f\uff0c bytesRead \u8868\u793a\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff0cbuffer \u4e3a\u7f13\u51b2\u533a\u5bf9\u8c61\u3002","title":"\u53c2\u6570"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_18","text":"input.txt \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); var buf = new Buffer.alloc(1024); console.log(\"\u51c6\u5907\u6253\u5f00\u5df2\u5b58\u5728\u7684\u6587\u4ef6\uff01\"); fs.open('input.txt', 'r+', function(err, fd) { if (err) { return console.error(err); } console.log(\"\u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01\"); console.log(\"\u51c6\u5907\u8bfb\u53d6\u6587\u4ef6\uff1a\"); fs.read(fd, buf, 0, buf.length, 0, function(err, bytes){ if (err){ console.log(err); } console.log(bytes + \" \u5b57\u8282\u88ab\u8bfb\u53d6\"); // \u4ec5\u8f93\u51fa\u8bfb\u53d6\u7684\u5b57\u8282 if(bytes > 0){ console.log(buf.slice(0, bytes).toString()); } }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u6253\u5f00\u5df2\u5b58\u5728\u7684\u6587\u4ef6\uff01 \u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01 \u51c6\u5907\u8bfb\u53d6\u6587\u4ef6\uff1a 42 \u5b57\u8282\u88ab\u8bfb\u53d6 \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com","title":"\u5b9e\u4f8b"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_19","text":"","title":"\u5173\u95ed\u6587\u4ef6"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_20","text":"\u4ee5\u4e0b\u4e3a\u5f02\u6b65\u6a21\u5f0f\u4e0b\u5173\u95ed\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.close(fd, callback) \u8be5\u65b9\u6cd5\u4f7f\u7528\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u8bfb\u53d6\u6587\u4ef6\u3002","title":"\u8bed\u6cd5"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_21","text":"\u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a fd - \u901a\u8fc7 fs.open() \u65b9\u6cd5\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u3002","title":"\u53c2\u6570"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_22","text":"input.txt \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); var buf = new Buffer.alloc(1024); console.log(\"\u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01\"); fs.open('input.txt', 'r+', function(err, fd) { if (err) { return console.error(err); } console.log(\"\u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01\"); console.log(\"\u51c6\u5907\u8bfb\u53d6\u6587\u4ef6\uff01\"); fs.read(fd, buf, 0, buf.length, 0, function(err, bytes){ if (err){ console.log(err); } // \u4ec5\u8f93\u51fa\u8bfb\u53d6\u7684\u5b57\u8282 if(bytes > 0){ console.log(buf.slice(0, bytes).toString()); } // \u5173\u95ed\u6587\u4ef6 fs.close(fd, function(err){ if (err){ console.log(err); } console.log(\"\u6587\u4ef6\u5173\u95ed\u6210\u529f\"); }); }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01 \u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01 \u51c6\u5907\u8bfb\u53d6\u6587\u4ef6\uff01 \u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740\uff1awww.runoob.com \u6587\u4ef6\u5173\u95ed\u6210\u529f","title":"\u5b9e\u4f8b"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_23","text":"","title":"\u622a\u53d6\u6587\u4ef6"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_24","text":"\u4ee5\u4e0b\u4e3a\u5f02\u6b65\u6a21\u5f0f\u4e0b\u622a\u53d6\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.ftruncate(fd, len, callback) \u8be5\u65b9\u6cd5\u4f7f\u7528\u4e86\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u8bfb\u53d6\u6587\u4ef6\u3002","title":"\u8bed\u6cd5"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_25","text":"\u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a fd - \u901a\u8fc7 fs.open() \u65b9\u6cd5\u8fd4\u56de\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 len - \u6587\u4ef6\u5185\u5bb9\u622a\u53d6\u7684\u957f\u5ea6\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u3002","title":"\u53c2\u6570"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_26","text":"input.txt \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a site:www.runoob.com \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); var buf = new Buffer.alloc(1024); console.log(\"\u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01\"); fs.open('input.txt', 'r+', function(err, fd) { if (err) { return console.error(err); } console.log(\"\u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01\"); console.log(\"\u622a\u53d610\u5b57\u8282\u5185\u7684\u6587\u4ef6\u5185\u5bb9\uff0c\u8d85\u51fa\u90e8\u5206\u5c06\u88ab\u53bb\u9664\u3002\"); // \u622a\u53d6\u6587\u4ef6 fs.ftruncate(fd, 10, function(err){ if (err){ console.log(err); } console.log(\"\u6587\u4ef6\u622a\u53d6\u6210\u529f\u3002\"); console.log(\"\u8bfb\u53d6\u76f8\u540c\u7684\u6587\u4ef6\"); fs.read(fd, buf, 0, buf.length, 0, function(err, bytes){ if (err){ console.log(err); } // \u4ec5\u8f93\u51fa\u8bfb\u53d6\u7684\u5b57\u8282 if(bytes > 0){ console.log(buf.slice(0, bytes).toString()); } // \u5173\u95ed\u6587\u4ef6 fs.close(fd, function(err){ if (err){ console.log(err); } console.log(\"\u6587\u4ef6\u5173\u95ed\u6210\u529f\uff01\"); }); }); }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u6253\u5f00\u6587\u4ef6\uff01 \u6587\u4ef6\u6253\u5f00\u6210\u529f\uff01 \u622a\u53d610\u5b57\u8282\u5185\u7684\u6587\u4ef6\u5185\u5bb9\uff0c\u8d85\u51fa\u90e8\u5206\u5c06\u88ab\u53bb\u9664\u3002 \u6587\u4ef6\u622a\u53d6\u6210\u529f\u3002 \u8bfb\u53d6\u76f8\u540c\u7684\u6587\u4ef6 site:www.r \u6587\u4ef6\u5173\u95ed\u6210\u529f","title":"\u5b9e\u4f8b"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_27","text":"","title":"\u5220\u9664\u6587\u4ef6"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_28","text":"\u4ee5\u4e0b\u4e3a\u5220\u9664\u6587\u4ef6\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.unlink(path, callback)","title":"\u8bed\u6cd5"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_29","text":"\u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u8def\u5f84\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u3002","title":"\u53c2\u6570"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_30","text":"input.txt \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a site:www.runoob.com \u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); console.log(\"\u51c6\u5907\u5220\u9664\u6587\u4ef6\uff01\"); fs.unlink('input.txt', function(err) { if (err) { return console.error(err); } console.log(\"\u6587\u4ef6\u5220\u9664\u6210\u529f\uff01\"); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u5220\u9664\u6587\u4ef6\uff01 \u6587\u4ef6\u5220\u9664\u6210\u529f\uff01 \u518d\u53bb\u67e5\u770b input.txt \u6587\u4ef6\uff0c\u53d1\u73b0\u5df2\u7ecf\u4e0d\u5b58\u5728\u4e86\u3002","title":"\u5b9e\u4f8b"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_31","text":"","title":"\u521b\u5efa\u76ee\u5f55"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_32","text":"\u4ee5\u4e0b\u4e3a\u521b\u5efa\u76ee\u5f55\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.mkdir(path[, options], callback)","title":"\u8bed\u6cd5"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_33","text":"\u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u8def\u5f84\u3002 options \u53c2\u6570\u53ef\u4ee5\u662f\uff1a recursive - \u662f\u5426\u4ee5\u9012\u5f52\u7684\u65b9\u5f0f\u521b\u5efa\u76ee\u5f55\uff0c\u9ed8\u8ba4\u4e3a false\u3002 mode - \u8bbe\u7f6e\u76ee\u5f55\u6743\u9650\uff0c\u9ed8\u8ba4\u4e3a 0777\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u3002","title":"\u53c2\u6570"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_34","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); // tmp \u76ee\u5f55\u5fc5\u987b\u5b58\u5728 console.log(\"\u521b\u5efa\u76ee\u5f55 /tmp/test/\"); fs.mkdir(\"/tmp/test/\",function(err){ if (err) { return console.error(err); } console.log(\"\u76ee\u5f55\u521b\u5efa\u6210\u529f\u3002\"); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u521b\u5efa\u76ee\u5f55 /tmp/test/ \u76ee\u5f55\u521b\u5efa\u6210\u529f\u3002 \u53ef\u4ee5\u6dfb\u52a0 recursive: true \u53c2\u6570\uff0c\u4e0d\u7ba1\u521b\u5efa\u7684\u76ee\u5f55 /tmp \u548c /tmp/a \u662f\u5426\u5b58\u5728\uff1a fs.mkdir('/tmp/a/apple', { recursive: true }, (err) => { if (err) throw err; });","title":"\u5b9e\u4f8b"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_35","text":"","title":"\u8bfb\u53d6\u76ee\u5f55"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_36","text":"\u4ee5\u4e0b\u4e3a\u8bfb\u53d6\u76ee\u5f55\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.readdir(path, callback)","title":"\u8bed\u6cd5"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_37","text":"\u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u8def\u5f84\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u56de\u8c03\u51fd\u6570\u5e26\u6709\u4e24\u4e2a\u53c2\u6570err, files\uff0cerr \u4e3a\u9519\u8bef\u4fe1\u606f\uff0cfiles \u4e3a \u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u6570\u7ec4\u5217\u8868\u3002","title":"\u53c2\u6570"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_38","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); console.log(\"\u67e5\u770b /tmp \u76ee\u5f55\"); fs.readdir(\"/tmp/\",function(err, files){ if (err) { return console.error(err); } files.forEach( function (file){ console.log( file ); }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u67e5\u770b /tmp \u76ee\u5f55 input.out output.out test test.txt","title":"\u5b9e\u4f8b"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_39","text":"","title":"\u5220\u9664\u76ee\u5f55"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_40","text":"\u4ee5\u4e0b\u4e3a\u5220\u9664\u76ee\u5f55\u7684\u8bed\u6cd5\u683c\u5f0f\uff1a fs.rmdir(path, callback)","title":"\u8bed\u6cd5"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_41","text":"\u53c2\u6570\u4f7f\u7528\u8bf4\u660e\u5982\u4e0b\uff1a path - \u6587\u4ef6\u8def\u5f84\u3002 callback - \u56de\u8c03\u51fd\u6570\uff0c\u6ca1\u6709\u53c2\u6570\u3002","title":"\u53c2\u6570"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_42","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u521b\u5efa file.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var fs = require(\"fs\"); // \u6267\u884c\u524d\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684 /tmp/test \u76ee\u5f55 console.log(\"\u51c6\u5907\u5220\u9664\u76ee\u5f55 /tmp/test\"); fs.rmdir(\"/tmp/test\",function(err){ if (err) { return console.error(err); } console.log(\"\u8bfb\u53d6 /tmp \u76ee\u5f55\"); fs.readdir(\"/tmp/\",function(err, files){ if (err) { return console.error(err); } files.forEach( function (file){ console.log( file ); }); }); }); \u4ee5\u4e0a\u4ee3\u7801\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a $ node file.js \u51c6\u5907\u5220\u9664\u76ee\u5f55 /tmp/test \u8bfb\u53d6 /tmp \u76ee\u5f55 \u2026\u2026","title":"\u5b9e\u4f8b"},{"location":"nodejs/16-Node.js%20%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/#_43","text":"\u4ee5\u4e0b\u4e3a Node.js \u6587\u4ef6\u6a21\u5757\u76f8\u540c\u7684\u65b9\u6cd5\u5217\u8868\uff1a \u5e8f\u53f7 \u65b9\u6cd5 & \u63cf\u8ff0 1 fs.rename(oldPath, newPath, callback) \u5f02\u6b65 rename().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 2 fs.ftruncate(fd, len, callback) \u5f02\u6b65 ftruncate().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 3 fs.ftruncateSync(fd, len) \u540c\u6b65 ftruncate() 4 fs.truncate(path, len, callback) \u5f02\u6b65 truncate().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 5 fs.truncateSync(path, len) \u540c\u6b65 truncate() 6 fs.chown(path, uid, gid, callback) \u5f02\u6b65 chown().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 7 fs.chownSync(path, uid, gid) \u540c\u6b65 chown() 8 fs.fchown(fd, uid, gid, callback) \u5f02\u6b65 fchown().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 9 fs.fchownSync(fd, uid, gid) \u540c\u6b65 fchown() 10 fs.lchown(path, uid, gid, callback) \u5f02\u6b65 lchown().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 11 fs.lchownSync(path, uid, gid) \u540c\u6b65 lchown() 12 fs.chmod(path, mode, callback) \u5f02\u6b65 chmod().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 13 fs.chmodSync(path, mode) \u540c\u6b65 chmod(). 14 fs.fchmod(fd, mode, callback) \u5f02\u6b65 fchmod().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 15 fs.fchmodSync(fd, mode) \u540c\u6b65 fchmod(). 16 fs.lchmod(path, mode, callback) \u5f02\u6b65 lchmod().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002Only available on Mac OS X. 17 fs.lchmodSync(path, mode) \u540c\u6b65 lchmod(). 18 fs.stat(path, callback) \u5f02\u6b65 stat(). \u56de\u8c03\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570 err, stats\uff0cstats \u662f fs.Stats \u5bf9\u8c61\u3002 19 fs.lstat(path, callback) \u5f02\u6b65 lstat(). \u56de\u8c03\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570 err, stats\uff0cstats \u662f fs.Stats \u5bf9\u8c61\u3002 20 fs.fstat(fd, callback) \u5f02\u6b65 fstat(). \u56de\u8c03\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570 err, stats\uff0cstats \u662f fs.Stats \u5bf9\u8c61\u3002 21 fs.statSync(path) \u540c\u6b65 stat(). \u8fd4\u56de fs.Stats \u7684\u5b9e\u4f8b\u3002 22 fs.lstatSync(path) \u540c\u6b65 lstat(). \u8fd4\u56de fs.Stats \u7684\u5b9e\u4f8b\u3002 23 fs.fstatSync(fd) \u540c\u6b65 fstat(). \u8fd4\u56de fs.Stats \u7684\u5b9e\u4f8b\u3002 24 fs.link(srcpath, dstpath, callback) \u5f02\u6b65 link().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 25 fs.linkSync(srcpath, dstpath) \u540c\u6b65 link(). 26 fs.symlink(srcpath, dstpath[, type], callback) \u5f02\u6b65 symlink().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 type \u53c2\u6570\u53ef\u4ee5\u8bbe\u7f6e\u4e3a 'dir', 'file', \u6216 'junction' (\u9ed8\u8ba4\u4e3a 'file') \u3002 27 fs.symlinkSync(srcpath, dstpath[, type]) \u540c\u6b65 symlink(). 28 fs.readlink(path, callback) \u5f02\u6b65 readlink(). \u56de\u8c03\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570 err, linkString\u3002 29 fs.realpath(path[, cache], callback) \u5f02\u6b65 realpath(). \u56de\u8c03\u51fd\u6570\u6709\u4e24\u4e2a\u53c2\u6570 err, resolvedPath\u3002 30 fs.realpathSync(path[, cache]) \u540c\u6b65 realpath()\u3002\u8fd4\u56de\u7edd\u5bf9\u8def\u5f84\u3002 31 fs.unlink(path, callback) \u5f02\u6b65 unlink().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 32 fs.unlinkSync(path) \u540c\u6b65 unlink(). 33 fs.rmdir(path, callback) \u5f02\u6b65 rmdir().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 34 fs.rmdirSync(path) \u540c\u6b65 rmdir(). 35 fs.mkdir(path[, mode], callback) S\u5f02\u6b65 mkdir(2).\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 \u8bbf\u95ee\u6743\u9650\u9ed8\u8ba4\u4e3a 0777\u3002 36 fs.mkdirSync(path[, mode]) \u540c\u6b65 mkdir(). 37 fs.readdir(path, callback) \u5f02\u6b65 readdir(3). \u8bfb\u53d6\u76ee\u5f55\u7684\u5185\u5bb9\u3002 38 fs.readdirSync(path) \u540c\u6b65 readdir().\u8fd4\u56de\u6587\u4ef6\u6570\u7ec4\u5217\u8868\u3002 39 fs.close(fd, callback) \u5f02\u6b65 close().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 40 fs.closeSync(fd) \u540c\u6b65 close(). 41 fs.open(path, flags[, mode], callback) \u5f02\u6b65\u6253\u5f00\u6587\u4ef6\u3002 42 fs.openSync(path, flags[, mode]) \u540c\u6b65 version of fs.open(). 43 fs.utimes(path, atime, mtime, callback) 44 fs.utimesSync(path, atime, mtime) \u4fee\u6539\u6587\u4ef6\u65f6\u95f4\u6233\uff0c\u6587\u4ef6\u901a\u8fc7\u6307\u5b9a\u7684\u6587\u4ef6\u8def\u5f84\u3002 45 fs.futimes(fd, atime, mtime, callback) 46 fs.futimesSync(fd, atime, mtime) \u4fee\u6539\u6587\u4ef6\u65f6\u95f4\u6233\uff0c\u901a\u8fc7\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5b9a\u3002 47 fs.fsync(fd, callback) \u5f02\u6b65 fsync.\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 48 fs.fsyncSync(fd) \u540c\u6b65 fsync. 49 fs.write(fd, buffer, offset, length[, position], callback) \u5c06\u7f13\u51b2\u533a\u5185\u5bb9\u5199\u5165\u5230\u901a\u8fc7\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5b9a\u7684\u6587\u4ef6\u3002 50 fs.write(fd, data[, position[, encoding]], callback) \u901a\u8fc7\u6587\u4ef6\u63cf\u8ff0\u7b26 fd \u5199\u5165\u6587\u4ef6\u5185\u5bb9\u3002 51 fs.writeSync(fd, buffer, offset, length[, position]) \u540c\u6b65\u7248\u7684 fs.write()\u3002 52 fs.writeSync(fd, data[, position[, encoding]]) \u540c\u6b65\u7248\u7684 fs.write(). 53 fs.read(fd, buffer, offset, length, position, callback) \u901a\u8fc7\u6587\u4ef6\u63cf\u8ff0\u7b26 fd \u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002 54 fs.readSync(fd, buffer, offset, length, position) \u540c\u6b65\u7248\u7684 fs.read. 55 fs.readFile(filename[, options], callback) \u5f02\u6b65\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\u3002 56 fs.readFileSync(filename[, options]) 57 fs.writeFile(filename, data[, options], callback) \u5f02\u6b65\u5199\u5165\u6587\u4ef6\u5185\u5bb9\u3002 58 fs.writeFileSync(filename, data[, options]) \u540c\u6b65\u7248\u7684 fs.writeFile\u3002 59 fs.appendFile(filename, data[, options], callback) \u5f02\u6b65\u8ffd\u52a0\u6587\u4ef6\u5185\u5bb9\u3002 60 fs.appendFileSync(filename, data[, options]) The \u540c\u6b65 version of fs.appendFile. 61 fs.watchFile(filename[, options], listener) \u67e5\u770b\u6587\u4ef6\u7684\u4fee\u6539\u3002 62 fs.unwatchFile(filename[, listener]) \u505c\u6b62\u67e5\u770b filename \u7684\u4fee\u6539\u3002 63 fs.watch(filename[, options][, listener]) \u67e5\u770b filename \u7684\u4fee\u6539\uff0cfilename \u53ef\u4ee5\u662f\u6587\u4ef6\u6216\u76ee\u5f55\u3002\u8fd4\u56de fs.FSWatcher \u5bf9\u8c61\u3002 64 fs.exists(path, callback) \u68c0\u6d4b\u7ed9\u5b9a\u7684\u8def\u5f84\u662f\u5426\u5b58\u5728\u3002 65 fs.existsSync(path) \u540c\u6b65\u7248\u7684 fs.exists. 66 fs.access(path[, mode], callback) \u6d4b\u8bd5\u6307\u5b9a\u8def\u5f84\u7528\u6237\u6743\u9650\u3002 67 fs.accessSync(path[, mode]) \u540c\u6b65\u7248\u7684 fs.access\u3002 68 fs.createReadStream(path[, options]) \u8fd4\u56deReadStream \u5bf9\u8c61\u3002 69 fs.createWriteStream(path[, options]) \u8fd4\u56de WriteStream \u5bf9\u8c61\u3002 70 fs.symlink(srcpath, dstpath[, type], callback) \u5f02\u6b65 symlink().\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u53c2\u6570\uff0c\u4f46\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u3002 \u66f4\u591a\u5185\u5bb9\uff0c\u8bf7\u67e5\u770b\u5b98\u7f51\u6587\u4ef6\u6a21\u5757\u63cf\u8ff0\uff1a File System \u3002","title":"\u6587\u4ef6\u6a21\u5757\u65b9\u6cd5\u53c2\u8003\u624b\u518c"},{"location":"nodejs/17-Node.js%20GETPOST%E8%AF%B7%E6%B1%82/","text":"Node.js GET/POST\u8bf7\u6c42 \u00b6 \u5728\u5f88\u591a\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u7684\u670d\u52a1\u5668\u90fd\u9700\u8981\u8ddf\u7528\u6237\u7684\u6d4f\u89c8\u5668\u6253\u4ea4\u9053\uff0c\u5982\u8868\u5355\u63d0\u4ea4\u3002 \u8868\u5355\u63d0\u4ea4\u5230\u670d\u52a1\u5668\u4e00\u822c\u90fd\u4f7f\u7528 GET/POST \u8bf7\u6c42\u3002 \u672c\u7ae0\u8282\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6\u4ecb\u7ecd Node.js GET/POST\u8bf7\u6c42\u3002 \u83b7\u53d6GET\u8bf7\u6c42\u5185\u5bb9 \u00b6 \u7531\u4e8eGET\u8bf7\u6c42\u76f4\u63a5\u88ab\u5d4c\u5165\u5728\u8def\u5f84\u4e2d\uff0cURL\u662f\u5b8c\u6574\u7684\u8bf7\u6c42\u8def\u5f84\uff0c\u5305\u62ec\u4e86?\u540e\u9762\u7684\u90e8\u5206\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u624b\u52a8\u89e3\u6790\u540e\u9762\u7684\u5185\u5bb9\u4f5c\u4e3aGET\u8bf7\u6c42\u7684\u53c2\u6570\u3002 node.js \u4e2d url \u6a21\u5757\u4e2d\u7684 parse \u51fd\u6570\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u529f\u80fd\u3002 \u5b9e\u4f8b \u00b6 var http = require('http'); var url = require('url'); var util = require('util'); http.createServer(function(req, res){ res.writeHead(200, {'Content-Type': 'text/plain; charset=utf-8'}); res.end(util.inspect(url.parse(req.url, true))); }).listen(3000); \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://localhost:3000/user?name=\u83dc\u9e1f\u6559\u7a0b&url=www.runoob.com \u7136\u540e\u67e5\u770b\u8fd4\u56de\u7ed3\u679c: \u83b7\u53d6 URL \u7684\u53c2\u6570 \u00b6 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 url.parse \u65b9\u6cd5\u6765\u89e3\u6790 URL \u4e2d\u7684\u53c2\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a \u5b9e\u4f8b \u00b6 var http = require('http'); var url = require('url'); var util = require('util'); http.createServer(function(req, res){ res.writeHead(200, {'Content-Type': 'text/plain'}); // \u89e3\u6790 url \u53c2\u6570 var params = url.parse(req.url, true).query; res.write(\"\u7f51\u7ad9\u540d\uff1a\" + params.name); res.write(\"\\n\"); res.write(\"\u7f51\u7ad9 URL\uff1a\" + params.url); res.end(); }).listen(3000); \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://localhost:3000/user?name=\u83dc\u9e1f\u6559\u7a0b&url=www.runoob.com \u7136\u540e\u67e5\u770b\u8fd4\u56de\u7ed3\u679c: \u83b7\u53d6 POST \u8bf7\u6c42\u5185\u5bb9 \u00b6 POST \u8bf7\u6c42\u7684\u5185\u5bb9\u5168\u90e8\u7684\u90fd\u5728\u8bf7\u6c42\u4f53\u4e2d\uff0chttp.ServerRequest \u5e76\u6ca1\u6709\u4e00\u4e2a\u5c5e\u6027\u5185\u5bb9\u4e3a\u8bf7\u6c42\u4f53\uff0c\u539f\u56e0\u662f\u7b49\u5f85\u8bf7\u6c42\u4f53\u4f20\u8f93\u53ef\u80fd\u662f\u4e00\u4ef6\u8017\u65f6\u7684\u5de5\u4f5c\u3002 \u6bd4\u5982\u4e0a\u4f20\u6587\u4ef6\uff0c\u800c\u5f88\u591a\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\u7406\u4f1a\u8bf7\u6c42\u4f53\u7684\u5185\u5bb9\uff0c\u6076\u610f\u7684POST\u8bf7\u6c42\u4f1a\u5927\u5927\u6d88\u8017\u670d\u52a1\u5668\u7684\u8d44\u6e90\uff0c\u6240\u4ee5 node.js \u9ed8\u8ba4\u662f\u4e0d\u4f1a\u89e3\u6790\u8bf7\u6c42\u4f53\u7684\uff0c\u5f53\u4f60\u9700\u8981\u7684\u65f6\u5019\uff0c\u9700\u8981\u624b\u52a8\u6765\u505a\u3002 \u57fa\u672c\u8bed\u6cd5\u7ed3\u6784\u8bf4\u660e \u00b6 var http = require('http'); var querystring = require('querystring'); var util = require('util'); http.createServer(function(req, res){ // \u5b9a\u4e49\u4e86\u4e00\u4e2apost\u53d8\u91cf\uff0c\u7528\u4e8e\u6682\u5b58\u8bf7\u6c42\u4f53\u7684\u4fe1\u606f var post = ''; // \u901a\u8fc7req\u7684data\u4e8b\u4ef6\u76d1\u542c\u51fd\u6570\uff0c\u6bcf\u5f53\u63a5\u53d7\u5230\u8bf7\u6c42\u4f53\u7684\u6570\u636e\uff0c\u5c31\u7d2f\u52a0\u5230post\u53d8\u91cf\u4e2d req.on('data', function(chunk){ post += chunk; }); // \u5728end\u4e8b\u4ef6\u89e6\u53d1\u540e\uff0c\u901a\u8fc7querystring.parse\u5c06post\u89e3\u6790\u4e3a\u771f\u6b63\u7684POST\u8bf7\u6c42\u683c\u5f0f\uff0c\u7136\u540e\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u3002 req.on('end', function(){ post = querystring.parse(post); res.end(util.inspect(post)); }); }).listen(3000); \u4ee5\u4e0b\u5b9e\u4f8b\u8868\u5355\u901a\u8fc7 POST \u63d0\u4ea4\u5e76\u8f93\u51fa\u6570\u636e\uff1a \u5b9e\u4f8b \u00b6 var http = require('http'); var querystring = require('querystring'); var postHTML = ' \u83dc\u9e1f\u6559\u7a0b Node.js \u5b9e\u4f8b ' + ' ' + ' ' + '\u7f51\u7ad9\u540d\uff1a ' + '\u7f51\u7ad9 URL\uff1a ' + ' ' + ' ' + ' '; http.createServer(function (req, res) { var body = \"\"; req.on('data', function (chunk) { body += chunk; }); req.on('end', function () { // \u89e3\u6790\u53c2\u6570 body = querystring.parse(body); // \u8bbe\u7f6e\u54cd\u5e94\u5934\u90e8\u4fe1\u606f\u53ca\u7f16\u7801 res.writeHead(200, {'Content-Type': 'text/html; charset=utf8'}); if(body.name && body.url) { // \u8f93\u51fa\u63d0\u4ea4\u7684\u6570\u636e res.write(\"\u7f51\u7ad9\u540d\uff1a\" + body.name); res.write(\" \"); res.write(\"\u7f51\u7ad9 URL\uff1a\" + body.url); } else { // \u8f93\u51fa\u8868\u5355 res.write(postHTML); } res.end(); }); }).listen(3000); \u6267\u884c\u7ed3\u679c Gif \u6f14\u793a\uff1a","title":"17-Node.js GETPOST\u8bf7\u6c42"},{"location":"nodejs/17-Node.js%20GETPOST%E8%AF%B7%E6%B1%82/#nodejs-getpost","text":"\u5728\u5f88\u591a\u573a\u666f\u4e2d\uff0c\u6211\u4eec\u7684\u670d\u52a1\u5668\u90fd\u9700\u8981\u8ddf\u7528\u6237\u7684\u6d4f\u89c8\u5668\u6253\u4ea4\u9053\uff0c\u5982\u8868\u5355\u63d0\u4ea4\u3002 \u8868\u5355\u63d0\u4ea4\u5230\u670d\u52a1\u5668\u4e00\u822c\u90fd\u4f7f\u7528 GET/POST \u8bf7\u6c42\u3002 \u672c\u7ae0\u8282\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6\u4ecb\u7ecd Node.js GET/POST\u8bf7\u6c42\u3002","title":"Node.js GET/POST\u8bf7\u6c42"},{"location":"nodejs/17-Node.js%20GETPOST%E8%AF%B7%E6%B1%82/#get","text":"\u7531\u4e8eGET\u8bf7\u6c42\u76f4\u63a5\u88ab\u5d4c\u5165\u5728\u8def\u5f84\u4e2d\uff0cURL\u662f\u5b8c\u6574\u7684\u8bf7\u6c42\u8def\u5f84\uff0c\u5305\u62ec\u4e86?\u540e\u9762\u7684\u90e8\u5206\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u624b\u52a8\u89e3\u6790\u540e\u9762\u7684\u5185\u5bb9\u4f5c\u4e3aGET\u8bf7\u6c42\u7684\u53c2\u6570\u3002 node.js \u4e2d url \u6a21\u5757\u4e2d\u7684 parse \u51fd\u6570\u63d0\u4f9b\u4e86\u8fd9\u4e2a\u529f\u80fd\u3002","title":"\u83b7\u53d6GET\u8bf7\u6c42\u5185\u5bb9"},{"location":"nodejs/17-Node.js%20GETPOST%E8%AF%B7%E6%B1%82/#_1","text":"var http = require('http'); var url = require('url'); var util = require('util'); http.createServer(function(req, res){ res.writeHead(200, {'Content-Type': 'text/plain; charset=utf-8'}); res.end(util.inspect(url.parse(req.url, true))); }).listen(3000); \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://localhost:3000/user?name=\u83dc\u9e1f\u6559\u7a0b&url=www.runoob.com \u7136\u540e\u67e5\u770b\u8fd4\u56de\u7ed3\u679c:","title":"\u5b9e\u4f8b"},{"location":"nodejs/17-Node.js%20GETPOST%E8%AF%B7%E6%B1%82/#url","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 url.parse \u65b9\u6cd5\u6765\u89e3\u6790 URL \u4e2d\u7684\u53c2\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a","title":"\u83b7\u53d6 URL \u7684\u53c2\u6570"},{"location":"nodejs/17-Node.js%20GETPOST%E8%AF%B7%E6%B1%82/#_2","text":"var http = require('http'); var url = require('url'); var util = require('util'); http.createServer(function(req, res){ res.writeHead(200, {'Content-Type': 'text/plain'}); // \u89e3\u6790 url \u53c2\u6570 var params = url.parse(req.url, true).query; res.write(\"\u7f51\u7ad9\u540d\uff1a\" + params.name); res.write(\"\\n\"); res.write(\"\u7f51\u7ad9 URL\uff1a\" + params.url); res.end(); }).listen(3000); \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://localhost:3000/user?name=\u83dc\u9e1f\u6559\u7a0b&url=www.runoob.com \u7136\u540e\u67e5\u770b\u8fd4\u56de\u7ed3\u679c:","title":"\u5b9e\u4f8b"},{"location":"nodejs/17-Node.js%20GETPOST%E8%AF%B7%E6%B1%82/#post","text":"POST \u8bf7\u6c42\u7684\u5185\u5bb9\u5168\u90e8\u7684\u90fd\u5728\u8bf7\u6c42\u4f53\u4e2d\uff0chttp.ServerRequest \u5e76\u6ca1\u6709\u4e00\u4e2a\u5c5e\u6027\u5185\u5bb9\u4e3a\u8bf7\u6c42\u4f53\uff0c\u539f\u56e0\u662f\u7b49\u5f85\u8bf7\u6c42\u4f53\u4f20\u8f93\u53ef\u80fd\u662f\u4e00\u4ef6\u8017\u65f6\u7684\u5de5\u4f5c\u3002 \u6bd4\u5982\u4e0a\u4f20\u6587\u4ef6\uff0c\u800c\u5f88\u591a\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u5e76\u4e0d\u9700\u8981\u7406\u4f1a\u8bf7\u6c42\u4f53\u7684\u5185\u5bb9\uff0c\u6076\u610f\u7684POST\u8bf7\u6c42\u4f1a\u5927\u5927\u6d88\u8017\u670d\u52a1\u5668\u7684\u8d44\u6e90\uff0c\u6240\u4ee5 node.js \u9ed8\u8ba4\u662f\u4e0d\u4f1a\u89e3\u6790\u8bf7\u6c42\u4f53\u7684\uff0c\u5f53\u4f60\u9700\u8981\u7684\u65f6\u5019\uff0c\u9700\u8981\u624b\u52a8\u6765\u505a\u3002","title":"\u83b7\u53d6 POST \u8bf7\u6c42\u5185\u5bb9"},{"location":"nodejs/17-Node.js%20GETPOST%E8%AF%B7%E6%B1%82/#_3","text":"var http = require('http'); var querystring = require('querystring'); var util = require('util'); http.createServer(function(req, res){ // \u5b9a\u4e49\u4e86\u4e00\u4e2apost\u53d8\u91cf\uff0c\u7528\u4e8e\u6682\u5b58\u8bf7\u6c42\u4f53\u7684\u4fe1\u606f var post = ''; // \u901a\u8fc7req\u7684data\u4e8b\u4ef6\u76d1\u542c\u51fd\u6570\uff0c\u6bcf\u5f53\u63a5\u53d7\u5230\u8bf7\u6c42\u4f53\u7684\u6570\u636e\uff0c\u5c31\u7d2f\u52a0\u5230post\u53d8\u91cf\u4e2d req.on('data', function(chunk){ post += chunk; }); // \u5728end\u4e8b\u4ef6\u89e6\u53d1\u540e\uff0c\u901a\u8fc7querystring.parse\u5c06post\u89e3\u6790\u4e3a\u771f\u6b63\u7684POST\u8bf7\u6c42\u683c\u5f0f\uff0c\u7136\u540e\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u3002 req.on('end', function(){ post = querystring.parse(post); res.end(util.inspect(post)); }); }).listen(3000); \u4ee5\u4e0b\u5b9e\u4f8b\u8868\u5355\u901a\u8fc7 POST \u63d0\u4ea4\u5e76\u8f93\u51fa\u6570\u636e\uff1a","title":"\u57fa\u672c\u8bed\u6cd5\u7ed3\u6784\u8bf4\u660e"},{"location":"nodejs/17-Node.js%20GETPOST%E8%AF%B7%E6%B1%82/#_4","text":"var http = require('http'); var querystring = require('querystring'); var postHTML = ' \u83dc\u9e1f\u6559\u7a0b Node.js \u5b9e\u4f8b ' + ' ' + ' ' + '\u7f51\u7ad9\u540d\uff1a ' + '\u7f51\u7ad9 URL\uff1a ' + ' ' + ' ' + ' '; http.createServer(function (req, res) { var body = \"\"; req.on('data', function (chunk) { body += chunk; }); req.on('end', function () { // \u89e3\u6790\u53c2\u6570 body = querystring.parse(body); // \u8bbe\u7f6e\u54cd\u5e94\u5934\u90e8\u4fe1\u606f\u53ca\u7f16\u7801 res.writeHead(200, {'Content-Type': 'text/html; charset=utf8'}); if(body.name && body.url) { // \u8f93\u51fa\u63d0\u4ea4\u7684\u6570\u636e res.write(\"\u7f51\u7ad9\u540d\uff1a\" + body.name); res.write(\" \"); res.write(\"\u7f51\u7ad9 URL\uff1a\" + body.url); } else { // \u8f93\u51fa\u8868\u5355 res.write(postHTML); } res.end(); }); }).listen(3000); \u6267\u884c\u7ed3\u679c Gif \u6f14\u793a\uff1a","title":"\u5b9e\u4f8b"},{"location":"nodejs/18-Node.js%20%E5%B7%A5%E5%85%B7%E6%A8%A1%E5%9D%97/","text":"Node.js \u5de5\u5177\u6a21\u5757 \u00b6 \u5728 Node.js \u6a21\u5757\u5e93\u4e2d\u6709\u5f88\u591a\u597d\u7528\u7684\u6a21\u5757\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u51e0\u79cd\u5e38\u7528\u6a21\u5757\u7684\u4f7f\u7528\uff1a \u5e8f\u53f7 \u6a21\u5757\u540d & \u63cf\u8ff0 1 OS \u6a21\u5757 \u63d0\u4f9b\u57fa\u672c\u7684\u7cfb\u7edf\u64cd\u4f5c\u51fd\u6570\u3002 2 Path \u6a21\u5757 \u63d0\u4f9b\u4e86\u5904\u7406\u548c\u8f6c\u6362\u6587\u4ef6\u8def\u5f84\u7684\u5de5\u5177\u3002 3 Net \u6a21\u5757 \u7528\u4e8e\u5e95\u5c42\u7684\u7f51\u7edc\u901a\u4fe1\u3002\u63d0\u4f9b\u4e86\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u7684\u7684\u64cd\u4f5c\u3002 4 DNS \u6a21\u5757 \u7528\u4e8e\u89e3\u6790\u57df\u540d\u3002 5 Domain \u6a21\u5757 \u7b80\u5316\u5f02\u6b65\u4ee3\u7801\u7684\u5f02\u5e38\u5904\u7406\uff0c\u53ef\u4ee5\u6355\u6349\u5904\u7406try catch\u65e0\u6cd5\u6355\u6349\u7684\u3002","title":"18-Node.js \u5de5\u5177\u6a21\u5757"},{"location":"nodejs/18-Node.js%20%E5%B7%A5%E5%85%B7%E6%A8%A1%E5%9D%97/#nodejs","text":"\u5728 Node.js \u6a21\u5757\u5e93\u4e2d\u6709\u5f88\u591a\u597d\u7528\u7684\u6a21\u5757\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u51e0\u79cd\u5e38\u7528\u6a21\u5757\u7684\u4f7f\u7528\uff1a \u5e8f\u53f7 \u6a21\u5757\u540d & \u63cf\u8ff0 1 OS \u6a21\u5757 \u63d0\u4f9b\u57fa\u672c\u7684\u7cfb\u7edf\u64cd\u4f5c\u51fd\u6570\u3002 2 Path \u6a21\u5757 \u63d0\u4f9b\u4e86\u5904\u7406\u548c\u8f6c\u6362\u6587\u4ef6\u8def\u5f84\u7684\u5de5\u5177\u3002 3 Net \u6a21\u5757 \u7528\u4e8e\u5e95\u5c42\u7684\u7f51\u7edc\u901a\u4fe1\u3002\u63d0\u4f9b\u4e86\u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\u7684\u7684\u64cd\u4f5c\u3002 4 DNS \u6a21\u5757 \u7528\u4e8e\u89e3\u6790\u57df\u540d\u3002 5 Domain \u6a21\u5757 \u7b80\u5316\u5f02\u6b65\u4ee3\u7801\u7684\u5f02\u5e38\u5904\u7406\uff0c\u53ef\u4ee5\u6355\u6349\u5904\u7406try catch\u65e0\u6cd5\u6355\u6349\u7684\u3002","title":"Node.js \u5de5\u5177\u6a21\u5757"},{"location":"nodejs/19-Node.js%20Web%20%E6%A8%A1%E5%9D%97/","text":"Node.js Web \u6a21\u5757 \u00b6 \u4ec0\u4e48\u662f Web \u670d\u52a1\u5668\uff1f \u00b6 Web\u670d\u52a1\u5668\u4e00\u822c\u6307\u7f51\u7ad9\u670d\u52a1\u5668\uff0c\u662f\u6307\u9a7b\u7559\u4e8e\u56e0\u7279\u7f51\u4e0a\u67d0\u79cd\u7c7b\u578b\u8ba1\u7b97\u673a\u7684\u7a0b\u5e8f\uff0cWeb\u670d\u52a1\u5668\u7684\u57fa\u672c\u529f\u80fd\u5c31\u662f\u63d0\u4f9bWeb\u4fe1\u606f\u6d4f\u89c8\u670d\u52a1\u3002\u5b83\u53ea\u9700\u652f\u6301HTTP\u534f\u8bae\u3001HTML\u6587\u6863\u683c\u5f0f\u53caURL\uff0c\u4e0e\u5ba2\u6237\u7aef\u7684\u7f51\u7edc\u6d4f\u89c8\u5668\u914d\u5408\u3002 \u5927\u591a\u6570 web \u670d\u52a1\u5668\u90fd\u652f\u6301\u670d\u52a1\u7aef\u7684\u811a\u672c\u8bed\u8a00\uff08php\u3001python\u3001ruby\uff09\u7b49\uff0c\u5e76\u901a\u8fc7\u811a\u672c\u8bed\u8a00\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u6570\u636e\uff0c\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u3002 \u76ee\u524d\u6700\u4e3b\u6d41\u7684\u4e09\u4e2aWeb\u670d\u52a1\u5668\u662fApache\u3001Nginx\u3001IIS\u3002 Web \u5e94\u7528\u67b6\u6784 \u00b6 Client - \u5ba2\u6237\u7aef\uff0c\u4e00\u822c\u6307\u6d4f\u89c8\u5668\uff0c\u6d4f\u89c8\u5668\u53ef\u4ee5\u901a\u8fc7 HTTP \u534f\u8bae\u5411\u670d\u52a1\u5668\u8bf7\u6c42\u6570\u636e\u3002 Server - \u670d\u52a1\u7aef\uff0c\u4e00\u822c\u6307 Web \u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u63a5\u6536\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5e76\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u54cd\u5e94\u6570\u636e\u3002 Business - \u4e1a\u52a1\u5c42\uff0c \u901a\u8fc7 Web \u670d\u52a1\u5668\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\uff0c\u5982\u4e0e\u6570\u636e\u5e93\u4ea4\u4e92\uff0c\u903b\u8f91\u8fd0\u7b97\uff0c\u8c03\u7528\u5916\u90e8\u7a0b\u5e8f\u7b49\u3002 Data - \u6570\u636e\u5c42\uff0c\u4e00\u822c\u7531\u6570\u636e\u5e93\u7ec4\u6210\u3002 \u4f7f\u7528 Node \u521b\u5efa Web \u670d\u52a1\u5668 \u00b6 Node.js \u63d0\u4f9b\u4e86 http \u6a21\u5757\uff0chttp \u6a21\u5757\u4e3b\u8981\u7528\u4e8e\u642d\u5efa HTTP \u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\uff0c\u4f7f\u7528 HTTP \u670d\u52a1\u5668\u6216\u5ba2\u6237\u7aef\u529f\u80fd\u5fc5\u987b\u8c03\u7528 http \u6a21\u5757\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a var http = require('http'); \u4ee5\u4e0b\u662f\u6f14\u793a\u4e00\u4e2a\u6700\u57fa\u672c\u7684 HTTP \u670d\u52a1\u5668\u67b6\u6784(\u4f7f\u7528 8080 \u7aef\u53e3)\uff0c\u521b\u5efa server.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a \u5b9e\u4f8b \u00b6 var http = require('http'); var fs = require('fs'); var url = require('url'); // \u521b\u5efa\u670d\u52a1\u5668 http.createServer( function (request, response) { // \u89e3\u6790\u8bf7\u6c42\uff0c\u5305\u62ec\u6587\u4ef6\u540d var pathname = url.parse(request.url).pathname; // \u8f93\u51fa\u8bf7\u6c42\u7684\u6587\u4ef6\u540d console.log(\"Request for \" + pathname + \" received.\"); // \u4ece\u6587\u4ef6\u7cfb\u7edf\u4e2d\u8bfb\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6\u5185\u5bb9 fs.readFile(pathname.substr(1), function (err, data) { if (err) { console.log(err); // HTTP \u72b6\u6001\u7801: 404 : NOT FOUND // Content Type: text/html response.writeHead(404, {'Content-Type': 'text/html'}); }else{ // HTTP \u72b6\u6001\u7801: 200 : OK // Content Type: text/html response.writeHead(200, {'Content-Type': 'text/html'}); // \u54cd\u5e94\u6587\u4ef6\u5185\u5bb9 response.write(data.toString()); } // \u53d1\u9001\u54cd\u5e94\u6570\u636e response.end(); }); }).listen(8080); // \u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f console.log('Server running at http://127.0.0.1:8080/ '); \u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8be5\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a index.html \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a index.html \u6587\u4ef6 \u00b6 \u83dc\u9e1f\u6559\u7a0b(runoob.com) \u6211\u7684\u7b2c\u4e00\u4e2a\u6807\u9898 \u6211\u7684\u7b2c\u4e00\u4e2a\u6bb5\u843d\u3002 \u6267\u884c server.js \u6587\u4ef6\uff1a $ node server.js Server running at http://127.0.0.1:8080/ \u63a5\u7740\u6211\u4eec\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\u5730\u5740\uff1a http://127.0.0.1:8080/index.html \uff0c\u663e\u793a\u5982\u4e0b\u56fe\u6240\u793a: \u6267\u884c server.js \u7684\u63a7\u5236\u53f0\u8f93\u51fa\u4fe1\u606f\u5982\u4e0b\uff1a Server running at http://127.0.0.1:8080/ Request for /index.html received. # \u5ba2\u6237\u7aef\u8bf7\u6c42\u4fe1\u606f \u4f7f\u7528 Node \u521b\u5efa Web \u5ba2\u6237\u7aef \u00b6 Node \u521b\u5efa Web \u5ba2\u6237\u7aef\u9700\u8981\u5f15\u5165 http \u6a21\u5757\uff0c\u521b\u5efa client.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a \u5b9e\u4f8b \u00b6 var http = require('http'); // \u7528\u4e8e\u8bf7\u6c42\u7684\u9009\u9879 var options = { host: 'localhost', port: '8080', path: '/index.html' }; // \u5904\u7406\u54cd\u5e94\u7684\u56de\u8c03\u51fd\u6570 var callback = function(response){ // \u4e0d\u65ad\u66f4\u65b0\u6570\u636e var body = ''; response.on('data', function(data) { body += data; }); response.on('end', function() { // \u6570\u636e\u63a5\u6536\u5b8c\u6210 console.log(body); }); } // \u5411\u670d\u52a1\u7aef\u53d1\u9001\u8bf7\u6c42 var req = http.request(options, callback); req.end(); \u65b0\u5f00\u4e00\u4e2a\u7ec8\u7aef \uff0c\u6267\u884c client.js \u6587\u4ef6\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a $ node client.js <!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <title>\u83dc\u9e1f\u6559\u7a0b(runoob.com)</title> </head> <body> <h1>\u6211\u7684\u7b2c\u4e00\u4e2a\u6807\u9898</h1> <p>\u6211\u7684\u7b2c\u4e00\u4e2a\u6bb5\u843d\u3002</p> </body> </html> \u6267\u884c server.js \u7684\u63a7\u5236\u53f0\u8f93\u51fa\u4fe1\u606f\u5982\u4e0b\uff1a Server running at http://127.0.0.1:8080/ Request for /index.html received. # \u5ba2\u6237\u7aef\u8bf7\u6c42\u4fe1\u606f","title":"19-Node.js Web \u6a21\u5757"},{"location":"nodejs/19-Node.js%20Web%20%E6%A8%A1%E5%9D%97/#nodejs-web","text":"","title":"Node.js Web \u6a21\u5757"},{"location":"nodejs/19-Node.js%20Web%20%E6%A8%A1%E5%9D%97/#web","text":"Web\u670d\u52a1\u5668\u4e00\u822c\u6307\u7f51\u7ad9\u670d\u52a1\u5668\uff0c\u662f\u6307\u9a7b\u7559\u4e8e\u56e0\u7279\u7f51\u4e0a\u67d0\u79cd\u7c7b\u578b\u8ba1\u7b97\u673a\u7684\u7a0b\u5e8f\uff0cWeb\u670d\u52a1\u5668\u7684\u57fa\u672c\u529f\u80fd\u5c31\u662f\u63d0\u4f9bWeb\u4fe1\u606f\u6d4f\u89c8\u670d\u52a1\u3002\u5b83\u53ea\u9700\u652f\u6301HTTP\u534f\u8bae\u3001HTML\u6587\u6863\u683c\u5f0f\u53caURL\uff0c\u4e0e\u5ba2\u6237\u7aef\u7684\u7f51\u7edc\u6d4f\u89c8\u5668\u914d\u5408\u3002 \u5927\u591a\u6570 web \u670d\u52a1\u5668\u90fd\u652f\u6301\u670d\u52a1\u7aef\u7684\u811a\u672c\u8bed\u8a00\uff08php\u3001python\u3001ruby\uff09\u7b49\uff0c\u5e76\u901a\u8fc7\u811a\u672c\u8bed\u8a00\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u6570\u636e\uff0c\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u3002 \u76ee\u524d\u6700\u4e3b\u6d41\u7684\u4e09\u4e2aWeb\u670d\u52a1\u5668\u662fApache\u3001Nginx\u3001IIS\u3002","title":"\u4ec0\u4e48\u662f Web \u670d\u52a1\u5668\uff1f"},{"location":"nodejs/19-Node.js%20Web%20%E6%A8%A1%E5%9D%97/#web_1","text":"Client - \u5ba2\u6237\u7aef\uff0c\u4e00\u822c\u6307\u6d4f\u89c8\u5668\uff0c\u6d4f\u89c8\u5668\u53ef\u4ee5\u901a\u8fc7 HTTP \u534f\u8bae\u5411\u670d\u52a1\u5668\u8bf7\u6c42\u6570\u636e\u3002 Server - \u670d\u52a1\u7aef\uff0c\u4e00\u822c\u6307 Web \u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u63a5\u6536\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5e76\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u54cd\u5e94\u6570\u636e\u3002 Business - \u4e1a\u52a1\u5c42\uff0c \u901a\u8fc7 Web \u670d\u52a1\u5668\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\uff0c\u5982\u4e0e\u6570\u636e\u5e93\u4ea4\u4e92\uff0c\u903b\u8f91\u8fd0\u7b97\uff0c\u8c03\u7528\u5916\u90e8\u7a0b\u5e8f\u7b49\u3002 Data - \u6570\u636e\u5c42\uff0c\u4e00\u822c\u7531\u6570\u636e\u5e93\u7ec4\u6210\u3002","title":"Web \u5e94\u7528\u67b6\u6784"},{"location":"nodejs/19-Node.js%20Web%20%E6%A8%A1%E5%9D%97/#node-web","text":"Node.js \u63d0\u4f9b\u4e86 http \u6a21\u5757\uff0chttp \u6a21\u5757\u4e3b\u8981\u7528\u4e8e\u642d\u5efa HTTP \u670d\u52a1\u7aef\u548c\u5ba2\u6237\u7aef\uff0c\u4f7f\u7528 HTTP \u670d\u52a1\u5668\u6216\u5ba2\u6237\u7aef\u529f\u80fd\u5fc5\u987b\u8c03\u7528 http \u6a21\u5757\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a var http = require('http'); \u4ee5\u4e0b\u662f\u6f14\u793a\u4e00\u4e2a\u6700\u57fa\u672c\u7684 HTTP \u670d\u52a1\u5668\u67b6\u6784(\u4f7f\u7528 8080 \u7aef\u53e3)\uff0c\u521b\u5efa server.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a","title":"\u4f7f\u7528 Node \u521b\u5efa Web \u670d\u52a1\u5668"},{"location":"nodejs/19-Node.js%20Web%20%E6%A8%A1%E5%9D%97/#_1","text":"var http = require('http'); var fs = require('fs'); var url = require('url'); // \u521b\u5efa\u670d\u52a1\u5668 http.createServer( function (request, response) { // \u89e3\u6790\u8bf7\u6c42\uff0c\u5305\u62ec\u6587\u4ef6\u540d var pathname = url.parse(request.url).pathname; // \u8f93\u51fa\u8bf7\u6c42\u7684\u6587\u4ef6\u540d console.log(\"Request for \" + pathname + \" received.\"); // \u4ece\u6587\u4ef6\u7cfb\u7edf\u4e2d\u8bfb\u53d6\u8bf7\u6c42\u7684\u6587\u4ef6\u5185\u5bb9 fs.readFile(pathname.substr(1), function (err, data) { if (err) { console.log(err); // HTTP \u72b6\u6001\u7801: 404 : NOT FOUND // Content Type: text/html response.writeHead(404, {'Content-Type': 'text/html'}); }else{ // HTTP \u72b6\u6001\u7801: 200 : OK // Content Type: text/html response.writeHead(200, {'Content-Type': 'text/html'}); // \u54cd\u5e94\u6587\u4ef6\u5185\u5bb9 response.write(data.toString()); } // \u53d1\u9001\u54cd\u5e94\u6570\u636e response.end(); }); }).listen(8080); // \u63a7\u5236\u53f0\u4f1a\u8f93\u51fa\u4ee5\u4e0b\u4fe1\u606f console.log('Server running at http://127.0.0.1:8080/ '); \u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8be5\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a index.html \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a","title":"\u5b9e\u4f8b"},{"location":"nodejs/19-Node.js%20Web%20%E6%A8%A1%E5%9D%97/#indexhtml","text":"\u83dc\u9e1f\u6559\u7a0b(runoob.com)","title":"index.html \u6587\u4ef6"},{"location":"nodejs/19-Node.js%20Web%20%E6%A8%A1%E5%9D%97/#node-web_1","text":"Node \u521b\u5efa Web \u5ba2\u6237\u7aef\u9700\u8981\u5f15\u5165 http \u6a21\u5757\uff0c\u521b\u5efa client.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a","title":"\u4f7f\u7528 Node \u521b\u5efa Web \u5ba2\u6237\u7aef"},{"location":"nodejs/19-Node.js%20Web%20%E6%A8%A1%E5%9D%97/#_2","text":"var http = require('http'); // \u7528\u4e8e\u8bf7\u6c42\u7684\u9009\u9879 var options = { host: 'localhost', port: '8080', path: '/index.html' }; // \u5904\u7406\u54cd\u5e94\u7684\u56de\u8c03\u51fd\u6570 var callback = function(response){ // \u4e0d\u65ad\u66f4\u65b0\u6570\u636e var body = ''; response.on('data', function(data) { body += data; }); response.on('end', function() { // \u6570\u636e\u63a5\u6536\u5b8c\u6210 console.log(body); }); } // \u5411\u670d\u52a1\u7aef\u53d1\u9001\u8bf7\u6c42 var req = http.request(options, callback); req.end(); \u65b0\u5f00\u4e00\u4e2a\u7ec8\u7aef \uff0c\u6267\u884c client.js \u6587\u4ef6\uff0c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a $ node client.js <!DOCTYPE html> <html> <head> <meta charset=\"utf-8\"> <title>\u83dc\u9e1f\u6559\u7a0b(runoob.com)</title> </head> <body> <h1>\u6211\u7684\u7b2c\u4e00\u4e2a\u6807\u9898</h1> <p>\u6211\u7684\u7b2c\u4e00\u4e2a\u6bb5\u843d\u3002</p> </body> </html> \u6267\u884c server.js \u7684\u63a7\u5236\u53f0\u8f93\u51fa\u4fe1\u606f\u5982\u4e0b\uff1a Server running at http://127.0.0.1:8080/ Request for /index.html received. # \u5ba2\u6237\u7aef\u8bf7\u6c42\u4fe1\u606f","title":"\u5b9e\u4f8b"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/","text":"Node.js Express \u6846\u67b6 \u00b6 Express \u7b80\u4ecb \u00b6 Express \u662f\u4e00\u4e2a\u7b80\u6d01\u800c\u7075\u6d3b\u7684 node.js Web\u5e94\u7528\u6846\u67b6, \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5f3a\u5927\u7279\u6027\u5e2e\u52a9\u4f60\u521b\u5efa\u5404\u79cd Web \u5e94\u7528\uff0c\u548c\u4e30\u5bcc\u7684 HTTP \u5de5\u5177\u3002 \u4f7f\u7528 Express \u53ef\u4ee5\u5feb\u901f\u5730\u642d\u5efa\u4e00\u4e2a\u5b8c\u6574\u529f\u80fd\u7684\u7f51\u7ad9\u3002 Express \u6846\u67b6\u6838\u5fc3\u7279\u6027\uff1a \u53ef\u4ee5\u8bbe\u7f6e\u4e2d\u95f4\u4ef6\u6765\u54cd\u5e94 HTTP \u8bf7\u6c42\u3002 \u5b9a\u4e49\u4e86\u8def\u7531\u8868\u7528\u4e8e\u6267\u884c\u4e0d\u540c\u7684 HTTP \u8bf7\u6c42\u52a8\u4f5c\u3002 \u53ef\u4ee5\u901a\u8fc7\u5411\u6a21\u677f\u4f20\u9012\u53c2\u6570\u6765\u52a8\u6001\u6e32\u67d3 HTML \u9875\u9762\u3002 \u5b89\u88c5 Express \u00b6 \u5b89\u88c5 Express \u5e76\u5c06\u5176\u4fdd\u5b58\u5230\u4f9d\u8d56\u5217\u8868\u4e2d\uff1a $ cnpm install express --save \u4ee5\u4e0a\u547d\u4ee4\u4f1a\u5c06 Express \u6846\u67b6\u5b89\u88c5\u5728\u5f53\u524d\u76ee\u5f55\u7684 node_modules \u76ee\u5f55\u4e2d\uff0c node_modules \u76ee\u5f55\u4e0b\u4f1a\u81ea\u52a8\u521b\u5efa express \u76ee\u5f55\u3002\u4ee5\u4e0b\u51e0\u4e2a\u91cd\u8981\u7684\u6a21\u5757\u662f\u9700\u8981\u4e0e express \u6846\u67b6\u4e00\u8d77\u5b89\u88c5\u7684\uff1a body-parser - node.js \u4e2d\u95f4\u4ef6\uff0c\u7528\u4e8e\u5904\u7406 JSON, Raw, Text \u548c URL \u7f16\u7801\u7684\u6570\u636e\u3002 cookie-parser - \u8fd9\u5c31\u662f\u4e00\u4e2a\u89e3\u6790Cookie\u7684\u5de5\u5177\u3002\u901a\u8fc7req.cookies\u53ef\u4ee5\u53d6\u5230\u4f20\u8fc7\u6765\u7684cookie\uff0c\u5e76\u628a\u5b83\u4eec\u8f6c\u6210\u5bf9\u8c61\u3002 multer - node.js \u4e2d\u95f4\u4ef6\uff0c\u7528\u4e8e\u5904\u7406 enctype=\"multipart/form-data\"\uff08\u8bbe\u7f6e\u8868\u5355\u7684MIME\u7f16\u7801\uff09\u7684\u8868\u5355\u6570\u636e\u3002 $ cnpm install body-parser --save $ cnpm install cookie-parser --save $ cnpm install multer --save \u5b89\u88c5\u5b8c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b express \u4f7f\u7528\u7684\u7248\u672c\u53f7\uff1a $ cnpm list express /data/www/node \u2514\u2500\u2500 express@4.15.2 -> /Users/tianqixin/www/node/node_modules/.4.15.2@express \u7b2c\u4e00\u4e2a Express \u6846\u67b6\u5b9e\u4f8b \u00b6 \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 Express \u6846\u67b6\u6765\u8f93\u51fa \"Hello World\"\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\u6211\u4eec\u5f15\u5165\u4e86 express \u6a21\u5757\uff0c\u5e76\u5728\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\u540e\uff0c\u54cd\u5e94 \"Hello World\" \u5b57\u7b26\u4e32\u3002 \u521b\u5efa express_demo.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a express_demo.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 //express_demo.js \u6587\u4ef6 var express = require('express'); var app = express(); app.get('/', function (req, res) { res.send('Hello World'); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node express_demo.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081 \uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u8bf7\u6c42\u548c\u54cd\u5e94 \u00b6 Express \u5e94\u7528\u4f7f\u7528\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\uff1a request \u548c response \u5bf9\u8c61\u6765\u5904\u7406\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u6570\u636e\u3002 app.get('/', function (req, res) { // -- }) request \u548c response \u5bf9\u8c61\u7684\u5177\u4f53\u4ecb\u7ecd\uff1a Request \u5bf9\u8c61 - request \u5bf9\u8c61\u8868\u793a HTTP \u8bf7\u6c42\uff0c\u5305\u542b\u4e86\u8bf7\u6c42\u67e5\u8be2\u5b57\u7b26\u4e32\uff0c\u53c2\u6570\uff0c\u5185\u5bb9\uff0cHTTP \u5934\u90e8\u7b49\u5c5e\u6027\u3002\u5e38\u89c1\u5c5e\u6027\u6709\uff1a req.app\uff1a\u5f53callback\u4e3a\u5916\u90e8\u6587\u4ef6\u65f6\uff0c\u7528req.app\u8bbf\u95eeexpress\u7684\u5b9e\u4f8b req.baseUrl\uff1a\u83b7\u53d6\u8def\u7531\u5f53\u524d\u5b89\u88c5\u7684URL\u8def\u5f84 req.body / req.cookies\uff1a\u83b7\u5f97\u300c\u8bf7\u6c42\u4e3b\u4f53\u300d/ Cookies req.fresh / req.stale\uff1a\u5224\u65ad\u8bf7\u6c42\u662f\u5426\u8fd8\u300c\u65b0\u9c9c\u300d req.hostname / req.ip\uff1a\u83b7\u53d6\u4e3b\u673a\u540d\u548cIP\u5730\u5740 req.originalUrl\uff1a\u83b7\u53d6\u539f\u59cb\u8bf7\u6c42URL req.params\uff1a\u83b7\u53d6\u8def\u7531\u7684parameters req.path\uff1a\u83b7\u53d6\u8bf7\u6c42\u8def\u5f84 req.protocol\uff1a\u83b7\u53d6\u534f\u8bae\u7c7b\u578b req.query\uff1a\u83b7\u53d6URL\u7684\u67e5\u8be2\u53c2\u6570\u4e32 req.route\uff1a\u83b7\u53d6\u5f53\u524d\u5339\u914d\u7684\u8def\u7531 req.subdomains\uff1a\u83b7\u53d6\u5b50\u57df\u540d req.accepts()\uff1a\u68c0\u67e5\u53ef\u63a5\u53d7\u7684\u8bf7\u6c42\u7684\u6587\u6863\u7c7b\u578b req.acceptsCharsets / req.acceptsEncodings / req.acceptsLanguages\uff1a\u8fd4\u56de\u6307\u5b9a\u5b57\u7b26\u96c6\u7684\u7b2c\u4e00\u4e2a\u53ef\u63a5\u53d7\u5b57\u7b26\u7f16\u7801 req.get()\uff1a\u83b7\u53d6\u6307\u5b9a\u7684HTTP\u8bf7\u6c42\u5934 req.is()\uff1a\u5224\u65ad\u8bf7\u6c42\u5934Content-Type\u7684MIME\u7c7b\u578b Response \u5bf9\u8c61 - response \u5bf9\u8c61\u8868\u793a HTTP \u54cd\u5e94\uff0c\u5373\u5728\u63a5\u6536\u5230\u8bf7\u6c42\u65f6\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u7684 HTTP \u54cd\u5e94\u6570\u636e\u3002\u5e38\u89c1\u5c5e\u6027\u6709\uff1a res.app\uff1a\u540creq.app\u4e00\u6837 res.append()\uff1a\u8ffd\u52a0\u6307\u5b9aHTTP\u5934 res.set()\u5728res.append()\u540e\u5c06\u91cd\u7f6e\u4e4b\u524d\u8bbe\u7f6e\u7684\u5934 res.cookie(name\uff0cvalue [\uff0coption])\uff1a\u8bbe\u7f6eCookie opition: domain / expires / httpOnly / maxAge / path / secure / signed res.clearCookie()\uff1a\u6e05\u9664Cookie res.download()\uff1a\u4f20\u9001\u6307\u5b9a\u8def\u5f84\u7684\u6587\u4ef6 res.get()\uff1a\u8fd4\u56de\u6307\u5b9a\u7684HTTP\u5934 res.json()\uff1a\u4f20\u9001JSON\u54cd\u5e94 res.jsonp()\uff1a\u4f20\u9001JSONP\u54cd\u5e94 res.location()\uff1a\u53ea\u8bbe\u7f6e\u54cd\u5e94\u7684Location HTTP\u5934\uff0c\u4e0d\u8bbe\u7f6e\u72b6\u6001\u7801\u6216\u8005close response res.redirect()\uff1a\u8bbe\u7f6e\u54cd\u5e94\u7684Location HTTP\u5934\uff0c\u5e76\u4e14\u8bbe\u7f6e\u72b6\u6001\u7801302 res.render(view,[locals],callback)\uff1a\u6e32\u67d3\u4e00\u4e2aview\uff0c\u540c\u65f6\u5411callback\u4f20\u9012\u6e32\u67d3\u540e\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5728\u6e32\u67d3\u8fc7\u7a0b\u4e2d\u6709\u9519\u8bef\u53d1\u751fnext(err)\u5c06\u4f1a\u88ab\u81ea\u52a8\u8c03\u7528\u3002callback\u5c06\u4f1a\u88ab\u4f20\u5165\u4e00\u4e2a\u53ef\u80fd\u53d1\u751f\u7684\u9519\u8bef\u4ee5\u53ca\u6e32\u67d3\u540e\u7684\u9875\u9762\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u81ea\u52a8\u8f93\u51fa\u4e86\u3002 res.send()\uff1a\u4f20\u9001HTTP\u54cd\u5e94 res.sendFile(path [\uff0coptions] [\uff0cfn])\uff1a\u4f20\u9001\u6307\u5b9a\u8def\u5f84\u7684\u6587\u4ef6 -\u4f1a\u81ea\u52a8\u6839\u636e\u6587\u4ef6extension\u8bbe\u5b9aContent-Type res.set()\uff1a\u8bbe\u7f6eHTTP\u5934\uff0c\u4f20\u5165object\u53ef\u4ee5\u4e00\u6b21\u8bbe\u7f6e\u591a\u4e2a\u5934 res.status()\uff1a\u8bbe\u7f6eHTTP\u72b6\u6001\u7801 res.type()\uff1a\u8bbe\u7f6eContent-Type\u7684MIME\u7c7b\u578b \u8def\u7531 \u00b6 \u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86 HTTP \u8bf7\u6c42\u7684\u57fa\u672c\u5e94\u7528\uff0c\u800c\u8def\u7531\u51b3\u5b9a\u4e86\u7531\u8c01(\u6307\u5b9a\u811a\u672c)\u53bb\u54cd\u5e94\u5ba2\u6237\u7aef\u8bf7\u6c42\u3002 \u5728HTTP\u8bf7\u6c42\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8def\u7531\u63d0\u53d6\u51fa\u8bf7\u6c42\u7684URL\u4ee5\u53caGET/POST\u53c2\u6570\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6269\u5c55 Hello World\uff0c\u6dfb\u52a0\u4e00\u4e9b\u529f\u80fd\u6765\u5904\u7406\u66f4\u591a\u7c7b\u578b\u7684 HTTP \u8bf7\u6c42\u3002 \u521b\u5efa express_demo2.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a express_demo2.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 var express = require('express'); var app = express(); // \u4e3b\u9875\u8f93\u51fa \"Hello World\" app.get('/', function (req, res) { console.log(\"\u4e3b\u9875 GET \u8bf7\u6c42\"); res.send('Hello GET'); }) // POST \u8bf7\u6c42 app.post('/', function (req, res) { console.log(\"\u4e3b\u9875 POST \u8bf7\u6c42\"); res.send('Hello POST'); }) // /del_user \u9875\u9762\u54cd\u5e94 app.get('/del_user', function (req, res) { console.log(\"/del_user \u54cd\u5e94 DELETE \u8bf7\u6c42\"); res.send('\u5220\u9664\u9875\u9762'); }) // /list_user \u9875\u9762 GET \u8bf7\u6c42 app.get('/list_user', function (req, res) { console.log(\"/list_user GET \u8bf7\u6c42\"); res.send('\u7528\u6237\u5217\u8868\u9875\u9762'); }) // \u5bf9\u9875\u9762 abcd, abxcd, ab123cd, \u7b49\u54cd\u5e94 GET \u8bf7\u6c42 app.get('/ab*cd', function(req, res) { console.log(\"/ab*cd GET \u8bf7\u6c42\"); res.send('\u6b63\u5219\u5339\u914d'); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node express_demo2.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u8bbf\u95ee http://127.0.0.1:8081 \u4e0d\u540c\u7684\u5730\u5740\uff0c\u67e5\u770b\u6548\u679c\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/list_user \uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/abcd \uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/abcdefg \uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u9759\u6001\u6587\u4ef6 \u00b6 Express \u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u4e2d\u95f4\u4ef6 express.static \u6765\u8bbe\u7f6e\u9759\u6001\u6587\u4ef6\u5982\uff1a\u56fe\u7247\uff0c CSS, JavaScript \u7b49\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 express.static \u4e2d\u95f4\u4ef6\u6765\u8bbe\u7f6e\u9759\u6001\u6587\u4ef6\u8def\u5f84\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u5c06\u56fe\u7247\uff0c CSS, JavaScript \u6587\u4ef6\u653e\u5728 public \u76ee\u5f55\u4e0b\uff0c\u4f60\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a app.use('/public', express.static('public')); \u6211\u4eec\u53ef\u4ee5\u5230 public/images \u76ee\u5f55\u4e0b\u653e\u4e9b\u56fe\u7247,\u5982\u4e0b\u6240\u793a\uff1a node_modules server.js public/ public/images public/images/logo.png \u8ba9\u6211\u4eec\u518d\u4fee\u6539\u4e0b \"Hello World\" \u5e94\u7528\u6dfb\u52a0\u5904\u7406\u9759\u6001\u6587\u4ef6\u7684\u529f\u80fd\u3002 \u521b\u5efa express_demo3.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a express_demo3.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 var express = require('express'); var app = express(); app.use('/public', express.static('public')); app.get('/', function (req, res) { res.send('Hello World'); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node express_demo3.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/public/images/logo.png \uff08\u672c\u5b9e\u4f8b\u91c7\u7528\u4e86\u83dc\u9e1f\u6559\u7a0b\u7684 logo\uff09\uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a GET \u65b9\u6cd5 \u00b6 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86\u5728\u8868\u5355\u4e2d\u901a\u8fc7 GET \u65b9\u6cd5\u63d0\u4ea4\u4e24\u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 server.js \u6587\u4ef6\u5185\u7684 process_get \u8def\u7531\u5668\u6765\u5904\u7406\u8f93\u5165\uff1a index.html \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 First Name: Last Name: server.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 var express = require('express'); var app = express(); app.use('/public', express.static('public')); app.get('/index.html', function (req, res) { res.sendFile( __dirname + \"/\" + \"index.html\" ); }) app.get('/process_get', function (req, res) { // \u8f93\u51fa JSON \u683c\u5f0f var response = { \"first_name\":req.query.first_name, \"last_name\":req.query.last_name }; console.log(response); res.end(JSON.stringify(response)); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8081/index.html \uff0c\u5982\u56fe\u6240\u793a\uff1a \u73b0\u5728\u4f60\u53ef\u4ee5\u5411\u8868\u5355\u8f93\u5165\u6570\u636e\uff0c\u5e76\u63d0\u4ea4\uff0c\u5982\u4e0b\u6f14\u793a\uff1a POST \u65b9\u6cd5 \u00b6 \u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86\u5728\u8868\u5355\u4e2d\u901a\u8fc7 POST \u65b9\u6cd5\u63d0\u4ea4\u4e24\u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 server.js \u6587\u4ef6\u5185\u7684 process_post \u8def\u7531\u5668\u6765\u5904\u7406\u8f93\u5165\uff1a index.html \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 First Name: Last Name: server.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 var express = require('express'); var app = express(); var bodyParser = require('body-parser'); // \u521b\u5efa application/x-www-form-urlencoded \u7f16\u7801\u89e3\u6790 var urlencodedParser = bodyParser.urlencoded({ extended: false }) app.use('/public', express.static('public')); app.get('/index.html', function (req, res) { res.sendFile( __dirname + \"/\" + \"index.html\" ); }) app.post('/process_post', urlencodedParser, function (req, res) { // \u8f93\u51fa JSON \u683c\u5f0f var response = { \"first_name\":req.body.first_name, \"last_name\":req.body.last_name }; console.log(response); res.end(JSON.stringify(response)); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8081/index.html \uff0c\u5982\u56fe\u6240\u793a\uff1a \u73b0\u5728\u4f60\u53ef\u4ee5\u5411\u8868\u5355\u8f93\u5165\u6570\u636e\uff0c\u5e76\u63d0\u4ea4\uff0c\u5982\u4e0b\u6f14\u793a\uff1a \u6587\u4ef6\u4e0a\u4f20 \u00b6 \u4ee5\u4e0b\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u4e0a\u4f20\u6587\u4ef6\u7684\u8868\u5355\uff0c\u4f7f\u7528 POST \u65b9\u6cd5\uff0c\u8868\u5355 enctype \u5c5e\u6027\u8bbe\u7f6e\u4e3a multipart/form-data\u3002 index.html \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 \u6587\u4ef6\u4e0a\u4f20\u8868\u5355 \u6587\u4ef6\u4e0a\u4f20\uff1a \u9009\u62e9\u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20: server.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 var express = require('express'); var app = express(); var fs = require(\"fs\"); var bodyParser = require('body-parser'); var multer = require('multer'); app.use('/public', express.static('public')); app.use(bodyParser.urlencoded({ extended: false })); app.use(multer({ dest: '/tmp/'}).array('image')); app.get('/index.html', function (req, res) { res.sendFile( __dirname + \"/\" + \"index.html\" ); }) app.post('/file_upload', function (req, res) { console.log(req.files[0]); // \u4e0a\u4f20\u7684\u6587\u4ef6\u4fe1\u606f var des_file = __dirname + \"/\" + req.files[0].originalname; fs.readFile( req.files[0].path, function (err, data) { fs.writeFile(des_file, data, function (err) { if( err ){ console.log( err ); }else{ response = { message:'File uploaded successfully', filename:req.files[0].originalname }; } console.log( response ); res.end( JSON.stringify( response ) ); }); }); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8081/index.html \uff0c\u5982\u56fe\u6240\u793a\uff1a \u73b0\u5728\u4f60\u53ef\u4ee5\u5411\u8868\u5355\u8f93\u5165\u6570\u636e\uff0c\u5e76\u63d0\u4ea4\uff0c\u5982\u4e0b\u6f14\u793a\uff1a Cookie \u7ba1\u7406 \u00b6 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e2d\u95f4\u4ef6\u5411 Node.js \u670d\u52a1\u5668\u53d1\u9001 cookie \u4fe1\u606f\uff0c\u4ee5\u4e0b\u4ee3\u7801\u8f93\u51fa\u4e86\u5ba2\u6237\u7aef\u53d1\u9001\u7684 cookie \u4fe1\u606f\uff1a express_cookie.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 // express_cookie.js \u6587\u4ef6 var express = require('express') var cookieParser = require('cookie-parser') var util = require('util'); var app = express() app.use(cookieParser()) app.get('/', function(req, res) { console.log(\"Cookies: \" + util.inspect(req.cookies)); }) app.listen(8081) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node express_cookie.js \u73b0\u5728\u4f60\u53ef\u4ee5\u8bbf\u95ee http://127.0.0.1:8081 \u5e76\u67e5\u770b\u7ec8\u7aef\u4fe1\u606f\u7684\u8f93\u51fa\uff0c\u5982\u4e0b\u6f14\u793a\uff1a \u76f8\u5173\u8d44\u6599 \u00b6 Express\u5b98\u7f51\uff1a http://expressjs.com/ Express4.x API \u4e2d\u6587\u7248\uff1a Express4.x API Chinese Express4.x API\uff1a http://expressjs.com/zh-cn/4x/api.html","title":"20-Node.js Express \u6846\u67b6"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#nodejs-express","text":"","title":"Node.js Express \u6846\u67b6"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#express","text":"Express \u662f\u4e00\u4e2a\u7b80\u6d01\u800c\u7075\u6d3b\u7684 node.js Web\u5e94\u7528\u6846\u67b6, \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u5f3a\u5927\u7279\u6027\u5e2e\u52a9\u4f60\u521b\u5efa\u5404\u79cd Web \u5e94\u7528\uff0c\u548c\u4e30\u5bcc\u7684 HTTP \u5de5\u5177\u3002 \u4f7f\u7528 Express \u53ef\u4ee5\u5feb\u901f\u5730\u642d\u5efa\u4e00\u4e2a\u5b8c\u6574\u529f\u80fd\u7684\u7f51\u7ad9\u3002 Express \u6846\u67b6\u6838\u5fc3\u7279\u6027\uff1a \u53ef\u4ee5\u8bbe\u7f6e\u4e2d\u95f4\u4ef6\u6765\u54cd\u5e94 HTTP \u8bf7\u6c42\u3002 \u5b9a\u4e49\u4e86\u8def\u7531\u8868\u7528\u4e8e\u6267\u884c\u4e0d\u540c\u7684 HTTP \u8bf7\u6c42\u52a8\u4f5c\u3002 \u53ef\u4ee5\u901a\u8fc7\u5411\u6a21\u677f\u4f20\u9012\u53c2\u6570\u6765\u52a8\u6001\u6e32\u67d3 HTML \u9875\u9762\u3002","title":"Express \u7b80\u4ecb"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#express_1","text":"\u5b89\u88c5 Express \u5e76\u5c06\u5176\u4fdd\u5b58\u5230\u4f9d\u8d56\u5217\u8868\u4e2d\uff1a $ cnpm install express --save \u4ee5\u4e0a\u547d\u4ee4\u4f1a\u5c06 Express \u6846\u67b6\u5b89\u88c5\u5728\u5f53\u524d\u76ee\u5f55\u7684 node_modules \u76ee\u5f55\u4e2d\uff0c node_modules \u76ee\u5f55\u4e0b\u4f1a\u81ea\u52a8\u521b\u5efa express \u76ee\u5f55\u3002\u4ee5\u4e0b\u51e0\u4e2a\u91cd\u8981\u7684\u6a21\u5757\u662f\u9700\u8981\u4e0e express \u6846\u67b6\u4e00\u8d77\u5b89\u88c5\u7684\uff1a body-parser - node.js \u4e2d\u95f4\u4ef6\uff0c\u7528\u4e8e\u5904\u7406 JSON, Raw, Text \u548c URL \u7f16\u7801\u7684\u6570\u636e\u3002 cookie-parser - \u8fd9\u5c31\u662f\u4e00\u4e2a\u89e3\u6790Cookie\u7684\u5de5\u5177\u3002\u901a\u8fc7req.cookies\u53ef\u4ee5\u53d6\u5230\u4f20\u8fc7\u6765\u7684cookie\uff0c\u5e76\u628a\u5b83\u4eec\u8f6c\u6210\u5bf9\u8c61\u3002 multer - node.js \u4e2d\u95f4\u4ef6\uff0c\u7528\u4e8e\u5904\u7406 enctype=\"multipart/form-data\"\uff08\u8bbe\u7f6e\u8868\u5355\u7684MIME\u7f16\u7801\uff09\u7684\u8868\u5355\u6570\u636e\u3002 $ cnpm install body-parser --save $ cnpm install cookie-parser --save $ cnpm install multer --save \u5b89\u88c5\u5b8c\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u67e5\u770b\u4e0b express \u4f7f\u7528\u7684\u7248\u672c\u53f7\uff1a $ cnpm list express /data/www/node \u2514\u2500\u2500 express@4.15.2 -> /Users/tianqixin/www/node/node_modules/.4.15.2@express","title":"\u5b89\u88c5 Express"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#express_2","text":"\u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 Express \u6846\u67b6\u6765\u8f93\u51fa \"Hello World\"\u3002 \u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\u6211\u4eec\u5f15\u5165\u4e86 express \u6a21\u5757\uff0c\u5e76\u5728\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\u540e\uff0c\u54cd\u5e94 \"Hello World\" \u5b57\u7b26\u4e32\u3002 \u521b\u5efa express_demo.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a","title":"\u7b2c\u4e00\u4e2a Express \u6846\u67b6\u5b9e\u4f8b"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#express_demojs","text":"//express_demo.js \u6587\u4ef6 var express = require('express'); var app = express(); app.get('/', function (req, res) { res.send('Hello World'); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node express_demo.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081 \uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"express_demo.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#_1","text":"Express \u5e94\u7528\u4f7f\u7528\u56de\u8c03\u51fd\u6570\u7684\u53c2\u6570\uff1a request \u548c response \u5bf9\u8c61\u6765\u5904\u7406\u8bf7\u6c42\u548c\u54cd\u5e94\u7684\u6570\u636e\u3002 app.get('/', function (req, res) { // -- }) request \u548c response \u5bf9\u8c61\u7684\u5177\u4f53\u4ecb\u7ecd\uff1a Request \u5bf9\u8c61 - request \u5bf9\u8c61\u8868\u793a HTTP \u8bf7\u6c42\uff0c\u5305\u542b\u4e86\u8bf7\u6c42\u67e5\u8be2\u5b57\u7b26\u4e32\uff0c\u53c2\u6570\uff0c\u5185\u5bb9\uff0cHTTP \u5934\u90e8\u7b49\u5c5e\u6027\u3002\u5e38\u89c1\u5c5e\u6027\u6709\uff1a req.app\uff1a\u5f53callback\u4e3a\u5916\u90e8\u6587\u4ef6\u65f6\uff0c\u7528req.app\u8bbf\u95eeexpress\u7684\u5b9e\u4f8b req.baseUrl\uff1a\u83b7\u53d6\u8def\u7531\u5f53\u524d\u5b89\u88c5\u7684URL\u8def\u5f84 req.body / req.cookies\uff1a\u83b7\u5f97\u300c\u8bf7\u6c42\u4e3b\u4f53\u300d/ Cookies req.fresh / req.stale\uff1a\u5224\u65ad\u8bf7\u6c42\u662f\u5426\u8fd8\u300c\u65b0\u9c9c\u300d req.hostname / req.ip\uff1a\u83b7\u53d6\u4e3b\u673a\u540d\u548cIP\u5730\u5740 req.originalUrl\uff1a\u83b7\u53d6\u539f\u59cb\u8bf7\u6c42URL req.params\uff1a\u83b7\u53d6\u8def\u7531\u7684parameters req.path\uff1a\u83b7\u53d6\u8bf7\u6c42\u8def\u5f84 req.protocol\uff1a\u83b7\u53d6\u534f\u8bae\u7c7b\u578b req.query\uff1a\u83b7\u53d6URL\u7684\u67e5\u8be2\u53c2\u6570\u4e32 req.route\uff1a\u83b7\u53d6\u5f53\u524d\u5339\u914d\u7684\u8def\u7531 req.subdomains\uff1a\u83b7\u53d6\u5b50\u57df\u540d req.accepts()\uff1a\u68c0\u67e5\u53ef\u63a5\u53d7\u7684\u8bf7\u6c42\u7684\u6587\u6863\u7c7b\u578b req.acceptsCharsets / req.acceptsEncodings / req.acceptsLanguages\uff1a\u8fd4\u56de\u6307\u5b9a\u5b57\u7b26\u96c6\u7684\u7b2c\u4e00\u4e2a\u53ef\u63a5\u53d7\u5b57\u7b26\u7f16\u7801 req.get()\uff1a\u83b7\u53d6\u6307\u5b9a\u7684HTTP\u8bf7\u6c42\u5934 req.is()\uff1a\u5224\u65ad\u8bf7\u6c42\u5934Content-Type\u7684MIME\u7c7b\u578b Response \u5bf9\u8c61 - response \u5bf9\u8c61\u8868\u793a HTTP \u54cd\u5e94\uff0c\u5373\u5728\u63a5\u6536\u5230\u8bf7\u6c42\u65f6\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u7684 HTTP \u54cd\u5e94\u6570\u636e\u3002\u5e38\u89c1\u5c5e\u6027\u6709\uff1a res.app\uff1a\u540creq.app\u4e00\u6837 res.append()\uff1a\u8ffd\u52a0\u6307\u5b9aHTTP\u5934 res.set()\u5728res.append()\u540e\u5c06\u91cd\u7f6e\u4e4b\u524d\u8bbe\u7f6e\u7684\u5934 res.cookie(name\uff0cvalue [\uff0coption])\uff1a\u8bbe\u7f6eCookie opition: domain / expires / httpOnly / maxAge / path / secure / signed res.clearCookie()\uff1a\u6e05\u9664Cookie res.download()\uff1a\u4f20\u9001\u6307\u5b9a\u8def\u5f84\u7684\u6587\u4ef6 res.get()\uff1a\u8fd4\u56de\u6307\u5b9a\u7684HTTP\u5934 res.json()\uff1a\u4f20\u9001JSON\u54cd\u5e94 res.jsonp()\uff1a\u4f20\u9001JSONP\u54cd\u5e94 res.location()\uff1a\u53ea\u8bbe\u7f6e\u54cd\u5e94\u7684Location HTTP\u5934\uff0c\u4e0d\u8bbe\u7f6e\u72b6\u6001\u7801\u6216\u8005close response res.redirect()\uff1a\u8bbe\u7f6e\u54cd\u5e94\u7684Location HTTP\u5934\uff0c\u5e76\u4e14\u8bbe\u7f6e\u72b6\u6001\u7801302 res.render(view,[locals],callback)\uff1a\u6e32\u67d3\u4e00\u4e2aview\uff0c\u540c\u65f6\u5411callback\u4f20\u9012\u6e32\u67d3\u540e\u7684\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u5728\u6e32\u67d3\u8fc7\u7a0b\u4e2d\u6709\u9519\u8bef\u53d1\u751fnext(err)\u5c06\u4f1a\u88ab\u81ea\u52a8\u8c03\u7528\u3002callback\u5c06\u4f1a\u88ab\u4f20\u5165\u4e00\u4e2a\u53ef\u80fd\u53d1\u751f\u7684\u9519\u8bef\u4ee5\u53ca\u6e32\u67d3\u540e\u7684\u9875\u9762\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u81ea\u52a8\u8f93\u51fa\u4e86\u3002 res.send()\uff1a\u4f20\u9001HTTP\u54cd\u5e94 res.sendFile(path [\uff0coptions] [\uff0cfn])\uff1a\u4f20\u9001\u6307\u5b9a\u8def\u5f84\u7684\u6587\u4ef6 -\u4f1a\u81ea\u52a8\u6839\u636e\u6587\u4ef6extension\u8bbe\u5b9aContent-Type res.set()\uff1a\u8bbe\u7f6eHTTP\u5934\uff0c\u4f20\u5165object\u53ef\u4ee5\u4e00\u6b21\u8bbe\u7f6e\u591a\u4e2a\u5934 res.status()\uff1a\u8bbe\u7f6eHTTP\u72b6\u6001\u7801 res.type()\uff1a\u8bbe\u7f6eContent-Type\u7684MIME\u7c7b\u578b","title":"\u8bf7\u6c42\u548c\u54cd\u5e94"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#_2","text":"\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u4e86 HTTP \u8bf7\u6c42\u7684\u57fa\u672c\u5e94\u7528\uff0c\u800c\u8def\u7531\u51b3\u5b9a\u4e86\u7531\u8c01(\u6307\u5b9a\u811a\u672c)\u53bb\u54cd\u5e94\u5ba2\u6237\u7aef\u8bf7\u6c42\u3002 \u5728HTTP\u8bf7\u6c42\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8def\u7531\u63d0\u53d6\u51fa\u8bf7\u6c42\u7684URL\u4ee5\u53caGET/POST\u53c2\u6570\u3002 \u63a5\u4e0b\u6765\u6211\u4eec\u6269\u5c55 Hello World\uff0c\u6dfb\u52a0\u4e00\u4e9b\u529f\u80fd\u6765\u5904\u7406\u66f4\u591a\u7c7b\u578b\u7684 HTTP \u8bf7\u6c42\u3002 \u521b\u5efa express_demo2.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a","title":"\u8def\u7531"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#express_demo2js","text":"var express = require('express'); var app = express(); // \u4e3b\u9875\u8f93\u51fa \"Hello World\" app.get('/', function (req, res) { console.log(\"\u4e3b\u9875 GET \u8bf7\u6c42\"); res.send('Hello GET'); }) // POST \u8bf7\u6c42 app.post('/', function (req, res) { console.log(\"\u4e3b\u9875 POST \u8bf7\u6c42\"); res.send('Hello POST'); }) // /del_user \u9875\u9762\u54cd\u5e94 app.get('/del_user', function (req, res) { console.log(\"/del_user \u54cd\u5e94 DELETE \u8bf7\u6c42\"); res.send('\u5220\u9664\u9875\u9762'); }) // /list_user \u9875\u9762 GET \u8bf7\u6c42 app.get('/list_user', function (req, res) { console.log(\"/list_user GET \u8bf7\u6c42\"); res.send('\u7528\u6237\u5217\u8868\u9875\u9762'); }) // \u5bf9\u9875\u9762 abcd, abxcd, ab123cd, \u7b49\u54cd\u5e94 GET \u8bf7\u6c42 app.get('/ab*cd', function(req, res) { console.log(\"/ab*cd GET \u8bf7\u6c42\"); res.send('\u6b63\u5219\u5339\u914d'); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node express_demo2.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u63a5\u4e0b\u6765\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u8bbf\u95ee http://127.0.0.1:8081 \u4e0d\u540c\u7684\u5730\u5740\uff0c\u67e5\u770b\u6548\u679c\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/list_user \uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/abcd \uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/abcdefg \uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"express_demo2.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#_3","text":"Express \u63d0\u4f9b\u4e86\u5185\u7f6e\u7684\u4e2d\u95f4\u4ef6 express.static \u6765\u8bbe\u7f6e\u9759\u6001\u6587\u4ef6\u5982\uff1a\u56fe\u7247\uff0c CSS, JavaScript \u7b49\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 express.static \u4e2d\u95f4\u4ef6\u6765\u8bbe\u7f6e\u9759\u6001\u6587\u4ef6\u8def\u5f84\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u5c06\u56fe\u7247\uff0c CSS, JavaScript \u6587\u4ef6\u653e\u5728 public \u76ee\u5f55\u4e0b\uff0c\u4f60\u53ef\u4ee5\u8fd9\u4e48\u5199\uff1a app.use('/public', express.static('public')); \u6211\u4eec\u53ef\u4ee5\u5230 public/images \u76ee\u5f55\u4e0b\u653e\u4e9b\u56fe\u7247,\u5982\u4e0b\u6240\u793a\uff1a node_modules server.js public/ public/images public/images/logo.png \u8ba9\u6211\u4eec\u518d\u4fee\u6539\u4e0b \"Hello World\" \u5e94\u7528\u6dfb\u52a0\u5904\u7406\u9759\u6001\u6587\u4ef6\u7684\u529f\u80fd\u3002 \u521b\u5efa express_demo3.js \u6587\u4ef6\uff0c\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a","title":"\u9759\u6001\u6587\u4ef6"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#express_demo3js","text":"var express = require('express'); var app = express(); app.use('/public', express.static('public')); app.get('/', function (req, res) { res.send('Hello World'); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node express_demo3.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/public/images/logo.png \uff08\u672c\u5b9e\u4f8b\u91c7\u7528\u4e86\u83dc\u9e1f\u6559\u7a0b\u7684 logo\uff09\uff0c\u7ed3\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"express_demo3.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#get","text":"\u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86\u5728\u8868\u5355\u4e2d\u901a\u8fc7 GET \u65b9\u6cd5\u63d0\u4ea4\u4e24\u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 server.js \u6587\u4ef6\u5185\u7684 process_get \u8def\u7531\u5668\u6765\u5904\u7406\u8f93\u5165\uff1a","title":"GET \u65b9\u6cd5"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#indexhtml","text":"First Name: Last Name:","title":"index.html \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#serverjs","text":"var express = require('express'); var app = express(); app.use('/public', express.static('public')); app.get('/index.html', function (req, res) { res.sendFile( __dirname + \"/\" + \"index.html\" ); }) app.get('/process_get', function (req, res) { // \u8f93\u51fa JSON \u683c\u5f0f var response = { \"first_name\":req.query.first_name, \"last_name\":req.query.last_name }; console.log(response); res.end(JSON.stringify(response)); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8081/index.html \uff0c\u5982\u56fe\u6240\u793a\uff1a \u73b0\u5728\u4f60\u53ef\u4ee5\u5411\u8868\u5355\u8f93\u5165\u6570\u636e\uff0c\u5e76\u63d0\u4ea4\uff0c\u5982\u4e0b\u6f14\u793a\uff1a","title":"server.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#post","text":"\u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86\u5728\u8868\u5355\u4e2d\u901a\u8fc7 POST \u65b9\u6cd5\u63d0\u4ea4\u4e24\u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 server.js \u6587\u4ef6\u5185\u7684 process_post \u8def\u7531\u5668\u6765\u5904\u7406\u8f93\u5165\uff1a","title":"POST \u65b9\u6cd5"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#indexhtml_1","text":"First Name: Last Name:","title":"index.html \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#serverjs_1","text":"var express = require('express'); var app = express(); var bodyParser = require('body-parser'); // \u521b\u5efa application/x-www-form-urlencoded \u7f16\u7801\u89e3\u6790 var urlencodedParser = bodyParser.urlencoded({ extended: false }) app.use('/public', express.static('public')); app.get('/index.html', function (req, res) { res.sendFile( __dirname + \"/\" + \"index.html\" ); }) app.post('/process_post', urlencodedParser, function (req, res) { // \u8f93\u51fa JSON \u683c\u5f0f var response = { \"first_name\":req.body.first_name, \"last_name\":req.body.last_name }; console.log(response); res.end(JSON.stringify(response)); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8081/index.html \uff0c\u5982\u56fe\u6240\u793a\uff1a \u73b0\u5728\u4f60\u53ef\u4ee5\u5411\u8868\u5355\u8f93\u5165\u6570\u636e\uff0c\u5e76\u63d0\u4ea4\uff0c\u5982\u4e0b\u6f14\u793a\uff1a","title":"server.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#_4","text":"\u4ee5\u4e0b\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u4e0a\u4f20\u6587\u4ef6\u7684\u8868\u5355\uff0c\u4f7f\u7528 POST \u65b9\u6cd5\uff0c\u8868\u5355 enctype \u5c5e\u6027\u8bbe\u7f6e\u4e3a multipart/form-data\u3002","title":"\u6587\u4ef6\u4e0a\u4f20"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#indexhtml_2","text":"\u6587\u4ef6\u4e0a\u4f20\u8868\u5355","title":"index.html \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#serverjs_2","text":"var express = require('express'); var app = express(); var fs = require(\"fs\"); var bodyParser = require('body-parser'); var multer = require('multer'); app.use('/public', express.static('public')); app.use(bodyParser.urlencoded({ extended: false })); app.use(multer({ dest: '/tmp/'}).array('image')); app.get('/index.html', function (req, res) { res.sendFile( __dirname + \"/\" + \"index.html\" ); }) app.post('/file_upload', function (req, res) { console.log(req.files[0]); // \u4e0a\u4f20\u7684\u6587\u4ef6\u4fe1\u606f var des_file = __dirname + \"/\" + req.files[0].originalname; fs.readFile( req.files[0].path, function (err, data) { fs.writeFile(des_file, data, function (err) { if( err ){ console.log( err ); }else{ response = { message:'File uploaded successfully', filename:req.files[0].originalname }; } console.log( response ); res.end( JSON.stringify( response ) ); }); }); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:8081/index.html \uff0c\u5982\u56fe\u6240\u793a\uff1a \u73b0\u5728\u4f60\u53ef\u4ee5\u5411\u8868\u5355\u8f93\u5165\u6570\u636e\uff0c\u5e76\u63d0\u4ea4\uff0c\u5982\u4e0b\u6f14\u793a\uff1a","title":"server.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#cookie","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e2d\u95f4\u4ef6\u5411 Node.js \u670d\u52a1\u5668\u53d1\u9001 cookie \u4fe1\u606f\uff0c\u4ee5\u4e0b\u4ee3\u7801\u8f93\u51fa\u4e86\u5ba2\u6237\u7aef\u53d1\u9001\u7684 cookie \u4fe1\u606f\uff1a","title":"Cookie \u7ba1\u7406"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#express_cookiejs","text":"// express_cookie.js \u6587\u4ef6 var express = require('express') var cookieParser = require('cookie-parser') var util = require('util'); var app = express() app.use(cookieParser()) app.get('/', function(req, res) { console.log(\"Cookies: \" + util.inspect(req.cookies)); }) app.listen(8081) \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff1a $ node express_cookie.js \u73b0\u5728\u4f60\u53ef\u4ee5\u8bbf\u95ee http://127.0.0.1:8081 \u5e76\u67e5\u770b\u7ec8\u7aef\u4fe1\u606f\u7684\u8f93\u51fa\uff0c\u5982\u4e0b\u6f14\u793a\uff1a","title":"express_cookie.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/20-Node.js%20Express%20%E6%A1%86%E6%9E%B6/#_5","text":"Express\u5b98\u7f51\uff1a http://expressjs.com/ Express4.x API \u4e2d\u6587\u7248\uff1a Express4.x API Chinese Express4.x API\uff1a http://expressjs.com/zh-cn/4x/api.html","title":"\u76f8\u5173\u8d44\u6599"},{"location":"nodejs/21-Node.js%20RESTful%20API/","text":"Node.js RESTful API \u00b6 \u4ec0\u4e48\u662f REST\uff1f \u00b6 REST\u5373\u8868\u8ff0\u6027\u72b6\u6001\u4f20\u9012\uff08\u82f1\u6587\uff1aRepresentational State Transfer\uff0c\u7b80\u79f0REST\uff09\u662fRoy Fielding\u535a\u58eb\u57282000\u5e74\u4ed6\u7684\u535a\u58eb\u8bba\u6587\u4e2d\u63d0\u51fa\u6765\u7684\u4e00\u79cd\u8f6f\u4ef6\u67b6\u6784\u98ce\u683c\u3002 \u8868\u8ff0\u6027\u72b6\u6001\u8f6c\u79fb\u662f\u4e00\u7ec4\u67b6\u6784\u7ea6\u675f\u6761\u4ef6\u548c\u539f\u5219\u3002\u6ee1\u8db3\u8fd9\u4e9b\u7ea6\u675f\u6761\u4ef6\u548c\u539f\u5219\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u8bbe\u8ba1\u5c31\u662fRESTful\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cREST\u662f\u8bbe\u8ba1\u98ce\u683c\u800c\u4e0d\u662f\u6807\u51c6\u3002REST\u901a\u5e38\u57fa\u4e8e\u4f7f\u7528HTTP\uff0cURI\uff0c\u548cXML\uff08\u6807\u51c6\u901a\u7528\u6807\u8bb0\u8bed\u8a00\u4e0b\u7684\u4e00\u4e2a\u5b50\u96c6\uff09\u4ee5\u53caHTML\uff08\u6807\u51c6\u901a\u7528\u6807\u8bb0\u8bed\u8a00\u4e0b\u7684\u4e00\u4e2a\u5e94\u7528\uff09\u8fd9\u4e9b\u73b0\u6709\u7684\u5e7f\u6cdb\u6d41\u884c\u7684\u534f\u8bae\u548c\u6807\u51c6\u3002REST \u901a\u5e38\u4f7f\u7528 JSON \u6570\u636e\u683c\u5f0f\u3002 HTTP \u65b9\u6cd5 \u00b6 \u4ee5\u4e0b\u4e3a REST \u57fa\u672c\u67b6\u6784\u7684\u56db\u4e2a\u65b9\u6cd5\uff1a GET - \u7528\u4e8e\u83b7\u53d6\u6570\u636e\u3002 PUT - \u7528\u4e8e\u66f4\u65b0\u6216\u6dfb\u52a0\u6570\u636e\u3002 DELETE - \u7528\u4e8e\u5220\u9664\u6570\u636e\u3002 POST - \u7528\u4e8e\u6dfb\u52a0\u6570\u636e\u3002 RESTful Web Services \u00b6 Web service\u662f\u4e00\u4e2a\u5e73\u53f0\u72ec\u7acb\u7684\uff0c\u4f4e\u8026\u5408\u7684\uff0c\u81ea\u5305\u542b\u7684\u3001\u57fa\u4e8e\u53ef\u7f16\u7a0b\u7684web\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4f7f\u7528\u5f00\u653e\u7684XML\uff08\u6807\u51c6\u901a\u7528\u6807\u8bb0\u8bed\u8a00\u4e0b\u7684\u4e00\u4e2a\u5b50\u96c6\uff09\u6807\u51c6\u6765\u63cf\u8ff0\u3001\u53d1\u5e03\u3001\u53d1\u73b0\u3001\u534f\u8c03\u548c\u914d\u7f6e\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\uff0c\u7528\u4e8e\u5f00\u53d1\u5206\u5e03\u5f0f\u7684\u4e92\u64cd\u4f5c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 \u57fa\u4e8e REST \u67b6\u6784\u7684 Web Services \u5373\u662f RESTful\u3002 \u7531\u4e8e\u8f7b\u91cf\u7ea7\u4ee5\u53ca\u901a\u8fc7 HTTP \u76f4\u63a5\u4f20\u8f93\u6570\u636e\u7684\u7279\u6027\uff0cWeb \u670d\u52a1\u7684 RESTful \u65b9\u6cd5\u5df2\u7ecf\u6210\u4e3a\u6700\u5e38\u89c1\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u8bed\u8a00\uff08\u6bd4\u5982 Java \u7a0b\u5e8f\u3001Perl\u3001Ruby\u3001Python\u3001PHP \u548c Javascript[\u5305\u62ec Ajax]\uff09\u5b9e\u73b0\u5ba2\u6237\u7aef\u3002 RESTful Web \u670d\u52a1\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u81ea\u52a8\u5ba2\u6237\u7aef\u6216\u4ee3\u8868\u7528\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u670d\u52a1\u7684\u7b80\u4fbf\u6027\u8ba9\u7528\u6237\u80fd\u591f\u4e0e\u4e4b\u76f4\u63a5\u4ea4\u4e92\uff0c\u4f7f\u7528\u5b83\u4eec\u7684 Web \u6d4f\u89c8\u5668\u6784\u5efa\u4e00\u4e2a GET URL \u5e76\u8bfb\u53d6\u8fd4\u56de\u7684\u5185\u5bb9\u3002 \u66f4\u591a\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u67e5\u770b\uff1a RESTful \u67b6\u6784\u8be6\u89e3 \u521b\u5efa RESTful \u00b6 \u9996\u5148\uff0c\u521b\u5efa\u4e00\u4e2a json \u6570\u636e\u8d44\u6e90\u6587\u4ef6 users.json\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a { \"user1\" : { \"name\" : \"mahesh\", \"password\" : \"password1\", \"profession\" : \"teacher\", \"id\": 1 }, \"user2\" : { \"name\" : \"suresh\", \"password\" : \"password2\", \"profession\" : \"librarian\", \"id\": 2 }, \"user3\" : { \"name\" : \"ramesh\", \"password\" : \"password3\", \"profession\" : \"clerk\", \"id\": 3 } } \u57fa\u4e8e\u4ee5\u4e0a\u6570\u636e\uff0c\u6211\u4eec\u521b\u5efa\u4ee5\u4e0b RESTful API\uff1a \u5e8f\u53f7 URI HTTP \u65b9\u6cd5 \u53d1\u9001\u5185\u5bb9 \u7ed3\u679c 1 listUsers GET \u7a7a \u663e\u793a\u6240\u6709\u7528\u6237\u5217\u8868 2 addUser POST JSON \u5b57\u7b26\u4e32 \u6dfb\u52a0\u65b0\u7528\u6237 3 deleteUser DELETE JSON \u5b57\u7b26\u4e32 \u5220\u9664\u7528\u6237 4 :id GET \u7a7a \u663e\u793a\u7528\u6237\u8be6\u7ec6\u4fe1\u606f \u83b7\u53d6\u7528\u6237\u5217\u8868\uff1a \u00b6 \u4ee5\u4e0b\u4ee3\u7801\uff0c\u6211\u4eec\u521b\u5efa\u4e86 RESTful API listUsers \uff0c\u7528\u4e8e\u8bfb\u53d6\u7528\u6237\u7684\u4fe1\u606f\u5217\u8868\uff0c server.js \u6587\u4ef6\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var express = require('express'); var app = express(); var fs = require(\"fs\"); app.get('/listUsers', function (req, res) { fs.readFile( __dirname + \"/\" + \"users.json\", 'utf8', function (err, data) { console.log( data ); res.end( data ); }); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u63a5\u4e0b\u6765\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/listUsers \uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a { \"user1\" : { \"name\" : \"mahesh\", \"password\" : \"password1\", \"profession\" : \"teacher\", \"id\": 1 }, \"user2\" : { \"name\" : \"suresh\", \"password\" : \"password2\", \"profession\" : \"librarian\", \"id\": 2 }, \"user3\" : { \"name\" : \"ramesh\", \"password\" : \"password3\", \"profession\" : \"clerk\", \"id\": 3 } } \u6dfb\u52a0\u7528\u6237 \u00b6 \u4ee5\u4e0b\u4ee3\u7801\uff0c\u6211\u4eec\u521b\u5efa\u4e86 RESTful API addUser \uff0c \u7528\u4e8e\u6dfb\u52a0\u65b0\u7684\u7528\u6237\u6570\u636e\uff0cserver.js \u6587\u4ef6\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var express = require('express'); var app = express(); var fs = require(\"fs\"); //\u6dfb\u52a0\u7684\u65b0\u7528\u6237\u6570\u636e var user = { \"user4\" : { \"name\" : \"mohit\", \"password\" : \"password4\", \"profession\" : \"teacher\", \"id\": 4 } } app.get('/addUser', function (req, res) { // \u8bfb\u53d6\u5df2\u5b58\u5728\u7684\u6570\u636e fs.readFile( __dirname + \"/\" + \"users.json\", 'utf8', function (err, data) { data = JSON.parse( data ); data[\"user4\"] = user[\"user4\"]; console.log( data ); res.end( JSON.stringify(data)); }); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u63a5\u4e0b\u6765\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/addUser \uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a { user1: { name: 'mahesh', password: 'password1', profession: 'teacher', id: 1 }, user2: { name: 'suresh', password: 'password2', profession: 'librarian', id: 2 }, user3: { name: 'ramesh', password: 'password3', profession: 'clerk', id: 3 }, user4: { name: 'mohit', password: 'password4', profession: 'teacher', id: 4 } } \u663e\u793a\u7528\u6237\u8be6\u60c5 \u00b6 \u4ee5\u4e0b\u4ee3\u7801\uff0c\u6211\u4eec\u521b\u5efa\u4e86 RESTful API :id\uff08\u7528\u6237id\uff09 \uff0c \u7528\u4e8e\u8bfb\u53d6\u6307\u5b9a\u7528\u6237\u7684\u8be6\u7ec6\u4fe1\u606f\uff0cserver.js \u6587\u4ef6\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var express = require('express'); var app = express(); var fs = require(\"fs\"); app.get('/:id', function (req, res) { // \u9996\u5148\u6211\u4eec\u8bfb\u53d6\u5df2\u5b58\u5728\u7684\u7528\u6237 fs.readFile( __dirname + \"/\" + \"users.json\", 'utf8', function (err, data) { data = JSON.parse( data ); var user = data[\"user\" + req.params.id] console.log( user ); res.end( JSON.stringify(user)); }); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u63a5\u4e0b\u6765\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/2 \uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a { \"name\":\"suresh\", \"password\":\"password2\", \"profession\":\"librarian\", \"id\":2 } \u5220\u9664\u7528\u6237 \u00b6 \u4ee5\u4e0b\u4ee3\u7801\uff0c\u6211\u4eec\u521b\u5efa\u4e86 RESTful API deleteUser \uff0c \u7528\u4e8e\u5220\u9664\u6307\u5b9a\u7528\u6237\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\uff0c\u7528\u6237 id \u4e3a 2\uff0cserver.js \u6587\u4ef6\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var express = require('express'); var app = express(); var fs = require(\"fs\"); var id = 2; app.get('/deleteUser', function (req, res) { // First read existing users. fs.readFile( __dirname + \"/\" + \"users.json\", 'utf8', function (err, data) { data = JSON.parse( data ); delete data[\"user\" + id]; console.log( data ); res.end( JSON.stringify(data)); }); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u63a5\u4e0b\u6765\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/deleteUser \uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a { user1: { name: 'mahesh', password: 'password1', profession: 'teacher', id: 1 }, user3: { name: 'ramesh', password: 'password3', profession: 'clerk', id: 3 } }","title":"21-Node.js RESTful API"},{"location":"nodejs/21-Node.js%20RESTful%20API/#nodejs-restful-api","text":"","title":"Node.js RESTful API"},{"location":"nodejs/21-Node.js%20RESTful%20API/#rest","text":"REST\u5373\u8868\u8ff0\u6027\u72b6\u6001\u4f20\u9012\uff08\u82f1\u6587\uff1aRepresentational State Transfer\uff0c\u7b80\u79f0REST\uff09\u662fRoy Fielding\u535a\u58eb\u57282000\u5e74\u4ed6\u7684\u535a\u58eb\u8bba\u6587\u4e2d\u63d0\u51fa\u6765\u7684\u4e00\u79cd\u8f6f\u4ef6\u67b6\u6784\u98ce\u683c\u3002 \u8868\u8ff0\u6027\u72b6\u6001\u8f6c\u79fb\u662f\u4e00\u7ec4\u67b6\u6784\u7ea6\u675f\u6761\u4ef6\u548c\u539f\u5219\u3002\u6ee1\u8db3\u8fd9\u4e9b\u7ea6\u675f\u6761\u4ef6\u548c\u539f\u5219\u7684\u5e94\u7528\u7a0b\u5e8f\u6216\u8bbe\u8ba1\u5c31\u662fRESTful\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cREST\u662f\u8bbe\u8ba1\u98ce\u683c\u800c\u4e0d\u662f\u6807\u51c6\u3002REST\u901a\u5e38\u57fa\u4e8e\u4f7f\u7528HTTP\uff0cURI\uff0c\u548cXML\uff08\u6807\u51c6\u901a\u7528\u6807\u8bb0\u8bed\u8a00\u4e0b\u7684\u4e00\u4e2a\u5b50\u96c6\uff09\u4ee5\u53caHTML\uff08\u6807\u51c6\u901a\u7528\u6807\u8bb0\u8bed\u8a00\u4e0b\u7684\u4e00\u4e2a\u5e94\u7528\uff09\u8fd9\u4e9b\u73b0\u6709\u7684\u5e7f\u6cdb\u6d41\u884c\u7684\u534f\u8bae\u548c\u6807\u51c6\u3002REST \u901a\u5e38\u4f7f\u7528 JSON \u6570\u636e\u683c\u5f0f\u3002","title":"\u4ec0\u4e48\u662f REST\uff1f"},{"location":"nodejs/21-Node.js%20RESTful%20API/#http","text":"\u4ee5\u4e0b\u4e3a REST \u57fa\u672c\u67b6\u6784\u7684\u56db\u4e2a\u65b9\u6cd5\uff1a GET - \u7528\u4e8e\u83b7\u53d6\u6570\u636e\u3002 PUT - \u7528\u4e8e\u66f4\u65b0\u6216\u6dfb\u52a0\u6570\u636e\u3002 DELETE - \u7528\u4e8e\u5220\u9664\u6570\u636e\u3002 POST - \u7528\u4e8e\u6dfb\u52a0\u6570\u636e\u3002","title":"HTTP \u65b9\u6cd5"},{"location":"nodejs/21-Node.js%20RESTful%20API/#restful-web-services","text":"Web service\u662f\u4e00\u4e2a\u5e73\u53f0\u72ec\u7acb\u7684\uff0c\u4f4e\u8026\u5408\u7684\uff0c\u81ea\u5305\u542b\u7684\u3001\u57fa\u4e8e\u53ef\u7f16\u7a0b\u7684web\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u53ef\u4f7f\u7528\u5f00\u653e\u7684XML\uff08\u6807\u51c6\u901a\u7528\u6807\u8bb0\u8bed\u8a00\u4e0b\u7684\u4e00\u4e2a\u5b50\u96c6\uff09\u6807\u51c6\u6765\u63cf\u8ff0\u3001\u53d1\u5e03\u3001\u53d1\u73b0\u3001\u534f\u8c03\u548c\u914d\u7f6e\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\uff0c\u7528\u4e8e\u5f00\u53d1\u5206\u5e03\u5f0f\u7684\u4e92\u64cd\u4f5c\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 \u57fa\u4e8e REST \u67b6\u6784\u7684 Web Services \u5373\u662f RESTful\u3002 \u7531\u4e8e\u8f7b\u91cf\u7ea7\u4ee5\u53ca\u901a\u8fc7 HTTP \u76f4\u63a5\u4f20\u8f93\u6570\u636e\u7684\u7279\u6027\uff0cWeb \u670d\u52a1\u7684 RESTful \u65b9\u6cd5\u5df2\u7ecf\u6210\u4e3a\u6700\u5e38\u89c1\u7684\u66ff\u4ee3\u65b9\u6cd5\u3002\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u8bed\u8a00\uff08\u6bd4\u5982 Java \u7a0b\u5e8f\u3001Perl\u3001Ruby\u3001Python\u3001PHP \u548c Javascript[\u5305\u62ec Ajax]\uff09\u5b9e\u73b0\u5ba2\u6237\u7aef\u3002 RESTful Web \u670d\u52a1\u901a\u5e38\u53ef\u4ee5\u901a\u8fc7\u81ea\u52a8\u5ba2\u6237\u7aef\u6216\u4ee3\u8868\u7528\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u670d\u52a1\u7684\u7b80\u4fbf\u6027\u8ba9\u7528\u6237\u80fd\u591f\u4e0e\u4e4b\u76f4\u63a5\u4ea4\u4e92\uff0c\u4f7f\u7528\u5b83\u4eec\u7684 Web \u6d4f\u89c8\u5668\u6784\u5efa\u4e00\u4e2a GET URL \u5e76\u8bfb\u53d6\u8fd4\u56de\u7684\u5185\u5bb9\u3002 \u66f4\u591a\u4ecb\u7ecd\uff0c\u53ef\u4ee5\u67e5\u770b\uff1a RESTful \u67b6\u6784\u8be6\u89e3","title":"RESTful Web Services"},{"location":"nodejs/21-Node.js%20RESTful%20API/#restful","text":"\u9996\u5148\uff0c\u521b\u5efa\u4e00\u4e2a json \u6570\u636e\u8d44\u6e90\u6587\u4ef6 users.json\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a { \"user1\" : { \"name\" : \"mahesh\", \"password\" : \"password1\", \"profession\" : \"teacher\", \"id\": 1 }, \"user2\" : { \"name\" : \"suresh\", \"password\" : \"password2\", \"profession\" : \"librarian\", \"id\": 2 }, \"user3\" : { \"name\" : \"ramesh\", \"password\" : \"password3\", \"profession\" : \"clerk\", \"id\": 3 } } \u57fa\u4e8e\u4ee5\u4e0a\u6570\u636e\uff0c\u6211\u4eec\u521b\u5efa\u4ee5\u4e0b RESTful API\uff1a \u5e8f\u53f7 URI HTTP \u65b9\u6cd5 \u53d1\u9001\u5185\u5bb9 \u7ed3\u679c 1 listUsers GET \u7a7a \u663e\u793a\u6240\u6709\u7528\u6237\u5217\u8868 2 addUser POST JSON \u5b57\u7b26\u4e32 \u6dfb\u52a0\u65b0\u7528\u6237 3 deleteUser DELETE JSON \u5b57\u7b26\u4e32 \u5220\u9664\u7528\u6237 4 :id GET \u7a7a \u663e\u793a\u7528\u6237\u8be6\u7ec6\u4fe1\u606f","title":"\u521b\u5efa RESTful"},{"location":"nodejs/21-Node.js%20RESTful%20API/#_1","text":"\u4ee5\u4e0b\u4ee3\u7801\uff0c\u6211\u4eec\u521b\u5efa\u4e86 RESTful API listUsers \uff0c\u7528\u4e8e\u8bfb\u53d6\u7528\u6237\u7684\u4fe1\u606f\u5217\u8868\uff0c server.js \u6587\u4ef6\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var express = require('express'); var app = express(); var fs = require(\"fs\"); app.get('/listUsers', function (req, res) { fs.readFile( __dirname + \"/\" + \"users.json\", 'utf8', function (err, data) { console.log( data ); res.end( data ); }); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u63a5\u4e0b\u6765\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/listUsers \uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a { \"user1\" : { \"name\" : \"mahesh\", \"password\" : \"password1\", \"profession\" : \"teacher\", \"id\": 1 }, \"user2\" : { \"name\" : \"suresh\", \"password\" : \"password2\", \"profession\" : \"librarian\", \"id\": 2 }, \"user3\" : { \"name\" : \"ramesh\", \"password\" : \"password3\", \"profession\" : \"clerk\", \"id\": 3 } }","title":"\u83b7\u53d6\u7528\u6237\u5217\u8868\uff1a"},{"location":"nodejs/21-Node.js%20RESTful%20API/#_2","text":"\u4ee5\u4e0b\u4ee3\u7801\uff0c\u6211\u4eec\u521b\u5efa\u4e86 RESTful API addUser \uff0c \u7528\u4e8e\u6dfb\u52a0\u65b0\u7684\u7528\u6237\u6570\u636e\uff0cserver.js \u6587\u4ef6\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var express = require('express'); var app = express(); var fs = require(\"fs\"); //\u6dfb\u52a0\u7684\u65b0\u7528\u6237\u6570\u636e var user = { \"user4\" : { \"name\" : \"mohit\", \"password\" : \"password4\", \"profession\" : \"teacher\", \"id\": 4 } } app.get('/addUser', function (req, res) { // \u8bfb\u53d6\u5df2\u5b58\u5728\u7684\u6570\u636e fs.readFile( __dirname + \"/\" + \"users.json\", 'utf8', function (err, data) { data = JSON.parse( data ); data[\"user4\"] = user[\"user4\"]; console.log( data ); res.end( JSON.stringify(data)); }); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u63a5\u4e0b\u6765\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/addUser \uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a { user1: { name: 'mahesh', password: 'password1', profession: 'teacher', id: 1 }, user2: { name: 'suresh', password: 'password2', profession: 'librarian', id: 2 }, user3: { name: 'ramesh', password: 'password3', profession: 'clerk', id: 3 }, user4: { name: 'mohit', password: 'password4', profession: 'teacher', id: 4 } }","title":"\u6dfb\u52a0\u7528\u6237"},{"location":"nodejs/21-Node.js%20RESTful%20API/#_3","text":"\u4ee5\u4e0b\u4ee3\u7801\uff0c\u6211\u4eec\u521b\u5efa\u4e86 RESTful API :id\uff08\u7528\u6237id\uff09 \uff0c \u7528\u4e8e\u8bfb\u53d6\u6307\u5b9a\u7528\u6237\u7684\u8be6\u7ec6\u4fe1\u606f\uff0cserver.js \u6587\u4ef6\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var express = require('express'); var app = express(); var fs = require(\"fs\"); app.get('/:id', function (req, res) { // \u9996\u5148\u6211\u4eec\u8bfb\u53d6\u5df2\u5b58\u5728\u7684\u7528\u6237 fs.readFile( __dirname + \"/\" + \"users.json\", 'utf8', function (err, data) { data = JSON.parse( data ); var user = data[\"user\" + req.params.id] console.log( user ); res.end( JSON.stringify(user)); }); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u63a5\u4e0b\u6765\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/2 \uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a { \"name\":\"suresh\", \"password\":\"password2\", \"profession\":\"librarian\", \"id\":2 }","title":"\u663e\u793a\u7528\u6237\u8be6\u60c5"},{"location":"nodejs/21-Node.js%20RESTful%20API/#_4","text":"\u4ee5\u4e0b\u4ee3\u7801\uff0c\u6211\u4eec\u521b\u5efa\u4e86 RESTful API deleteUser \uff0c \u7528\u4e8e\u5220\u9664\u6307\u5b9a\u7528\u6237\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\uff0c\u7528\u6237 id \u4e3a 2\uff0cserver.js \u6587\u4ef6\u4ee3\u7801\u5982\u4e0b\u6240\u793a\uff1a var express = require('express'); var app = express(); var fs = require(\"fs\"); var id = 2; app.get('/deleteUser', function (req, res) { // First read existing users. fs.readFile( __dirname + \"/\" + \"users.json\", 'utf8', function (err, data) { data = JSON.parse( data ); delete data[\"user\" + id]; console.log( data ); res.end( JSON.stringify(data)); }); }) var server = app.listen(8081, function () { var host = server.address().address var port = server.address().port console.log(\"\u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://%s:%s\", host, port) }) \u63a5\u4e0b\u6765\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a $ node server.js \u5e94\u7528\u5b9e\u4f8b\uff0c\u8bbf\u95ee\u5730\u5740\u4e3a http://0.0.0.0:8081 \u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8081/deleteUser \uff0c\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff1a { user1: { name: 'mahesh', password: 'password1', profession: 'teacher', id: 1 }, user3: { name: 'ramesh', password: 'password3', profession: 'clerk', id: 3 } }","title":"\u5220\u9664\u7528\u6237"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/","text":"Node.js \u591a\u8fdb\u7a0b \u00b6 \u6211\u4eec\u90fd\u77e5\u9053 Node.js \u662f\u4ee5\u5355\u7ebf\u7a0b\u7684\u6a21\u5f0f\u8fd0\u884c\u7684\uff0c\u4f46\u5b83\u4f7f\u7528\u7684\u662f\u4e8b\u4ef6\u9a71\u52a8\u6765\u5904\u7406\u5e76\u53d1\uff0c\u8fd9\u6837\u6709\u52a9\u4e8e\u6211\u4eec\u5728\u591a\u6838 cpu \u7684\u7cfb\u7edf\u4e0a\u521b\u5efa\u591a\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002 \u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u603b\u662f\u5e26\u6709\u4e09\u4e2a\u6d41\u5bf9\u8c61\uff1achild.stdin, child.stdout \u548cchild.stderr\u3002\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5171\u4eab\u7236\u8fdb\u7a0b\u7684 stdio \u6d41\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u662f\u72ec\u7acb\u7684\u88ab\u5bfc\u6d41\u7684\u6d41\u5bf9\u8c61\u3002 Node \u63d0\u4f9b\u4e86 child_process \u6a21\u5757\u6765\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u65b9\u6cd5\u6709\uff1a exec - child_process.exec \u4f7f\u7528\u5b50\u8fdb\u7a0b\u6267\u884c\u547d\u4ee4\uff0c\u7f13\u5b58\u5b50\u8fdb\u7a0b\u7684\u8f93\u51fa\uff0c\u5e76\u5c06\u5b50\u8fdb\u7a0b\u7684\u8f93\u51fa\u4ee5\u56de\u8c03\u51fd\u6570\u53c2\u6570\u7684\u5f62\u5f0f\u8fd4\u56de\u3002 spawn - child_process.spawn \u4f7f\u7528\u6307\u5b9a\u7684\u547d\u4ee4\u884c\u53c2\u6570\u521b\u5efa\u65b0\u8fdb\u7a0b\u3002 fork - child_process.fork \u662f spawn()\u7684\u7279\u6b8a\u5f62\u5f0f\uff0c\u7528\u4e8e\u5728\u5b50\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u7684\u6a21\u5757\uff0c\u5982 fork('./son.js') \u76f8\u5f53\u4e8e spawn('node', ['./son.js']) \u3002\u4e0espawn\u65b9\u6cd5\u4e0d\u540c\u7684\u662f\uff0cfork\u4f1a\u5728\u7236\u8fdb\u7a0b\u4e0e\u5b50\u8fdb\u7a0b\u4e4b\u95f4\uff0c\u5efa\u7acb\u4e00\u4e2a\u901a\u4fe1\u7ba1\u9053\uff0c\u7528\u4e8e\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 exec() \u65b9\u6cd5 \u00b6 child_process.exec \u4f7f\u7528\u5b50\u8fdb\u7a0b\u6267\u884c\u547d\u4ee4\uff0c\u7f13\u5b58\u5b50\u8fdb\u7a0b\u7684\u8f93\u51fa\uff0c\u5e76\u5c06\u5b50\u8fdb\u7a0b\u7684\u8f93\u51fa\u4ee5\u56de\u8c03\u51fd\u6570\u53c2\u6570\u7684\u5f62\u5f0f\u8fd4\u56de\u3002 \u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a child_process.exec(command[, options], callback) \u53c2\u6570 \u00b6 \u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a command\uff1a \u5b57\u7b26\u4e32\uff0c \u5c06\u8981\u8fd0\u884c\u7684\u547d\u4ee4\uff0c\u53c2\u6570\u4f7f\u7528\u7a7a\u683c\u9694\u5f00 options \uff1a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u662f\uff1a cwd \uff0c\u5b57\u7b26\u4e32\uff0c\u5b50\u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 env\uff0c\u5bf9\u8c61 \u73af\u5883\u53d8\u91cf\u952e\u503c\u5bf9 encoding \uff0c\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u7f16\u7801\uff08\u9ed8\u8ba4\uff1a 'utf8'\uff09 shell \uff0c\u5b57\u7b26\u4e32\uff0c\u5c06\u8981\u6267\u884c\u547d\u4ee4\u7684 Shell\uff08\u9ed8\u8ba4: \u5728 UNIX \u4e2d\u4e3a /bin/sh \uff0c \u5728 Windows \u4e2d\u4e3a cmd.exe \uff0c Shell \u5e94\u5f53\u80fd\u8bc6\u522b -c \u5f00\u5173\u5728 UNIX \u4e2d\uff0c\u6216 /s /c \u5728 Windows \u4e2d\u3002 \u5728Windows \u4e2d\uff0c\u547d\u4ee4\u884c\u89e3\u6790\u5e94\u5f53\u80fd\u517c\u5bb9 cmd.exe \uff09 timeout\uff0c\u6570\u5b57\uff0c\u8d85\u65f6\u65f6\u95f4\uff08\u9ed8\u8ba4\uff1a 0\uff09 maxBuffer\uff0c\u6570\u5b57\uff0c \u5728 stdout \u6216 stderr \u4e2d\u5141\u8bb8\u5b58\u5728\u7684\u6700\u5927\u7f13\u51b2\uff08\u4e8c\u8fdb\u5236\uff09\uff0c\u5982\u679c\u8d85\u51fa\u90a3\u4e48\u5b50\u8fdb\u7a0b\u5c06\u4f1a\u88ab\u6740\u6b7b \uff08\u9ed8\u8ba4: 200*1024\uff09 killSignal \uff0c\u5b57\u7b26\u4e32\uff0c\u7ed3\u675f\u4fe1\u53f7\uff08\u9ed8\u8ba4\uff1a'SIGTERM'\uff09 uid\uff0c\u6570\u5b57\uff0c\u8bbe\u7f6e\u7528\u6237\u8fdb\u7a0b\u7684 ID gid\uff0c\u6570\u5b57\uff0c\u8bbe\u7f6e\u8fdb\u7a0b\u7ec4\u7684 ID **callback \uff1a**\u56de\u8c03\u51fd\u6570\uff0c\u5305\u542b\u4e09\u4e2a\u53c2\u6570error, stdout \u548c stderr\u3002 exec() \u65b9\u6cd5\u8fd4\u56de\u6700\u5927\u7684\u7f13\u51b2\u533a\uff0c\u5e76\u7b49\u5f85\u8fdb\u7a0b\u7ed3\u675f\uff0c\u4e00\u6b21\u6027\u8fd4\u56de\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u3002 \u5b9e\u4f8b \u00b6 \u8ba9\u6211\u4eec\u521b\u5efa\u4e24\u4e2a js \u6587\u4ef6 support.js \u548c master.js\u3002 support.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 console.log(\"\u8fdb\u7a0b \" + process.argv[2] + \" \u6267\u884c\u3002\" ); master.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 const fs = require('fs'); const child_process = require('child_process'); for(var i=0; i<3; i++) { var workerProcess = child_process.exec('node support.js '+i, function (error, stdout, stderr) { if (error) { console.log(error.stack); console.log('Error code: '+error.code); console.log('Signal received: '+error.signal); } console.log('stdout: ' + stdout); console.log('stderr: ' + stderr); }); workerProcess.on('exit', function (code) { console.log('\u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 '+code); }); } \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $ node master.js \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 stdout: \u8fdb\u7a0b 1 \u6267\u884c\u3002 stderr: \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 stdout: \u8fdb\u7a0b 0 \u6267\u884c\u3002 stderr: \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 stdout: \u8fdb\u7a0b 2 \u6267\u884c\u3002 stderr: spawn() \u65b9\u6cd5 \u00b6 child_process.spawn \u4f7f\u7528\u6307\u5b9a\u7684\u547d\u4ee4\u884c\u53c2\u6570\u521b\u5efa\u65b0\u8fdb\u7a0b\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a child_process.spawn(command[, args][, options]) \u53c2\u6570 \u00b6 \u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a command\uff1a \u5c06\u8981\u8fd0\u884c\u7684\u547d\u4ee4 args\uff1a Array \u5b57\u7b26\u4e32\u53c2\u6570\u6570\u7ec4 options Object cwd String \u5b50\u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 env Object \u73af\u5883\u53d8\u91cf\u952e\u503c\u5bf9 stdio Array|String \u5b50\u8fdb\u7a0b\u7684 stdio \u914d\u7f6e detached Boolean \u8fd9\u4e2a\u5b50\u8fdb\u7a0b\u5c06\u4f1a\u53d8\u6210\u8fdb\u7a0b\u7ec4\u7684\u9886\u5bfc uid Number \u8bbe\u7f6e\u7528\u6237\u8fdb\u7a0b\u7684 ID gid Number \u8bbe\u7f6e\u8fdb\u7a0b\u7ec4\u7684 ID spawn() \u65b9\u6cd5\u8fd4\u56de\u6d41 (stdout & stderr)\uff0c\u5728\u8fdb\u7a0b\u8fd4\u56de\u5927\u91cf\u6570\u636e\u65f6\u4f7f\u7528\u3002\u8fdb\u7a0b\u4e00\u65e6\u5f00\u59cb\u6267\u884c\u65f6 spawn() \u5c31\u5f00\u59cb\u63a5\u6536\u54cd\u5e94\u3002 \u5b9e\u4f8b \u00b6 \u8ba9\u6211\u4eec\u521b\u5efa\u4e24\u4e2a js \u6587\u4ef6 support.js \u548c master.js\u3002 support.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 console.log(\"\u8fdb\u7a0b \" + process.argv[2] + \" \u6267\u884c\u3002\" ); master.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 const fs = require('fs'); const child_process = require('child_process'); for(var i=0; i<3; i++) { var workerProcess = child_process.spawn('node', ['support.js', i]); workerProcess.stdout.on('data', function (data) { console.log('stdout: ' + data); }); workerProcess.stderr.on('data', function (data) { console.log('stderr: ' + data); }); workerProcess.on('close', function (code) { console.log('\u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 '+code); }); } \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $ node master.js stdout: \u8fdb\u7a0b 0 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 stdout: \u8fdb\u7a0b 1 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 stdout: \u8fdb\u7a0b 2 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 fork \u65b9\u6cd5 \u00b6 child_process.fork \u662f spawn() \u65b9\u6cd5\u7684\u7279\u6b8a\u5f62\u5f0f\uff0c\u7528\u4e8e\u521b\u5efa\u8fdb\u7a0b\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a child_process.fork(modulePath[, args][, options]) \u53c2\u6570 \u00b6 \u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a modulePath \uff1a String\uff0c\u5c06\u8981\u5728\u5b50\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u7684\u6a21\u5757 args \uff1a Array \u5b57\u7b26\u4e32\u53c2\u6570\u6570\u7ec4 options \uff1aObject cwd String \u5b50\u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 env Object \u73af\u5883\u53d8\u91cf\u952e\u503c\u5bf9 execPath String \u521b\u5efa\u5b50\u8fdb\u7a0b\u7684\u53ef\u6267\u884c\u6587\u4ef6 execArgv Array \u5b50\u8fdb\u7a0b\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b57\u7b26\u4e32\u53c2\u6570\u6570\u7ec4\uff08\u9ed8\u8ba4\uff1a process.execArgv\uff09 silent Boolean \u5982\u679c\u4e3a true \uff0c\u5b50\u8fdb\u7a0b\u7684 stdin \uff0c stdout \u548c stderr \u5c06\u4f1a\u88ab\u5173\u8054\u81f3\u7236\u8fdb\u7a0b\uff0c\u5426\u5219\uff0c\u5b83\u4eec\u5c06\u4f1a\u4ece\u7236\u8fdb\u7a0b\u4e2d\u7ee7\u627f\u3002\uff08\u9ed8\u8ba4\u4e3a\uff1a false \uff09 uid Number \u8bbe\u7f6e\u7528\u6237\u8fdb\u7a0b\u7684 ID gid Number \u8bbe\u7f6e\u8fdb\u7a0b\u7ec4\u7684 ID \u8fd4\u56de\u7684\u5bf9\u8c61\u9664\u4e86\u62e5\u6709ChildProcess\u5b9e\u4f8b\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u8fd8\u6709\u4e00\u4e2a\u5185\u5efa\u7684\u901a\u4fe1\u4fe1\u9053\u3002 \u5b9e\u4f8b \u00b6 \u8ba9\u6211\u4eec\u521b\u5efa\u4e24\u4e2a js \u6587\u4ef6 support.js \u548c master.js\u3002 support.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 console.log(\"\u8fdb\u7a0b \" + process.argv[2] + \" \u6267\u884c\u3002\" ); master.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 const fs = require('fs'); const child_process = require('child_process'); for(var i=0; i<3; i++) { var worker_process = child_process.fork(\"support.js\", [i]); worker_process.on('close', function (code) { console.log('\u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 ' + code); }); } \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $ node master.js \u8fdb\u7a0b 0 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 \u8fdb\u7a0b 1 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 \u8fdb\u7a0b 2 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0","title":"22-Node.js \u591a\u8fdb\u7a0b"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#nodejs","text":"\u6211\u4eec\u90fd\u77e5\u9053 Node.js \u662f\u4ee5\u5355\u7ebf\u7a0b\u7684\u6a21\u5f0f\u8fd0\u884c\u7684\uff0c\u4f46\u5b83\u4f7f\u7528\u7684\u662f\u4e8b\u4ef6\u9a71\u52a8\u6765\u5904\u7406\u5e76\u53d1\uff0c\u8fd9\u6837\u6709\u52a9\u4e8e\u6211\u4eec\u5728\u591a\u6838 cpu \u7684\u7cfb\u7edf\u4e0a\u521b\u5efa\u591a\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u3002 \u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u603b\u662f\u5e26\u6709\u4e09\u4e2a\u6d41\u5bf9\u8c61\uff1achild.stdin, child.stdout \u548cchild.stderr\u3002\u4ed6\u4eec\u53ef\u80fd\u4f1a\u5171\u4eab\u7236\u8fdb\u7a0b\u7684 stdio \u6d41\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u662f\u72ec\u7acb\u7684\u88ab\u5bfc\u6d41\u7684\u6d41\u5bf9\u8c61\u3002 Node \u63d0\u4f9b\u4e86 child_process \u6a21\u5757\u6765\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u65b9\u6cd5\u6709\uff1a exec - child_process.exec \u4f7f\u7528\u5b50\u8fdb\u7a0b\u6267\u884c\u547d\u4ee4\uff0c\u7f13\u5b58\u5b50\u8fdb\u7a0b\u7684\u8f93\u51fa\uff0c\u5e76\u5c06\u5b50\u8fdb\u7a0b\u7684\u8f93\u51fa\u4ee5\u56de\u8c03\u51fd\u6570\u53c2\u6570\u7684\u5f62\u5f0f\u8fd4\u56de\u3002 spawn - child_process.spawn \u4f7f\u7528\u6307\u5b9a\u7684\u547d\u4ee4\u884c\u53c2\u6570\u521b\u5efa\u65b0\u8fdb\u7a0b\u3002 fork - child_process.fork \u662f spawn()\u7684\u7279\u6b8a\u5f62\u5f0f\uff0c\u7528\u4e8e\u5728\u5b50\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u7684\u6a21\u5757\uff0c\u5982 fork('./son.js') \u76f8\u5f53\u4e8e spawn('node', ['./son.js']) \u3002\u4e0espawn\u65b9\u6cd5\u4e0d\u540c\u7684\u662f\uff0cfork\u4f1a\u5728\u7236\u8fdb\u7a0b\u4e0e\u5b50\u8fdb\u7a0b\u4e4b\u95f4\uff0c\u5efa\u7acb\u4e00\u4e2a\u901a\u4fe1\u7ba1\u9053\uff0c\u7528\u4e8e\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002","title":"Node.js \u591a\u8fdb\u7a0b"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#exec","text":"child_process.exec \u4f7f\u7528\u5b50\u8fdb\u7a0b\u6267\u884c\u547d\u4ee4\uff0c\u7f13\u5b58\u5b50\u8fdb\u7a0b\u7684\u8f93\u51fa\uff0c\u5e76\u5c06\u5b50\u8fdb\u7a0b\u7684\u8f93\u51fa\u4ee5\u56de\u8c03\u51fd\u6570\u53c2\u6570\u7684\u5f62\u5f0f\u8fd4\u56de\u3002 \u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a child_process.exec(command[, options], callback)","title":"exec() \u65b9\u6cd5"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#_1","text":"\u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a command\uff1a \u5b57\u7b26\u4e32\uff0c \u5c06\u8981\u8fd0\u884c\u7684\u547d\u4ee4\uff0c\u53c2\u6570\u4f7f\u7528\u7a7a\u683c\u9694\u5f00 options \uff1a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u662f\uff1a cwd \uff0c\u5b57\u7b26\u4e32\uff0c\u5b50\u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 env\uff0c\u5bf9\u8c61 \u73af\u5883\u53d8\u91cf\u952e\u503c\u5bf9 encoding \uff0c\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u7f16\u7801\uff08\u9ed8\u8ba4\uff1a 'utf8'\uff09 shell \uff0c\u5b57\u7b26\u4e32\uff0c\u5c06\u8981\u6267\u884c\u547d\u4ee4\u7684 Shell\uff08\u9ed8\u8ba4: \u5728 UNIX \u4e2d\u4e3a /bin/sh \uff0c \u5728 Windows \u4e2d\u4e3a cmd.exe \uff0c Shell \u5e94\u5f53\u80fd\u8bc6\u522b -c \u5f00\u5173\u5728 UNIX \u4e2d\uff0c\u6216 /s /c \u5728 Windows \u4e2d\u3002 \u5728Windows \u4e2d\uff0c\u547d\u4ee4\u884c\u89e3\u6790\u5e94\u5f53\u80fd\u517c\u5bb9 cmd.exe \uff09 timeout\uff0c\u6570\u5b57\uff0c\u8d85\u65f6\u65f6\u95f4\uff08\u9ed8\u8ba4\uff1a 0\uff09 maxBuffer\uff0c\u6570\u5b57\uff0c \u5728 stdout \u6216 stderr \u4e2d\u5141\u8bb8\u5b58\u5728\u7684\u6700\u5927\u7f13\u51b2\uff08\u4e8c\u8fdb\u5236\uff09\uff0c\u5982\u679c\u8d85\u51fa\u90a3\u4e48\u5b50\u8fdb\u7a0b\u5c06\u4f1a\u88ab\u6740\u6b7b \uff08\u9ed8\u8ba4: 200*1024\uff09 killSignal \uff0c\u5b57\u7b26\u4e32\uff0c\u7ed3\u675f\u4fe1\u53f7\uff08\u9ed8\u8ba4\uff1a'SIGTERM'\uff09 uid\uff0c\u6570\u5b57\uff0c\u8bbe\u7f6e\u7528\u6237\u8fdb\u7a0b\u7684 ID gid\uff0c\u6570\u5b57\uff0c\u8bbe\u7f6e\u8fdb\u7a0b\u7ec4\u7684 ID **callback \uff1a**\u56de\u8c03\u51fd\u6570\uff0c\u5305\u542b\u4e09\u4e2a\u53c2\u6570error, stdout \u548c stderr\u3002 exec() \u65b9\u6cd5\u8fd4\u56de\u6700\u5927\u7684\u7f13\u51b2\u533a\uff0c\u5e76\u7b49\u5f85\u8fdb\u7a0b\u7ed3\u675f\uff0c\u4e00\u6b21\u6027\u8fd4\u56de\u7f13\u51b2\u533a\u7684\u5185\u5bb9\u3002","title":"\u53c2\u6570"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#_2","text":"\u8ba9\u6211\u4eec\u521b\u5efa\u4e24\u4e2a js \u6587\u4ef6 support.js \u548c master.js\u3002","title":"\u5b9e\u4f8b"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#supportjs","text":"console.log(\"\u8fdb\u7a0b \" + process.argv[2] + \" \u6267\u884c\u3002\" );","title":"support.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#masterjs","text":"const fs = require('fs'); const child_process = require('child_process'); for(var i=0; i<3; i++) { var workerProcess = child_process.exec('node support.js '+i, function (error, stdout, stderr) { if (error) { console.log(error.stack); console.log('Error code: '+error.code); console.log('Signal received: '+error.signal); } console.log('stdout: ' + stdout); console.log('stderr: ' + stderr); }); workerProcess.on('exit', function (code) { console.log('\u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 '+code); }); } \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $ node master.js \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 stdout: \u8fdb\u7a0b 1 \u6267\u884c\u3002 stderr: \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 stdout: \u8fdb\u7a0b 0 \u6267\u884c\u3002 stderr: \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 stdout: \u8fdb\u7a0b 2 \u6267\u884c\u3002 stderr:","title":"master.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#spawn","text":"child_process.spawn \u4f7f\u7528\u6307\u5b9a\u7684\u547d\u4ee4\u884c\u53c2\u6570\u521b\u5efa\u65b0\u8fdb\u7a0b\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a child_process.spawn(command[, args][, options])","title":"spawn() \u65b9\u6cd5"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#_3","text":"\u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a command\uff1a \u5c06\u8981\u8fd0\u884c\u7684\u547d\u4ee4 args\uff1a Array \u5b57\u7b26\u4e32\u53c2\u6570\u6570\u7ec4 options Object cwd String \u5b50\u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 env Object \u73af\u5883\u53d8\u91cf\u952e\u503c\u5bf9 stdio Array|String \u5b50\u8fdb\u7a0b\u7684 stdio \u914d\u7f6e detached Boolean \u8fd9\u4e2a\u5b50\u8fdb\u7a0b\u5c06\u4f1a\u53d8\u6210\u8fdb\u7a0b\u7ec4\u7684\u9886\u5bfc uid Number \u8bbe\u7f6e\u7528\u6237\u8fdb\u7a0b\u7684 ID gid Number \u8bbe\u7f6e\u8fdb\u7a0b\u7ec4\u7684 ID spawn() \u65b9\u6cd5\u8fd4\u56de\u6d41 (stdout & stderr)\uff0c\u5728\u8fdb\u7a0b\u8fd4\u56de\u5927\u91cf\u6570\u636e\u65f6\u4f7f\u7528\u3002\u8fdb\u7a0b\u4e00\u65e6\u5f00\u59cb\u6267\u884c\u65f6 spawn() \u5c31\u5f00\u59cb\u63a5\u6536\u54cd\u5e94\u3002","title":"\u53c2\u6570"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#_4","text":"\u8ba9\u6211\u4eec\u521b\u5efa\u4e24\u4e2a js \u6587\u4ef6 support.js \u548c master.js\u3002","title":"\u5b9e\u4f8b"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#supportjs_1","text":"console.log(\"\u8fdb\u7a0b \" + process.argv[2] + \" \u6267\u884c\u3002\" );","title":"support.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#masterjs_1","text":"const fs = require('fs'); const child_process = require('child_process'); for(var i=0; i<3; i++) { var workerProcess = child_process.spawn('node', ['support.js', i]); workerProcess.stdout.on('data', function (data) { console.log('stdout: ' + data); }); workerProcess.stderr.on('data', function (data) { console.log('stderr: ' + data); }); workerProcess.on('close', function (code) { console.log('\u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 '+code); }); } \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $ node master.js stdout: \u8fdb\u7a0b 0 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 stdout: \u8fdb\u7a0b 1 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 stdout: \u8fdb\u7a0b 2 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0","title":"master.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#fork","text":"child_process.fork \u662f spawn() \u65b9\u6cd5\u7684\u7279\u6b8a\u5f62\u5f0f\uff0c\u7528\u4e8e\u521b\u5efa\u8fdb\u7a0b\uff0c\u8bed\u6cd5\u683c\u5f0f\u5982\u4e0b\uff1a child_process.fork(modulePath[, args][, options])","title":"fork \u65b9\u6cd5"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#_5","text":"\u53c2\u6570\u8bf4\u660e\u5982\u4e0b\uff1a modulePath \uff1a String\uff0c\u5c06\u8981\u5728\u5b50\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u7684\u6a21\u5757 args \uff1a Array \u5b57\u7b26\u4e32\u53c2\u6570\u6570\u7ec4 options \uff1aObject cwd String \u5b50\u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 env Object \u73af\u5883\u53d8\u91cf\u952e\u503c\u5bf9 execPath String \u521b\u5efa\u5b50\u8fdb\u7a0b\u7684\u53ef\u6267\u884c\u6587\u4ef6 execArgv Array \u5b50\u8fdb\u7a0b\u7684\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b57\u7b26\u4e32\u53c2\u6570\u6570\u7ec4\uff08\u9ed8\u8ba4\uff1a process.execArgv\uff09 silent Boolean \u5982\u679c\u4e3a true \uff0c\u5b50\u8fdb\u7a0b\u7684 stdin \uff0c stdout \u548c stderr \u5c06\u4f1a\u88ab\u5173\u8054\u81f3\u7236\u8fdb\u7a0b\uff0c\u5426\u5219\uff0c\u5b83\u4eec\u5c06\u4f1a\u4ece\u7236\u8fdb\u7a0b\u4e2d\u7ee7\u627f\u3002\uff08\u9ed8\u8ba4\u4e3a\uff1a false \uff09 uid Number \u8bbe\u7f6e\u7528\u6237\u8fdb\u7a0b\u7684 ID gid Number \u8bbe\u7f6e\u8fdb\u7a0b\u7ec4\u7684 ID \u8fd4\u56de\u7684\u5bf9\u8c61\u9664\u4e86\u62e5\u6709ChildProcess\u5b9e\u4f8b\u7684\u6240\u6709\u65b9\u6cd5\uff0c\u8fd8\u6709\u4e00\u4e2a\u5185\u5efa\u7684\u901a\u4fe1\u4fe1\u9053\u3002","title":"\u53c2\u6570"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#_6","text":"\u8ba9\u6211\u4eec\u521b\u5efa\u4e24\u4e2a js \u6587\u4ef6 support.js \u548c master.js\u3002","title":"\u5b9e\u4f8b"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#supportjs_2","text":"console.log(\"\u8fdb\u7a0b \" + process.argv[2] + \" \u6267\u884c\u3002\" );","title":"support.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/22-Node.js%20%E5%A4%9A%E8%BF%9B%E7%A8%8B/#masterjs_2","text":"const fs = require('fs'); const child_process = require('child_process'); for(var i=0; i<3; i++) { var worker_process = child_process.fork(\"support.js\", [i]); worker_process.on('close', function (code) { console.log('\u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 ' + code); }); } \u6267\u884c\u4ee5\u4e0a\u4ee3\u7801\uff0c\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $ node master.js \u8fdb\u7a0b 0 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 \u8fdb\u7a0b 1 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0 \u8fdb\u7a0b 2 \u6267\u884c\u3002 \u5b50\u8fdb\u7a0b\u5df2\u9000\u51fa\uff0c\u9000\u51fa\u7801 0","title":"master.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/23-Node.js%20JXcore%20%E6%89%93%E5%8C%85/","text":"Node.js JXcore \u6253\u5305 \u00b6 Node.js \u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u3001\u8de8\u5e73\u53f0\u7684\u3001\u7528\u4e8e\u670d\u52a1\u5668\u7aef\u548c\u7f51\u7edc\u5e94\u7528\u7684\u8fd0\u884c\u73af\u5883\u3002 JXcore \u662f\u4e00\u4e2a\u652f\u6301\u591a\u7ebf\u7a0b\u7684 Node.js \u53d1\u884c\u7248\u672c\uff0c\u57fa\u672c\u4e0d\u9700\u8981\u5bf9\u4f60\u73b0\u6709\u7684\u4ee3\u7801\u505a\u4efb\u4f55\u6539\u52a8\u5c31\u53ef\u4ee5\u76f4\u63a5\u7ebf\u7a0b\u5b89\u5168\u5730\u4ee5\u591a\u7ebf\u7a0b\u8fd0\u884c\u3002 \u8fd9\u7bc7\u6587\u7ae0\u4e3b\u8981\u662f\u8981\u5411\u5927\u5bb6\u4ecb\u7ecd JXcore \u7684\u6253\u5305\u529f\u80fd\u3002 JXcore \u5b89\u88c5 \u00b6 \u4e0b\u8f7d JXcore \u5b89\u88c5\u5305\uff0c\u5e76\u89e3\u538b\uff0c\u5728\u89e3\u538b\u7684\u7684\u76ee\u5f55\u4e0b\u63d0\u4f9b\u4e86 jx \u4e8c\u8fdb\u5236\u6587\u4ef6\u547d\u4ee4\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4e3b\u8981\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\u3002 \u6b65\u9aa41\u3001\u4e0b\u8f7d \u00b6 \u4e0b\u8f7d JXcore \u5b89\u88c5\u5305 https://github.com/jxcore/jxcore-release \uff0c\u4f60\u9700\u8981\u6839\u636e\u4f60\u81ea\u5df1\u7684\u7cfb\u7edf\u73af\u5883\u6765\u4e0b\u8f7d\u5b89\u88c5\u5305\u3002 1\u3001Window \u5e73\u53f0\u4e0b\u8f7d\uff1a Download(Windows x64 (V8)) \u3002 2\u3001Linux/OSX \u5b89\u88c5\u547d\u4ee4\uff1a $ curl https://raw.githubusercontent.com/jxcore/jxcore/master/tools/jx_install.sh | bash \u5982\u679c\u6743\u9650\u4e0d\u8db3\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a $ curl https://raw.githubusercontent.com/jxcore/jxcore/master/tools/jx_install.sh | sudo bash \u4ee5\u4e0a\u6b65\u9aa4\u5982\u679c\u64cd\u4f5c\u6b63\u786e\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff0c\u4f1a\u8f93\u51fa\u7248\u672c\u53f7\u4fe1\u606f\uff1a $ jx --version v0.10.32 \u5305\u4ee3\u7801 \u00b6 \u4f8b\u5982\uff0c\u6211\u4eec\u7684 Node.js \u9879\u76ee\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u6587\u4ef6\uff0c\u5176\u4e2d index.js \u662f\u4e3b\u6587\u4ef6\uff1a drwxr-xr-x 2 root root 4096 Nov 13 12:42 images -rwxr-xr-x 1 root root 30457 Mar 6 12:19 index.htm -rwxr-xr-x 1 root root 30452 Mar 1 12:54 index.js drwxr-xr-x 23 root root 4096 Jan 15 03:48 node_modules drwxr-xr-x 2 root root 4096 Mar 21 06:10 scripts drwxr-xr-x 2 root root 4096 Feb 15 11:56 style \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 jx \u547d\u4ee4\u6253\u5305\u4ee5\u4e0a\u9879\u76ee\uff0c\u5e76\u6307\u5b9a index.js \u4e3a Node.js \u9879\u76ee\u7684\u4e3b\u6587\u4ef6\uff1a $ jx package index.js index \u4ee5\u4e0a\u547d\u4ee4\u6267\u884c\u6210\u529f\uff0c\u4f1a\u751f\u6210\u4ee5\u4e0b\u4e24\u4e2a\u6587\u4ef6\uff1a index.jxp \u8fd9\u662f\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u9700\u8981\u7f16\u8bd1\u7684\u5b8c\u6574\u9879\u76ee\u4fe1\u606f\u3002 index.jx \u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u5305\u4fe1\u606f\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u8fd0\u884c\u5728\u5ba2\u6237\u7aef\u4e0a\u3002 \u8f7d\u5165 JX \u6587\u4ef6 \u00b6 Node.js \u7684\u9879\u76ee\u8fd0\u884c\uff1a $ node index.js command_line_arguments \u4f7f\u7528 JXcore \u7f16\u8bd1\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u6267\u884c\u751f\u6210\u7684 jx \u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a $ jx index.jx command_line_arguments \u66f4\u591a JXcore \u5b89\u88c5\u53c2\u8003\uff1a https://github.com/jxcore/jxcore/blob/master/doc/INSTALLATION.md \u3002 \u66f4\u591a JXcore \u529f\u80fd\u7279\u6027\u4f60\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\uff1a https://github.com/jxcore/jxcore \u3002","title":"23-Node.js JXcore \u6253\u5305"},{"location":"nodejs/23-Node.js%20JXcore%20%E6%89%93%E5%8C%85/#nodejs-jxcore","text":"Node.js \u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u3001\u8de8\u5e73\u53f0\u7684\u3001\u7528\u4e8e\u670d\u52a1\u5668\u7aef\u548c\u7f51\u7edc\u5e94\u7528\u7684\u8fd0\u884c\u73af\u5883\u3002 JXcore \u662f\u4e00\u4e2a\u652f\u6301\u591a\u7ebf\u7a0b\u7684 Node.js \u53d1\u884c\u7248\u672c\uff0c\u57fa\u672c\u4e0d\u9700\u8981\u5bf9\u4f60\u73b0\u6709\u7684\u4ee3\u7801\u505a\u4efb\u4f55\u6539\u52a8\u5c31\u53ef\u4ee5\u76f4\u63a5\u7ebf\u7a0b\u5b89\u5168\u5730\u4ee5\u591a\u7ebf\u7a0b\u8fd0\u884c\u3002 \u8fd9\u7bc7\u6587\u7ae0\u4e3b\u8981\u662f\u8981\u5411\u5927\u5bb6\u4ecb\u7ecd JXcore \u7684\u6253\u5305\u529f\u80fd\u3002","title":"Node.js JXcore \u6253\u5305"},{"location":"nodejs/23-Node.js%20JXcore%20%E6%89%93%E5%8C%85/#jxcore","text":"\u4e0b\u8f7d JXcore \u5b89\u88c5\u5305\uff0c\u5e76\u89e3\u538b\uff0c\u5728\u89e3\u538b\u7684\u7684\u76ee\u5f55\u4e0b\u63d0\u4f9b\u4e86 jx \u4e8c\u8fdb\u5236\u6587\u4ef6\u547d\u4ee4\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u4e3b\u8981\u4f7f\u7528\u8fd9\u4e2a\u547d\u4ee4\u3002","title":"JXcore \u5b89\u88c5"},{"location":"nodejs/23-Node.js%20JXcore%20%E6%89%93%E5%8C%85/#1","text":"\u4e0b\u8f7d JXcore \u5b89\u88c5\u5305 https://github.com/jxcore/jxcore-release \uff0c\u4f60\u9700\u8981\u6839\u636e\u4f60\u81ea\u5df1\u7684\u7cfb\u7edf\u73af\u5883\u6765\u4e0b\u8f7d\u5b89\u88c5\u5305\u3002 1\u3001Window \u5e73\u53f0\u4e0b\u8f7d\uff1a Download(Windows x64 (V8)) \u3002 2\u3001Linux/OSX \u5b89\u88c5\u547d\u4ee4\uff1a $ curl https://raw.githubusercontent.com/jxcore/jxcore/master/tools/jx_install.sh | bash \u5982\u679c\u6743\u9650\u4e0d\u8db3\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a $ curl https://raw.githubusercontent.com/jxcore/jxcore/master/tools/jx_install.sh | sudo bash \u4ee5\u4e0a\u6b65\u9aa4\u5982\u679c\u64cd\u4f5c\u6b63\u786e\uff0c\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff0c\u4f1a\u8f93\u51fa\u7248\u672c\u53f7\u4fe1\u606f\uff1a $ jx --version v0.10.32","title":"\u6b65\u9aa41\u3001\u4e0b\u8f7d"},{"location":"nodejs/23-Node.js%20JXcore%20%E6%89%93%E5%8C%85/#_1","text":"\u4f8b\u5982\uff0c\u6211\u4eec\u7684 Node.js \u9879\u76ee\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u6587\u4ef6\uff0c\u5176\u4e2d index.js \u662f\u4e3b\u6587\u4ef6\uff1a drwxr-xr-x 2 root root 4096 Nov 13 12:42 images -rwxr-xr-x 1 root root 30457 Mar 6 12:19 index.htm -rwxr-xr-x 1 root root 30452 Mar 1 12:54 index.js drwxr-xr-x 23 root root 4096 Jan 15 03:48 node_modules drwxr-xr-x 2 root root 4096 Mar 21 06:10 scripts drwxr-xr-x 2 root root 4096 Feb 15 11:56 style \u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528 jx \u547d\u4ee4\u6253\u5305\u4ee5\u4e0a\u9879\u76ee\uff0c\u5e76\u6307\u5b9a index.js \u4e3a Node.js \u9879\u76ee\u7684\u4e3b\u6587\u4ef6\uff1a $ jx package index.js index \u4ee5\u4e0a\u547d\u4ee4\u6267\u884c\u6210\u529f\uff0c\u4f1a\u751f\u6210\u4ee5\u4e0b\u4e24\u4e2a\u6587\u4ef6\uff1a index.jxp \u8fd9\u662f\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u6587\u4ef6\uff0c\u5305\u542b\u4e86\u9700\u8981\u7f16\u8bd1\u7684\u5b8c\u6574\u9879\u76ee\u4fe1\u606f\u3002 index.jx \u8fd9\u662f\u4e00\u4e2a\u5b8c\u6574\u5305\u4fe1\u606f\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u53ef\u8fd0\u884c\u5728\u5ba2\u6237\u7aef\u4e0a\u3002","title":"\u5305\u4ee3\u7801"},{"location":"nodejs/23-Node.js%20JXcore%20%E6%89%93%E5%8C%85/#jx","text":"Node.js \u7684\u9879\u76ee\u8fd0\u884c\uff1a $ node index.js command_line_arguments \u4f7f\u7528 JXcore \u7f16\u8bd1\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u6267\u884c\u751f\u6210\u7684 jx \u4e8c\u8fdb\u5236\u6587\u4ef6\uff1a $ jx index.jx command_line_arguments \u66f4\u591a JXcore \u5b89\u88c5\u53c2\u8003\uff1a https://github.com/jxcore/jxcore/blob/master/doc/INSTALLATION.md \u3002 \u66f4\u591a JXcore \u529f\u80fd\u7279\u6027\u4f60\u53ef\u4ee5\u53c2\u8003\u5b98\u7f51\uff1a https://github.com/jxcore/jxcore \u3002","title":"\u8f7d\u5165 JX \u6587\u4ef6"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/","text":"Node.js \u8fde\u63a5 MySQL \u00b6 \u672c\u7ae0\u8282\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Node.js \u6765\u8fde\u63a5 MySQL\uff0c\u5e76\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c\u3002 \u5982\u679c\u4f60\u8fd8\u6ca1\u6709 MySQL \u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u6559\u7a0b\uff1a MySQL \u6559\u7a0b \u3002 \u672c\u6559\u7a0b\u4f7f\u7528\u5230\u7684 Websites \u8868 SQL \u6587\u4ef6\uff1a websites.sql \u3002 \u5b89\u88c5\u9a71\u52a8 \u00b6 \u672c\u6559\u7a0b\u4f7f\u7528\u4e86 \u6dd8\u5b9d\u5b9a\u5236\u7684 cnpm \u547d\u4ee4 \u8fdb\u884c\u5b89\u88c5\uff1a $ cnpm install mysql \u8fde\u63a5\u6570\u636e\u5e93 \u00b6 \u5728\u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\u6839\u636e\u4f60\u7684\u5b9e\u9645\u914d\u7f6e\u4fee\u6539\u6570\u636e\u5e93\u7528\u6237\u540d\u3001\u53ca\u5bc6\u7801\u53ca\u6570\u636e\u5e93\u540d\uff1a test.js \u6587\u4ef6\u4ee3\u7801\uff1a \u00b6 var mysql = require('mysql'); var connection = mysql.createConnection({ host : 'localhost', user : 'root', password : '123456', database : 'test' }); connection.connect(); connection.query('SELECT 1 + 1 AS solution', function (error, results, fields) { if (error) throw error; console.log('The solution is: ', results[0].solution); }); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $ node test.js The solution is: 2 \u6570\u636e\u5e93\u8fde\u63a5\u53c2\u6570\u8bf4\u660e\uff1a \u00b6 \u53c2\u6570 \u63cf\u8ff0 host \u4e3b\u673a\u5730\u5740 \uff08\u9ed8\u8ba4\uff1alocalhost\uff09 user \u7528\u6237\u540d password \u5bc6\u7801 port \u7aef\u53e3\u53f7 \uff08\u9ed8\u8ba4\uff1a3306\uff09 database \u6570\u636e\u5e93\u540d charset \u8fde\u63a5\u5b57\u7b26\u96c6\uff08\u9ed8\u8ba4\uff1a'UTF8_GENERAL_CI'\uff0c\u6ce8\u610f\u5b57\u7b26\u96c6\u7684\u5b57\u6bcd\u90fd\u8981\u5927\u5199\uff09 localAddress \u6b64IP\u7528\u4e8eTCP\u8fde\u63a5\uff08\u53ef\u9009\uff09 socketPath \u8fde\u63a5\u5230unix\u57df\u8def\u5f84\uff0c\u5f53\u4f7f\u7528 host \u548c port \u65f6\u4f1a\u88ab\u5ffd\u7565 timezone \u65f6\u533a\uff08\u9ed8\u8ba4\uff1a'local'\uff09 connectTimeout \u8fde\u63a5\u8d85\u65f6\uff08\u9ed8\u8ba4\uff1a\u4e0d\u9650\u5236\uff1b\u5355\u4f4d\uff1a\u6beb\u79d2\uff09 stringifyObjects \u662f\u5426\u5e8f\u5217\u5316\u5bf9\u8c61 typeCast \u662f\u5426\u5c06\u5217\u503c\u8f6c\u5316\u4e3a\u672c\u5730JavaScript\u7c7b\u578b\u503c \uff08\u9ed8\u8ba4\uff1atrue\uff09 queryFormat \u81ea\u5b9a\u4e49query\u8bed\u53e5\u683c\u5f0f\u5316\u65b9\u6cd5 supportBigNumbers \u6570\u636e\u5e93\u652f\u6301bigint\u6216decimal\u7c7b\u578b\u5217\u65f6\uff0c\u9700\u8981\u8bbe\u6b64option\u4e3atrue \uff08\u9ed8\u8ba4\uff1afalse\uff09 bigNumberStrings supportBigNumbers\u548cbigNumberStrings\u542f\u7528 \u5f3a\u5236bigint\u6216decimal\u5217\u4ee5JavaScript\u5b57\u7b26\u4e32\u7c7b\u578b\u8fd4\u56de\uff08\u9ed8\u8ba4\uff1afalse\uff09 dateStrings \u5f3a\u5236timestamp,datetime,data\u7c7b\u578b\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u8fd4\u56de\uff0c\u800c\u4e0d\u662fJavaScript Date\u7c7b\u578b\uff08\u9ed8\u8ba4\uff1afalse\uff09 debug \u5f00\u542f\u8c03\u8bd5\uff08\u9ed8\u8ba4\uff1afalse\uff09 multipleStatements \u662f\u5426\u8bb8\u4e00\u4e2aquery\u4e2d\u6709\u591a\u4e2aMySQL\u8bed\u53e5 \uff08\u9ed8\u8ba4\uff1afalse\uff09 flags \u7528\u4e8e\u4fee\u6539\u8fde\u63a5\u6807\u5fd7 ssl \u4f7f\u7528ssl\u53c2\u6570\uff08\u4e0ecrypto.createCredenitals\u53c2\u6570\u683c\u5f0f\u4e00\u81f3\uff09\u6216\u4e00\u4e2a\u5305\u542bssl\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\u7684\u5b57\u7b26\u4e32\uff0c\u76ee\u524d\u53ea\u6346\u7ed1Amazon RDS\u7684\u914d\u7f6e\u6587\u4ef6 \u66f4\u591a\u8bf4\u660e\u53ef\u53c2\u89c1\uff1a https://github.com/mysqljs/mysql \u6570\u636e\u5e93\u64cd\u4f5c( CURD ) \u00b6 \u5728\u8fdb\u884c\u6570\u636e\u5e93\u64cd\u4f5c\u524d\uff0c\u4f60\u9700\u8981\u5c06\u672c\u7ad9\u63d0\u4f9b\u7684 Websites \u8868 SQL \u6587\u4ef6 websites.sql \u5bfc\u5165\u5230\u4f60\u7684 MySQL \u6570\u636e\u5e93\u4e2d\u3002 \u672c\u6559\u7a0b\u6d4b\u8bd5\u7684 MySQL \u7528\u6237\u540d\u4e3a root\uff0c\u5bc6\u7801\u4e3a 123456\uff0c\u6570\u636e\u5e93\u4e3a test\uff0c\u4f60\u9700\u8981\u6839\u636e\u81ea\u5df1\u914d\u7f6e\u60c5\u51b5\u4fee\u6539\u3002 \u67e5\u8be2\u6570\u636e \u00b6 \u5c06\u4e0a\u9762\u6211\u4eec\u63d0\u4f9b\u7684 SQL \u6587\u4ef6\u5bfc\u5165\u6570\u636e\u5e93\u540e\uff0c\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801\u5373\u53ef\u67e5\u8be2\u51fa\u6570\u636e\uff1a \u67e5\u8be2\u6570\u636e \u00b6 var mysql = require('mysql'); var connection = mysql.createConnection({ host : 'localhost', user : 'root', password : '123456', port: '3306', database: 'test' }); connection.connect(); var sql = 'SELECT * FROM websites'; //\u67e5 connection.query(sql,function (err, result) { if(err){ console.log('[SELECT ERROR] - ',err.message); return; } console.log('--------------------------SELECT----------------------------'); console.log(result); console.log('------------------------------------------------------------\\n\\n'); }); connection.end(); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a $ node test.js --------------------------SELECT---------------------------- [ RowDataPacket { id: 1, name: 'Google', url: 'https://www.google.cm/', alexa: 1, country: 'USA' }, RowDataPacket { id: 2, name: '\u6dd8\u5b9d', url: 'https://www.taobao.com/', alexa: 13, country: 'CN' }, RowDataPacket { id: 3, name: '\u83dc\u9e1f\u6559\u7a0b', url: 'http://www.runoob.com/', alexa: 4689, country: 'CN' }, RowDataPacket { id: 4, name: '\u5fae\u535a', url: 'http://weibo.com/', alexa: 20, country: 'CN' }, RowDataPacket { id: 5, name: 'Facebook', url: 'https://www.facebook.com/', alexa: 3, country: 'USA' } ] ------------------------------------------------------------ \u63d2\u5165\u6570\u636e \u00b6 \u6211\u4eec\u53ef\u4ee5\u5411\u6570\u636e\u8868 websties \u63d2\u5165\u6570\u636e\uff1a \u63d2\u5165\u6570\u636e \u00b6 var mysql = require('mysql'); var connection = mysql.createConnection({ host : 'localhost', user : 'root', password : '123456', port: '3306', database: 'test' }); connection.connect(); var addSql = 'INSERT INTO websites(Id,name,url,alexa,country) VALUES(0,?,?,?,?)'; var addSqlParams = ['\u83dc\u9e1f\u5de5\u5177', ' https://c.runoob.com','23453 ', 'CN']; //\u589e connection.query(addSql,addSqlParams,function (err, result) { if(err){ console.log('[INSERT ERROR] - ',err.message); return; } console.log('--------------------------INSERT----------------------------'); //console.log('INSERT ID:',result.insertId); console.log('INSERT ID:',result); console.log('-----------------------------------------------------------------\\n\\n'); }); connection.end(); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a $ node test.js --------------------------INSERT---------------------------- INSERT ID: OkPacket { fieldCount: 0, affectedRows: 1, insertId: 6, serverStatus: 2, warningCount: 0, message: '', protocol41: true, changedRows: 0 } ----------------------------------------------------------------- \u6267\u884c\u6210\u529f\u540e\uff0c\u67e5\u770b\u6570\u636e\u8868\uff0c\u5373\u53ef\u4ee5\u770b\u5230\u6dfb\u52a0\u7684\u6570\u636e\uff1a \u66f4\u65b0\u6570\u636e \u00b6 \u6211\u4eec\u4e5f\u53ef\u4ee5\u5bf9\u6570\u636e\u5e93\u7684\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff1a \u66f4\u65b0\u6570\u636e \u00b6 var mysql = require('mysql'); var connection = mysql.createConnection({ host : 'localhost', user : 'root', password : '123456', port: '3306', database: 'test' }); connection.connect(); var modSql = 'UPDATE websites SET name = ?,url = ? WHERE Id = ?'; var modSqlParams = ['\u83dc\u9e1f\u79fb\u52a8\u7ad9', ' https://m.runoob.com',6 ]; //\u6539 connection.query(modSql,modSqlParams,function (err, result) { if(err){ console.log('[UPDATE ERROR] - ',err.message); return; } console.log('--------------------------UPDATE----------------------------'); console.log('UPDATE affectedRows',result.affectedRows); console.log('-----------------------------------------------------------------\\n\\n'); }); connection.end(); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a --------------------------UPDATE---------------------------- UPDATE affectedRows 1 ----------------------------------------------------------------- \u6267\u884c\u6210\u529f\u540e\uff0c\u67e5\u770b\u6570\u636e\u8868\uff0c\u5373\u53ef\u4ee5\u770b\u5230\u66f4\u65b0\u7684\u6570\u636e\uff1a \u5220\u9664\u6570\u636e \u00b6 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u6765\u5220\u9664 id \u4e3a 6 \u7684\u6570\u636e: \u5220\u9664\u6570\u636e \u00b6 var mysql = require('mysql'); var connection = mysql.createConnection({ host : 'localhost', user : 'root', password : '123456', port: '3306', database: 'test' }); connection.connect(); var delSql = 'DELETE FROM websites where id=6'; //\u5220 connection.query(delSql,function (err, result) { if(err){ console.log('[DELETE ERROR] - ',err.message); return; } console.log('--------------------------DELETE----------------------------'); console.log('DELETE affectedRows',result.affectedRows); console.log('-----------------------------------------------------------------\\n\\n'); }); connection.end(); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a --------------------------DELETE---------------------------- DELETE affectedRows 1 ----------------------------------------------------------------- \u6267\u884c\u6210\u529f\u540e\uff0c\u67e5\u770b\u6570\u636e\u8868\uff0c\u5373\u53ef\u4ee5\u770b\u5230 id=6 \u7684\u6570\u636e\u5df2\u88ab\u5220\u9664\uff1a","title":"24-Node.js \u8fde\u63a5 MySQL"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#nodejs-mysql","text":"\u672c\u7ae0\u8282\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Node.js \u6765\u8fde\u63a5 MySQL\uff0c\u5e76\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c\u3002 \u5982\u679c\u4f60\u8fd8\u6ca1\u6709 MySQL \u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u6559\u7a0b\uff1a MySQL \u6559\u7a0b \u3002 \u672c\u6559\u7a0b\u4f7f\u7528\u5230\u7684 Websites \u8868 SQL \u6587\u4ef6\uff1a websites.sql \u3002","title":"Node.js \u8fde\u63a5 MySQL"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#_1","text":"\u672c\u6559\u7a0b\u4f7f\u7528\u4e86 \u6dd8\u5b9d\u5b9a\u5236\u7684 cnpm \u547d\u4ee4 \u8fdb\u884c\u5b89\u88c5\uff1a $ cnpm install mysql","title":"\u5b89\u88c5\u9a71\u52a8"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#_2","text":"\u5728\u4ee5\u4e0b\u5b9e\u4f8b\u4e2d\u6839\u636e\u4f60\u7684\u5b9e\u9645\u914d\u7f6e\u4fee\u6539\u6570\u636e\u5e93\u7528\u6237\u540d\u3001\u53ca\u5bc6\u7801\u53ca\u6570\u636e\u5e93\u540d\uff1a","title":"\u8fde\u63a5\u6570\u636e\u5e93"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#testjs","text":"var mysql = require('mysql'); var connection = mysql.createConnection({ host : 'localhost', user : 'root', password : '123456', database : 'test' }); connection.connect(); connection.query('SELECT 1 + 1 AS solution', function (error, results, fields) { if (error) throw error; console.log('The solution is: ', results[0].solution); }); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a $ node test.js The solution is: 2","title":"test.js \u6587\u4ef6\u4ee3\u7801\uff1a"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#_3","text":"\u53c2\u6570 \u63cf\u8ff0 host \u4e3b\u673a\u5730\u5740 \uff08\u9ed8\u8ba4\uff1alocalhost\uff09 user \u7528\u6237\u540d password \u5bc6\u7801 port \u7aef\u53e3\u53f7 \uff08\u9ed8\u8ba4\uff1a3306\uff09 database \u6570\u636e\u5e93\u540d charset \u8fde\u63a5\u5b57\u7b26\u96c6\uff08\u9ed8\u8ba4\uff1a'UTF8_GENERAL_CI'\uff0c\u6ce8\u610f\u5b57\u7b26\u96c6\u7684\u5b57\u6bcd\u90fd\u8981\u5927\u5199\uff09 localAddress \u6b64IP\u7528\u4e8eTCP\u8fde\u63a5\uff08\u53ef\u9009\uff09 socketPath \u8fde\u63a5\u5230unix\u57df\u8def\u5f84\uff0c\u5f53\u4f7f\u7528 host \u548c port \u65f6\u4f1a\u88ab\u5ffd\u7565 timezone \u65f6\u533a\uff08\u9ed8\u8ba4\uff1a'local'\uff09 connectTimeout \u8fde\u63a5\u8d85\u65f6\uff08\u9ed8\u8ba4\uff1a\u4e0d\u9650\u5236\uff1b\u5355\u4f4d\uff1a\u6beb\u79d2\uff09 stringifyObjects \u662f\u5426\u5e8f\u5217\u5316\u5bf9\u8c61 typeCast \u662f\u5426\u5c06\u5217\u503c\u8f6c\u5316\u4e3a\u672c\u5730JavaScript\u7c7b\u578b\u503c \uff08\u9ed8\u8ba4\uff1atrue\uff09 queryFormat \u81ea\u5b9a\u4e49query\u8bed\u53e5\u683c\u5f0f\u5316\u65b9\u6cd5 supportBigNumbers \u6570\u636e\u5e93\u652f\u6301bigint\u6216decimal\u7c7b\u578b\u5217\u65f6\uff0c\u9700\u8981\u8bbe\u6b64option\u4e3atrue \uff08\u9ed8\u8ba4\uff1afalse\uff09 bigNumberStrings supportBigNumbers\u548cbigNumberStrings\u542f\u7528 \u5f3a\u5236bigint\u6216decimal\u5217\u4ee5JavaScript\u5b57\u7b26\u4e32\u7c7b\u578b\u8fd4\u56de\uff08\u9ed8\u8ba4\uff1afalse\uff09 dateStrings \u5f3a\u5236timestamp,datetime,data\u7c7b\u578b\u4ee5\u5b57\u7b26\u4e32\u7c7b\u578b\u8fd4\u56de\uff0c\u800c\u4e0d\u662fJavaScript Date\u7c7b\u578b\uff08\u9ed8\u8ba4\uff1afalse\uff09 debug \u5f00\u542f\u8c03\u8bd5\uff08\u9ed8\u8ba4\uff1afalse\uff09 multipleStatements \u662f\u5426\u8bb8\u4e00\u4e2aquery\u4e2d\u6709\u591a\u4e2aMySQL\u8bed\u53e5 \uff08\u9ed8\u8ba4\uff1afalse\uff09 flags \u7528\u4e8e\u4fee\u6539\u8fde\u63a5\u6807\u5fd7 ssl \u4f7f\u7528ssl\u53c2\u6570\uff08\u4e0ecrypto.createCredenitals\u53c2\u6570\u683c\u5f0f\u4e00\u81f3\uff09\u6216\u4e00\u4e2a\u5305\u542bssl\u914d\u7f6e\u6587\u4ef6\u540d\u79f0\u7684\u5b57\u7b26\u4e32\uff0c\u76ee\u524d\u53ea\u6346\u7ed1Amazon RDS\u7684\u914d\u7f6e\u6587\u4ef6 \u66f4\u591a\u8bf4\u660e\u53ef\u53c2\u89c1\uff1a https://github.com/mysqljs/mysql","title":"\u6570\u636e\u5e93\u8fde\u63a5\u53c2\u6570\u8bf4\u660e\uff1a"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#curd","text":"\u5728\u8fdb\u884c\u6570\u636e\u5e93\u64cd\u4f5c\u524d\uff0c\u4f60\u9700\u8981\u5c06\u672c\u7ad9\u63d0\u4f9b\u7684 Websites \u8868 SQL \u6587\u4ef6 websites.sql \u5bfc\u5165\u5230\u4f60\u7684 MySQL \u6570\u636e\u5e93\u4e2d\u3002 \u672c\u6559\u7a0b\u6d4b\u8bd5\u7684 MySQL \u7528\u6237\u540d\u4e3a root\uff0c\u5bc6\u7801\u4e3a 123456\uff0c\u6570\u636e\u5e93\u4e3a test\uff0c\u4f60\u9700\u8981\u6839\u636e\u81ea\u5df1\u914d\u7f6e\u60c5\u51b5\u4fee\u6539\u3002","title":"\u6570\u636e\u5e93\u64cd\u4f5c( CURD )"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#_4","text":"\u5c06\u4e0a\u9762\u6211\u4eec\u63d0\u4f9b\u7684 SQL \u6587\u4ef6\u5bfc\u5165\u6570\u636e\u5e93\u540e\uff0c\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801\u5373\u53ef\u67e5\u8be2\u51fa\u6570\u636e\uff1a","title":"\u67e5\u8be2\u6570\u636e"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#_5","text":"var mysql = require('mysql'); var connection = mysql.createConnection({ host : 'localhost', user : 'root', password : '123456', port: '3306', database: 'test' }); connection.connect(); var sql = 'SELECT * FROM websites'; //\u67e5 connection.query(sql,function (err, result) { if(err){ console.log('[SELECT ERROR] - ',err.message); return; } console.log('--------------------------SELECT----------------------------'); console.log(result); console.log('------------------------------------------------------------\\n\\n'); }); connection.end(); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a $ node test.js --------------------------SELECT---------------------------- [ RowDataPacket { id: 1, name: 'Google', url: 'https://www.google.cm/', alexa: 1, country: 'USA' }, RowDataPacket { id: 2, name: '\u6dd8\u5b9d', url: 'https://www.taobao.com/', alexa: 13, country: 'CN' }, RowDataPacket { id: 3, name: '\u83dc\u9e1f\u6559\u7a0b', url: 'http://www.runoob.com/', alexa: 4689, country: 'CN' }, RowDataPacket { id: 4, name: '\u5fae\u535a', url: 'http://weibo.com/', alexa: 20, country: 'CN' }, RowDataPacket { id: 5, name: 'Facebook', url: 'https://www.facebook.com/', alexa: 3, country: 'USA' } ] ------------------------------------------------------------","title":"\u67e5\u8be2\u6570\u636e"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#_6","text":"\u6211\u4eec\u53ef\u4ee5\u5411\u6570\u636e\u8868 websties \u63d2\u5165\u6570\u636e\uff1a","title":"\u63d2\u5165\u6570\u636e"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#_7","text":"var mysql = require('mysql'); var connection = mysql.createConnection({ host : 'localhost', user : 'root', password : '123456', port: '3306', database: 'test' }); connection.connect(); var addSql = 'INSERT INTO websites(Id,name,url,alexa,country) VALUES(0,?,?,?,?)'; var addSqlParams = ['\u83dc\u9e1f\u5de5\u5177', ' https://c.runoob.com','23453 ', 'CN']; //\u589e connection.query(addSql,addSqlParams,function (err, result) { if(err){ console.log('[INSERT ERROR] - ',err.message); return; } console.log('--------------------------INSERT----------------------------'); //console.log('INSERT ID:',result.insertId); console.log('INSERT ID:',result); console.log('-----------------------------------------------------------------\\n\\n'); }); connection.end(); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a $ node test.js --------------------------INSERT---------------------------- INSERT ID: OkPacket { fieldCount: 0, affectedRows: 1, insertId: 6, serverStatus: 2, warningCount: 0, message: '', protocol41: true, changedRows: 0 } ----------------------------------------------------------------- \u6267\u884c\u6210\u529f\u540e\uff0c\u67e5\u770b\u6570\u636e\u8868\uff0c\u5373\u53ef\u4ee5\u770b\u5230\u6dfb\u52a0\u7684\u6570\u636e\uff1a","title":"\u63d2\u5165\u6570\u636e"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#_8","text":"\u6211\u4eec\u4e5f\u53ef\u4ee5\u5bf9\u6570\u636e\u5e93\u7684\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff1a","title":"\u66f4\u65b0\u6570\u636e"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#_9","text":"var mysql = require('mysql'); var connection = mysql.createConnection({ host : 'localhost', user : 'root', password : '123456', port: '3306', database: 'test' }); connection.connect(); var modSql = 'UPDATE websites SET name = ?,url = ? WHERE Id = ?'; var modSqlParams = ['\u83dc\u9e1f\u79fb\u52a8\u7ad9', ' https://m.runoob.com',6 ]; //\u6539 connection.query(modSql,modSqlParams,function (err, result) { if(err){ console.log('[UPDATE ERROR] - ',err.message); return; } console.log('--------------------------UPDATE----------------------------'); console.log('UPDATE affectedRows',result.affectedRows); console.log('-----------------------------------------------------------------\\n\\n'); }); connection.end(); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a --------------------------UPDATE---------------------------- UPDATE affectedRows 1 ----------------------------------------------------------------- \u6267\u884c\u6210\u529f\u540e\uff0c\u67e5\u770b\u6570\u636e\u8868\uff0c\u5373\u53ef\u4ee5\u770b\u5230\u66f4\u65b0\u7684\u6570\u636e\uff1a","title":"\u66f4\u65b0\u6570\u636e"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#_10","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u6765\u5220\u9664 id \u4e3a 6 \u7684\u6570\u636e:","title":"\u5220\u9664\u6570\u636e"},{"location":"nodejs/24-Node.js%20%E8%BF%9E%E6%8E%A5%20MySQL/#_11","text":"var mysql = require('mysql'); var connection = mysql.createConnection({ host : 'localhost', user : 'root', password : '123456', port: '3306', database: 'test' }); connection.connect(); var delSql = 'DELETE FROM websites where id=6'; //\u5220 connection.query(delSql,function (err, result) { if(err){ console.log('[DELETE ERROR] - ',err.message); return; } console.log('--------------------------DELETE----------------------------'); console.log('DELETE affectedRows',result.affectedRows); console.log('-----------------------------------------------------------------\\n\\n'); }); connection.end(); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a --------------------------DELETE---------------------------- DELETE affectedRows 1 ----------------------------------------------------------------- \u6267\u884c\u6210\u529f\u540e\uff0c\u67e5\u770b\u6570\u636e\u8868\uff0c\u5373\u53ef\u4ee5\u770b\u5230 id=6 \u7684\u6570\u636e\u5df2\u88ab\u5220\u9664\uff1a","title":"\u5220\u9664\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/","text":"Node.js \u8fde\u63a5 MongoDB \u00b6 MongoDB\u662f\u4e00\u79cd\u6587\u6863\u5bfc\u5411\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u7531C++\u64b0\u5199\u800c\u6210\u3002 \u672c\u7ae0\u8282\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Node.js \u6765\u8fde\u63a5 MongoDB\uff0c\u5e76\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c\u3002 \u5982\u679c\u4f60\u8fd8\u6ca1\u6709 MongoDB \u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u6559\u7a0b\uff1a MongoDB \u6559\u7a0b \u3002 \u5b89\u88c5\u9a71\u52a8 \u00b6 \u672c\u6559\u7a0b\u4f7f\u7528\u4e86 \u6dd8\u5b9d\u5b9a\u5236\u7684 cnpm \u547d\u4ee4 \u8fdb\u884c\u5b89\u88c5\uff1a $ cnpm install mongodb \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5b9e\u73b0\u589e\u5220\u6539\u67e5\u529f\u80fd\u3002 \u521b\u5efa\u6570\u636e\u5e93 \u00b6 \u8981\u5728 MongoDB \u4e2d\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a MongoClient \u5bf9\u8c61\uff0c\u7136\u540e\u914d\u7f6e\u597d\u6307\u5b9a\u7684 URL \u548c \u7aef\u53e3\u53f7\u3002 \u5982\u679c\u6570\u636e\u5e93\u4e0d\u5b58\u5728\uff0cMongoDB \u5c06\u521b\u5efa\u6570\u636e\u5e93\u5e76\u5efa\u7acb\u8fde\u63a5\u3002 \u521b\u5efa\u8fde\u63a5 \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/runoob\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; console.log(\"\u6570\u636e\u5e93\u5df2\u521b\u5efa!\"); db.close(); }); \u521b\u5efa\u96c6\u5408 \u00b6 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 createCollection() \u65b9\u6cd5\u6765\u521b\u5efa\u96c6\u5408\uff1a \u521b\u5efa\u96c6\u5408 \u00b6 var MongoClient = require('mongodb').MongoClient; var url = 'mongodb://localhost:27017/runoob'; MongoClient.connect(url, { useNewUrlParser: true }, function (err, db) { if (err) throw err; console.log('\u6570\u636e\u5e93\u5df2\u521b\u5efa'); var dbase = db.db(\"runoob\"); dbase.createCollection('site', function (err, res) { if (err) throw err; console.log(\"\u521b\u5efa\u96c6\u5408!\"); db.close(); }); }); \u6570\u636e\u5e93\u64cd\u4f5c( CURD ) \u00b6 \u4e0e MySQL \u4e0d\u540c\u7684\u662f MongoDB \u4f1a\u81ea\u52a8\u521b\u5efa\u6570\u636e\u5e93\u548c\u96c6\u5408\uff0c\u6240\u4ee5\u4f7f\u7528\u524d\u6211\u4eec\u4e0d\u9700\u8981\u624b\u52a8\u53bb\u521b\u5efa\u3002 \u63d2\u5165\u6570\u636e \u00b6 \u4ee5\u4e0b\u5b9e\u4f8b\u6211\u4eec\u8fde\u63a5\u6570\u636e\u5e93 runoob \u7684 site \u8868\uff0c\u5e76\u63d2\u5165\u4e00\u6761\u6570\u636e\u6761\u6570\u636e\uff0c\u4f7f\u7528 insertOne() \uff1a \u63d2\u5165\u4e00\u6761\u6570\u636e \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var myobj = { name: \"\u83dc\u9e1f\u6559\u7a0b\", url: \" www.runoob \" }; dbo.collection(\"site\").insertOne(myobj, function(err, res) { if (err) throw err; console.log(\"\u6587\u6863\u63d2\u5165\u6210\u529f\"); db.close(); }); }); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a $ node test.js \u6587\u6863\u63d2\u5165\u6210\u529f \u4ece\u8f93\u51fa\u7ed3\u679c\u6765\u770b\uff0c\u6570\u636e\u5df2\u63d2\u5165\u6210\u529f\u3002 \u6211\u4eec\u4e5f\u53ef\u4ee5\u6253\u5f00 MongoDB \u7684\u5ba2\u6237\u7aef\u67e5\u770b\u6570\u636e\uff0c\u5982\uff1a > show dbs runoob 0.000GB # \u81ea\u52a8\u521b\u5efa\u4e86 runoob \u6570\u636e\u5e93 > show tables site # \u81ea\u52a8\u521b\u5efa\u4e86 site \u96c6\u5408\uff08\u6570\u636e\u8868\uff09 > db.site.find() { \"_id\" : ObjectId(\"5a794e36763eb821b24db854\"), \"name\" : \"\u83dc\u9e1f\u6559\u7a0b\", \"url\" : \"www.runoob\" } > \u5982\u679c\u8981\u63d2\u5165\u591a\u6761\u6570\u636e\u53ef\u4ee5\u4f7f\u7528 insertMany() \uff1a \u63d2\u5165\u591a\u6761\u6570\u636e \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var myobj = [ { name: '\u83dc\u9e1f\u5de5\u5177', url: ' https://c.runoob.com ', type: 'cn'}, { name: 'Google', url: ' https://www.google.com ', type: 'en'}, { name: 'Facebook', url: ' https://www.google.com ', type: 'en'} ]; dbo.collection(\"site\").insertMany(myobj, function(err, res) { if (err) throw err; console.log(\"\u63d2\u5165\u7684\u6587\u6863\u6570\u91cf\u4e3a: \" + res.insertedCount); db.close(); }); }); res.insertedCount \u4e3a\u63d2\u5165\u7684\u6761\u6570\u3002 \u67e5\u8be2\u6570\u636e \u00b6 \u53ef\u4ee5\u4f7f\u7528 find() \u6765\u67e5\u627e\u6570\u636e, find() \u53ef\u4ee5\u8fd4\u56de\u5339\u914d\u6761\u4ef6\u7684\u6240\u6709\u6570\u636e\u3002 \u5982\u679c\u672a\u6307\u5b9a\u6761\u4ef6\uff0cfind() \u8fd4\u56de\u96c6\u5408\u4e2d\u7684\u6240\u6709\u6570\u636e\u3002 find() \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); dbo.collection(\"site\"). find({}).toArray(function(err, result) { // \u8fd4\u56de\u96c6\u5408\u4e2d\u6240\u6709\u6570\u636e if (err) throw err; console.log(result); db.close(); }); }); \u4ee5\u4e0b\u5b9e\u4f8b\u68c0\u7d22 name \u4e3a \"\u83dc\u9e1f\u6559\u7a0b\" \u7684\u5b9e\u4f8b\uff1a \u67e5\u8be2\u6307\u5b9a\u6761\u4ef6\u7684\u6570\u636e \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var whereStr = {\"name\":'\u83dc\u9e1f\u6559\u7a0b'}; // \u67e5\u8be2\u6761\u4ef6 dbo.collection(\"site\").find(whereStr).toArray(function(err, result) { if (err) throw err; console.log(result); db.close(); }); }); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a [ { _id: 5a794e36763eb821b24db854, name: '\u83dc\u9e1f\u6559\u7a0b', url: 'www.runoob' } ] \u66f4\u65b0\u6570\u636e \u00b6 \u6211\u4eec\u4e5f\u53ef\u4ee5\u5bf9\u6570\u636e\u5e93\u7684\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u5c06 name \u4e3a \"\u83dc\u9e1f\u6559\u7a0b\" \u7684 url \u6539\u4e3a https://www.runoob.com \uff1a \u66f4\u65b0\u4e00\u6761\u6570\u636e \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var whereStr = {\"name\":'\u83dc\u9e1f\u6559\u7a0b'}; // \u67e5\u8be2\u6761\u4ef6 var updateStr = {$set: { \"url\" : \" https://www.runoob.com \" }}; dbo.collection(\"site\").updateOne(whereStr, updateStr, function(err, res) { if (err) throw err; console.log(\"\u6587\u6863\u66f4\u65b0\u6210\u529f\"); db.close(); }); }); \u6267\u884c\u6210\u529f\u540e\uff0c\u8fdb\u5165 mongo \u7ba1\u7406\u5de5\u5177\u67e5\u770b\u6570\u636e\u5df2\u4fee\u6539\uff1a > db.site.find().pretty() { \"_id\" : ObjectId(\"5a794e36763eb821b24db854\"), \"name\" : \"\u83dc\u9e1f\u6559\u7a0b\", \"url\" : \"https://www.runoob.com\" // \u5df2\u4fee\u6539\u4e3a https } \u5982\u679c\u8981\u66f4\u65b0\u6240\u6709\u7b26\u5408\u6761\u7684\u6587\u6863\u6570\u636e\u53ef\u4ee5\u4f7f\u7528 updateMany() \uff1a \u66f4\u65b0\u591a\u6761\u6570\u636e \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var whereStr = {\"type\":'en'}; // \u67e5\u8be2\u6761\u4ef6 var updateStr = {$set: { \"url\" : \" https://www.runoob.com \" }}; dbo.collection(\"site\").updateMany(whereStr, updateStr, function(err, res) { if (err) throw err; console.log(res.result.nModified + \" \u6761\u6587\u6863\u88ab\u66f4\u65b0\"); db.close(); }); }); result.nModified \u4e3a\u66f4\u65b0\u7684\u6761\u6570\u3002 \u5220\u9664\u6570\u636e \u00b6 \u4ee5\u4e0b\u5b9e\u4f8b\u5c06 name \u4e3a \"\u83dc\u9e1f\u6559\u7a0b\" \u7684\u6570\u636e\u5220\u9664 : \u5220\u9664\u4e00\u6761\u6570\u636e \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var whereStr = {\"name\":'\u83dc\u9e1f\u6559\u7a0b'}; // \u67e5\u8be2\u6761\u4ef6 dbo.collection(\"site\").deleteOne(whereStr, function(err, obj) { if (err) throw err; console.log(\"\u6587\u6863\u5220\u9664\u6210\u529f\"); db.close(); }); }); \u6267\u884c\u6210\u529f\u540e\uff0c\u8fdb\u5165 mongo \u7ba1\u7406\u5de5\u5177\u67e5\u770b\u6570\u636e\u5df2\u5220\u9664\uff1a > db.site.find() > \u5982\u679c\u8981\u5220\u9664\u591a\u6761\u8bed\u53e5\u53ef\u4ee5\u4f7f\u7528 deleteMany() \u65b9\u6cd5 \u4ee5\u4e0b\u5b9e\u4f8b\u5c06 type \u4e3a en \u7684\u6240\u6709\u6570\u636e\u5220\u9664 : \u5220\u9664\u591a\u6761\u6570\u636e \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var whereStr = { type: \"en\" }; // \u67e5\u8be2\u6761\u4ef6 dbo.collection(\"site\").deleteMany(whereStr, function(err, obj) { if (err) throw err; console.log(obj.result.n + \" \u6761\u6587\u6863\u88ab\u5220\u9664\"); db.close(); }); }); obj.result.n \u5220\u9664\u7684\u6761\u6570\u3002 \u6392\u5e8f \u00b6 \u6392\u5e8f \u4f7f\u7528 sort() \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u89c4\u5b9a\u662f\u5347\u5e8f(1)\u8fd8\u662f\u964d\u5e8f(-1)\u3002 \u4f8b\u5982\uff1a { type: 1 } // \u6309 type \u5b57\u6bb5\u5347\u5e8f { type: -1 } // \u6309 type \u5b57\u6bb5\u964d\u5e8f \u6309 type \u5347\u5e8f\u6392\u5217: \u6392\u5e8f \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var mysort = { type: 1 }; dbo.collection(\"site\").find().sort(mysort).toArray(function(err, result) { if (err) throw err; console.log(result); db.close(); }); }); \u67e5\u8be2\u5206\u9875 \u00b6 \u5982\u679c\u8981\u8bbe\u7f6e\u6307\u5b9a\u7684\u8fd4\u56de\u6761\u6570\u53ef\u4ee5\u4f7f\u7528 limit() \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u6307\u5b9a\u4e86\u8fd4\u56de\u7684\u6761\u6570\u3002 limit()\uff1a\u8bfb\u53d6\u4e24\u6761\u6570\u636e \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); dbo.collection(\"site\").find().limit(2).toArray(function(err, result) { if (err) throw err; console.log(result); db.close(); }); }); \u5982\u679c\u8981\u6307\u5b9a\u8df3\u8fc7\u7684\u6761\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 skip() \u65b9\u6cd5\u3002 skip(): \u8df3\u8fc7\u524d\u9762\u4e24\u6761\u6570\u636e\uff0c\u8bfb\u53d6\u4e24\u6761\u6570\u636e \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); dbo.collection(\"site\").find().skip(2).limit(2).toArray(function(err, result) { if (err) throw err; console.log(result); db.close(); }); }); \u8fde\u63a5\u64cd\u4f5c \u00b6 mongoDB \u4e0d\u662f\u4e00\u4e2a\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 $lookup \u6765\u5b9e\u73b0\u5de6\u8fde\u63a5\u3002 \u4f8b\u5982\u6211\u4eec\u6709\u4e24\u4e2a\u96c6\u5408\u6570\u636e\u5206\u522b\u4e3a\uff1a \u96c6\u54081\uff1aorders [ { _id: 1, product_id: 154, status: 1 } ] \u96c6\u54082\uff1aproducts [ { _id: 154, name: '\u7b14\u8bb0\u672c\u7535\u8111' }, { _id: 155, name: '\u8033\u673a' }, { _id: 156, name: '\u53f0\u5f0f\u7535\u8111' } ] $lookup \u5b9e\u73b0\u5de6\u8fde\u63a5 \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://127.0.0.1:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); dbo.collection('orders').aggregate([ { $lookup: { from: 'products', // \u53f3\u96c6\u5408 localField: 'product_id', // \u5de6\u96c6\u5408 join \u5b57\u6bb5 foreignField: '_id', // \u53f3\u96c6\u5408 join \u5b57\u6bb5 as: 'orderdetails' // \u65b0\u751f\u6210\u5b57\u6bb5\uff08\u7c7b\u578barray\uff09 } } ]).toArray(function(err, res) { if (err) throw err; console.log(JSON.stringify(res)); db.close(); }); }); \u5220\u9664\u96c6\u5408 \u00b6 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 drop() \u65b9\u6cd5\u6765\u5220\u9664\u96c6\u5408\uff1a drop() \u00b6 var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); // \u5220\u9664 test \u96c6\u5408 dbo.collection(\"test\").drop(function(err, delOK) { // \u6267\u884c\u6210\u529f delOK \u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false if (err) throw err; if (delOK) console.log(\"\u96c6\u5408\u5df2\u5220\u9664\"); db.close(); }); });","title":"25-Node.js \u8fde\u63a5 MongoDB"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#nodejs-mongodb","text":"MongoDB\u662f\u4e00\u79cd\u6587\u6863\u5bfc\u5411\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\uff0c\u7531C++\u64b0\u5199\u800c\u6210\u3002 \u672c\u7ae0\u8282\u6211\u4eec\u5c06\u4e3a\u5927\u5bb6\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Node.js \u6765\u8fde\u63a5 MongoDB\uff0c\u5e76\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c\u3002 \u5982\u679c\u4f60\u8fd8\u6ca1\u6709 MongoDB \u7684\u57fa\u672c\u77e5\u8bc6\uff0c\u53ef\u4ee5\u53c2\u8003\u6211\u4eec\u7684\u6559\u7a0b\uff1a MongoDB \u6559\u7a0b \u3002","title":"Node.js \u8fde\u63a5 MongoDB"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_1","text":"\u672c\u6559\u7a0b\u4f7f\u7528\u4e86 \u6dd8\u5b9d\u5b9a\u5236\u7684 cnpm \u547d\u4ee4 \u8fdb\u884c\u5b89\u88c5\uff1a $ cnpm install mongodb \u63a5\u4e0b\u6765\u6211\u4eec\u6765\u5b9e\u73b0\u589e\u5220\u6539\u67e5\u529f\u80fd\u3002","title":"\u5b89\u88c5\u9a71\u52a8"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_2","text":"\u8981\u5728 MongoDB \u4e2d\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\uff0c\u9996\u5148\u6211\u4eec\u9700\u8981\u521b\u5efa\u4e00\u4e2a MongoClient \u5bf9\u8c61\uff0c\u7136\u540e\u914d\u7f6e\u597d\u6307\u5b9a\u7684 URL \u548c \u7aef\u53e3\u53f7\u3002 \u5982\u679c\u6570\u636e\u5e93\u4e0d\u5b58\u5728\uff0cMongoDB \u5c06\u521b\u5efa\u6570\u636e\u5e93\u5e76\u5efa\u7acb\u8fde\u63a5\u3002","title":"\u521b\u5efa\u6570\u636e\u5e93"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_3","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/runoob\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; console.log(\"\u6570\u636e\u5e93\u5df2\u521b\u5efa!\"); db.close(); });","title":"\u521b\u5efa\u8fde\u63a5"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_4","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 createCollection() \u65b9\u6cd5\u6765\u521b\u5efa\u96c6\u5408\uff1a","title":"\u521b\u5efa\u96c6\u5408"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_5","text":"var MongoClient = require('mongodb').MongoClient; var url = 'mongodb://localhost:27017/runoob'; MongoClient.connect(url, { useNewUrlParser: true }, function (err, db) { if (err) throw err; console.log('\u6570\u636e\u5e93\u5df2\u521b\u5efa'); var dbase = db.db(\"runoob\"); dbase.createCollection('site', function (err, res) { if (err) throw err; console.log(\"\u521b\u5efa\u96c6\u5408!\"); db.close(); }); });","title":"\u521b\u5efa\u96c6\u5408"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#curd","text":"\u4e0e MySQL \u4e0d\u540c\u7684\u662f MongoDB \u4f1a\u81ea\u52a8\u521b\u5efa\u6570\u636e\u5e93\u548c\u96c6\u5408\uff0c\u6240\u4ee5\u4f7f\u7528\u524d\u6211\u4eec\u4e0d\u9700\u8981\u624b\u52a8\u53bb\u521b\u5efa\u3002","title":"\u6570\u636e\u5e93\u64cd\u4f5c( CURD )"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_6","text":"\u4ee5\u4e0b\u5b9e\u4f8b\u6211\u4eec\u8fde\u63a5\u6570\u636e\u5e93 runoob \u7684 site \u8868\uff0c\u5e76\u63d2\u5165\u4e00\u6761\u6570\u636e\u6761\u6570\u636e\uff0c\u4f7f\u7528 insertOne() \uff1a","title":"\u63d2\u5165\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_7","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var myobj = { name: \"\u83dc\u9e1f\u6559\u7a0b\", url: \" www.runoob \" }; dbo.collection(\"site\").insertOne(myobj, function(err, res) { if (err) throw err; console.log(\"\u6587\u6863\u63d2\u5165\u6210\u529f\"); db.close(); }); }); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a $ node test.js \u6587\u6863\u63d2\u5165\u6210\u529f \u4ece\u8f93\u51fa\u7ed3\u679c\u6765\u770b\uff0c\u6570\u636e\u5df2\u63d2\u5165\u6210\u529f\u3002 \u6211\u4eec\u4e5f\u53ef\u4ee5\u6253\u5f00 MongoDB \u7684\u5ba2\u6237\u7aef\u67e5\u770b\u6570\u636e\uff0c\u5982\uff1a > show dbs runoob 0.000GB # \u81ea\u52a8\u521b\u5efa\u4e86 runoob \u6570\u636e\u5e93 > show tables site # \u81ea\u52a8\u521b\u5efa\u4e86 site \u96c6\u5408\uff08\u6570\u636e\u8868\uff09 > db.site.find() { \"_id\" : ObjectId(\"5a794e36763eb821b24db854\"), \"name\" : \"\u83dc\u9e1f\u6559\u7a0b\", \"url\" : \"www.runoob\" } > \u5982\u679c\u8981\u63d2\u5165\u591a\u6761\u6570\u636e\u53ef\u4ee5\u4f7f\u7528 insertMany() \uff1a","title":"\u63d2\u5165\u4e00\u6761\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_8","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var myobj = [ { name: '\u83dc\u9e1f\u5de5\u5177', url: ' https://c.runoob.com ', type: 'cn'}, { name: 'Google', url: ' https://www.google.com ', type: 'en'}, { name: 'Facebook', url: ' https://www.google.com ', type: 'en'} ]; dbo.collection(\"site\").insertMany(myobj, function(err, res) { if (err) throw err; console.log(\"\u63d2\u5165\u7684\u6587\u6863\u6570\u91cf\u4e3a: \" + res.insertedCount); db.close(); }); }); res.insertedCount \u4e3a\u63d2\u5165\u7684\u6761\u6570\u3002","title":"\u63d2\u5165\u591a\u6761\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_9","text":"\u53ef\u4ee5\u4f7f\u7528 find() \u6765\u67e5\u627e\u6570\u636e, find() \u53ef\u4ee5\u8fd4\u56de\u5339\u914d\u6761\u4ef6\u7684\u6240\u6709\u6570\u636e\u3002 \u5982\u679c\u672a\u6307\u5b9a\u6761\u4ef6\uff0cfind() \u8fd4\u56de\u96c6\u5408\u4e2d\u7684\u6240\u6709\u6570\u636e\u3002","title":"\u67e5\u8be2\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#find","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); dbo.collection(\"site\"). find({}).toArray(function(err, result) { // \u8fd4\u56de\u96c6\u5408\u4e2d\u6240\u6709\u6570\u636e if (err) throw err; console.log(result); db.close(); }); }); \u4ee5\u4e0b\u5b9e\u4f8b\u68c0\u7d22 name \u4e3a \"\u83dc\u9e1f\u6559\u7a0b\" \u7684\u5b9e\u4f8b\uff1a","title":"find()"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_10","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var whereStr = {\"name\":'\u83dc\u9e1f\u6559\u7a0b'}; // \u67e5\u8be2\u6761\u4ef6 dbo.collection(\"site\").find(whereStr).toArray(function(err, result) { if (err) throw err; console.log(result); db.close(); }); }); \u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u8f93\u51fa\u5c31\u7ed3\u679c\u4e3a\uff1a [ { _id: 5a794e36763eb821b24db854, name: '\u83dc\u9e1f\u6559\u7a0b', url: 'www.runoob' } ]","title":"\u67e5\u8be2\u6307\u5b9a\u6761\u4ef6\u7684\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_11","text":"\u6211\u4eec\u4e5f\u53ef\u4ee5\u5bf9\u6570\u636e\u5e93\u7684\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u5c06 name \u4e3a \"\u83dc\u9e1f\u6559\u7a0b\" \u7684 url \u6539\u4e3a https://www.runoob.com \uff1a","title":"\u66f4\u65b0\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_12","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var whereStr = {\"name\":'\u83dc\u9e1f\u6559\u7a0b'}; // \u67e5\u8be2\u6761\u4ef6 var updateStr = {$set: { \"url\" : \" https://www.runoob.com \" }}; dbo.collection(\"site\").updateOne(whereStr, updateStr, function(err, res) { if (err) throw err; console.log(\"\u6587\u6863\u66f4\u65b0\u6210\u529f\"); db.close(); }); }); \u6267\u884c\u6210\u529f\u540e\uff0c\u8fdb\u5165 mongo \u7ba1\u7406\u5de5\u5177\u67e5\u770b\u6570\u636e\u5df2\u4fee\u6539\uff1a > db.site.find().pretty() { \"_id\" : ObjectId(\"5a794e36763eb821b24db854\"), \"name\" : \"\u83dc\u9e1f\u6559\u7a0b\", \"url\" : \"https://www.runoob.com\" // \u5df2\u4fee\u6539\u4e3a https } \u5982\u679c\u8981\u66f4\u65b0\u6240\u6709\u7b26\u5408\u6761\u7684\u6587\u6863\u6570\u636e\u53ef\u4ee5\u4f7f\u7528 updateMany() \uff1a","title":"\u66f4\u65b0\u4e00\u6761\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_13","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var whereStr = {\"type\":'en'}; // \u67e5\u8be2\u6761\u4ef6 var updateStr = {$set: { \"url\" : \" https://www.runoob.com \" }}; dbo.collection(\"site\").updateMany(whereStr, updateStr, function(err, res) { if (err) throw err; console.log(res.result.nModified + \" \u6761\u6587\u6863\u88ab\u66f4\u65b0\"); db.close(); }); }); result.nModified \u4e3a\u66f4\u65b0\u7684\u6761\u6570\u3002","title":"\u66f4\u65b0\u591a\u6761\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_14","text":"\u4ee5\u4e0b\u5b9e\u4f8b\u5c06 name \u4e3a \"\u83dc\u9e1f\u6559\u7a0b\" \u7684\u6570\u636e\u5220\u9664 :","title":"\u5220\u9664\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_15","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var whereStr = {\"name\":'\u83dc\u9e1f\u6559\u7a0b'}; // \u67e5\u8be2\u6761\u4ef6 dbo.collection(\"site\").deleteOne(whereStr, function(err, obj) { if (err) throw err; console.log(\"\u6587\u6863\u5220\u9664\u6210\u529f\"); db.close(); }); }); \u6267\u884c\u6210\u529f\u540e\uff0c\u8fdb\u5165 mongo \u7ba1\u7406\u5de5\u5177\u67e5\u770b\u6570\u636e\u5df2\u5220\u9664\uff1a > db.site.find() > \u5982\u679c\u8981\u5220\u9664\u591a\u6761\u8bed\u53e5\u53ef\u4ee5\u4f7f\u7528 deleteMany() \u65b9\u6cd5 \u4ee5\u4e0b\u5b9e\u4f8b\u5c06 type \u4e3a en \u7684\u6240\u6709\u6570\u636e\u5220\u9664 :","title":"\u5220\u9664\u4e00\u6761\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_16","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var whereStr = { type: \"en\" }; // \u67e5\u8be2\u6761\u4ef6 dbo.collection(\"site\").deleteMany(whereStr, function(err, obj) { if (err) throw err; console.log(obj.result.n + \" \u6761\u6587\u6863\u88ab\u5220\u9664\"); db.close(); }); }); obj.result.n \u5220\u9664\u7684\u6761\u6570\u3002","title":"\u5220\u9664\u591a\u6761\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_17","text":"\u6392\u5e8f \u4f7f\u7528 sort() \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u89c4\u5b9a\u662f\u5347\u5e8f(1)\u8fd8\u662f\u964d\u5e8f(-1)\u3002 \u4f8b\u5982\uff1a { type: 1 } // \u6309 type \u5b57\u6bb5\u5347\u5e8f { type: -1 } // \u6309 type \u5b57\u6bb5\u964d\u5e8f \u6309 type \u5347\u5e8f\u6392\u5217:","title":"\u6392\u5e8f"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_18","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); var mysort = { type: 1 }; dbo.collection(\"site\").find().sort(mysort).toArray(function(err, result) { if (err) throw err; console.log(result); db.close(); }); });","title":"\u6392\u5e8f"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_19","text":"\u5982\u679c\u8981\u8bbe\u7f6e\u6307\u5b9a\u7684\u8fd4\u56de\u6761\u6570\u53ef\u4ee5\u4f7f\u7528 limit() \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u53ea\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u6307\u5b9a\u4e86\u8fd4\u56de\u7684\u6761\u6570\u3002","title":"\u67e5\u8be2\u5206\u9875"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#limit","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); dbo.collection(\"site\").find().limit(2).toArray(function(err, result) { if (err) throw err; console.log(result); db.close(); }); }); \u5982\u679c\u8981\u6307\u5b9a\u8df3\u8fc7\u7684\u6761\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528 skip() \u65b9\u6cd5\u3002","title":"limit()\uff1a\u8bfb\u53d6\u4e24\u6761\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#skip","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); dbo.collection(\"site\").find().skip(2).limit(2).toArray(function(err, result) { if (err) throw err; console.log(result); db.close(); }); });","title":"skip(): \u8df3\u8fc7\u524d\u9762\u4e24\u6761\u6570\u636e\uff0c\u8bfb\u53d6\u4e24\u6761\u6570\u636e"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_20","text":"mongoDB \u4e0d\u662f\u4e00\u4e2a\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u4f46\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 $lookup \u6765\u5b9e\u73b0\u5de6\u8fde\u63a5\u3002 \u4f8b\u5982\u6211\u4eec\u6709\u4e24\u4e2a\u96c6\u5408\u6570\u636e\u5206\u522b\u4e3a\uff1a \u96c6\u54081\uff1aorders [ { _id: 1, product_id: 154, status: 1 } ] \u96c6\u54082\uff1aproducts [ { _id: 154, name: '\u7b14\u8bb0\u672c\u7535\u8111' }, { _id: 155, name: '\u8033\u673a' }, { _id: 156, name: '\u53f0\u5f0f\u7535\u8111' } ]","title":"\u8fde\u63a5\u64cd\u4f5c"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#lookup","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://127.0.0.1:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); dbo.collection('orders').aggregate([ { $lookup: { from: 'products', // \u53f3\u96c6\u5408 localField: 'product_id', // \u5de6\u96c6\u5408 join \u5b57\u6bb5 foreignField: '_id', // \u53f3\u96c6\u5408 join \u5b57\u6bb5 as: 'orderdetails' // \u65b0\u751f\u6210\u5b57\u6bb5\uff08\u7c7b\u578barray\uff09 } } ]).toArray(function(err, res) { if (err) throw err; console.log(JSON.stringify(res)); db.close(); }); });","title":"$lookup \u5b9e\u73b0\u5de6\u8fde\u63a5"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#_21","text":"\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 drop() \u65b9\u6cd5\u6765\u5220\u9664\u96c6\u5408\uff1a","title":"\u5220\u9664\u96c6\u5408"},{"location":"nodejs/25-Node.js%20%E8%BF%9E%E6%8E%A5%20MongoDB/#drop","text":"var MongoClient = require('mongodb').MongoClient; var url = \"mongodb://localhost:27017/\"; MongoClient.connect(url, { useNewUrlParser: true }, function(err, db) { if (err) throw err; var dbo = db.db(\"runoob\"); // \u5220\u9664 test \u96c6\u5408 dbo.collection(\"test\").drop(function(err, delOK) { // \u6267\u884c\u6210\u529f delOK \u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false if (err) throw err; if (delOK) console.log(\"\u96c6\u5408\u5df2\u5220\u9664\"); db.close(); }); });","title":"drop()"},{"location":"nodejs/Node%20%E4%B8%8B%20LDAP%20%E5%AE%9E%E7%8E%B0/","text":"Node \u4e0b LDAP \u5b9e\u73b0 \u00b6 LDAP\u5165\u95e8 \u9996\u5148\u8981\u5148\u7406\u89e3\u4ec0\u4e48\u662fLDAP\uff0c\u5f53\u65f6\u6211\u770b\u4e86\u5f88\u591a\u89e3\u91ca\uff0c\u4e5f\u662f\u4e91\u91cc\u96fe\u91cc\uff0c\u5f04\u4e0d\u6e05\u695a\u3002\u5728\u8fd9\u91cc\u7ed9\u5927\u5bb6\u7a0d\u5fae\u634b\u4e00\u634b\u3002 \u9996\u5148LDAP\u662f\u4e00\u79cd\u901a\u8baf\u534f\u8bae\uff0cLDAP\u652f\u6301TCP/IP\u3002\u534f\u8bae\u5c31\u662f\u6807\u51c6\uff0c\u5e76\u4e14\u662f\u62bd\u8c61\u7684\u3002\u5728\u8fd9\u5957\u6807\u51c6\u4e0b\uff0cAD\uff08Active Directory\uff09\u662f\u5fae\u8f6f\u51fa\u7684\u4e00\u5957\u5b9e\u73b0\u3002 \u90a3AD\u662f\u4ec0\u4e48\u5462\uff1f\u6682\u4e14\u628a\u5b83\u7406\u89e3\u6210\u662f\u4e2a\u6570\u636e\u5e93\u3002\u4e5f\u6709\u5f88\u591a\u4eba\u76f4\u63a5\u628aLDAP\u8bf4\u6210\u6570\u636e\u5e93(\u53ef\u4ee5\u628aLDAP\u7406\u89e3\u6210\u5b58\u50a8\u6570\u636e\u7684\u6570\u636e\u5e93)\u3002\u50cf\u662f\u5176\u4ed6\u6570\u636e\u5e93\u4e00\u6837\uff0cLDAP\u4e5f\u662f\u6709client\u7aef\u548cserver\u7aef\u3002server\u7aef\u662f\u7528\u6765\u5b58\u653e\u8d44\u6e90\uff0cclient\u7aef\u7528\u6765\u64cd\u4f5c\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\u3002 \u800c\u6211\u4eec\u901a\u5e38\u8bf4\u7684LDAP\u662f\u6307\u8fd0\u884c\u8fd9\u4e2a\u6570\u636e\u5e93\u7684\u670d\u52a1\u5668\u3002 \u53ef\u4ee5\u7b80\u5355\u7406\u89e3AD =LDAP\u670d\u52a1\u5668\uff0bLDAP\u5e94\u7528\u3002 \u90a3LDAP\u8fd9\u79cd\u6570\u636e\u5e93\u6709\u4ec0\u4e48\u7279\u6b8a\u7684\u5462\uff1f \u6211\u4eec\u77e5\u9053\uff0c\u50cfMySQL\u6570\u636e\u5e93\uff0c\u6570\u636e\u90fd\u662f\u6309\u8bb0\u5f55\u4e00\u6761\u6761\u8bb0\u5f55\u5b58\u5728\u8868\u4e2d\u3002\u800cLDAP\u6570\u636e\u5e93\uff0c\u662f\u6811\u7ed3\u6784\u7684\uff0c\u6570\u636e\u5b58\u50a8\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\u3002\u770b\u770b\u4e0b\u9762\u7684\u6bd4\u55bb\uff1a \u5047\u8bbe\u4f60\u8981\u6811\u4e0a\u7684\u4e00\u4e2a\u82f9\u679c\uff08\u4e00\u6761\u8bb0\u5f55\uff09\uff0c\u4f60\u600e\u4e48\u544a\u8bc9\u56ed\u4e01\u5b83\u7684\u4f4d\u7f6e\u5462\uff1f\u5f53\u7136\u9996\u5148\u8981\u8bf4\u660e\u662f\u54ea\u4e00\u68f5\u6811\uff08dc\uff0c\u76f8\u5f53\u4e8eMYSQL\u7684DB\uff09\uff0c\u7136\u540e\u662f\u4ece\u6811\u6839\u5230\u90a3\u4e2a\u82f9\u679c\u6240\u7ecf\u8fc7\u7684\u6240\u6709\u201c\u5206\u53c9\u201d\uff08ou\uff09\uff0c\u6700\u540e\u5c31\u662f\u8fd9\u4e2a\u82f9\u679c\u7684\u540d\u5b57\uff08uid\uff0c\u76f8\u5f53\u4e8eMySQL\u8868\u4e3b\u952eid\uff09\u3002\u597d\u4e86\uff01\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u6e05\u6670\u7684\u6307\u660e\u8fd9\u4e2a\u82f9\u679c\u7684\u4f4d\u7f6e\u4e86\uff0c\u5c31\u662f\u90a3\u68f5\u201c\u6b6a\u8116\u6811\u201d\u7684\u4e1c\u8fb9\u90a3\u4e2a\u5206\u53c9\u4e0a\u7684\u9760\u897f\u8fb9\u90a3\u4e2a\u5206\u53c9\u7684\u518d\u9760\u5317\u8fb9\u7684\u5206\u53c9\u4e0a\u7684\u534a\u7ea2\u534a\u7eff\u7684\u2026\u2026\uff0c\u6655\u4e86\uff01\u4f60\u76f4\u63a5\u722c\u4e0a\u53bb\u5427\uff01 \u5c31\u8fd9\u6837\u5c31\u53ef\u4ee5\u63cf\u8ff0\u6e05\u695a\u201c\u6811\u7ed3\u6784\u201d\u4e0a\u7684\u4e00\u6761\u8bb0\u5f55\u4e86\u3002 \u8bf4\u4e00\u4e0bLDAP\u91cc\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u8bb0\u5f55\u7684\u4f4d\u7f6e\u5427\u3002 \u6811\uff08dc=ljheee) \u5206\u53c9\uff08ou=bei,ou=xi,ou= dong\uff09 \u82f9\u679c\uff08cn=redApple\uff09\uff0c \u597d\u4e86\uff0credApple\u7684\u4f4d\u7f6e\u51fa\u6765\u4e86\uff1a dn:cn=honglv,ou=bei,ou=xi,ou=dong,dc=ljheee \u5176\u4e2ddn\u6807\u8bc6\u4e00\u6761\u8bb0\u5f55\uff0c\u63cf\u8ff0\u4e86\u4e00\u6761\u6570\u636e\u7684\u8be6\u7ec6\u8def\u5f84\u3002 \u54a6!\u6709\u4eba\u7591\u95ee\uff0c\u4e3a\u4ec0\u4e48ou\u4f1a\u6709\u591a\u4e2a\u503c\uff1f\u4f60\u60f3\u60f3\uff0c\u4ece\u6811\u6839\u5230\u8fbe\u82f9\u679c\u7684\u4f4d\u7f6e\uff0c\u53ef\u80fd\u8981\u7ecf\u8fc7\u597d\u51e0\u4e2a\u6811\u6748\uff0c\u6240\u6709ou\u53ef\u80fd\u6709\u591a\u4e2a\u503c\u3002\u5173\u4e8edn\u540e\u9762\u4e00\u957f\u4e32\uff0c\u5206\u522b\u662fcn\uff0cou,dc\uff1b\u4e2d\u95f4\u7528\u9017\u53f7\u9694\u5f00\u3002 \u603b\u7ed3\u4e00\u4e0bLDAP\u6811\u5f62\u6570\u636e\u5e93\u5982\u4e0b\uff1a dn \uff1a\u4e00\u6761\u8bb0\u5f55\u7684\u8be6\u7ec6\u4f4d\u7f6e dc \uff1a\u4e00\u6761\u8bb0\u5f55\u6240\u5c5e\u533a\u57df (\u54ea\u4e00\u9897\u6811) ou \uff1a\u4e00\u6761\u8bb0\u5f55\u6240\u5c5e\u7ec4\u7ec7 \uff08\u54ea\u4e00\u4e2a\u5206\u652f\uff09 cn/uid\uff1a\u4e00\u6761\u8bb0\u5f55\u7684\u540d\u5b57/ID (\u54ea\u4e00\u4e2a\u82f9\u679c\u540d\u5b57) LDAP\u76ee\u5f55\u6811\u7684\u6700\u9876\u90e8\u5c31\u662f\u6839\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u201c\u57fa\u51c6DN\"\u3002 \u4e3a\u4ec0\u4e48\u8981\u7528LDAP\u76ee\u5f55\u6811\u6765\u5b58\u50a8\u6570\u636e\uff0c\u7528MySQL\u4e0d\u884c\u5417\uff0c\u4e3a\u4ec0\u4e48\u975e\u8981\u641e\u51fa\u4e00\u4e2a\u6811\u5f62\u7684\u6570\u636e\u5e93\u5462\uff1f \u8fd9\u662f\u56e0\u4e3a\u7528\u6811\u5f62\u7ed3\u6784\u5b58\u50a8\u6570\u636e\uff0c\u67e5\u8be2\u6548\u7387\u66f4\u9ad8\uff08\u5177\u4f53\u4e3a\u4ec0\u4e48\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7d22\u5f15\u7684\u5b9e\u73b0\u539f\u7406\u2014\u2014B\u6811/B+\u6811\uff09\u3002\u5728\u67d0\u4e9b\u7279\u5b9a\u7684\u573a\u666f\u4e0b\uff0c\u4f7f\u7528\u6811\u5f62\u6570\u636e\u5e93\u66f4\u7406\u60f3\u3002\u6bd4\u5982\uff1a\u9700\u8981\u50a8\u5b58\u5927\u91cf\u7684\u6570\u636e\uff0c\u800c\u4e14\u6570\u636e\u4e0d\u662f\u7ecf\u5e38\u66f4\u6539\uff0c\u9700\u8981\u5f88\u5feb\u901f\u7684\u67e5\u627e\u3002 \u628a\u5b83\u4e0e\u4f20\u7edf\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u76f8\u6bd4\uff0cLDAP\u9664\u4e86\u5feb\u901f\u67e5\u627e\u7684\u7279\u70b9\uff0c\u5b83\u8fd8\u6709\u5f88\u591a\u7684\u8fd0\u7528\u573a\u666f\uff0c\u6bd4\u5982\u57df\u9a8c\u8bc1\u7b49\u3002 LDAP\u7f16\u7a0b\u64cd\u4f5c \u6211\u4eec\u53ef\u4ee5\u7528JDBC\u64cd\u4f5cMySQL\u6570\u636e\u5e93\uff0c\u8fdb\u884c\u5bf9\u6570\u636e\u7684\u589e\u5220\u6539\u67e5\u3002\u540c\u6837\uff0cLDAP\u6811\u5f62\u6570\u636e\u5e93\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7JDBC\u65b9\u5f0f\uff1b\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528JNDI\u7684\u65b9\u5f0f\uff08\u66f4\u63a8\u8350\uff09\uff0c\u56e0\u4e3a\u6811\u5f62\u53ef\u4ee5\u770b\u505a\u662f\u76ee\u5f55\uff0c\u6811\u7ed3\u6784\u7684\u679d\u6748\u76f8\u5f53\u4e8e\u76ee\u5f55\u7684\u5c42\u7ea7\u3002 \u8fd8\u6709LDAP\u6570\u636e\u5e93\u5c55\u793a\u6570\u636e\u4e5f\u662f\u6811\u5f62\u7684\uff0c\u5982\u4e0b\u56fe\u662f\u7528ApacheDirectoryStudio\u8fde\u63a5\u7684\u516c\u53f8LDAP\u670d\u52a1\u5668\uff1a \u53ef\u4ee5\u628aApacheDirectoryStudio\u770b\u505a\u662f\u8fde\u63a5\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u754c\u9762\u5316\u7684client\uff0c\u76f8\u5f53\u4e8eNavicat\u3001WorkBench\u3002\u65b0\u5efa\u8fde\u63a5\uff0c\u8fde\u63a5\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u64cd\u4f5c\u7c7b\u4f3c\u3002 ApacheDirectoryStudio\u4e0b\u8f7d\u5730\u5740 http://download.csdn.net/download/ljheee/10145654 JNDI\u8fde\u63a5LDAP\u670d\u52a1\u5668 import com.xxx.csb.ldap.config.LdapConfiguration ; import org.springframework.beans.factory.annotation.Autowired ; import java.util.Hashtable ; import javax.naming.* ; import javax.naming.directory.Attribute ; import javax.naming.directory.Attributes ; import javax.naming.directory.DirContext ; import javax.naming.directory.InitialDirContext ; /** * author:lijianhua * Date:2017\\12\\4 0004 */ public class LdapJNDI { @Autowired LdapConfiguration ldapConfiguration ; public void JNDILookup () { String rootFilter = \"o=xxx.com,o=isp\" ; // String filter = \"(&(smart-type=E1)(smart-status=1))\"; String filter = \"(&(smart-type=E1)(uid=00012047))\" ; String username = \"uid=USER_NAME,ou=Authorization,ou=People,o=cc.com,o=isp\" ; //xxx\u4e3a\u7533\u8bf7\u7684\u5bf9\u63a5\u8d26\u6237 String password = \"PASSW\" ; Hashtable env = new Hashtable (); env . put ( Context . INITIAL_CONTEXT_FACTORY , \"com.sun.jndi.ldap.LdapCtxFactory\" ); //\u8bbe\u7f6e\u8fde\u63a5LDAP\u7684\u5b9e\u73b0\u5de5\u5382 env . put ( Context . PROVIDER_URL , \"ldap://172.16.32.19:389/\" + rootFilter ); // \u6307\u5b9aLDAP\u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u53f7 env . put ( Context . SECURITY_AUTHENTICATION , \"simple\" ); //\u7ed9\u73af\u5883\u63d0\u4f9b\u8ba4\u8bc1\u65b9\u6cd5,\u6709SIMPLE\u3001SSL/TLS\u548cSASL env . put ( Context . SECURITY_PRINCIPAL , username ); //\u6307\u5b9a\u8fdb\u5165\u7684\u76ee\u5f55\u8bc6\u522b\u540dDN env . put ( Context . SECURITY_CREDENTIALS , password ); //\u8fdb\u5165\u7684\u76ee\u5f55\u5bc6\u7801 env . put ( \"filter\" , filter ); DirContext ctx = null ; try { // \u5f97\u5230\u521d\u59cb\u76ee\u5f55\u73af\u5883\u7684\u4e00\u4e2a\u5f15\u7528 ctx = new InitialDirContext ( env ); //The search base entry 'uid=00012047,ou=Internal,ou=People,o=xxx.com,o=isp' does not exist]; remaining name 'uid=00012047,ou=Internal' // Attributes attrs = ctx.getAttributes(\"uid=00012047,ou=Internal,ou=People\");//\u83b7\u53d6\u5230\u4e00\u4e2a\u4eba\u5458\uff0c NamingEnumeration bindings = ctx . listBindings ( \"ou=Internal,ou=People\" ); //\u5217\u4e3e \u5185\u90e8\u4eba\u5458 while ( bindings . hasMore ()) { Binding bd = ( Binding ) bindings . next (); System . out . println ( bd . getName () + \": \" + bd . getObject ()); } /*\u6839\u636e\u7ed3\u70b9\u7684DN\u6765\u67e5\u627e\u5b83\u7684\u6240\u6709\u5c5e\u6027, \u7136\u540e\u518d\u4ece\u5c5e\u6027\u4e2d\u5f97\u5230\u6240\u6709\u7684\u503c,\u6ce8\u610f\u4e00\u4e2a\u5c5e\u6027\u53ef\u4ee5\u6709\u591a\u4e2a\u503c*/ // for (NamingEnumeration ae = attrs.getAll(); ae.hasMore(); ) { // //\u83b7\u53d6\u4e00\u4e2a\u5c5e\u6027 // Attribute attr = (Attribute) ae.next(); // for (NamingEnumeration ve = attr.getAll(); ve.hasMore(); ) { // System.out.println(String.format(\"Attribute=%s,Value=%s\",attr.getID(),ve.next()) ); // } // } } catch ( javax . naming . AuthenticationException e ) { System . out . println ( \"\u8ba4\u8bc1\u5931\u8d25\" ); e . printStackTrace (); } catch ( Exception e ) { System . out . println ( \"\u8ba4\u8bc1\u51fa\u9519\uff1a\" ); e . printStackTrace (); } finally { if ( ctx != null ) { try { ctx . close (); } catch ( NamingException e ) { e . printStackTrace (); } } } } public static void main ( String [] args ) { LdapJNDI ldapJNDI = new LdapJNDI (); ldapJNDI . JNDILookup (); } } \u6700\u540e\u603b\u7ed3\u4e00\u4e0bLDAP\uff1a 1\u3001LDAP\u7684\u7ed3\u6784\u7528\u6811\u6765\u8868\u793a\uff0c\u800c\u4e0d\u662f\u7528\u8868\u683c\u3002\u6b63\u56e0\u4e3a\u8fd9\u6837\uff0c\u5c31\u4e0d\u80fd\u7528SQL\u8bed\u53e5\u4e86\u3002 2\u3001LDAP\u53ef\u4ee5\u5f88\u5feb\u5730\u5f97\u5230\u67e5\u8be2\u7ed3\u679c\uff0c\u4e0d\u8fc7\u5728\u5199\u65b9\u9762\uff0c\u5c31\u6162\u5f97\u591a\u3002 3\u3001LDAP\u63d0\u4f9b\u4e86\u9759\u6001\u6570\u636e\u7684\u5feb\u901f\u67e5\u8be2\u65b9\u5f0f\u3002 4\u3001Client/server\u6a21\u578b\uff0cServer \u7528\u4e8e\u5b58\u50a8\u6570\u636e\uff0cClient\u63d0\u4f9b\u64cd\u4f5c\u76ee\u5f55\u4fe1\u606f\u6811\u7684\u5de5\u5177\u3002 5\u3001LDAP\u662f\u4e00\u79cd\u5f00\u653eInternet\u6807\u51c6\uff0cLDAP\u534f\u8bae\u662f\u8de8\u5e73\u53f0\u7684Interent\u534f\u8bae\u3002 node-ldap \u00b6 node ldap client github \u00b6 https://github.com/ymyang/node-ldap \u5b89\u88c5 \u00b6 npm install node-ldap \u4f7f\u7528 \u00b6 \u5df2\u901a\u8fc7Windows Server 2008\u6d4b\u8bd5 var LdapClient = RedisClient ( 'node-ldap' ); var client = new LdapClient ({ ldapUrl : 'ldap://192.168.1.81:389' , userDn : 'administrator@yliyun.com' , password : 'yliyun@123' }); // \u7528\u6237\u8ba4\u8bc1 client . auth ( 'administrator@yliyun.com' , 'yliyun@123' ). then ( function () { console . log ( 'success' ); }). catch ( function ( err ) { console . error ( err ); }); // \u641c\u7d22\u90e8\u95e8 client . searchOU ( 'cn=Users,dc=yliyun,dc=com' ). then ( function ( ous ) { console . log ( ous ); }). catch ( function ( err ) { console . error ( err ); }); // \u641c\u7d22\u7fa4\u7ec4 client . searchGroup ( 'cn=Users,dc=yliyun,dc=com' ). then ( function ( groups ) { console . log ( groups ); }). catch ( function ( err ) { console . error ( err ); }); // \u641c\u7d22\u7528\u6237 client . searchUser ( 'cn=Users,dc=yliyun,dc=com' ). then ( function ( users ) { console . log ( users ); }). catch ( function ( err ) { console . error ( err ); }); // \u641c\u7d22 client . search ({ base : 'dc=yliyun,dc=com' , scope : 'sub' , // \u9ed8\u8ba4\u4e3a'one' paged : 'true' , // \u9ed8\u8ba4\u4e3atrue filter : '(objectclass=organizationalUnit)' }). then ( function ( rows ) { console . log ( rows ); }). catch ( function ( err ) { console . error ( err ); }); // \u65ad\u5f00\u8fde\u63a5 client . disconnect (); node.js\u4e0bLDAP\u67e5\u8be2\u5b9e\u8df5 \u00b6 \u76ee\u6807\uff1a \u4ece\u4e00\u4e2aLDAP Server\u83b7\u53d6uid=kxh\u7684\u7528\u6237\u6570\u636e LDAP\u5730\u5740\u4e3a\uff1aldap://10.233.21.116:389 \u5728\u5de5\u7a0b\u6839\u76ee\u5f55\u4e2d\uff0c\u5148npm\u4e00\u4e2aLDAP\u7684\u8bbf\u95ee\u5e93ldpajs npm install ldapjs var ldap = require ( \"ldapjs\" ); //\u521b\u5efaLDAP client\uff0c\u628a\u670d\u52a1\u5668url\u4f20\u5165 var client = ldap . createClient ({ url : 'ldap://10.203.24.216:389' }); //\u521b\u5efaLDAP\u67e5\u8be2\u9009\u9879 //filter\u7684\u4f5c\u7528\u5c31\u662f\u76f8\u5f53\u4e8eSQL\u7684\u6761\u4ef6 var opts = { filter : '(uid=kxh)' , //\u67e5\u8be2\u6761\u4ef6\u8fc7\u6ee4\u5668\uff0c\u67e5\u627euid=kxh\u7684\u7528\u6237\u8282\u70b9 scope : 'sub' , //\u67e5\u8be2\u8303\u56f4 timeLimit : 500 //\u67e5\u8be2\u8d85\u65f6 }; //\u5c06client\u7ed1\u5b9aLDAP Server //\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a\u662f\u7528\u6237\uff0c\u5fc5\u987b\u662f\u4ece\u6839\u8282\u70b9\u5230\u7528\u6237\u8282\u70b9\u7684\u5168\u8def\u5f84 //\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a\u7528\u6237\u5bc6\u7801 client . bind ( 'uid=supbind,cn=users,dc=tiger,dc=com' , '123456' , function ( err , res1 ) { //\u5f00\u59cb\u67e5\u8be2 //\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a\u67e5\u8be2\u57fa\u7840\u8def\u5f84\uff0c\u4ee3\u8868\u5728\u67e5\u8be2\u7528\u6237\u4fe1\u5fc3\u5c06\u5728\u8fd9\u4e2a\u8def\u5f84\u4e0b\u8fdb\u884c\uff0c\u8fd9\u4e2a\u8def\u5f84\u662f\u7531\u6839\u8282\u5f00\u59cb //\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a\u67e5\u8be2\u9009\u9879 client . search ( 'DC=tiger,DC=com' , opts , function ( err , res2 ) { //\u67e5\u8be2\u7ed3\u679c\u4e8b\u4ef6\u54cd\u5e94 res2 . on ( 'searchEntry' , function ( entry ) { //\u83b7\u53d6\u67e5\u8be2\u7684\u5bf9\u8c61 var user = entry . object ; var userText = JSON . stringify ( user , null , 2 ); console . log ( userText ); }); res2 . on ( 'searchReference' , function ( referral ) { console . log ( 'referral: ' + referral . uris . join ()); }); //\u67e5\u8be2\u9519\u8bef\u4e8b\u4ef6 res2 . on ( 'error' , function ( err ) { console . error ( 'error: ' + err . message ); //unbind\u64cd\u4f5c\uff0c\u5fc5\u987b\u8981\u505a client . unbind (); }); //\u67e5\u8be2\u7ed3\u675f res2 . on ( 'end' , function ( result ) { console . log ( 'search status: ' + result . status ); //unbind\u64cd\u4f5c\uff0c\u5fc5\u987b\u8981\u505a client . unbind (); }); }); }); \u53c2\u8003\u8d44\u6599 filter\u8bed\u6cd5\uff1a http://www.ldapexplorer.com/en/manual/109010000-ldap-filter-syntax.htm ldapjs\uff1a https://www.npmjs.com/package/ldapjs https://blog.csdn.net/ljheee/article/details/78746037?utm_source=copy https://blog.csdn.net/weixin_34208283/article/details/89375085 https://www.cnblogs.com/kongxianghai/p/4847265.html","title":"Node \u4e0b LDAP \u5b9e\u73b0"},{"location":"nodejs/Node%20%E4%B8%8B%20LDAP%20%E5%AE%9E%E7%8E%B0/#node-ldap","text":"LDAP\u5165\u95e8 \u9996\u5148\u8981\u5148\u7406\u89e3\u4ec0\u4e48\u662fLDAP\uff0c\u5f53\u65f6\u6211\u770b\u4e86\u5f88\u591a\u89e3\u91ca\uff0c\u4e5f\u662f\u4e91\u91cc\u96fe\u91cc\uff0c\u5f04\u4e0d\u6e05\u695a\u3002\u5728\u8fd9\u91cc\u7ed9\u5927\u5bb6\u7a0d\u5fae\u634b\u4e00\u634b\u3002 \u9996\u5148LDAP\u662f\u4e00\u79cd\u901a\u8baf\u534f\u8bae\uff0cLDAP\u652f\u6301TCP/IP\u3002\u534f\u8bae\u5c31\u662f\u6807\u51c6\uff0c\u5e76\u4e14\u662f\u62bd\u8c61\u7684\u3002\u5728\u8fd9\u5957\u6807\u51c6\u4e0b\uff0cAD\uff08Active Directory\uff09\u662f\u5fae\u8f6f\u51fa\u7684\u4e00\u5957\u5b9e\u73b0\u3002 \u90a3AD\u662f\u4ec0\u4e48\u5462\uff1f\u6682\u4e14\u628a\u5b83\u7406\u89e3\u6210\u662f\u4e2a\u6570\u636e\u5e93\u3002\u4e5f\u6709\u5f88\u591a\u4eba\u76f4\u63a5\u628aLDAP\u8bf4\u6210\u6570\u636e\u5e93(\u53ef\u4ee5\u628aLDAP\u7406\u89e3\u6210\u5b58\u50a8\u6570\u636e\u7684\u6570\u636e\u5e93)\u3002\u50cf\u662f\u5176\u4ed6\u6570\u636e\u5e93\u4e00\u6837\uff0cLDAP\u4e5f\u662f\u6709client\u7aef\u548cserver\u7aef\u3002server\u7aef\u662f\u7528\u6765\u5b58\u653e\u8d44\u6e90\uff0cclient\u7aef\u7528\u6765\u64cd\u4f5c\u589e\u5220\u6539\u67e5\u7b49\u64cd\u4f5c\u3002 \u800c\u6211\u4eec\u901a\u5e38\u8bf4\u7684LDAP\u662f\u6307\u8fd0\u884c\u8fd9\u4e2a\u6570\u636e\u5e93\u7684\u670d\u52a1\u5668\u3002 \u53ef\u4ee5\u7b80\u5355\u7406\u89e3AD =LDAP\u670d\u52a1\u5668\uff0bLDAP\u5e94\u7528\u3002 \u90a3LDAP\u8fd9\u79cd\u6570\u636e\u5e93\u6709\u4ec0\u4e48\u7279\u6b8a\u7684\u5462\uff1f \u6211\u4eec\u77e5\u9053\uff0c\u50cfMySQL\u6570\u636e\u5e93\uff0c\u6570\u636e\u90fd\u662f\u6309\u8bb0\u5f55\u4e00\u6761\u6761\u8bb0\u5f55\u5b58\u5728\u8868\u4e2d\u3002\u800cLDAP\u6570\u636e\u5e93\uff0c\u662f\u6811\u7ed3\u6784\u7684\uff0c\u6570\u636e\u5b58\u50a8\u5728\u53f6\u5b50\u8282\u70b9\u4e0a\u3002\u770b\u770b\u4e0b\u9762\u7684\u6bd4\u55bb\uff1a \u5047\u8bbe\u4f60\u8981\u6811\u4e0a\u7684\u4e00\u4e2a\u82f9\u679c\uff08\u4e00\u6761\u8bb0\u5f55\uff09\uff0c\u4f60\u600e\u4e48\u544a\u8bc9\u56ed\u4e01\u5b83\u7684\u4f4d\u7f6e\u5462\uff1f\u5f53\u7136\u9996\u5148\u8981\u8bf4\u660e\u662f\u54ea\u4e00\u68f5\u6811\uff08dc\uff0c\u76f8\u5f53\u4e8eMYSQL\u7684DB\uff09\uff0c\u7136\u540e\u662f\u4ece\u6811\u6839\u5230\u90a3\u4e2a\u82f9\u679c\u6240\u7ecf\u8fc7\u7684\u6240\u6709\u201c\u5206\u53c9\u201d\uff08ou\uff09\uff0c\u6700\u540e\u5c31\u662f\u8fd9\u4e2a\u82f9\u679c\u7684\u540d\u5b57\uff08uid\uff0c\u76f8\u5f53\u4e8eMySQL\u8868\u4e3b\u952eid\uff09\u3002\u597d\u4e86\uff01\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u6e05\u6670\u7684\u6307\u660e\u8fd9\u4e2a\u82f9\u679c\u7684\u4f4d\u7f6e\u4e86\uff0c\u5c31\u662f\u90a3\u68f5\u201c\u6b6a\u8116\u6811\u201d\u7684\u4e1c\u8fb9\u90a3\u4e2a\u5206\u53c9\u4e0a\u7684\u9760\u897f\u8fb9\u90a3\u4e2a\u5206\u53c9\u7684\u518d\u9760\u5317\u8fb9\u7684\u5206\u53c9\u4e0a\u7684\u534a\u7ea2\u534a\u7eff\u7684\u2026\u2026\uff0c\u6655\u4e86\uff01\u4f60\u76f4\u63a5\u722c\u4e0a\u53bb\u5427\uff01 \u5c31\u8fd9\u6837\u5c31\u53ef\u4ee5\u63cf\u8ff0\u6e05\u695a\u201c\u6811\u7ed3\u6784\u201d\u4e0a\u7684\u4e00\u6761\u8bb0\u5f55\u4e86\u3002 \u8bf4\u4e00\u4e0bLDAP\u91cc\u5982\u4f55\u5b9a\u4e49\u4e00\u4e2a\u8bb0\u5f55\u7684\u4f4d\u7f6e\u5427\u3002 \u6811\uff08dc=ljheee) \u5206\u53c9\uff08ou=bei,ou=xi,ou= dong\uff09 \u82f9\u679c\uff08cn=redApple\uff09\uff0c \u597d\u4e86\uff0credApple\u7684\u4f4d\u7f6e\u51fa\u6765\u4e86\uff1a dn:cn=honglv,ou=bei,ou=xi,ou=dong,dc=ljheee \u5176\u4e2ddn\u6807\u8bc6\u4e00\u6761\u8bb0\u5f55\uff0c\u63cf\u8ff0\u4e86\u4e00\u6761\u6570\u636e\u7684\u8be6\u7ec6\u8def\u5f84\u3002 \u54a6!\u6709\u4eba\u7591\u95ee\uff0c\u4e3a\u4ec0\u4e48ou\u4f1a\u6709\u591a\u4e2a\u503c\uff1f\u4f60\u60f3\u60f3\uff0c\u4ece\u6811\u6839\u5230\u8fbe\u82f9\u679c\u7684\u4f4d\u7f6e\uff0c\u53ef\u80fd\u8981\u7ecf\u8fc7\u597d\u51e0\u4e2a\u6811\u6748\uff0c\u6240\u6709ou\u53ef\u80fd\u6709\u591a\u4e2a\u503c\u3002\u5173\u4e8edn\u540e\u9762\u4e00\u957f\u4e32\uff0c\u5206\u522b\u662fcn\uff0cou,dc\uff1b\u4e2d\u95f4\u7528\u9017\u53f7\u9694\u5f00\u3002 \u603b\u7ed3\u4e00\u4e0bLDAP\u6811\u5f62\u6570\u636e\u5e93\u5982\u4e0b\uff1a dn \uff1a\u4e00\u6761\u8bb0\u5f55\u7684\u8be6\u7ec6\u4f4d\u7f6e dc \uff1a\u4e00\u6761\u8bb0\u5f55\u6240\u5c5e\u533a\u57df (\u54ea\u4e00\u9897\u6811) ou \uff1a\u4e00\u6761\u8bb0\u5f55\u6240\u5c5e\u7ec4\u7ec7 \uff08\u54ea\u4e00\u4e2a\u5206\u652f\uff09 cn/uid\uff1a\u4e00\u6761\u8bb0\u5f55\u7684\u540d\u5b57/ID (\u54ea\u4e00\u4e2a\u82f9\u679c\u540d\u5b57) LDAP\u76ee\u5f55\u6811\u7684\u6700\u9876\u90e8\u5c31\u662f\u6839\uff0c\u4e5f\u5c31\u662f\u6240\u8c13\u7684\u201c\u57fa\u51c6DN\"\u3002 \u4e3a\u4ec0\u4e48\u8981\u7528LDAP\u76ee\u5f55\u6811\u6765\u5b58\u50a8\u6570\u636e\uff0c\u7528MySQL\u4e0d\u884c\u5417\uff0c\u4e3a\u4ec0\u4e48\u975e\u8981\u641e\u51fa\u4e00\u4e2a\u6811\u5f62\u7684\u6570\u636e\u5e93\u5462\uff1f \u8fd9\u662f\u56e0\u4e3a\u7528\u6811\u5f62\u7ed3\u6784\u5b58\u50a8\u6570\u636e\uff0c\u67e5\u8be2\u6548\u7387\u66f4\u9ad8\uff08\u5177\u4f53\u4e3a\u4ec0\u4e48\uff0c\u53ef\u4ee5\u770b\u4e00\u4e0b\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7d22\u5f15\u7684\u5b9e\u73b0\u539f\u7406\u2014\u2014B\u6811/B+\u6811\uff09\u3002\u5728\u67d0\u4e9b\u7279\u5b9a\u7684\u573a\u666f\u4e0b\uff0c\u4f7f\u7528\u6811\u5f62\u6570\u636e\u5e93\u66f4\u7406\u60f3\u3002\u6bd4\u5982\uff1a\u9700\u8981\u50a8\u5b58\u5927\u91cf\u7684\u6570\u636e\uff0c\u800c\u4e14\u6570\u636e\u4e0d\u662f\u7ecf\u5e38\u66f4\u6539\uff0c\u9700\u8981\u5f88\u5feb\u901f\u7684\u67e5\u627e\u3002 \u628a\u5b83\u4e0e\u4f20\u7edf\u7684\u5173\u7cfb\u578b\u6570\u636e\u5e93\u76f8\u6bd4\uff0cLDAP\u9664\u4e86\u5feb\u901f\u67e5\u627e\u7684\u7279\u70b9\uff0c\u5b83\u8fd8\u6709\u5f88\u591a\u7684\u8fd0\u7528\u573a\u666f\uff0c\u6bd4\u5982\u57df\u9a8c\u8bc1\u7b49\u3002 LDAP\u7f16\u7a0b\u64cd\u4f5c \u6211\u4eec\u53ef\u4ee5\u7528JDBC\u64cd\u4f5cMySQL\u6570\u636e\u5e93\uff0c\u8fdb\u884c\u5bf9\u6570\u636e\u7684\u589e\u5220\u6539\u67e5\u3002\u540c\u6837\uff0cLDAP\u6811\u5f62\u6570\u636e\u5e93\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7JDBC\u65b9\u5f0f\uff1b\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u7528JNDI\u7684\u65b9\u5f0f\uff08\u66f4\u63a8\u8350\uff09\uff0c\u56e0\u4e3a\u6811\u5f62\u53ef\u4ee5\u770b\u505a\u662f\u76ee\u5f55\uff0c\u6811\u7ed3\u6784\u7684\u679d\u6748\u76f8\u5f53\u4e8e\u76ee\u5f55\u7684\u5c42\u7ea7\u3002 \u8fd8\u6709LDAP\u6570\u636e\u5e93\u5c55\u793a\u6570\u636e\u4e5f\u662f\u6811\u5f62\u7684\uff0c\u5982\u4e0b\u56fe\u662f\u7528ApacheDirectoryStudio\u8fde\u63a5\u7684\u516c\u53f8LDAP\u670d\u52a1\u5668\uff1a \u53ef\u4ee5\u628aApacheDirectoryStudio\u770b\u505a\u662f\u8fde\u63a5\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u754c\u9762\u5316\u7684client\uff0c\u76f8\u5f53\u4e8eNavicat\u3001WorkBench\u3002\u65b0\u5efa\u8fde\u63a5\uff0c\u8fde\u63a5\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u64cd\u4f5c\u7c7b\u4f3c\u3002 ApacheDirectoryStudio\u4e0b\u8f7d\u5730\u5740 http://download.csdn.net/download/ljheee/10145654 JNDI\u8fde\u63a5LDAP\u670d\u52a1\u5668 import com.xxx.csb.ldap.config.LdapConfiguration ; import org.springframework.beans.factory.annotation.Autowired ; import java.util.Hashtable ; import javax.naming.* ; import javax.naming.directory.Attribute ; import javax.naming.directory.Attributes ; import javax.naming.directory.DirContext ; import javax.naming.directory.InitialDirContext ; /** * author:lijianhua * Date:2017\\12\\4 0004 */ public class LdapJNDI { @Autowired LdapConfiguration ldapConfiguration ; public void JNDILookup () { String rootFilter = \"o=xxx.com,o=isp\" ; // String filter = \"(&(smart-type=E1)(smart-status=1))\"; String filter = \"(&(smart-type=E1)(uid=00012047))\" ; String username = \"uid=USER_NAME,ou=Authorization,ou=People,o=cc.com,o=isp\" ; //xxx\u4e3a\u7533\u8bf7\u7684\u5bf9\u63a5\u8d26\u6237 String password = \"PASSW\" ; Hashtable env = new Hashtable (); env . put ( Context . INITIAL_CONTEXT_FACTORY , \"com.sun.jndi.ldap.LdapCtxFactory\" ); //\u8bbe\u7f6e\u8fde\u63a5LDAP\u7684\u5b9e\u73b0\u5de5\u5382 env . put ( Context . PROVIDER_URL , \"ldap://172.16.32.19:389/\" + rootFilter ); // \u6307\u5b9aLDAP\u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u548c\u7aef\u53e3\u53f7 env . put ( Context . SECURITY_AUTHENTICATION , \"simple\" ); //\u7ed9\u73af\u5883\u63d0\u4f9b\u8ba4\u8bc1\u65b9\u6cd5,\u6709SIMPLE\u3001SSL/TLS\u548cSASL env . put ( Context . SECURITY_PRINCIPAL , username ); //\u6307\u5b9a\u8fdb\u5165\u7684\u76ee\u5f55\u8bc6\u522b\u540dDN env . put ( Context . SECURITY_CREDENTIALS , password ); //\u8fdb\u5165\u7684\u76ee\u5f55\u5bc6\u7801 env . put ( \"filter\" , filter ); DirContext ctx = null ; try { // \u5f97\u5230\u521d\u59cb\u76ee\u5f55\u73af\u5883\u7684\u4e00\u4e2a\u5f15\u7528 ctx = new InitialDirContext ( env ); //The search base entry 'uid=00012047,ou=Internal,ou=People,o=xxx.com,o=isp' does not exist]; remaining name 'uid=00012047,ou=Internal' // Attributes attrs = ctx.getAttributes(\"uid=00012047,ou=Internal,ou=People\");//\u83b7\u53d6\u5230\u4e00\u4e2a\u4eba\u5458\uff0c NamingEnumeration bindings = ctx . listBindings ( \"ou=Internal,ou=People\" ); //\u5217\u4e3e \u5185\u90e8\u4eba\u5458 while ( bindings . hasMore ()) { Binding bd = ( Binding ) bindings . next (); System . out . println ( bd . getName () + \": \" + bd . getObject ()); } /*\u6839\u636e\u7ed3\u70b9\u7684DN\u6765\u67e5\u627e\u5b83\u7684\u6240\u6709\u5c5e\u6027, \u7136\u540e\u518d\u4ece\u5c5e\u6027\u4e2d\u5f97\u5230\u6240\u6709\u7684\u503c,\u6ce8\u610f\u4e00\u4e2a\u5c5e\u6027\u53ef\u4ee5\u6709\u591a\u4e2a\u503c*/ // for (NamingEnumeration ae = attrs.getAll(); ae.hasMore(); ) { // //\u83b7\u53d6\u4e00\u4e2a\u5c5e\u6027 // Attribute attr = (Attribute) ae.next(); // for (NamingEnumeration ve = attr.getAll(); ve.hasMore(); ) { // System.out.println(String.format(\"Attribute=%s,Value=%s\",attr.getID(),ve.next()) ); // } // } } catch ( javax . naming . AuthenticationException e ) { System . out . println ( \"\u8ba4\u8bc1\u5931\u8d25\" ); e . printStackTrace (); } catch ( Exception e ) { System . out . println ( \"\u8ba4\u8bc1\u51fa\u9519\uff1a\" ); e . printStackTrace (); } finally { if ( ctx != null ) { try { ctx . close (); } catch ( NamingException e ) { e . printStackTrace (); } } } } public static void main ( String [] args ) { LdapJNDI ldapJNDI = new LdapJNDI (); ldapJNDI . JNDILookup (); } } \u6700\u540e\u603b\u7ed3\u4e00\u4e0bLDAP\uff1a 1\u3001LDAP\u7684\u7ed3\u6784\u7528\u6811\u6765\u8868\u793a\uff0c\u800c\u4e0d\u662f\u7528\u8868\u683c\u3002\u6b63\u56e0\u4e3a\u8fd9\u6837\uff0c\u5c31\u4e0d\u80fd\u7528SQL\u8bed\u53e5\u4e86\u3002 2\u3001LDAP\u53ef\u4ee5\u5f88\u5feb\u5730\u5f97\u5230\u67e5\u8be2\u7ed3\u679c\uff0c\u4e0d\u8fc7\u5728\u5199\u65b9\u9762\uff0c\u5c31\u6162\u5f97\u591a\u3002 3\u3001LDAP\u63d0\u4f9b\u4e86\u9759\u6001\u6570\u636e\u7684\u5feb\u901f\u67e5\u8be2\u65b9\u5f0f\u3002 4\u3001Client/server\u6a21\u578b\uff0cServer \u7528\u4e8e\u5b58\u50a8\u6570\u636e\uff0cClient\u63d0\u4f9b\u64cd\u4f5c\u76ee\u5f55\u4fe1\u606f\u6811\u7684\u5de5\u5177\u3002 5\u3001LDAP\u662f\u4e00\u79cd\u5f00\u653eInternet\u6807\u51c6\uff0cLDAP\u534f\u8bae\u662f\u8de8\u5e73\u53f0\u7684Interent\u534f\u8bae\u3002","title":"Node \u4e0b LDAP \u5b9e\u73b0"},{"location":"nodejs/Node%20%E4%B8%8B%20LDAP%20%E5%AE%9E%E7%8E%B0/#node-ldap_1","text":"node ldap client","title":"node-ldap"},{"location":"nodejs/Node%20%E4%B8%8B%20LDAP%20%E5%AE%9E%E7%8E%B0/#github","text":"https://github.com/ymyang/node-ldap","title":"github"},{"location":"nodejs/Node%20%E4%B8%8B%20LDAP%20%E5%AE%9E%E7%8E%B0/#_1","text":"npm install node-ldap","title":"\u5b89\u88c5"},{"location":"nodejs/Node%20%E4%B8%8B%20LDAP%20%E5%AE%9E%E7%8E%B0/#_2","text":"\u5df2\u901a\u8fc7Windows Server 2008\u6d4b\u8bd5 var LdapClient = RedisClient ( 'node-ldap' ); var client = new LdapClient ({ ldapUrl : 'ldap://192.168.1.81:389' , userDn : 'administrator@yliyun.com' , password : 'yliyun@123' }); // \u7528\u6237\u8ba4\u8bc1 client . auth ( 'administrator@yliyun.com' , 'yliyun@123' ). then ( function () { console . log ( 'success' ); }). catch ( function ( err ) { console . error ( err ); }); // \u641c\u7d22\u90e8\u95e8 client . searchOU ( 'cn=Users,dc=yliyun,dc=com' ). then ( function ( ous ) { console . log ( ous ); }). catch ( function ( err ) { console . error ( err ); }); // \u641c\u7d22\u7fa4\u7ec4 client . searchGroup ( 'cn=Users,dc=yliyun,dc=com' ). then ( function ( groups ) { console . log ( groups ); }). catch ( function ( err ) { console . error ( err ); }); // \u641c\u7d22\u7528\u6237 client . searchUser ( 'cn=Users,dc=yliyun,dc=com' ). then ( function ( users ) { console . log ( users ); }). catch ( function ( err ) { console . error ( err ); }); // \u641c\u7d22 client . search ({ base : 'dc=yliyun,dc=com' , scope : 'sub' , // \u9ed8\u8ba4\u4e3a'one' paged : 'true' , // \u9ed8\u8ba4\u4e3atrue filter : '(objectclass=organizationalUnit)' }). then ( function ( rows ) { console . log ( rows ); }). catch ( function ( err ) { console . error ( err ); }); // \u65ad\u5f00\u8fde\u63a5 client . disconnect ();","title":"\u4f7f\u7528"},{"location":"nodejs/Node%20%E4%B8%8B%20LDAP%20%E5%AE%9E%E7%8E%B0/#nodejsldap","text":"\u76ee\u6807\uff1a \u4ece\u4e00\u4e2aLDAP Server\u83b7\u53d6uid=kxh\u7684\u7528\u6237\u6570\u636e LDAP\u5730\u5740\u4e3a\uff1aldap://10.233.21.116:389 \u5728\u5de5\u7a0b\u6839\u76ee\u5f55\u4e2d\uff0c\u5148npm\u4e00\u4e2aLDAP\u7684\u8bbf\u95ee\u5e93ldpajs npm install ldapjs var ldap = require ( \"ldapjs\" ); //\u521b\u5efaLDAP client\uff0c\u628a\u670d\u52a1\u5668url\u4f20\u5165 var client = ldap . createClient ({ url : 'ldap://10.203.24.216:389' }); //\u521b\u5efaLDAP\u67e5\u8be2\u9009\u9879 //filter\u7684\u4f5c\u7528\u5c31\u662f\u76f8\u5f53\u4e8eSQL\u7684\u6761\u4ef6 var opts = { filter : '(uid=kxh)' , //\u67e5\u8be2\u6761\u4ef6\u8fc7\u6ee4\u5668\uff0c\u67e5\u627euid=kxh\u7684\u7528\u6237\u8282\u70b9 scope : 'sub' , //\u67e5\u8be2\u8303\u56f4 timeLimit : 500 //\u67e5\u8be2\u8d85\u65f6 }; //\u5c06client\u7ed1\u5b9aLDAP Server //\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a\u662f\u7528\u6237\uff0c\u5fc5\u987b\u662f\u4ece\u6839\u8282\u70b9\u5230\u7528\u6237\u8282\u70b9\u7684\u5168\u8def\u5f84 //\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a\u7528\u6237\u5bc6\u7801 client . bind ( 'uid=supbind,cn=users,dc=tiger,dc=com' , '123456' , function ( err , res1 ) { //\u5f00\u59cb\u67e5\u8be2 //\u7b2c\u4e00\u4e2a\u53c2\u6570\uff1a\u67e5\u8be2\u57fa\u7840\u8def\u5f84\uff0c\u4ee3\u8868\u5728\u67e5\u8be2\u7528\u6237\u4fe1\u5fc3\u5c06\u5728\u8fd9\u4e2a\u8def\u5f84\u4e0b\u8fdb\u884c\uff0c\u8fd9\u4e2a\u8def\u5f84\u662f\u7531\u6839\u8282\u5f00\u59cb //\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff1a\u67e5\u8be2\u9009\u9879 client . search ( 'DC=tiger,DC=com' , opts , function ( err , res2 ) { //\u67e5\u8be2\u7ed3\u679c\u4e8b\u4ef6\u54cd\u5e94 res2 . on ( 'searchEntry' , function ( entry ) { //\u83b7\u53d6\u67e5\u8be2\u7684\u5bf9\u8c61 var user = entry . object ; var userText = JSON . stringify ( user , null , 2 ); console . log ( userText ); }); res2 . on ( 'searchReference' , function ( referral ) { console . log ( 'referral: ' + referral . uris . join ()); }); //\u67e5\u8be2\u9519\u8bef\u4e8b\u4ef6 res2 . on ( 'error' , function ( err ) { console . error ( 'error: ' + err . message ); //unbind\u64cd\u4f5c\uff0c\u5fc5\u987b\u8981\u505a client . unbind (); }); //\u67e5\u8be2\u7ed3\u675f res2 . on ( 'end' , function ( result ) { console . log ( 'search status: ' + result . status ); //unbind\u64cd\u4f5c\uff0c\u5fc5\u987b\u8981\u505a client . unbind (); }); }); }); \u53c2\u8003\u8d44\u6599 filter\u8bed\u6cd5\uff1a http://www.ldapexplorer.com/en/manual/109010000-ldap-filter-syntax.htm ldapjs\uff1a https://www.npmjs.com/package/ldapjs https://blog.csdn.net/ljheee/article/details/78746037?utm_source=copy https://blog.csdn.net/weixin_34208283/article/details/89375085 https://www.cnblogs.com/kongxianghai/p/4847265.html","title":"node.js\u4e0bLDAP\u67e5\u8be2\u5b9e\u8df5"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/","text":"Node.js v12.14.0 \u6587\u6863 \u00b6 \u8fd4\u56de\u6587\u6863\u9996\u9875 \u641c\u7d22 \u76ee\u5f55 \u00b6 fs\uff08\u6587\u4ef6\u7cfb\u7edf\uff09 \u6587\u4ef6\u8def\u5f84 URL \u5bf9\u8c61\u7684\u652f\u6301 \u6587\u4ef6\u63cf\u8ff0\u7b26 \u7ebf\u7a0b\u6c60\u7684\u4f7f\u7528 fs.Dir \u7c7b dir.close() dir.close(callback) dir.closeSync() dir.path dir.read() dir.read(callback) dir.readSync() dir[Symbol.asyncIterator]() fs.Dirent \u7c7b dirent.isBlockDevice() dirent.isCharacterDevice() dirent.isDirectory() dirent.isFIFO() dirent.isFile() dirent.isSocket() dirent.isSymbolicLink() dirent.name fs.FSWatcher \u7c7b 'change' \u4e8b\u4ef6 'close' \u4e8b\u4ef6 'error' \u4e8b\u4ef6 watcher.close() fs.ReadStream \u7c7b 'close' \u4e8b\u4ef6 'open' \u4e8b\u4ef6 'ready' \u4e8b\u4ef6 readStream.bytesRead readStream.path readStream.pending fs.Stats \u7c7b stats.isBlockDevice() stats.isCharacterDevice() stats.isDirectory() stats.isFIFO() stats.isFile() stats.isSocket() stats.isSymbolicLink() stats.dev stats.ino stats.mode stats.nlink stats.uid stats.gid stats.rdev stats.size stats.blksize stats.blocks stats.atimeMs stats.mtimeMs stats.ctimeMs stats.birthtimeMs stats.atimeNs stats.mtimeNs stats.ctimeNs stats.birthtimeNs stats.atime stats.mtime stats.ctime stats.birthtime \u6587\u4ef6\u5c5e\u6027\u7684\u65f6\u95f4\u503c fs.WriteStream \u7c7b 'close' \u4e8b\u4ef6 'open' \u4e8b\u4ef6 'ready' \u4e8b\u4ef6 writeStream.bytesWritten writeStream.path writeStream.pending [fs.access(path , mode], callback) [fs.accessSync(path , mode]) [fs.appendFile(path, data , options], callback) [fs.appendFileSync(path, data , options]) fs.chmod(path, mode, callback) \u6587\u4ef6\u7684\u6a21\u5f0f fs.chmodSync(path, mode) fs.chown(path, uid, gid, callback) fs.chownSync(path, uid, gid) fs.close(fd, callback) fs.closeSync(fd) fs.constants [fs.copyFile(src, dest , flags], callback) [fs.copyFileSync(src, dest , flags]) [fs.createReadStream(path , options]) [fs.createWriteStream(path , options]) fs.exists(path, callback) fs.existsSync(path) fs.fchmod(fd, mode, callback) fs.fchmodSync(fd, mode) fs.fchown(fd, uid, gid, callback) fs.fchownSync(fd, uid, gid) fs.fdatasync(fd, callback) fs.fdatasyncSync(fd) [fs.fstat(fd , options], callback) [fs.fstatSync(fd , options]) fs.fsync(fd, callback) fs.fsyncSync(fd) [fs.ftruncate(fd , len], callback) [fs.ftruncateSync(fd , len]) fs.futimes(fd, atime, mtime, callback) fs.futimesSync(fd, atime, mtime) fs.lchmod(path, mode, callback) fs.lchmodSync(path, mode) fs.lchown(path, uid, gid, callback) fs.lchownSync(path, uid, gid) fs.link(existingPath, newPath, callback) fs.linkSync(existingPath, newPath) [fs.lstat(path , options], callback) [fs.lstatSync(path , options]) [fs.mkdir(path , options], callback) [fs.mkdirSync(path , options]) [fs.mkdtemp(prefix , options], callback) [fs.mkdtempSync(prefix , options]) [fs.open(path , flags[, mode]], callback) [fs.opendir(path , options], callback) [fs.opendirSync(path , options]) [fs.openSync(path , flags, mode]) fs.read(fd, buffer, offset, length, position, callback) [fs.readdir(path , options], callback) [fs.readdirSync(path , options]) [fs.readFile(path , options], callback) \u6587\u4ef6\u63cf\u8ff0\u7b26 [fs.readFileSync(path , options]) [fs.readlink(path , options], callback) [fs.readlinkSync(path , options]) fs.readSync(fd, buffer, offset, length, position) [fs.realpath(path , options], callback) [fs.realpath.native(path , options], callback) [fs.realpathSync(path , options]) [fs.realpathSync.native(path , options]) fs.rename(oldPath, newPath, callback) fs.renameSync(oldPath, newPath) [fs.rmdir(path , options], callback) [fs.rmdirSync(path , options]) [fs.stat(path , options], callback) [fs.statSync(path , options]) [fs.symlink(target, path , type], callback) [fs.symlinkSync(target, path , type]) [fs.truncate(path , len], callback) [fs.truncateSync(path , len]) fs.unlink(path, callback) fs.unlinkSync(path) [fs.unwatchFile(filename , listener]) fs.utimes(path, atime, mtime, callback) fs.utimesSync(path, atime, mtime) [fs.watch(filename , options][, listener]) \u6ce8\u610f\u4e8b\u9879 \u53ef\u7528\u6027 \u7d22\u5f15\u8282\u70b9 \u6587\u4ef6\u540d\u53c2\u6570 [fs.watchFile(filename , options], listener) [fs.write(fd, buffer , offset[, length[, position]]], callback) [fs.write(fd, string , position[, encoding]], callback) [fs.writeFile(file, data , options], callback) \u4f7f\u7528 fs.writeFile() \u4e0e\u6587\u4ef6\u63cf\u8ff0\u7b26 [fs.writeFileSync(file, data , options]) [fs.writeSync(fd, buffer , offset[, length[, position]]]) [fs.writeSync(fd, string , position[, encoding]]) [fs.writev(fd, buffers , position], callback) [fs.writevSync(fd, buffers , position]) fs \u7684 Promise API FileHandle \u7c7b filehandle.appendFile(data, options) filehandle.chmod(mode) filehandle.chown(uid, gid) filehandle.close() filehandle.datasync() filehandle.fd filehandle.read(buffer, offset, length, position) filehandle.readFile(options) [filehandle.stat( options]) filehandle.sync() filehandle.truncate(len) filehandle.utimes(atime, mtime) [filehandle.write(buffer , offset[, length[, position]]]) [filehandle.write(string , position[, encoding]]) filehandle.writeFile(data, options) [filehandle.writev(buffers , position]) [fsPromises.access(path , mode]) [fsPromises.appendFile(path, data , options]) fsPromises.chmod(path, mode) fsPromises.chown(path, uid, gid) [fsPromises.copyFile(src, dest , flags]) fsPromises.lchmod(path, mode) fsPromises.lchown(path, uid, gid) fsPromises.link(existingPath, newPath) [fsPromises.lstat(path , options]) [fsPromises.mkdir(path , options]) [fsPromises.mkdtemp(prefix , options]) [fsPromises.open(path, flags , mode]) [fsPromises.opendir(path , options]) [fsPromises.readdir(path , options]) [fsPromises.readFile(path , options]) [fsPromises.readlink(path , options]) [fsPromises.realpath(path , options]) fsPromises.rename(oldPath, newPath) [fsPromises.rmdir(path , options]) [fsPromises.stat(path , options]) [fsPromises.symlink(target, path , type]) [fsPromises.truncate(path , len]) fsPromises.unlink(path) fsPromises.utimes(path, atime, mtime) [fsPromises.writeFile(file, data , options]) FS \u5e38\u91cf \u6587\u4ef6\u53ef\u8bbf\u95ee\u6027\u7684\u5e38\u91cf \u6587\u4ef6\u62f7\u8d1d\u7684\u5e38\u91cf \u6587\u4ef6\u6253\u5f00\u7684\u5e38\u91cf \u6587\u4ef6\u7c7b\u578b\u7684\u5e38\u91cf \u6587\u4ef6\u6a21\u5f0f\u7684\u5e38\u91cf \u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 fs\uff08\u6587\u4ef6\u7cfb\u7edf\uff09 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7a33\u5b9a\u6027: 2 - \u7a33\u5b9a fs \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a API\uff0c\u7528\u4e8e\u4ee5\u6a21\u4eff\u6807\u51c6 POSIX \u51fd\u6570\u7684\u65b9\u5f0f\u4e0e\u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u3002 \u8981\u4f7f\u7528\u6b64\u6a21\u5757\uff1a const fs = require ( 'fs' ); \u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u90fd\u5177\u6709\u540c\u6b65\u548c\u5f02\u6b65\u7684\u5f62\u5f0f\u3002 \u5f02\u6b65\u7684\u5f62\u5f0f\u603b\u662f\u5c06\u5b8c\u6210\u56de\u8c03\u4f5c\u4e3a\u5176\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u3002 \u4f20\u7ed9\u5b8c\u6210\u56de\u8c03\u7684\u53c2\u6570\u53d6\u51b3\u4e8e\u5177\u4f53\u65b9\u6cd5\uff0c\u4f46\u7b2c\u4e00\u4e2a\u53c2\u6570\u59cb\u7ec8\u9884\u7559\u7528\u4e8e\u5f02\u5e38\u3002 \u5982\u679c\u64cd\u4f5c\u6210\u529f\u5b8c\u6210\uff0c\u5219\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c06\u4e3a null \u6216 undefined \u3002 const fs = require ( 'fs' ); fs . unlink ( '/tmp/hello' , ( err ) => { if ( err ) throw err ; console . log ( '\u5df2\u6210\u529f\u5220\u9664 /tmp/hello' ); }); \u4f7f\u7528\u540c\u6b65\u7684\u64cd\u4f5c\u53d1\u751f\u7684\u5f02\u5e38\u4f1a\u7acb\u5373\u629b\u51fa\uff0c\u53ef\u4ee5\u4f7f\u7528 try\u2026catch \u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u5141\u8bb8\u5192\u6ce1\u3002 const fs = require ( 'fs' ); try { fs . unlinkSync ( '/tmp/hello' ); console . log ( '\u5df2\u6210\u529f\u5220\u9664 /tmp/hello' ); } catch ( err ) { // \u5904\u7406\u9519\u8bef } \u4f7f\u7528\u5f02\u6b65\u7684\u65b9\u6cd5\u65f6\u65e0\u6cd5\u4fdd\u8bc1\u987a\u5e8f\u3002 \u56e0\u6b64\uff0c\u4ee5\u4e0b\u7684\u64cd\u4f5c\u5bb9\u6613\u51fa\u9519\uff0c\u56e0\u4e3a fs.stat() \u64cd\u4f5c\u53ef\u80fd\u5728 fs.rename() \u64cd\u4f5c\u4e4b\u524d\u5b8c\u6210\uff1a fs . rename ( '/tmp/hello' , '/tmp/world' , ( err ) => { if ( err ) throw err ; console . log ( '\u91cd\u547d\u540d\u5b8c\u6210' ); }); fs . stat ( '/tmp/world' , ( err , stats ) => { if ( err ) throw err ; console . log ( `\u6587\u4ef6\u5c5e\u6027: ${ JSON . stringify ( stats ) } ` ); }); \u8981\u6b63\u786e\u5730\u6392\u5e8f\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u5219\u5c06 fs.stat() \u8c03\u7528\u79fb\u52a8\u5230 fs.rename() \u64cd\u4f5c\u7684\u56de\u8c03\u4e2d\uff1a fs . rename ( '/tmp/hello' , '/tmp/world' , ( err ) => { if ( err ) throw err ; fs . stat ( '/tmp/world' , ( err , stats ) => { if ( err ) throw err ; console . log ( `\u6587\u4ef6\u5c5e\u6027: ${ JSON . stringify ( stats ) } ` ); }); }); \u5728\u7e41\u5fd9\u7684\u8fdb\u7a0b\u4e2d\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e9b\u8c03\u7528\u7684\u5f02\u6b65\u7248\u672c\u3002 \u540c\u6b65\u7684\u7248\u672c\u5c06\u963b\u585e\u6574\u4e2a\u8fdb\u7a0b\uff0c\u76f4\u5230\u5b83\u4eec\u5b8c\u6210\uff08\u505c\u6b62\u6240\u6709\u8fde\u63a5\uff09\u3002 \u867d\u7136\u4e0d\u63a8\u8350\u8fd9\u6837\u4f7f\u7528\uff0c\u4f46\u5927\u591a\u6570 fs \u51fd\u6570\u5141\u8bb8\u7701\u7565\u56de\u8c03\u53c2\u6570\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u4e00\u4e2a\u4f1a\u91cd\u65b0\u629b\u51fa\u9519\u8bef\u7684\u9ed8\u8ba4\u56de\u8c03\u3002 \u8981\u83b7\u53d6\u539f\u59cb\u8c03\u7528\u70b9\u7684\u8ddf\u8e2a\uff0c\u5219\u8bbe\u7f6e NODE_DEBUG \u73af\u5883\u53d8\u91cf\uff1a \u4e0d\u63a8\u8350\u5728\u5f02\u6b65\u7684 fs \u51fd\u6570\u4e0a\u7701\u7565\u56de\u8c03\u51fd\u6570\uff0c\u56e0\u4e3a\u53ef\u80fd\u5bfc\u81f4\u5c06\u6765\u629b\u51fa\u9519\u8bef\u3002 $ cat script.js function bad() { require('fs').readFile('/'); } bad(); $ env NODE_DEBUG = fs node script.js fs.js:88 throw backtrace; ^ Error: EISDIR: illegal operation on a directory, read <stack trace.> \u6587\u4ef6\u8def\u5f84 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5927\u591a\u6570 fs \u64cd\u4f5c\u63a5\u53d7\u7684\u6587\u4ef6\u8def\u5f84\u53ef\u4ee5\u6307\u5b9a\u4e3a\u5b57\u7b26\u4e32\u3001 Buffer \u3001\u6216\u4f7f\u7528 file: \u534f\u8bae\u7684 URL \u5bf9\u8c61\u3002 \u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u8def\u5f84\u88ab\u89e3\u6790\u4e3a\u6807\u8bc6\u7edd\u5bf9\u6216\u76f8\u5bf9\u6587\u4ef6\u540d\u7684 UTF-8 \u5b57\u7b26\u5e8f\u5217\u3002 \u76f8\u5bf9\u8def\u5f84\u5c06\u76f8\u5bf9\u4e8e process.cwd() \u6307\u5b9a\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u8fdb\u884c\u89e3\u6790\u3002 \u5728 POSIX \u4e0a\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u7684\u793a\u4f8b\uff1a const fs = require ( 'fs' ); fs . open ( '/open/some/file.txt' , 'r' , ( err , fd ) => { if ( err ) throw err ; fs . close ( fd , ( err ) => { if ( err ) throw err ; }); }); \u5728 POSIX \u4e0a\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff08\u76f8\u5bf9\u4e8e process.cwd() \uff09\u7684\u793a\u4f8b\uff1a fs . open ( 'file.txt' , 'r' , ( err , fd ) => { if ( err ) throw err ; fs . close ( fd , ( err ) => { if ( err ) throw err ; }); }); \u4f7f\u7528 Buffer \u6307\u5b9a\u7684\u8def\u5f84\u4e3b\u8981\u7528\u4e8e\u5c06\u6587\u4ef6\u8def\u5f84\u89c6\u4e3a\u4e0d\u900f\u660e\u5b57\u8282\u5e8f\u5217\u7684\u67d0\u4e9b POSIX \u64cd\u4f5c\u7cfb\u7edf\u3002 \u5728\u8fd9\u6837\u7684\u7cfb\u7edf\u4e0a\uff0c\u5355\u4e2a\u6587\u4ef6\u8def\u5f84\u53ef\u4ee5\u5305\u542b\u4f7f\u7528\u591a\u79cd\u5b57\u7b26\u7f16\u7801\u7684\u5b50\u5e8f\u5217\u3002 \u4e0e\u5b57\u7b26\u4e32\u8def\u5f84\u4e00\u6837\uff0c Buffer \u8def\u5f84\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\u6216\u7edd\u5bf9\u8def\u5f84\uff1a \u5728 POSIX \u4e0a\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u7684\u793a\u4f8b\uff1a fs . open ( Buffer . from ( '/open/some/file.txt' ), 'r' , ( err , fd ) => { if ( err ) throw err ; fs . close ( fd , ( err ) => { if ( err ) throw err ; }); }); \u5728 Windows \u4e0a\uff0cNode.js \u9075\u5faa\u6bcf\u4e2a\u9a71\u52a8\u5668\u5de5\u4f5c\u76ee\u5f55\u7684\u6982\u5ff5\u3002 \u5f53\u4f7f\u7528\u6ca1\u6709\u53cd\u659c\u6760\u7684\u9a71\u52a8\u5668\u8def\u5f84\u65f6\uff0c\u53ef\u4ee5\u89c2\u5bdf\u5230\u6b64\u884c\u4e3a\u3002 \u4f8b\u5982\uff0c fs.readdirSync('c:\\\\') \u53ef\u80fd\u4f1a\u8fd4\u56de\u4e0e fs.readdirSync('c:') \u4e0d\u540c\u7684\u7ed3\u679c\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605 \u6b64 MSDN \u9875\u9762 \u3002 URL \u5bf9\u8c61\u7684\u652f\u6301 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v7.6.0 \u5bf9\u4e8e\u5927\u591a\u6570 fs \u6a21\u5757\u7684\u51fd\u6570\uff0c path \u6216 filename \u53c2\u6570\u53ef\u4ee5\u4f20\u5165 WHATWG URL \u5bf9\u8c61\u3002 \u4ec5\u652f\u6301\u4f7f\u7528 file: \u534f\u8bae\u7684 URL \u5bf9\u8c61\u3002 const fs = require ( 'fs' ); const fileUrl = new URL ( 'file:///tmp/hello' ); fs . readFileSync ( fileUrl ); file: URL \u59cb\u7ec8\u662f\u7edd\u5bf9\u8def\u5f84\u3002 \u4f7f\u7528 WHATWG URL \u5bf9\u8c61\u53ef\u80fd\u4f1a\u91c7\u7528\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u884c\u4e3a\u3002 \u5728 Windows \u4e0a\uff0c\u5e26\u6709\u4e3b\u673a\u540d\u7684 file: URL \u8f6c\u6362\u4e3a UNC \u8def\u5f84\uff0c\u800c\u5e26\u6709\u9a71\u52a8\u5668\u53f7\u7684 file: URL \u8f6c\u6362\u4e3a\u672c\u5730\u7edd\u5bf9\u8def\u5f84\u3002 \u6ca1\u6709\u4e3b\u673a\u540d\u548c\u9a71\u52a8\u5668\u53f7\u7684 file: URL \u5c06\u5bfc\u81f4\u629b\u51fa\u9519\u8bef\uff1a // \u5728 Windows \u4e0a\uff1a // - \u5e26\u6709\u4e3b\u673a\u540d\u7684 WHATWG \u6587\u4ef6\u7684 URL \u8f6c\u6362\u4e3a UNC \u8def\u5f84\u3002 // file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file fs . readFileSync ( new URL ( 'file://hostname/p/a/t/h/file' )); // - \u5e26\u6709\u9a71\u52a8\u5668\u53f7\u7684 WHATWG \u6587\u4ef6\u7684 URL \u8f6c\u6362\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002 // file:///C:/tmp/hello => C:\\tmp\\hello fs . readFileSync ( new URL ( 'file:///C:/tmp/hello' )); // - \u6ca1\u6709\u4e3b\u673a\u540d\u7684 WHATWG \u6587\u4ef6\u7684 URL \u5fc5\u987b\u5305\u542b\u9a71\u52a8\u5668\u53f7\u3002 fs . readFileSync ( new URL ( 'file:///notdriveletter/p/a/t/h/file' )); fs . readFileSync ( new URL ( 'file:///c/p/a/t/h/file' )); // TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute \u5e26\u6709\u9a71\u52a8\u5668\u53f7\u7684 file: URL \u5fc5\u987b\u4f7f\u7528 : \u4f5c\u4e3a\u9a71\u52a8\u5668\u53f7\u540e\u9762\u7684\u5206\u9694\u7b26\u3002 \u4f7f\u7528\u5176\u4ed6\u5206\u9694\u7b26\u5c06\u5bfc\u81f4\u629b\u51fa\u9519\u8bef\u3002 \u5728\u6240\u6709\u5176\u4ed6\u5e73\u53f0\u4e0a\uff0c\u4e0d\u652f\u6301\u5e26\u6709\u4e3b\u673a\u540d\u7684 file: URL\uff0c\u4f7f\u7528\u65f6\u5c06\u5bfc\u81f4\u629b\u51fa\u9519\u8bef\uff1a // \u5728\u5176\u4ed6\u5e73\u53f0\u4e0a\uff1a // - \u4e0d\u652f\u6301\u5e26\u6709\u4e3b\u673a\u540d\u7684 WHATWG \u6587\u4ef6\u7684 URL\u3002 // file://hostname/p/a/t/h/file => throw! fs . readFileSync ( new URL ( 'file://hostname/p/a/t/h/file' )); // TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute // - WHATWG \u6587\u4ef6\u7684 URL \u8f6c\u6362\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002 // file:///tmp/hello => /tmp/hello fs . readFileSync ( new URL ( 'file:///tmp/hello' )); \u5305\u542b\u7f16\u7801\u540e\u7684\u659c\u6746\u5b57\u7b26\uff08 %2F \uff09\u7684 file: URL \u5728\u6240\u6709\u5e73\u53f0\u4e0a\u90fd\u5c06\u5bfc\u81f4\u629b\u51fa\u9519\u8bef\uff1a // \u5728 Windows \u4e0a\uff1a fs . readFileSync ( new URL ( 'file:///C:/p/a/t/h/%2F' )); fs . readFileSync ( new URL ( 'file:///C:/p/a/t/h/%2f' )); /* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded \\ or / characters */ // \u5728 POSIX \u4e0a\uff1a fs . readFileSync ( new URL ( 'file:///p/a/t/h/%2F' )); fs . readFileSync ( new URL ( 'file:///p/a/t/h/%2f' )); /* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded / characters */ \u5728 Windows \u4e0a\uff0c\u5305\u542b\u7f16\u7801\u540e\u7684\u53cd\u659c\u6746\u5b57\u7b26\uff08 %5C \uff09\u7684 file: URL \u5c06\u5bfc\u81f4\u629b\u51fa\u9519\u8bef\uff1a // \u5728 Windows \u4e0a\uff1a fs . readFileSync ( new URL ( 'file:///C:/path/%5C' )); fs . readFileSync ( new URL ( 'file:///C:/path/%5c' )); /* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded \\ or / characters */ \u6587\u4ef6\u63cf\u8ff0\u7b26 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5728 POSIX \u7cfb\u7edf\u4e0a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\uff0c\u5185\u6838\u90fd\u7ef4\u62a4\u7740\u4e00\u5f20\u5f53\u524d\u6253\u5f00\u7740\u7684\u6587\u4ef6\u548c\u8d44\u6e90\u7684\u8868\u683c\u3002 \u6bcf\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u90fd\u5206\u914d\u4e86\u4e00\u4e2a\u79f0\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u7b80\u5355\u7684\u6570\u5b57\u6807\u8bc6\u7b26\u3002 \u5728\u7cfb\u7edf\u5c42\uff0c\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u90fd\u4f7f\u7528\u8fd9\u4e9b\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u6807\u8bc6\u548c\u8ddf\u8e2a\u6bcf\u4e2a\u7279\u5b9a\u7684\u6587\u4ef6\u3002 Windows \u7cfb\u7edf\u4f7f\u7528\u4e86\u4e00\u4e2a\u867d\u7136\u4e0d\u540c\u4f46\u6982\u5ff5\u4e0a\u7c7b\u4f3c\u7684\u673a\u5236\u6765\u8ddf\u8e2a\u8d44\u6e90\u3002 \u4e3a\u4e86\u7b80\u5316\u7528\u6237\u7684\u5de5\u4f5c\uff0cNode.js \u62bd\u8c61\u51fa\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u7279\u5b9a\u5dee\u5f02\uff0c\u5e76\u4e3a\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6\u5206\u914d\u4e00\u4e2a\u6570\u5b57\u578b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 fs.open() \u65b9\u6cd5\u7528\u4e8e\u5206\u914d\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u4e00\u65e6\u88ab\u5206\u914d\uff0c\u5219\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u7528\u4e8e\u4ece\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\u3001\u5411\u6587\u4ef6\u5199\u5165\u6570\u636e\u3001\u6216\u8bf7\u6c42\u5173\u4e8e\u6587\u4ef6\u7684\u4fe1\u606f\u3002 fs . open ( '/open/some/file.txt' , 'r' , ( err , fd ) => { if ( err ) throw err ; fs . fstat ( fd , ( err , stat ) => { if ( err ) throw err ; // \u4f7f\u7528\u6587\u4ef6\u5c5e\u6027\u3002 // \u59cb\u7ec8\u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\uff01 fs . close ( fd , ( err ) => { if ( err ) throw err ; }); }); }); \u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u9650\u5236\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u5185\u53ef\u80fd\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\uff0c\u56e0\u6b64\u5f53\u64cd\u4f5c\u5b8c\u6210\u65f6\u5173\u95ed\u63cf\u8ff0\u7b26\u81f3\u5173\u91cd\u8981\u3002 \u5982\u679c\u4e0d\u8fd9\u6837\u505a\u5c06\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\uff0c\u6700\u7ec8\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u5d29\u6e83\u3002 \u7ebf\u7a0b\u6c60\u7684\u4f7f\u7528 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6240\u6709\u7684\u6587\u4ef6\u7cfb\u7edf API\uff0c\u9664\u4e86 fs.FSWatcher() \u548c\u90a3\u4e9b\u663e\u5f0f\u540c\u6b65\u7684\u4e4b\u5916\uff0c\u90fd\u4f7f\u7528 libuv \u7684\u7ebf\u7a0b\u6c60\uff0c\u8fd9\u5bf9\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u5916\u548c\u8d1f\u9762\u7684\u6027\u80fd\u5f71\u54cd\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u53c2\u9605 UV_THREADPOOL_SIZE \u6587\u6863\u3002 fs.Dir \u7c7b # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u4ee3\u8868\u76ee\u5f55\u6d41\u7684\u7c7b\u3002 \u7531 fs.opendir() \u3001 fs.opendirSync() \u6216 fsPromises.opendir() \u521b\u5efa\u3002 const fs = require ( 'fs' ); async function print ( path ) { const dir = await fs . promises . opendir ( path ); for await ( const dirent of dir ) { console . log ( dirent . name ); } } print ( './' ). catch ( console . error ); dir.close() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u8fd4\u56de: \u5f02\u6b65\u5730\u5173\u95ed\u76ee\u5f55\u7684\u5e95\u5c42\u8d44\u6e90\u53e5\u67c4\u3002 \u968f\u540e\u7684\u8bfb\u53d6\u5c06\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002 \u8fd4\u56de\u4e00\u4e2a Promise \uff0c\u5c06\u4f1a\u5728\u5173\u95ed\u8d44\u6e90\u4e4b\u540e\u88ab\u89e3\u51b3\u3002 dir.close(callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 callback err \u5f02\u6b65\u5730\u5173\u95ed\u76ee\u5f55\u7684\u5e95\u5c42\u8d44\u6e90\u53e5\u67c4\u3002 \u968f\u540e\u7684\u8bfb\u53d6\u5c06\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002 \u5173\u95ed\u8d44\u6e90\u53e5\u67c4\u4e4b\u540e\u5c06\u4f1a\u8c03\u7528 callback \u3002 dir.closeSync() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u540c\u6b65\u5730\u5173\u95ed\u76ee\u5f55\u7684\u5e95\u5c42\u8d44\u6e90\u53e5\u67c4\u3002 \u968f\u540e\u7684\u8bfb\u53d6\u5c06\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002 dir.path # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u6b64\u76ee\u5f55\u7684\u53ea\u8bfb\u8def\u5f84\uff0c\u4e0e\u63d0\u4f9b\u7ed9 fs.opendir() \u3001 fs.opendirSync() \u6216 fsPromises.opendir() \u7684\u4e00\u6837\u3002 dir.read() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u8fd4\u56de: \u5305\u542b | \u3002 \u901a\u8fc7 readdir(3) \u5f02\u6b65\u5730\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u4f5c\u4e3a fs.Dirent \u3002 \u8bfb\u53d6\u5b8c\u6210\u4e4b\u540e\uff0c\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a Promise \uff0c\u5b83\u88ab\u89e3\u51b3\u65f6\u5c06\u4f1a\u8fd4\u56de fs.Dirent \u6216 null \uff08\u5982\u679c\u6ca1\u6709\u66f4\u591a\u7684\u76ee\u5f55\u9879\u8981\u8bfb\u53d6\uff09\u3002 \u6b64\u51fd\u6570\u8fd4\u56de\u7684\u76ee\u5f55\u9879\u4e0d\u9075\u5faa\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e95\u5c42\u76ee\u5f55\u673a\u5236\u6240\u63d0\u4f9b\u7684\u7279\u5b9a\u987a\u5e8f\u3002 \u904d\u5386\u76ee\u5f55\u65f6\u6dfb\u52a0\u6216\u5220\u9664\u7684\u76ee\u5f55\u9879\u53ef\u80fd\u4f1a\u6216\u53ef\u80fd\u4e0d\u4f1a\u5305\u542b\u5728\u904d\u5386\u7684\u7ed3\u679c\u4e2d\u3002 dir.read(callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 callback err dirent | \u901a\u8fc7 readdir(3) \u5f02\u6b65\u5730\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u4f5c\u4e3a fs.Dirent \u3002 \u8bfb\u53d6\u5b8c\u6210\u4e4b\u540e\uff0c\u5c06\u4f1a\u8c03\u7528 callback \u5e76\u4f20\u5165 fs.Dirent \u6216 null \uff08\u5982\u679c\u6ca1\u6709\u66f4\u591a\u7684\u76ee\u5f55\u9879\u8981\u8bfb\u53d6\uff09\u3002 \u6b64\u51fd\u6570\u8fd4\u56de\u7684\u76ee\u5f55\u9879\u4e0d\u9075\u5faa\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e95\u5c42\u76ee\u5f55\u673a\u5236\u6240\u63d0\u4f9b\u7684\u7279\u5b9a\u987a\u5e8f\u3002 \u904d\u5386\u76ee\u5f55\u65f6\u6dfb\u52a0\u6216\u5220\u9664\u7684\u76ee\u5f55\u9879\u53ef\u80fd\u4f1a\u6216\u53ef\u80fd\u4e0d\u4f1a\u5305\u542b\u5728\u904d\u5386\u7684\u7ed3\u679c\u4e2d\u3002 dir.readSync() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u8fd4\u56de: | \u901a\u8fc7 readdir(3) \u540c\u6b65\u5730\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u4f5c\u4e3a fs.Dirent \u3002 \u5982\u679c\u6ca1\u6709\u66f4\u591a\u7684\u76ee\u5f55\u9879\u8981\u8bfb\u53d6\uff0c\u5219\u5c06\u4f1a\u8fd4\u56de null \u3002 \u6b64\u51fd\u6570\u8fd4\u56de\u7684\u76ee\u5f55\u9879\u4e0d\u9075\u5faa\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e95\u5c42\u76ee\u5f55\u673a\u5236\u6240\u63d0\u4f9b\u7684\u7279\u5b9a\u987a\u5e8f\u3002 \u904d\u5386\u76ee\u5f55\u65f6\u6dfb\u52a0\u6216\u5220\u9664\u7684\u76ee\u5f55\u9879\u53ef\u80fd\u4f1a\u6216\u53ef\u80fd\u4e0d\u4f1a\u5305\u542b\u5728\u904d\u5386\u7684\u7ed3\u679c\u4e2d\u3002 dir Symbol.asyncIterator # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u8fd4\u56de: \u7684 \u901a\u8fc7 readdir(3) \u5f02\u6b65\u5730\u904d\u5386\u76ee\u5f55\uff0c\u76f4\u5230\u8bfb\u53d6\u4e86\u6240\u6709\u7684\u76ee\u5f55\u9879\u3002 \u5f02\u6b65\u8fed\u4ee3\u5668\u8fd4\u56de\u7684\u76ee\u5f55\u9879\u59cb\u7ec8\u4e3a fs.Dirent \u3002 dir.read() \u4e2d\u4e3a null \u7684\u60c5\u51b5\u4f1a\u5728\u5185\u90e8\u5904\u7406\u3002 \u6709\u5173\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605 fs.Dir \u3002 \u8be5\u8fed\u4ee3\u5668\u8fd4\u56de\u7684\u76ee\u5f55\u9879\u4e0d\u9075\u5faa\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e95\u5c42\u76ee\u5f55\u673a\u5236\u6240\u63d0\u4f9b\u7684\u7279\u5b9a\u987a\u5e8f\u3002 \u904d\u5386\u76ee\u5f55\u65f6\u6dfb\u52a0\u6216\u5220\u9664\u7684\u76ee\u5f55\u9879\u53ef\u80fd\u4f1a\u6216\u53ef\u80fd\u4e0d\u4f1a\u5305\u542b\u5728\u904d\u5386\u7684\u7ed3\u679c\u4e2d\u3002 fs.Dirent \u7c7b # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u76ee\u5f55\u9879\u7684\u8868\u793a\u5f62\u5f0f\uff0c\u901a\u8fc7\u4ece fs.Dir \u4e2d\u8bfb\u53d6\u800c\u8fd4\u56de\u3002 \u6b64\u5916\uff0c\u5f53\u4f7f\u7528 withFileTypes \u9009\u9879\u8bbe\u7f6e\u4e3a true \u8c03\u7528 fs.readdir() \u6216 fs.readdirSync() \u65f6\uff0c\u751f\u6210\u7684\u6570\u7ec4\u5c06\u4f1a\u586b\u5145 fs.Dirent \u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u6216 Buffer \u3002 dirent.isBlockDevice() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u5757\u8bbe\u5907\uff0c\u5219\u8fd4\u56de true \u3002 dirent.isCharacterDevice() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u5b57\u7b26\u8bbe\u5907\uff0c\u5219\u8fd4\u56de true \u3002 dirent.isDirectory() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\uff0c\u5219\u8fd4\u56de true \u3002 dirent.isFIFO() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u7ba1\u9053\uff0c\u5219\u8fd4\u56de true \u3002 dirent.isFile() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u5e38\u89c4\u6587\u4ef6\uff0c\u5219\u8fd4\u56de true \u3002 dirent.isSocket() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u5957\u63a5\u5b57\uff0c\u5219\u8fd4\u56de true \u3002 dirent.isSymbolicLink() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u8fd4\u56de true \u3002 dirent.name # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 | fs.Dirent \u5bf9\u8c61\u6307\u5411\u7684\u6587\u4ef6\u540d\u3002 \u6b64\u503c\u7684\u7c7b\u578b\u53d6\u51b3\u4e8e\u4f20\u9012\u7ed9 fs.readdir() \u6216 fs.readdirSync() \u7684 options.encoding \u3002 fs.FSWatcher \u7c7b # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.5.8 \u7ee7\u627f\u81ea \u6210\u529f\u8c03\u7528 fs.watch() \u65b9\u6cd5\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 fs.FSWatcher \u5bf9\u8c61\u3002 \u6bcf\u5f53\u6307\u5b9a\u76d1\u89c6\u7684\u6587\u4ef6\u88ab\u4fee\u6539\u65f6\uff0c\u6240\u6709\u7684 fs.FSWatcher \u5bf9\u8c61\u90fd\u4f1a\u89e6\u53d1 'change' \u4e8b\u4ef6\u3002 'change' \u4e8b\u4ef6 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.5.8 eventType \u5df2\u53d1\u751f\u7684\u66f4\u6539\u4e8b\u4ef6\u7684\u7c7b\u578b\u3002 filename | \u66f4\u6539\u7684\u6587\u4ef6\u540d\uff08\u5982\u679c\u76f8\u5173\u6216\u53ef\u7528\uff09\u3002 \u5f53\u76d1\u89c6\u7684\u76ee\u5f55\u6216\u6587\u4ef6\u4e2d\u53d1\u751f\u66f4\u6539\u65f6\u89e6\u53d1\u3002 \u5728 fs.watch() \u4e2d\u67e5\u770b\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002 \u53ef\u80fd\u4e0d\u63d0\u4f9b filename \u53c2\u6570\uff0c\u8fd9\u53d6\u51b3\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684\u652f\u6301\u3002 \u5982\u679c\u63d0\u4f9b\u4e86 filename \uff0c\u5219\u5f53\u8c03\u7528 fs.watch() \u5e76\u5c06\u5176 encoding \u9009\u9879\u8bbe\u7f6e\u4e3a 'buffer' \u65f6\uff0c filename \u5c06\u662f\u4e00\u4e2a Buffer \uff0c\u5426\u5219 filename \u5c06\u662f UTF-8 \u5b57\u7b26\u4e32\u3002 // \u4f7f\u7528 fs.watch\uff08\uff09\u76d1\u542c\u5668\u7684\u793a\u4f8b\u3002 fs . watch ( './tmp' , { encoding : 'buffer' }, ( eventType , filename ) => { if ( filename ) { console . log ( filename ); // \u6253\u5370: <Buffer ...> } }); 'close' \u4e8b\u4ef6 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 \u5f53\u76d1\u89c6\u5668\u505c\u6b62\u76d1\u89c6\u66f4\u6539\u65f6\u89e6\u53d1\u3002 \u5173\u95ed\u7684 fs.FSWatcher \u5bf9\u8c61\u5728\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e2d\u4e0d\u518d\u53ef\u7528\u3002 'error' \u4e8b\u4ef6 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.5.8 error \u5f53\u76d1\u89c6\u6587\u4ef6\u65f6\u53d1\u751f\u9519\u8bef\u65f6\u89e6\u53d1\u3002 \u53d1\u751f\u9519\u8bef\u7684 fs.FSWatcher \u5bf9\u8c61\u5728\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e2d\u4e0d\u518d\u53ef\u7528\u3002 watcher.close() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.5.8 \u7ed9\u5b9a\u7684 fs.FSWatcher \u505c\u6b62\u76d1\u89c6\u66f4\u6539\u3002 \u4e00\u65e6\u505c\u6b62\uff0c\u5219 fs.FSWatcher \u5bf9\u8c61\u5c06\u4e0d\u518d\u53ef\u7528\u3002 fs.ReadStream \u7c7b # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 \u7ee7\u627f\u81ea: \u6210\u529f\u8c03\u7528 fs.createReadStream() \u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 fs.ReadStream \u5bf9\u8c61\u3002 'close' \u4e8b\u4ef6 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 \u5f53 fs.ReadStream \u7684\u5e95\u5c42\u6587\u4ef6\u63cf\u8ff0\u7b26\u5df2\u5173\u95ed\u65f6\u89e6\u53d1\u3002 'open' \u4e8b\u4ef6 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 fd ReadStream \u4f7f\u7528\u7684\u6574\u6570\u578b\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u5f53 fs.ReadStream \u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6253\u5f00\u65f6\u89e6\u53d1\u3002 'ready' \u4e8b\u4ef6 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v9.11.0 \u5f53 fs.ReadStream \u51c6\u5907\u597d\u4f7f\u7528\u65f6\u89e6\u53d1\u3002 'open' \u4e8b\u4ef6\u4e4b\u540e\u7acb\u5373\u89e6\u53d1\u3002 readStream.bytesRead # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v6.4.0 \u5230\u76ee\u524d\u4e3a\u6b62\u5df2\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002 readStream.path # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 | \u6d41\u6b63\u5728\u8bfb\u53d6\u7684\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7531 fs.createReadStream() \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u3002 \u5982\u679c path \u4f20\u5165\u5b57\u7b26\u4e32\uff0c\u5219 readStream.path \u5c06\u662f\u5b57\u7b26\u4e32\u3002 \u5982\u679c path \u4f20\u5165 Buffer \uff0c\u5219 readStream.path \u5c06\u662f Buffer \u3002 readStream.pending # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v11.2.0 \u5982\u679c\u5e95\u5c42\u7684\u6587\u4ef6\u8fd8\u672a\u88ab\u6253\u5f00\uff08\u5373\u5728\u89e6\u53d1 'ready' \u4e8b\u4ef6\u4e4b\u524d\uff09\uff0c\u5219\u6b64\u5c5e\u6027\u4e3a true \u3002 fs.Stats \u7c7b # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fs.Stats \u5bf9\u8c61\u63d0\u4f9b\u4e86\u5173\u4e8e\u6587\u4ef6\u7684\u4fe1\u606f\u3002 \u4ece fs.stat() \u3001 fs.lstat() \u548c fs.fstat() \u53ca\u5176\u540c\u6b65\u7684\u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61\u90fd\u5c5e\u4e8e\u6b64\u7c7b\u578b\u3002 \u5982\u679c\u4f20\u7ed9\u8fd9\u4e9b\u65b9\u6cd5\u7684 options \u4e2d\u7684 bigint \u4e3a true\uff0c\u5219\u6570\u503c\u5c06\u4f1a\u4e3a bigint \u578b\u800c\u4e0d\u662f number \u578b\uff0c\u5e76\u4e14\u8be5\u5bf9\u8c61\u5c06\u4f1a\u5305\u542b\u989d\u5916\u7684\u4ee5 Ns \u4e3a\u540e\u7f00\u7684\u7eb3\u79d2\u7cbe\u5ea6\u7684\u5c5e\u6027\u3002 Stats { dev: 2114, ino: 48064969, mode: 33188, nlink: 1, uid: 85, gid: 100, rdev: 0, size: 527, blksize: 4096, blocks: 8, atimeMs: 1318289051000.1, mtimeMs: 1318289051000.1, ctimeMs: 1318289051000.1, birthtimeMs: 1318289051000.1, atime: Mon, 10 Oct 2011 23:24:11 GMT, mtime: Mon, 10 Oct 2011 23:24:11 GMT, ctime: Mon, 10 Oct 2011 23:24:11 GMT, birthtime: Mon, 10 Oct 2011 23:24:11 GMT } bigint \u7684\u7248\u672c\uff1a BigIntStats { dev: 2114n, ino: 48064969n, mode: 33188n, nlink: 1n, uid: 85n, gid: 100n, rdev: 0n, size: 527n, blksize: 4096n, blocks: 8n, atimeMs: 1318289051000n, mtimeMs: 1318289051000n, ctimeMs: 1318289051000n, birthtimeMs: 1318289051000n, atimeNs: 1318289051000000000n, mtimeNs: 1318289051000000000n, ctimeNs: 1318289051000000000n, birthtimeNs: 1318289051000000000n, atime: Mon, 10 Oct 2011 23:24:11 GMT, mtime: Mon, 10 Oct 2011 23:24:11 GMT, ctime: Mon, 10 Oct 2011 23:24:11 GMT, birthtime: Mon, 10 Oct 2011 23:24:11 GMT } stats.isBlockDevice() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u5757\u8bbe\u5907\uff0c\u5219\u8fd4\u56de true \u3002 stats.isCharacterDevice() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u5b57\u7b26\u8bbe\u5907\uff0c\u5219\u8fd4\u56de true \u3002 stats.isDirectory() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\uff0c\u5219\u8fd4\u56de true \u3002 stats.isFIFO() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u7ba1\u9053\uff0c\u5219\u8fd4\u56de true \u3002 stats.isFile() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u5e38\u89c4\u6587\u4ef6\uff0c\u5219\u8fd4\u56de true \u3002 stats.isSocket() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u5957\u63a5\u5b57\uff0c\u5219\u8fd4\u56de true \u3002 stats.isSymbolicLink() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u8fd4\u56de true \u3002 \u6b64\u65b9\u6cd5\u4ec5\u5728\u4f7f\u7528 fs.lstat() \u65f6\u6709\u6548\u3002 stats.dev # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u5305\u542b\u8be5\u6587\u4ef6\u7684\u8bbe\u5907\u7684\u6570\u5b57\u6807\u8bc6\u7b26\u3002 stats.ino # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u6587\u4ef6\u7cfb\u7edf\u7279\u5b9a\u7684\u6587\u4ef6\u7d22\u5f15\u8282\u70b9\u7f16\u53f7\u3002 stats.mode # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u63cf\u8ff0\u6587\u4ef6\u7c7b\u578b\u548c\u6a21\u5f0f\u7684\u4f4d\u5b57\u6bb5\u3002 stats.nlink # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u6587\u4ef6\u5b58\u5728\u7684\u786c\u94fe\u63a5\u6570\u3002 stats.uid # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u62e5\u6709\u8be5\u6587\u4ef6\uff08POSIX\uff09\u7684\u7528\u6237\u7684\u6570\u5b57\u578b\u7528\u6237\u6807\u8bc6\u7b26\u3002 stats.gid # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u62e5\u6709\u8be5\u6587\u4ef6\uff08POSIX\uff09\u7684\u7fa4\u7ec4\u7684\u6570\u5b57\u578b\u7fa4\u7ec4\u6807\u8bc6\u7b26\u3002 stats.rdev # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u5982\u679c\u6587\u4ef6\u88ab\u89c6\u4e3a\u7279\u6b8a\u6587\u4ef6\uff0c\u5219\u6b64\u503c\u4e3a\u6570\u5b57\u578b\u8bbe\u5907\u6807\u8bc6\u7b26\u3002 stats.size # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u6587\u4ef6\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002 stats.blksize # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u7528\u4e8e I/O \u64cd\u4f5c\u7684\u6587\u4ef6\u7cfb\u7edf\u5757\u7684\u5927\u5c0f\u3002 stats.blocks # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u4e3a\u6b64\u6587\u4ef6\u5206\u914d\u7684\u5757\u6570\u3002 stats.atimeMs # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.1.0 | \u8868\u660e\u4e0a\u6b21\u8bbf\u95ee\u6b64\u6587\u4ef6\u7684\u65f6\u95f4\u6233\uff0c\u4ee5 POSIX \u7eaa\u5143\u4ee5\u6765\u7684\u6beb\u79d2\u6570\u8868\u793a\u3002 stats.mtimeMs # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.1.0 | \u8868\u660e\u4e0a\u6b21\u4fee\u6539\u6b64\u6587\u4ef6\u7684\u65f6\u95f4\u6233\uff0c\u4ee5 POSIX \u7eaa\u5143\u4ee5\u6765\u7684\u6beb\u79d2\u6570\u8868\u793a\u3002 stats.ctimeMs # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.1.0 | \u8868\u660e\u4e0a\u6b21\u66f4\u6539\u6587\u4ef6\u72b6\u6001\u7684\u65f6\u95f4\u6233\uff0c\u4ee5 POSIX \u7eaa\u5143\u4ee5\u6765\u7684\u6beb\u79d2\u6570\u8868\u793a\u3002 stats.birthtimeMs # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.1.0 | \u8868\u660e\u6b64\u6587\u4ef6\u7684\u521b\u5efa\u65f6\u95f4\u7684\u65f6\u95f4\u6233\uff0c\u4ee5 POSIX \u7eaa\u5143\u4ee5\u6765\u7684\u6beb\u79d2\u6570\u8868\u793a\u3002 stats.atimeNs # \u00b6 \u6682\u65e0\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.10.0 Only present when bigint: true is passed into the method that generates the object. The timestamp indicating the last time this file was accessed expressed in nanoseconds since the POSIX Epoch. stats.mtimeNs # \u00b6 \u6682\u65e0\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.10.0 Only present when bigint: true is passed into the method that generates the object. The timestamp indicating the last time this file was modified expressed in nanoseconds since the POSIX Epoch. stats.ctimeNs # \u00b6 \u6682\u65e0\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.10.0 Only present when bigint: true is passed into the method that generates the object. The timestamp indicating the last time the file status was changed expressed in nanoseconds since the POSIX Epoch. stats.birthtimeNs # \u00b6 \u6682\u65e0\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.10.0 Only present when bigint: true is passed into the method that generates the object. The timestamp indicating the creation time of this file expressed in nanoseconds since the POSIX Epoch. stats.atime # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.13 \u8868\u660e\u4e0a\u6b21\u8bbf\u95ee\u6b64\u6587\u4ef6\u7684\u65f6\u95f4\u6233\u3002 stats.mtime # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.13 \u8868\u660e\u4e0a\u6b21\u4fee\u6539\u6b64\u6587\u4ef6\u7684\u65f6\u95f4\u6233\u3002 stats.ctime # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.13 \u8868\u660e\u4e0a\u6b21\u66f4\u6539\u6587\u4ef6\u72b6\u6001\u7684\u65f6\u95f4\u6233\u3002 stats.birthtime # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.13 \u8868\u793a\u6b64\u6587\u4ef6\u7684\u521b\u5efa\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002 \u6587\u4ef6\u5c5e\u6027\u7684\u65f6\u95f4\u503c # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 atimeMs \u3001 mtimeMs \u3001 ctimeMs \u548c birthtimeMs \u5c5e\u6027\u662f\u4fdd\u5b58\u76f8\u5e94\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u7684 \u6570\u503c \u3002 \u5b83\u4eec\u7684\u7cbe\u5ea6\u53d6\u51b3\u4e8e\u5e73\u53f0\u3002 \u5f53\u5c06 bigint: true \u4f20\u7ed9\u751f\u6210\u8be5\u5bf9\u8c61\u7684\u65b9\u6cd5\u65f6\uff0c\u5c5e\u6027\u5c06\u4f1a\u662f bigint \u578b\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u4f1a\u662f \u6570\u5b57\u578b \u3002 atimeNs \u3001 mtimeNs \u3001 ctimeNs \u548c birthtimeNs \u5c5e\u6027\u662f\u4fdd\u5b58\u76f8\u5e94\u65f6\u95f4\uff08\u4ee5\u7eb3\u79d2\u4e3a\u5355\u4f4d\uff09\u7684 bigint \u3002 \u4ec5\u5f53\u5c06 bigint: true \u4f20\u7ed9\u751f\u6210\u8be5\u5bf9\u8c61\u7684\u65b9\u6cd5\u65f6\uff0c\u5b83\u4eec\u624d\u4f1a\u51fa\u73b0\u3002 \u5b83\u4eec\u7684\u7cbe\u5ea6\u53d6\u51b3\u4e8e\u5e73\u53f0\u3002 atime \u3001 mtime \u3001 ctime \u548c birthtime \u662f\u5bf9\u5e94\u65f6\u95f4\u7684 Date \u5bf9\u8c61\u3002 Date \u503c\u548c\u6570\u503c\u6ca1\u6709\u5173\u8054\u6027\u3002 \u8d4b\u503c\u65b0\u7684\u6570\u503c\u3001\u6216\u8005\u6539\u53d8 Date \u7684\u503c\uff0c\u90fd\u5c06\u4e0d\u4f1a\u5f71\u54cd\u5230\u5bf9\u5e94\u7684\u5c5e\u6027\u3002 stat \u5bf9\u8c61\u4e2d\u7684\u65f6\u95f4\u5177\u6709\u4ee5\u4e0b\u8bed\u4e49\uff1a atime \"\u8bbf\u95ee\u65f6\u95f4\" - \u4e0a\u6b21\u8bbf\u95ee\u6587\u4ef6\u6570\u636e\u7684\u65f6\u95f4\u3002\u7531 mknod(2) \u3001 utimes(2) \u548c read(2) \u7cfb\u7edf\u8c03\u7528\u66f4\u6539\u3002 mtime \"\u4fee\u6539\u65f6\u95f4\" - \u4e0a\u6b21\u4fee\u6539\u6587\u4ef6\u6570\u636e\u7684\u65f6\u95f4\u3002\u7531 mknod(2) \u3001 utimes(2) \u548c write(2) \u7cfb\u7edf\u8c03\u7528\u66f4\u6539\u3002 ctime \"\u66f4\u6539\u65f6\u95f4\" - \u4e0a\u6b21\u66f4\u6539\u6587\u4ef6\u72b6\u6001\uff08\u4fee\u6539\u7d22\u5f15\u8282\u70b9\u6570\u636e\uff09\u7684\u65f6\u95f4\u3002\u7531 chmod(2) \u3001 chown(2) \u3001 link(2) \u3001 mknod(2) \u3001 rename(2) \u3001 unlink(2) \u3001 utimes(2) \u3001 read(2) \u548c write(2) \u7cfb\u7edf\u8c03\u7528\u66f4\u6539\u3002 birthtime \"\u521b\u5efa\u65f6\u95f4\" - \u521b\u5efa\u6587\u4ef6\u7684\u65f6\u95f4\u3002\u5f53\u521b\u5efa\u6587\u4ef6\u65f6\u8bbe\u7f6e\u4e00\u6b21\u3002 \u5728\u4e0d\u652f\u6301\u521b\u5efa\u65f6\u95f4\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\uff0c\u8be5\u5b57\u6bb5\u53ef\u80fd\u6539\u4e3a\u4fdd\u5b58 ctime \u6216 1970-01-01T00:00Z \uff08\u5373 Unix \u7eaa\u5143\u65f6\u95f4\u6233 0 \uff09\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8be5\u503c\u53ef\u80fd\u5927\u4e8e atime \u6216 mtime \u3002 \u5728 Darwin \u548c\u5176\u4ed6\u7684 FreeBSD \u884d\u751f\u7cfb\u7edf\u4e0a\uff0c\u4e5f\u53ef\u80fd\u4f7f\u7528 utimes(2) \u7cfb\u7edf\u8c03\u7528\u5c06 atime \u663e\u5f0f\u5730\u8bbe\u7f6e\u4e3a\u6bd4 birthtime \u66f4\u65e9\u7684\u503c\u3002 \u5728 Node.js 0.12 \u4e4b\u524d\uff0c\u5728 Windows \u7cfb\u7edf\u4e0a ctime \u4fdd\u5b58 birthtime \u3002 \u4ece 0.12 \u5f00\u59cb\uff0c ctime \u4e0d\u518d\u662f\u201c\u521b\u5efa\u65f6\u95f4\u201d\uff0c\u800c\u5728 Unix \u7cfb\u7edf\u4e0a\u5219\u4ece\u6765\u90fd\u4e0d\u662f\u3002 fs.WriteStream \u7c7b # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 \u7ee7\u627f\u81ea 'close' \u4e8b\u4ef6 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 \u5f53 WriteStream \u7684\u5e95\u5c42\u6587\u4ef6\u63cf\u8ff0\u7b26\u5df2\u5173\u95ed\u65f6\u89e6\u53d1\u3002 'open' \u4e8b\u4ef6 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 fd WriteStream \u4f7f\u7528\u7684\u6574\u6570\u578b\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u5f53 WriteStream \u7684\u6587\u4ef6\u6253\u5f00\u65f6\u89e6\u53d1\u3002 'ready' \u4e8b\u4ef6 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v9.11.0 \u5f53 fs.WriteStream \u51c6\u5907\u597d\u4f7f\u7528\u65f6\u89e6\u53d1\u3002 'open' \u4e8b\u4ef6\u4e4b\u540e\u7acb\u5373\u89e6\u53d1\u3002 writeStream.bytesWritten # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.4.7 \u5230\u76ee\u524d\u4e3a\u6b62\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u4e0d\u5305\u62ec\u4ecd\u5728\u6392\u961f\u7b49\u5f85\u5199\u5165\u7684\u6570\u636e\u3002 writeStream.path # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 \u6d41\u6b63\u5728\u5199\u5165\u7684\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7531 fs.createWriteStream() \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u3002 \u5982\u679c path \u4f20\u5165\u5b57\u7b26\u4e32\uff0c\u5219 writeStream.path \u5c06\u662f\u5b57\u7b26\u4e32\u3002 \u5982\u679c path \u4f20\u5165 Buffer \uff0c\u5219 writeStream.path \u5c06\u662f Buffer \u3002 writeStream.pending # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v11.2.0 \u5982\u679c\u5e95\u5c42\u7684\u6587\u4ef6\u8fd8\u672a\u88ab\u6253\u5f00\uff08\u5373\u5728\u89e6\u53d1 'ready' \u4e8b\u4ef6\u4e4b\u524d\uff09\uff0c\u5219\u6b64\u5c5e\u6027\u4e3a true \u3002 fs.access(path[, mode], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | mode \u9ed8\u8ba4\u503c: fs.constants.F_OK \u3002 callback err \u6d4b\u8bd5\u7528\u6237\u5bf9 path \u6307\u5b9a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6743\u9650\u3002 mode \u53c2\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u8981\u6267\u884c\u7684\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u3002 mode \u53ef\u9009\u7684\u503c\u53c2\u9605 \u6587\u4ef6\u53ef\u8bbf\u95ee\u6027\u7684\u5e38\u91cf \u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u4f8b\u5982 fs.constants.W_OK | fs.constants.R_OK \uff09\u3002 \u6700\u540e\u4e00\u4e2a\u53c2\u6570 callback \u662f\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u8c03\u7528\u65f6\u5c06\u4f20\u5165\u53ef\u80fd\u7684\u9519\u8bef\u53c2\u6570\u3002 \u5982\u679c\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u5931\u8d25\uff0c\u5219\u9519\u8bef\u53c2\u6570\u5c06\u662f Error \u5bf9\u8c61\u3002 \u4ee5\u4e0b\u793a\u4f8b\u68c0\u67e5 package.json \u662f\u5426\u5b58\u5728\uff0c\u4ee5\u53ca\u5b83\u662f\u5426\u53ef\u8bfb\u6216\u53ef\u5199\u3002 const file = 'package.json' ; // \u68c0\u67e5\u5f53\u524d\u76ee\u5f55\u4e2d\u662f\u5426\u5b58\u5728\u8be5\u6587\u4ef6\u3002 fs . access ( file , fs . constants . F_OK , ( err ) => { console . log ( ` ${ file } ${ err ? '\u4e0d\u5b58\u5728' : '\u5b58\u5728' } ` ); }); // \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u53ef\u8bfb\u3002 fs . access ( file , fs . constants . R_OK , ( err ) => { console . log ( ` ${ file } ${ err ? '\u4e0d\u53ef\u8bfb' : '\u53ef\u8bfb' } ` ); }); // \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u53ef\u5199\u3002 fs . access ( file , fs . constants . W_OK , ( err ) => { console . log ( ` ${ file } ${ err ? '\u4e0d\u53ef\u5199' : '\u53ef\u5199' } ` ); }); // \u68c0\u67e5\u5f53\u524d\u76ee\u5f55\u4e2d\u662f\u5426\u5b58\u5728\u8be5\u6587\u4ef6\uff0c\u4ee5\u53ca\u8be5\u6587\u4ef6\u662f\u5426\u53ef\u5199\u3002 fs . access ( file , fs . constants . F_OK | fs . constants . W_OK , ( err ) => { if ( err ) { console . error ( ` ${ file } ${ err . code === 'ENOENT' ? '\u4e0d\u5b58\u5728' : '\u53ea\u53ef\u8bfb' } ` ); } else { console . log ( ` ${ file } \u5b58\u5728\uff0c\u4e14\u5b83\u662f\u53ef\u5199\u7684` ); } }); \u4e0d\u5efa\u8bae\u5728\u8c03\u7528 fs.open() \u3001 fs.readFile() \u6216 fs.writeFile() \u4e4b\u524d\u4f7f\u7528 fs.access() \u68c0\u67e5\u6587\u4ef6\u7684\u53ef\u8bbf\u95ee\u6027\u3002 \u8fd9\u6837\u505a\u4f1a\u5f15\u5165\u7ade\u6001\u6761\u4ef6\uff0c\u56e0\u4e3a\u5176\u4ed6\u8fdb\u7a0b\u53ef\u80fd\u4f1a\u5728\u4e24\u4e2a\u8c03\u7528\u4e4b\u95f4\u66f4\u6539\u6587\u4ef6\u7684\u72b6\u6001\u3002 \u76f8\u53cd\uff0c\u5e94\u8be5\u76f4\u63a5\u6253\u5f00\u3001\u8bfb\u53d6\u6216\u5199\u5165\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u65e0\u6cd5\u8bbf\u95ee\u5219\u5904\u7406\u5f15\u53d1\u7684\u9519\u8bef\u3002 \u5199\u5165\uff08\u4e0d\u63a8\u8350\uff09 fs . access ( 'myfile' , ( err ) => { if ( ! err ) { console . error ( 'myfile \u5df2\u5b58\u5728' ); return ; } fs . open ( 'myfile' , 'wx' , ( err , fd ) => { if ( err ) throw err ; writeMyData ( fd ); }); }); \u5199\u5165\uff08\u63a8\u8350\uff09 fs . open ( 'myfile' , 'wx' , ( err , fd ) => { if ( err ) { if ( err . code === 'EEXIST' ) { console . error ( 'myfile \u5df2\u5b58\u5728' ); return ; } throw err ; } writeMyData ( fd ); }); \u8bfb\u53d6\uff08\u4e0d\u63a8\u8350\uff09 fs . access ( 'myfile' , ( err ) => { if ( err ) { if ( err . code === 'ENOENT' ) { console . error ( 'myfile \u4e0d\u5b58\u5728' ); return ; } throw err ; } fs . open ( 'myfile' , 'r' , ( err , fd ) => { if ( err ) throw err ; readMyData ( fd ); }); }); \u8bfb\u53d6\uff08\u63a8\u8350\uff09 fs . open ( 'myfile' , 'r' , ( err , fd ) => { if ( err ) { if ( err . code === 'ENOENT' ) { console . error ( 'myfile \u4e0d\u5b58\u5728' ); return ; } throw err ; } readMyData ( fd ); }); \u4e0a\u9762\u7684\u201c\u4e0d\u63a8\u8350\u201d\u793a\u4f8b\u4f1a\u5148\u68c0\u67e5\u53ef\u8bbf\u95ee\u6027\uff0c\u7136\u540e\u518d\u4f7f\u7528\u6587\u4ef6\u3002 \u201c\u63a8\u8350\u201d\u793a\u4f8b\u5219\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u76f4\u63a5\u4f7f\u7528\u6587\u4ef6\u5e76\u5904\u7406\u9519\u8bef\uff08\u5982\u679c\u6709\u9519\u8bef\u7684\u8bdd\uff09\u3002 \u901a\u5e38\uff0c\u4ec5\u5728\u4e0d\u76f4\u63a5\u4f7f\u7528\u6587\u4ef6\u65f6\u624d\u68c0\u67e5\u6587\u4ef6\u7684\u53ef\u8bbf\u95ee\u6027\uff0c\u4f8b\u5982\u5f53\u5176\u53ef\u8bbf\u95ee\u6027\u662f\u6765\u81ea\u5176\u4ed6\u8fdb\u7a0b\u7684\u4fe1\u53f7\u65f6\u3002 \u5728 Windows \u4e0a\uff0c\u76ee\u5f55\u4e0a\u7684\u8bbf\u95ee\u63a7\u5236\u7b56\u7565\uff08ACL\uff09\u53ef\u80fd\u4f1a\u9650\u5236\u5bf9\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u8bbf\u95ee\u3002 \u4f46\u662f\uff0c fs.access() \u51fd\u6570\u4e0d\u68c0\u67e5 ACL\uff0c\u56e0\u6b64\u5373\u4f7f ACL \u9650\u5236\u7528\u6237\u8bfb\u53d6\u6216\u5199\u5165\u8def\u5f84\uff0c\u4e5f\u53ef\u80fd\u62a5\u544a\u8def\u5f84\u662f\u53ef\u8bbf\u95ee\u7684\u3002 fs.accessSync(path[, mode]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | mode \u9ed8\u8ba4\u503c: fs.constants.F_OK \u3002 \u540c\u6b65\u5730\u6d4b\u8bd5\u7528\u6237\u5bf9 path \u6307\u5b9a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6743\u9650\u3002 mode \u53c2\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u8981\u6267\u884c\u7684\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u3002 mode \u53ef\u9009\u7684\u503c\u53c2\u9605 \u6587\u4ef6\u53ef\u8bbf\u95ee\u6027\u7684\u5e38\u91cf \u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u4f8b\u5982 fs.constants.W_OK | fs.constants.R_OK \uff09\u3002 \u5982\u679c\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u5931\u8d25\uff0c\u5219\u629b\u51fa Error \u3002 \u5426\u5219\uff0c\u8be5\u65b9\u6cd5\u5c06\u8fd4\u56de undefined \u3002 try { fs . accessSync ( 'etc/passwd' , fs . constants . R_OK | fs . constants . W_OK ); console . log ( '\u53ef\u4ee5\u8bfb\u5199' ); } catch ( err ) { console . error ( '\u65e0\u6743\u8bbf\u95ee' ); } fs.appendFile(path, data[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 data | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'a' \u3002 callback err \u5f02\u6b65\u5730\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5c1a\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 Buffer \u3002 fs . appendFile ( 'message.txt' , '\u8ffd\u52a0\u7684\u6570\u636e' , ( err ) => { if ( err ) throw err ; console . log ( '\u6570\u636e\u5df2\u8ffd\u52a0\u5230\u6587\u4ef6' ); }); \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff1a fs . appendFile ( 'message.txt' , '\u8ffd\u52a0\u7684\u6570\u636e' , 'utf8' , callback ); path \u53ef\u4ee5\u6307\u5b9a\u4e3a\u5df2\u6253\u5f00\u7528\u4e8e\u8ffd\u52a0\uff08\u4f7f\u7528 fs.open() \u6216 fs.openSync() \uff09\u7684\u6570\u5b57\u578b\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0d\u4f1a\u81ea\u52a8\u5173\u95ed\u3002 fs . open ( 'message.txt' , 'a' , ( err , fd ) => { if ( err ) throw err ; fs . appendFile ( fd , '\u8ffd\u52a0\u7684\u6570\u636e' , 'utf8' , ( err ) => { fs . close ( fd , ( err ) => { if ( err ) throw err ; }); if ( err ) throw err ; }); }); fs.appendFileSync(path, data[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 data | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'a' \u3002 \u540c\u6b65\u5730\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5c1a\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 Buffer \u3002 try { fs . appendFileSync ( 'message.txt' , '\u8ffd\u52a0\u7684\u6570\u636e' ); console . log ( '\u6570\u636e\u5df2\u8ffd\u52a0\u5230\u6587\u4ef6' ); } catch ( err ) { /* \u5904\u7406\u9519\u8bef */ } \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff1a fs . appendFileSync ( 'message.txt' , '\u8ffd\u52a0\u7684\u6570\u636e' , 'utf8' ); path \u53ef\u4ee5\u6307\u5b9a\u4e3a\u5df2\u6253\u5f00\u7528\u4e8e\u8ffd\u52a0\uff08\u4f7f\u7528 fs.open() \u6216 fs.openSync() \uff09\u7684\u6570\u5b57\u578b\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0d\u4f1a\u81ea\u52a8\u5173\u95ed\u3002 let fd ; try { fd = fs . openSync ( 'message.txt' , 'a' ); fs . appendFileSync ( fd , '\u8ffd\u52a0\u7684\u6570\u636e' , 'utf8' ); } catch ( err ) { /* \u5904\u7406\u9519\u8bef */ } finally { if ( fd !== undefined ) fs . closeSync ( fd ); } fs.chmod(path, mode, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | mode callback err \u5f02\u6b65\u5730\u66f4\u6539\u6587\u4ef6\u7684\u6743\u9650\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u4e5f\u53ef\u53c2\u9605 chmod(2) \u3002 fs . chmod ( 'my_file.txt' , 0o775 , ( err ) => { if ( err ) throw err ; console . log ( '\u6587\u4ef6 \u201cmy_file.txt\u201d \u7684\u6743\u9650\u5df2\u88ab\u66f4\u6539' ); }); \u6587\u4ef6\u7684\u6a21\u5f0f # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 fs.chmod() \u548c fs.chmodSync() \u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684 mode \u53c2\u6570\u662f\u4f7f\u7528\u4ee5\u4e0b\u5e38\u91cf\u7684\u903b\u8f91\u6216\u8fd0\u7b97\u521b\u5efa\u7684\u6570\u5b57\u578b\u4f4d\u63a9\u7801\uff1a \u5e38\u91cf \u516b\u8fdb\u5236\u503c \u8bf4\u660e fs.constants.S_IRUSR 0o400 \u6240\u6709\u8005\u53ef\u8bfb fs.constants.S_IWUSR 0o200 \u6240\u6709\u8005\u53ef\u5199 fs.constants.S_IXUSR 0o100 \u6240\u6709\u8005\u53ef\u6267\u884c\u6216\u641c\u7d22 fs.constants.S_IRGRP 0o40 \u7fa4\u7ec4\u53ef\u8bfb fs.constants.S_IWGRP 0o20 \u7fa4\u7ec4\u53ef\u5199 fs.constants.S_IXGRP 0o10 \u7fa4\u7ec4\u53ef\u6267\u884c\u6216\u641c\u7d22 fs.constants.S_IROTH 0o4 \u5176\u4ed6\u4eba\u53ef\u8bfb fs.constants.S_IWOTH 0o2 \u5176\u4ed6\u4eba\u53ef\u5199 fs.constants.S_IXOTH 0o1 \u5176\u4ed6\u4eba\u53ef\u6267\u884c\u6216\u641c\u7d22 \u6784\u9020 mode \u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u4e09\u4e2a\u516b\u8fdb\u5236\u6570\u5b57\u7684\u5e8f\u5217\uff08 \u4f8b\u5982 765 \uff09\u3002 \u6700\u5de6\u8fb9\u7684\u6570\u5b57\uff08\u793a\u4f8b\u4e2d\u7684 7 \uff09\u6307\u5b9a\u6587\u4ef6\u6240\u6709\u8005\u7684\u6743\u9650\u3002 \u4e2d\u95f4\u7684\u6570\u5b57\uff08\u793a\u4f8b\u4e2d\u7684 6 \uff09\u6307\u5b9a\u7fa4\u7ec4\u7684\u6743\u9650\u3002 \u6700\u53f3\u8fb9\u7684\u6570\u5b57\uff08\u793a\u4f8b\u4e2d\u7684 5 \uff09\u6307\u5b9a\u5176\u4ed6\u4eba\u7684\u6743\u9650\u3002 \u6570\u5b57 \u8bf4\u660e 7 \u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c 6 \u53ef\u8bfb\u3001\u53ef\u5199 5 \u53ef\u8bfb\u3001\u53ef\u6267\u884c 4 \u53ea\u8bfb 3 \u53ef\u5199\u3001\u53ef\u6267\u884c 2 \u53ea\u5199 1 \u53ea\u53ef\u6267\u884c 0 \u6ca1\u6709\u6743\u9650 \u4f8b\u5982\uff0c\u516b\u8fdb\u5236\u503c 0o765 \u8868\u793a\uff1a \u6240\u6709\u8005\u53ef\u4ee5\u8bfb\u53d6\u3001\u5199\u5165\u548c\u6267\u884c\u8be5\u6587\u4ef6\u3002 \u7fa4\u7ec4\u53ef\u4ee5\u8bfb\u548c\u5199\u5165\u8be5\u6587\u4ef6\u3002 \u5176\u4ed6\u4eba\u53ef\u4ee5\u8bfb\u53d6\u548c\u6267\u884c\u8be5\u6587\u4ef6\u3002 \u5f53\u4f7f\u7528\u671f\u671b\u7684\u6587\u4ef6\u6a21\u5f0f\u7684\u539f\u59cb\u6570\u5b57\u65f6\uff0c\u4efb\u4f55\u5927\u4e8e 0o777 \u7684\u503c\u90fd\u53ef\u80fd\u5bfc\u81f4\u4e0d\u652f\u6301\u4e00\u81f4\u7684\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u884c\u4e3a\u3002 \u56e0\u6b64\uff0c\u8bf8\u5982 S_ISVTX \u3001 S_ISGID \u6216 S_ISUID \u4e4b\u7c7b\u7684\u5e38\u91cf\u4e0d\u4f1a\u5728 fs.constants \u4e2d\u516c\u5f00\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a\u5728 Windows \u4e0a\uff0c\u53ea\u80fd\u66f4\u6539\u5199\u5165\u6743\u9650\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5b9e\u73b0\u7fa4\u7ec4\u3001\u6240\u6709\u8005\u6216\u5176\u4ed6\u4eba\u7684\u6743\u9650\u4e4b\u95f4\u7684\u533a\u522b\u3002 fs.chmodSync(path, mode) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | mode \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.chmod() \u3002 \u4e5f\u53ef\u53c2\u9605 chmod(2) \u3002 fs.chown(path, uid, gid, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | uid gid callback err \u5f02\u6b65\u5730\u66f4\u6539\u6587\u4ef6\u7684\u6240\u6709\u8005\u548c\u7fa4\u7ec4\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u4e5f\u53ef\u53c2\u9605 chown(2) \u3002 fs.chownSync(path, uid, gid) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | uid gid \u540c\u6b65\u5730\u66f4\u6539\u6587\u4ef6\u7684\u6240\u6709\u8005\u548c\u7fa4\u7ec4\u3002 \u8fd4\u56de undefined \u3002 \u8fd9\u662f fs.chown() \u7684\u540c\u6b65\u7248\u672c\u3002 \u4e5f\u53ef\u53c2\u9605 chown(2) \u3002 fs.close(fd, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd callback err \u5f02\u6b65\u7684 close(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 fs.closeSync(fd) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.21 fd \u540c\u6b65\u7684 close(2) \u3002\u8fd4\u56de undefined \u3002 fs.constants # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u8fd4\u56de\u5305\u542b\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u5e38\u7528\u5e38\u91cf\u7684\u5bf9\u8c61\u3002 \u5f53\u524d\u5b9a\u4e49\u7684\u7279\u5b9a\u5e38\u91cf\u5728 FS \u5e38\u91cf \u4e2d\u63cf\u8ff0\u3002 fs.copyFile(src, dest[, flags], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.5.0 src | | \u8981\u62f7\u8d1d\u7684\u6e90\u6587\u4ef6\u540d\u3002 dest | | \u62f7\u8d1d\u64cd\u4f5c\u7684\u76ee\u6807\u6587\u4ef6\u540d\u3002 flags \u7528\u4e8e\u62f7\u8d1d\u64cd\u4f5c\u7684\u4fee\u9970\u7b26\u3002 \u9ed8\u8ba4\u503c: 0 \u3002 callback \u5f02\u6b65\u5730\u5c06 src \u62f7\u8d1d\u5230 dest \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c dest \u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u8986\u76d6\u5b83\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 Node.js \u4e0d\u4fdd\u8bc1\u62f7\u8d1d\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u3002 \u5982\u679c\u5728\u6253\u5f00\u76ee\u6807\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u540e\u53d1\u751f\u9519\u8bef\uff0c\u5219 Node.js \u5c06\u5c1d\u8bd5\u5220\u9664\u76ee\u6807\u6587\u4ef6\u3002 flags \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u62f7\u8d1d\u64cd\u4f5c\u7684\u884c\u4e3a\u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u6bd4\u5982 fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE \uff09\u3002 fs.constants.COPYFILE_EXCL - \u5982\u679c dest \u5df2\u5b58\u5728\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fs.constants.COPYFILE_FICLONE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\uff08copy-on-write\uff09\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u4f7f\u7528\u540e\u5907\u7684\u62f7\u8d1d\u673a\u5236\u3002 fs.constants.COPYFILE_FICLONE_FORCE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 const fs = require ( 'fs' ); // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u521b\u5efa\u6216\u8986\u76d6\u76ee\u6807\u6587\u4ef6\u3002 fs . copyFile ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' , ( err ) => { if ( err ) throw err ; console . log ( '\u6e90\u6587\u4ef6\u5df2\u62f7\u8d1d\u5230\u76ee\u6807\u6587\u4ef6' ); }); \u5982\u679c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6570\u5b57\uff0c\u5219\u5b83\u6307\u5b9a flags : const fs = require ( 'fs' ); const { COPYFILE_EXCL } = fs . constants ; // \u901a\u8fc7\u4f7f\u7528 COPYFILE_EXCL\uff0c\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fs . copyFile ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' , COPYFILE_EXCL , callback ); fs.copyFileSync(src, dest[, flags]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.5.0 src | | \u8981\u62f7\u8d1d\u7684\u6e90\u6587\u4ef6\u540d\u3002 dest | | \u62f7\u8d1d\u64cd\u4f5c\u7684\u76ee\u6807\u6587\u4ef6\u540d\u3002 flags \u7528\u4e8e\u62f7\u8d1d\u64cd\u4f5c\u7684\u4fee\u9970\u7b26\u3002 \u9ed8\u8ba4\u503c: 0 \u3002 \u540c\u6b65\u5730\u5c06 src \u62f7\u8d1d\u5230 dest \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c dest \u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u8986\u76d6\u5b83\u3002 \u8fd4\u56de undefined \u3002 Node.js \u4e0d\u4fdd\u8bc1\u62f7\u8d1d\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u3002 \u5982\u679c\u5728\u6253\u5f00\u76ee\u6807\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u540e\u53d1\u751f\u9519\u8bef\uff0c\u5219 Node.js \u5c06\u5c1d\u8bd5\u5220\u9664\u76ee\u6807\u6587\u4ef6\u3002 flags \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u62f7\u8d1d\u64cd\u4f5c\u7684\u884c\u4e3a\u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u6bd4\u5982 fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE \uff09\u3002 fs.constants.COPYFILE_EXCL - \u5982\u679c dest \u5df2\u5b58\u5728\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fs.constants.COPYFILE_FICLONE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\uff08copy-on-write\uff09\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u4f7f\u7528\u540e\u5907\u7684\u62f7\u8d1d\u673a\u5236\u3002 fs.constants.COPYFILE_FICLONE_FORCE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 const fs = require ( 'fs' ); // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u521b\u5efa\u6216\u8986\u76d6\u76ee\u6807\u6587\u4ef6\u3002 fs . copyFileSync ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' ); console . log ( '\u6e90\u6587\u4ef6\u5df2\u62f7\u8d1d\u5230\u76ee\u6807\u6587\u4ef6' ); \u5982\u679c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6570\u5b57\uff0c\u5219\u5b83\u6307\u5b9a flags : const fs = require ( 'fs' ); const { COPYFILE_EXCL } = fs . constants ; // \u901a\u8fc7\u4f7f\u7528 COPYFILE_EXCL\uff0c\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fs . copyFileSync ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' , COPYFILE_EXCL ); fs.createReadStream(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | flags \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 encoding \u9ed8\u8ba4\u503c: null \u3002 fd \u9ed8\u8ba4\u503c: null \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 autoClose \u9ed8\u8ba4\u503c: true \u3002 emitClose \u9ed8\u8ba4\u503c: false \u3002 start end \u9ed8\u8ba4\u503c: Infinity \u3002 highWaterMark \u9ed8\u8ba4\u503c: 64 * 1024 \u3002 \u8fd4\u56de: \u4e0e\u7528\u4e8e\u53ef\u8bfb\u6d41\u7684 16 kb \u7684\u9ed8\u8ba4\u7684 highWaterMark \u4e0d\u540c\uff0c\u6b64\u65b9\u6cd5\u8fd4\u56de\u7684\u6d41\u5177\u6709 64 kb \u7684\u9ed8\u8ba4\u7684 highWaterMark \u3002 options \u53ef\u4ee5\u5305\u62ec start \u548c end \u503c\uff0c\u4ee5\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u5b9a\u8303\u56f4\u7684\u5b57\u8282\u800c\u4e0d\u662f\u6574\u4e2a\u6587\u4ef6\u3002 start \u548c end \u90fd\u5305\u542b\u5728\u5185\u5e76\u4ece 0 \u5f00\u59cb\u8ba1\u6570\uff0c\u5141\u8bb8\u7684\u503c\u5728 [0, Number.MAX_SAFE_INTEGER ] \u7684\u8303\u56f4\u5185\u3002 \u5982\u679c\u6307\u5b9a\u4e86 fd \u5e76\u4e14\u7701\u7565 start \u6216\u4e3a undefined \uff0c\u5219 fs.createReadStream() \u4ece\u5f53\u524d\u7684\u6587\u4ef6\u4f4d\u7f6e\u5f00\u59cb\u987a\u5e8f\u5730\u8bfb\u53d6\u3002 encoding \u53ef\u4ee5\u662f Buffer \u63a5\u53d7\u7684\u4efb\u4f55\u4e00\u79cd\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c\u6307\u5b9a\u4e86 fd \uff0c\u5219 ReadStream \u5c06\u4f1a\u5ffd\u7565 path \u53c2\u6570\u5e76\u5c06\u4f1a\u4f7f\u7528\u6307\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u8fd9\u610f\u5473\u7740\u5c06\u4e0d\u4f1a\u89e6\u53d1 'open' \u4e8b\u4ef6\u3002 fd \u5fc5\u987b\u662f\u963b\u585e\u7684\uff0c\u975e\u963b\u585e\u7684 fd \u5e94\u8be5\u4f20\u7ed9 net.Socket \u3002 \u5982\u679c fd \u6307\u5411\u4ec5\u652f\u6301\u963b\u585e\u8bfb\u53d6\u7684\u5b57\u7b26\u8bbe\u5907\uff08\u4f8b\u5982\u952e\u76d8\u6216\u58f0\u5361\uff09\uff0c\u5219\u5728\u6570\u636e\u53ef\u7528\u4e4b\u524d\uff0c\u8bfb\u53d6\u64cd\u4f5c\u4e0d\u4f1a\u5b8c\u6210\u3002 \u8fd9\u53ef\u4ee5\u9632\u6b62\u8fdb\u7a0b\u9000\u51fa\u5e76\u4e14\u6d41\u81ea\u7136\u5730\u5173\u95ed\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6d41\u5728\u9500\u6bc1\u540e\u5c06\u4e0d\u4f1a\u89e6\u53d1 'close' \u4e8b\u4ef6\u3002 \u8fd9\u4e0e\u5176\u4ed6 Readable \u6d41\u7684\u9ed8\u8ba4\u884c\u4e3a\u76f8\u53cd\u3002 \u5c06 emitClose \u9009\u9879\u8bbe\u7f6e\u4e3a true \u53ef\u66f4\u6539\u6b64\u884c\u4e3a\u3002 const fs = require ( 'fs' ); // \u4ece\u67d0\u4e2a\u5b57\u7b26\u8bbe\u5907\u521b\u5efa\u4e00\u4e2a\u6d41\u3002 const stream = fs . createReadStream ( '/dev/input/event0' ); setTimeout (() => { stream . close (); // \u8fd9\u53ef\u80fd\u4e0d\u4f1a\u5173\u95ed\u6d41\u3002 // \u4eba\u5de5\u6807\u8bb0\u6d41\u7684\u7ed3\u675f\uff0c\u5c31\u50cf\u5e95\u5c42\u7684\u8d44\u6e90\u81ea\u8eab\u5df2\u8868\u660e\u6587\u4ef6\u7684\u7ed3\u675f\u4e00\u6837\uff0c\u5141\u8bb8\u6d41\u8fdb\u884c\u5173\u95ed\u3002 // \u8fd9\u4e0d\u4f1a\u53d6\u6d88\u6302\u8d77\u4e2d\u7684\u8bfb\u53d6\u64cd\u4f5c\uff0c\u5982\u679c\u5b58\u5728\u6b64\u7c7b\u64cd\u4f5c\uff0c\u5219\u8fc7\u7a0b\u53ef\u80fd\u4ecd\u65e0\u6cd5\u6210\u529f\u5730\u9000\u51fa\uff0c\u76f4\u5230\u5b8c\u6210\u3002 stream . push ( null ); stream . read ( 0 ); }, 100 ); \u5982\u679c autoClose \u4e3a false \uff0c\u5219\u5373\u4f7f\u51fa\u73b0\u9519\u8bef\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e5f\u4e0d\u4f1a\u88ab\u5173\u95ed\u3002 \u5e94\u7528\u7a0b\u5e8f\u8d1f\u8d23\u5173\u95ed\u5b83\u5e76\u786e\u4fdd\u6ca1\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u6cc4\u6f0f\u3002 \u5982\u679c autoClose \u8bbe\u4e3a true \uff08\u9ed8\u8ba4\u7684\u884c\u4e3a\uff09\uff0c\u5219\u5728 'error' \u6216 'end' \u4e8b\u4ef6\u65f6\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c06\u4f1a\u88ab\u81ea\u52a8\u5730\u5173\u95ed\u3002 mode \u7528\u4e8e\u8bbe\u7f6e\u6587\u4ef6\u6a21\u5f0f\uff08\u6743\u9650\u548c\u7c98\u6ede\u4f4d\uff09\uff0c\u4f46\u4ec5\u9650\u4e8e\u521b\u5efa\u6587\u4ef6\u65f6\u3002 \u793a\u4f8b\uff0c\u4ece\u4e00\u4e2a\u5927\u5c0f\u4e3a 100 \u4e2a\u5b57\u8282\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6700\u540e 10 \u4e2a\u5b57\u8282\uff1a fs . createReadStream ( 'sample.txt' , { start : 90 , end : 99 }); \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 fs.createWriteStream(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | flags \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'w' \u3002 encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 fd \u9ed8\u8ba4\u503c: null \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 autoClose \u9ed8\u8ba4\u503c: true \u3002 emitClose \u9ed8\u8ba4\u503c: false \u3002 start \u8fd4\u56de: options \u53ef\u4ee5\u5305\u62ec start \u9009\u9879\uff0c\u5141\u8bb8\u5728\u6587\u4ef6\u7684\u5f00\u5934\u4e4b\u540e\u7684\u67d0\u4e2a\u4f4d\u7f6e\u5199\u5165\u6570\u636e\uff0c\u5141\u8bb8\u7684\u503c\u5728 [0, Number.MAX_SAFE_INTEGER ] \u7684\u8303\u56f4\u5185\u3002 \u82e5\u8981\u4fee\u6539\u6587\u4ef6\u800c\u4e0d\u662f\u8986\u76d6\u5b83\uff0c\u5219 flags \u6a21\u5f0f\u9700\u8981\u4e3a r+ \u800c\u4e0d\u662f\u9ed8\u8ba4\u7684 w \u6a21\u5f0f\u3002 encoding \u53ef\u4ee5\u662f Buffer \u63a5\u53d7\u7684\u4efb\u4f55\u4e00\u79cd\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c autoClose \u8bbe\u7f6e\u4e3a true \uff08\u9ed8\u8ba4\u7684\u884c\u4e3a\uff09\uff0c\u5219\u5728 'error' \u6216 'finish' \u4e8b\u4ef6\u65f6\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c06\u4f1a\u88ab\u81ea\u52a8\u5730\u5173\u95ed\u3002 \u5982\u679c autoClose \u4e3a false \uff0c\u5219\u5373\u4f7f\u51fa\u73b0\u9519\u8bef\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e5f\u4e0d\u4f1a\u88ab\u5173\u95ed\u3002 \u5e94\u7528\u7a0b\u5e8f\u8d1f\u8d23\u5173\u95ed\u5b83\u5e76\u786e\u4fdd\u6ca1\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u6cc4\u6f0f\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6d41\u5728\u9500\u6bc1\u540e\u5c06\u4e0d\u4f1a\u89e6\u53d1 'close' \u4e8b\u4ef6\u3002 \u8fd9\u4e0e\u5176\u4ed6 Writable \u6d41\u7684\u9ed8\u8ba4\u884c\u4e3a\u76f8\u53cd\u3002 \u5c06 emitClose \u9009\u9879\u8bbe\u7f6e\u4e3a true \u53ef\u66f4\u6539\u6b64\u884c\u4e3a\u3002 \u4e0e ReadStream \u7c7b\u4f3c\uff0c\u5982\u679c\u6307\u5b9a\u4e86 fd \uff0c\u5219 WriteStream \u5c06\u4f1a\u5ffd\u7565 path \u53c2\u6570\u5e76\u5c06\u4f1a\u4f7f\u7528\u6307\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u8fd9\u610f\u5473\u7740\u4e0d\u4f1a\u89e6\u53d1 'open' \u4e8b\u4ef6\u3002 fd \u5fc5\u987b\u662f\u963b\u585e\u7684\uff0c\u975e\u963b\u585e\u7684 fd \u5e94\u8be5\u4f20\u7ed9 net.Socket \u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 fs.exists(path, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 \u7a33\u5b9a\u6027: 0 - \u5e9f\u5f03: \u6539\u4e3a\u4f7f\u7528 fs.stat() \u6216 fs.access() \u3002 path | | callback exists \u901a\u8fc7\u68c0\u67e5\u6587\u4ef6\u7cfb\u7edf\u6765\u6d4b\u8bd5\u7ed9\u5b9a\u7684\u8def\u5f84\u662f\u5426\u5b58\u5728\u3002 \u7136\u540e\u8c03\u7528 callback \u5e76\u5e26\u4e0a\u53c2\u6570 true \u6216 false \uff1a fs . exists ( '/etc/passwd' , ( exists ) => { console . log ( exists ? '\u5b58\u5728' : '\u4e0d\u5b58\u5728' ); }); \u6b64\u56de\u8c03\u7684\u53c2\u6570\u4e0e\u5176\u4ed6 Node.js \u56de\u8c03\u4e0d\u4e00\u81f4\u3002 \u901a\u5e38\uff0cNode.js \u56de\u8c03\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f err \u53c2\u6570\uff0c\u540e\u9762\u53ef\u9009\u5730\u8ddf\u968f\u5176\u4ed6\u53c2\u6570\u3002 fs.exists() \u7684\u56de\u8c03\u53ea\u6709\u4e00\u4e2a\u5e03\u5c14\u503c\u53c2\u6570\u3002 \u8fd9\u662f\u63a8\u8350 fs.access() \u4ee3\u66ff fs.exists() \u7684\u539f\u56e0\u4e4b\u4e00\u3002 \u4e0d\u5efa\u8bae\u5728\u8c03\u7528 fs.open() \u3001 fs.readFile() \u6216 fs.writeFile() \u4e4b\u524d\u4f7f\u7528 fs.exists() \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u3002 \u8fd9\u6837\u505a\u4f1a\u5f15\u5165\u7ade\u6001\u6761\u4ef6\uff0c\u56e0\u4e3a\u5176\u4ed6\u8fdb\u7a0b\u53ef\u80fd\u4f1a\u5728\u4e24\u6b21\u8c03\u7528\u4e4b\u95f4\u66f4\u6539\u6587\u4ef6\u7684\u72b6\u6001\u3002 \u76f8\u53cd\uff0c\u5e94\u8be5\u76f4\u63a5\u6253\u5f00\u3001\u8bfb\u53d6\u6216\u5199\u5165\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u5904\u7406\u5f15\u53d1\u7684\u9519\u8bef\u3002 \u5199\u5165\uff08\u4e0d\u63a8\u8350\uff09 fs . exists ( 'myfile' , ( exists ) => { if ( exists ) { console . error ( 'myfile \u5df2\u5b58\u5728' ); } else { fs . open ( 'myfile' , 'wx' , ( err , fd ) => { if ( err ) throw err ; writeMyData ( fd ); }); } }); \u5199\u5165\uff08\u63a8\u8350\uff09 fs . open ( 'myfile' , 'wx' , ( err , fd ) => { if ( err ) { if ( err . code === 'EEXIST' ) { console . error ( 'myfile \u5df2\u5b58\u5728' ); return ; } throw err ; } writeMyData ( fd ); }); \u8bfb\u53d6\uff08\u4e0d\u63a8\u8350\uff09 fs . exists ( 'myfile' , ( exists ) => { if ( exists ) { fs . open ( 'myfile' , 'r' , ( err , fd ) => { if ( err ) throw err ; readMyData ( fd ); }); } else { console . error ( 'myfile \u4e0d\u5b58\u5728' ); } }); \u8bfb\u53d6\uff08\u63a8\u8350\uff09 fs . open ( 'myfile' , 'r' , ( err , fd ) => { if ( err ) { if ( err . code === 'ENOENT' ) { console . error ( 'myfile \u4e0d\u5b58\u5728' ); return ; } throw err ; } readMyData ( fd ); }); \u4e0a\u9762\u7684\u201c\u4e0d\u63a8\u8350\u201d\u793a\u4f8b\u4f1a\u5148\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u7136\u540e\u518d\u4f7f\u7528\u8be5\u6587\u4ef6\u3002 \u201c\u63a8\u8350\u201d\u793a\u4f8b\u5219\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u76f4\u63a5\u4f7f\u7528\u6587\u4ef6\u5e76\u5904\u7406\u9519\u8bef\uff08\u5982\u679c\u6709\u9519\u8bef\u7684\u8bdd\uff09\u3002 \u901a\u5e38\uff0c\u4ec5\u5728\u6587\u4ef6\u4e0d\u76f4\u63a5\u4f7f\u7528\u65f6\u624d\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u4f8b\u5982\u5f53\u5176\u5b58\u5728\u6027\u662f\u6765\u81ea\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u7684\u4fe1\u53f7\u65f6\u3002 fs.existsSync(path) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | \u8fd4\u56de: \u5982\u679c\u8def\u5f84\u5b58\u5728\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.exists() \u3002 \u867d\u7136 fs.exists() \u5df2\u5e9f\u5f03\uff0c\u4f46 fs.existsSync() \u4e0d\u662f\u5e9f\u5f03\u7684\u3002 fs.exists() \u7684 callback \u53c2\u6570\u63a5\u53d7\u4e0e\u5176\u4ed6 Node.js \u56de\u8c03\u4e0d\u4e00\u81f4\u7684\u53c2\u6570\u3002 fs.existsSync() \u4e0d\u4f7f\u7528\u56de\u8c03\u3002 if ( fs . existsSync ( '/etc/passwd' )) { console . log ( '\u6587\u4ef6\u5df2\u5b58\u5728' ); } fs.fchmod(fd, mode, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd mode callback err \u5f02\u6b65\u7684 fchmod(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 fs.fchmodSync(fd, mode) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.4.7 fd mode \u540c\u6b65\u7684 fchmod(2) \u3002\u8fd4\u56de undefined \u3002 fs.fchown(fd, uid, gid, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd uid gid callback err \u5f02\u6b65\u7684 fchown(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 fs.fchownSync(fd, uid, gid) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.4.7 fd uid gid \u540c\u6b65\u7684 fchown(2) \u3002\u8fd4\u56de undefined \u3002 fs.fdatasync(fd, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd callback err \u5f02\u6b65\u7684 fdatasync(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 fs.fdatasyncSync(fd) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.96 fd \u540c\u6b65\u7684 fdatasync(2) \u3002\u8fd4\u56de undefined \u3002 fs.fstat(fd[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 callback err stats \u5f02\u6b65\u7684 fstat(2) \u3002 \u56de\u8c03\u4f1a\u4f20\u5165\u4e24\u4e2a\u53c2\u6570 (err, stats) \uff0c\u5176\u4e2d stats \u662f fs.Stats \u5bf9\u8c61\u3002 fstat() \u4e0e stat() \u76f8\u540c\uff0c\u9664\u4e86\u6587\u4ef6\u662f\u7531\u6587\u4ef6\u63cf\u8ff0\u7b26 fd \u6307\u5b9a\u3002 fs.fstatSync(fd[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u540c\u6b65\u7684 fstat(2) \u3002 fs.fsync(fd, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd callback err \u5f02\u6b65\u7684 fsync(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 fs.fsyncSync(fd) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.96 fd \u540c\u6b65\u7684 fsync(2) \u3002\u8fd4\u56de undefined \u3002 fs.ftruncate(fd[, len], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd len \u9ed8\u8ba4\u503c: 0 \u3002 callback err \u5f02\u6b65\u7684 ftruncate(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u5982\u679c\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5411\u7684\u6587\u4ef6\u5927\u4e8e len \u4e2a\u5b57\u8282\uff0c\u5219\u53ea\u6709\u524d\u9762 len \u4e2a\u5b57\u8282\u4f1a\u4fdd\u7559\u5728\u6587\u4ef6\u4e2d\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u53ea\u4fdd\u7559\u6587\u4ef6\u7684\u524d 4 \u4e2a\u5b57\u8282\uff1a console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370: Node.js // \u83b7\u53d6\u8981\u622a\u65ad\u7684\u6587\u4ef6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 const fd = fs . openSync ( 'temp.txt' , 'r+' ); // \u5c06\u6587\u4ef6\u622a\u65ad\u4e3a\u524d 4 \u4e2a\u5b57\u8282\u3002 fs . ftruncate ( fd , 4 , ( err ) => { assert . ifError ( err ); console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); }); // \u6253\u5370: Node \u5982\u679c\u6587\u4ef6\u5c0f\u4e8e len \u4e2a\u5b57\u8282\uff0c\u5219\u4f1a\u5bf9\u5176\u8fdb\u884c\u6269\u5c55\uff0c\u5e76\u4e14\u6269\u5c55\u90e8\u5206\u5c06\u586b\u5145\u7a7a\u5b57\u8282\uff08 '\\0' \uff09\uff1a console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370: Node.js // \u83b7\u53d6\u8981\u622a\u65ad\u7684\u6587\u4ef6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 const fd = fs . openSync ( 'temp.txt' , 'r+' ); // \u5c06\u6587\u4ef6\u622a\u65ad\u4e3a\u524d 10 \u4e2a\u5b57\u8282\uff0c\u4f46\u5b9e\u9645\u5927\u5c0f\u4e3a 7 \u4e2a\u5b57\u8282\u3002 fs . ftruncate ( fd , 10 , ( err ) => { assert . ifError ( err ); console . log ( fs . readFileSync ( 'temp.txt' )); }); // \u6253\u5370: <Buffer 4e 6f 64 65 2e 6a 73 00 00 00> // (UTF8 \u7684\u503c\u4e3a 'Node.js\\0\\0\\0') \u6700\u540e 3 \u4e2a\u5b57\u8282\u662f\u7a7a\u5b57\u8282\uff08 '\\0' \uff09\uff0c\u4ee5\u8865\u5145\u8d85\u51fa\u7684\u622a\u65ad\u3002 fs.ftruncateSync(fd[, len]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.8.6 fd len \u9ed8\u8ba4\u503c: 0 \u3002 \u8fd4\u56de undefined \u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6b64API\u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.ftruncate() \u3002 fs.futimes(fd, atime, mtime, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd atime | | mtime | | callback err \u66f4\u6539\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5411\u7684\u5bf9\u8c61\u7684\u6587\u4ef6\u7cfb\u7edf\u65f6\u95f4\u6233\u3002 \u53c2\u9605 fs.utimes() \u3002 \u6b64\u51fd\u6570\u5728 7.1 \u4e4b\u524d\u7684 AIX \u7248\u672c\u4e0a\u4e0d\u8d77\u4f5c\u7528\uff0c\u5b83\u5c06\u8fd4\u56de UV_ENOSYS \u9519\u8bef\u3002 fs.futimesSync(fd, atime, mtime) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd atime | | mtime | | fs.futimes() \u7684\u540c\u6b65\u7248\u672c\u3002\u8fd4\u56de undefined \u3002 fs.lchmod(path, mode, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | mode callback err \u5f02\u6b65\u7684 lchmod(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u4ec5\u9002\u7528\u4e8e macOS\u3002 fs.lchmodSync(path, mode) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5e9f\u5f03\u4e8e: v0.4.7 path | | mode \u540c\u6b65\u7684 lchmod(2) \u3002\u8fd4\u56de undefined \u3002 fs.lchown(path, uid, gid, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | uid gid callback err \u5f02\u6b65\u7684 lchown(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 fs.lchownSync(path, uid, gid) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | uid gid \u540c\u6b65\u7684 lchown(2) \u3002\u8fd4\u56de undefined \u3002 fs.link(existingPath, newPath, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 existingPath | | newPath | | callback err \u5f02\u6b65\u7684 link(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 fs.linkSync(existingPath, newPath) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 existingPath | | newPath | | \u540c\u6b65\u7684 link(2) \u3002\u8fd4\u56de undefined \u3002 fs.lstat(path[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 callback err stats \u5f02\u6b65\u7684 lstat(2) \u3002 \u56de\u8c03\u4f1a\u4f20\u5165\u4e24\u4e2a\u53c2\u6570 (err, stats) \uff0c\u5176\u4e2d stats \u662f fs.Stats \u5bf9\u8c61\u3002 lstat() \u4e0e stat() \u76f8\u540c\uff0c\u53ea\u662f\u5982\u679c path \u662f\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u67e5\u770b\u7684\u662f\u94fe\u63a5\u81ea\u8eab\uff0c\u800c\u4e0d\u662f\u5b83\u6307\u5411\u7684\u6587\u4ef6\u3002 fs.lstatSync(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u540c\u6b65\u7684 lstat(2) \u3002 fs.mkdir(path[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | recursive \u9ed8\u8ba4\u503c: false \u3002 mode Windows \u4e0a\u4e0d\u652f\u6301\u3002 \u9ed8\u8ba4\u503c: 0o777 \u3002 callback err \u5f02\u6b65\u5730\u521b\u5efa\u76ee\u5f55\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u6a21\u5f0f\uff08\u6743\u9650\u548c\u7c98\u6ede\u4f4d\uff09\u7684\u6574\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 mode \u5c5e\u6027\u548c recursive \u5c5e\u6027\uff08\u6307\u793a\u662f\u5426\u5e94\u521b\u5efa\u7236\u6587\u4ef6\u5939\uff09\u7684\u5bf9\u8c61\u3002 // \u521b\u5efa /tmp/a/apple \u76ee\u5f55\uff0c\u65e0\u8bba\u662f\u5426\u5b58\u5728 /tmp \u548c /tmp/a \u76ee\u5f55\u3002 fs . mkdir ( '/tmp/a/apple' , { recursive : true }, ( err ) => { if ( err ) throw err ; }); \u5728 Windows \u4e0a\uff0c\u5728\u6839\u76ee\u5f55\u4e0a\u4f7f\u7528 fs.mkdir() \uff08\u5373\u4f7f\u4f7f\u7528\u9012\u5f52\u53c2\u6570\uff09\u4e5f\u4f1a\u5bfc\u81f4\u9519\u8bef\uff1a fs . mkdir ( '/' , { recursive : true }, ( err ) => { // => [Error: EPERM: operation not permitted, mkdir 'C:\\'] }); \u4e5f\u53ef\u53c2\u9605 mkdir(2) \u3002 fs.mkdirSync(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | recursive \u9ed8\u8ba4\u503c: false \u3002 mode Windows \u4e0a\u4e0d\u652f\u6301\u3002 \u9ed8\u8ba4\u503c: 0o777 \u3002 \u540c\u6b65\u5730\u521b\u5efa\u76ee\u5f55\u3002 \u8fd4\u56de undefined \u3002 fs.mkdir() \u7684\u540c\u6b65\u7248\u672c\u3002 \u4e5f\u53ef\u53c2\u9605 mkdir(2) \u3002 fs.mkdtemp(prefix[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 prefix options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err folder \u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684\u4e34\u65f6\u76ee\u5f55\u3002 \u751f\u6210\u8981\u9644\u52a0\u5728\u5fc5\u9700\u7684 prefix \u540e\u9762\u7684\u516d\u4f4d\u968f\u673a\u5b57\u7b26\uff0c\u4ee5\u521b\u5efa\u552f\u4e00\u7684\u4e34\u65f6\u76ee\u5f55\u3002 \u7531\u4e8e\u5e73\u53f0\u7684\u4e0d\u4e00\u81f4\u6027\uff0c\u8bf7\u907f\u514d\u5728 prefix \u4e2d\u4ee5 X \u5b57\u7b26\u7ed3\u5c3e\u3002 \u5728\u67d0\u4e9b\u5e73\u53f0\u4e0a\uff0c\u7279\u522b\u662f BSD\uff0c\u53ef\u4ee5\u8fd4\u56de\u516d\u4e2a\u4ee5\u4e0a\u7684\u968f\u673a\u5b57\u7b26\uff0c\u5e76\u7528\u968f\u673a\u5b57\u7b26\u66ff\u6362 prefix \u4e2d\u7ed3\u5c3e\u7684 X \u5b57\u7b26\u3002 \u521b\u5efa\u7684\u76ee\u5f55\u8def\u5f84\u4f5c\u4e3a\u5b57\u7b26\u4e32\u4f20\u7ed9\u56de\u8c03\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u5b57\u7b26\u7f16\u7801\u7684 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\u3002 fs . mkdtemp ( path . join ( os . tmpdir (), '\u76ee\u5f55-' ), ( err , folder ) => { if ( err ) throw err ; console . log ( folder ); // \u6253\u5370: /tmp/\u76ee\u5f55-itXde2 \u6216 C:\\Users\\...\\AppData\\Local\\Temp\\\u76ee\u5f55-itXde2 }); fs.mkdtemp() \u65b9\u6cd5\u5c06\u516d\u4f4d\u968f\u673a\u9009\u62e9\u7684\u5b57\u7b26\u76f4\u63a5\u9644\u52a0\u5230 prefix \u5b57\u7b26\u4e32\u3002 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u76ee\u5f55 /tmp \uff0c\u5982\u679c\u6253\u7b97\u5728 /tmp \u4e2d\u521b\u5efa\u4e34\u65f6\u76ee\u5f55\uff0c\u5219 prefix \u5fc5\u987b\u5728\u5c3e\u90e8\u52a0\u4e0a\u7279\u5b9a\u5e73\u53f0\u7684\u8def\u5f84\u5206\u9694\u7b26\uff08 require('path').sep \uff09\u3002 // \u65b0\u7684\u4e34\u65f6\u76ee\u5f55\u7684\u7236\u76ee\u5f55\u3002 const tmpDir = os . tmpdir (); // \u6b64\u7528\u6cd5\u662f\u9519\u8bef\u7684\uff1a fs . mkdtemp ( tmpDir , ( err , folder ) => { if ( err ) throw err ; console . log ( folder ); // \u8f93\u51fa\u7c7b\u4f3c `/tmpabc123`\u3002 // \u65b0\u7684\u4e34\u65f6\u76ee\u5f55\u4f1a\u88ab\u521b\u5efa\u5728\u6587\u4ef6\u7cfb\u7edf\u6839\u76ee\u5f55\uff0c\u800c\u4e0d\u662f\u5728 /tmp \u76ee\u5f55\u4e2d\u3002 }); // \u6b64\u7528\u6cd5\u662f\u6b63\u786e\u7684\uff1a const { sep } = require ( 'path' ); fs . mkdtemp ( ` ${ tmpDir }${ sep } ` , ( err , folder ) => { if ( err ) throw err ; console . log ( folder ); // \u8f93\u51fa\u7c7b\u4f3c `/tmp/abc123`\u3002 // \u65b0\u7684\u4e34\u65f6\u76ee\u5f55\u4f1a\u88ab\u521b\u5efa\u5728 /tmp \u76ee\u5f55\u4e2d\u3002 }); fs.mkdtempSync(prefix[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v5.10.0 prefix options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u8fd4\u56de\u521b\u5efa\u7684\u76ee\u5f55\u8def\u5f84\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6b64 API \u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.mkdtemp() \u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u5b57\u7b26\u7f16\u7801\u7684 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\u3002 fs.open(path[, flags[, mode]], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | flags | \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \uff08\u53ef\u8bfb\u5199\uff09\u3002 callback err fd \u5f02\u6b65\u5730\u6253\u5f00\u6587\u4ef6\u3002\u53c2\u9605 open(2) \u3002 mode \u7528\u4e8e\u8bbe\u7f6e\u6587\u4ef6\u6a21\u5f0f\uff08\u6743\u9650\u548c\u7c98\u6ede\u4f4d\uff09\uff0c\u4f46\u4ec5\u9650\u4e8e\u521b\u5efa\u6587\u4ef6\u65f6\u3002 \u5728 Windows \u4e0a\uff0c\u53ea\u80fd\u64cd\u4f5c\u5199\u6743\u9650\uff0c\u53c2\u9605 fs.chmod() \u3002 \u56de\u8c03\u6709\u4e24\u4e2a\u53c2\u6570 (err, fd) \u3002 \u6709\u4e9b\u5b57\u7b26 ( < > : \" / \\ | ? * ) \u5728 Windows \u4e0a\u662f\u9884\u7559\u7684\uff0c\u53c2\u9605 \u547d\u540d\u6587\u4ef6\u3001\u8def\u5f84\u4ee5\u53ca\u547d\u540d\u7a7a\u95f4 \u3002 \u5728 NTFS \u4e0a\uff0c\u5982\u679c\u6587\u4ef6\u540d\u5305\u542b\u5192\u53f7\uff0c\u5219 Node.js \u5c06\u6253\u5f00\u6587\u4ef6\u7cfb\u7edf\u6d41\uff0c\u53c2\u9605 \u6b64 MSDN \u9875\u9762 \u3002 \u57fa\u4e8e fs.open() \u7684\u51fd\u6570\u4e5f\u8868\u73b0\u51fa\u4ee5\u4e0a\u884c\u4e3a\uff0c\u6bd4\u5982 fs.writeFile() \u3001 fs.readFile() \u7b49\u3002 fs.opendir(path[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 path | | options encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err dir \u5f02\u6b65\u5730\u6253\u5f00\u76ee\u5f55\u3002 \u53c2\u9605 opendir(3) \u3002 \u521b\u5efa\u4e00\u4e2a fs.Dir \uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u7528\u4e8e\u66f4\u8fdb\u4e00\u6b65\u8bfb\u53d6\u548c\u6e05\u7406\u76ee\u5f55\u7684\u7684\u51fd\u6570\u3002 encoding \u9009\u9879\u7528\u4e8e\u5728\u6253\u5f00\u76ee\u5f55\u548c\u540e\u7eed\u7684\u8bfb\u53d6\u64cd\u4f5c\u65f6\u8bbe\u7f6e path \u7684\u5b57\u7b26\u7f16\u7801\u3002 fs.opendirSync(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 path | | options encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u540c\u6b65\u5730\u6253\u5f00\u76ee\u5f55\u3002 \u53c2\u9605 opendir(3) \u3002 \u521b\u5efa\u4e00\u4e2a fs.Dir \uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u7528\u4e8e\u66f4\u8fdb\u4e00\u6b65\u8bfb\u53d6\u548c\u6e05\u7406\u76ee\u5f55\u7684\u7684\u51fd\u6570\u3002 encoding \u9009\u9879\u7528\u4e8e\u5728\u6253\u5f00\u76ee\u5f55\u548c\u540e\u7eed\u7684\u8bfb\u53d6\u64cd\u4f5c\u65f6\u8bbe\u7f6e path \u7684\u5b57\u7b26\u7f16\u7801\u3002 fs.openSync(path[, flags, mode]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | flags | \u9ed8\u8ba4\u503c: 'r' \u3002\u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 \u8fd4\u56de: \u8fd4\u56de\u8868\u793a\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6574\u6570\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.open() \u3002 fs.read(fd, buffer, offset, length, position, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd buffer | | offset length position callback err bytesRead buffer \u4ece fd \u6307\u5b9a\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u3002 buffer \u662f\u6570\u636e\u5c06\u5199\u5165\u7684\u7f13\u51b2\u533a\u3002 offset \u662f buffer \u4e2d\u5f00\u59cb\u5199\u5165\u7684\u504f\u79fb\u91cf\u3002 length \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u6307\u5b9a\u8981\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002 position \u53c2\u6570\u6307\u5b9a\u4ece\u6587\u4ef6\u4e2d\u5f00\u59cb\u8bfb\u53d6\u7684\u4f4d\u7f6e\u3002 \u5982\u679c position \u4e3a null \uff0c\u5219\u4ece\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u66f4\u65b0\u6587\u4ef6\u4f4d\u7f6e\u3002 \u5982\u679c position \u662f\u6574\u6570\uff0c\u5219\u6587\u4ef6\u4f4d\u7f6e\u5c06\u4fdd\u6301\u4e0d\u53d8\u3002 \u56de\u8c03\u6709\u4e09\u4e2a\u53c2\u6570 (err, bytesRead, buffer) \u3002 \u5982\u679c\u8c03\u7528\u6b64\u65b9\u6cd5\u7684 util.promisify() \u7248\u672c\uff0c\u5219\u8fd4\u56de\u7684 Promise \u4f1a\u8fd4\u56de\u5177\u6709 bytesRead \u5c5e\u6027\u548c buffer \u5c5e\u6027\u7684 Object \u3002 fs.readdir(path[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 withFileTypes \u9ed8\u8ba4\u503c: false \u3002 callback err files | | \u5f02\u6b65\u7684 readdir(3) \u3002 \u8bfb\u53d6\u76ee\u5f55\u7684\u5185\u5bb9\u3002 \u56de\u8c03\u6709\u4e24\u4e2a\u53c2\u6570 (err, files) \uff0c\u5176\u4e2d files \u662f\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u540d\u7684\u6570\u7ec4\uff08\u4e0d\u5305\u62ec '.' \u548c '..' \uff09\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u7ed9\u56de\u8c03\u7684\u6587\u4ef6\u540d\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u6587\u4ef6\u540d\u662f Buffer \u5bf9\u8c61\u3002 \u5982\u679c options.withFileTypes \u8bbe\u7f6e\u4e3a true \uff0c\u5219 files \u6570\u7ec4\u5c06\u5305\u542b fs.Dirent \u5bf9\u8c61\u3002 fs.readdirSync(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 withFileTypes \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: | | \u540c\u6b65\u7684 readdir(3) \u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u7ed9\u56de\u8c03\u7684\u6587\u4ef6\u540d\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u6587\u4ef6\u540d\u662f Buffer \u5bf9\u8c61\u3002 \u5982\u679c options.withFileTypes \u8bbe\u7f6e\u4e3a true \uff0c\u5219\u8fd4\u56de\u7684\u7ed3\u679c\u5c06\u5305\u542b fs.Dirent \u5bf9\u8c61\u3002 fs.readFile(path[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 options | encoding | \u9ed8\u8ba4\u503c: null \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 callback err data | \u5f02\u6b65\u5730\u8bfb\u53d6\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\u3002 fs . readFile ( '/etc/passwd' , ( err , data ) => { if ( err ) throw err ; console . log ( data ); }); \u56de\u8c03\u4f1a\u4f20\u5165\u4e24\u4e2a\u53c2\u6570 (err, data) \uff0c\u5176\u4e2d data \u662f\u6587\u4ef6\u7684\u5185\u5bb9\u3002 \u5982\u679c\u6ca1\u6709\u6307\u5b9a encoding \uff0c\u5219\u8fd4\u56de\u539f\u59cb\u7684 buffer\u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff1a fs . readFile ( '/etc/passwd' , 'utf8' , callback ); \u5f53 path \u662f\u76ee\u5f55\u65f6\uff0c fs.readFile() \u4e0e fs.readFileSync() \u7684\u884c\u4e3a\u662f\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u3002 \u5728 macOS\u3001Linux \u548c Windows \u4e0a\uff0c\u5c06\u8fd4\u56de\u9519\u8bef\u3002 \u5728 FreeBSD \u4e0a\uff0c\u5c06\u8fd4\u56de\u76ee\u5f55\u5185\u5bb9\u7684\u8868\u793a\u3002 // \u5728 macOS\u3001Linux \u548c Windows \u4e0a\uff1a fs . readFile ( '<\u76ee\u5f55>' , ( err , data ) => { // => [Error: EISDIR: illegal operation on a directory, read <\u76ee\u5f55>] }); // \u5728 FreeBSD \u4e0a\uff1a fs . readFile ( '<\u76ee\u5f55>' , ( err , data ) => { // => null, <data> }); fs.readFile() \u51fd\u6570\u4f1a\u7f13\u51b2\u6574\u4e2a\u6587\u4ef6\u3002 \u4e3a\u4e86\u6700\u5c0f\u5316\u5185\u5b58\u6210\u672c\uff0c\u5c3d\u53ef\u80fd\u901a\u8fc7 fs.createReadStream() \u8fdb\u884c\u6d41\u5f0f\u4f20\u8f93\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4efb\u4f55\u6307\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u90fd\u5fc5\u987b\u652f\u6301\u8bfb\u53d6\u3002 \u5982\u679c\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5b9a\u4e3a path \uff0c\u5219\u4e0d\u4f1a\u81ea\u52a8\u5173\u95ed\u5b83\u3002 \u8bfb\u6570\u5c06\u4ece\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u7ecf\u6709\u5185\u5bb9 'Hello World ' \u5e76\u4e14\u4f7f\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u8bfb\u53d6\u4e86\u516d\u4e2a\u5b57\u8282\uff0c\u5219\u4f7f\u7528\u76f8\u540c\u6587\u4ef6\u63cf\u8ff0\u7b26\u8c03\u7528 fs.readFile() \u5c06\u8fd4\u56de 'World' \u800c\u4e0d\u662f 'Hello World' \u3002 fs.readFileSync(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 options | encoding | \u9ed8\u8ba4\u503c: null \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 \u8fd4\u56de: | \u8fd4\u56de path \u7684\u5185\u5bb9\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.readFile() \u3002 \u5982\u679c\u6307\u5b9a\u4e86 encoding \u9009\u9879\uff0c\u5219\u6b64\u51fd\u6570\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u5426\u5219\u8fd4\u56de buffer\u3002 \u4e0e fs.readFile() \u7c7b\u4f3c\uff0c\u5f53 path \u662f\u76ee\u5f55\u65f6\uff0c fs.readFileSync() \u7684\u884c\u4e3a\u662f\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u3002 // \u5728 macOS\u3001Linux \u548c Windows \u4e0a\uff1a fs . readFileSync ( '<\u76ee\u5f55>' ); // => [Error: EISDIR: illegal operation on a directory, read <\u76ee\u5f55>] // \u5728 FreeBSD \u4e0a\uff1a fs . readFileSync ( '<\u76ee\u5f55>' ); // => <data> fs.readlink(path[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err linkString | \u5f02\u6b65\u7684 readlink(2) \u3002 \u56de\u8c03\u4f1a\u4f20\u5165\u4e24\u4e2a\u53c2\u6570 (err, linkString) \u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u9012\u7ed9\u56de\u8c03\u7684\u94fe\u63a5\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u94fe\u63a5\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002 fs.readlinkSync(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: | \u540c\u6b65\u7684 readlink(2) \u3002 \u8fd4\u56de\u7b26\u53f7\u94fe\u63a5\u7684\u5b57\u7b26\u4e32\u503c\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u9012\u7ed9\u56de\u8c03\u7684\u94fe\u63a5\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u94fe\u63a5\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002 fs.readSync(fd, buffer, offset, length, position) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd buffer | | offset length position \u8fd4\u56de: \u8fd4\u56de bytesRead \u7684\u6570\u91cf\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6b64 API \u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.read() \u3002 fs.realpath(path[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err resolvedPath | \u901a\u8fc7\u89e3\u6790 . \u3001 .. \u548c\u7b26\u53f7\u94fe\u63a5\u5f02\u6b65\u5730\u8ba1\u7b97\u89c4\u8303\u8def\u5f84\u540d\u3002 \u89c4\u8303\u8def\u5f84\u540d\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002 \u786c\u94fe\u63a5\u548c\u7ed1\u5b9a\u88c5\u8f7d\u53ef\u4ee5\u901a\u8fc7\u8bb8\u591a\u8def\u5f84\u540d\u66b4\u9732\u6587\u4ef6\u7cfb\u7edf\u5b9e\u4f53\u3002 \u6b64\u51fd\u6570\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e realpath(3) \uff0c\u4f46\u6709\u4e00\u4e9b\u4f8b\u5916 \u5728\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u4e0d\u6267\u884c\u5927\u5c0f\u5199\u8f6c\u6362\u3002\u3002 \u7b26\u53f7\u94fe\u63a5\u7684\u6700\u5927\u6570\u91cf\u4e0e\u5e73\u53f0\u65e0\u5173\uff0c\u5e76\u4e14\u901a\u5e38\u9ad8\u4e8e\u672c\u5730 realpath(3) \u5b9e\u73b0\u652f\u6301\u7684\u6570\u91cf\u3002 callback \u6709\u4e24\u4e2a\u53c2\u6570 (err, resolvedPath) \u3002 \u53ef\u4ee5\u4f7f\u7528 process.cwd \u6765\u89e3\u6790\u76f8\u5bf9\u8def\u5f84\u3002 \u4ec5\u652f\u6301\u53ef\u8f6c\u6362\u4e3a UTF8 \u5b57\u7b26\u4e32\u7684\u8def\u5f84\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u9012\u7ed9\u56de\u8c03\u7684\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002 \u5982\u679c path \u89e3\u6790\u4e3a\u5957\u63a5\u5b57\u6216\u7ba1\u9053\uff0c\u5219\u8be5\u51fd\u6570\u5c06\u8fd4\u56de\u8be5\u5bf9\u8c61\u7684\u7cfb\u7edf\u76f8\u5173\u540d\u79f0\u3002 fs.realpath.native(path[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v9.2.0 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err resolvedPath | \u5f02\u6b65\u7684 realpath(3) \u3002 callback \u6709\u4e24\u4e2a\u53c2\u6570 (err, resolvedPath) \u3002 \u4ec5\u652f\u6301\u53ef\u8f6c\u6362\u4e3a UTF8 \u5b57\u7b26\u4e32\u7684\u8def\u5f84\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u9012\u7ed9\u56de\u8c03\u7684\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002 \u5728 Linux \u4e0a\uff0c\u5f53 Node.js \u4e0e musl libc \u94fe\u63a5\u65f6\uff0cprocfs \u6587\u4ef6\u7cfb\u7edf\u5fc5\u987b\u6302\u8f7d\u5728 /proc \u4e0a\u624d\u80fd\u4f7f\u6b64\u529f\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 Glibc \u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u3002 fs.realpathSync(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: | \u8fd4\u56de\u5df2\u89e3\u6790\u7684\u8def\u5f84\u540d\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.realpath() \u3002 fs.realpathSync.native(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v9.2.0 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 Returns: | \u540c\u6b65\u7684 realpath(3) \u3002 \u4ec5\u652f\u6301\u53ef\u8f6c\u6362\u4e3a UTF8 \u5b57\u7b26\u4e32\u7684\u8def\u5f84\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u9012\u7ed9\u56de\u8c03\u7684\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002 \u5728 Linux \u4e0a\uff0c\u5f53 Node.js \u4e0e musl libc \u94fe\u63a5\u65f6\uff0cprocfs \u6587\u4ef6\u7cfb\u7edf\u5fc5\u987b\u6302\u8f7d\u5728 /proc \u4e0a\u624d\u80fd\u4f7f\u6b64\u529f\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 Glibc \u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u3002 fs.rename(oldPath, newPath, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 oldPath | | newPath | | callback err \u5f02\u6b65\u5730\u5c06 oldPath \u4e0a\u7684\u6587\u4ef6\u91cd\u547d\u540d\u4e3a newPath \u63d0\u4f9b\u7684\u8def\u5f84\u540d\u3002 \u5982\u679c newPath \u5df2\u5b58\u5728\uff0c\u5219\u8986\u76d6\u5b83\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u4e5f\u53ef\u53c2\u9605 rename(2) \u3002 fs . rename ( '\u65e7\u6587\u4ef6.txt' , '\u65b0\u6587\u4ef6.txt' , ( err ) => { if ( err ) throw err ; console . log ( '\u91cd\u547d\u540d\u5b8c\u6210' ); }); fs.renameSync(oldPath, newPath) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 oldPath | | newPath | | \u540c\u6b65\u7684 rename(2) \u3002\u8fd4\u56de undefined \u3002 fs.rmdir(path[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 \u7a33\u5b9a\u6027: 1 - \u9012\u5f52\u7684\u5220\u9664\u662f\u5b9e\u9a8c\u6027\u7684\u3002 path | | options emfileWait \u5982\u679c\u9047\u5230 EMFILE \u9519\u8bef\uff0c\u5219 Node.js \u5c06\u4f1a\u5728\u6bcf\u6b21\u5c1d\u8bd5\u65f6\u4ee5 1 \u6beb\u79d2\u7684\u7ebf\u6027\u56de\u9000\u91cd\u8bd5\u8be5\u64cd\u4f5c\uff0c\u76f4\u5230\u8d85\u65f6\u6301\u7eed\u65f6\u95f4\u8d85\u8fc7\u6b64\u9650\u5236\u3002 \u5982\u679c recursive \u9009\u9879\u4e0d\u4e3a true \uff0c\u5219\u5ffd\u7565\u6b64\u9009\u9879\u3002 \u9ed8\u8ba4\u503c: 1000 \u3002 maxBusyTries \u5982\u679c\u9047\u5230 EBUSY \u3001 ENOTEMPTY \u6216 EPERM \u9519\u8bef\uff0c\u5219 Node.js \u5c06\u4f1a\u5728\u6bcf\u6b21\u5c1d\u8bd5\u65f6\u4ee5 100 \u6beb\u79d2\u7684\u7ebf\u6027\u56de\u9000\u7b49\u5f85\u91cd\u8bd5\u8be5\u64cd\u4f5c\u3002 \u6b64\u9009\u9879\u4ee3\u8868\u91cd\u8bd5\u7684\u6b21\u6570\u3002\u5982\u679c recursive \u9009\u9879\u4e0d\u4e3a true \uff0c\u5219\u5ffd\u7565\u6b64\u9009\u9879\u3002 \u9ed8\u8ba4\u503c: 3 \u3002 recursive \u5982\u679c\u4e3a true \uff0c\u5219\u6267\u884c\u9012\u5f52\u7684\u76ee\u5f55\u5220\u9664\u3002\u5728\u9012\u5f52\u6a21\u5f0f\u4e2d\uff0c\u5982\u679c path \u4e0d\u5b58\u5728\u5219\u4e0d\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u4e14\u5728\u5931\u8d25\u65f6\u91cd\u8bd5\u64cd\u4f5c\u3002 \u9ed8\u8ba4\u503c: false \u3002 callback err \u5f02\u6b65\u7684 rmdir(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u5728\u6587\u4ef6\uff08\u800c\u4e0d\u662f\u76ee\u5f55\uff09\u4e0a\u4f7f\u7528 fs.rmdir() \u4f1a\u5bfc\u81f4\u5728 Windows \u4e0a\u51fa\u73b0 ENOENT \u9519\u8bef\u3001\u5728 POSIX \u4e0a\u51fa\u73b0 ENOTDIR \u9519\u8bef\u3002 fs.rmdirSync(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 \u7a33\u5b9a\u6027: 1 - \u9012\u5f52\u7684\u5220\u9664\u662f\u5b9e\u9a8c\u6027\u7684\u3002 path | | options recursive \u5982\u679c\u4e3a true \uff0c\u5219\u6267\u884c\u9012\u5f52\u7684\u76ee\u5f55\u5220\u9664\u3002\u5728\u9012\u5f52\u6a21\u5f0f\u4e2d\uff0c\u5982\u679c path \u4e0d\u5b58\u5728\u5219\u4e0d\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u4e14\u5728\u5931\u8d25\u65f6\u91cd\u8bd5\u64cd\u4f5c\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u540c\u6b65\u7684 rmdir(2) \u3002 \u8fd4\u56de undefined \u3002 \u5728\u6587\u4ef6\uff08\u800c\u4e0d\u662f\u76ee\u5f55\uff09\u4e0a\u4f7f\u7528 fs.rmdirSync() \u4f1a\u5bfc\u81f4\u5728 Windows \u4e0a\u51fa\u73b0 ENOENT \u9519\u8bef\u3001\u5728 POSIX \u4e0a\u51fa\u73b0 ENOTDIR \u9519\u8bef\u3002 fs.stat(path[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 callback err stats \u5f02\u6b65\u7684 stat(2) \u3002 \u56de\u8c03\u6709\u4e24\u4e2a\u53c2\u6570 (err, stats) \uff0c\u5176\u4e2d stats \u662f\u4e00\u4e2a fs.Stats \u5bf9\u8c61\u3002 \u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u5219 err.code \u5c06\u662f \u5e38\u89c1\u7cfb\u7edf\u9519\u8bef \u4e4b\u4e00\u3002 \u4e0d\u5efa\u8bae\u5728\u8c03\u7528 fs.open() \u3001 fs.readFile() \u6216 fs.writeFile() \u4e4b\u524d\u4f7f\u7528 fs.stat() \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u3002 \u800c\u662f\u5e94\u8be5\u76f4\u63a5\u6253\u5f00\u3001\u8bfb\u53d6\u6216\u5199\u5165\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u53ef\u7528\u5219\u5904\u7406\u5f15\u53d1\u7684\u9519\u8bef\u3002 \u8981\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u4f46\u968f\u540e\u5e76\u4e0d\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\uff0c\u5219\u5efa\u8bae\u4f7f\u7528 fs.access() \u3002 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u4ee5\u4e0b\u7684\u6587\u4ef6\u5939\u7ed3\u6784\uff1a - txtDir -- file.txt - app.js \u4ee5\u4e0b\u7a0b\u5e8f\u5c06\u4f1a\u68c0\u67e5\u7ed9\u5b9a\u8def\u5f84\u7684\u7edf\u8ba1\u4fe1\u606f\uff1a const fs = require ( 'fs' ); const pathsToCheck = [ './txtDir' , './txtDir/file.txt' ]; for ( let i = 0 ; i < pathsToCheck . length ; i ++ ) { fs . stat ( pathsToCheck [ i ], function ( err , stats ) { console . log ( stats . isDirectory ()); console . log ( stats ); }); } \u5f97\u5230\u7684\u8f93\u51fa\u5c06\u4f1a\u7c7b\u4f3c\u4e8e\uff1a true Stats { dev: 16777220, mode: 16877, nlink: 3, uid: 501, gid: 20, rdev: 0, blksize: 4096, ino: 14214262, size: 96, blocks: 0, atimeMs: 1561174653071.963, mtimeMs: 1561174614583.3518, ctimeMs: 1561174626623.5366, birthtimeMs: 1561174126937.2893, atime: 2019-06-22T03:37:33.072Z, mtime: 2019-06-22T03:36:54.583Z, ctime: 2019-06-22T03:37:06.624Z, birthtime: 2019-06-22T03:28:46.937Z } false Stats { dev: 16777220, mode: 33188, nlink: 1, uid: 501, gid: 20, rdev: 0, blksize: 4096, ino: 14214074, size: 8, blocks: 8, atimeMs: 1561174616618.8555, mtimeMs: 1561174614584, ctimeMs: 1561174614583.8145, birthtimeMs: 1561174007710.7478, atime: 2019-06-22T03:36:56.619Z, mtime: 2019-06-22T03:36:54.584Z, ctime: 2019-06-22T03:36:54.584Z, birthtime: 2019-06-22T03:26:47.711Z } fs.statSync(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u540c\u6b65\u7684 stat(2) \u3002 fs.symlink(target, path[, type], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 target | | path | | type callback err \u5f02\u6b65\u7684 symlink(2) \uff0c\u5b83\u4f1a\u521b\u5efa\u540d\u4e3a path \u7684\u94fe\u63a5\uff0c\u8be5\u94fe\u63a5\u6307\u5411 target \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 type \u53c2\u6570\u4ec5\u5728 Windows \u4e0a\u53ef\u7528\uff0c\u5728\u5176\u4ed6\u5e73\u53f0\u4e0a\u5219\u4f1a\u88ab\u5ffd\u7565\u3002 \u5b83\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a 'dir' \u3001 'file' \u6216 'junction' \u3002 \u5982\u679c\u672a\u8bbe\u7f6e type \u53c2\u6570\uff0c\u5219 Node \u5c06\u4f1a\u81ea\u52a8\u68c0\u6d4b target \u7684\u7c7b\u578b\u5e76\u4f7f\u7528 'file' \u6216 'dir' \u3002 \u5982\u679c target \u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u4f1a\u4f7f\u7528 'file' \u3002 Windows \u4e0a\u7684\u8fde\u63a5\u70b9\u8981\u6c42\u76ee\u6807\u8def\u5f84\u662f\u7edd\u5bf9\u8def\u5f84\u3002 \u5f53\u4f7f\u7528 'junction' \u65f6\uff0c target \u53c2\u6570\u5c06\u4f1a\u81ea\u52a8\u5730\u6807\u51c6\u5316\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002 \u76f8\u5bf9\u76ee\u6807\u662f\u76f8\u5bf9\u4e8e\u94fe\u63a5\u7684\u7236\u76ee\u5f55\u3002 fs . symlink ( './mew' , './example/mewtwo' , callback ); \u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u5728 example \u4e2d\u521b\u5efa\u4e86\u7b26\u53f7\u94fe\u63a5 mewtwo \uff0c\u5b83\u6307\u5411\u540c\u4e00\u76ee\u5f55\u4e2d\u7684 mew \uff1a $ tree example/ example/ \u251c\u2500\u2500 mew \u2514\u2500\u2500 mewtwo -> ./mew fs.symlinkSync(target, path[, type]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 target | | path | | type \u8fd4\u56de undefined \u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.symlink() \u3002 fs.truncate(path[, len], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | len \u9ed8\u8ba4\u503c: 0 \u3002 callback err \u5f02\u6b65\u7684 truncate(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528 fs.ftruncate() \u3002 \u4e0d\u63a8\u8350\u4f20\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u53ef\u80fd\u5bfc\u81f4\u5c06\u6765\u629b\u51fa\u9519\u8bef\u3002 fs.truncateSync(path[, len]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.8.6 path | | len \u9ed8\u8ba4\u503c: 0 \u3002 \u540c\u6b65\u7684 truncate(2) \u3002 \u8fd4\u56de undefined \u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528 fs.ftruncateSync() \u3002 \u4e0d\u63a8\u8350\u4f20\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u53ef\u80fd\u5bfc\u81f4\u5c06\u6765\u629b\u51fa\u9519\u8bef\u3002 fs.unlink(path, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | callback err \u5f02\u6b65\u5730\u5220\u9664\u6587\u4ef6\u6216\u7b26\u53f7\u94fe\u63a5\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 // \u5047\u8bbe 'path/file.txt' \u662f\u5e38\u89c4\u6587\u4ef6\u3002 fs . unlink ( 'path/file.txt' , ( err ) => { if ( err ) throw err ; console . log ( '\u6587\u4ef6\u5df2\u5220\u9664' ); }); fs.unlink() \u4e0d\u80fd\u7528\u4e8e\u76ee\u5f55\u3002 \u8981\u5220\u9664\u76ee\u5f55\uff0c\u5219\u4f7f\u7528 fs.rmdir() \u3002 \u4e5f\u53ef\u53c2\u9605 unlink(2) \u3002 fs.unlinkSync(path) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | \u540c\u6b65\u7684 unlink(2) \u3002\u8fd4\u56de undefined \u3002 fs.unwatchFile(filename[, listener]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.31 filename | | listener \u53ef\u9009\u7684\uff0c\u4e4b\u524d\u4f7f\u7528 fs.watchFile() \u7ed1\u5b9a\u7684\u76d1\u542c\u5668\u3002 \u505c\u6b62\u76d1\u89c6 filename \u7684\u53d8\u5316\u3002 \u5982\u679c\u6307\u5b9a\u4e86 listener \uff0c\u5219\u4ec5\u79fb\u9664\u6b64\u7279\u5b9a\u76d1\u542c\u5668\uff0c\u5426\u5219\uff0c\u5c06\u79fb\u9664\u6240\u6709\u76d1\u542c\u5668\uff0c\u4ece\u800c\u505c\u6b62\u76d1\u89c6 filename \u3002 \u5bf9\u672a\u88ab\u76d1\u89c6\u7684\u6587\u4ef6\u540d\u8c03\u7528 fs.unwatchFile() \u5c06\u662f\u7a7a\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u9519\u8bef\u3002 \u4f7f\u7528 fs.watch() \u6bd4 fs.watchFile() \u548c fs.unwatchFile() \u66f4\u9ad8\u6548\u3002 \u5e94\u5c3d\u53ef\u80fd\u4f7f\u7528 fs.watch() \u4ee3\u66ff fs.watchFile() \u548c fs.unwatchFile() \u3002 fs.utimes(path, atime, mtime, callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | atime | | mtime | | callback err \u66f4\u6539 path \u6307\u5411\u7684\u5bf9\u8c61\u7684\u6587\u4ef6\u7cfb\u7edf\u65f6\u95f4\u6233\u3002 atime \u548c mtime \u53c2\u6570\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a \u503c\u53ef\u4ee5\u662f\u8868\u793a Unix \u7eaa\u5143\u65f6\u95f4\u7684\u6570\u5b57\u3001 Date \u5bf9\u8c61\u3001\u6216\u7c7b\u4f3c '123456789.0' \u7684\u6570\u503c\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u8be5\u503c\u65e0\u6cd5\u8f6c\u6362\u4e3a\u6570\u503c\u3001\u6216\u503c\u4e3a NaN \u3001 Infinity \u6216 -Infinity \uff0c\u5219\u629b\u51fa\u9519\u8bef\u3002 fs.utimesSync(path, atime, mtime) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | atime | | mtime | | \u8fd4\u56de undefined \u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.utimes() \u3002 fs.watch(filename[, options][, listener]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 filename | | options | persistent \u6307\u793a\u5982\u679c\u6587\u4ef6\u5df2\u6b63\u88ab\u76d1\u89c6\uff0c\u8fdb\u7a0b\u662f\u5426\u5e94\u7ee7\u7eed\u8fd0\u884c\u3002 \u9ed8\u8ba4\u503c: true \u3002 recursive \u6307\u793a\u5e94\u8be5\u76d1\u89c6\u6240\u6709\u5b50\u76ee\u5f55\uff0c\u8fd8\u662f\u4ec5\u76d1\u89c6\u5f53\u524d\u76ee\u5f55\u3002\u8fd9\u9002\u7528\u4e8e\u76d1\u89c6\u76ee\u5f55\u65f6\uff0c\u5e76\u4e14\u4ec5\u9002\u7528\u4e8e\u53d7\u652f\u6301\u7684\u5e73\u53f0\uff08\u53c2\u9605 \u6ce8\u610f\u4e8b\u9879 \uff09\u3002 \u9ed8\u8ba4\u503c: false \u3002 encoding \u6307\u5b9a\u7528\u4e8e\u4f20\u7ed9\u76d1\u542c\u5668\u7684\u6587\u4ef6\u540d\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u9ed8\u8ba4\u503c: 'utf8' \u3002 listener | \u9ed8\u8ba4\u503c: undefined \u3002 eventType filename | \u8fd4\u56de: \u76d1\u89c6 filename \u7684\u66f4\u6539\uff0c\u5176\u4e2d filename \u662f\u6587\u4ef6\u6216\u76ee\u5f55\u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u53ef\u9009\u7684\u3002 \u5982\u679c options \u4f20\u5165\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a encoding \u3002 \u5426\u5219\uff0c options \u5e94\u4f20\u5165\u5bf9\u8c61\u3002 \u76d1\u542c\u5668\u56de\u8c03\u6709\u4e24\u4e2a\u53c2\u6570 (eventType, filename) \u3002 eventType \u662f 'rename' \u6216 'change' \uff0c filename \u662f\u89e6\u53d1\u4e8b\u4ef6\u7684\u6587\u4ef6\u7684\u540d\u79f0\u3002 \u5728\u5927\u591a\u6570\u5e73\u53f0\u4e0a\uff0c\u6bcf\u5f53\u6587\u4ef6\u540d\u5728\u76ee\u5f55\u4e2d\u51fa\u73b0\u6216\u6d88\u5931\u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1 'rename' \u4e8b\u4ef6\u3002 \u76d1\u542c\u5668\u56de\u8c03\u7ed1\u5b9a\u5728\u7531 fs.FSWatcher \u89e6\u53d1\u7684 'change' \u4e8b\u4ef6\u4e0a\uff0c\u4f46\u5b83\u4e0e eventType \u7684 'change' \u503c\u4e0d\u662f\u4e00\u56de\u4e8b\u3002 \u6ce8\u610f\u4e8b\u9879 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 fs.watch \u7684 API \u5728\u5404\u4e2a\u5e73\u53f0\u4e0a\u5e76\u975e 100\uff05 \u4e00\u81f4\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u53ef\u7528\u3002 \u4ec5\u5728 macOS \u548c Windows \u4e0a\u652f\u6301 recursive \u9009\u9879\u3002 \u53ef\u7528\u6027 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u7279\u6027\u53d6\u51b3\u4e8e\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u901a\u77e5\u6587\u4ef6\u7cfb\u7edf\u66f4\u6539\u7684\u65b9\u6cd5\u3002 \u5728 Linux \u7cfb\u7edf\u4e0a\uff0c\u4f7f\u7528 inotify(7) \u3002 \u5728 BSD \u7cfb\u7edf\u4e0a\uff0c\u4f7f\u7528 kqueue(2) \u3002 \u5728 macOS \u7cfb\u7edf\u4e0a\uff0c\u5bf9\u6587\u4ef6\u4f7f\u7528 kqueue(2) \uff0c\u5bf9\u76ee\u5f55\u4f7f\u7528 FSEvents \u3002 \u5728 SunOS \u7cfb\u7edf\u4e0a\uff08\u5305\u62ec Solaris \u548c SmartOS\uff09\uff0c\u4f7f\u7528 \u4e8b\u4ef6\u7aef\u53e3 \u3002 \u5728 Windows \u7cfb\u7edf\u4e0a\uff0c\u6b64\u7279\u6027\u53d6\u51b3\u4e8e ReadDirectoryChangesW \u3002 \u5728 Aix \u7cfb\u7edf\u4e0a\uff0c\u6b64\u7279\u6027\u53d6\u51b3\u4e8e AHAFS \u5fc5\u987b\u542f\u52a8\u3002 \u5982\u679c\u5e95\u5c42\u529f\u80fd\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u4e0d\u53ef\u7528\uff0c\u5219 fs.watch \u5c06\u65e0\u6cd5\u8fd0\u884c\u3002 \u4f8b\u5982\uff0c\u5f53\u4f7f\u7528\u865a\u62df\u5316\u8f6f\u4ef6\uff08\u5982 Vagrant\u3001Docker \u7b49\uff09\u65f6\uff0c\u5728\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff08NFS\u3001SMB \u7b49\uff09\u6216\u4e3b\u6587\u4ef6\u7cfb\u7edf\u4e0a\u76d1\u89c6\u6587\u4ef6\u6216\u76ee\u5f55\u53ef\u80fd\u662f\u4e0d\u53ef\u9760\u7684\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u662f\u4e0d\u53ef\u80fd\u7684\u3002 \u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528 fs.watchFile() \uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528 stat \u8f6e\u8be2 \uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u8f83\u6162\u4e14\u4e0d\u592a\u53ef\u9760\u3002 \u7d22\u5f15\u8282\u70b9 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5728 Linux \u6216 macOS \u7cfb\u7edf\u4e0a\uff0c fs.watch() \u89e3\u6790\u8def\u5f84\u5230 \u7d22\u5f15\u8282\u70b9 \u5e76\u76d1\u89c6\u8be5\u7d22\u5f15\u8282\u70b9\u3002 \u5982\u679c\u5220\u9664\u5e76\u91cd\u65b0\u521b\u5efa\u76d1\u89c6\u7684\u8def\u5f84\uff0c\u5219\u4f1a\u4e3a\u5176\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u7d22\u5f15\u8282\u70b9\u3002 \u76d1\u89c6\u5668\u4f1a\u56e0\u5220\u9664\u800c\u89e6\u53d1\u4e8b\u4ef6\uff0c\u4f46\u4f1a\u7ee7\u7eed\u76d1\u89c6\u539f\u59cb\u7684\u7d22\u5f15\u8282\u70b9\u3002 \u4e0d\u4f1a\u56e0\u65b0\u5efa\u7d22\u5f15\u8282\u70b9\u800c\u89e6\u53d1\u4e8b\u4ef6\u3002 \u8fd9\u662f\u9884\u671f\u7684\u884c\u4e3a\u3002 AIX \u6587\u4ef6\u5728\u6587\u4ef6\u7684\u751f\u547d\u5468\u671f\u4e2d\u4fdd\u7559\u76f8\u540c\u7684\u7d22\u5f15\u8282\u70b9\u3002 \u5728 AIX \u4e0a\u4fdd\u5b58\u548c\u5173\u95ed\u76d1\u89c6\u7684\u6587\u4ef6\u5c06\u5bfc\u81f4\u4e24\u4e2a\u901a\u77e5\uff08\u4e00\u4e2a\u7528\u4e8e\u6dfb\u52a0\u65b0\u5185\u5bb9\uff0c\u4e00\u4e2a\u7528\u4e8e\u622a\u65ad\uff09\u3002 \u6587\u4ef6\u540d\u53c2\u6570 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ec5\u5728 Linux\u3001macOS\u3001Windows \u548c AIX \u4e0a\u652f\u6301\u5728\u56de\u8c03\u4e2d\u63d0\u4f9b filename \u53c2\u6570\u3002 \u5373\u4f7f\u5728\u652f\u6301\u7684\u5e73\u53f0\u4e0a\uff0c\u4e5f\u4e0d\u603b\u662f\u4fdd\u8bc1\u63d0\u4f9b filename \u3002 \u56e0\u6b64\uff0c\u4e0d\u8981\u5047\u8bbe\u5728\u56de\u8c03\u4e2d\u59cb\u7ec8\u63d0\u4f9b filename \u53c2\u6570\uff0c\u5e76\u4e14\u5982\u679c\u5b83\u4e3a null \u5219\u9700\u8981\u4e00\u4e9b\u540e\u5907\u903b\u8f91\u3002 fs . watch ( 'somedir' , ( eventType , filename ) => { console . log ( `\u4e8b\u4ef6\u7c7b\u578b\u662f: ${ eventType } ` ); if ( filename ) { console . log ( `\u63d0\u4f9b\u7684\u6587\u4ef6\u540d: ${ filename } ` ); } else { console . log ( '\u6587\u4ef6\u540d\u672a\u63d0\u4f9b' ); } }); fs.watchFile(filename[, options], listener) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 filename | | options persistent \u9ed8\u8ba4\u503c: true \u3002 interval \u9ed8\u8ba4\u503c: 5007 \u3002 listener current previous \u76d1\u89c6 filename \u7684\u66f4\u6539\u3002 \u6bcf\u5f53\u8bbf\u95ee\u6587\u4ef6\u65f6\u90fd\u4f1a\u8c03\u7528 listener \u56de\u8c03\u3002 options \u53c2\u6570\u53ef\u4ee5\u7701\u7565\u3002 \u5982\u679c\u63d0\u4f9b\uff0c\u5219\u5b83\u5e94\u8be5\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002 options \u5bf9\u8c61\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u540d\u4e3a persistent \u7684\u5e03\u5c14\u503c\uff0c\u6307\u793a\u5f53\u6587\u4ef6\u6b63\u5728\u88ab\u76d1\u89c6\u65f6\uff0c\u8fdb\u7a0b\u662f\u5426\u5e94\u8be5\u7ee7\u7eed\u8fd0\u884c\u3002 options \u5bf9\u8c61\u53ef\u4ee5\u6307\u5b9a interval \u5c5e\u6027\uff0c\u6307\u793a\u8f6e\u8be2\u76ee\u6807\u7684\u9891\u7387\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 listener \u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u5f53\u524d\u7684 stat \u5bf9\u8c61\u548c\u4e4b\u524d\u7684 stat \u5bf9\u8c61\uff1a fs . watchFile ( 'message.text' , ( curr , prev ) => { console . log ( `\u5f53\u524d\u7684\u6700\u8fd1\u4fee\u6539\u65f6\u95f4\u662f: ${ curr . mtime } ` ); console . log ( `\u4e4b\u524d\u7684\u6700\u8fd1\u4fee\u6539\u65f6\u95f4\u662f: ${ prev . mtime } ` ); }); \u8fd9\u4e9b stat \u5bf9\u8c61\u662f fs.Stat \u7684\u5b9e\u4f8b\u3002 \u8981\u5728\u4fee\u6539\u6587\u4ef6\uff08\u800c\u4e0d\u4ec5\u4ec5\u662f\u8bbf\u95ee\uff09\u65f6\u6536\u5230\u901a\u77e5\uff0c\u5219\u9700\u8981\u6bd4\u8f83 curr.mtime \u548c prev.mtime \u3002 \u5f53 fs.watchFile \u64cd\u4f5c\u5bfc\u81f4 ENOENT \u9519\u8bef\u65f6\uff0c\u5b83\u5c06\u8c03\u7528\u4e00\u6b21\u76d1\u542c\u5668\uff0c\u5e76\u5c06\u6240\u6709\u5b57\u6bb5\u7f6e\u96f6\uff08\u6216\u5c06\u65e5\u671f\u8bbe\u4e3a Unix \u7eaa\u5143\uff09\u3002 \u5982\u679c\u6587\u4ef6\u662f\u5728\u90a3\u4e4b\u540e\u521b\u5efa\u7684\uff0c\u5219\u76d1\u542c\u5668\u4f1a\u88ab\u518d\u6b21\u8c03\u7528\uff0c\u4e14\u5e26\u4e0a\u6700\u65b0\u7684 stat \u5bf9\u8c61\u3002 \u8fd9\u662f v0.10 \u4e4b\u540e\u7684\u529f\u80fd\u53d8\u5316\u3002 \u4f7f\u7528 fs.watch() \u6bd4 fs.watchFile \u548c fs.unwatchFile \u66f4\u9ad8\u6548\u3002 \u5e94\u5c3d\u53ef\u80fd\u4f7f\u7528 fs.watch \u4ee3\u66ff fs.watchFile \u548c fs.unwatchFile \u3002 \u5f53 fs.watchFile() \u6b63\u5728\u76d1\u89c6\u7684\u6587\u4ef6\u6d88\u5931\u5e76\u91cd\u65b0\u51fa\u73b0\u65f6\uff0c\u7b2c\u4e8c\u6b21\u56de\u8c03\u4e8b\u4ef6\uff08\u6587\u4ef6\u91cd\u65b0\u51fa\u73b0\uff09\u8fd4\u56de\u7684 previousStat \u4f1a\u4e0e\u7b2c\u4e00\u6b21\u56de\u8c03\u4e8b\u4ef6\uff08\u6587\u4ef6\u6d88\u5931\uff09\u8fd4\u56de\u7684 previousStat \u76f8\u540c\u3002 \u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u5728: \u6587\u4ef6\u88ab\u5220\u9664\uff0c\u7136\u540e\u53c8\u6062\u590d\u3002 \u6587\u4ef6\u88ab\u91cd\u547d\u540d\uff0c\u7136\u540e\u518d\u7b2c\u4e8c\u6b21\u91cd\u547d\u540d\u56de\u5176\u539f\u6765\u7684\u540d\u79f0\u3002 fs.write(fd, buffer[, offset[, length[, position]]], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd buffer | | offset length position callback err bytesWritten buffer | | \u5c06 buffer \u5199\u5165\u5230 fd \u6307\u5b9a\u7684\u6587\u4ef6\u3002 offset \u51b3\u5b9a buffer \u4e2d\u8981\u88ab\u5199\u5165\u7684\u90e8\u4f4d\uff0c length \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u6307\u5b9a\u8981\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c typeof position !== 'number' \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u53c2\u9605 pwrite(2) \u3002 \u56de\u8c03\u6709\u4e09\u4e2a\u53c2\u6570 (err, bytesWritten, buffer) \uff0c\u5176\u4e2d bytesWritten \u6307\u5b9a buffer \u4e2d\u88ab\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u5982\u679c\u8c03\u7528\u6b64\u65b9\u6cd5\u7684 util.promisify() \u7248\u672c\uff0c\u5219\u8fd4\u56de\u7684 Promise \u4f1a\u8fd4\u56de\u5177\u6709 bytesWritten \u548c buffer \u5c5e\u6027\u7684 Object \u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 fs.write() \u4e14\u4e0d\u7b49\u5f85\u56de\u8c03\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002 fs.write(fd, string[, position[, encoding]], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd string position encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err written string \u5c06 string \u5199\u5165\u5230 fd \u6307\u5b9a\u7684\u6587\u4ef6\u3002 \u5982\u679c string \u4e0d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u8be5\u503c\u4f1a\u88ab\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c typeof position !== 'number' \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u53c2\u9605 pwrite(2) \u3002 encoding \u662f\u671f\u671b\u7684\u5b57\u7b26\u4e32\u7f16\u7801\u3002 \u56de\u8c03\u4f1a\u63a5\u6536\u5230\u53c2\u6570 (err, written, string) \uff0c\u5176\u4e2d written \u6307\u5b9a\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u88ab\u8981\u6c42\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u88ab\u5199\u5165\u7684\u5b57\u8282\u6570\u4e0d\u4e00\u5b9a\u4e0e\u88ab\u5199\u5165\u7684\u5b57\u7b26\u4e32\u5b57\u7b26\u6570\u76f8\u540c\u3002 \u53c2\u9605 Buffer.byteLength \u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 fs.write() \u4e14\u4e0d\u7b49\u5f85\u56de\u8c03\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002 \u5728 Windows \u4e0a\uff0c\u5982\u679c\u6587\u4ef6\u63cf\u8ff0\u7b26\u8fde\u63a5\u5230\u63a7\u5236\u53f0\uff08\u4f8b\u5982 fd == 1 \u6216 stdout \uff09\uff0c\u5219\u65e0\u8bba\u4f7f\u7528\u4f55\u79cd\u7f16\u7801\uff0c\u5305\u542b\u975e ASCII \u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u90fd\u4e0d\u4f1a\u88ab\u6b63\u786e\u5730\u6e32\u67d3\u3002 \u901a\u8fc7\u4f7f\u7528 chcp 65001 \u547d\u4ee4\u66f4\u6539\u6d3b\u52a8\u7684\u4ee3\u7801\u9875\uff0c\u53ef\u4ee5\u5c06\u63a7\u5236\u53f0\u914d\u7f6e\u4e3a\u6b63\u786e\u5730\u6e32\u67d3 UTF-8\u3002 \u8be6\u89c1 chcp \u6587\u6863\u3002 fs.writeFile(file, data[, options], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 file | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 data | | | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'w' \u3002 callback err \u5f53 file \u662f\u4e00\u4e2a\u6587\u4ef6\u540d\u65f6\uff0c\u5f02\u6b65\u5730\u5c06\u6570\u636e\u5199\u5165\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u8986\u76d6\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 buffer\u3002 \u5f53 file \u662f\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u65f6\uff0c\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u76f4\u63a5\u8c03\u7528 fs.write() \uff08\u5efa\u8bae\u4f7f\u7528\uff09\u3002 \u8bf7\u53c2\u9605\u4ee5\u4e0b\u6709\u5173\u4f7f\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u8bf4\u660e\u3002 \u5982\u679c data \u662f\u4e00\u4e2a buffer\uff0c\u5219 encoding \u9009\u9879\u4f1a\u88ab\u5ffd\u7565\u3002 const data = new Uint8Array ( Buffer . from ( 'Node.js\u4e2d\u6587\u7f51' )); fs . writeFile ( '\u6587\u4ef6.txt' , data , ( err ) => { if ( err ) throw err ; console . log ( '\u6587\u4ef6\u5df2\u88ab\u4fdd\u5b58' ); }); \u5982\u679c options \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff1a fs . writeFile ( '\u6587\u4ef6.txt' , 'Node.js\u4e2d\u6587\u7f51' , 'utf8' , callback ); \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 fs.writeFile() \u4e14\u4e0d\u7b49\u5f85\u56de\u8c03\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002 \u4f7f\u7528 fs.writeFile() \u4e0e\u6587\u4ef6\u63cf\u8ff0\u7b26 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5f53 file \u662f\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u65f6\uff0c\u884c\u4e3a\u51e0\u4e4e\u4e0e\u76f4\u63a5\u8c03\u7528 fs.write() \u7c7b\u4f3c\uff1a fs . write ( fd , Buffer . from ( data , options . encoding ), callback ); \u4e0e\u76f4\u63a5\u8c03\u7528 fs.write() \u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728\u67d0\u4e9b\u5f02\u5e38\u60c5\u51b5\u4e0b\uff0c fs.write() \u53ef\u80fd\u53ea\u5199\u5165\u90e8\u5206 buffer\uff0c\u9700\u8981\u91cd\u8bd5\u4ee5\u5199\u5165\u5269\u4f59\u7684\u6570\u636e\uff0c\u800c fs.writeFile() \u5c06\u4f1a\u91cd\u8bd5\u76f4\u5230\u6570\u636e\u5b8c\u5168\u5199\u5165\uff08\u6216\u53d1\u751f\u9519\u8bef\uff09\u3002 \u8fd9\u79cd\u5f71\u54cd\u662f\u6df7\u6dc6\u7684\u5e38\u89c1\u539f\u56e0\u3002 \u5728\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u6587\u4ef6\u4e0d\u4f1a\u88ab\u66ff\u6362\uff01 \u6570\u636e\u4e0d\u4e00\u5b9a\u5199\u5165\u5230\u6587\u4ef6\u7684\u5f00\u5934\uff0c\u6587\u4ef6\u7684\u539f\u59cb\u6570\u636e\u53ef\u4ee5\u4fdd\u7559\u5728\u65b0\u5199\u5165\u7684\u6570\u636e\u4e4b\u524d\u548c/\u6216\u4e4b\u540e\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u8fde\u7eed\u4e24\u6b21\u8c03\u7528 fs.writeFile() \uff0c\u9996\u5148\u5199\u5165\u5b57\u7b26\u4e32 'Hello' \uff0c\u7136\u540e\u5199\u5165\u5b57\u7b26\u4e32 ', World' \uff0c\u5219\u8be5\u6587\u4ef6\u5c06\u4f1a\u5305\u542b 'Hello, World' \uff0c\u5e76\u4e14\u53ef\u80fd\u5305\u542b\u6587\u4ef6\u7684\u4e00\u4e9b\u539f\u59cb\u6570\u636e\uff08\u53d6\u51b3\u4e8e\u539f\u59cb\u6587\u4ef6\u7684\u5927\u5c0f\u548c\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c\u4f7f\u7528\u4e86\u6587\u4ef6\u540d\u800c\u4e0d\u662f\u63cf\u8ff0\u7b26\uff0c\u5219\u8be5\u6587\u4ef6\u5c06\u4f1a\u4fdd\u8bc1\u4ec5\u5305\u542b ', World' \u3002 fs.writeFileSync(file, data[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 file | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 data | | | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'w' \u3002 \u8fd4\u56de undefined \u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.writeFile() \u3002 fs.writeSync(fd, buffer[, offset[, length[, position]]]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd buffer | | offset length position \u8fd4\u56de: \u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.write(fd, buffer...) \u3002 fs.writeSync(fd, string[, position[, encoding]]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd string position encoding \u8fd4\u56de: \u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.write(fd, string...) \u3002 fs.writev(fd, buffers[, position], callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.9.0 fd buffers position callback err bytesWritten buffers \u4f7f\u7528 writev() \u5c06\u4e00\u4e2a ArrayBufferView \u6570\u7ec4\u5199\u5165 fd \u6307\u5b9a\u7684\u6587\u4ef6\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c typeof position !== 'number' \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u56de\u8c03\u6709\u4e09\u4e2a\u53c2\u6570\uff1a err \u3001 bytesWritten \u548c buffers \u3002 bytesWritten \u662f\u4ece buffers \u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u5982\u679c\u6b64\u65b9\u6cd5\u662f util.promisify() \u5316\u7684\u7248\u672c\uff0c\u5219\u5b83\u8fd4\u56de\u7684 Promise \u4f1a\u8fd4\u56de\u5177\u6709 bytesWritten \u548c buffers \u5c5e\u6027\u7684 Object \u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 fs.writev() \u4e14\u4e0d\u7b49\u5f85\u56de\u8c03\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002 fs.writevSync(fd, buffers[, position]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.9.0 fd buffers position \u8fd4\u56de: \u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.writev() \u3002 fs \u7684 Promise API # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 fs.promises API \u63d0\u4f9b\u4e86\u4e00\u7ec4\u5907\u7528\u7684\u5f02\u6b65\u6587\u4ef6\u7cfb\u7edf\u7684\u65b9\u6cd5\uff0c\u5b83\u4eec\u8fd4\u56de Promise \u5bf9\u8c61\u800c\u4e0d\u662f\u4f7f\u7528\u56de\u8c03\u3002 API \u53ef\u901a\u8fc7 require('fs').promises \u8bbf\u95ee\u3002 FileHandle \u7c7b # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 FileHandle \u5bf9\u8c61\u662f\u6570\u5b57\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u5305\u88c5\u5668\u3002 FileHandle \u7684\u5b9e\u4f8b\u4e0e\u6570\u5b57\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7684 API \u6765\u5904\u7406\u6587\u4ef6\u3002 \u5982\u679c\u6ca1\u6709\u4f7f\u7528 filehandle.close() \u65b9\u6cd5\u5173\u95ed FileHandle \uff0c\u5219\u5b83\u53ef\u80fd\u4f1a\u81ea\u52a8\u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\u5e76\u89e6\u53d1\u8fdb\u7a0b\u8b66\u544a\uff0c\u4ece\u800c\u6709\u52a9\u4e8e\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\u3002 \u8bf7\u4e0d\u8981\u5728\u4ee3\u7801\u4e2d\u4f9d\u8d56\u6b64\u884c\u4e3a\uff0c\u56e0\u4e3a\u5b83\u4e0d\u53ef\u9760\uff0c\u4e14\u4f60\u7684\u6587\u4ef6\u53ef\u80fd\u65e0\u6cd5\u5173\u95ed\u3002 \u76f8\u53cd\uff0c\u5e94\u8be5\u59cb\u7ec8\u663e\u5f0f\u7684\u5173\u95ed FileHandles \u3002 Node.js \u5c06\u6765\u53ef\u80fd\u4f1a\u6539\u53d8\u8fd9\u79cd\u884c\u4e3a\u3002 FileHandle \u5bf9\u8c61\u7684\u5b9e\u4f8b\u7531 fsPromises.open() \u65b9\u6cd5\u5728\u5185\u90e8\u521b\u5efa\u3002 \u4e0e\u57fa\u4e8e\u56de\u8c03\u7684 API\uff08\u5982 fs.fstat() \u3001 fs.fchown() \u3001 fs.fchmod() \u7b49\uff09\u4e0d\u540c\uff0c\u57fa\u4e8e promise \u7684 API \u4e0d\u4f7f\u7528\u6570\u5b57\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u800c\u662f\uff0c\u57fa\u4e8e promise \u7684 API \u4f7f\u7528 FileHandle \u7c7b\uff0c\u4ee5\u5e2e\u52a9\u907f\u514d\u5728\u89e3\u51b3\u6216\u62d2\u7edd Promise \u540e\u610f\u5916\u6cc4\u6f0f\u672a\u5173\u95ed\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 filehandle.appendFile(data, options) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 data | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'a' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5c1a\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 Buffer \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 FileHandle \u5fc5\u987b\u88ab\u6253\u5f00\u7528\u4ee5\u8ffd\u52a0\u3002 filehandle.chmod(mode) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 mode \u8fd4\u56de: \u66f4\u6539\u6587\u4ef6\u7684\u6743\u9650\u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 filehandle.chown(uid, gid) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 uid gid \u8fd4\u56de: \u66f4\u6539\u6587\u4ef6\u7684\u6240\u6709\u8005\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 filehandle.close() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 \u8fd4\u56de: \u5982\u679c\u5e95\u5c42\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u88ab\u5173\u95ed\u5219 Promise \u5c06\u4f1a\u88ab\u89e3\u51b3\uff0c\u5982\u679c\u5173\u95ed\u65f6\u53d1\u751f\u9519\u8bef\u5219\u5c06 Promise \u5c06\u4f1a\u88ab\u62d2\u7edd\u3002 \u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 const fsPromises = require ( 'fs' ). promises ; async function openAndClose () { let filehandle ; try { filehandle = await fsPromises . open ( 'thefile.txt' , 'r' ); } finally { if ( filehandle !== undefined ) await filehandle . close (); } } filehandle.datasync() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 \u8fd4\u56de: \u5f02\u6b65\u7684 fdatasync(2) \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 filehandle.fd # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 \u7531 FileHandle \u5bf9\u8c61\u7ba1\u7406\u7684\u6570\u5b57\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 filehandle.read(buffer, offset, length, position) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 buffer | offset length position \u8fd4\u56de: \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u3002 buffer \u662f\u6570\u636e\u5c06\u5199\u5165\u7684\u7f13\u51b2\u533a\u3002 offset \u662f buffer \u4e2d\u5f00\u59cb\u5199\u5165\u7684\u504f\u79fb\u91cf\u3002 length \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u6307\u5b9a\u8981\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002 position \u53c2\u6570\u6307\u5b9a\u4ece\u6587\u4ef6\u4e2d\u5f00\u59cb\u8bfb\u53d6\u7684\u4f4d\u7f6e\u3002 \u5982\u679c position \u4e3a null \uff0c\u5219\u4ece\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u66f4\u65b0\u6587\u4ef6\u4f4d\u7f6e\u3002 \u5982\u679c position \u662f\u6574\u6570\uff0c\u5219\u6587\u4ef6\u4f4d\u7f6e\u5c06\u4fdd\u6301\u4e0d\u53d8\u3002 \u6210\u529f\u8bfb\u53d6\u4e4b\u540e\uff0c Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u4e0a\u6709\u4e00\u4e2a bytesRead \u5c5e\u6027\uff08\u6307\u5b9a\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff09\u548c\u4e00\u4e2a buffer \u5c5e\u6027\uff08\u6307\u5411\u4f20\u5165\u7684 buffer \u53c2\u6570\uff09\u3002 filehandle.readFile(options) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 options | encoding | \u9ed8\u8ba4\u503c: null flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u8bfb\u53d6\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\u3002 Promise \u88ab\u89e3\u51b3\u65f6\u4f1a\u5e26\u4e0a\u6587\u4ef6\u7684\u5185\u5bb9\u3002 \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff08\u4f7f\u7528 options.encoding \uff09\uff0c\u5219\u6570\u636e\u4f1a\u4ee5 Buffer \u5bf9\u8c61\u8fd4\u56de\u3002 \u5426\u5219\uff0c\u6570\u636e\u5c06\u4f1a\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 \u5f53 path \u662f\u76ee\u5f55\u65f6\uff0c fsPromises.readFile() \u7684\u884c\u4e3a\u662f\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u3002 \u5728 macOS\u3001Linux \u548c Windows \u4e0a\uff0cpromise \u5c06\u4f1a\u88ab\u62d2\u7edd\u5e76\u5e26\u4e0a\u4e00\u4e2a\u9519\u8bef\u3002 \u5728 FreeBSD \u4e0a\uff0c\u5219\u5c06\u4f1a\u8fd4\u56de\u76ee\u5f55\u5185\u5bb9\u7684\u8868\u793a\u3002 FileHandle \u5fc5\u987b\u652f\u6301\u8bfb\u53d6\u3002 \u5982\u679c\u5bf9\u6587\u4ef6\u53e5\u67c4\u8fdb\u884c\u4e86\u4e00\u6b21\u6216\u591a\u6b21 filehandle.read() \u8c03\u7528\uff0c\u7136\u540e\u518d\u8c03\u7528 filehandle.readFile() \uff0c\u5219\u5c06\u4ece\u5f53\u524d\u4f4d\u7f6e\u8bfb\u53d6\u6570\u636e\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002 \u5b83\u5e76\u4e0d\u603b\u662f\u4ece\u6587\u4ef6\u7684\u5f00\u5934\u8bfb\u53d6\u3002 filehandle.stat([options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u68c0\u7d22\u6587\u4ef6\u7684 fs.Stats \u3002 filehandle.sync() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 \u8fd4\u56de: \u5f02\u6b65\u7684 fsync(2) \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 filehandle.truncate(len) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 len \u9ed8\u8ba4\u503c: 0 \u8fd4\u56de: \u622a\u65ad\u6587\u4ef6\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5982\u679c\u6587\u4ef6\u5927\u4e8e len \u4e2a\u5b57\u8282\uff0c\u5219\u53ea\u6709\u524d\u9762 len \u4e2a\u5b57\u8282\u4f1a\u4fdd\u7559\u5728\u6587\u4ef6\u4e2d\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u53ea\u4fdd\u7559\u6587\u4ef6\u7684\u524d 4 \u4e2a\u5b57\u8282\uff1a const fs = require ( 'fs' ); const fsPromises = fs . promises ; console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370: Node.js async function doTruncate () { let filehandle = null ; try { filehandle = await fsPromises . open ( 'temp.txt' , 'r+' ); await filehandle . truncate ( 4 ); } finally { if ( filehandle ) { // \u5982\u679c\u6587\u4ef6\u5df2\u6253\u5f00\uff0c\u5219\u5173\u95ed\u6587\u4ef6\u3002 await filehandle . close (); } } console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370: Node } doTruncate (). catch ( console . error ); \u5982\u679c\u6587\u4ef6\u5c0f\u4e8e len \u4e2a\u5b57\u8282\uff0c\u5219\u4f1a\u5bf9\u5176\u8fdb\u884c\u6269\u5c55\uff0c\u5e76\u4e14\u6269\u5c55\u90e8\u5206\u5c06\u586b\u5145\u7a7a\u5b57\u8282\uff08 '\\0' \uff09\uff1a const fs = require ( 'fs' ); const fsPromises = fs . promises ; console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370: Node.js async function doTruncate () { let filehandle = null ; try { filehandle = await fsPromises . open ( 'temp.txt' , 'r+' ); await filehandle . truncate ( 10 ); } finally { if ( filehandle ) { // \u5982\u679c\u6587\u4ef6\u5df2\u6253\u5f00\uff0c\u5219\u5173\u95ed\u6587\u4ef6\u3002 await filehandle . close (); } } console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370 Node.js\\0\\0\\0 } doTruncate (). catch ( console . error ); \u6700\u540e 3 \u4e2a\u5b57\u8282\u662f\u7a7a\u5b57\u8282\uff08 '\\0' \uff09\uff0c\u4ee5\u8865\u5145\u8d85\u51fa\u7684\u622a\u65ad\u3002 filehandle.utimes(atime, mtime) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 atime | | mtime | | \u8fd4\u56de: \u66f4\u6539 FileHandle \u6307\u5411\u7684\u5bf9\u8c61\u7684\u6587\u4ef6\u7cfb\u7edf\u65f6\u95f4\u6233\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u6b64\u51fd\u6570\u5728 7.1 \u4e4b\u524d\u7684 AIX \u7248\u672c\u4e0a\u4e0d\u8d77\u4f5c\u7528\uff0c\u5b83\u5c06\u4f1a\u89e3\u51b3 Promise \u5e76\u5e26\u4e0a\u4f7f\u7528 UV_ENOSYS \u4ee3\u7801\u7684\u9519\u8bef\u3002 filehandle.write(buffer[, offset[, length[, position]]]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 buffer | offset length position \u8fd4\u56de: \u5c06 buffer \u5199\u5165\u5230\u6587\u4ef6\u3002 Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u5305\u542b\u4e00\u4e2a bytesWritten \u5c5e\u6027\uff08\u6307\u5b9a\u5199\u5165\u7684\u5b57\u8282\u6570\uff09\u548c\u4e00\u4e2a buffer \u5c5e\u6027\uff08\u6307\u5411\u5199\u5165\u7684 buffer \uff09\u3002 offset \u51b3\u5b9a buffer \u4e2d\u8981\u88ab\u5199\u5165\u7684\u90e8\u4f4d\uff0c length \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u6307\u5b9a\u8981\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c typeof position !== 'number' \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u53c2\u9605 pwrite(2) \u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 filehandle.write() \u4e14\u4e0d\u7b49\u5f85 Promise \u88ab\u89e3\u51b3\uff08\u6216\u88ab\u62d2\u7edd\uff09\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002 filehandle.write(string[, position[, encoding]]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 string position encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u5c06 string \u5199\u5165\u5230\u6587\u4ef6\u3002 \u5982\u679c string \u4e0d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u8be5\u503c\u4f1a\u88ab\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002 Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u5305\u542b\u4e00\u4e2a bytesWritten \u5c5e\u6027\uff08\u6307\u5b9a\u5199\u5165\u7684\u5b57\u8282\u6570\uff09\u548c\u4e00\u4e2a buffer \u5c5e\u6027\uff08\u6307\u5411\u5199\u5165\u7684 string \uff09\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c position \u7684\u7c7b\u578b\u4e0d\u662f\u4e00\u4e2a number \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u53c2\u9605 pwrite(2) \u3002 encoding \u662f\u671f\u671b\u7684\u5b57\u7b26\u4e32\u7f16\u7801\u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 filehandle.write() \u4e14\u4e0d\u7b49\u5f85 Promise \u88ab\u89e3\u51b3\uff08\u6216\u88ab\u62d2\u7edd\uff09\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002 filehandle.writeFile(data, options) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 data | | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'w' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u5c06\u6570\u636e\u5199\u5165\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u8986\u76d6\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 buffer\u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5982\u679c data \u662f\u4e00\u4e2a buffer\uff0c\u5219 encoding \u9009\u9879\u4f1a\u88ab\u5ffd\u7565\u3002 \u5982\u679c options \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 FileHandle \u5fc5\u987b\u652f\u6301\u5199\u5165\u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 filehandle.writeFile() \u4e14\u4e0d\u7b49\u5f85 Promise \u88ab\u89e3\u51b3\uff08\u6216\u88ab\u62d2\u7edd\uff09\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5982\u679c\u5bf9\u6587\u4ef6\u53e5\u67c4\u8fdb\u884c\u4e86\u4e00\u6b21\u6216\u591a\u6b21 filehandle.write() \u8c03\u7528\uff0c\u7136\u540e\u518d\u8c03\u7528 filehandle.writeFile() \uff0c\u5219\u5c06\u4ece\u5f53\u524d\u4f4d\u7f6e\u5199\u5165\u6570\u636e\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002 \u5b83\u5e76\u4e0d\u603b\u662f\u4ece\u6587\u4ef6\u7684\u5f00\u5934\u5199\u5165\u3002 filehandle.writev(buffers[, position]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.9.0 buffers position \u8fd4\u56de: \u5c06 ArrayBufferViews \u6570\u7ec4\u5199\u5165\u8be5\u6587\u4ef6\u3002 Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u5305\u542b\u4e00\u4e2a bytesWritten \u5c5e\u6027\uff08\u8868\u660e\u5199\u5165\u7684\u5b57\u8282\u6570\uff09\u548c\u4e00\u4e2a buffers \u5c5e\u6027\uff08\u6307\u5411 buffers \u8f93\u5165\uff09\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c typeof position !== 'number' \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u5728\u540c\u4e00\u6587\u4ef6\u4e0a\u591a\u6b21\u8c03\u7528 writev() \u4e14\u4e0d\u7b49\u5f85\u524d\u9762\u7684\u64cd\u4f5c\u5b8c\u6210\uff0c\u8fd9\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002 fsPromises.access(path[, mode]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | mode \u9ed8\u8ba4\u503c: fs.constants.F_OK \u3002 \u8fd4\u56de: \u6d4b\u8bd5\u7528\u6237\u5bf9 path \u6307\u5b9a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6743\u9650\u3002 mode \u53c2\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u8981\u6267\u884c\u7684\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u3002 mode \u53ef\u9009\u7684\u503c\u53c2\u9605 \u6587\u4ef6\u53ef\u8bbf\u95ee\u6027\u7684\u5e38\u91cf \u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u4f8b\u5982 fs.constants.W_OK | fs.constants.R_OK \uff09\u3002 \u5982\u679c\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u6210\u529f\uff0c\u5219 Promise \u4f1a\u88ab\u89e3\u51b3\u4e14\u4e0d\u5e26\u503c\u3002 \u5982\u679c\u4efb\u4f55\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u5931\u8d25\uff0c\u5219 Promise \u4f1a\u88ab\u62d2\u7edd\u5e76\u5e26\u4e0a Error \u5bf9\u8c61\u3002 \u4ee5\u4e0b\u793a\u4f8b\u4f1a\u68c0\u67e5\u5f53\u524d\u8fdb\u7a0b\u662f\u5426\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165 /etc/passwd \u6587\u4ef6\u3002 const fs = require ( 'fs' ); const fsPromises = fs . promises ; fsPromises . access ( '/etc/passwd' , fs . constants . R_OK | fs . constants . W_OK ) . then (() => console . log ( '\u53ef\u4ee5\u8bbf\u95ee' )) . catch (() => console . error ( '\u4e0d\u53ef\u8bbf\u95ee' )); \u4e0d\u5efa\u8bae\u5728\u8c03\u7528 fsPromises.open() \u4e4b\u524d\u4f7f\u7528 fsPromises.access() \u68c0\u67e5\u6587\u4ef6\u7684\u53ef\u8bbf\u95ee\u6027\u3002 \u8fd9\u6837\u505a\u4f1a\u5f15\u5165\u7ade\u6001\u6761\u4ef6\uff0c\u56e0\u4e3a\u5176\u4ed6\u8fdb\u7a0b\u53ef\u80fd\u4f1a\u5728\u4e24\u4e2a\u8c03\u7528\u4e4b\u95f4\u66f4\u6539\u6587\u4ef6\u7684\u72b6\u6001\u3002 \u76f8\u53cd\uff0c\u5e94\u8be5\u76f4\u63a5\u6253\u5f00\u3001\u8bfb\u53d6\u6216\u5199\u5165\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u65e0\u6cd5\u8bbf\u95ee\u5219\u5904\u7406\u5f15\u53d1\u7684\u9519\u8bef\u3002 fsPromises.appendFile(path, data[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | | \u6587\u4ef6\u540d\u6216 FileHandle \u3002 data | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002\u9ed8\u8ba4\u503c: 'a' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5c1a\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 Buffer \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 path \u53ef\u4ee5\u6307\u5b9a\u4e3a\u5df2\u6253\u5f00\u7528\u4e8e\u8ffd\u52a0\uff08\u4f7f\u7528 fsPromises.open() \uff09\u7684 FileHandle \u3002 fsPromises.chmod(path, mode) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | mode \u8fd4\u56de: \u66f4\u6539\u6587\u4ef6\u7684\u6743\u9650\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 fsPromises.chown(path, uid, gid) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | uid gid \u8fd4\u56de: \u66f4\u6539\u6587\u4ef6\u7684\u6240\u6709\u8005\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 fsPromises.copyFile(src, dest[, flags]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 src | | \u8981\u62f7\u8d1d\u7684\u6e90\u6587\u4ef6\u540d\u3002 dest | | \u62f7\u8d1d\u64cd\u4f5c\u7684\u76ee\u6807\u6587\u4ef6\u540d\u3002 flags \u7528\u4e8e\u62f7\u8d1d\u64cd\u4f5c\u7684\u4fee\u9970\u7b26\u3002 \u9ed8\u8ba4\u503c: 0 \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u5c06 src \u62f7\u8d1d\u5230 dest \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c dest \u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u8986\u76d6\u5b83\u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 Node.js \u4e0d\u4fdd\u8bc1\u62f7\u8d1d\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u3002 \u5982\u679c\u5728\u6253\u5f00\u76ee\u6807\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u540e\u53d1\u751f\u9519\u8bef\uff0c\u5219 Node.js \u5c06\u5c1d\u8bd5\u5220\u9664\u76ee\u6807\u6587\u4ef6\u3002 flags \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u62f7\u8d1d\u64cd\u4f5c\u7684\u884c\u4e3a\u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u6bd4\u5982 fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE \uff09\u3002 fs.constants.COPYFILE_EXCL - \u5982\u679c dest \u5df2\u5b58\u5728\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fs.constants.COPYFILE_FICLONE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\uff08copy-on-write\uff09\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u4f7f\u7528\u540e\u5907\u7684\u62f7\u8d1d\u673a\u5236\u3002 fs.constants.COPYFILE_FICLONE_FORCE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 const fsPromises = require ( 'fs' ). promises ; // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u521b\u5efa\u6216\u8986\u76d6\u76ee\u6807\u6587\u4ef6\u3002 fsPromises . copyFile ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' ) . then (() => console . log ( '\u6e90\u6587\u4ef6\u5df2\u62f7\u8d1d\u5230\u76ee\u6807\u6587\u4ef6' )) . catch (() => console . log ( '\u8be5\u6587\u4ef6\u65e0\u6cd5\u62f7\u8d1d' )); \u5982\u679c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6570\u5b57\uff0c\u5219\u5b83\u6307\u5b9a flags : const fs = require ( 'fs' ); const fsPromises = fs . promises ; const { COPYFILE_EXCL } = fs . constants ; // \u901a\u8fc7\u4f7f\u7528 COPYFILE_EXCL\uff0c\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fsPromises . copyFile ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' , COPYFILE_EXCL ) . then (() => console . log ( '\u6e90\u6587\u4ef6\u5df2\u62f7\u8d1d\u5230\u76ee\u6807\u6587\u4ef6' )) . catch (() => console . log ( '\u8be5\u6587\u4ef6\u65e0\u6cd5\u62f7\u8d1d' )); fsPromises.lchmod(path, mode) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5e9f\u5f03\u4e8e: v10.0.0 path | | mode \u8fd4\u56de: \u66f4\u6539\u7b26\u53f7\u94fe\u63a5\u7684\u6743\u9650\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u6b64\u65b9\u6cd5\u4ec5\u5728 macOS \u4e0a\u5b9e\u73b0\u3002 fsPromises.lchown(path, uid, gid) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | uid gid \u8fd4\u56de: \u66f4\u6539\u7b26\u53f7\u94fe\u63a5\u7684\u62e5\u6709\u8005\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 fsPromises.link(existingPath, newPath) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 existingPath | | newPath | | \u8fd4\u56de: \u5f02\u6b65\u7684 link(2) \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 fsPromises.lstat(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u5f02\u6b65\u7684 lstat(2) \u3002 Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a\u7528\u4e8e\u7ed9\u5b9a\u7684\u7b26\u53f7\u94fe\u63a5 path \u7684 fs.Stats \u5bf9\u8c61\u3002 fsPromises.mkdir(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | options | recursive \u9ed8\u8ba4\u503c: false \u3002 mode Windows \u4e0a\u4e0d\u652f\u6301\u3002 \u9ed8\u8ba4\u503c: 0o777 \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u521b\u5efa\u76ee\u5f55\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u6a21\u5f0f\uff08\u6743\u9650\u548c\u7c98\u6ede\u4f4d\uff09\u7684\u6574\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 mode \u5c5e\u6027\u548c recursive \u5c5e\u6027\uff08\u6307\u793a\u662f\u5426\u5e94\u521b\u5efa\u7236\u6587\u4ef6\u5939\uff09\u7684\u5bf9\u8c61\u3002 \u5f53 path \u662f\u4e00\u4e2a\u5df2\u5b58\u5728\u7684\u76ee\u5f55\u65f6\uff0c\u8c03\u7528 fsPromises.mkdir() \u4ec5\u5728 recursive \u4e3a false \u65f6\u624d\u5bfc\u81f4\u62d2\u7edd\u3002 fsPromises.mkdtemp(prefix[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 prefix options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684\u4e34\u65f6\u76ee\u5f55\uff0c\u4e14\u89e3\u51b3 Promise \u65f6\u5e26\u4e0a\u521b\u5efa\u7684\u76ee\u5f55\u8def\u5f84\u3002 \u552f\u4e00\u7684\u76ee\u5f55\u540d\u79f0\u662f\u901a\u8fc7\u5728\u63d0\u4f9b\u7684 prefix \u7684\u672b\u5c3e\u9644\u52a0\u516d\u4e2a\u968f\u673a\u5b57\u7b26\u6765\u751f\u6210\u7684\u3002 \u7531\u4e8e\u5e73\u53f0\u7684\u4e0d\u4e00\u81f4\u6027\uff0c\u8bf7\u907f\u514d\u5728 prefix \u4e2d\u4ee5 X \u5b57\u7b26\u7ed3\u5c3e\u3002 \u5728\u67d0\u4e9b\u5e73\u53f0\u4e0a\uff0c\u7279\u522b\u662f BSD\uff0c\u53ef\u4ee5\u8fd4\u56de\u516d\u4e2a\u4ee5\u4e0a\u7684\u968f\u673a\u5b57\u7b26\uff0c\u5e76\u7528\u968f\u673a\u5b57\u7b26\u66ff\u6362 prefix \u4e2d\u7ed3\u5c3e\u7684 X \u5b57\u7b26\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u5b57\u7b26\u7f16\u7801\u7684 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\u3002 fsPromises . mkdtemp ( path . join ( os . tmpdir (), 'foo-' )) . catch ( console . error ); fsPromises.mkdtemp() \u65b9\u6cd5\u5c06\u516d\u4f4d\u968f\u673a\u9009\u62e9\u7684\u5b57\u7b26\u76f4\u63a5\u9644\u52a0\u5230 prefix \u5b57\u7b26\u4e32\u3002 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u76ee\u5f55 /tmp \uff0c\u5982\u679c\u6253\u7b97\u5728 /tmp \u4e2d\u521b\u5efa\u4e34\u65f6\u76ee\u5f55\uff0c\u5219 prefix \u5fc5\u987b\u5728\u5c3e\u90e8\u52a0\u4e0a\u7279\u5b9a\u5e73\u53f0\u7684\u8def\u5f84\u5206\u9694\u7b26\uff08 require('path').sep \uff09\u3002 fsPromises.open(path, flags[, mode]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | flags | \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \uff08\u53ef\u8bfb\u5199\uff09\u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u6253\u5f00\u6587\u4ef6\u5e76\u8fd4\u56de\u4e00\u4e2a Promise \uff0c\u5f53\u89e3\u51b3\u65f6\u4f1a\u5e26\u4e0a\u4e00\u4e2a FileHandle \u5bf9\u8c61\u3002 \u53c2\u9605 open(2) \u3002 mode \u7528\u4e8e\u8bbe\u7f6e\u6587\u4ef6\u6a21\u5f0f\uff08\u6743\u9650\u548c\u7c98\u6ede\u4f4d\uff09\uff0c\u4f46\u4ec5\u9650\u4e8e\u521b\u5efa\u6587\u4ef6\u65f6\u3002 \u6709\u4e9b\u5b57\u7b26 ( < > : \" / \\ | ? * ) \u5728 Windows \u4e0a\u662f\u9884\u7559\u7684\uff0c\u53c2\u9605 \u547d\u540d\u6587\u4ef6\u3001\u8def\u5f84\u4ee5\u53ca\u547d\u540d\u7a7a\u95f4 \u3002 \u5728 NTFS \u4e0a\uff0c\u5982\u679c\u6587\u4ef6\u540d\u5305\u542b\u5192\u53f7\uff0c\u5219 Node.js \u5c06\u6253\u5f00\u6587\u4ef6\u7cfb\u7edf\u6d41\uff0c\u53c2\u9605 \u6b64 MSDN \u9875\u9762 \u3002 fsPromises.opendir(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 path | | options encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u5305\u542b \u3002 \u5f02\u6b65\u5730\u6253\u5f00\u76ee\u5f55\u3002 \u53c2\u9605 opendir(3) \u3002 \u521b\u5efa\u4e00\u4e2a fs.Dir \uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u7528\u4e8e\u66f4\u8fdb\u4e00\u6b65\u8bfb\u53d6\u548c\u6e05\u7406\u76ee\u5f55\u7684\u7684\u51fd\u6570\u3002 encoding \u9009\u9879\u7528\u4e8e\u5728\u6253\u5f00\u76ee\u5f55\u548c\u540e\u7eed\u7684\u8bfb\u53d6\u64cd\u4f5c\u65f6\u8bbe\u7f6e path \u7684\u5b57\u7b26\u7f16\u7801\u3002 \u4f7f\u7528\u5f02\u6b65\u8fed\u4ee3\u7684\u793a\u4f8b\uff1a const fs = require ( 'fs' ); async function print ( path ) { const dir = await fs . promises . opendir ( path ); for await ( const dirent of dir ) { console . log ( dirent . name ); } } print ( './' ). catch ( console . error ); fsPromises.readdir(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 withFileTypes \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u8bfb\u53d6\u76ee\u5f55\u7684\u5185\u5bb9\uff0c\u7136\u540e\u89e3\u51b3 Promise \u5e76\u5e26\u4e0a\u4e00\u4e2a\u6570\u7ec4\uff08\u5305\u542b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u7684\u540d\u79f0\uff0c\u4f46\u4e0d\u5305\u62ec '.' \u548c '..' \uff09\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u6587\u4ef6\u540d\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u6587\u4ef6\u540d\u662f Buffer \u5bf9\u8c61\u3002 \u5982\u679c options.withFileTypes \u8bbe\u7f6e\u4e3a true \uff0c\u5219\u89e3\u51b3\u7684\u6570\u7ec4\u5c06\u5305\u542b fs.Dirent \u5bf9\u8c61\u3002 fsPromises.readFile(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | | \u6587\u4ef6\u540d\u6216 FileHandle \u3002 options | encoding | \u9ed8\u8ba4\u503c: null \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u8bfb\u53d6\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\u3002 Promise \u88ab\u89e3\u51b3\u65f6\u4f1a\u5e26\u4e0a\u6587\u4ef6\u7684\u5185\u5bb9\u3002 \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff08\u4f7f\u7528 options.encoding \uff09\uff0c\u5219\u6570\u636e\u4f1a\u4ee5 Buffer \u5bf9\u8c61\u8fd4\u56de\u3002 \u5426\u5219\uff0c\u6570\u636e\u5c06\u4f1a\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 \u5f53 path \u662f\u76ee\u5f55\u65f6\uff0c fsPromises.readFile() \u7684\u884c\u4e3a\u662f\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u3002 \u5728 macOS\u3001Linux \u548c Windows \u4e0a\uff0cpromise \u5c06\u4f1a\u88ab\u62d2\u7edd\u5e76\u5e26\u4e0a\u4e00\u4e2a\u9519\u8bef\u3002 \u5728 FreeBSD \u4e0a\uff0c\u5219\u5c06\u4f1a\u8fd4\u56de\u76ee\u5f55\u5185\u5bb9\u7684\u8868\u793a\u3002 \u6307\u5b9a\u7684 FileHandle \u5fc5\u987b\u652f\u6301\u8bfb\u53d6\u3002 fsPromises.readlink(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u5f02\u6b65\u7684 readlink(2) \u3002 Promise \u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u5e26\u4e0a linkString \u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u94fe\u63a5\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u94fe\u63a5\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002 fsPromises.realpath(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u4f7f\u7528\u4e0e fs.realpath.native() \u51fd\u6570\u76f8\u540c\u7684\u8bed\u4e49\u6765\u5224\u65ad path \u7684\u5b9e\u9645\u4f4d\u7f6e\uff0c\u7136\u540e\u89e3\u51b3 Promise \u5e76\u5e26\u4e0a\u89e3\u6790\u540e\u7684\u8def\u5f84\u3002 \u4ec5\u652f\u6301\u53ef\u8f6c\u6362\u4e3a UTF8 \u5b57\u7b26\u4e32\u7684\u8def\u5f84\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002 \u5728 Linux \u4e0a\uff0c\u5f53 Node.js \u4e0e musl libc \u94fe\u63a5\u65f6\uff0cprocfs \u6587\u4ef6\u7cfb\u7edf\u5fc5\u987b\u6302\u8f7d\u5728 /proc \u4e0a\u624d\u80fd\u4f7f\u6b64\u529f\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 Glibc \u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u3002 fsPromises.rename(oldPath, newPath) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 oldPath | | newPath | | \u8fd4\u56de: \u5c06 oldPath \u91cd\u547d\u540d\u4e3a newPath \uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 fsPromises.rmdir(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 \u7a33\u5b9a\u6027: 1 - \u9012\u5f52\u7684\u5220\u9664\u662f\u5b9e\u9a8c\u6027\u7684\u3002 path | | options emfileWait \u5982\u679c\u9047\u5230 EMFILE \u9519\u8bef\uff0c\u5219 Node.js \u5c06\u4f1a\u5728\u6bcf\u6b21\u5c1d\u8bd5\u65f6\u4ee5 1 \u6beb\u79d2\u7684\u7ebf\u6027\u56de\u9000\u91cd\u8bd5\u8be5\u64cd\u4f5c\uff0c\u76f4\u5230\u8d85\u65f6\u6301\u7eed\u65f6\u95f4\u8d85\u8fc7\u6b64\u9650\u5236\u3002 \u5982\u679c recursive \u9009\u9879\u4e0d\u4e3a true \uff0c\u5219\u5ffd\u7565\u6b64\u9009\u9879\u3002 \u9ed8\u8ba4\u503c: 1000 \u3002 maxBusyTries \u5982\u679c\u9047\u5230 EBUSY \u3001 ENOTEMPTY \u6216 EPERM \u9519\u8bef\uff0c\u5219 Node.js \u5c06\u4f1a\u5728\u6bcf\u6b21\u5c1d\u8bd5\u65f6\u4ee5 100 \u6beb\u79d2\u7684\u7ebf\u6027\u56de\u9000\u7b49\u5f85\u91cd\u8bd5\u8be5\u64cd\u4f5c\u3002 \u6b64\u9009\u9879\u4ee3\u8868\u91cd\u8bd5\u7684\u6b21\u6570\u3002\u5982\u679c recursive \u9009\u9879\u4e0d\u4e3a true \uff0c\u5219\u5ffd\u7565\u6b64\u9009\u9879\u3002 \u9ed8\u8ba4\u503c: 3 \u3002 recursive \u5982\u679c\u4e3a true \uff0c\u5219\u6267\u884c\u9012\u5f52\u7684\u76ee\u5f55\u5220\u9664\u3002\u5728\u9012\u5f52\u6a21\u5f0f\u4e2d\uff0c\u5982\u679c path \u4e0d\u5b58\u5728\u5219\u4e0d\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u4e14\u5728\u5931\u8d25\u65f6\u91cd\u8bd5\u64cd\u4f5c\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u5220\u9664 path \u6307\u5b9a\u7684\u76ee\u5f55\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5728\u6587\u4ef6\uff08\u800c\u4e0d\u662f\u76ee\u5f55\uff09\u4e0a\u4f7f\u7528 fsPromises.rmdir() \u4f1a\u5bfc\u81f4 Promise \u88ab\u62d2\u7edd\uff0c\u5728 Windows \u4e0a\u4f1a\u5e26\u4e0a ENOENT \u9519\u8bef\u3001\u5728 POSIX \u4e0a\u4f1a\u5e26\u4e0a ENOTDIR \u9519\u8bef\u3002 fsPromises.stat(path[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a fs.Stats \u5bf9\u8c61\uff08\u7528\u4e8e\u7ed9\u5b9a\u7684 path \uff09\u3002 fsPromises.symlink(target, path[, type]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 target | | path | | type \u9ed8\u8ba4\u503c: 'file' \u3002 \u8fd4\u56de: \u521b\u5efa\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 type \u53c2\u6570\u4ec5\u5728 Windows \u4e0a\u53ef\u7528\uff0c\u53ef\u4ee5\u662f 'dir' \u3001 'file' \u6216 'junction' \u4e4b\u4e00\u3002 Windows \u4e0a\u4f7f\u7528 'junction' \u8981\u6c42\u76ee\u6807\u8def\u5f84\u662f\u7edd\u5bf9\u8def\u5f84\u3002 \u5f53\u4f7f\u7528 'junction' \u65f6\uff0c target \u53c2\u6570\u5c06\u81ea\u52a8\u6807\u51c6\u5316\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002 fsPromises.truncate(path[, len]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | len \u9ed8\u8ba4\u503c: 0 \u3002 \u8fd4\u56de: \u622a\u65ad path \uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 path \u5fc5\u987b\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216 Buffer \u3002 fsPromises.unlink(path) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | \u8fd4\u56de: \u5f02\u6b65\u7684 unlink(2) \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 fsPromises.utimes(path, atime, mtime) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | atime | | mtime | | \u8fd4\u56de: \u66f4\u6539 path \u6307\u5411\u7684\u5bf9\u8c61\u7684\u6587\u4ef6\u7cfb\u7edf\u65f6\u95f4\u6233\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 atime \u548c mtime \u53c2\u6570\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a \u503c\u53ef\u4ee5\u662f\u8868\u793a Unix \u7eaa\u5143\u65f6\u95f4\u7684\u6570\u5b57\u3001 Date \u5bf9\u8c61\u3001\u6216\u7c7b\u4f3c '123456789.0' \u7684\u6570\u503c\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u8be5\u503c\u65e0\u6cd5\u8f6c\u6362\u4e3a\u6570\u503c\u3001\u6216\u503c\u4e3a NaN \u3001 Infinity \u6216 -Infinity \uff0c\u5219\u629b\u51fa Error \u3002 fsPromises.writeFile(file, data[, options]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 file | | | \u6587\u4ef6\u540d\u6216 FileHandle \u3002 data | | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002\u9ed8\u8ba4\u503c: 'w' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u5c06\u6570\u636e\u5199\u5165\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u8986\u76d6\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 buffer\u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5982\u679c data \u662f\u4e00\u4e2a buffer\uff0c\u5219 encoding \u9009\u9879\u4f1a\u88ab\u5ffd\u7565\u3002 \u5982\u679c options \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 \u6307\u5b9a\u7684 FileHandle \u5fc5\u987b\u652f\u6301\u5199\u5165\u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 fsPromises.writeFile() \u4e14\u4e0d\u7b49\u5f85 Promise \u88ab\u89e3\u51b3\uff08\u6216\u88ab\u62d2\u7edd\uff09\u662f\u4e0d\u5b89\u5168\u7684\u3002 FS \u5e38\u91cf # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u7531 fs.constants \u8f93\u51fa\u3002 \u5e76\u975e\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\u90fd\u53ef\u4ee5\u4f7f\u7528\u6bcf\u4e2a\u5e38\u91cf\u3002 \u6587\u4ef6\u53ef\u8bbf\u95ee\u6027\u7684\u5e38\u91cf # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u9002\u7528\u4e8e fs.access() \u3002 \u5e38\u91cf \u8bf4\u660e F_OK \u8868\u660e\u6587\u4ef6\u5bf9\u8c03\u7528\u8fdb\u7a0b\u53ef\u89c1\u3002 \u8fd9\u5bf9\u4e8e\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728\u5f88\u6709\u7528\uff0c\u4f46\u5bf9 rwx \u6743\u9650\u6ca1\u6709\u4efb\u4f55\u8bf4\u660e\u3002 \u5982\u679c\u672a\u6307\u5b9a\u6a21\u5f0f\uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a\u8be5\u503c\u3002 R_OK \u8868\u660e\u8c03\u7528\u8fdb\u7a0b\u53ef\u4ee5\u8bfb\u53d6\u6587\u4ef6\u3002 W_OK \u8868\u660e\u8c03\u7528\u8fdb\u7a0b\u53ef\u4ee5\u5199\u5165\u6587\u4ef6\u3002 X_OK \u8868\u660e\u8c03\u7528\u8fdb\u7a0b\u53ef\u4ee5\u6267\u884c\u6587\u4ef6\u3002 \u5728 Windows \u4e0a\u65e0\u6548\uff08\u8868\u73b0\u5f97\u50cf fs.constants.F_OK \uff09\u3002 \u6587\u4ef6\u62f7\u8d1d\u7684\u5e38\u91cf # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u9002\u7528\u4e8e fs.copyFile() \u3002 \u5e38\u91cf \u8bf4\u660e COPYFILE_EXCL \u5982\u679c\u76ee\u6807\u8def\u5f84\u5df2\u5b58\u5728\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 COPYFILE_FICLONE \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\u94fe\u63a5\u3002 \u5982\u679c\u5e95\u5c42\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u4f7f\u7528\u5907\u9009\u7684\u62f7\u8d1d\u673a\u5236\u3002 COPYFILE_FICLONE_FORCE \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\u94fe\u63a5\u3002 \u5982\u679c\u5e95\u5c42\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 \u6587\u4ef6\u6253\u5f00\u7684\u5e38\u91cf # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u9002\u7528\u4e8e fs.open() \u3002 \u5e38\u91cf \u8bf4\u660e O_RDONLY \u8868\u660e\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u53ea\u8bfb\u8bbf\u95ee\u3002 O_WRONLY \u8868\u660e\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u53ea\u5199\u8bbf\u95ee\u3002 O_RDWR \u8868\u660e\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u5199\u8bbf\u95ee\u3002 O_CREAT \u8868\u660e\u5982\u679c\u6587\u4ef6\u5c1a\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 O_EXCL \u8868\u660e\u5982\u679c\u8bbe\u7f6e\u4e86 O_CREAT \u6807\u5fd7\u4e14\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u5219\u6253\u5f00\u6587\u4ef6\u5e94\u8be5\u5931\u8d25\u3002 O_NOCTTY \u8868\u660e\u5982\u679c\u8def\u5f84\u8868\u793a\u7ec8\u7aef\u8bbe\u5907\uff0c\u5219\u6253\u5f00\u8be5\u8def\u5f84\u4e0d\u5e94\u8be5\u9020\u6210\u8be5\u7ec8\u7aef\u53d8\u6210\u8fdb\u7a0b\u7684\u63a7\u5236\u7ec8\u7aef\uff08\u5982\u679c\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u7ec8\u7aef\uff09\u3002 O_TRUNC \u8868\u660e\u5982\u679c\u6587\u4ef6\u5b58\u5728\u4e14\u662f\u5e38\u89c4\u6587\u4ef6\u3001\u5e76\u4e14\u6587\u4ef6\u6210\u529f\u6253\u5f00\u4ee5\u8fdb\u884c\u5199\u5165\u8bbf\u95ee\uff0c\u5219\u5176\u957f\u5ea6\u5e94\u622a\u65ad\u4e3a\u96f6\u3002 O_APPEND \u8868\u660e\u6570\u636e\u5c06\u4f1a\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002 O_DIRECTORY \u8868\u660e\u5982\u679c\u8def\u5f84\u4e0d\u662f\u76ee\u5f55\uff0c\u5219\u6253\u5f00\u5e94\u8be5\u5931\u8d25\u3002 O_NOATIME \u8868\u660e\u6587\u4ef6\u7cfb\u7edf\u7684\u8bfb\u53d6\u8bbf\u95ee\u5c06\u4e0d\u518d\u5bfc\u81f4\u4e0e\u6587\u4ef6\u76f8\u5173\u8054\u7684 atime \u4fe1\u606f\u7684\u66f4\u65b0\u3002 \u4ec5\u5728 Linux \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u53ef\u7528\u3002 O_NOFOLLOW \u8868\u660e\u5982\u679c\u8def\u5f84\u662f\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u6253\u5f00\u5e94\u8be5\u5931\u8d25\u3002 O_SYNC \u8868\u660e\u6587\u4ef6\u662f\u4e3a\u540c\u6b65 I/O \u6253\u5f00\u7684\uff0c\u5199\u5165\u64cd\u4f5c\u5c06\u4f1a\u7b49\u5f85\u6587\u4ef6\u7684\u5b8c\u6574\u6027\u3002 O_DSYNC \u8868\u660e\u6587\u4ef6\u662f\u4e3a\u540c\u6b65 I/O \u6253\u5f00\u7684\uff0c\u5199\u5165\u64cd\u4f5c\u5c06\u4f1a\u7b49\u5f85\u6570\u636e\u7684\u5b8c\u6574\u6027 O_SYMLINK \u8868\u660e\u6253\u5f00\u7b26\u53f7\u94fe\u63a5\u81ea\u8eab\uff0c\u800c\u4e0d\u662f\u5b83\u6307\u5411\u7684\u8d44\u6e90\u3002 O_DIRECT \u8868\u660e\u5c06\u5c1d\u8bd5\u6700\u5c0f\u5316\u6587\u4ef6 I/O \u7684\u7f13\u5b58\u6548\u679c\u3002 O_NONBLOCK \u8868\u660e\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u4ee5\u975e\u963b\u585e\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u3002 UV_FS_O_FILEMAP \u5f53\u8bbe\u7f6e\u540e\uff0c\u5c06\u4f1a\u4f7f\u7528\u5185\u5b58\u6587\u4ef6\u7684\u6620\u5c04\u6765\u8bbf\u95ee\u6587\u4ef6\u3002 \u6b64\u6807\u5fd7\u4ec5\u5728 Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u53ef\u7528\u3002 \u5728\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u6b64\u6807\u5fd7\u4f1a\u88ab\u5ffd\u7565\u3002 \u6587\u4ef6\u7c7b\u578b\u7684\u5e38\u91cf # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u9002\u7528\u4e8e fs.Stats \u5bf9\u8c61\u7684 mode \u5c5e\u6027\uff0c\u7528\u4e8e\u51b3\u5b9a\u6587\u4ef6\u7684\u7c7b\u578b\u3002 \u5e38\u91cf \u8bf4\u660e S_IFMT \u7528\u4e8e\u63d0\u53d6\u6587\u4ef6\u7c7b\u578b\u4ee3\u7801\u7684\u4f4d\u63a9\u7801\u3002 S_IFREG \u8868\u793a\u5e38\u89c4\u6587\u4ef6\u3002 S_IFDIR \u8868\u793a\u76ee\u5f55\u3002 S_IFCHR \u8868\u793a\u9762\u5411\u5b57\u7b26\u7684\u8bbe\u5907\u6587\u4ef6\u3002 S_IFBLK \u8868\u793a\u9762\u5411\u5757\u7684\u8bbe\u5907\u6587\u4ef6\u3002 S_IFIFO \u8868\u793a FIFO \u6216\u7ba1\u9053\u3002 S_IFLNK \u8868\u793a\u7b26\u53f7\u94fe\u63a5\u3002 S_IFSOCK \u8868\u793a\u5957\u63a5\u5b57\u3002 \u6587\u4ef6\u6a21\u5f0f\u7684\u5e38\u91cf # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u9002\u7528\u4e8e fs.Stats \u5bf9\u8c61\u7684 mode \u5c5e\u6027\uff0c\u7528\u4e8e\u51b3\u5b9a\u6587\u4ef6\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u5e38\u91cf \u8bf4\u660e S_IRWXU \u8868\u660e\u6240\u6709\u8005\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c\u3002 S_IRUSR \u8868\u660e\u6240\u6709\u8005\u53ef\u8bfb\u3002 S_IWUSR \u8868\u660e\u6240\u6709\u8005\u53ef\u5199\u3002 S_IXUSR \u8868\u660e\u6240\u6709\u8005\u53ef\u6267\u884c\u3002 S_IRWXG \u8868\u660e\u7fa4\u7ec4\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c\u3002 S_IRGRP \u8868\u660e\u7fa4\u7ec4\u53ef\u8bfb\u3002 S_IWGRP \u8868\u660e\u7fa4\u7ec4\u53ef\u5199\u3002 S_IXGRP \u8868\u660e\u7fa4\u7ec4\u53ef\u6267\u884c\u3002 S_IRWXO \u8868\u660e\u5176\u4ed6\u4eba\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c\u3002 S_IROTH \u8868\u660e\u5176\u4ed6\u4eba\u53ef\u8bfb\u3002 S_IWOTH \u8868\u660e\u5176\u4ed6\u4eba\u53ef\u5199\u3002 S_IXOTH \u8868\u660e\u5176\u4ed6\u4eba\u53ef\u6267\u884c\u3002 \u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5f53 flag \u9009\u9879\u91c7\u7528\u5b57\u7b26\u4e32\u65f6\uff0c\u53ef\u7528\u4ee5\u4e0b\u6807\u5fd7\uff1a 'a' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8ffd\u52a0\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 'ax' - \u4e0e 'a' \u76f8\u4f3c\uff0c\u4f46\u5982\u679c\u8def\u5f84\u5df2\u5b58\u5728\u5219\u5931\u8d25\u3002 'a+' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u548c\u8ffd\u52a0\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 'ax+' - \u4e0e 'a+' \u76f8\u4f3c\uff0c\u4f46\u5982\u679c\u8def\u5f84\u5df2\u5b58\u5728\u5219\u5931\u8d25\u3002 'as' - \u4ee5\u540c\u6b65\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8ffd\u52a0\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 'as+' - \u4ee5\u540c\u6b65\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u548c\u8ffd\u52a0\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 'r' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u51fa\u73b0\u5f02\u5e38\u3002 'r+' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u548c\u5199\u5165\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u51fa\u73b0\u5f02\u5e38\u3002 'rs+' - \u4ee5\u540c\u6b65\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u548c\u5199\u5165\u3002\u6307\u793a\u64cd\u4f5c\u7cfb\u7edf\u7ed5\u8fc7\u672c\u5730\u7684\u6587\u4ef6\u7cfb\u7edf\u7f13\u5b58\u3002 \u8fd9\u5bf9\u4e8e\u5728 NFS \u6302\u8f7d\u4e0a\u6253\u5f00\u6587\u4ef6\u65f6\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u8df3\u8fc7\u53ef\u80fd\u8fc7\u65f6\u7684\u672c\u5730\u7f13\u5b58\u3002 \u5b83\u5bf9 I/O \u6027\u80fd\u6709\u975e\u5e38\u5b9e\u9645\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u9664\u975e\u9700\u8981\uff0c\u5426\u5219\u4e0d\u5efa\u8bae\u4f7f\u7528\u6b64\u6807\u5fd7\u3002 \u8fd9\u4e0d\u4f1a\u5c06 fs.open() \u6216 fsPromises.open() \u8f6c\u6362\u4e3a\u540c\u6b65\u7684\u963b\u585e\u8c03\u7528\u3002 \u5982\u679c\u9700\u8981\u540c\u6b65\u7684\u64cd\u4f5c\uff0c\u5219\u5e94\u4f7f\u7528 fs.openSync() \u4e4b\u7c7b\u7684\u3002 'w' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u622a\u65ad\u6587\u4ef6\u3002 'wx' - \u4e0e 'w' \u76f8\u4f3c\uff0c\u4f46\u5982\u679c\u8def\u5f84\u5df2\u5b58\u5728\u5219\u5931\u8d25\u3002 'w+' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u548c\u5199\u5165\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u622a\u65ad\u6587\u4ef6\u3002 'wx+' - \u4e0e 'w+' \u76f8\u4f3c\uff0c\u4f46\u5982\u679c\u8def\u5f84\u5df2\u5b58\u5728\u5219\u5931\u8d25\u3002 flag \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u53c2\u9605 open(2) \u6587\u6863\u3002 \u5e38\u7528\u7684\u5e38\u91cf\u53ef\u4ee5\u4ece fs.constants \u83b7\u53d6\u3002 \u5728 Windows \u4e0a\uff0c\u6807\u5fd7\u4f1a\u88ab\u9002\u5f53\u5730\u8f6c\u6362\u4e3a\u7b49\u6548\u7684\u6807\u5fd7\uff0c\u4f8b\u5982 O_WRONLY \u8f6c\u6362\u4e3a FILE_GENERIC_WRITE \u3001 O_EXCL|O_CREAT \u8f6c\u6362\u4e3a\u80fd\u88ab CreateFileW \u63a5\u53d7\u7684 CREATE_NEW \u3002 \u7279\u6709\u7684 'x' \u6807\u5fd7\uff08 open(2) \u4e2d\u7684 O_EXCL \u6807\u5fd7\uff09\u53ef\u4ee5\u786e\u4fdd\u8def\u5f84\u662f\u65b0\u521b\u5efa\u7684\u3002 \u5728 POSIX \u7cfb\u7edf\u4e0a\uff0c\u5373\u4f7f\u8def\u5f84\u662f\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\u4e14\u6307\u5411\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u5b83\u4e5f\u4f1a\u88ab\u89c6\u4e3a\u5df2\u5b58\u5728\u3002 \u8be5\u7279\u6709\u6807\u5fd7\u4e0d\u4e00\u5b9a\u9002\u7528\u4e8e\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002 \u5982\u679c\u8981\u4fee\u6539\u6587\u4ef6\u800c\u4e0d\u662f\u8986\u76d6\u6587\u4ef6\uff0c\u5219\u6807\u5fd7\u6a21\u5f0f\u5e94\u4e3a 'r+' \u6a21\u5f0f\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684 'w' \u6a21\u5f0f\u3002 \u67d0\u4e9b\u6807\u5fd7\u7684\u884c\u4e3a\u662f\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u3002 \u4f8b\u5982\uff0c\u5728 macOS \u548c Linux \u4e0a\u4f7f\u7528 'a+' \u6807\u5fd7\u6253\u5f00\u76ee\u5f55\uff08\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b\uff09\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u3002 \u800c\u5728 Windows \u548c FreeBSD \u4e0a\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6216 FileHandle \u3002 // \u5728 macOS \u548c Linux \u4e0a\uff1a fs . open ( '<\u76ee\u5f55>' , 'a+' , ( err , fd ) => { // => [Error: EISDIR: illegal operation on a directory, open <\u76ee\u5f55>] }); // \u5728 Windows \u548c FreeBSD \u4e0a\uff1a fs . open ( '<\u76ee\u5f55>' , 'a+' , ( err , fd ) => { // => null, <fd> }); \u5728 Windows \u4e0a\uff0c\u4f7f\u7528 'w' \u6807\u5fd7\u6253\u5f00\u73b0\u5b58\u7684\u9690\u85cf\u6587\u4ef6\uff08\u901a\u8fc7 fs.open() \u3001 fs.writeFile() \u6216 fsPromises.open() \uff09\u4f1a\u629b\u51fa EPERM \u3002 \u73b0\u5b58\u7684\u9690\u85cf\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528 'r+' \u6807\u5fd7\u6253\u5f00\u7528\u4e8e\u5199\u5165\u3002 \u8c03\u7528 fs.ftruncate() \u6216 fsPromises.ftruncate() \u53ef\u4ee5\u7528\u4e8e\u91cd\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\u3002","title":"Node.js-fs\u6587\u6863"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#nodejs-v12140","text":"\u8fd4\u56de\u6587\u6863\u9996\u9875 \u641c\u7d22","title":"Node.js v12.14.0 \u6587\u6863"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_1","text":"fs\uff08\u6587\u4ef6\u7cfb\u7edf\uff09 \u6587\u4ef6\u8def\u5f84 URL \u5bf9\u8c61\u7684\u652f\u6301 \u6587\u4ef6\u63cf\u8ff0\u7b26 \u7ebf\u7a0b\u6c60\u7684\u4f7f\u7528 fs.Dir \u7c7b dir.close() dir.close(callback) dir.closeSync() dir.path dir.read() dir.read(callback) dir.readSync() dir[Symbol.asyncIterator]() fs.Dirent \u7c7b dirent.isBlockDevice() dirent.isCharacterDevice() dirent.isDirectory() dirent.isFIFO() dirent.isFile() dirent.isSocket() dirent.isSymbolicLink() dirent.name fs.FSWatcher \u7c7b 'change' \u4e8b\u4ef6 'close' \u4e8b\u4ef6 'error' \u4e8b\u4ef6 watcher.close() fs.ReadStream \u7c7b 'close' \u4e8b\u4ef6 'open' \u4e8b\u4ef6 'ready' \u4e8b\u4ef6 readStream.bytesRead readStream.path readStream.pending fs.Stats \u7c7b stats.isBlockDevice() stats.isCharacterDevice() stats.isDirectory() stats.isFIFO() stats.isFile() stats.isSocket() stats.isSymbolicLink() stats.dev stats.ino stats.mode stats.nlink stats.uid stats.gid stats.rdev stats.size stats.blksize stats.blocks stats.atimeMs stats.mtimeMs stats.ctimeMs stats.birthtimeMs stats.atimeNs stats.mtimeNs stats.ctimeNs stats.birthtimeNs stats.atime stats.mtime stats.ctime stats.birthtime \u6587\u4ef6\u5c5e\u6027\u7684\u65f6\u95f4\u503c fs.WriteStream \u7c7b 'close' \u4e8b\u4ef6 'open' \u4e8b\u4ef6 'ready' \u4e8b\u4ef6 writeStream.bytesWritten writeStream.path writeStream.pending [fs.access(path , mode], callback) [fs.accessSync(path , mode]) [fs.appendFile(path, data , options], callback) [fs.appendFileSync(path, data , options]) fs.chmod(path, mode, callback) \u6587\u4ef6\u7684\u6a21\u5f0f fs.chmodSync(path, mode) fs.chown(path, uid, gid, callback) fs.chownSync(path, uid, gid) fs.close(fd, callback) fs.closeSync(fd) fs.constants [fs.copyFile(src, dest , flags], callback) [fs.copyFileSync(src, dest , flags]) [fs.createReadStream(path , options]) [fs.createWriteStream(path , options]) fs.exists(path, callback) fs.existsSync(path) fs.fchmod(fd, mode, callback) fs.fchmodSync(fd, mode) fs.fchown(fd, uid, gid, callback) fs.fchownSync(fd, uid, gid) fs.fdatasync(fd, callback) fs.fdatasyncSync(fd) [fs.fstat(fd , options], callback) [fs.fstatSync(fd , options]) fs.fsync(fd, callback) fs.fsyncSync(fd) [fs.ftruncate(fd , len], callback) [fs.ftruncateSync(fd , len]) fs.futimes(fd, atime, mtime, callback) fs.futimesSync(fd, atime, mtime) fs.lchmod(path, mode, callback) fs.lchmodSync(path, mode) fs.lchown(path, uid, gid, callback) fs.lchownSync(path, uid, gid) fs.link(existingPath, newPath, callback) fs.linkSync(existingPath, newPath) [fs.lstat(path , options], callback) [fs.lstatSync(path , options]) [fs.mkdir(path , options], callback) [fs.mkdirSync(path , options]) [fs.mkdtemp(prefix , options], callback) [fs.mkdtempSync(prefix , options]) [fs.open(path , flags[, mode]], callback) [fs.opendir(path , options], callback) [fs.opendirSync(path , options]) [fs.openSync(path , flags, mode]) fs.read(fd, buffer, offset, length, position, callback) [fs.readdir(path , options], callback) [fs.readdirSync(path , options]) [fs.readFile(path , options], callback) \u6587\u4ef6\u63cf\u8ff0\u7b26 [fs.readFileSync(path , options]) [fs.readlink(path , options], callback) [fs.readlinkSync(path , options]) fs.readSync(fd, buffer, offset, length, position) [fs.realpath(path , options], callback) [fs.realpath.native(path , options], callback) [fs.realpathSync(path , options]) [fs.realpathSync.native(path , options]) fs.rename(oldPath, newPath, callback) fs.renameSync(oldPath, newPath) [fs.rmdir(path , options], callback) [fs.rmdirSync(path , options]) [fs.stat(path , options], callback) [fs.statSync(path , options]) [fs.symlink(target, path , type], callback) [fs.symlinkSync(target, path , type]) [fs.truncate(path , len], callback) [fs.truncateSync(path , len]) fs.unlink(path, callback) fs.unlinkSync(path) [fs.unwatchFile(filename , listener]) fs.utimes(path, atime, mtime, callback) fs.utimesSync(path, atime, mtime) [fs.watch(filename , options][, listener]) \u6ce8\u610f\u4e8b\u9879 \u53ef\u7528\u6027 \u7d22\u5f15\u8282\u70b9 \u6587\u4ef6\u540d\u53c2\u6570 [fs.watchFile(filename , options], listener) [fs.write(fd, buffer , offset[, length[, position]]], callback) [fs.write(fd, string , position[, encoding]], callback) [fs.writeFile(file, data , options], callback) \u4f7f\u7528 fs.writeFile() \u4e0e\u6587\u4ef6\u63cf\u8ff0\u7b26 [fs.writeFileSync(file, data , options]) [fs.writeSync(fd, buffer , offset[, length[, position]]]) [fs.writeSync(fd, string , position[, encoding]]) [fs.writev(fd, buffers , position], callback) [fs.writevSync(fd, buffers , position]) fs \u7684 Promise API FileHandle \u7c7b filehandle.appendFile(data, options) filehandle.chmod(mode) filehandle.chown(uid, gid) filehandle.close() filehandle.datasync() filehandle.fd filehandle.read(buffer, offset, length, position) filehandle.readFile(options) [filehandle.stat( options]) filehandle.sync() filehandle.truncate(len) filehandle.utimes(atime, mtime) [filehandle.write(buffer , offset[, length[, position]]]) [filehandle.write(string , position[, encoding]]) filehandle.writeFile(data, options) [filehandle.writev(buffers , position]) [fsPromises.access(path , mode]) [fsPromises.appendFile(path, data , options]) fsPromises.chmod(path, mode) fsPromises.chown(path, uid, gid) [fsPromises.copyFile(src, dest , flags]) fsPromises.lchmod(path, mode) fsPromises.lchown(path, uid, gid) fsPromises.link(existingPath, newPath) [fsPromises.lstat(path , options]) [fsPromises.mkdir(path , options]) [fsPromises.mkdtemp(prefix , options]) [fsPromises.open(path, flags , mode]) [fsPromises.opendir(path , options]) [fsPromises.readdir(path , options]) [fsPromises.readFile(path , options]) [fsPromises.readlink(path , options]) [fsPromises.realpath(path , options]) fsPromises.rename(oldPath, newPath) [fsPromises.rmdir(path , options]) [fsPromises.stat(path , options]) [fsPromises.symlink(target, path , type]) [fsPromises.truncate(path , len]) fsPromises.unlink(path) fsPromises.utimes(path, atime, mtime) [fsPromises.writeFile(file, data , options]) FS \u5e38\u91cf \u6587\u4ef6\u53ef\u8bbf\u95ee\u6027\u7684\u5e38\u91cf \u6587\u4ef6\u62f7\u8d1d\u7684\u5e38\u91cf \u6587\u4ef6\u6253\u5f00\u7684\u5e38\u91cf \u6587\u4ef6\u7c7b\u578b\u7684\u5e38\u91cf \u6587\u4ef6\u6a21\u5f0f\u7684\u5e38\u91cf \u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7","title":"\u76ee\u5f55"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fs","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7a33\u5b9a\u6027: 2 - \u7a33\u5b9a fs \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a API\uff0c\u7528\u4e8e\u4ee5\u6a21\u4eff\u6807\u51c6 POSIX \u51fd\u6570\u7684\u65b9\u5f0f\u4e0e\u6587\u4ef6\u7cfb\u7edf\u8fdb\u884c\u4ea4\u4e92\u3002 \u8981\u4f7f\u7528\u6b64\u6a21\u5757\uff1a const fs = require ( 'fs' ); \u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u90fd\u5177\u6709\u540c\u6b65\u548c\u5f02\u6b65\u7684\u5f62\u5f0f\u3002 \u5f02\u6b65\u7684\u5f62\u5f0f\u603b\u662f\u5c06\u5b8c\u6210\u56de\u8c03\u4f5c\u4e3a\u5176\u6700\u540e\u4e00\u4e2a\u53c2\u6570\u3002 \u4f20\u7ed9\u5b8c\u6210\u56de\u8c03\u7684\u53c2\u6570\u53d6\u51b3\u4e8e\u5177\u4f53\u65b9\u6cd5\uff0c\u4f46\u7b2c\u4e00\u4e2a\u53c2\u6570\u59cb\u7ec8\u9884\u7559\u7528\u4e8e\u5f02\u5e38\u3002 \u5982\u679c\u64cd\u4f5c\u6210\u529f\u5b8c\u6210\uff0c\u5219\u7b2c\u4e00\u4e2a\u53c2\u6570\u5c06\u4e3a null \u6216 undefined \u3002 const fs = require ( 'fs' ); fs . unlink ( '/tmp/hello' , ( err ) => { if ( err ) throw err ; console . log ( '\u5df2\u6210\u529f\u5220\u9664 /tmp/hello' ); }); \u4f7f\u7528\u540c\u6b65\u7684\u64cd\u4f5c\u53d1\u751f\u7684\u5f02\u5e38\u4f1a\u7acb\u5373\u629b\u51fa\uff0c\u53ef\u4ee5\u4f7f\u7528 try\u2026catch \u5904\u7406\uff0c\u4e5f\u53ef\u4ee5\u5141\u8bb8\u5192\u6ce1\u3002 const fs = require ( 'fs' ); try { fs . unlinkSync ( '/tmp/hello' ); console . log ( '\u5df2\u6210\u529f\u5220\u9664 /tmp/hello' ); } catch ( err ) { // \u5904\u7406\u9519\u8bef } \u4f7f\u7528\u5f02\u6b65\u7684\u65b9\u6cd5\u65f6\u65e0\u6cd5\u4fdd\u8bc1\u987a\u5e8f\u3002 \u56e0\u6b64\uff0c\u4ee5\u4e0b\u7684\u64cd\u4f5c\u5bb9\u6613\u51fa\u9519\uff0c\u56e0\u4e3a fs.stat() \u64cd\u4f5c\u53ef\u80fd\u5728 fs.rename() \u64cd\u4f5c\u4e4b\u524d\u5b8c\u6210\uff1a fs . rename ( '/tmp/hello' , '/tmp/world' , ( err ) => { if ( err ) throw err ; console . log ( '\u91cd\u547d\u540d\u5b8c\u6210' ); }); fs . stat ( '/tmp/world' , ( err , stats ) => { if ( err ) throw err ; console . log ( `\u6587\u4ef6\u5c5e\u6027: ${ JSON . stringify ( stats ) } ` ); }); \u8981\u6b63\u786e\u5730\u6392\u5e8f\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u5219\u5c06 fs.stat() \u8c03\u7528\u79fb\u52a8\u5230 fs.rename() \u64cd\u4f5c\u7684\u56de\u8c03\u4e2d\uff1a fs . rename ( '/tmp/hello' , '/tmp/world' , ( err ) => { if ( err ) throw err ; fs . stat ( '/tmp/world' , ( err , stats ) => { if ( err ) throw err ; console . log ( `\u6587\u4ef6\u5c5e\u6027: ${ JSON . stringify ( stats ) } ` ); }); }); \u5728\u7e41\u5fd9\u7684\u8fdb\u7a0b\u4e2d\uff0c\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528\u8fd9\u4e9b\u8c03\u7528\u7684\u5f02\u6b65\u7248\u672c\u3002 \u540c\u6b65\u7684\u7248\u672c\u5c06\u963b\u585e\u6574\u4e2a\u8fdb\u7a0b\uff0c\u76f4\u5230\u5b83\u4eec\u5b8c\u6210\uff08\u505c\u6b62\u6240\u6709\u8fde\u63a5\uff09\u3002 \u867d\u7136\u4e0d\u63a8\u8350\u8fd9\u6837\u4f7f\u7528\uff0c\u4f46\u5927\u591a\u6570 fs \u51fd\u6570\u5141\u8bb8\u7701\u7565\u56de\u8c03\u53c2\u6570\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u4e00\u4e2a\u4f1a\u91cd\u65b0\u629b\u51fa\u9519\u8bef\u7684\u9ed8\u8ba4\u56de\u8c03\u3002 \u8981\u83b7\u53d6\u539f\u59cb\u8c03\u7528\u70b9\u7684\u8ddf\u8e2a\uff0c\u5219\u8bbe\u7f6e NODE_DEBUG \u73af\u5883\u53d8\u91cf\uff1a \u4e0d\u63a8\u8350\u5728\u5f02\u6b65\u7684 fs \u51fd\u6570\u4e0a\u7701\u7565\u56de\u8c03\u51fd\u6570\uff0c\u56e0\u4e3a\u53ef\u80fd\u5bfc\u81f4\u5c06\u6765\u629b\u51fa\u9519\u8bef\u3002 $ cat script.js function bad() { require('fs').readFile('/'); } bad(); $ env NODE_DEBUG = fs node script.js fs.js:88 throw backtrace; ^ Error: EISDIR: illegal operation on a directory, read <stack trace.>","title":"fs\uff08\u6587\u4ef6\u7cfb\u7edf\uff09#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_2","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5927\u591a\u6570 fs \u64cd\u4f5c\u63a5\u53d7\u7684\u6587\u4ef6\u8def\u5f84\u53ef\u4ee5\u6307\u5b9a\u4e3a\u5b57\u7b26\u4e32\u3001 Buffer \u3001\u6216\u4f7f\u7528 file: \u534f\u8bae\u7684 URL \u5bf9\u8c61\u3002 \u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u8def\u5f84\u88ab\u89e3\u6790\u4e3a\u6807\u8bc6\u7edd\u5bf9\u6216\u76f8\u5bf9\u6587\u4ef6\u540d\u7684 UTF-8 \u5b57\u7b26\u5e8f\u5217\u3002 \u76f8\u5bf9\u8def\u5f84\u5c06\u76f8\u5bf9\u4e8e process.cwd() \u6307\u5b9a\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u8fdb\u884c\u89e3\u6790\u3002 \u5728 POSIX \u4e0a\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u7684\u793a\u4f8b\uff1a const fs = require ( 'fs' ); fs . open ( '/open/some/file.txt' , 'r' , ( err , fd ) => { if ( err ) throw err ; fs . close ( fd , ( err ) => { if ( err ) throw err ; }); }); \u5728 POSIX \u4e0a\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff08\u76f8\u5bf9\u4e8e process.cwd() \uff09\u7684\u793a\u4f8b\uff1a fs . open ( 'file.txt' , 'r' , ( err , fd ) => { if ( err ) throw err ; fs . close ( fd , ( err ) => { if ( err ) throw err ; }); }); \u4f7f\u7528 Buffer \u6307\u5b9a\u7684\u8def\u5f84\u4e3b\u8981\u7528\u4e8e\u5c06\u6587\u4ef6\u8def\u5f84\u89c6\u4e3a\u4e0d\u900f\u660e\u5b57\u8282\u5e8f\u5217\u7684\u67d0\u4e9b POSIX \u64cd\u4f5c\u7cfb\u7edf\u3002 \u5728\u8fd9\u6837\u7684\u7cfb\u7edf\u4e0a\uff0c\u5355\u4e2a\u6587\u4ef6\u8def\u5f84\u53ef\u4ee5\u5305\u542b\u4f7f\u7528\u591a\u79cd\u5b57\u7b26\u7f16\u7801\u7684\u5b50\u5e8f\u5217\u3002 \u4e0e\u5b57\u7b26\u4e32\u8def\u5f84\u4e00\u6837\uff0c Buffer \u8def\u5f84\u53ef\u4ee5\u662f\u76f8\u5bf9\u8def\u5f84\u6216\u7edd\u5bf9\u8def\u5f84\uff1a \u5728 POSIX \u4e0a\u4f7f\u7528\u7edd\u5bf9\u8def\u5f84\u7684\u793a\u4f8b\uff1a fs . open ( Buffer . from ( '/open/some/file.txt' ), 'r' , ( err , fd ) => { if ( err ) throw err ; fs . close ( fd , ( err ) => { if ( err ) throw err ; }); }); \u5728 Windows \u4e0a\uff0cNode.js \u9075\u5faa\u6bcf\u4e2a\u9a71\u52a8\u5668\u5de5\u4f5c\u76ee\u5f55\u7684\u6982\u5ff5\u3002 \u5f53\u4f7f\u7528\u6ca1\u6709\u53cd\u659c\u6760\u7684\u9a71\u52a8\u5668\u8def\u5f84\u65f6\uff0c\u53ef\u4ee5\u89c2\u5bdf\u5230\u6b64\u884c\u4e3a\u3002 \u4f8b\u5982\uff0c fs.readdirSync('c:\\\\') \u53ef\u80fd\u4f1a\u8fd4\u56de\u4e0e fs.readdirSync('c:') \u4e0d\u540c\u7684\u7ed3\u679c\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605 \u6b64 MSDN \u9875\u9762 \u3002","title":"\u6587\u4ef6\u8def\u5f84#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#url","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v7.6.0 \u5bf9\u4e8e\u5927\u591a\u6570 fs \u6a21\u5757\u7684\u51fd\u6570\uff0c path \u6216 filename \u53c2\u6570\u53ef\u4ee5\u4f20\u5165 WHATWG URL \u5bf9\u8c61\u3002 \u4ec5\u652f\u6301\u4f7f\u7528 file: \u534f\u8bae\u7684 URL \u5bf9\u8c61\u3002 const fs = require ( 'fs' ); const fileUrl = new URL ( 'file:///tmp/hello' ); fs . readFileSync ( fileUrl ); file: URL \u59cb\u7ec8\u662f\u7edd\u5bf9\u8def\u5f84\u3002 \u4f7f\u7528 WHATWG URL \u5bf9\u8c61\u53ef\u80fd\u4f1a\u91c7\u7528\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u884c\u4e3a\u3002 \u5728 Windows \u4e0a\uff0c\u5e26\u6709\u4e3b\u673a\u540d\u7684 file: URL \u8f6c\u6362\u4e3a UNC \u8def\u5f84\uff0c\u800c\u5e26\u6709\u9a71\u52a8\u5668\u53f7\u7684 file: URL \u8f6c\u6362\u4e3a\u672c\u5730\u7edd\u5bf9\u8def\u5f84\u3002 \u6ca1\u6709\u4e3b\u673a\u540d\u548c\u9a71\u52a8\u5668\u53f7\u7684 file: URL \u5c06\u5bfc\u81f4\u629b\u51fa\u9519\u8bef\uff1a // \u5728 Windows \u4e0a\uff1a // - \u5e26\u6709\u4e3b\u673a\u540d\u7684 WHATWG \u6587\u4ef6\u7684 URL \u8f6c\u6362\u4e3a UNC \u8def\u5f84\u3002 // file://hostname/p/a/t/h/file => \\\\hostname\\p\\a\\t\\h\\file fs . readFileSync ( new URL ( 'file://hostname/p/a/t/h/file' )); // - \u5e26\u6709\u9a71\u52a8\u5668\u53f7\u7684 WHATWG \u6587\u4ef6\u7684 URL \u8f6c\u6362\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002 // file:///C:/tmp/hello => C:\\tmp\\hello fs . readFileSync ( new URL ( 'file:///C:/tmp/hello' )); // - \u6ca1\u6709\u4e3b\u673a\u540d\u7684 WHATWG \u6587\u4ef6\u7684 URL \u5fc5\u987b\u5305\u542b\u9a71\u52a8\u5668\u53f7\u3002 fs . readFileSync ( new URL ( 'file:///notdriveletter/p/a/t/h/file' )); fs . readFileSync ( new URL ( 'file:///c/p/a/t/h/file' )); // TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must be absolute \u5e26\u6709\u9a71\u52a8\u5668\u53f7\u7684 file: URL \u5fc5\u987b\u4f7f\u7528 : \u4f5c\u4e3a\u9a71\u52a8\u5668\u53f7\u540e\u9762\u7684\u5206\u9694\u7b26\u3002 \u4f7f\u7528\u5176\u4ed6\u5206\u9694\u7b26\u5c06\u5bfc\u81f4\u629b\u51fa\u9519\u8bef\u3002 \u5728\u6240\u6709\u5176\u4ed6\u5e73\u53f0\u4e0a\uff0c\u4e0d\u652f\u6301\u5e26\u6709\u4e3b\u673a\u540d\u7684 file: URL\uff0c\u4f7f\u7528\u65f6\u5c06\u5bfc\u81f4\u629b\u51fa\u9519\u8bef\uff1a // \u5728\u5176\u4ed6\u5e73\u53f0\u4e0a\uff1a // - \u4e0d\u652f\u6301\u5e26\u6709\u4e3b\u673a\u540d\u7684 WHATWG \u6587\u4ef6\u7684 URL\u3002 // file://hostname/p/a/t/h/file => throw! fs . readFileSync ( new URL ( 'file://hostname/p/a/t/h/file' )); // TypeError [ERR_INVALID_FILE_URL_PATH]: must be absolute // - WHATWG \u6587\u4ef6\u7684 URL \u8f6c\u6362\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002 // file:///tmp/hello => /tmp/hello fs . readFileSync ( new URL ( 'file:///tmp/hello' )); \u5305\u542b\u7f16\u7801\u540e\u7684\u659c\u6746\u5b57\u7b26\uff08 %2F \uff09\u7684 file: URL \u5728\u6240\u6709\u5e73\u53f0\u4e0a\u90fd\u5c06\u5bfc\u81f4\u629b\u51fa\u9519\u8bef\uff1a // \u5728 Windows \u4e0a\uff1a fs . readFileSync ( new URL ( 'file:///C:/p/a/t/h/%2F' )); fs . readFileSync ( new URL ( 'file:///C:/p/a/t/h/%2f' )); /* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded \\ or / characters */ // \u5728 POSIX \u4e0a\uff1a fs . readFileSync ( new URL ( 'file:///p/a/t/h/%2F' )); fs . readFileSync ( new URL ( 'file:///p/a/t/h/%2f' )); /* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded / characters */ \u5728 Windows \u4e0a\uff0c\u5305\u542b\u7f16\u7801\u540e\u7684\u53cd\u659c\u6746\u5b57\u7b26\uff08 %5C \uff09\u7684 file: URL \u5c06\u5bfc\u81f4\u629b\u51fa\u9519\u8bef\uff1a // \u5728 Windows \u4e0a\uff1a fs . readFileSync ( new URL ( 'file:///C:/path/%5C' )); fs . readFileSync ( new URL ( 'file:///C:/path/%5c' )); /* TypeError [ERR_INVALID_FILE_URL_PATH]: File URL path must not include encoded \\ or / characters */","title":"URL \u5bf9\u8c61\u7684\u652f\u6301#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_3","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5728 POSIX \u7cfb\u7edf\u4e0a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8fdb\u7a0b\uff0c\u5185\u6838\u90fd\u7ef4\u62a4\u7740\u4e00\u5f20\u5f53\u524d\u6253\u5f00\u7740\u7684\u6587\u4ef6\u548c\u8d44\u6e90\u7684\u8868\u683c\u3002 \u6bcf\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u90fd\u5206\u914d\u4e86\u4e00\u4e2a\u79f0\u4e3a\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u7b80\u5355\u7684\u6570\u5b57\u6807\u8bc6\u7b26\u3002 \u5728\u7cfb\u7edf\u5c42\uff0c\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u90fd\u4f7f\u7528\u8fd9\u4e9b\u6587\u4ef6\u63cf\u8ff0\u7b26\u6765\u6807\u8bc6\u548c\u8ddf\u8e2a\u6bcf\u4e2a\u7279\u5b9a\u7684\u6587\u4ef6\u3002 Windows \u7cfb\u7edf\u4f7f\u7528\u4e86\u4e00\u4e2a\u867d\u7136\u4e0d\u540c\u4f46\u6982\u5ff5\u4e0a\u7c7b\u4f3c\u7684\u673a\u5236\u6765\u8ddf\u8e2a\u8d44\u6e90\u3002 \u4e3a\u4e86\u7b80\u5316\u7528\u6237\u7684\u5de5\u4f5c\uff0cNode.js \u62bd\u8c61\u51fa\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u7279\u5b9a\u5dee\u5f02\uff0c\u5e76\u4e3a\u6240\u6709\u6253\u5f00\u7684\u6587\u4ef6\u5206\u914d\u4e00\u4e2a\u6570\u5b57\u578b\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 fs.open() \u65b9\u6cd5\u7528\u4e8e\u5206\u914d\u65b0\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u4e00\u65e6\u88ab\u5206\u914d\uff0c\u5219\u6587\u4ef6\u63cf\u8ff0\u7b26\u53ef\u7528\u4e8e\u4ece\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\u3001\u5411\u6587\u4ef6\u5199\u5165\u6570\u636e\u3001\u6216\u8bf7\u6c42\u5173\u4e8e\u6587\u4ef6\u7684\u4fe1\u606f\u3002 fs . open ( '/open/some/file.txt' , 'r' , ( err , fd ) => { if ( err ) throw err ; fs . fstat ( fd , ( err , stat ) => { if ( err ) throw err ; // \u4f7f\u7528\u6587\u4ef6\u5c5e\u6027\u3002 // \u59cb\u7ec8\u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\uff01 fs . close ( fd , ( err ) => { if ( err ) throw err ; }); }); }); \u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u9650\u5236\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\u5185\u53ef\u80fd\u6253\u5f00\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\uff0c\u56e0\u6b64\u5f53\u64cd\u4f5c\u5b8c\u6210\u65f6\u5173\u95ed\u63cf\u8ff0\u7b26\u81f3\u5173\u91cd\u8981\u3002 \u5982\u679c\u4e0d\u8fd9\u6837\u505a\u5c06\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\uff0c\u6700\u7ec8\u5bfc\u81f4\u5e94\u7528\u7a0b\u5e8f\u5d29\u6e83\u3002","title":"\u6587\u4ef6\u63cf\u8ff0\u7b26#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_4","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6240\u6709\u7684\u6587\u4ef6\u7cfb\u7edf API\uff0c\u9664\u4e86 fs.FSWatcher() \u548c\u90a3\u4e9b\u663e\u5f0f\u540c\u6b65\u7684\u4e4b\u5916\uff0c\u90fd\u4f7f\u7528 libuv \u7684\u7ebf\u7a0b\u6c60\uff0c\u8fd9\u5bf9\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u53ef\u80fd\u4f1a\u4ea7\u751f\u610f\u5916\u548c\u8d1f\u9762\u7684\u6027\u80fd\u5f71\u54cd\u3002 \u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u53c2\u9605 UV_THREADPOOL_SIZE \u6587\u6863\u3002","title":"\u7ebf\u7a0b\u6c60\u7684\u4f7f\u7528#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsdir","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u4ee3\u8868\u76ee\u5f55\u6d41\u7684\u7c7b\u3002 \u7531 fs.opendir() \u3001 fs.opendirSync() \u6216 fsPromises.opendir() \u521b\u5efa\u3002 const fs = require ( 'fs' ); async function print ( path ) { const dir = await fs . promises . opendir ( path ); for await ( const dirent of dir ) { console . log ( dirent . name ); } } print ( './' ). catch ( console . error );","title":"fs.Dir \u7c7b#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#dirclose","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u8fd4\u56de: \u5f02\u6b65\u5730\u5173\u95ed\u76ee\u5f55\u7684\u5e95\u5c42\u8d44\u6e90\u53e5\u67c4\u3002 \u968f\u540e\u7684\u8bfb\u53d6\u5c06\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002 \u8fd4\u56de\u4e00\u4e2a Promise \uff0c\u5c06\u4f1a\u5728\u5173\u95ed\u8d44\u6e90\u4e4b\u540e\u88ab\u89e3\u51b3\u3002","title":"dir.close()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#dirclosecallback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 callback err \u5f02\u6b65\u5730\u5173\u95ed\u76ee\u5f55\u7684\u5e95\u5c42\u8d44\u6e90\u53e5\u67c4\u3002 \u968f\u540e\u7684\u8bfb\u53d6\u5c06\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002 \u5173\u95ed\u8d44\u6e90\u53e5\u67c4\u4e4b\u540e\u5c06\u4f1a\u8c03\u7528 callback \u3002","title":"dir.close(callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#dirclosesync","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u540c\u6b65\u5730\u5173\u95ed\u76ee\u5f55\u7684\u5e95\u5c42\u8d44\u6e90\u53e5\u67c4\u3002 \u968f\u540e\u7684\u8bfb\u53d6\u5c06\u4f1a\u5bfc\u81f4\u9519\u8bef\u3002","title":"dir.closeSync()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#dirpath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u6b64\u76ee\u5f55\u7684\u53ea\u8bfb\u8def\u5f84\uff0c\u4e0e\u63d0\u4f9b\u7ed9 fs.opendir() \u3001 fs.opendirSync() \u6216 fsPromises.opendir() \u7684\u4e00\u6837\u3002","title":"dir.path#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#dirread","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u8fd4\u56de: \u5305\u542b | \u3002 \u901a\u8fc7 readdir(3) \u5f02\u6b65\u5730\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u4f5c\u4e3a fs.Dirent \u3002 \u8bfb\u53d6\u5b8c\u6210\u4e4b\u540e\uff0c\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a Promise \uff0c\u5b83\u88ab\u89e3\u51b3\u65f6\u5c06\u4f1a\u8fd4\u56de fs.Dirent \u6216 null \uff08\u5982\u679c\u6ca1\u6709\u66f4\u591a\u7684\u76ee\u5f55\u9879\u8981\u8bfb\u53d6\uff09\u3002 \u6b64\u51fd\u6570\u8fd4\u56de\u7684\u76ee\u5f55\u9879\u4e0d\u9075\u5faa\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e95\u5c42\u76ee\u5f55\u673a\u5236\u6240\u63d0\u4f9b\u7684\u7279\u5b9a\u987a\u5e8f\u3002 \u904d\u5386\u76ee\u5f55\u65f6\u6dfb\u52a0\u6216\u5220\u9664\u7684\u76ee\u5f55\u9879\u53ef\u80fd\u4f1a\u6216\u53ef\u80fd\u4e0d\u4f1a\u5305\u542b\u5728\u904d\u5386\u7684\u7ed3\u679c\u4e2d\u3002","title":"dir.read()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#dirreadcallback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 callback err dirent | \u901a\u8fc7 readdir(3) \u5f02\u6b65\u5730\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u4f5c\u4e3a fs.Dirent \u3002 \u8bfb\u53d6\u5b8c\u6210\u4e4b\u540e\uff0c\u5c06\u4f1a\u8c03\u7528 callback \u5e76\u4f20\u5165 fs.Dirent \u6216 null \uff08\u5982\u679c\u6ca1\u6709\u66f4\u591a\u7684\u76ee\u5f55\u9879\u8981\u8bfb\u53d6\uff09\u3002 \u6b64\u51fd\u6570\u8fd4\u56de\u7684\u76ee\u5f55\u9879\u4e0d\u9075\u5faa\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e95\u5c42\u76ee\u5f55\u673a\u5236\u6240\u63d0\u4f9b\u7684\u7279\u5b9a\u987a\u5e8f\u3002 \u904d\u5386\u76ee\u5f55\u65f6\u6dfb\u52a0\u6216\u5220\u9664\u7684\u76ee\u5f55\u9879\u53ef\u80fd\u4f1a\u6216\u53ef\u80fd\u4e0d\u4f1a\u5305\u542b\u5728\u904d\u5386\u7684\u7ed3\u679c\u4e2d\u3002","title":"dir.read(callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#dirreadsync","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u8fd4\u56de: | \u901a\u8fc7 readdir(3) \u540c\u6b65\u5730\u8bfb\u53d6\u4e0b\u4e00\u4e2a\u76ee\u5f55\u9879\u4f5c\u4e3a fs.Dirent \u3002 \u5982\u679c\u6ca1\u6709\u66f4\u591a\u7684\u76ee\u5f55\u9879\u8981\u8bfb\u53d6\uff0c\u5219\u5c06\u4f1a\u8fd4\u56de null \u3002 \u6b64\u51fd\u6570\u8fd4\u56de\u7684\u76ee\u5f55\u9879\u4e0d\u9075\u5faa\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e95\u5c42\u76ee\u5f55\u673a\u5236\u6240\u63d0\u4f9b\u7684\u7279\u5b9a\u987a\u5e8f\u3002 \u904d\u5386\u76ee\u5f55\u65f6\u6dfb\u52a0\u6216\u5220\u9664\u7684\u76ee\u5f55\u9879\u53ef\u80fd\u4f1a\u6216\u53ef\u80fd\u4e0d\u4f1a\u5305\u542b\u5728\u904d\u5386\u7684\u7ed3\u679c\u4e2d\u3002","title":"dir.readSync()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#dirsymbolasynciterator","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 \u8fd4\u56de: \u7684 \u901a\u8fc7 readdir(3) \u5f02\u6b65\u5730\u904d\u5386\u76ee\u5f55\uff0c\u76f4\u5230\u8bfb\u53d6\u4e86\u6240\u6709\u7684\u76ee\u5f55\u9879\u3002 \u5f02\u6b65\u8fed\u4ee3\u5668\u8fd4\u56de\u7684\u76ee\u5f55\u9879\u59cb\u7ec8\u4e3a fs.Dirent \u3002 dir.read() \u4e2d\u4e3a null \u7684\u60c5\u51b5\u4f1a\u5728\u5185\u90e8\u5904\u7406\u3002 \u6709\u5173\u793a\u4f8b\uff0c\u8bf7\u53c2\u9605 fs.Dir \u3002 \u8be5\u8fed\u4ee3\u5668\u8fd4\u56de\u7684\u76ee\u5f55\u9879\u4e0d\u9075\u5faa\u64cd\u4f5c\u7cfb\u7edf\u7684\u5e95\u5c42\u76ee\u5f55\u673a\u5236\u6240\u63d0\u4f9b\u7684\u7279\u5b9a\u987a\u5e8f\u3002 \u904d\u5386\u76ee\u5f55\u65f6\u6dfb\u52a0\u6216\u5220\u9664\u7684\u76ee\u5f55\u9879\u53ef\u80fd\u4f1a\u6216\u53ef\u80fd\u4e0d\u4f1a\u5305\u542b\u5728\u904d\u5386\u7684\u7ed3\u679c\u4e2d\u3002","title":"dirSymbol.asyncIterator#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsdirent","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u76ee\u5f55\u9879\u7684\u8868\u793a\u5f62\u5f0f\uff0c\u901a\u8fc7\u4ece fs.Dir \u4e2d\u8bfb\u53d6\u800c\u8fd4\u56de\u3002 \u6b64\u5916\uff0c\u5f53\u4f7f\u7528 withFileTypes \u9009\u9879\u8bbe\u7f6e\u4e3a true \u8c03\u7528 fs.readdir() \u6216 fs.readdirSync() \u65f6\uff0c\u751f\u6210\u7684\u6570\u7ec4\u5c06\u4f1a\u586b\u5145 fs.Dirent \u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u6216 Buffer \u3002","title":"fs.Dirent \u7c7b#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#direntisblockdevice","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u5757\u8bbe\u5907\uff0c\u5219\u8fd4\u56de true \u3002","title":"dirent.isBlockDevice()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#direntischaracterdevice","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u5b57\u7b26\u8bbe\u5907\uff0c\u5219\u8fd4\u56de true \u3002","title":"dirent.isCharacterDevice()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#direntisdirectory","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\uff0c\u5219\u8fd4\u56de true \u3002","title":"dirent.isDirectory()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#direntisfifo","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u7ba1\u9053\uff0c\u5219\u8fd4\u56de true \u3002","title":"dirent.isFIFO()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#direntisfile","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u5e38\u89c4\u6587\u4ef6\uff0c\u5219\u8fd4\u56de true \u3002","title":"dirent.isFile()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#direntissocket","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u5957\u63a5\u5b57\uff0c\u5219\u8fd4\u56de true \u3002","title":"dirent.isSocket()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#direntissymboliclink","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 \u8fd4\u56de: \u5982\u679c fs.Dirent \u5bf9\u8c61\u63cf\u8ff0\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u8fd4\u56de true \u3002","title":"dirent.isSymbolicLink()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#direntname","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.10.0 | fs.Dirent \u5bf9\u8c61\u6307\u5411\u7684\u6587\u4ef6\u540d\u3002 \u6b64\u503c\u7684\u7c7b\u578b\u53d6\u51b3\u4e8e\u4f20\u9012\u7ed9 fs.readdir() \u6216 fs.readdirSync() \u7684 options.encoding \u3002","title":"dirent.name#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfswatcher","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.5.8 \u7ee7\u627f\u81ea \u6210\u529f\u8c03\u7528 fs.watch() \u65b9\u6cd5\u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 fs.FSWatcher \u5bf9\u8c61\u3002 \u6bcf\u5f53\u6307\u5b9a\u76d1\u89c6\u7684\u6587\u4ef6\u88ab\u4fee\u6539\u65f6\uff0c\u6240\u6709\u7684 fs.FSWatcher \u5bf9\u8c61\u90fd\u4f1a\u89e6\u53d1 'change' \u4e8b\u4ef6\u3002","title":"fs.FSWatcher \u7c7b#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#change","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.5.8 eventType \u5df2\u53d1\u751f\u7684\u66f4\u6539\u4e8b\u4ef6\u7684\u7c7b\u578b\u3002 filename | \u66f4\u6539\u7684\u6587\u4ef6\u540d\uff08\u5982\u679c\u76f8\u5173\u6216\u53ef\u7528\uff09\u3002 \u5f53\u76d1\u89c6\u7684\u76ee\u5f55\u6216\u6587\u4ef6\u4e2d\u53d1\u751f\u66f4\u6539\u65f6\u89e6\u53d1\u3002 \u5728 fs.watch() \u4e2d\u67e5\u770b\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002 \u53ef\u80fd\u4e0d\u63d0\u4f9b filename \u53c2\u6570\uff0c\u8fd9\u53d6\u51b3\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u7684\u652f\u6301\u3002 \u5982\u679c\u63d0\u4f9b\u4e86 filename \uff0c\u5219\u5f53\u8c03\u7528 fs.watch() \u5e76\u5c06\u5176 encoding \u9009\u9879\u8bbe\u7f6e\u4e3a 'buffer' \u65f6\uff0c filename \u5c06\u662f\u4e00\u4e2a Buffer \uff0c\u5426\u5219 filename \u5c06\u662f UTF-8 \u5b57\u7b26\u4e32\u3002 // \u4f7f\u7528 fs.watch\uff08\uff09\u76d1\u542c\u5668\u7684\u793a\u4f8b\u3002 fs . watch ( './tmp' , { encoding : 'buffer' }, ( eventType , filename ) => { if ( filename ) { console . log ( filename ); // \u6253\u5370: <Buffer ...> } });","title":"'change' \u4e8b\u4ef6#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#close","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 \u5f53\u76d1\u89c6\u5668\u505c\u6b62\u76d1\u89c6\u66f4\u6539\u65f6\u89e6\u53d1\u3002 \u5173\u95ed\u7684 fs.FSWatcher \u5bf9\u8c61\u5728\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e2d\u4e0d\u518d\u53ef\u7528\u3002","title":"'close' \u4e8b\u4ef6#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#error","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.5.8 error \u5f53\u76d1\u89c6\u6587\u4ef6\u65f6\u53d1\u751f\u9519\u8bef\u65f6\u89e6\u53d1\u3002 \u53d1\u751f\u9519\u8bef\u7684 fs.FSWatcher \u5bf9\u8c61\u5728\u4e8b\u4ef6\u5904\u7406\u51fd\u6570\u4e2d\u4e0d\u518d\u53ef\u7528\u3002","title":"'error' \u4e8b\u4ef6#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#watcherclose","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.5.8 \u7ed9\u5b9a\u7684 fs.FSWatcher \u505c\u6b62\u76d1\u89c6\u66f4\u6539\u3002 \u4e00\u65e6\u505c\u6b62\uff0c\u5219 fs.FSWatcher \u5bf9\u8c61\u5c06\u4e0d\u518d\u53ef\u7528\u3002","title":"watcher.close()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsreadstream","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 \u7ee7\u627f\u81ea: \u6210\u529f\u8c03\u7528 fs.createReadStream() \u5c06\u4f1a\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 fs.ReadStream \u5bf9\u8c61\u3002","title":"fs.ReadStream \u7c7b#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#close_1","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 \u5f53 fs.ReadStream \u7684\u5e95\u5c42\u6587\u4ef6\u63cf\u8ff0\u7b26\u5df2\u5173\u95ed\u65f6\u89e6\u53d1\u3002","title":"'close' \u4e8b\u4ef6#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#open","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 fd ReadStream \u4f7f\u7528\u7684\u6574\u6570\u578b\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u5f53 fs.ReadStream \u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u6253\u5f00\u65f6\u89e6\u53d1\u3002","title":"'open' \u4e8b\u4ef6#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#ready","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v9.11.0 \u5f53 fs.ReadStream \u51c6\u5907\u597d\u4f7f\u7528\u65f6\u89e6\u53d1\u3002 'open' \u4e8b\u4ef6\u4e4b\u540e\u7acb\u5373\u89e6\u53d1\u3002","title":"'ready' \u4e8b\u4ef6#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#readstreambytesread","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v6.4.0 \u5230\u76ee\u524d\u4e3a\u6b62\u5df2\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002","title":"readStream.bytesRead#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#readstreampath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 | \u6d41\u6b63\u5728\u8bfb\u53d6\u7684\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7531 fs.createReadStream() \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u3002 \u5982\u679c path \u4f20\u5165\u5b57\u7b26\u4e32\uff0c\u5219 readStream.path \u5c06\u662f\u5b57\u7b26\u4e32\u3002 \u5982\u679c path \u4f20\u5165 Buffer \uff0c\u5219 readStream.path \u5c06\u662f Buffer \u3002","title":"readStream.path#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#readstreampending","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v11.2.0 \u5982\u679c\u5e95\u5c42\u7684\u6587\u4ef6\u8fd8\u672a\u88ab\u6253\u5f00\uff08\u5373\u5728\u89e6\u53d1 'ready' \u4e8b\u4ef6\u4e4b\u524d\uff09\uff0c\u5219\u6b64\u5c5e\u6027\u4e3a true \u3002","title":"readStream.pending#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsstats","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fs.Stats \u5bf9\u8c61\u63d0\u4f9b\u4e86\u5173\u4e8e\u6587\u4ef6\u7684\u4fe1\u606f\u3002 \u4ece fs.stat() \u3001 fs.lstat() \u548c fs.fstat() \u53ca\u5176\u540c\u6b65\u7684\u65b9\u6cd5\u8fd4\u56de\u7684\u5bf9\u8c61\u90fd\u5c5e\u4e8e\u6b64\u7c7b\u578b\u3002 \u5982\u679c\u4f20\u7ed9\u8fd9\u4e9b\u65b9\u6cd5\u7684 options \u4e2d\u7684 bigint \u4e3a true\uff0c\u5219\u6570\u503c\u5c06\u4f1a\u4e3a bigint \u578b\u800c\u4e0d\u662f number \u578b\uff0c\u5e76\u4e14\u8be5\u5bf9\u8c61\u5c06\u4f1a\u5305\u542b\u989d\u5916\u7684\u4ee5 Ns \u4e3a\u540e\u7f00\u7684\u7eb3\u79d2\u7cbe\u5ea6\u7684\u5c5e\u6027\u3002 Stats { dev: 2114, ino: 48064969, mode: 33188, nlink: 1, uid: 85, gid: 100, rdev: 0, size: 527, blksize: 4096, blocks: 8, atimeMs: 1318289051000.1, mtimeMs: 1318289051000.1, ctimeMs: 1318289051000.1, birthtimeMs: 1318289051000.1, atime: Mon, 10 Oct 2011 23:24:11 GMT, mtime: Mon, 10 Oct 2011 23:24:11 GMT, ctime: Mon, 10 Oct 2011 23:24:11 GMT, birthtime: Mon, 10 Oct 2011 23:24:11 GMT } bigint \u7684\u7248\u672c\uff1a BigIntStats { dev: 2114n, ino: 48064969n, mode: 33188n, nlink: 1n, uid: 85n, gid: 100n, rdev: 0n, size: 527n, blksize: 4096n, blocks: 8n, atimeMs: 1318289051000n, mtimeMs: 1318289051000n, ctimeMs: 1318289051000n, birthtimeMs: 1318289051000n, atimeNs: 1318289051000000000n, mtimeNs: 1318289051000000000n, ctimeNs: 1318289051000000000n, birthtimeNs: 1318289051000000000n, atime: Mon, 10 Oct 2011 23:24:11 GMT, mtime: Mon, 10 Oct 2011 23:24:11 GMT, ctime: Mon, 10 Oct 2011 23:24:11 GMT, birthtime: Mon, 10 Oct 2011 23:24:11 GMT }","title":"fs.Stats \u7c7b#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsisblockdevice","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u5757\u8bbe\u5907\uff0c\u5219\u8fd4\u56de true \u3002","title":"stats.isBlockDevice()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsischaracterdevice","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u5b57\u7b26\u8bbe\u5907\uff0c\u5219\u8fd4\u56de true \u3002","title":"stats.isCharacterDevice()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsisdirectory","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\uff0c\u5219\u8fd4\u56de true \u3002","title":"stats.isDirectory()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsisfifo","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u5148\u8fdb\u5148\u51fa\uff08FIFO\uff09\u7ba1\u9053\uff0c\u5219\u8fd4\u56de true \u3002","title":"stats.isFIFO()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsisfile","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u5e38\u89c4\u6587\u4ef6\uff0c\u5219\u8fd4\u56de true \u3002","title":"stats.isFile()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsissocket","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u5957\u63a5\u5b57\uff0c\u5219\u8fd4\u56de true \u3002","title":"stats.isSocket()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsissymboliclink","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.10 \u8fd4\u56de: \u5982\u679c fs.Stats \u5bf9\u8c61\u63cf\u8ff0\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u8fd4\u56de true \u3002 \u6b64\u65b9\u6cd5\u4ec5\u5728\u4f7f\u7528 fs.lstat() \u65f6\u6709\u6548\u3002","title":"stats.isSymbolicLink()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsdev","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u5305\u542b\u8be5\u6587\u4ef6\u7684\u8bbe\u5907\u7684\u6570\u5b57\u6807\u8bc6\u7b26\u3002","title":"stats.dev#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsino","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u6587\u4ef6\u7cfb\u7edf\u7279\u5b9a\u7684\u6587\u4ef6\u7d22\u5f15\u8282\u70b9\u7f16\u53f7\u3002","title":"stats.ino#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsmode","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u63cf\u8ff0\u6587\u4ef6\u7c7b\u578b\u548c\u6a21\u5f0f\u7684\u4f4d\u5b57\u6bb5\u3002","title":"stats.mode#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsnlink","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u6587\u4ef6\u5b58\u5728\u7684\u786c\u94fe\u63a5\u6570\u3002","title":"stats.nlink#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsuid","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u62e5\u6709\u8be5\u6587\u4ef6\uff08POSIX\uff09\u7684\u7528\u6237\u7684\u6570\u5b57\u578b\u7528\u6237\u6807\u8bc6\u7b26\u3002","title":"stats.uid#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsgid","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u62e5\u6709\u8be5\u6587\u4ef6\uff08POSIX\uff09\u7684\u7fa4\u7ec4\u7684\u6570\u5b57\u578b\u7fa4\u7ec4\u6807\u8bc6\u7b26\u3002","title":"stats.gid#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsrdev","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u5982\u679c\u6587\u4ef6\u88ab\u89c6\u4e3a\u7279\u6b8a\u6587\u4ef6\uff0c\u5219\u6b64\u503c\u4e3a\u6570\u5b57\u578b\u8bbe\u5907\u6807\u8bc6\u7b26\u3002","title":"stats.rdev#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statssize","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u6587\u4ef6\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002","title":"stats.size#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsblksize","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u7528\u4e8e I/O \u64cd\u4f5c\u7684\u6587\u4ef6\u7cfb\u7edf\u5757\u7684\u5927\u5c0f\u3002","title":"stats.blksize#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsblocks","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 | \u4e3a\u6b64\u6587\u4ef6\u5206\u914d\u7684\u5757\u6570\u3002","title":"stats.blocks#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsatimems","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.1.0 | \u8868\u660e\u4e0a\u6b21\u8bbf\u95ee\u6b64\u6587\u4ef6\u7684\u65f6\u95f4\u6233\uff0c\u4ee5 POSIX \u7eaa\u5143\u4ee5\u6765\u7684\u6beb\u79d2\u6570\u8868\u793a\u3002","title":"stats.atimeMs#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsmtimems","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.1.0 | \u8868\u660e\u4e0a\u6b21\u4fee\u6539\u6b64\u6587\u4ef6\u7684\u65f6\u95f4\u6233\uff0c\u4ee5 POSIX \u7eaa\u5143\u4ee5\u6765\u7684\u6beb\u79d2\u6570\u8868\u793a\u3002","title":"stats.mtimeMs#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsctimems","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.1.0 | \u8868\u660e\u4e0a\u6b21\u66f4\u6539\u6587\u4ef6\u72b6\u6001\u7684\u65f6\u95f4\u6233\uff0c\u4ee5 POSIX \u7eaa\u5143\u4ee5\u6765\u7684\u6beb\u79d2\u6570\u8868\u793a\u3002","title":"stats.ctimeMs#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsbirthtimems","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.1.0 | \u8868\u660e\u6b64\u6587\u4ef6\u7684\u521b\u5efa\u65f6\u95f4\u7684\u65f6\u95f4\u6233\uff0c\u4ee5 POSIX \u7eaa\u5143\u4ee5\u6765\u7684\u6beb\u79d2\u6570\u8868\u793a\u3002","title":"stats.birthtimeMs#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsatimens","text":"\u6682\u65e0\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.10.0 Only present when bigint: true is passed into the method that generates the object. The timestamp indicating the last time this file was accessed expressed in nanoseconds since the POSIX Epoch.","title":"stats.atimeNs#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsmtimens","text":"\u6682\u65e0\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.10.0 Only present when bigint: true is passed into the method that generates the object. The timestamp indicating the last time this file was modified expressed in nanoseconds since the POSIX Epoch.","title":"stats.mtimeNs#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsctimens","text":"\u6682\u65e0\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.10.0 Only present when bigint: true is passed into the method that generates the object. The timestamp indicating the last time the file status was changed expressed in nanoseconds since the POSIX Epoch.","title":"stats.ctimeNs#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsbirthtimens","text":"\u6682\u65e0\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.10.0 Only present when bigint: true is passed into the method that generates the object. The timestamp indicating the creation time of this file expressed in nanoseconds since the POSIX Epoch.","title":"stats.birthtimeNs#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsatime","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.13 \u8868\u660e\u4e0a\u6b21\u8bbf\u95ee\u6b64\u6587\u4ef6\u7684\u65f6\u95f4\u6233\u3002","title":"stats.atime#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsmtime","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.13 \u8868\u660e\u4e0a\u6b21\u4fee\u6539\u6b64\u6587\u4ef6\u7684\u65f6\u95f4\u6233\u3002","title":"stats.mtime#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsctime","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.13 \u8868\u660e\u4e0a\u6b21\u66f4\u6539\u6587\u4ef6\u72b6\u6001\u7684\u65f6\u95f4\u6233\u3002","title":"stats.ctime#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#statsbirthtime","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.13 \u8868\u793a\u6b64\u6587\u4ef6\u7684\u521b\u5efa\u65f6\u95f4\u7684\u65f6\u95f4\u6233\u3002","title":"stats.birthtime#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_5","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 atimeMs \u3001 mtimeMs \u3001 ctimeMs \u548c birthtimeMs \u5c5e\u6027\u662f\u4fdd\u5b58\u76f8\u5e94\u65f6\u95f4\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u7684 \u6570\u503c \u3002 \u5b83\u4eec\u7684\u7cbe\u5ea6\u53d6\u51b3\u4e8e\u5e73\u53f0\u3002 \u5f53\u5c06 bigint: true \u4f20\u7ed9\u751f\u6210\u8be5\u5bf9\u8c61\u7684\u65b9\u6cd5\u65f6\uff0c\u5c5e\u6027\u5c06\u4f1a\u662f bigint \u578b\uff0c\u5426\u5219\u5b83\u4eec\u5c06\u4f1a\u662f \u6570\u5b57\u578b \u3002 atimeNs \u3001 mtimeNs \u3001 ctimeNs \u548c birthtimeNs \u5c5e\u6027\u662f\u4fdd\u5b58\u76f8\u5e94\u65f6\u95f4\uff08\u4ee5\u7eb3\u79d2\u4e3a\u5355\u4f4d\uff09\u7684 bigint \u3002 \u4ec5\u5f53\u5c06 bigint: true \u4f20\u7ed9\u751f\u6210\u8be5\u5bf9\u8c61\u7684\u65b9\u6cd5\u65f6\uff0c\u5b83\u4eec\u624d\u4f1a\u51fa\u73b0\u3002 \u5b83\u4eec\u7684\u7cbe\u5ea6\u53d6\u51b3\u4e8e\u5e73\u53f0\u3002 atime \u3001 mtime \u3001 ctime \u548c birthtime \u662f\u5bf9\u5e94\u65f6\u95f4\u7684 Date \u5bf9\u8c61\u3002 Date \u503c\u548c\u6570\u503c\u6ca1\u6709\u5173\u8054\u6027\u3002 \u8d4b\u503c\u65b0\u7684\u6570\u503c\u3001\u6216\u8005\u6539\u53d8 Date \u7684\u503c\uff0c\u90fd\u5c06\u4e0d\u4f1a\u5f71\u54cd\u5230\u5bf9\u5e94\u7684\u5c5e\u6027\u3002 stat \u5bf9\u8c61\u4e2d\u7684\u65f6\u95f4\u5177\u6709\u4ee5\u4e0b\u8bed\u4e49\uff1a atime \"\u8bbf\u95ee\u65f6\u95f4\" - \u4e0a\u6b21\u8bbf\u95ee\u6587\u4ef6\u6570\u636e\u7684\u65f6\u95f4\u3002\u7531 mknod(2) \u3001 utimes(2) \u548c read(2) \u7cfb\u7edf\u8c03\u7528\u66f4\u6539\u3002 mtime \"\u4fee\u6539\u65f6\u95f4\" - \u4e0a\u6b21\u4fee\u6539\u6587\u4ef6\u6570\u636e\u7684\u65f6\u95f4\u3002\u7531 mknod(2) \u3001 utimes(2) \u548c write(2) \u7cfb\u7edf\u8c03\u7528\u66f4\u6539\u3002 ctime \"\u66f4\u6539\u65f6\u95f4\" - \u4e0a\u6b21\u66f4\u6539\u6587\u4ef6\u72b6\u6001\uff08\u4fee\u6539\u7d22\u5f15\u8282\u70b9\u6570\u636e\uff09\u7684\u65f6\u95f4\u3002\u7531 chmod(2) \u3001 chown(2) \u3001 link(2) \u3001 mknod(2) \u3001 rename(2) \u3001 unlink(2) \u3001 utimes(2) \u3001 read(2) \u548c write(2) \u7cfb\u7edf\u8c03\u7528\u66f4\u6539\u3002 birthtime \"\u521b\u5efa\u65f6\u95f4\" - \u521b\u5efa\u6587\u4ef6\u7684\u65f6\u95f4\u3002\u5f53\u521b\u5efa\u6587\u4ef6\u65f6\u8bbe\u7f6e\u4e00\u6b21\u3002 \u5728\u4e0d\u652f\u6301\u521b\u5efa\u65f6\u95f4\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\uff0c\u8be5\u5b57\u6bb5\u53ef\u80fd\u6539\u4e3a\u4fdd\u5b58 ctime \u6216 1970-01-01T00:00Z \uff08\u5373 Unix \u7eaa\u5143\u65f6\u95f4\u6233 0 \uff09\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8be5\u503c\u53ef\u80fd\u5927\u4e8e atime \u6216 mtime \u3002 \u5728 Darwin \u548c\u5176\u4ed6\u7684 FreeBSD \u884d\u751f\u7cfb\u7edf\u4e0a\uff0c\u4e5f\u53ef\u80fd\u4f7f\u7528 utimes(2) \u7cfb\u7edf\u8c03\u7528\u5c06 atime \u663e\u5f0f\u5730\u8bbe\u7f6e\u4e3a\u6bd4 birthtime \u66f4\u65e9\u7684\u503c\u3002 \u5728 Node.js 0.12 \u4e4b\u524d\uff0c\u5728 Windows \u7cfb\u7edf\u4e0a ctime \u4fdd\u5b58 birthtime \u3002 \u4ece 0.12 \u5f00\u59cb\uff0c ctime \u4e0d\u518d\u662f\u201c\u521b\u5efa\u65f6\u95f4\u201d\uff0c\u800c\u5728 Unix \u7cfb\u7edf\u4e0a\u5219\u4ece\u6765\u90fd\u4e0d\u662f\u3002","title":"\u6587\u4ef6\u5c5e\u6027\u7684\u65f6\u95f4\u503c#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswritestream","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 \u7ee7\u627f\u81ea","title":"fs.WriteStream \u7c7b#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#close_2","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 \u5f53 WriteStream \u7684\u5e95\u5c42\u6587\u4ef6\u63cf\u8ff0\u7b26\u5df2\u5173\u95ed\u65f6\u89e6\u53d1\u3002","title":"'close' \u4e8b\u4ef6#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#open_1","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 fd WriteStream \u4f7f\u7528\u7684\u6574\u6570\u578b\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u5f53 WriteStream \u7684\u6587\u4ef6\u6253\u5f00\u65f6\u89e6\u53d1\u3002","title":"'open' \u4e8b\u4ef6#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#ready_1","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v9.11.0 \u5f53 fs.WriteStream \u51c6\u5907\u597d\u4f7f\u7528\u65f6\u89e6\u53d1\u3002 'open' \u4e8b\u4ef6\u4e4b\u540e\u7acb\u5373\u89e6\u53d1\u3002","title":"'ready' \u4e8b\u4ef6#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#writestreambyteswritten","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.4.7 \u5230\u76ee\u524d\u4e3a\u6b62\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u4e0d\u5305\u62ec\u4ecd\u5728\u6392\u961f\u7b49\u5f85\u5199\u5165\u7684\u6570\u636e\u3002","title":"writeStream.bytesWritten#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#writestreampath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.93 \u6d41\u6b63\u5728\u5199\u5165\u7684\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u7531 fs.createWriteStream() \u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u3002 \u5982\u679c path \u4f20\u5165\u5b57\u7b26\u4e32\uff0c\u5219 writeStream.path \u5c06\u662f\u5b57\u7b26\u4e32\u3002 \u5982\u679c path \u4f20\u5165 Buffer \uff0c\u5219 writeStream.path \u5c06\u662f Buffer \u3002","title":"writeStream.path#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#writestreampending","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v11.2.0 \u5982\u679c\u5e95\u5c42\u7684\u6587\u4ef6\u8fd8\u672a\u88ab\u6253\u5f00\uff08\u5373\u5728\u89e6\u53d1 'ready' \u4e8b\u4ef6\u4e4b\u524d\uff09\uff0c\u5219\u6b64\u5c5e\u6027\u4e3a true \u3002","title":"writeStream.pending#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsaccesspath-mode-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | mode \u9ed8\u8ba4\u503c: fs.constants.F_OK \u3002 callback err \u6d4b\u8bd5\u7528\u6237\u5bf9 path \u6307\u5b9a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6743\u9650\u3002 mode \u53c2\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u8981\u6267\u884c\u7684\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u3002 mode \u53ef\u9009\u7684\u503c\u53c2\u9605 \u6587\u4ef6\u53ef\u8bbf\u95ee\u6027\u7684\u5e38\u91cf \u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u4f8b\u5982 fs.constants.W_OK | fs.constants.R_OK \uff09\u3002 \u6700\u540e\u4e00\u4e2a\u53c2\u6570 callback \u662f\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u8c03\u7528\u65f6\u5c06\u4f20\u5165\u53ef\u80fd\u7684\u9519\u8bef\u53c2\u6570\u3002 \u5982\u679c\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u5931\u8d25\uff0c\u5219\u9519\u8bef\u53c2\u6570\u5c06\u662f Error \u5bf9\u8c61\u3002 \u4ee5\u4e0b\u793a\u4f8b\u68c0\u67e5 package.json \u662f\u5426\u5b58\u5728\uff0c\u4ee5\u53ca\u5b83\u662f\u5426\u53ef\u8bfb\u6216\u53ef\u5199\u3002 const file = 'package.json' ; // \u68c0\u67e5\u5f53\u524d\u76ee\u5f55\u4e2d\u662f\u5426\u5b58\u5728\u8be5\u6587\u4ef6\u3002 fs . access ( file , fs . constants . F_OK , ( err ) => { console . log ( ` ${ file } ${ err ? '\u4e0d\u5b58\u5728' : '\u5b58\u5728' } ` ); }); // \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u53ef\u8bfb\u3002 fs . access ( file , fs . constants . R_OK , ( err ) => { console . log ( ` ${ file } ${ err ? '\u4e0d\u53ef\u8bfb' : '\u53ef\u8bfb' } ` ); }); // \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u53ef\u5199\u3002 fs . access ( file , fs . constants . W_OK , ( err ) => { console . log ( ` ${ file } ${ err ? '\u4e0d\u53ef\u5199' : '\u53ef\u5199' } ` ); }); // \u68c0\u67e5\u5f53\u524d\u76ee\u5f55\u4e2d\u662f\u5426\u5b58\u5728\u8be5\u6587\u4ef6\uff0c\u4ee5\u53ca\u8be5\u6587\u4ef6\u662f\u5426\u53ef\u5199\u3002 fs . access ( file , fs . constants . F_OK | fs . constants . W_OK , ( err ) => { if ( err ) { console . error ( ` ${ file } ${ err . code === 'ENOENT' ? '\u4e0d\u5b58\u5728' : '\u53ea\u53ef\u8bfb' } ` ); } else { console . log ( ` ${ file } \u5b58\u5728\uff0c\u4e14\u5b83\u662f\u53ef\u5199\u7684` ); } }); \u4e0d\u5efa\u8bae\u5728\u8c03\u7528 fs.open() \u3001 fs.readFile() \u6216 fs.writeFile() \u4e4b\u524d\u4f7f\u7528 fs.access() \u68c0\u67e5\u6587\u4ef6\u7684\u53ef\u8bbf\u95ee\u6027\u3002 \u8fd9\u6837\u505a\u4f1a\u5f15\u5165\u7ade\u6001\u6761\u4ef6\uff0c\u56e0\u4e3a\u5176\u4ed6\u8fdb\u7a0b\u53ef\u80fd\u4f1a\u5728\u4e24\u4e2a\u8c03\u7528\u4e4b\u95f4\u66f4\u6539\u6587\u4ef6\u7684\u72b6\u6001\u3002 \u76f8\u53cd\uff0c\u5e94\u8be5\u76f4\u63a5\u6253\u5f00\u3001\u8bfb\u53d6\u6216\u5199\u5165\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u65e0\u6cd5\u8bbf\u95ee\u5219\u5904\u7406\u5f15\u53d1\u7684\u9519\u8bef\u3002 \u5199\u5165\uff08\u4e0d\u63a8\u8350\uff09 fs . access ( 'myfile' , ( err ) => { if ( ! err ) { console . error ( 'myfile \u5df2\u5b58\u5728' ); return ; } fs . open ( 'myfile' , 'wx' , ( err , fd ) => { if ( err ) throw err ; writeMyData ( fd ); }); }); \u5199\u5165\uff08\u63a8\u8350\uff09 fs . open ( 'myfile' , 'wx' , ( err , fd ) => { if ( err ) { if ( err . code === 'EEXIST' ) { console . error ( 'myfile \u5df2\u5b58\u5728' ); return ; } throw err ; } writeMyData ( fd ); }); \u8bfb\u53d6\uff08\u4e0d\u63a8\u8350\uff09 fs . access ( 'myfile' , ( err ) => { if ( err ) { if ( err . code === 'ENOENT' ) { console . error ( 'myfile \u4e0d\u5b58\u5728' ); return ; } throw err ; } fs . open ( 'myfile' , 'r' , ( err , fd ) => { if ( err ) throw err ; readMyData ( fd ); }); }); \u8bfb\u53d6\uff08\u63a8\u8350\uff09 fs . open ( 'myfile' , 'r' , ( err , fd ) => { if ( err ) { if ( err . code === 'ENOENT' ) { console . error ( 'myfile \u4e0d\u5b58\u5728' ); return ; } throw err ; } readMyData ( fd ); }); \u4e0a\u9762\u7684\u201c\u4e0d\u63a8\u8350\u201d\u793a\u4f8b\u4f1a\u5148\u68c0\u67e5\u53ef\u8bbf\u95ee\u6027\uff0c\u7136\u540e\u518d\u4f7f\u7528\u6587\u4ef6\u3002 \u201c\u63a8\u8350\u201d\u793a\u4f8b\u5219\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u76f4\u63a5\u4f7f\u7528\u6587\u4ef6\u5e76\u5904\u7406\u9519\u8bef\uff08\u5982\u679c\u6709\u9519\u8bef\u7684\u8bdd\uff09\u3002 \u901a\u5e38\uff0c\u4ec5\u5728\u4e0d\u76f4\u63a5\u4f7f\u7528\u6587\u4ef6\u65f6\u624d\u68c0\u67e5\u6587\u4ef6\u7684\u53ef\u8bbf\u95ee\u6027\uff0c\u4f8b\u5982\u5f53\u5176\u53ef\u8bbf\u95ee\u6027\u662f\u6765\u81ea\u5176\u4ed6\u8fdb\u7a0b\u7684\u4fe1\u53f7\u65f6\u3002 \u5728 Windows \u4e0a\uff0c\u76ee\u5f55\u4e0a\u7684\u8bbf\u95ee\u63a7\u5236\u7b56\u7565\uff08ACL\uff09\u53ef\u80fd\u4f1a\u9650\u5236\u5bf9\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u8bbf\u95ee\u3002 \u4f46\u662f\uff0c fs.access() \u51fd\u6570\u4e0d\u68c0\u67e5 ACL\uff0c\u56e0\u6b64\u5373\u4f7f ACL \u9650\u5236\u7528\u6237\u8bfb\u53d6\u6216\u5199\u5165\u8def\u5f84\uff0c\u4e5f\u53ef\u80fd\u62a5\u544a\u8def\u5f84\u662f\u53ef\u8bbf\u95ee\u7684\u3002","title":"fs.access(path[, mode], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsaccesssyncpath-mode","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | mode \u9ed8\u8ba4\u503c: fs.constants.F_OK \u3002 \u540c\u6b65\u5730\u6d4b\u8bd5\u7528\u6237\u5bf9 path \u6307\u5b9a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6743\u9650\u3002 mode \u53c2\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u8981\u6267\u884c\u7684\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u3002 mode \u53ef\u9009\u7684\u503c\u53c2\u9605 \u6587\u4ef6\u53ef\u8bbf\u95ee\u6027\u7684\u5e38\u91cf \u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u4f8b\u5982 fs.constants.W_OK | fs.constants.R_OK \uff09\u3002 \u5982\u679c\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u5931\u8d25\uff0c\u5219\u629b\u51fa Error \u3002 \u5426\u5219\uff0c\u8be5\u65b9\u6cd5\u5c06\u8fd4\u56de undefined \u3002 try { fs . accessSync ( 'etc/passwd' , fs . constants . R_OK | fs . constants . W_OK ); console . log ( '\u53ef\u4ee5\u8bfb\u5199' ); } catch ( err ) { console . error ( '\u65e0\u6743\u8bbf\u95ee' ); }","title":"fs.accessSync(path[, mode])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsappendfilepath-data-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 data | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'a' \u3002 callback err \u5f02\u6b65\u5730\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5c1a\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 Buffer \u3002 fs . appendFile ( 'message.txt' , '\u8ffd\u52a0\u7684\u6570\u636e' , ( err ) => { if ( err ) throw err ; console . log ( '\u6570\u636e\u5df2\u8ffd\u52a0\u5230\u6587\u4ef6' ); }); \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff1a fs . appendFile ( 'message.txt' , '\u8ffd\u52a0\u7684\u6570\u636e' , 'utf8' , callback ); path \u53ef\u4ee5\u6307\u5b9a\u4e3a\u5df2\u6253\u5f00\u7528\u4e8e\u8ffd\u52a0\uff08\u4f7f\u7528 fs.open() \u6216 fs.openSync() \uff09\u7684\u6570\u5b57\u578b\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0d\u4f1a\u81ea\u52a8\u5173\u95ed\u3002 fs . open ( 'message.txt' , 'a' , ( err , fd ) => { if ( err ) throw err ; fs . appendFile ( fd , '\u8ffd\u52a0\u7684\u6570\u636e' , 'utf8' , ( err ) => { fs . close ( fd , ( err ) => { if ( err ) throw err ; }); if ( err ) throw err ; }); });","title":"fs.appendFile(path, data[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsappendfilesyncpath-data-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 data | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'a' \u3002 \u540c\u6b65\u5730\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5c1a\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 Buffer \u3002 try { fs . appendFileSync ( 'message.txt' , '\u8ffd\u52a0\u7684\u6570\u636e' ); console . log ( '\u6570\u636e\u5df2\u8ffd\u52a0\u5230\u6587\u4ef6' ); } catch ( err ) { /* \u5904\u7406\u9519\u8bef */ } \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff1a fs . appendFileSync ( 'message.txt' , '\u8ffd\u52a0\u7684\u6570\u636e' , 'utf8' ); path \u53ef\u4ee5\u6307\u5b9a\u4e3a\u5df2\u6253\u5f00\u7528\u4e8e\u8ffd\u52a0\uff08\u4f7f\u7528 fs.open() \u6216 fs.openSync() \uff09\u7684\u6570\u5b57\u578b\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0d\u4f1a\u81ea\u52a8\u5173\u95ed\u3002 let fd ; try { fd = fs . openSync ( 'message.txt' , 'a' ); fs . appendFileSync ( fd , '\u8ffd\u52a0\u7684\u6570\u636e' , 'utf8' ); } catch ( err ) { /* \u5904\u7406\u9519\u8bef */ } finally { if ( fd !== undefined ) fs . closeSync ( fd ); }","title":"fs.appendFileSync(path, data[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fschmodpath-mode-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | mode callback err \u5f02\u6b65\u5730\u66f4\u6539\u6587\u4ef6\u7684\u6743\u9650\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u4e5f\u53ef\u53c2\u9605 chmod(2) \u3002 fs . chmod ( 'my_file.txt' , 0o775 , ( err ) => { if ( err ) throw err ; console . log ( '\u6587\u4ef6 \u201cmy_file.txt\u201d \u7684\u6743\u9650\u5df2\u88ab\u66f4\u6539' ); });","title":"fs.chmod(path, mode, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_6","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 fs.chmod() \u548c fs.chmodSync() \u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684 mode \u53c2\u6570\u662f\u4f7f\u7528\u4ee5\u4e0b\u5e38\u91cf\u7684\u903b\u8f91\u6216\u8fd0\u7b97\u521b\u5efa\u7684\u6570\u5b57\u578b\u4f4d\u63a9\u7801\uff1a \u5e38\u91cf \u516b\u8fdb\u5236\u503c \u8bf4\u660e fs.constants.S_IRUSR 0o400 \u6240\u6709\u8005\u53ef\u8bfb fs.constants.S_IWUSR 0o200 \u6240\u6709\u8005\u53ef\u5199 fs.constants.S_IXUSR 0o100 \u6240\u6709\u8005\u53ef\u6267\u884c\u6216\u641c\u7d22 fs.constants.S_IRGRP 0o40 \u7fa4\u7ec4\u53ef\u8bfb fs.constants.S_IWGRP 0o20 \u7fa4\u7ec4\u53ef\u5199 fs.constants.S_IXGRP 0o10 \u7fa4\u7ec4\u53ef\u6267\u884c\u6216\u641c\u7d22 fs.constants.S_IROTH 0o4 \u5176\u4ed6\u4eba\u53ef\u8bfb fs.constants.S_IWOTH 0o2 \u5176\u4ed6\u4eba\u53ef\u5199 fs.constants.S_IXOTH 0o1 \u5176\u4ed6\u4eba\u53ef\u6267\u884c\u6216\u641c\u7d22 \u6784\u9020 mode \u66f4\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u4e09\u4e2a\u516b\u8fdb\u5236\u6570\u5b57\u7684\u5e8f\u5217\uff08 \u4f8b\u5982 765 \uff09\u3002 \u6700\u5de6\u8fb9\u7684\u6570\u5b57\uff08\u793a\u4f8b\u4e2d\u7684 7 \uff09\u6307\u5b9a\u6587\u4ef6\u6240\u6709\u8005\u7684\u6743\u9650\u3002 \u4e2d\u95f4\u7684\u6570\u5b57\uff08\u793a\u4f8b\u4e2d\u7684 6 \uff09\u6307\u5b9a\u7fa4\u7ec4\u7684\u6743\u9650\u3002 \u6700\u53f3\u8fb9\u7684\u6570\u5b57\uff08\u793a\u4f8b\u4e2d\u7684 5 \uff09\u6307\u5b9a\u5176\u4ed6\u4eba\u7684\u6743\u9650\u3002 \u6570\u5b57 \u8bf4\u660e 7 \u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c 6 \u53ef\u8bfb\u3001\u53ef\u5199 5 \u53ef\u8bfb\u3001\u53ef\u6267\u884c 4 \u53ea\u8bfb 3 \u53ef\u5199\u3001\u53ef\u6267\u884c 2 \u53ea\u5199 1 \u53ea\u53ef\u6267\u884c 0 \u6ca1\u6709\u6743\u9650 \u4f8b\u5982\uff0c\u516b\u8fdb\u5236\u503c 0o765 \u8868\u793a\uff1a \u6240\u6709\u8005\u53ef\u4ee5\u8bfb\u53d6\u3001\u5199\u5165\u548c\u6267\u884c\u8be5\u6587\u4ef6\u3002 \u7fa4\u7ec4\u53ef\u4ee5\u8bfb\u548c\u5199\u5165\u8be5\u6587\u4ef6\u3002 \u5176\u4ed6\u4eba\u53ef\u4ee5\u8bfb\u53d6\u548c\u6267\u884c\u8be5\u6587\u4ef6\u3002 \u5f53\u4f7f\u7528\u671f\u671b\u7684\u6587\u4ef6\u6a21\u5f0f\u7684\u539f\u59cb\u6570\u5b57\u65f6\uff0c\u4efb\u4f55\u5927\u4e8e 0o777 \u7684\u503c\u90fd\u53ef\u80fd\u5bfc\u81f4\u4e0d\u652f\u6301\u4e00\u81f4\u7684\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u884c\u4e3a\u3002 \u56e0\u6b64\uff0c\u8bf8\u5982 S_ISVTX \u3001 S_ISGID \u6216 S_ISUID \u4e4b\u7c7b\u7684\u5e38\u91cf\u4e0d\u4f1a\u5728 fs.constants \u4e2d\u516c\u5f00\u3002 \u6ce8\u610f\u4e8b\u9879\uff1a\u5728 Windows \u4e0a\uff0c\u53ea\u80fd\u66f4\u6539\u5199\u5165\u6743\u9650\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5b9e\u73b0\u7fa4\u7ec4\u3001\u6240\u6709\u8005\u6216\u5176\u4ed6\u4eba\u7684\u6743\u9650\u4e4b\u95f4\u7684\u533a\u522b\u3002","title":"\u6587\u4ef6\u7684\u6a21\u5f0f#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fschmodsyncpath-mode","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | mode \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.chmod() \u3002 \u4e5f\u53ef\u53c2\u9605 chmod(2) \u3002","title":"fs.chmodSync(path, mode)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fschownpath-uid-gid-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | uid gid callback err \u5f02\u6b65\u5730\u66f4\u6539\u6587\u4ef6\u7684\u6240\u6709\u8005\u548c\u7fa4\u7ec4\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u4e5f\u53ef\u53c2\u9605 chown(2) \u3002","title":"fs.chown(path, uid, gid, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fschownsyncpath-uid-gid","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | uid gid \u540c\u6b65\u5730\u66f4\u6539\u6587\u4ef6\u7684\u6240\u6709\u8005\u548c\u7fa4\u7ec4\u3002 \u8fd4\u56de undefined \u3002 \u8fd9\u662f fs.chown() \u7684\u540c\u6b65\u7248\u672c\u3002 \u4e5f\u53ef\u53c2\u9605 chown(2) \u3002","title":"fs.chownSync(path, uid, gid)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsclosefd-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd callback err \u5f02\u6b65\u7684 close(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002","title":"fs.close(fd, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsclosesyncfd","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.21 fd \u540c\u6b65\u7684 close(2) \u3002\u8fd4\u56de undefined \u3002","title":"fs.closeSync(fd)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsconstants","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u8fd4\u56de\u5305\u542b\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u5e38\u7528\u5e38\u91cf\u7684\u5bf9\u8c61\u3002 \u5f53\u524d\u5b9a\u4e49\u7684\u7279\u5b9a\u5e38\u91cf\u5728 FS \u5e38\u91cf \u4e2d\u63cf\u8ff0\u3002","title":"fs.constants#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fscopyfilesrc-dest-flags-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.5.0 src | | \u8981\u62f7\u8d1d\u7684\u6e90\u6587\u4ef6\u540d\u3002 dest | | \u62f7\u8d1d\u64cd\u4f5c\u7684\u76ee\u6807\u6587\u4ef6\u540d\u3002 flags \u7528\u4e8e\u62f7\u8d1d\u64cd\u4f5c\u7684\u4fee\u9970\u7b26\u3002 \u9ed8\u8ba4\u503c: 0 \u3002 callback \u5f02\u6b65\u5730\u5c06 src \u62f7\u8d1d\u5230 dest \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c dest \u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u8986\u76d6\u5b83\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u56de\u8c03\u51fd\u6570\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 Node.js \u4e0d\u4fdd\u8bc1\u62f7\u8d1d\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u3002 \u5982\u679c\u5728\u6253\u5f00\u76ee\u6807\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u540e\u53d1\u751f\u9519\u8bef\uff0c\u5219 Node.js \u5c06\u5c1d\u8bd5\u5220\u9664\u76ee\u6807\u6587\u4ef6\u3002 flags \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u62f7\u8d1d\u64cd\u4f5c\u7684\u884c\u4e3a\u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u6bd4\u5982 fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE \uff09\u3002 fs.constants.COPYFILE_EXCL - \u5982\u679c dest \u5df2\u5b58\u5728\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fs.constants.COPYFILE_FICLONE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\uff08copy-on-write\uff09\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u4f7f\u7528\u540e\u5907\u7684\u62f7\u8d1d\u673a\u5236\u3002 fs.constants.COPYFILE_FICLONE_FORCE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 const fs = require ( 'fs' ); // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u521b\u5efa\u6216\u8986\u76d6\u76ee\u6807\u6587\u4ef6\u3002 fs . copyFile ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' , ( err ) => { if ( err ) throw err ; console . log ( '\u6e90\u6587\u4ef6\u5df2\u62f7\u8d1d\u5230\u76ee\u6807\u6587\u4ef6' ); }); \u5982\u679c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6570\u5b57\uff0c\u5219\u5b83\u6307\u5b9a flags : const fs = require ( 'fs' ); const { COPYFILE_EXCL } = fs . constants ; // \u901a\u8fc7\u4f7f\u7528 COPYFILE_EXCL\uff0c\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fs . copyFile ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' , COPYFILE_EXCL , callback );","title":"fs.copyFile(src, dest[, flags], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fscopyfilesyncsrc-dest-flags","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.5.0 src | | \u8981\u62f7\u8d1d\u7684\u6e90\u6587\u4ef6\u540d\u3002 dest | | \u62f7\u8d1d\u64cd\u4f5c\u7684\u76ee\u6807\u6587\u4ef6\u540d\u3002 flags \u7528\u4e8e\u62f7\u8d1d\u64cd\u4f5c\u7684\u4fee\u9970\u7b26\u3002 \u9ed8\u8ba4\u503c: 0 \u3002 \u540c\u6b65\u5730\u5c06 src \u62f7\u8d1d\u5230 dest \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c dest \u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u8986\u76d6\u5b83\u3002 \u8fd4\u56de undefined \u3002 Node.js \u4e0d\u4fdd\u8bc1\u62f7\u8d1d\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u3002 \u5982\u679c\u5728\u6253\u5f00\u76ee\u6807\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u540e\u53d1\u751f\u9519\u8bef\uff0c\u5219 Node.js \u5c06\u5c1d\u8bd5\u5220\u9664\u76ee\u6807\u6587\u4ef6\u3002 flags \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u62f7\u8d1d\u64cd\u4f5c\u7684\u884c\u4e3a\u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u6bd4\u5982 fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE \uff09\u3002 fs.constants.COPYFILE_EXCL - \u5982\u679c dest \u5df2\u5b58\u5728\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fs.constants.COPYFILE_FICLONE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\uff08copy-on-write\uff09\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u4f7f\u7528\u540e\u5907\u7684\u62f7\u8d1d\u673a\u5236\u3002 fs.constants.COPYFILE_FICLONE_FORCE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 const fs = require ( 'fs' ); // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u521b\u5efa\u6216\u8986\u76d6\u76ee\u6807\u6587\u4ef6\u3002 fs . copyFileSync ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' ); console . log ( '\u6e90\u6587\u4ef6\u5df2\u62f7\u8d1d\u5230\u76ee\u6807\u6587\u4ef6' ); \u5982\u679c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6570\u5b57\uff0c\u5219\u5b83\u6307\u5b9a flags : const fs = require ( 'fs' ); const { COPYFILE_EXCL } = fs . constants ; // \u901a\u8fc7\u4f7f\u7528 COPYFILE_EXCL\uff0c\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fs . copyFileSync ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' , COPYFILE_EXCL );","title":"fs.copyFileSync(src, dest[, flags])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fscreatereadstreampath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | flags \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 encoding \u9ed8\u8ba4\u503c: null \u3002 fd \u9ed8\u8ba4\u503c: null \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 autoClose \u9ed8\u8ba4\u503c: true \u3002 emitClose \u9ed8\u8ba4\u503c: false \u3002 start end \u9ed8\u8ba4\u503c: Infinity \u3002 highWaterMark \u9ed8\u8ba4\u503c: 64 * 1024 \u3002 \u8fd4\u56de: \u4e0e\u7528\u4e8e\u53ef\u8bfb\u6d41\u7684 16 kb \u7684\u9ed8\u8ba4\u7684 highWaterMark \u4e0d\u540c\uff0c\u6b64\u65b9\u6cd5\u8fd4\u56de\u7684\u6d41\u5177\u6709 64 kb \u7684\u9ed8\u8ba4\u7684 highWaterMark \u3002 options \u53ef\u4ee5\u5305\u62ec start \u548c end \u503c\uff0c\u4ee5\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u4e00\u5b9a\u8303\u56f4\u7684\u5b57\u8282\u800c\u4e0d\u662f\u6574\u4e2a\u6587\u4ef6\u3002 start \u548c end \u90fd\u5305\u542b\u5728\u5185\u5e76\u4ece 0 \u5f00\u59cb\u8ba1\u6570\uff0c\u5141\u8bb8\u7684\u503c\u5728 [0, Number.MAX_SAFE_INTEGER ] \u7684\u8303\u56f4\u5185\u3002 \u5982\u679c\u6307\u5b9a\u4e86 fd \u5e76\u4e14\u7701\u7565 start \u6216\u4e3a undefined \uff0c\u5219 fs.createReadStream() \u4ece\u5f53\u524d\u7684\u6587\u4ef6\u4f4d\u7f6e\u5f00\u59cb\u987a\u5e8f\u5730\u8bfb\u53d6\u3002 encoding \u53ef\u4ee5\u662f Buffer \u63a5\u53d7\u7684\u4efb\u4f55\u4e00\u79cd\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c\u6307\u5b9a\u4e86 fd \uff0c\u5219 ReadStream \u5c06\u4f1a\u5ffd\u7565 path \u53c2\u6570\u5e76\u5c06\u4f1a\u4f7f\u7528\u6307\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u8fd9\u610f\u5473\u7740\u5c06\u4e0d\u4f1a\u89e6\u53d1 'open' \u4e8b\u4ef6\u3002 fd \u5fc5\u987b\u662f\u963b\u585e\u7684\uff0c\u975e\u963b\u585e\u7684 fd \u5e94\u8be5\u4f20\u7ed9 net.Socket \u3002 \u5982\u679c fd \u6307\u5411\u4ec5\u652f\u6301\u963b\u585e\u8bfb\u53d6\u7684\u5b57\u7b26\u8bbe\u5907\uff08\u4f8b\u5982\u952e\u76d8\u6216\u58f0\u5361\uff09\uff0c\u5219\u5728\u6570\u636e\u53ef\u7528\u4e4b\u524d\uff0c\u8bfb\u53d6\u64cd\u4f5c\u4e0d\u4f1a\u5b8c\u6210\u3002 \u8fd9\u53ef\u4ee5\u9632\u6b62\u8fdb\u7a0b\u9000\u51fa\u5e76\u4e14\u6d41\u81ea\u7136\u5730\u5173\u95ed\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6d41\u5728\u9500\u6bc1\u540e\u5c06\u4e0d\u4f1a\u89e6\u53d1 'close' \u4e8b\u4ef6\u3002 \u8fd9\u4e0e\u5176\u4ed6 Readable \u6d41\u7684\u9ed8\u8ba4\u884c\u4e3a\u76f8\u53cd\u3002 \u5c06 emitClose \u9009\u9879\u8bbe\u7f6e\u4e3a true \u53ef\u66f4\u6539\u6b64\u884c\u4e3a\u3002 const fs = require ( 'fs' ); // \u4ece\u67d0\u4e2a\u5b57\u7b26\u8bbe\u5907\u521b\u5efa\u4e00\u4e2a\u6d41\u3002 const stream = fs . createReadStream ( '/dev/input/event0' ); setTimeout (() => { stream . close (); // \u8fd9\u53ef\u80fd\u4e0d\u4f1a\u5173\u95ed\u6d41\u3002 // \u4eba\u5de5\u6807\u8bb0\u6d41\u7684\u7ed3\u675f\uff0c\u5c31\u50cf\u5e95\u5c42\u7684\u8d44\u6e90\u81ea\u8eab\u5df2\u8868\u660e\u6587\u4ef6\u7684\u7ed3\u675f\u4e00\u6837\uff0c\u5141\u8bb8\u6d41\u8fdb\u884c\u5173\u95ed\u3002 // \u8fd9\u4e0d\u4f1a\u53d6\u6d88\u6302\u8d77\u4e2d\u7684\u8bfb\u53d6\u64cd\u4f5c\uff0c\u5982\u679c\u5b58\u5728\u6b64\u7c7b\u64cd\u4f5c\uff0c\u5219\u8fc7\u7a0b\u53ef\u80fd\u4ecd\u65e0\u6cd5\u6210\u529f\u5730\u9000\u51fa\uff0c\u76f4\u5230\u5b8c\u6210\u3002 stream . push ( null ); stream . read ( 0 ); }, 100 ); \u5982\u679c autoClose \u4e3a false \uff0c\u5219\u5373\u4f7f\u51fa\u73b0\u9519\u8bef\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e5f\u4e0d\u4f1a\u88ab\u5173\u95ed\u3002 \u5e94\u7528\u7a0b\u5e8f\u8d1f\u8d23\u5173\u95ed\u5b83\u5e76\u786e\u4fdd\u6ca1\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u6cc4\u6f0f\u3002 \u5982\u679c autoClose \u8bbe\u4e3a true \uff08\u9ed8\u8ba4\u7684\u884c\u4e3a\uff09\uff0c\u5219\u5728 'error' \u6216 'end' \u4e8b\u4ef6\u65f6\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c06\u4f1a\u88ab\u81ea\u52a8\u5730\u5173\u95ed\u3002 mode \u7528\u4e8e\u8bbe\u7f6e\u6587\u4ef6\u6a21\u5f0f\uff08\u6743\u9650\u548c\u7c98\u6ede\u4f4d\uff09\uff0c\u4f46\u4ec5\u9650\u4e8e\u521b\u5efa\u6587\u4ef6\u65f6\u3002 \u793a\u4f8b\uff0c\u4ece\u4e00\u4e2a\u5927\u5c0f\u4e3a 100 \u4e2a\u5b57\u8282\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6700\u540e 10 \u4e2a\u5b57\u8282\uff1a fs . createReadStream ( 'sample.txt' , { start : 90 , end : 99 }); \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002","title":"fs.createReadStream(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fscreatewritestreampath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | flags \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'w' \u3002 encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 fd \u9ed8\u8ba4\u503c: null \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 autoClose \u9ed8\u8ba4\u503c: true \u3002 emitClose \u9ed8\u8ba4\u503c: false \u3002 start \u8fd4\u56de: options \u53ef\u4ee5\u5305\u62ec start \u9009\u9879\uff0c\u5141\u8bb8\u5728\u6587\u4ef6\u7684\u5f00\u5934\u4e4b\u540e\u7684\u67d0\u4e2a\u4f4d\u7f6e\u5199\u5165\u6570\u636e\uff0c\u5141\u8bb8\u7684\u503c\u5728 [0, Number.MAX_SAFE_INTEGER ] \u7684\u8303\u56f4\u5185\u3002 \u82e5\u8981\u4fee\u6539\u6587\u4ef6\u800c\u4e0d\u662f\u8986\u76d6\u5b83\uff0c\u5219 flags \u6a21\u5f0f\u9700\u8981\u4e3a r+ \u800c\u4e0d\u662f\u9ed8\u8ba4\u7684 w \u6a21\u5f0f\u3002 encoding \u53ef\u4ee5\u662f Buffer \u63a5\u53d7\u7684\u4efb\u4f55\u4e00\u79cd\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c autoClose \u8bbe\u7f6e\u4e3a true \uff08\u9ed8\u8ba4\u7684\u884c\u4e3a\uff09\uff0c\u5219\u5728 'error' \u6216 'finish' \u4e8b\u4ef6\u65f6\u6587\u4ef6\u63cf\u8ff0\u7b26\u5c06\u4f1a\u88ab\u81ea\u52a8\u5730\u5173\u95ed\u3002 \u5982\u679c autoClose \u4e3a false \uff0c\u5219\u5373\u4f7f\u51fa\u73b0\u9519\u8bef\uff0c\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e5f\u4e0d\u4f1a\u88ab\u5173\u95ed\u3002 \u5e94\u7528\u7a0b\u5e8f\u8d1f\u8d23\u5173\u95ed\u5b83\u5e76\u786e\u4fdd\u6ca1\u6709\u6587\u4ef6\u63cf\u8ff0\u7b26\u6cc4\u6f0f\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6d41\u5728\u9500\u6bc1\u540e\u5c06\u4e0d\u4f1a\u89e6\u53d1 'close' \u4e8b\u4ef6\u3002 \u8fd9\u4e0e\u5176\u4ed6 Writable \u6d41\u7684\u9ed8\u8ba4\u884c\u4e3a\u76f8\u53cd\u3002 \u5c06 emitClose \u9009\u9879\u8bbe\u7f6e\u4e3a true \u53ef\u66f4\u6539\u6b64\u884c\u4e3a\u3002 \u4e0e ReadStream \u7c7b\u4f3c\uff0c\u5982\u679c\u6307\u5b9a\u4e86 fd \uff0c\u5219 WriteStream \u5c06\u4f1a\u5ffd\u7565 path \u53c2\u6570\u5e76\u5c06\u4f1a\u4f7f\u7528\u6307\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u8fd9\u610f\u5473\u7740\u4e0d\u4f1a\u89e6\u53d1 'open' \u4e8b\u4ef6\u3002 fd \u5fc5\u987b\u662f\u963b\u585e\u7684\uff0c\u975e\u963b\u585e\u7684 fd \u5e94\u8be5\u4f20\u7ed9 net.Socket \u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002","title":"fs.createWriteStream(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsexistspath-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 \u7a33\u5b9a\u6027: 0 - \u5e9f\u5f03: \u6539\u4e3a\u4f7f\u7528 fs.stat() \u6216 fs.access() \u3002 path | | callback exists \u901a\u8fc7\u68c0\u67e5\u6587\u4ef6\u7cfb\u7edf\u6765\u6d4b\u8bd5\u7ed9\u5b9a\u7684\u8def\u5f84\u662f\u5426\u5b58\u5728\u3002 \u7136\u540e\u8c03\u7528 callback \u5e76\u5e26\u4e0a\u53c2\u6570 true \u6216 false \uff1a fs . exists ( '/etc/passwd' , ( exists ) => { console . log ( exists ? '\u5b58\u5728' : '\u4e0d\u5b58\u5728' ); }); \u6b64\u56de\u8c03\u7684\u53c2\u6570\u4e0e\u5176\u4ed6 Node.js \u56de\u8c03\u4e0d\u4e00\u81f4\u3002 \u901a\u5e38\uff0cNode.js \u56de\u8c03\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f err \u53c2\u6570\uff0c\u540e\u9762\u53ef\u9009\u5730\u8ddf\u968f\u5176\u4ed6\u53c2\u6570\u3002 fs.exists() \u7684\u56de\u8c03\u53ea\u6709\u4e00\u4e2a\u5e03\u5c14\u503c\u53c2\u6570\u3002 \u8fd9\u662f\u63a8\u8350 fs.access() \u4ee3\u66ff fs.exists() \u7684\u539f\u56e0\u4e4b\u4e00\u3002 \u4e0d\u5efa\u8bae\u5728\u8c03\u7528 fs.open() \u3001 fs.readFile() \u6216 fs.writeFile() \u4e4b\u524d\u4f7f\u7528 fs.exists() \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u3002 \u8fd9\u6837\u505a\u4f1a\u5f15\u5165\u7ade\u6001\u6761\u4ef6\uff0c\u56e0\u4e3a\u5176\u4ed6\u8fdb\u7a0b\u53ef\u80fd\u4f1a\u5728\u4e24\u6b21\u8c03\u7528\u4e4b\u95f4\u66f4\u6539\u6587\u4ef6\u7684\u72b6\u6001\u3002 \u76f8\u53cd\uff0c\u5e94\u8be5\u76f4\u63a5\u6253\u5f00\u3001\u8bfb\u53d6\u6216\u5199\u5165\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u5904\u7406\u5f15\u53d1\u7684\u9519\u8bef\u3002 \u5199\u5165\uff08\u4e0d\u63a8\u8350\uff09 fs . exists ( 'myfile' , ( exists ) => { if ( exists ) { console . error ( 'myfile \u5df2\u5b58\u5728' ); } else { fs . open ( 'myfile' , 'wx' , ( err , fd ) => { if ( err ) throw err ; writeMyData ( fd ); }); } }); \u5199\u5165\uff08\u63a8\u8350\uff09 fs . open ( 'myfile' , 'wx' , ( err , fd ) => { if ( err ) { if ( err . code === 'EEXIST' ) { console . error ( 'myfile \u5df2\u5b58\u5728' ); return ; } throw err ; } writeMyData ( fd ); }); \u8bfb\u53d6\uff08\u4e0d\u63a8\u8350\uff09 fs . exists ( 'myfile' , ( exists ) => { if ( exists ) { fs . open ( 'myfile' , 'r' , ( err , fd ) => { if ( err ) throw err ; readMyData ( fd ); }); } else { console . error ( 'myfile \u4e0d\u5b58\u5728' ); } }); \u8bfb\u53d6\uff08\u63a8\u8350\uff09 fs . open ( 'myfile' , 'r' , ( err , fd ) => { if ( err ) { if ( err . code === 'ENOENT' ) { console . error ( 'myfile \u4e0d\u5b58\u5728' ); return ; } throw err ; } readMyData ( fd ); }); \u4e0a\u9762\u7684\u201c\u4e0d\u63a8\u8350\u201d\u793a\u4f8b\u4f1a\u5148\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u7136\u540e\u518d\u4f7f\u7528\u8be5\u6587\u4ef6\u3002 \u201c\u63a8\u8350\u201d\u793a\u4f8b\u5219\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u76f4\u63a5\u4f7f\u7528\u6587\u4ef6\u5e76\u5904\u7406\u9519\u8bef\uff08\u5982\u679c\u6709\u9519\u8bef\u7684\u8bdd\uff09\u3002 \u901a\u5e38\uff0c\u4ec5\u5728\u6587\u4ef6\u4e0d\u76f4\u63a5\u4f7f\u7528\u65f6\u624d\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\uff0c\u4f8b\u5982\u5f53\u5176\u5b58\u5728\u6027\u662f\u6765\u81ea\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u7684\u4fe1\u53f7\u65f6\u3002","title":"fs.exists(path, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsexistssyncpath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | \u8fd4\u56de: \u5982\u679c\u8def\u5f84\u5b58\u5728\uff0c\u5219\u8fd4\u56de true \uff0c\u5426\u5219\u8fd4\u56de false \u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.exists() \u3002 \u867d\u7136 fs.exists() \u5df2\u5e9f\u5f03\uff0c\u4f46 fs.existsSync() \u4e0d\u662f\u5e9f\u5f03\u7684\u3002 fs.exists() \u7684 callback \u53c2\u6570\u63a5\u53d7\u4e0e\u5176\u4ed6 Node.js \u56de\u8c03\u4e0d\u4e00\u81f4\u7684\u53c2\u6570\u3002 fs.existsSync() \u4e0d\u4f7f\u7528\u56de\u8c03\u3002 if ( fs . existsSync ( '/etc/passwd' )) { console . log ( '\u6587\u4ef6\u5df2\u5b58\u5728' ); }","title":"fs.existsSync(path)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfchmodfd-mode-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd mode callback err \u5f02\u6b65\u7684 fchmod(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002","title":"fs.fchmod(fd, mode, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfchmodsyncfd-mode","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.4.7 fd mode \u540c\u6b65\u7684 fchmod(2) \u3002\u8fd4\u56de undefined \u3002","title":"fs.fchmodSync(fd, mode)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfchownfd-uid-gid-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd uid gid callback err \u5f02\u6b65\u7684 fchown(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002","title":"fs.fchown(fd, uid, gid, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfchownsyncfd-uid-gid","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.4.7 fd uid gid \u540c\u6b65\u7684 fchown(2) \u3002\u8fd4\u56de undefined \u3002","title":"fs.fchownSync(fd, uid, gid)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfdatasyncfd-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd callback err \u5f02\u6b65\u7684 fdatasync(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002","title":"fs.fdatasync(fd, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfdatasyncsyncfd","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.96 fd \u540c\u6b65\u7684 fdatasync(2) \u3002\u8fd4\u56de undefined \u3002","title":"fs.fdatasyncSync(fd)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfstatfd-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 callback err stats \u5f02\u6b65\u7684 fstat(2) \u3002 \u56de\u8c03\u4f1a\u4f20\u5165\u4e24\u4e2a\u53c2\u6570 (err, stats) \uff0c\u5176\u4e2d stats \u662f fs.Stats \u5bf9\u8c61\u3002 fstat() \u4e0e stat() \u76f8\u540c\uff0c\u9664\u4e86\u6587\u4ef6\u662f\u7531\u6587\u4ef6\u63cf\u8ff0\u7b26 fd \u6307\u5b9a\u3002","title":"fs.fstat(fd[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfstatsyncfd-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u540c\u6b65\u7684 fstat(2) \u3002","title":"fs.fstatSync(fd[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfsyncfd-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd callback err \u5f02\u6b65\u7684 fsync(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002","title":"fs.fsync(fd, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfsyncsyncfd","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.96 fd \u540c\u6b65\u7684 fsync(2) \u3002\u8fd4\u56de undefined \u3002","title":"fs.fsyncSync(fd)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsftruncatefd-len-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd len \u9ed8\u8ba4\u503c: 0 \u3002 callback err \u5f02\u6b65\u7684 ftruncate(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u5982\u679c\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5411\u7684\u6587\u4ef6\u5927\u4e8e len \u4e2a\u5b57\u8282\uff0c\u5219\u53ea\u6709\u524d\u9762 len \u4e2a\u5b57\u8282\u4f1a\u4fdd\u7559\u5728\u6587\u4ef6\u4e2d\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u53ea\u4fdd\u7559\u6587\u4ef6\u7684\u524d 4 \u4e2a\u5b57\u8282\uff1a console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370: Node.js // \u83b7\u53d6\u8981\u622a\u65ad\u7684\u6587\u4ef6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 const fd = fs . openSync ( 'temp.txt' , 'r+' ); // \u5c06\u6587\u4ef6\u622a\u65ad\u4e3a\u524d 4 \u4e2a\u5b57\u8282\u3002 fs . ftruncate ( fd , 4 , ( err ) => { assert . ifError ( err ); console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); }); // \u6253\u5370: Node \u5982\u679c\u6587\u4ef6\u5c0f\u4e8e len \u4e2a\u5b57\u8282\uff0c\u5219\u4f1a\u5bf9\u5176\u8fdb\u884c\u6269\u5c55\uff0c\u5e76\u4e14\u6269\u5c55\u90e8\u5206\u5c06\u586b\u5145\u7a7a\u5b57\u8282\uff08 '\\0' \uff09\uff1a console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370: Node.js // \u83b7\u53d6\u8981\u622a\u65ad\u7684\u6587\u4ef6\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 const fd = fs . openSync ( 'temp.txt' , 'r+' ); // \u5c06\u6587\u4ef6\u622a\u65ad\u4e3a\u524d 10 \u4e2a\u5b57\u8282\uff0c\u4f46\u5b9e\u9645\u5927\u5c0f\u4e3a 7 \u4e2a\u5b57\u8282\u3002 fs . ftruncate ( fd , 10 , ( err ) => { assert . ifError ( err ); console . log ( fs . readFileSync ( 'temp.txt' )); }); // \u6253\u5370: <Buffer 4e 6f 64 65 2e 6a 73 00 00 00> // (UTF8 \u7684\u503c\u4e3a 'Node.js\\0\\0\\0') \u6700\u540e 3 \u4e2a\u5b57\u8282\u662f\u7a7a\u5b57\u8282\uff08 '\\0' \uff09\uff0c\u4ee5\u8865\u5145\u8d85\u51fa\u7684\u622a\u65ad\u3002","title":"fs.ftruncate(fd[, len], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsftruncatesyncfd-len","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.8.6 fd len \u9ed8\u8ba4\u503c: 0 \u3002 \u8fd4\u56de undefined \u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6b64API\u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.ftruncate() \u3002","title":"fs.ftruncateSync(fd[, len])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfutimesfd-atime-mtime-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd atime | | mtime | | callback err \u66f4\u6539\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5411\u7684\u5bf9\u8c61\u7684\u6587\u4ef6\u7cfb\u7edf\u65f6\u95f4\u6233\u3002 \u53c2\u9605 fs.utimes() \u3002 \u6b64\u51fd\u6570\u5728 7.1 \u4e4b\u524d\u7684 AIX \u7248\u672c\u4e0a\u4e0d\u8d77\u4f5c\u7528\uff0c\u5b83\u5c06\u8fd4\u56de UV_ENOSYS \u9519\u8bef\u3002","title":"fs.futimes(fd, atime, mtime, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsfutimessyncfd-atime-mtime","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd atime | | mtime | | fs.futimes() \u7684\u540c\u6b65\u7248\u672c\u3002\u8fd4\u56de undefined \u3002","title":"fs.futimesSync(fd, atime, mtime)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fslchmodpath-mode-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | mode callback err \u5f02\u6b65\u7684 lchmod(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u4ec5\u9002\u7528\u4e8e macOS\u3002","title":"fs.lchmod(path, mode, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fslchmodsyncpath-mode","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5e9f\u5f03\u4e8e: v0.4.7 path | | mode \u540c\u6b65\u7684 lchmod(2) \u3002\u8fd4\u56de undefined \u3002","title":"fs.lchmodSync(path, mode)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fslchownpath-uid-gid-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | uid gid callback err \u5f02\u6b65\u7684 lchown(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002","title":"fs.lchown(path, uid, gid, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fslchownsyncpath-uid-gid","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | uid gid \u540c\u6b65\u7684 lchown(2) \u3002\u8fd4\u56de undefined \u3002","title":"fs.lchownSync(path, uid, gid)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fslinkexistingpath-newpath-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 existingPath | | newPath | | callback err \u5f02\u6b65\u7684 link(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002","title":"fs.link(existingPath, newPath, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fslinksyncexistingpath-newpath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 existingPath | | newPath | | \u540c\u6b65\u7684 link(2) \u3002\u8fd4\u56de undefined \u3002","title":"fs.linkSync(existingPath, newPath)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fslstatpath-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 callback err stats \u5f02\u6b65\u7684 lstat(2) \u3002 \u56de\u8c03\u4f1a\u4f20\u5165\u4e24\u4e2a\u53c2\u6570 (err, stats) \uff0c\u5176\u4e2d stats \u662f fs.Stats \u5bf9\u8c61\u3002 lstat() \u4e0e stat() \u76f8\u540c\uff0c\u53ea\u662f\u5982\u679c path \u662f\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u67e5\u770b\u7684\u662f\u94fe\u63a5\u81ea\u8eab\uff0c\u800c\u4e0d\u662f\u5b83\u6307\u5411\u7684\u6587\u4ef6\u3002","title":"fs.lstat(path[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fslstatsyncpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u540c\u6b65\u7684 lstat(2) \u3002","title":"fs.lstatSync(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsmkdirpath-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | recursive \u9ed8\u8ba4\u503c: false \u3002 mode Windows \u4e0a\u4e0d\u652f\u6301\u3002 \u9ed8\u8ba4\u503c: 0o777 \u3002 callback err \u5f02\u6b65\u5730\u521b\u5efa\u76ee\u5f55\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u6a21\u5f0f\uff08\u6743\u9650\u548c\u7c98\u6ede\u4f4d\uff09\u7684\u6574\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 mode \u5c5e\u6027\u548c recursive \u5c5e\u6027\uff08\u6307\u793a\u662f\u5426\u5e94\u521b\u5efa\u7236\u6587\u4ef6\u5939\uff09\u7684\u5bf9\u8c61\u3002 // \u521b\u5efa /tmp/a/apple \u76ee\u5f55\uff0c\u65e0\u8bba\u662f\u5426\u5b58\u5728 /tmp \u548c /tmp/a \u76ee\u5f55\u3002 fs . mkdir ( '/tmp/a/apple' , { recursive : true }, ( err ) => { if ( err ) throw err ; }); \u5728 Windows \u4e0a\uff0c\u5728\u6839\u76ee\u5f55\u4e0a\u4f7f\u7528 fs.mkdir() \uff08\u5373\u4f7f\u4f7f\u7528\u9012\u5f52\u53c2\u6570\uff09\u4e5f\u4f1a\u5bfc\u81f4\u9519\u8bef\uff1a fs . mkdir ( '/' , { recursive : true }, ( err ) => { // => [Error: EPERM: operation not permitted, mkdir 'C:\\'] }); \u4e5f\u53ef\u53c2\u9605 mkdir(2) \u3002","title":"fs.mkdir(path[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsmkdirsyncpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | recursive \u9ed8\u8ba4\u503c: false \u3002 mode Windows \u4e0a\u4e0d\u652f\u6301\u3002 \u9ed8\u8ba4\u503c: 0o777 \u3002 \u540c\u6b65\u5730\u521b\u5efa\u76ee\u5f55\u3002 \u8fd4\u56de undefined \u3002 fs.mkdir() \u7684\u540c\u6b65\u7248\u672c\u3002 \u4e5f\u53ef\u53c2\u9605 mkdir(2) \u3002","title":"fs.mkdirSync(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsmkdtempprefix-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 prefix options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err folder \u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684\u4e34\u65f6\u76ee\u5f55\u3002 \u751f\u6210\u8981\u9644\u52a0\u5728\u5fc5\u9700\u7684 prefix \u540e\u9762\u7684\u516d\u4f4d\u968f\u673a\u5b57\u7b26\uff0c\u4ee5\u521b\u5efa\u552f\u4e00\u7684\u4e34\u65f6\u76ee\u5f55\u3002 \u7531\u4e8e\u5e73\u53f0\u7684\u4e0d\u4e00\u81f4\u6027\uff0c\u8bf7\u907f\u514d\u5728 prefix \u4e2d\u4ee5 X \u5b57\u7b26\u7ed3\u5c3e\u3002 \u5728\u67d0\u4e9b\u5e73\u53f0\u4e0a\uff0c\u7279\u522b\u662f BSD\uff0c\u53ef\u4ee5\u8fd4\u56de\u516d\u4e2a\u4ee5\u4e0a\u7684\u968f\u673a\u5b57\u7b26\uff0c\u5e76\u7528\u968f\u673a\u5b57\u7b26\u66ff\u6362 prefix \u4e2d\u7ed3\u5c3e\u7684 X \u5b57\u7b26\u3002 \u521b\u5efa\u7684\u76ee\u5f55\u8def\u5f84\u4f5c\u4e3a\u5b57\u7b26\u4e32\u4f20\u7ed9\u56de\u8c03\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u5b57\u7b26\u7f16\u7801\u7684 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\u3002 fs . mkdtemp ( path . join ( os . tmpdir (), '\u76ee\u5f55-' ), ( err , folder ) => { if ( err ) throw err ; console . log ( folder ); // \u6253\u5370: /tmp/\u76ee\u5f55-itXde2 \u6216 C:\\Users\\...\\AppData\\Local\\Temp\\\u76ee\u5f55-itXde2 }); fs.mkdtemp() \u65b9\u6cd5\u5c06\u516d\u4f4d\u968f\u673a\u9009\u62e9\u7684\u5b57\u7b26\u76f4\u63a5\u9644\u52a0\u5230 prefix \u5b57\u7b26\u4e32\u3002 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u76ee\u5f55 /tmp \uff0c\u5982\u679c\u6253\u7b97\u5728 /tmp \u4e2d\u521b\u5efa\u4e34\u65f6\u76ee\u5f55\uff0c\u5219 prefix \u5fc5\u987b\u5728\u5c3e\u90e8\u52a0\u4e0a\u7279\u5b9a\u5e73\u53f0\u7684\u8def\u5f84\u5206\u9694\u7b26\uff08 require('path').sep \uff09\u3002 // \u65b0\u7684\u4e34\u65f6\u76ee\u5f55\u7684\u7236\u76ee\u5f55\u3002 const tmpDir = os . tmpdir (); // \u6b64\u7528\u6cd5\u662f\u9519\u8bef\u7684\uff1a fs . mkdtemp ( tmpDir , ( err , folder ) => { if ( err ) throw err ; console . log ( folder ); // \u8f93\u51fa\u7c7b\u4f3c `/tmpabc123`\u3002 // \u65b0\u7684\u4e34\u65f6\u76ee\u5f55\u4f1a\u88ab\u521b\u5efa\u5728\u6587\u4ef6\u7cfb\u7edf\u6839\u76ee\u5f55\uff0c\u800c\u4e0d\u662f\u5728 /tmp \u76ee\u5f55\u4e2d\u3002 }); // \u6b64\u7528\u6cd5\u662f\u6b63\u786e\u7684\uff1a const { sep } = require ( 'path' ); fs . mkdtemp ( ` ${ tmpDir }${ sep } ` , ( err , folder ) => { if ( err ) throw err ; console . log ( folder ); // \u8f93\u51fa\u7c7b\u4f3c `/tmp/abc123`\u3002 // \u65b0\u7684\u4e34\u65f6\u76ee\u5f55\u4f1a\u88ab\u521b\u5efa\u5728 /tmp \u76ee\u5f55\u4e2d\u3002 });","title":"fs.mkdtemp(prefix[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsmkdtempsyncprefix-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v5.10.0 prefix options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u8fd4\u56de\u521b\u5efa\u7684\u76ee\u5f55\u8def\u5f84\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6b64 API \u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.mkdtemp() \u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u5b57\u7b26\u7f16\u7801\u7684 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\u3002","title":"fs.mkdtempSync(prefix[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsopenpath-flags-mode-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | flags | \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \uff08\u53ef\u8bfb\u5199\uff09\u3002 callback err fd \u5f02\u6b65\u5730\u6253\u5f00\u6587\u4ef6\u3002\u53c2\u9605 open(2) \u3002 mode \u7528\u4e8e\u8bbe\u7f6e\u6587\u4ef6\u6a21\u5f0f\uff08\u6743\u9650\u548c\u7c98\u6ede\u4f4d\uff09\uff0c\u4f46\u4ec5\u9650\u4e8e\u521b\u5efa\u6587\u4ef6\u65f6\u3002 \u5728 Windows \u4e0a\uff0c\u53ea\u80fd\u64cd\u4f5c\u5199\u6743\u9650\uff0c\u53c2\u9605 fs.chmod() \u3002 \u56de\u8c03\u6709\u4e24\u4e2a\u53c2\u6570 (err, fd) \u3002 \u6709\u4e9b\u5b57\u7b26 ( < > : \" / \\ | ? * ) \u5728 Windows \u4e0a\u662f\u9884\u7559\u7684\uff0c\u53c2\u9605 \u547d\u540d\u6587\u4ef6\u3001\u8def\u5f84\u4ee5\u53ca\u547d\u540d\u7a7a\u95f4 \u3002 \u5728 NTFS \u4e0a\uff0c\u5982\u679c\u6587\u4ef6\u540d\u5305\u542b\u5192\u53f7\uff0c\u5219 Node.js \u5c06\u6253\u5f00\u6587\u4ef6\u7cfb\u7edf\u6d41\uff0c\u53c2\u9605 \u6b64 MSDN \u9875\u9762 \u3002 \u57fa\u4e8e fs.open() \u7684\u51fd\u6570\u4e5f\u8868\u73b0\u51fa\u4ee5\u4e0a\u884c\u4e3a\uff0c\u6bd4\u5982 fs.writeFile() \u3001 fs.readFile() \u7b49\u3002","title":"fs.open(path[, flags[, mode]], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsopendirpath-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 path | | options encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err dir \u5f02\u6b65\u5730\u6253\u5f00\u76ee\u5f55\u3002 \u53c2\u9605 opendir(3) \u3002 \u521b\u5efa\u4e00\u4e2a fs.Dir \uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u7528\u4e8e\u66f4\u8fdb\u4e00\u6b65\u8bfb\u53d6\u548c\u6e05\u7406\u76ee\u5f55\u7684\u7684\u51fd\u6570\u3002 encoding \u9009\u9879\u7528\u4e8e\u5728\u6253\u5f00\u76ee\u5f55\u548c\u540e\u7eed\u7684\u8bfb\u53d6\u64cd\u4f5c\u65f6\u8bbe\u7f6e path \u7684\u5b57\u7b26\u7f16\u7801\u3002","title":"fs.opendir(path[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsopendirsyncpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 path | | options encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u540c\u6b65\u5730\u6253\u5f00\u76ee\u5f55\u3002 \u53c2\u9605 opendir(3) \u3002 \u521b\u5efa\u4e00\u4e2a fs.Dir \uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u7528\u4e8e\u66f4\u8fdb\u4e00\u6b65\u8bfb\u53d6\u548c\u6e05\u7406\u76ee\u5f55\u7684\u7684\u51fd\u6570\u3002 encoding \u9009\u9879\u7528\u4e8e\u5728\u6253\u5f00\u76ee\u5f55\u548c\u540e\u7eed\u7684\u8bfb\u53d6\u64cd\u4f5c\u65f6\u8bbe\u7f6e path \u7684\u5b57\u7b26\u7f16\u7801\u3002","title":"fs.opendirSync(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsopensyncpath-flags-mode","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | flags | \u9ed8\u8ba4\u503c: 'r' \u3002\u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 \u8fd4\u56de: \u8fd4\u56de\u8868\u793a\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6574\u6570\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.open() \u3002","title":"fs.openSync(path[, flags, mode])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsreadfd-buffer-offset-length-position-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd buffer | | offset length position callback err bytesRead buffer \u4ece fd \u6307\u5b9a\u7684\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u3002 buffer \u662f\u6570\u636e\u5c06\u5199\u5165\u7684\u7f13\u51b2\u533a\u3002 offset \u662f buffer \u4e2d\u5f00\u59cb\u5199\u5165\u7684\u504f\u79fb\u91cf\u3002 length \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u6307\u5b9a\u8981\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002 position \u53c2\u6570\u6307\u5b9a\u4ece\u6587\u4ef6\u4e2d\u5f00\u59cb\u8bfb\u53d6\u7684\u4f4d\u7f6e\u3002 \u5982\u679c position \u4e3a null \uff0c\u5219\u4ece\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u66f4\u65b0\u6587\u4ef6\u4f4d\u7f6e\u3002 \u5982\u679c position \u662f\u6574\u6570\uff0c\u5219\u6587\u4ef6\u4f4d\u7f6e\u5c06\u4fdd\u6301\u4e0d\u53d8\u3002 \u56de\u8c03\u6709\u4e09\u4e2a\u53c2\u6570 (err, bytesRead, buffer) \u3002 \u5982\u679c\u8c03\u7528\u6b64\u65b9\u6cd5\u7684 util.promisify() \u7248\u672c\uff0c\u5219\u8fd4\u56de\u7684 Promise \u4f1a\u8fd4\u56de\u5177\u6709 bytesRead \u5c5e\u6027\u548c buffer \u5c5e\u6027\u7684 Object \u3002","title":"fs.read(fd, buffer, offset, length, position, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsreaddirpath-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 withFileTypes \u9ed8\u8ba4\u503c: false \u3002 callback err files | | \u5f02\u6b65\u7684 readdir(3) \u3002 \u8bfb\u53d6\u76ee\u5f55\u7684\u5185\u5bb9\u3002 \u56de\u8c03\u6709\u4e24\u4e2a\u53c2\u6570 (err, files) \uff0c\u5176\u4e2d files \u662f\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u540d\u7684\u6570\u7ec4\uff08\u4e0d\u5305\u62ec '.' \u548c '..' \uff09\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u7ed9\u56de\u8c03\u7684\u6587\u4ef6\u540d\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u6587\u4ef6\u540d\u662f Buffer \u5bf9\u8c61\u3002 \u5982\u679c options.withFileTypes \u8bbe\u7f6e\u4e3a true \uff0c\u5219 files \u6570\u7ec4\u5c06\u5305\u542b fs.Dirent \u5bf9\u8c61\u3002","title":"fs.readdir(path[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsreaddirsyncpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 withFileTypes \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: | | \u540c\u6b65\u7684 readdir(3) \u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u7ed9\u56de\u8c03\u7684\u6587\u4ef6\u540d\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u6587\u4ef6\u540d\u662f Buffer \u5bf9\u8c61\u3002 \u5982\u679c options.withFileTypes \u8bbe\u7f6e\u4e3a true \uff0c\u5219\u8fd4\u56de\u7684\u7ed3\u679c\u5c06\u5305\u542b fs.Dirent \u5bf9\u8c61\u3002","title":"fs.readdirSync(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsreadfilepath-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 options | encoding | \u9ed8\u8ba4\u503c: null \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 callback err data | \u5f02\u6b65\u5730\u8bfb\u53d6\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\u3002 fs . readFile ( '/etc/passwd' , ( err , data ) => { if ( err ) throw err ; console . log ( data ); }); \u56de\u8c03\u4f1a\u4f20\u5165\u4e24\u4e2a\u53c2\u6570 (err, data) \uff0c\u5176\u4e2d data \u662f\u6587\u4ef6\u7684\u5185\u5bb9\u3002 \u5982\u679c\u6ca1\u6709\u6307\u5b9a encoding \uff0c\u5219\u8fd4\u56de\u539f\u59cb\u7684 buffer\u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff1a fs . readFile ( '/etc/passwd' , 'utf8' , callback ); \u5f53 path \u662f\u76ee\u5f55\u65f6\uff0c fs.readFile() \u4e0e fs.readFileSync() \u7684\u884c\u4e3a\u662f\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u3002 \u5728 macOS\u3001Linux \u548c Windows \u4e0a\uff0c\u5c06\u8fd4\u56de\u9519\u8bef\u3002 \u5728 FreeBSD \u4e0a\uff0c\u5c06\u8fd4\u56de\u76ee\u5f55\u5185\u5bb9\u7684\u8868\u793a\u3002 // \u5728 macOS\u3001Linux \u548c Windows \u4e0a\uff1a fs . readFile ( '<\u76ee\u5f55>' , ( err , data ) => { // => [Error: EISDIR: illegal operation on a directory, read <\u76ee\u5f55>] }); // \u5728 FreeBSD \u4e0a\uff1a fs . readFile ( '<\u76ee\u5f55>' , ( err , data ) => { // => null, <data> }); fs.readFile() \u51fd\u6570\u4f1a\u7f13\u51b2\u6574\u4e2a\u6587\u4ef6\u3002 \u4e3a\u4e86\u6700\u5c0f\u5316\u5185\u5b58\u6210\u672c\uff0c\u5c3d\u53ef\u80fd\u901a\u8fc7 fs.createReadStream() \u8fdb\u884c\u6d41\u5f0f\u4f20\u8f93\u3002","title":"fs.readFile(path[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_7","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4efb\u4f55\u6307\u5b9a\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u90fd\u5fc5\u987b\u652f\u6301\u8bfb\u53d6\u3002 \u5982\u679c\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u6307\u5b9a\u4e3a path \uff0c\u5219\u4e0d\u4f1a\u81ea\u52a8\u5173\u95ed\u5b83\u3002 \u8bfb\u6570\u5c06\u4ece\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u7ecf\u6709\u5185\u5bb9 'Hello World ' \u5e76\u4e14\u4f7f\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u8bfb\u53d6\u4e86\u516d\u4e2a\u5b57\u8282\uff0c\u5219\u4f7f\u7528\u76f8\u540c\u6587\u4ef6\u63cf\u8ff0\u7b26\u8c03\u7528 fs.readFile() \u5c06\u8fd4\u56de 'World' \u800c\u4e0d\u662f 'Hello World' \u3002","title":"\u6587\u4ef6\u63cf\u8ff0\u7b26#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsreadfilesyncpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 options | encoding | \u9ed8\u8ba4\u503c: null \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 \u8fd4\u56de: | \u8fd4\u56de path \u7684\u5185\u5bb9\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.readFile() \u3002 \u5982\u679c\u6307\u5b9a\u4e86 encoding \u9009\u9879\uff0c\u5219\u6b64\u51fd\u6570\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u5426\u5219\u8fd4\u56de buffer\u3002 \u4e0e fs.readFile() \u7c7b\u4f3c\uff0c\u5f53 path \u662f\u76ee\u5f55\u65f6\uff0c fs.readFileSync() \u7684\u884c\u4e3a\u662f\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u3002 // \u5728 macOS\u3001Linux \u548c Windows \u4e0a\uff1a fs . readFileSync ( '<\u76ee\u5f55>' ); // => [Error: EISDIR: illegal operation on a directory, read <\u76ee\u5f55>] // \u5728 FreeBSD \u4e0a\uff1a fs . readFileSync ( '<\u76ee\u5f55>' ); // => <data>","title":"fs.readFileSync(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsreadlinkpath-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err linkString | \u5f02\u6b65\u7684 readlink(2) \u3002 \u56de\u8c03\u4f1a\u4f20\u5165\u4e24\u4e2a\u53c2\u6570 (err, linkString) \u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u9012\u7ed9\u56de\u8c03\u7684\u94fe\u63a5\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u94fe\u63a5\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002","title":"fs.readlink(path[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsreadlinksyncpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: | \u540c\u6b65\u7684 readlink(2) \u3002 \u8fd4\u56de\u7b26\u53f7\u94fe\u63a5\u7684\u5b57\u7b26\u4e32\u503c\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u9012\u7ed9\u56de\u8c03\u7684\u94fe\u63a5\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u94fe\u63a5\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002","title":"fs.readlinkSync(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsreadsyncfd-buffer-offset-length-position","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd buffer | | offset length position \u8fd4\u56de: \u8fd4\u56de bytesRead \u7684\u6570\u91cf\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6b64 API \u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.read() \u3002","title":"fs.readSync(fd, buffer, offset, length, position)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsrealpathpath-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err resolvedPath | \u901a\u8fc7\u89e3\u6790 . \u3001 .. \u548c\u7b26\u53f7\u94fe\u63a5\u5f02\u6b65\u5730\u8ba1\u7b97\u89c4\u8303\u8def\u5f84\u540d\u3002 \u89c4\u8303\u8def\u5f84\u540d\u4e0d\u4e00\u5b9a\u662f\u552f\u4e00\u7684\u3002 \u786c\u94fe\u63a5\u548c\u7ed1\u5b9a\u88c5\u8f7d\u53ef\u4ee5\u901a\u8fc7\u8bb8\u591a\u8def\u5f84\u540d\u66b4\u9732\u6587\u4ef6\u7cfb\u7edf\u5b9e\u4f53\u3002 \u6b64\u51fd\u6570\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e realpath(3) \uff0c\u4f46\u6709\u4e00\u4e9b\u4f8b\u5916 \u5728\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u4e0d\u6267\u884c\u5927\u5c0f\u5199\u8f6c\u6362\u3002\u3002 \u7b26\u53f7\u94fe\u63a5\u7684\u6700\u5927\u6570\u91cf\u4e0e\u5e73\u53f0\u65e0\u5173\uff0c\u5e76\u4e14\u901a\u5e38\u9ad8\u4e8e\u672c\u5730 realpath(3) \u5b9e\u73b0\u652f\u6301\u7684\u6570\u91cf\u3002 callback \u6709\u4e24\u4e2a\u53c2\u6570 (err, resolvedPath) \u3002 \u53ef\u4ee5\u4f7f\u7528 process.cwd \u6765\u89e3\u6790\u76f8\u5bf9\u8def\u5f84\u3002 \u4ec5\u652f\u6301\u53ef\u8f6c\u6362\u4e3a UTF8 \u5b57\u7b26\u4e32\u7684\u8def\u5f84\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u9012\u7ed9\u56de\u8c03\u7684\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002 \u5982\u679c path \u89e3\u6790\u4e3a\u5957\u63a5\u5b57\u6216\u7ba1\u9053\uff0c\u5219\u8be5\u51fd\u6570\u5c06\u8fd4\u56de\u8be5\u5bf9\u8c61\u7684\u7cfb\u7edf\u76f8\u5173\u540d\u79f0\u3002","title":"fs.realpath(path[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsrealpathnativepath-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v9.2.0 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err resolvedPath | \u5f02\u6b65\u7684 realpath(3) \u3002 callback \u6709\u4e24\u4e2a\u53c2\u6570 (err, resolvedPath) \u3002 \u4ec5\u652f\u6301\u53ef\u8f6c\u6362\u4e3a UTF8 \u5b57\u7b26\u4e32\u7684\u8def\u5f84\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u9012\u7ed9\u56de\u8c03\u7684\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002 \u5728 Linux \u4e0a\uff0c\u5f53 Node.js \u4e0e musl libc \u94fe\u63a5\u65f6\uff0cprocfs \u6587\u4ef6\u7cfb\u7edf\u5fc5\u987b\u6302\u8f7d\u5728 /proc \u4e0a\u624d\u80fd\u4f7f\u6b64\u529f\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 Glibc \u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u3002","title":"fs.realpath.native(path[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsrealpathsyncpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: | \u8fd4\u56de\u5df2\u89e3\u6790\u7684\u8def\u5f84\u540d\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.realpath() \u3002","title":"fs.realpathSync(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsrealpathsyncnativepath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v9.2.0 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 Returns: | \u540c\u6b65\u7684 realpath(3) \u3002 \u4ec5\u652f\u6301\u53ef\u8f6c\u6362\u4e3a UTF8 \u5b57\u7b26\u4e32\u7684\u8def\u5f84\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u4f20\u9012\u7ed9\u56de\u8c03\u7684\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002 \u5728 Linux \u4e0a\uff0c\u5f53 Node.js \u4e0e musl libc \u94fe\u63a5\u65f6\uff0cprocfs \u6587\u4ef6\u7cfb\u7edf\u5fc5\u987b\u6302\u8f7d\u5728 /proc \u4e0a\u624d\u80fd\u4f7f\u6b64\u529f\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 Glibc \u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u3002","title":"fs.realpathSync.native(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsrenameoldpath-newpath-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 oldPath | | newPath | | callback err \u5f02\u6b65\u5730\u5c06 oldPath \u4e0a\u7684\u6587\u4ef6\u91cd\u547d\u540d\u4e3a newPath \u63d0\u4f9b\u7684\u8def\u5f84\u540d\u3002 \u5982\u679c newPath \u5df2\u5b58\u5728\uff0c\u5219\u8986\u76d6\u5b83\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u4e5f\u53ef\u53c2\u9605 rename(2) \u3002 fs . rename ( '\u65e7\u6587\u4ef6.txt' , '\u65b0\u6587\u4ef6.txt' , ( err ) => { if ( err ) throw err ; console . log ( '\u91cd\u547d\u540d\u5b8c\u6210' ); });","title":"fs.rename(oldPath, newPath, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsrenamesyncoldpath-newpath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 oldPath | | newPath | | \u540c\u6b65\u7684 rename(2) \u3002\u8fd4\u56de undefined \u3002","title":"fs.renameSync(oldPath, newPath)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsrmdirpath-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 \u7a33\u5b9a\u6027: 1 - \u9012\u5f52\u7684\u5220\u9664\u662f\u5b9e\u9a8c\u6027\u7684\u3002 path | | options emfileWait \u5982\u679c\u9047\u5230 EMFILE \u9519\u8bef\uff0c\u5219 Node.js \u5c06\u4f1a\u5728\u6bcf\u6b21\u5c1d\u8bd5\u65f6\u4ee5 1 \u6beb\u79d2\u7684\u7ebf\u6027\u56de\u9000\u91cd\u8bd5\u8be5\u64cd\u4f5c\uff0c\u76f4\u5230\u8d85\u65f6\u6301\u7eed\u65f6\u95f4\u8d85\u8fc7\u6b64\u9650\u5236\u3002 \u5982\u679c recursive \u9009\u9879\u4e0d\u4e3a true \uff0c\u5219\u5ffd\u7565\u6b64\u9009\u9879\u3002 \u9ed8\u8ba4\u503c: 1000 \u3002 maxBusyTries \u5982\u679c\u9047\u5230 EBUSY \u3001 ENOTEMPTY \u6216 EPERM \u9519\u8bef\uff0c\u5219 Node.js \u5c06\u4f1a\u5728\u6bcf\u6b21\u5c1d\u8bd5\u65f6\u4ee5 100 \u6beb\u79d2\u7684\u7ebf\u6027\u56de\u9000\u7b49\u5f85\u91cd\u8bd5\u8be5\u64cd\u4f5c\u3002 \u6b64\u9009\u9879\u4ee3\u8868\u91cd\u8bd5\u7684\u6b21\u6570\u3002\u5982\u679c recursive \u9009\u9879\u4e0d\u4e3a true \uff0c\u5219\u5ffd\u7565\u6b64\u9009\u9879\u3002 \u9ed8\u8ba4\u503c: 3 \u3002 recursive \u5982\u679c\u4e3a true \uff0c\u5219\u6267\u884c\u9012\u5f52\u7684\u76ee\u5f55\u5220\u9664\u3002\u5728\u9012\u5f52\u6a21\u5f0f\u4e2d\uff0c\u5982\u679c path \u4e0d\u5b58\u5728\u5219\u4e0d\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u4e14\u5728\u5931\u8d25\u65f6\u91cd\u8bd5\u64cd\u4f5c\u3002 \u9ed8\u8ba4\u503c: false \u3002 callback err \u5f02\u6b65\u7684 rmdir(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u5728\u6587\u4ef6\uff08\u800c\u4e0d\u662f\u76ee\u5f55\uff09\u4e0a\u4f7f\u7528 fs.rmdir() \u4f1a\u5bfc\u81f4\u5728 Windows \u4e0a\u51fa\u73b0 ENOENT \u9519\u8bef\u3001\u5728 POSIX \u4e0a\u51fa\u73b0 ENOTDIR \u9519\u8bef\u3002","title":"fs.rmdir(path[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsrmdirsyncpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 \u7a33\u5b9a\u6027: 1 - \u9012\u5f52\u7684\u5220\u9664\u662f\u5b9e\u9a8c\u6027\u7684\u3002 path | | options recursive \u5982\u679c\u4e3a true \uff0c\u5219\u6267\u884c\u9012\u5f52\u7684\u76ee\u5f55\u5220\u9664\u3002\u5728\u9012\u5f52\u6a21\u5f0f\u4e2d\uff0c\u5982\u679c path \u4e0d\u5b58\u5728\u5219\u4e0d\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u4e14\u5728\u5931\u8d25\u65f6\u91cd\u8bd5\u64cd\u4f5c\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u540c\u6b65\u7684 rmdir(2) \u3002 \u8fd4\u56de undefined \u3002 \u5728\u6587\u4ef6\uff08\u800c\u4e0d\u662f\u76ee\u5f55\uff09\u4e0a\u4f7f\u7528 fs.rmdirSync() \u4f1a\u5bfc\u81f4\u5728 Windows \u4e0a\u51fa\u73b0 ENOENT \u9519\u8bef\u3001\u5728 POSIX \u4e0a\u51fa\u73b0 ENOTDIR \u9519\u8bef\u3002","title":"fs.rmdirSync(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsstatpath-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 callback err stats \u5f02\u6b65\u7684 stat(2) \u3002 \u56de\u8c03\u6709\u4e24\u4e2a\u53c2\u6570 (err, stats) \uff0c\u5176\u4e2d stats \u662f\u4e00\u4e2a fs.Stats \u5bf9\u8c61\u3002 \u5982\u679c\u51fa\u73b0\u9519\u8bef\uff0c\u5219 err.code \u5c06\u662f \u5e38\u89c1\u7cfb\u7edf\u9519\u8bef \u4e4b\u4e00\u3002 \u4e0d\u5efa\u8bae\u5728\u8c03\u7528 fs.open() \u3001 fs.readFile() \u6216 fs.writeFile() \u4e4b\u524d\u4f7f\u7528 fs.stat() \u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u3002 \u800c\u662f\u5e94\u8be5\u76f4\u63a5\u6253\u5f00\u3001\u8bfb\u53d6\u6216\u5199\u5165\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u4e0d\u53ef\u7528\u5219\u5904\u7406\u5f15\u53d1\u7684\u9519\u8bef\u3002 \u8981\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728\u4f46\u968f\u540e\u5e76\u4e0d\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\uff0c\u5219\u5efa\u8bae\u4f7f\u7528 fs.access() \u3002 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u4ee5\u4e0b\u7684\u6587\u4ef6\u5939\u7ed3\u6784\uff1a - txtDir -- file.txt - app.js \u4ee5\u4e0b\u7a0b\u5e8f\u5c06\u4f1a\u68c0\u67e5\u7ed9\u5b9a\u8def\u5f84\u7684\u7edf\u8ba1\u4fe1\u606f\uff1a const fs = require ( 'fs' ); const pathsToCheck = [ './txtDir' , './txtDir/file.txt' ]; for ( let i = 0 ; i < pathsToCheck . length ; i ++ ) { fs . stat ( pathsToCheck [ i ], function ( err , stats ) { console . log ( stats . isDirectory ()); console . log ( stats ); }); } \u5f97\u5230\u7684\u8f93\u51fa\u5c06\u4f1a\u7c7b\u4f3c\u4e8e\uff1a true Stats { dev: 16777220, mode: 16877, nlink: 3, uid: 501, gid: 20, rdev: 0, blksize: 4096, ino: 14214262, size: 96, blocks: 0, atimeMs: 1561174653071.963, mtimeMs: 1561174614583.3518, ctimeMs: 1561174626623.5366, birthtimeMs: 1561174126937.2893, atime: 2019-06-22T03:37:33.072Z, mtime: 2019-06-22T03:36:54.583Z, ctime: 2019-06-22T03:37:06.624Z, birthtime: 2019-06-22T03:28:46.937Z } false Stats { dev: 16777220, mode: 33188, nlink: 1, uid: 501, gid: 20, rdev: 0, blksize: 4096, ino: 14214074, size: 8, blocks: 8, atimeMs: 1561174616618.8555, mtimeMs: 1561174614584, ctimeMs: 1561174614583.8145, birthtimeMs: 1561174007710.7478, atime: 2019-06-22T03:36:56.619Z, mtime: 2019-06-22T03:36:54.584Z, ctime: 2019-06-22T03:36:54.584Z, birthtime: 2019-06-22T03:26:47.711Z }","title":"fs.stat(path[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsstatsyncpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u540c\u6b65\u7684 stat(2) \u3002","title":"fs.statSync(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fssymlinktarget-path-type-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 target | | path | | type callback err \u5f02\u6b65\u7684 symlink(2) \uff0c\u5b83\u4f1a\u521b\u5efa\u540d\u4e3a path \u7684\u94fe\u63a5\uff0c\u8be5\u94fe\u63a5\u6307\u5411 target \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 type \u53c2\u6570\u4ec5\u5728 Windows \u4e0a\u53ef\u7528\uff0c\u5728\u5176\u4ed6\u5e73\u53f0\u4e0a\u5219\u4f1a\u88ab\u5ffd\u7565\u3002 \u5b83\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a 'dir' \u3001 'file' \u6216 'junction' \u3002 \u5982\u679c\u672a\u8bbe\u7f6e type \u53c2\u6570\uff0c\u5219 Node \u5c06\u4f1a\u81ea\u52a8\u68c0\u6d4b target \u7684\u7c7b\u578b\u5e76\u4f7f\u7528 'file' \u6216 'dir' \u3002 \u5982\u679c target \u4e0d\u5b58\u5728\uff0c\u5219\u5c06\u4f1a\u4f7f\u7528 'file' \u3002 Windows \u4e0a\u7684\u8fde\u63a5\u70b9\u8981\u6c42\u76ee\u6807\u8def\u5f84\u662f\u7edd\u5bf9\u8def\u5f84\u3002 \u5f53\u4f7f\u7528 'junction' \u65f6\uff0c target \u53c2\u6570\u5c06\u4f1a\u81ea\u52a8\u5730\u6807\u51c6\u5316\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002 \u76f8\u5bf9\u76ee\u6807\u662f\u76f8\u5bf9\u4e8e\u94fe\u63a5\u7684\u7236\u76ee\u5f55\u3002 fs . symlink ( './mew' , './example/mewtwo' , callback ); \u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u5728 example \u4e2d\u521b\u5efa\u4e86\u7b26\u53f7\u94fe\u63a5 mewtwo \uff0c\u5b83\u6307\u5411\u540c\u4e00\u76ee\u5f55\u4e2d\u7684 mew \uff1a $ tree example/ example/ \u251c\u2500\u2500 mew \u2514\u2500\u2500 mewtwo -> ./mew","title":"fs.symlink(target, path[, type], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fssymlinksynctarget-path-type","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 target | | path | | type \u8fd4\u56de undefined \u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.symlink() \u3002","title":"fs.symlinkSync(target, path[, type])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fstruncatepath-len-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | len \u9ed8\u8ba4\u503c: 0 \u3002 callback err \u5f02\u6b65\u7684 truncate(2) \u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528 fs.ftruncate() \u3002 \u4e0d\u63a8\u8350\u4f20\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u53ef\u80fd\u5bfc\u81f4\u5c06\u6765\u629b\u51fa\u9519\u8bef\u3002","title":"fs.truncate(path[, len], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fstruncatesyncpath-len","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.8.6 path | | len \u9ed8\u8ba4\u503c: 0 \u3002 \u540c\u6b65\u7684 truncate(2) \u3002 \u8fd4\u56de undefined \u3002 \u6587\u4ef6\u63cf\u8ff0\u7b26\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u5165\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u8c03\u7528 fs.ftruncateSync() \u3002 \u4e0d\u63a8\u8350\u4f20\u5165\u6587\u4ef6\u63cf\u8ff0\u7b26\uff0c\u53ef\u80fd\u5bfc\u81f4\u5c06\u6765\u629b\u51fa\u9519\u8bef\u3002","title":"fs.truncateSync(path[, len])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsunlinkpath-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | callback err \u5f02\u6b65\u5730\u5220\u9664\u6587\u4ef6\u6216\u7b26\u53f7\u94fe\u63a5\u3002 \u9664\u4e86\u53ef\u80fd\u7684\u5f02\u5e38\uff0c\u5b8c\u6210\u56de\u8c03\u6ca1\u6709\u5176\u4ed6\u53c2\u6570\u3002 // \u5047\u8bbe 'path/file.txt' \u662f\u5e38\u89c4\u6587\u4ef6\u3002 fs . unlink ( 'path/file.txt' , ( err ) => { if ( err ) throw err ; console . log ( '\u6587\u4ef6\u5df2\u5220\u9664' ); }); fs.unlink() \u4e0d\u80fd\u7528\u4e8e\u76ee\u5f55\u3002 \u8981\u5220\u9664\u76ee\u5f55\uff0c\u5219\u4f7f\u7528 fs.rmdir() \u3002 \u4e5f\u53ef\u53c2\u9605 unlink(2) \u3002","title":"fs.unlink(path, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsunlinksyncpath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | \u540c\u6b65\u7684 unlink(2) \u3002\u8fd4\u56de undefined \u3002","title":"fs.unlinkSync(path)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsunwatchfilefilename-listener","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.31 filename | | listener \u53ef\u9009\u7684\uff0c\u4e4b\u524d\u4f7f\u7528 fs.watchFile() \u7ed1\u5b9a\u7684\u76d1\u542c\u5668\u3002 \u505c\u6b62\u76d1\u89c6 filename \u7684\u53d8\u5316\u3002 \u5982\u679c\u6307\u5b9a\u4e86 listener \uff0c\u5219\u4ec5\u79fb\u9664\u6b64\u7279\u5b9a\u76d1\u542c\u5668\uff0c\u5426\u5219\uff0c\u5c06\u79fb\u9664\u6240\u6709\u76d1\u542c\u5668\uff0c\u4ece\u800c\u505c\u6b62\u76d1\u89c6 filename \u3002 \u5bf9\u672a\u88ab\u76d1\u89c6\u7684\u6587\u4ef6\u540d\u8c03\u7528 fs.unwatchFile() \u5c06\u662f\u7a7a\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u9519\u8bef\u3002 \u4f7f\u7528 fs.watch() \u6bd4 fs.watchFile() \u548c fs.unwatchFile() \u66f4\u9ad8\u6548\u3002 \u5e94\u5c3d\u53ef\u80fd\u4f7f\u7528 fs.watch() \u4ee3\u66ff fs.watchFile() \u548c fs.unwatchFile() \u3002","title":"fs.unwatchFile(filename[, listener])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsutimespath-atime-mtime-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | atime | | mtime | | callback err \u66f4\u6539 path \u6307\u5411\u7684\u5bf9\u8c61\u7684\u6587\u4ef6\u7cfb\u7edf\u65f6\u95f4\u6233\u3002 atime \u548c mtime \u53c2\u6570\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a \u503c\u53ef\u4ee5\u662f\u8868\u793a Unix \u7eaa\u5143\u65f6\u95f4\u7684\u6570\u5b57\u3001 Date \u5bf9\u8c61\u3001\u6216\u7c7b\u4f3c '123456789.0' \u7684\u6570\u503c\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u8be5\u503c\u65e0\u6cd5\u8f6c\u6362\u4e3a\u6570\u503c\u3001\u6216\u503c\u4e3a NaN \u3001 Infinity \u6216 -Infinity \uff0c\u5219\u629b\u51fa\u9519\u8bef\u3002","title":"fs.utimes(path, atime, mtime, callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fsutimessyncpath-atime-mtime","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | atime | | mtime | | \u8fd4\u56de undefined \u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.utimes() \u3002","title":"fs.utimesSync(path, atime, mtime)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswatchfilename-options-listener","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 filename | | options | persistent \u6307\u793a\u5982\u679c\u6587\u4ef6\u5df2\u6b63\u88ab\u76d1\u89c6\uff0c\u8fdb\u7a0b\u662f\u5426\u5e94\u7ee7\u7eed\u8fd0\u884c\u3002 \u9ed8\u8ba4\u503c: true \u3002 recursive \u6307\u793a\u5e94\u8be5\u76d1\u89c6\u6240\u6709\u5b50\u76ee\u5f55\uff0c\u8fd8\u662f\u4ec5\u76d1\u89c6\u5f53\u524d\u76ee\u5f55\u3002\u8fd9\u9002\u7528\u4e8e\u76d1\u89c6\u76ee\u5f55\u65f6\uff0c\u5e76\u4e14\u4ec5\u9002\u7528\u4e8e\u53d7\u652f\u6301\u7684\u5e73\u53f0\uff08\u53c2\u9605 \u6ce8\u610f\u4e8b\u9879 \uff09\u3002 \u9ed8\u8ba4\u503c: false \u3002 encoding \u6307\u5b9a\u7528\u4e8e\u4f20\u7ed9\u76d1\u542c\u5668\u7684\u6587\u4ef6\u540d\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u9ed8\u8ba4\u503c: 'utf8' \u3002 listener | \u9ed8\u8ba4\u503c: undefined \u3002 eventType filename | \u8fd4\u56de: \u76d1\u89c6 filename \u7684\u66f4\u6539\uff0c\u5176\u4e2d filename \u662f\u6587\u4ef6\u6216\u76ee\u5f55\u3002 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u53ef\u9009\u7684\u3002 \u5982\u679c options \u4f20\u5165\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a encoding \u3002 \u5426\u5219\uff0c options \u5e94\u4f20\u5165\u5bf9\u8c61\u3002 \u76d1\u542c\u5668\u56de\u8c03\u6709\u4e24\u4e2a\u53c2\u6570 (eventType, filename) \u3002 eventType \u662f 'rename' \u6216 'change' \uff0c filename \u662f\u89e6\u53d1\u4e8b\u4ef6\u7684\u6587\u4ef6\u7684\u540d\u79f0\u3002 \u5728\u5927\u591a\u6570\u5e73\u53f0\u4e0a\uff0c\u6bcf\u5f53\u6587\u4ef6\u540d\u5728\u76ee\u5f55\u4e2d\u51fa\u73b0\u6216\u6d88\u5931\u65f6\uff0c\u5c31\u4f1a\u89e6\u53d1 'rename' \u4e8b\u4ef6\u3002 \u76d1\u542c\u5668\u56de\u8c03\u7ed1\u5b9a\u5728\u7531 fs.FSWatcher \u89e6\u53d1\u7684 'change' \u4e8b\u4ef6\u4e0a\uff0c\u4f46\u5b83\u4e0e eventType \u7684 'change' \u503c\u4e0d\u662f\u4e00\u56de\u4e8b\u3002","title":"fs.watch(filename[, options][, listener])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_8","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 fs.watch \u7684 API \u5728\u5404\u4e2a\u5e73\u53f0\u4e0a\u5e76\u975e 100\uff05 \u4e00\u81f4\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u53ef\u7528\u3002 \u4ec5\u5728 macOS \u548c Windows \u4e0a\u652f\u6301 recursive \u9009\u9879\u3002","title":"\u6ce8\u610f\u4e8b\u9879#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_9","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u7279\u6027\u53d6\u51b3\u4e8e\u5e95\u5c42\u64cd\u4f5c\u7cfb\u7edf\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cd\u901a\u77e5\u6587\u4ef6\u7cfb\u7edf\u66f4\u6539\u7684\u65b9\u6cd5\u3002 \u5728 Linux \u7cfb\u7edf\u4e0a\uff0c\u4f7f\u7528 inotify(7) \u3002 \u5728 BSD \u7cfb\u7edf\u4e0a\uff0c\u4f7f\u7528 kqueue(2) \u3002 \u5728 macOS \u7cfb\u7edf\u4e0a\uff0c\u5bf9\u6587\u4ef6\u4f7f\u7528 kqueue(2) \uff0c\u5bf9\u76ee\u5f55\u4f7f\u7528 FSEvents \u3002 \u5728 SunOS \u7cfb\u7edf\u4e0a\uff08\u5305\u62ec Solaris \u548c SmartOS\uff09\uff0c\u4f7f\u7528 \u4e8b\u4ef6\u7aef\u53e3 \u3002 \u5728 Windows \u7cfb\u7edf\u4e0a\uff0c\u6b64\u7279\u6027\u53d6\u51b3\u4e8e ReadDirectoryChangesW \u3002 \u5728 Aix \u7cfb\u7edf\u4e0a\uff0c\u6b64\u7279\u6027\u53d6\u51b3\u4e8e AHAFS \u5fc5\u987b\u542f\u52a8\u3002 \u5982\u679c\u5e95\u5c42\u529f\u80fd\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u4e0d\u53ef\u7528\uff0c\u5219 fs.watch \u5c06\u65e0\u6cd5\u8fd0\u884c\u3002 \u4f8b\u5982\uff0c\u5f53\u4f7f\u7528\u865a\u62df\u5316\u8f6f\u4ef6\uff08\u5982 Vagrant\u3001Docker \u7b49\uff09\u65f6\uff0c\u5728\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff08NFS\u3001SMB \u7b49\uff09\u6216\u4e3b\u6587\u4ef6\u7cfb\u7edf\u4e0a\u76d1\u89c6\u6587\u4ef6\u6216\u76ee\u5f55\u53ef\u80fd\u662f\u4e0d\u53ef\u9760\u7684\uff0c\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u4e5f\u662f\u4e0d\u53ef\u80fd\u7684\u3002 \u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528 fs.watchFile() \uff0c\u56e0\u4e3a\u5b83\u4f7f\u7528 stat \u8f6e\u8be2 \uff0c\u4f46\u8fd9\u79cd\u65b9\u6cd5\u8f83\u6162\u4e14\u4e0d\u592a\u53ef\u9760\u3002","title":"\u53ef\u7528\u6027#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_10","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5728 Linux \u6216 macOS \u7cfb\u7edf\u4e0a\uff0c fs.watch() \u89e3\u6790\u8def\u5f84\u5230 \u7d22\u5f15\u8282\u70b9 \u5e76\u76d1\u89c6\u8be5\u7d22\u5f15\u8282\u70b9\u3002 \u5982\u679c\u5220\u9664\u5e76\u91cd\u65b0\u521b\u5efa\u76d1\u89c6\u7684\u8def\u5f84\uff0c\u5219\u4f1a\u4e3a\u5176\u5206\u914d\u4e00\u4e2a\u65b0\u7684\u7d22\u5f15\u8282\u70b9\u3002 \u76d1\u89c6\u5668\u4f1a\u56e0\u5220\u9664\u800c\u89e6\u53d1\u4e8b\u4ef6\uff0c\u4f46\u4f1a\u7ee7\u7eed\u76d1\u89c6\u539f\u59cb\u7684\u7d22\u5f15\u8282\u70b9\u3002 \u4e0d\u4f1a\u56e0\u65b0\u5efa\u7d22\u5f15\u8282\u70b9\u800c\u89e6\u53d1\u4e8b\u4ef6\u3002 \u8fd9\u662f\u9884\u671f\u7684\u884c\u4e3a\u3002 AIX \u6587\u4ef6\u5728\u6587\u4ef6\u7684\u751f\u547d\u5468\u671f\u4e2d\u4fdd\u7559\u76f8\u540c\u7684\u7d22\u5f15\u8282\u70b9\u3002 \u5728 AIX \u4e0a\u4fdd\u5b58\u548c\u5173\u95ed\u76d1\u89c6\u7684\u6587\u4ef6\u5c06\u5bfc\u81f4\u4e24\u4e2a\u901a\u77e5\uff08\u4e00\u4e2a\u7528\u4e8e\u6dfb\u52a0\u65b0\u5185\u5bb9\uff0c\u4e00\u4e2a\u7528\u4e8e\u622a\u65ad\uff09\u3002","title":"\u7d22\u5f15\u8282\u70b9#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_11","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ec5\u5728 Linux\u3001macOS\u3001Windows \u548c AIX \u4e0a\u652f\u6301\u5728\u56de\u8c03\u4e2d\u63d0\u4f9b filename \u53c2\u6570\u3002 \u5373\u4f7f\u5728\u652f\u6301\u7684\u5e73\u53f0\u4e0a\uff0c\u4e5f\u4e0d\u603b\u662f\u4fdd\u8bc1\u63d0\u4f9b filename \u3002 \u56e0\u6b64\uff0c\u4e0d\u8981\u5047\u8bbe\u5728\u56de\u8c03\u4e2d\u59cb\u7ec8\u63d0\u4f9b filename \u53c2\u6570\uff0c\u5e76\u4e14\u5982\u679c\u5b83\u4e3a null \u5219\u9700\u8981\u4e00\u4e9b\u540e\u5907\u903b\u8f91\u3002 fs . watch ( 'somedir' , ( eventType , filename ) => { console . log ( `\u4e8b\u4ef6\u7c7b\u578b\u662f: ${ eventType } ` ); if ( filename ) { console . log ( `\u63d0\u4f9b\u7684\u6587\u4ef6\u540d: ${ filename } ` ); } else { console . log ( '\u6587\u4ef6\u540d\u672a\u63d0\u4f9b' ); } });","title":"\u6587\u4ef6\u540d\u53c2\u6570#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswatchfilefilename-options-listener","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 filename | | options persistent \u9ed8\u8ba4\u503c: true \u3002 interval \u9ed8\u8ba4\u503c: 5007 \u3002 listener current previous \u76d1\u89c6 filename \u7684\u66f4\u6539\u3002 \u6bcf\u5f53\u8bbf\u95ee\u6587\u4ef6\u65f6\u90fd\u4f1a\u8c03\u7528 listener \u56de\u8c03\u3002 options \u53c2\u6570\u53ef\u4ee5\u7701\u7565\u3002 \u5982\u679c\u63d0\u4f9b\uff0c\u5219\u5b83\u5e94\u8be5\u662f\u4e00\u4e2a\u5bf9\u8c61\u3002 options \u5bf9\u8c61\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u540d\u4e3a persistent \u7684\u5e03\u5c14\u503c\uff0c\u6307\u793a\u5f53\u6587\u4ef6\u6b63\u5728\u88ab\u76d1\u89c6\u65f6\uff0c\u8fdb\u7a0b\u662f\u5426\u5e94\u8be5\u7ee7\u7eed\u8fd0\u884c\u3002 options \u5bf9\u8c61\u53ef\u4ee5\u6307\u5b9a interval \u5c5e\u6027\uff0c\u6307\u793a\u8f6e\u8be2\u76ee\u6807\u7684\u9891\u7387\uff08\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\uff09\u3002 listener \u6709\u4e24\u4e2a\u53c2\u6570\uff0c\u5f53\u524d\u7684 stat \u5bf9\u8c61\u548c\u4e4b\u524d\u7684 stat \u5bf9\u8c61\uff1a fs . watchFile ( 'message.text' , ( curr , prev ) => { console . log ( `\u5f53\u524d\u7684\u6700\u8fd1\u4fee\u6539\u65f6\u95f4\u662f: ${ curr . mtime } ` ); console . log ( `\u4e4b\u524d\u7684\u6700\u8fd1\u4fee\u6539\u65f6\u95f4\u662f: ${ prev . mtime } ` ); }); \u8fd9\u4e9b stat \u5bf9\u8c61\u662f fs.Stat \u7684\u5b9e\u4f8b\u3002 \u8981\u5728\u4fee\u6539\u6587\u4ef6\uff08\u800c\u4e0d\u4ec5\u4ec5\u662f\u8bbf\u95ee\uff09\u65f6\u6536\u5230\u901a\u77e5\uff0c\u5219\u9700\u8981\u6bd4\u8f83 curr.mtime \u548c prev.mtime \u3002 \u5f53 fs.watchFile \u64cd\u4f5c\u5bfc\u81f4 ENOENT \u9519\u8bef\u65f6\uff0c\u5b83\u5c06\u8c03\u7528\u4e00\u6b21\u76d1\u542c\u5668\uff0c\u5e76\u5c06\u6240\u6709\u5b57\u6bb5\u7f6e\u96f6\uff08\u6216\u5c06\u65e5\u671f\u8bbe\u4e3a Unix \u7eaa\u5143\uff09\u3002 \u5982\u679c\u6587\u4ef6\u662f\u5728\u90a3\u4e4b\u540e\u521b\u5efa\u7684\uff0c\u5219\u76d1\u542c\u5668\u4f1a\u88ab\u518d\u6b21\u8c03\u7528\uff0c\u4e14\u5e26\u4e0a\u6700\u65b0\u7684 stat \u5bf9\u8c61\u3002 \u8fd9\u662f v0.10 \u4e4b\u540e\u7684\u529f\u80fd\u53d8\u5316\u3002 \u4f7f\u7528 fs.watch() \u6bd4 fs.watchFile \u548c fs.unwatchFile \u66f4\u9ad8\u6548\u3002 \u5e94\u5c3d\u53ef\u80fd\u4f7f\u7528 fs.watch \u4ee3\u66ff fs.watchFile \u548c fs.unwatchFile \u3002 \u5f53 fs.watchFile() \u6b63\u5728\u76d1\u89c6\u7684\u6587\u4ef6\u6d88\u5931\u5e76\u91cd\u65b0\u51fa\u73b0\u65f6\uff0c\u7b2c\u4e8c\u6b21\u56de\u8c03\u4e8b\u4ef6\uff08\u6587\u4ef6\u91cd\u65b0\u51fa\u73b0\uff09\u8fd4\u56de\u7684 previousStat \u4f1a\u4e0e\u7b2c\u4e00\u6b21\u56de\u8c03\u4e8b\u4ef6\uff08\u6587\u4ef6\u6d88\u5931\uff09\u8fd4\u56de\u7684 previousStat \u76f8\u540c\u3002 \u8fd9\u79cd\u60c5\u51b5\u53d1\u751f\u5728: \u6587\u4ef6\u88ab\u5220\u9664\uff0c\u7136\u540e\u53c8\u6062\u590d\u3002 \u6587\u4ef6\u88ab\u91cd\u547d\u540d\uff0c\u7136\u540e\u518d\u7b2c\u4e8c\u6b21\u91cd\u547d\u540d\u56de\u5176\u539f\u6765\u7684\u540d\u79f0\u3002","title":"fs.watchFile(filename[, options], listener)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswritefd-buffer-offset-length-position-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd buffer | | offset length position callback err bytesWritten buffer | | \u5c06 buffer \u5199\u5165\u5230 fd \u6307\u5b9a\u7684\u6587\u4ef6\u3002 offset \u51b3\u5b9a buffer \u4e2d\u8981\u88ab\u5199\u5165\u7684\u90e8\u4f4d\uff0c length \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u6307\u5b9a\u8981\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c typeof position !== 'number' \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u53c2\u9605 pwrite(2) \u3002 \u56de\u8c03\u6709\u4e09\u4e2a\u53c2\u6570 (err, bytesWritten, buffer) \uff0c\u5176\u4e2d bytesWritten \u6307\u5b9a buffer \u4e2d\u88ab\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u5982\u679c\u8c03\u7528\u6b64\u65b9\u6cd5\u7684 util.promisify() \u7248\u672c\uff0c\u5219\u8fd4\u56de\u7684 Promise \u4f1a\u8fd4\u56de\u5177\u6709 bytesWritten \u548c buffer \u5c5e\u6027\u7684 Object \u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 fs.write() \u4e14\u4e0d\u7b49\u5f85\u56de\u8c03\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002","title":"fs.write(fd, buffer[, offset[, length[, position]]], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswritefd-string-position-encoding-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd string position encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 callback err written string \u5c06 string \u5199\u5165\u5230 fd \u6307\u5b9a\u7684\u6587\u4ef6\u3002 \u5982\u679c string \u4e0d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u8be5\u503c\u4f1a\u88ab\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c typeof position !== 'number' \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u53c2\u9605 pwrite(2) \u3002 encoding \u662f\u671f\u671b\u7684\u5b57\u7b26\u4e32\u7f16\u7801\u3002 \u56de\u8c03\u4f1a\u63a5\u6536\u5230\u53c2\u6570 (err, written, string) \uff0c\u5176\u4e2d written \u6307\u5b9a\u4f20\u5165\u7684\u5b57\u7b26\u4e32\u4e2d\u88ab\u8981\u6c42\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u88ab\u5199\u5165\u7684\u5b57\u8282\u6570\u4e0d\u4e00\u5b9a\u4e0e\u88ab\u5199\u5165\u7684\u5b57\u7b26\u4e32\u5b57\u7b26\u6570\u76f8\u540c\u3002 \u53c2\u9605 Buffer.byteLength \u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 fs.write() \u4e14\u4e0d\u7b49\u5f85\u56de\u8c03\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002 \u5728 Windows \u4e0a\uff0c\u5982\u679c\u6587\u4ef6\u63cf\u8ff0\u7b26\u8fde\u63a5\u5230\u63a7\u5236\u53f0\uff08\u4f8b\u5982 fd == 1 \u6216 stdout \uff09\uff0c\u5219\u65e0\u8bba\u4f7f\u7528\u4f55\u79cd\u7f16\u7801\uff0c\u5305\u542b\u975e ASCII \u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u90fd\u4e0d\u4f1a\u88ab\u6b63\u786e\u5730\u6e32\u67d3\u3002 \u901a\u8fc7\u4f7f\u7528 chcp 65001 \u547d\u4ee4\u66f4\u6539\u6d3b\u52a8\u7684\u4ee3\u7801\u9875\uff0c\u53ef\u4ee5\u5c06\u63a7\u5236\u53f0\u914d\u7f6e\u4e3a\u6b63\u786e\u5730\u6e32\u67d3 UTF-8\u3002 \u8be6\u89c1 chcp \u6587\u6863\u3002","title":"fs.write(fd, string[, position[, encoding]], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswritefilefile-data-options-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 file | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 data | | | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'w' \u3002 callback err \u5f53 file \u662f\u4e00\u4e2a\u6587\u4ef6\u540d\u65f6\uff0c\u5f02\u6b65\u5730\u5c06\u6570\u636e\u5199\u5165\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u8986\u76d6\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 buffer\u3002 \u5f53 file \u662f\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u65f6\uff0c\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u76f4\u63a5\u8c03\u7528 fs.write() \uff08\u5efa\u8bae\u4f7f\u7528\uff09\u3002 \u8bf7\u53c2\u9605\u4ee5\u4e0b\u6709\u5173\u4f7f\u7528\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u8bf4\u660e\u3002 \u5982\u679c data \u662f\u4e00\u4e2a buffer\uff0c\u5219 encoding \u9009\u9879\u4f1a\u88ab\u5ffd\u7565\u3002 const data = new Uint8Array ( Buffer . from ( 'Node.js\u4e2d\u6587\u7f51' )); fs . writeFile ( '\u6587\u4ef6.txt' , data , ( err ) => { if ( err ) throw err ; console . log ( '\u6587\u4ef6\u5df2\u88ab\u4fdd\u5b58' ); }); \u5982\u679c options \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff1a fs . writeFile ( '\u6587\u4ef6.txt' , 'Node.js\u4e2d\u6587\u7f51' , 'utf8' , callback ); \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 fs.writeFile() \u4e14\u4e0d\u7b49\u5f85\u56de\u8c03\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002","title":"fs.writeFile(file, data[, options], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswritefile","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5f53 file \u662f\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u65f6\uff0c\u884c\u4e3a\u51e0\u4e4e\u4e0e\u76f4\u63a5\u8c03\u7528 fs.write() \u7c7b\u4f3c\uff1a fs . write ( fd , Buffer . from ( data , options . encoding ), callback ); \u4e0e\u76f4\u63a5\u8c03\u7528 fs.write() \u7684\u533a\u522b\u5728\u4e8e\uff0c\u5728\u67d0\u4e9b\u5f02\u5e38\u60c5\u51b5\u4e0b\uff0c fs.write() \u53ef\u80fd\u53ea\u5199\u5165\u90e8\u5206 buffer\uff0c\u9700\u8981\u91cd\u8bd5\u4ee5\u5199\u5165\u5269\u4f59\u7684\u6570\u636e\uff0c\u800c fs.writeFile() \u5c06\u4f1a\u91cd\u8bd5\u76f4\u5230\u6570\u636e\u5b8c\u5168\u5199\u5165\uff08\u6216\u53d1\u751f\u9519\u8bef\uff09\u3002 \u8fd9\u79cd\u5f71\u54cd\u662f\u6df7\u6dc6\u7684\u5e38\u89c1\u539f\u56e0\u3002 \u5728\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u60c5\u51b5\u4e0b\uff0c\u6587\u4ef6\u4e0d\u4f1a\u88ab\u66ff\u6362\uff01 \u6570\u636e\u4e0d\u4e00\u5b9a\u5199\u5165\u5230\u6587\u4ef6\u7684\u5f00\u5934\uff0c\u6587\u4ef6\u7684\u539f\u59cb\u6570\u636e\u53ef\u4ee5\u4fdd\u7559\u5728\u65b0\u5199\u5165\u7684\u6570\u636e\u4e4b\u524d\u548c/\u6216\u4e4b\u540e\u3002 \u4f8b\u5982\uff0c\u5982\u679c\u8fde\u7eed\u4e24\u6b21\u8c03\u7528 fs.writeFile() \uff0c\u9996\u5148\u5199\u5165\u5b57\u7b26\u4e32 'Hello' \uff0c\u7136\u540e\u5199\u5165\u5b57\u7b26\u4e32 ', World' \uff0c\u5219\u8be5\u6587\u4ef6\u5c06\u4f1a\u5305\u542b 'Hello, World' \uff0c\u5e76\u4e14\u53ef\u80fd\u5305\u542b\u6587\u4ef6\u7684\u4e00\u4e9b\u539f\u59cb\u6570\u636e\uff08\u53d6\u51b3\u4e8e\u539f\u59cb\u6587\u4ef6\u7684\u5927\u5c0f\u548c\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c\u4f7f\u7528\u4e86\u6587\u4ef6\u540d\u800c\u4e0d\u662f\u63cf\u8ff0\u7b26\uff0c\u5219\u8be5\u6587\u4ef6\u5c06\u4f1a\u4fdd\u8bc1\u4ec5\u5305\u542b ', World' \u3002","title":"\u4f7f\u7528 fs.writeFile() \u4e0e\u6587\u4ef6\u63cf\u8ff0\u7b26#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswritefilesyncfile-data-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 file | | | \u6587\u4ef6\u540d\u6216\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 data | | | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'w' \u3002 \u8fd4\u56de undefined \u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.writeFile() \u3002","title":"fs.writeFileSync(file, data[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswritesyncfd-buffer-offset-length-position","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd buffer | | offset length position \u8fd4\u56de: \u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.write(fd, buffer...) \u3002","title":"fs.writeSync(fd, buffer[, offset[, length[, position]]])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswritesyncfd-string-position-encoding","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 fd string position encoding \u8fd4\u56de: \u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.write(fd, string...) \u3002","title":"fs.writeSync(fd, string[, position[, encoding]])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswritevfd-buffers-position-callback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.9.0 fd buffers position callback err bytesWritten buffers \u4f7f\u7528 writev() \u5c06\u4e00\u4e2a ArrayBufferView \u6570\u7ec4\u5199\u5165 fd \u6307\u5b9a\u7684\u6587\u4ef6\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c typeof position !== 'number' \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u56de\u8c03\u6709\u4e09\u4e2a\u53c2\u6570\uff1a err \u3001 bytesWritten \u548c buffers \u3002 bytesWritten \u662f\u4ece buffers \u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u5982\u679c\u6b64\u65b9\u6cd5\u662f util.promisify() \u5316\u7684\u7248\u672c\uff0c\u5219\u5b83\u8fd4\u56de\u7684 Promise \u4f1a\u8fd4\u56de\u5177\u6709 bytesWritten \u548c buffers \u5c5e\u6027\u7684 Object \u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 fs.writev() \u4e14\u4e0d\u7b49\u5f85\u56de\u8c03\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002","title":"fs.writev(fd, buffers[, position], callback)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fswritevsyncfd-buffers-position","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.9.0 fd buffers position \u8fd4\u56de: \u5199\u5165\u7684\u5b57\u8282\u6570\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605\u6b64 API \u7684\u5f02\u6b65\u7248\u672c\u7684\u6587\u6863\uff1a fs.writev() \u3002","title":"fs.writevSync(fd, buffers[, position])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fs-promise-api","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 fs.promises API \u63d0\u4f9b\u4e86\u4e00\u7ec4\u5907\u7528\u7684\u5f02\u6b65\u6587\u4ef6\u7cfb\u7edf\u7684\u65b9\u6cd5\uff0c\u5b83\u4eec\u8fd4\u56de Promise \u5bf9\u8c61\u800c\u4e0d\u662f\u4f7f\u7528\u56de\u8c03\u3002 API \u53ef\u901a\u8fc7 require('fs').promises \u8bbf\u95ee\u3002","title":"fs \u7684 Promise API#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandle","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 FileHandle \u5bf9\u8c61\u662f\u6570\u5b57\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u5305\u88c5\u5668\u3002 FileHandle \u7684\u5b9e\u4f8b\u4e0e\u6570\u5b57\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u5b83\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9762\u5411\u5bf9\u8c61\u7684 API \u6765\u5904\u7406\u6587\u4ef6\u3002 \u5982\u679c\u6ca1\u6709\u4f7f\u7528 filehandle.close() \u65b9\u6cd5\u5173\u95ed FileHandle \uff0c\u5219\u5b83\u53ef\u80fd\u4f1a\u81ea\u52a8\u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\u5e76\u89e6\u53d1\u8fdb\u7a0b\u8b66\u544a\uff0c\u4ece\u800c\u6709\u52a9\u4e8e\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\u3002 \u8bf7\u4e0d\u8981\u5728\u4ee3\u7801\u4e2d\u4f9d\u8d56\u6b64\u884c\u4e3a\uff0c\u56e0\u4e3a\u5b83\u4e0d\u53ef\u9760\uff0c\u4e14\u4f60\u7684\u6587\u4ef6\u53ef\u80fd\u65e0\u6cd5\u5173\u95ed\u3002 \u76f8\u53cd\uff0c\u5e94\u8be5\u59cb\u7ec8\u663e\u5f0f\u7684\u5173\u95ed FileHandles \u3002 Node.js \u5c06\u6765\u53ef\u80fd\u4f1a\u6539\u53d8\u8fd9\u79cd\u884c\u4e3a\u3002 FileHandle \u5bf9\u8c61\u7684\u5b9e\u4f8b\u7531 fsPromises.open() \u65b9\u6cd5\u5728\u5185\u90e8\u521b\u5efa\u3002 \u4e0e\u57fa\u4e8e\u56de\u8c03\u7684 API\uff08\u5982 fs.fstat() \u3001 fs.fchown() \u3001 fs.fchmod() \u7b49\uff09\u4e0d\u540c\uff0c\u57fa\u4e8e promise \u7684 API \u4e0d\u4f7f\u7528\u6570\u5b57\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 \u800c\u662f\uff0c\u57fa\u4e8e promise \u7684 API \u4f7f\u7528 FileHandle \u7c7b\uff0c\u4ee5\u5e2e\u52a9\u907f\u514d\u5728\u89e3\u51b3\u6216\u62d2\u7edd Promise \u540e\u610f\u5916\u6cc4\u6f0f\u672a\u5173\u95ed\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002","title":"FileHandle \u7c7b#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandleappendfiledata-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 data | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'a' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5c1a\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 Buffer \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 FileHandle \u5fc5\u987b\u88ab\u6253\u5f00\u7528\u4ee5\u8ffd\u52a0\u3002","title":"filehandle.appendFile(data, options)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandlechmodmode","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 mode \u8fd4\u56de: \u66f4\u6539\u6587\u4ef6\u7684\u6743\u9650\u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002","title":"filehandle.chmod(mode)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandlechownuid-gid","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 uid gid \u8fd4\u56de: \u66f4\u6539\u6587\u4ef6\u7684\u6240\u6709\u8005\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002","title":"filehandle.chown(uid, gid)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandleclose","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 \u8fd4\u56de: \u5982\u679c\u5e95\u5c42\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u88ab\u5173\u95ed\u5219 Promise \u5c06\u4f1a\u88ab\u89e3\u51b3\uff0c\u5982\u679c\u5173\u95ed\u65f6\u53d1\u751f\u9519\u8bef\u5219\u5c06 Promise \u5c06\u4f1a\u88ab\u62d2\u7edd\u3002 \u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002 const fsPromises = require ( 'fs' ). promises ; async function openAndClose () { let filehandle ; try { filehandle = await fsPromises . open ( 'thefile.txt' , 'r' ); } finally { if ( filehandle !== undefined ) await filehandle . close (); } }","title":"filehandle.close()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandledatasync","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 \u8fd4\u56de: \u5f02\u6b65\u7684 fdatasync(2) \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002","title":"filehandle.datasync()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandlefd","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 \u7531 FileHandle \u5bf9\u8c61\u7ba1\u7406\u7684\u6570\u5b57\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002","title":"filehandle.fd#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandlereadbuffer-offset-length-position","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 buffer | offset length position \u8fd4\u56de: \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\u3002 buffer \u662f\u6570\u636e\u5c06\u5199\u5165\u7684\u7f13\u51b2\u533a\u3002 offset \u662f buffer \u4e2d\u5f00\u59cb\u5199\u5165\u7684\u504f\u79fb\u91cf\u3002 length \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u6307\u5b9a\u8981\u8bfb\u53d6\u7684\u5b57\u8282\u6570\u3002 position \u53c2\u6570\u6307\u5b9a\u4ece\u6587\u4ef6\u4e2d\u5f00\u59cb\u8bfb\u53d6\u7684\u4f4d\u7f6e\u3002 \u5982\u679c position \u4e3a null \uff0c\u5219\u4ece\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\u8bfb\u53d6\u6570\u636e\uff0c\u5e76\u66f4\u65b0\u6587\u4ef6\u4f4d\u7f6e\u3002 \u5982\u679c position \u662f\u6574\u6570\uff0c\u5219\u6587\u4ef6\u4f4d\u7f6e\u5c06\u4fdd\u6301\u4e0d\u53d8\u3002 \u6210\u529f\u8bfb\u53d6\u4e4b\u540e\uff0c Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u4e0a\u6709\u4e00\u4e2a bytesRead \u5c5e\u6027\uff08\u6307\u5b9a\u8bfb\u53d6\u7684\u5b57\u8282\u6570\uff09\u548c\u4e00\u4e2a buffer \u5c5e\u6027\uff08\u6307\u5411\u4f20\u5165\u7684 buffer \u53c2\u6570\uff09\u3002","title":"filehandle.read(buffer, offset, length, position)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandlereadfileoptions","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 options | encoding | \u9ed8\u8ba4\u503c: null flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u8bfb\u53d6\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\u3002 Promise \u88ab\u89e3\u51b3\u65f6\u4f1a\u5e26\u4e0a\u6587\u4ef6\u7684\u5185\u5bb9\u3002 \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff08\u4f7f\u7528 options.encoding \uff09\uff0c\u5219\u6570\u636e\u4f1a\u4ee5 Buffer \u5bf9\u8c61\u8fd4\u56de\u3002 \u5426\u5219\uff0c\u6570\u636e\u5c06\u4f1a\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 \u5f53 path \u662f\u76ee\u5f55\u65f6\uff0c fsPromises.readFile() \u7684\u884c\u4e3a\u662f\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u3002 \u5728 macOS\u3001Linux \u548c Windows \u4e0a\uff0cpromise \u5c06\u4f1a\u88ab\u62d2\u7edd\u5e76\u5e26\u4e0a\u4e00\u4e2a\u9519\u8bef\u3002 \u5728 FreeBSD \u4e0a\uff0c\u5219\u5c06\u4f1a\u8fd4\u56de\u76ee\u5f55\u5185\u5bb9\u7684\u8868\u793a\u3002 FileHandle \u5fc5\u987b\u652f\u6301\u8bfb\u53d6\u3002 \u5982\u679c\u5bf9\u6587\u4ef6\u53e5\u67c4\u8fdb\u884c\u4e86\u4e00\u6b21\u6216\u591a\u6b21 filehandle.read() \u8c03\u7528\uff0c\u7136\u540e\u518d\u8c03\u7528 filehandle.readFile() \uff0c\u5219\u5c06\u4ece\u5f53\u524d\u4f4d\u7f6e\u8bfb\u53d6\u6570\u636e\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002 \u5b83\u5e76\u4e0d\u603b\u662f\u4ece\u6587\u4ef6\u7684\u5f00\u5934\u8bfb\u53d6\u3002","title":"filehandle.readFile(options)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandlestatoptions","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u68c0\u7d22\u6587\u4ef6\u7684 fs.Stats \u3002","title":"filehandle.stat([options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandlesync","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 \u8fd4\u56de: \u5f02\u6b65\u7684 fsync(2) \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002","title":"filehandle.sync()#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandletruncatelen","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 len \u9ed8\u8ba4\u503c: 0 \u8fd4\u56de: \u622a\u65ad\u6587\u4ef6\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5982\u679c\u6587\u4ef6\u5927\u4e8e len \u4e2a\u5b57\u8282\uff0c\u5219\u53ea\u6709\u524d\u9762 len \u4e2a\u5b57\u8282\u4f1a\u4fdd\u7559\u5728\u6587\u4ef6\u4e2d\u3002 \u4f8b\u5982\uff0c\u4ee5\u4e0b\u7a0b\u5e8f\u53ea\u4fdd\u7559\u6587\u4ef6\u7684\u524d 4 \u4e2a\u5b57\u8282\uff1a const fs = require ( 'fs' ); const fsPromises = fs . promises ; console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370: Node.js async function doTruncate () { let filehandle = null ; try { filehandle = await fsPromises . open ( 'temp.txt' , 'r+' ); await filehandle . truncate ( 4 ); } finally { if ( filehandle ) { // \u5982\u679c\u6587\u4ef6\u5df2\u6253\u5f00\uff0c\u5219\u5173\u95ed\u6587\u4ef6\u3002 await filehandle . close (); } } console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370: Node } doTruncate (). catch ( console . error ); \u5982\u679c\u6587\u4ef6\u5c0f\u4e8e len \u4e2a\u5b57\u8282\uff0c\u5219\u4f1a\u5bf9\u5176\u8fdb\u884c\u6269\u5c55\uff0c\u5e76\u4e14\u6269\u5c55\u90e8\u5206\u5c06\u586b\u5145\u7a7a\u5b57\u8282\uff08 '\\0' \uff09\uff1a const fs = require ( 'fs' ); const fsPromises = fs . promises ; console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370: Node.js async function doTruncate () { let filehandle = null ; try { filehandle = await fsPromises . open ( 'temp.txt' , 'r+' ); await filehandle . truncate ( 10 ); } finally { if ( filehandle ) { // \u5982\u679c\u6587\u4ef6\u5df2\u6253\u5f00\uff0c\u5219\u5173\u95ed\u6587\u4ef6\u3002 await filehandle . close (); } } console . log ( fs . readFileSync ( 'temp.txt' , 'utf8' )); // \u6253\u5370 Node.js\\0\\0\\0 } doTruncate (). catch ( console . error ); \u6700\u540e 3 \u4e2a\u5b57\u8282\u662f\u7a7a\u5b57\u8282\uff08 '\\0' \uff09\uff0c\u4ee5\u8865\u5145\u8d85\u51fa\u7684\u622a\u65ad\u3002","title":"filehandle.truncate(len)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandleutimesatime-mtime","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 atime | | mtime | | \u8fd4\u56de: \u66f4\u6539 FileHandle \u6307\u5411\u7684\u5bf9\u8c61\u7684\u6587\u4ef6\u7cfb\u7edf\u65f6\u95f4\u6233\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u6b64\u51fd\u6570\u5728 7.1 \u4e4b\u524d\u7684 AIX \u7248\u672c\u4e0a\u4e0d\u8d77\u4f5c\u7528\uff0c\u5b83\u5c06\u4f1a\u89e3\u51b3 Promise \u5e76\u5e26\u4e0a\u4f7f\u7528 UV_ENOSYS \u4ee3\u7801\u7684\u9519\u8bef\u3002","title":"filehandle.utimes(atime, mtime)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandlewritebuffer-offset-length-position","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 buffer | offset length position \u8fd4\u56de: \u5c06 buffer \u5199\u5165\u5230\u6587\u4ef6\u3002 Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u5305\u542b\u4e00\u4e2a bytesWritten \u5c5e\u6027\uff08\u6307\u5b9a\u5199\u5165\u7684\u5b57\u8282\u6570\uff09\u548c\u4e00\u4e2a buffer \u5c5e\u6027\uff08\u6307\u5411\u5199\u5165\u7684 buffer \uff09\u3002 offset \u51b3\u5b9a buffer \u4e2d\u8981\u88ab\u5199\u5165\u7684\u90e8\u4f4d\uff0c length \u662f\u4e00\u4e2a\u6574\u6570\uff0c\u6307\u5b9a\u8981\u5199\u5165\u7684\u5b57\u8282\u6570\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c typeof position !== 'number' \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u53c2\u9605 pwrite(2) \u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 filehandle.write() \u4e14\u4e0d\u7b49\u5f85 Promise \u88ab\u89e3\u51b3\uff08\u6216\u88ab\u62d2\u7edd\uff09\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002","title":"filehandle.write(buffer[, offset[, length[, position]]])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandlewritestring-position-encoding","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 string position encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u5c06 string \u5199\u5165\u5230\u6587\u4ef6\u3002 \u5982\u679c string \u4e0d\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u8be5\u503c\u4f1a\u88ab\u5f3a\u5236\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u3002 Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u5305\u542b\u4e00\u4e2a bytesWritten \u5c5e\u6027\uff08\u6307\u5b9a\u5199\u5165\u7684\u5b57\u8282\u6570\uff09\u548c\u4e00\u4e2a buffer \u5c5e\u6027\uff08\u6307\u5411\u5199\u5165\u7684 string \uff09\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c position \u7684\u7c7b\u578b\u4e0d\u662f\u4e00\u4e2a number \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u53c2\u9605 pwrite(2) \u3002 encoding \u662f\u671f\u671b\u7684\u5b57\u7b26\u4e32\u7f16\u7801\u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 filehandle.write() \u4e14\u4e0d\u7b49\u5f85 Promise \u88ab\u89e3\u51b3\uff08\u6216\u88ab\u62d2\u7edd\uff09\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u5efa\u8bae\u4f7f\u7528 fs.createWriteStream() \u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002","title":"filehandle.write(string[, position[, encoding]])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandlewritefiledata-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 data | | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'w' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u5c06\u6570\u636e\u5199\u5165\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u8986\u76d6\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 buffer\u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5982\u679c data \u662f\u4e00\u4e2a buffer\uff0c\u5219 encoding \u9009\u9879\u4f1a\u88ab\u5ffd\u7565\u3002 \u5982\u679c options \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 FileHandle \u5fc5\u987b\u652f\u6301\u5199\u5165\u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 filehandle.writeFile() \u4e14\u4e0d\u7b49\u5f85 Promise \u88ab\u89e3\u51b3\uff08\u6216\u88ab\u62d2\u7edd\uff09\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5982\u679c\u5bf9\u6587\u4ef6\u53e5\u67c4\u8fdb\u884c\u4e86\u4e00\u6b21\u6216\u591a\u6b21 filehandle.write() \u8c03\u7528\uff0c\u7136\u540e\u518d\u8c03\u7528 filehandle.writeFile() \uff0c\u5219\u5c06\u4ece\u5f53\u524d\u4f4d\u7f6e\u5199\u5165\u6570\u636e\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002 \u5b83\u5e76\u4e0d\u603b\u662f\u4ece\u6587\u4ef6\u7684\u5f00\u5934\u5199\u5165\u3002","title":"filehandle.writeFile(data, options)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#filehandlewritevbuffers-position","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.9.0 buffers position \u8fd4\u56de: \u5c06 ArrayBufferViews \u6570\u7ec4\u5199\u5165\u8be5\u6587\u4ef6\u3002 Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5bf9\u8c61\u5305\u542b\u4e00\u4e2a bytesWritten \u5c5e\u6027\uff08\u8868\u660e\u5199\u5165\u7684\u5b57\u8282\u6570\uff09\u548c\u4e00\u4e2a buffers \u5c5e\u6027\uff08\u6307\u5411 buffers \u8f93\u5165\uff09\u3002 position \u6307\u5b9a\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff08\u6570\u636e\u5e94\u8be5\u88ab\u5199\u5165\u7684\u4f4d\u7f6e\uff09\u3002 \u5982\u679c typeof position !== 'number' \uff0c\u5219\u6570\u636e\u4f1a\u88ab\u5199\u5165\u5f53\u524d\u7684\u4f4d\u7f6e\u3002 \u5728\u540c\u4e00\u6587\u4ef6\u4e0a\u591a\u6b21\u8c03\u7528 writev() \u4e14\u4e0d\u7b49\u5f85\u524d\u9762\u7684\u64cd\u4f5c\u5b8c\u6210\uff0c\u8fd9\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002","title":"filehandle.writev(buffers[, position])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesaccesspath-mode","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | mode \u9ed8\u8ba4\u503c: fs.constants.F_OK \u3002 \u8fd4\u56de: \u6d4b\u8bd5\u7528\u6237\u5bf9 path \u6307\u5b9a\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6743\u9650\u3002 mode \u53c2\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u8981\u6267\u884c\u7684\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u3002 mode \u53ef\u9009\u7684\u503c\u53c2\u9605 \u6587\u4ef6\u53ef\u8bbf\u95ee\u6027\u7684\u5e38\u91cf \u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u4f8b\u5982 fs.constants.W_OK | fs.constants.R_OK \uff09\u3002 \u5982\u679c\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u6210\u529f\uff0c\u5219 Promise \u4f1a\u88ab\u89e3\u51b3\u4e14\u4e0d\u5e26\u503c\u3002 \u5982\u679c\u4efb\u4f55\u53ef\u8bbf\u95ee\u6027\u68c0\u67e5\u5931\u8d25\uff0c\u5219 Promise \u4f1a\u88ab\u62d2\u7edd\u5e76\u5e26\u4e0a Error \u5bf9\u8c61\u3002 \u4ee5\u4e0b\u793a\u4f8b\u4f1a\u68c0\u67e5\u5f53\u524d\u8fdb\u7a0b\u662f\u5426\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165 /etc/passwd \u6587\u4ef6\u3002 const fs = require ( 'fs' ); const fsPromises = fs . promises ; fsPromises . access ( '/etc/passwd' , fs . constants . R_OK | fs . constants . W_OK ) . then (() => console . log ( '\u53ef\u4ee5\u8bbf\u95ee' )) . catch (() => console . error ( '\u4e0d\u53ef\u8bbf\u95ee' )); \u4e0d\u5efa\u8bae\u5728\u8c03\u7528 fsPromises.open() \u4e4b\u524d\u4f7f\u7528 fsPromises.access() \u68c0\u67e5\u6587\u4ef6\u7684\u53ef\u8bbf\u95ee\u6027\u3002 \u8fd9\u6837\u505a\u4f1a\u5f15\u5165\u7ade\u6001\u6761\u4ef6\uff0c\u56e0\u4e3a\u5176\u4ed6\u8fdb\u7a0b\u53ef\u80fd\u4f1a\u5728\u4e24\u4e2a\u8c03\u7528\u4e4b\u95f4\u66f4\u6539\u6587\u4ef6\u7684\u72b6\u6001\u3002 \u76f8\u53cd\uff0c\u5e94\u8be5\u76f4\u63a5\u6253\u5f00\u3001\u8bfb\u53d6\u6216\u5199\u5165\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u65e0\u6cd5\u8bbf\u95ee\u5219\u5904\u7406\u5f15\u53d1\u7684\u9519\u8bef\u3002","title":"fsPromises.access(path[, mode])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesappendfilepath-data-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | | \u6587\u4ef6\u540d\u6216 FileHandle \u3002 data | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002\u9ed8\u8ba4\u503c: 'a' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5c1a\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 Buffer \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 path \u53ef\u4ee5\u6307\u5b9a\u4e3a\u5df2\u6253\u5f00\u7528\u4e8e\u8ffd\u52a0\uff08\u4f7f\u7528 fsPromises.open() \uff09\u7684 FileHandle \u3002","title":"fsPromises.appendFile(path, data[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromiseschmodpath-mode","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | mode \u8fd4\u56de: \u66f4\u6539\u6587\u4ef6\u7684\u6743\u9650\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002","title":"fsPromises.chmod(path, mode)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromiseschownpath-uid-gid","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | uid gid \u8fd4\u56de: \u66f4\u6539\u6587\u4ef6\u7684\u6240\u6709\u8005\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002","title":"fsPromises.chown(path, uid, gid)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisescopyfilesrc-dest-flags","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 src | | \u8981\u62f7\u8d1d\u7684\u6e90\u6587\u4ef6\u540d\u3002 dest | | \u62f7\u8d1d\u64cd\u4f5c\u7684\u76ee\u6807\u6587\u4ef6\u540d\u3002 flags \u7528\u4e8e\u62f7\u8d1d\u64cd\u4f5c\u7684\u4fee\u9970\u7b26\u3002 \u9ed8\u8ba4\u503c: 0 \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u5c06 src \u62f7\u8d1d\u5230 dest \u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c dest \u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u8986\u76d6\u5b83\u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 Node.js \u4e0d\u4fdd\u8bc1\u62f7\u8d1d\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u3002 \u5982\u679c\u5728\u6253\u5f00\u76ee\u6807\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u540e\u53d1\u751f\u9519\u8bef\uff0c\u5219 Node.js \u5c06\u5c1d\u8bd5\u5220\u9664\u76ee\u6807\u6587\u4ef6\u3002 flags \u662f\u4e00\u4e2a\u53ef\u9009\u7684\u6574\u6570\uff0c\u6307\u5b9a\u62f7\u8d1d\u64cd\u4f5c\u7684\u884c\u4e3a\u3002 \u53ef\u4ee5\u521b\u5efa\u7531\u4e24\u4e2a\u6216\u66f4\u591a\u4e2a\u503c\u6309\u4f4d\u6216\u7ec4\u6210\u7684\u63a9\u7801\uff08\u6bd4\u5982 fs.constants.COPYFILE_EXCL | fs.constants.COPYFILE_FICLONE \uff09\u3002 fs.constants.COPYFILE_EXCL - \u5982\u679c dest \u5df2\u5b58\u5728\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fs.constants.COPYFILE_FICLONE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\uff08copy-on-write\uff09\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u4f7f\u7528\u540e\u5907\u7684\u62f7\u8d1d\u673a\u5236\u3002 fs.constants.COPYFILE_FICLONE_FORCE - \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\u94fe\u63a5\u3002\u5982\u679c\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 const fsPromises = require ( 'fs' ). promises ; // \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5c06\u521b\u5efa\u6216\u8986\u76d6\u76ee\u6807\u6587\u4ef6\u3002 fsPromises . copyFile ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' ) . then (() => console . log ( '\u6e90\u6587\u4ef6\u5df2\u62f7\u8d1d\u5230\u76ee\u6807\u6587\u4ef6' )) . catch (() => console . log ( '\u8be5\u6587\u4ef6\u65e0\u6cd5\u62f7\u8d1d' )); \u5982\u679c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662f\u6570\u5b57\uff0c\u5219\u5b83\u6307\u5b9a flags : const fs = require ( 'fs' ); const fsPromises = fs . promises ; const { COPYFILE_EXCL } = fs . constants ; // \u901a\u8fc7\u4f7f\u7528 COPYFILE_EXCL\uff0c\u5982\u679c\u76ee\u6807\u6587\u4ef6\u5b58\u5728\uff0c\u5219\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 fsPromises . copyFile ( '\u6e90\u6587\u4ef6.txt' , '\u76ee\u6807\u6587\u4ef6.txt' , COPYFILE_EXCL ) . then (() => console . log ( '\u6e90\u6587\u4ef6\u5df2\u62f7\u8d1d\u5230\u76ee\u6807\u6587\u4ef6' )) . catch (() => console . log ( '\u8be5\u6587\u4ef6\u65e0\u6cd5\u62f7\u8d1d' ));","title":"fsPromises.copyFile(src, dest[, flags])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromiseslchmodpath-mode","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5e9f\u5f03\u4e8e: v10.0.0 path | | mode \u8fd4\u56de: \u66f4\u6539\u7b26\u53f7\u94fe\u63a5\u7684\u6743\u9650\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u6b64\u65b9\u6cd5\u4ec5\u5728 macOS \u4e0a\u5b9e\u73b0\u3002","title":"fsPromises.lchmod(path, mode)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromiseslchownpath-uid-gid","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | uid gid \u8fd4\u56de: \u66f4\u6539\u7b26\u53f7\u94fe\u63a5\u7684\u62e5\u6709\u8005\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002","title":"fsPromises.lchown(path, uid, gid)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromiseslinkexistingpath-newpath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 existingPath | | newPath | | \u8fd4\u56de: \u5f02\u6b65\u7684 link(2) \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002","title":"fsPromises.link(existingPath, newPath)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromiseslstatpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u5f02\u6b65\u7684 lstat(2) \u3002 Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a\u7528\u4e8e\u7ed9\u5b9a\u7684\u7b26\u53f7\u94fe\u63a5 path \u7684 fs.Stats \u5bf9\u8c61\u3002","title":"fsPromises.lstat(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesmkdirpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | options | recursive \u9ed8\u8ba4\u503c: false \u3002 mode Windows \u4e0a\u4e0d\u652f\u6301\u3002 \u9ed8\u8ba4\u503c: 0o777 \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u521b\u5efa\u76ee\u5f55\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u6a21\u5f0f\uff08\u6743\u9650\u548c\u7c98\u6ede\u4f4d\uff09\u7684\u6574\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 mode \u5c5e\u6027\u548c recursive \u5c5e\u6027\uff08\u6307\u793a\u662f\u5426\u5e94\u521b\u5efa\u7236\u6587\u4ef6\u5939\uff09\u7684\u5bf9\u8c61\u3002 \u5f53 path \u662f\u4e00\u4e2a\u5df2\u5b58\u5728\u7684\u76ee\u5f55\u65f6\uff0c\u8c03\u7528 fsPromises.mkdir() \u4ec5\u5728 recursive \u4e3a false \u65f6\u624d\u5bfc\u81f4\u62d2\u7edd\u3002","title":"fsPromises.mkdir(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesmkdtempprefix-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 prefix options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u521b\u5efa\u4e00\u4e2a\u552f\u4e00\u7684\u4e34\u65f6\u76ee\u5f55\uff0c\u4e14\u89e3\u51b3 Promise \u65f6\u5e26\u4e0a\u521b\u5efa\u7684\u76ee\u5f55\u8def\u5f84\u3002 \u552f\u4e00\u7684\u76ee\u5f55\u540d\u79f0\u662f\u901a\u8fc7\u5728\u63d0\u4f9b\u7684 prefix \u7684\u672b\u5c3e\u9644\u52a0\u516d\u4e2a\u968f\u673a\u5b57\u7b26\u6765\u751f\u6210\u7684\u3002 \u7531\u4e8e\u5e73\u53f0\u7684\u4e0d\u4e00\u81f4\u6027\uff0c\u8bf7\u907f\u514d\u5728 prefix \u4e2d\u4ee5 X \u5b57\u7b26\u7ed3\u5c3e\u3002 \u5728\u67d0\u4e9b\u5e73\u53f0\u4e0a\uff0c\u7279\u522b\u662f BSD\uff0c\u53ef\u4ee5\u8fd4\u56de\u516d\u4e2a\u4ee5\u4e0a\u7684\u968f\u673a\u5b57\u7b26\uff0c\u5e76\u7528\u968f\u673a\u5b57\u7b26\u66ff\u6362 prefix \u4e2d\u7ed3\u5c3e\u7684 X \u5b57\u7b26\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709\u6307\u5b9a\u8981\u4f7f\u7528\u7684\u5b57\u7b26\u7f16\u7801\u7684 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\u3002 fsPromises . mkdtemp ( path . join ( os . tmpdir (), 'foo-' )) . catch ( console . error ); fsPromises.mkdtemp() \u65b9\u6cd5\u5c06\u516d\u4f4d\u968f\u673a\u9009\u62e9\u7684\u5b57\u7b26\u76f4\u63a5\u9644\u52a0\u5230 prefix \u5b57\u7b26\u4e32\u3002 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u76ee\u5f55 /tmp \uff0c\u5982\u679c\u6253\u7b97\u5728 /tmp \u4e2d\u521b\u5efa\u4e34\u65f6\u76ee\u5f55\uff0c\u5219 prefix \u5fc5\u987b\u5728\u5c3e\u90e8\u52a0\u4e0a\u7279\u5b9a\u5e73\u53f0\u7684\u8def\u5f84\u5206\u9694\u7b26\uff08 require('path').sep \uff09\u3002","title":"fsPromises.mkdtemp(prefix[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesopenpath-flags-mode","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | flags | \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \uff08\u53ef\u8bfb\u5199\uff09\u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u6253\u5f00\u6587\u4ef6\u5e76\u8fd4\u56de\u4e00\u4e2a Promise \uff0c\u5f53\u89e3\u51b3\u65f6\u4f1a\u5e26\u4e0a\u4e00\u4e2a FileHandle \u5bf9\u8c61\u3002 \u53c2\u9605 open(2) \u3002 mode \u7528\u4e8e\u8bbe\u7f6e\u6587\u4ef6\u6a21\u5f0f\uff08\u6743\u9650\u548c\u7c98\u6ede\u4f4d\uff09\uff0c\u4f46\u4ec5\u9650\u4e8e\u521b\u5efa\u6587\u4ef6\u65f6\u3002 \u6709\u4e9b\u5b57\u7b26 ( < > : \" / \\ | ? * ) \u5728 Windows \u4e0a\u662f\u9884\u7559\u7684\uff0c\u53c2\u9605 \u547d\u540d\u6587\u4ef6\u3001\u8def\u5f84\u4ee5\u53ca\u547d\u540d\u7a7a\u95f4 \u3002 \u5728 NTFS \u4e0a\uff0c\u5982\u679c\u6587\u4ef6\u540d\u5305\u542b\u5192\u53f7\uff0c\u5219 Node.js \u5c06\u6253\u5f00\u6587\u4ef6\u7cfb\u7edf\u6d41\uff0c\u53c2\u9605 \u6b64 MSDN \u9875\u9762 \u3002","title":"fsPromises.open(path, flags[, mode])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesopendirpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v12.12.0 path | | options encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u5305\u542b \u3002 \u5f02\u6b65\u5730\u6253\u5f00\u76ee\u5f55\u3002 \u53c2\u9605 opendir(3) \u3002 \u521b\u5efa\u4e00\u4e2a fs.Dir \uff0c\u5176\u4e2d\u5305\u542b\u6240\u6709\u7528\u4e8e\u66f4\u8fdb\u4e00\u6b65\u8bfb\u53d6\u548c\u6e05\u7406\u76ee\u5f55\u7684\u7684\u51fd\u6570\u3002 encoding \u9009\u9879\u7528\u4e8e\u5728\u6253\u5f00\u76ee\u5f55\u548c\u540e\u7eed\u7684\u8bfb\u53d6\u64cd\u4f5c\u65f6\u8bbe\u7f6e path \u7684\u5b57\u7b26\u7f16\u7801\u3002 \u4f7f\u7528\u5f02\u6b65\u8fed\u4ee3\u7684\u793a\u4f8b\uff1a const fs = require ( 'fs' ); async function print ( path ) { const dir = await fs . promises . opendir ( path ); for await ( const dirent of dir ) { console . log ( dirent . name ); } } print ( './' ). catch ( console . error );","title":"fsPromises.opendir(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesreaddirpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 withFileTypes \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u8bfb\u53d6\u76ee\u5f55\u7684\u5185\u5bb9\uff0c\u7136\u540e\u89e3\u51b3 Promise \u5e76\u5e26\u4e0a\u4e00\u4e2a\u6570\u7ec4\uff08\u5305\u542b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\u7684\u540d\u79f0\uff0c\u4f46\u4e0d\u5305\u62ec '.' \u548c '..' \uff09\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u6587\u4ef6\u540d\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u6587\u4ef6\u540d\u662f Buffer \u5bf9\u8c61\u3002 \u5982\u679c options.withFileTypes \u8bbe\u7f6e\u4e3a true \uff0c\u5219\u89e3\u51b3\u7684\u6570\u7ec4\u5c06\u5305\u542b fs.Dirent \u5bf9\u8c61\u3002","title":"fsPromises.readdir(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesreadfilepath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | | \u6587\u4ef6\u540d\u6216 FileHandle \u3002 options | encoding | \u9ed8\u8ba4\u503c: null \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002 \u9ed8\u8ba4\u503c: 'r' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u8bfb\u53d6\u6587\u4ef6\u7684\u5168\u90e8\u5185\u5bb9\u3002 Promise \u88ab\u89e3\u51b3\u65f6\u4f1a\u5e26\u4e0a\u6587\u4ef6\u7684\u5185\u5bb9\u3002 \u5982\u679c\u6ca1\u6709\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\uff08\u4f7f\u7528 options.encoding \uff09\uff0c\u5219\u6570\u636e\u4f1a\u4ee5 Buffer \u5bf9\u8c61\u8fd4\u56de\u3002 \u5426\u5219\uff0c\u6570\u636e\u5c06\u4f1a\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002 \u5982\u679c options \u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 \u5f53 path \u662f\u76ee\u5f55\u65f6\uff0c fsPromises.readFile() \u7684\u884c\u4e3a\u662f\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u3002 \u5728 macOS\u3001Linux \u548c Windows \u4e0a\uff0cpromise \u5c06\u4f1a\u88ab\u62d2\u7edd\u5e76\u5e26\u4e0a\u4e00\u4e2a\u9519\u8bef\u3002 \u5728 FreeBSD \u4e0a\uff0c\u5219\u5c06\u4f1a\u8fd4\u56de\u76ee\u5f55\u5185\u5bb9\u7684\u8868\u793a\u3002 \u6307\u5b9a\u7684 FileHandle \u5fc5\u987b\u652f\u6301\u8bfb\u53d6\u3002","title":"fsPromises.readFile(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesreadlinkpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u5f02\u6b65\u7684 readlink(2) \u3002 Promise \u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u5e26\u4e0a linkString \u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u94fe\u63a5\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u94fe\u63a5\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002","title":"fsPromises.readlink(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesrealpathpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | options | encoding \u9ed8\u8ba4\u503c: 'utf8' \u3002 \u8fd4\u56de: \u4f7f\u7528\u4e0e fs.realpath.native() \u51fd\u6570\u76f8\u540c\u7684\u8bed\u4e49\u6765\u5224\u65ad path \u7684\u5b9e\u9645\u4f4d\u7f6e\uff0c\u7136\u540e\u89e3\u51b3 Promise \u5e76\u5e26\u4e0a\u89e3\u6790\u540e\u7684\u8def\u5f84\u3002 \u4ec5\u652f\u6301\u53ef\u8f6c\u6362\u4e3a UTF8 \u5b57\u7b26\u4e32\u7684\u8def\u5f84\u3002 \u53ef\u9009\u7684 options \u53c2\u6570\u53ef\u4ee5\u662f\u6307\u5b9a\u7f16\u7801\u7684\u5b57\u7b26\u4e32\uff0c\u4e5f\u53ef\u4ee5\u662f\u5177\u6709 encoding \u5c5e\u6027\u7684\u5bf9\u8c61\uff0c\u8be5\u5c5e\u6027\u6307\u5b9a\u7528\u4e8e\u8def\u5f84\u7684\u5b57\u7b26\u7f16\u7801\u3002 \u5982\u679c encoding \u8bbe\u7f6e\u4e3a 'buffer' \uff0c\u5219\u8fd4\u56de\u7684\u8def\u5f84\u5c06\u4f5c\u4e3a Buffer \u5bf9\u8c61\u4f20\u5165\u3002 \u5728 Linux \u4e0a\uff0c\u5f53 Node.js \u4e0e musl libc \u94fe\u63a5\u65f6\uff0cprocfs \u6587\u4ef6\u7cfb\u7edf\u5fc5\u987b\u6302\u8f7d\u5728 /proc \u4e0a\u624d\u80fd\u4f7f\u6b64\u529f\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 Glibc \u6ca1\u6709\u8fd9\u4e2a\u9650\u5236\u3002","title":"fsPromises.realpath(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesrenameoldpath-newpath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 oldPath | | newPath | | \u8fd4\u56de: \u5c06 oldPath \u91cd\u547d\u540d\u4e3a newPath \uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002","title":"fsPromises.rename(oldPath, newPath)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesrmdirpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 \u7a33\u5b9a\u6027: 1 - \u9012\u5f52\u7684\u5220\u9664\u662f\u5b9e\u9a8c\u6027\u7684\u3002 path | | options emfileWait \u5982\u679c\u9047\u5230 EMFILE \u9519\u8bef\uff0c\u5219 Node.js \u5c06\u4f1a\u5728\u6bcf\u6b21\u5c1d\u8bd5\u65f6\u4ee5 1 \u6beb\u79d2\u7684\u7ebf\u6027\u56de\u9000\u91cd\u8bd5\u8be5\u64cd\u4f5c\uff0c\u76f4\u5230\u8d85\u65f6\u6301\u7eed\u65f6\u95f4\u8d85\u8fc7\u6b64\u9650\u5236\u3002 \u5982\u679c recursive \u9009\u9879\u4e0d\u4e3a true \uff0c\u5219\u5ffd\u7565\u6b64\u9009\u9879\u3002 \u9ed8\u8ba4\u503c: 1000 \u3002 maxBusyTries \u5982\u679c\u9047\u5230 EBUSY \u3001 ENOTEMPTY \u6216 EPERM \u9519\u8bef\uff0c\u5219 Node.js \u5c06\u4f1a\u5728\u6bcf\u6b21\u5c1d\u8bd5\u65f6\u4ee5 100 \u6beb\u79d2\u7684\u7ebf\u6027\u56de\u9000\u7b49\u5f85\u91cd\u8bd5\u8be5\u64cd\u4f5c\u3002 \u6b64\u9009\u9879\u4ee3\u8868\u91cd\u8bd5\u7684\u6b21\u6570\u3002\u5982\u679c recursive \u9009\u9879\u4e0d\u4e3a true \uff0c\u5219\u5ffd\u7565\u6b64\u9009\u9879\u3002 \u9ed8\u8ba4\u503c: 3 \u3002 recursive \u5982\u679c\u4e3a true \uff0c\u5219\u6267\u884c\u9012\u5f52\u7684\u76ee\u5f55\u5220\u9664\u3002\u5728\u9012\u5f52\u6a21\u5f0f\u4e2d\uff0c\u5982\u679c path \u4e0d\u5b58\u5728\u5219\u4e0d\u62a5\u544a\u9519\u8bef\uff0c\u5e76\u4e14\u5728\u5931\u8d25\u65f6\u91cd\u8bd5\u64cd\u4f5c\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: \u5220\u9664 path \u6307\u5b9a\u7684\u76ee\u5f55\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5728\u6587\u4ef6\uff08\u800c\u4e0d\u662f\u76ee\u5f55\uff09\u4e0a\u4f7f\u7528 fsPromises.rmdir() \u4f1a\u5bfc\u81f4 Promise \u88ab\u62d2\u7edd\uff0c\u5728 Windows \u4e0a\u4f1a\u5e26\u4e0a ENOENT \u9519\u8bef\u3001\u5728 POSIX \u4e0a\u4f1a\u5e26\u4e0a ENOTDIR \u9519\u8bef\u3002","title":"fsPromises.rmdir(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesstatpath-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path | | options bigint \u8fd4\u56de\u7684 fs.Stats \u5bf9\u8c61\u4e2d\u7684\u6570\u503c\u662f\u5426\u5e94\u4e3a bigint \u578b\u3002 \u9ed8\u8ba4\u503c: false \u3002 \u8fd4\u56de: Promise \u4f1a\u88ab\u89e3\u51b3\u5e76\u5e26\u4e0a fs.Stats \u5bf9\u8c61\uff08\u7528\u4e8e\u7ed9\u5b9a\u7684 path \uff09\u3002","title":"fsPromises.stat(path[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisessymlinktarget-path-type","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 target | | path | | type \u9ed8\u8ba4\u503c: 'file' \u3002 \u8fd4\u56de: \u521b\u5efa\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 type \u53c2\u6570\u4ec5\u5728 Windows \u4e0a\u53ef\u7528\uff0c\u53ef\u4ee5\u662f 'dir' \u3001 'file' \u6216 'junction' \u4e4b\u4e00\u3002 Windows \u4e0a\u4f7f\u7528 'junction' \u8981\u6c42\u76ee\u6807\u8def\u5f84\u662f\u7edd\u5bf9\u8def\u5f84\u3002 \u5f53\u4f7f\u7528 'junction' \u65f6\uff0c target \u53c2\u6570\u5c06\u81ea\u52a8\u6807\u51c6\u5316\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002","title":"fsPromises.symlink(target, path[, type])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisestruncatepath-len","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | len \u9ed8\u8ba4\u503c: 0 \u3002 \u8fd4\u56de: \u622a\u65ad path \uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 path \u5fc5\u987b\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216 Buffer \u3002","title":"fsPromises.truncate(path[, len])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesunlinkpath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | \u8fd4\u56de: \u5f02\u6b65\u7684 unlink(2) \u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002","title":"fsPromises.unlink(path)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromisesutimespath-atime-mtime","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 path | | atime | | mtime | | \u8fd4\u56de: \u66f4\u6539 path \u6307\u5411\u7684\u5bf9\u8c61\u7684\u6587\u4ef6\u7cfb\u7edf\u65f6\u95f4\u6233\uff0c\u7136\u540e\u5728\u6210\u529f\u65f6\u89e3\u51b3 Promise \u4e14\u4e0d\u5e26\u53c2\u6570\u3002 atime \u548c mtime \u53c2\u6570\u9075\u5faa\u4ee5\u4e0b\u89c4\u5219\uff1a \u503c\u53ef\u4ee5\u662f\u8868\u793a Unix \u7eaa\u5143\u65f6\u95f4\u7684\u6570\u5b57\u3001 Date \u5bf9\u8c61\u3001\u6216\u7c7b\u4f3c '123456789.0' \u7684\u6570\u503c\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u8be5\u503c\u65e0\u6cd5\u8f6c\u6362\u4e3a\u6570\u503c\u3001\u6216\u503c\u4e3a NaN \u3001 Infinity \u6216 -Infinity \uff0c\u5219\u629b\u51fa Error \u3002","title":"fsPromises.utimes(path, atime, mtime)#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fspromiseswritefilefile-data-options","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 file | | | \u6587\u4ef6\u540d\u6216 FileHandle \u3002 data | | options | encoding | \u9ed8\u8ba4\u503c: 'utf8' \u3002 mode \u9ed8\u8ba4\u503c: 0o666 \u3002 flag \u53c2\u9605 \u652f\u6301\u7684\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7 \u3002\u9ed8\u8ba4\u503c: 'w' \u3002 \u8fd4\u56de: \u5f02\u6b65\u5730\u5c06\u6570\u636e\u5199\u5165\u5230\u4e00\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u8986\u76d6\u8be5\u6587\u4ef6\u3002 data \u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216 buffer\u3002 Promise \u5c06\u4f1a\u5728\u6210\u529f\u65f6\u89e3\u51b3\uff0c\u4e14\u4e0d\u5e26\u53c2\u6570\u3002 \u5982\u679c data \u662f\u4e00\u4e2a buffer\uff0c\u5219 encoding \u9009\u9879\u4f1a\u88ab\u5ffd\u7565\u3002 \u5982\u679c options \u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5219\u5b83\u6307\u5b9a\u5b57\u7b26\u7f16\u7801\u3002 \u6307\u5b9a\u7684 FileHandle \u5fc5\u987b\u652f\u6301\u5199\u5165\u3002 \u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e0a\u591a\u6b21\u4f7f\u7528 fsPromises.writeFile() \u4e14\u4e0d\u7b49\u5f85 Promise \u88ab\u89e3\u51b3\uff08\u6216\u88ab\u62d2\u7edd\uff09\u662f\u4e0d\u5b89\u5168\u7684\u3002","title":"fsPromises.writeFile(file, data[, options])#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#fs_1","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u7531 fs.constants \u8f93\u51fa\u3002 \u5e76\u975e\u6240\u6709\u64cd\u4f5c\u7cfb\u7edf\u90fd\u53ef\u4ee5\u4f7f\u7528\u6bcf\u4e2a\u5e38\u91cf\u3002","title":"FS \u5e38\u91cf#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_12","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u9002\u7528\u4e8e fs.access() \u3002 \u5e38\u91cf \u8bf4\u660e F_OK \u8868\u660e\u6587\u4ef6\u5bf9\u8c03\u7528\u8fdb\u7a0b\u53ef\u89c1\u3002 \u8fd9\u5bf9\u4e8e\u5224\u65ad\u6587\u4ef6\u662f\u5426\u5b58\u5728\u5f88\u6709\u7528\uff0c\u4f46\u5bf9 rwx \u6743\u9650\u6ca1\u6709\u4efb\u4f55\u8bf4\u660e\u3002 \u5982\u679c\u672a\u6307\u5b9a\u6a21\u5f0f\uff0c\u5219\u9ed8\u8ba4\u503c\u4e3a\u8be5\u503c\u3002 R_OK \u8868\u660e\u8c03\u7528\u8fdb\u7a0b\u53ef\u4ee5\u8bfb\u53d6\u6587\u4ef6\u3002 W_OK \u8868\u660e\u8c03\u7528\u8fdb\u7a0b\u53ef\u4ee5\u5199\u5165\u6587\u4ef6\u3002 X_OK \u8868\u660e\u8c03\u7528\u8fdb\u7a0b\u53ef\u4ee5\u6267\u884c\u6587\u4ef6\u3002 \u5728 Windows \u4e0a\u65e0\u6548\uff08\u8868\u73b0\u5f97\u50cf fs.constants.F_OK \uff09\u3002","title":"\u6587\u4ef6\u53ef\u8bbf\u95ee\u6027\u7684\u5e38\u91cf#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_13","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u9002\u7528\u4e8e fs.copyFile() \u3002 \u5e38\u91cf \u8bf4\u660e COPYFILE_EXCL \u5982\u679c\u76ee\u6807\u8def\u5f84\u5df2\u5b58\u5728\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 COPYFILE_FICLONE \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\u94fe\u63a5\u3002 \u5982\u679c\u5e95\u5c42\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u4f7f\u7528\u5907\u9009\u7684\u62f7\u8d1d\u673a\u5236\u3002 COPYFILE_FICLONE_FORCE \u62f7\u8d1d\u64cd\u4f5c\u5c06\u5c1d\u8bd5\u521b\u5efa\u5199\u65f6\u62f7\u8d1d\u94fe\u63a5\u3002 \u5982\u679c\u5e95\u5c42\u5e73\u53f0\u4e0d\u652f\u6301\u5199\u65f6\u62f7\u8d1d\uff0c\u5219\u62f7\u8d1d\u64cd\u4f5c\u5c06\u5931\u8d25\u3002","title":"\u6587\u4ef6\u62f7\u8d1d\u7684\u5e38\u91cf#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_14","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u9002\u7528\u4e8e fs.open() \u3002 \u5e38\u91cf \u8bf4\u660e O_RDONLY \u8868\u660e\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u53ea\u8bfb\u8bbf\u95ee\u3002 O_WRONLY \u8868\u660e\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u53ea\u5199\u8bbf\u95ee\u3002 O_RDWR \u8868\u660e\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u5199\u8bbf\u95ee\u3002 O_CREAT \u8868\u660e\u5982\u679c\u6587\u4ef6\u5c1a\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 O_EXCL \u8868\u660e\u5982\u679c\u8bbe\u7f6e\u4e86 O_CREAT \u6807\u5fd7\u4e14\u6587\u4ef6\u5df2\u5b58\u5728\uff0c\u5219\u6253\u5f00\u6587\u4ef6\u5e94\u8be5\u5931\u8d25\u3002 O_NOCTTY \u8868\u660e\u5982\u679c\u8def\u5f84\u8868\u793a\u7ec8\u7aef\u8bbe\u5907\uff0c\u5219\u6253\u5f00\u8be5\u8def\u5f84\u4e0d\u5e94\u8be5\u9020\u6210\u8be5\u7ec8\u7aef\u53d8\u6210\u8fdb\u7a0b\u7684\u63a7\u5236\u7ec8\u7aef\uff08\u5982\u679c\u8fdb\u7a0b\u8fd8\u6ca1\u6709\u7ec8\u7aef\uff09\u3002 O_TRUNC \u8868\u660e\u5982\u679c\u6587\u4ef6\u5b58\u5728\u4e14\u662f\u5e38\u89c4\u6587\u4ef6\u3001\u5e76\u4e14\u6587\u4ef6\u6210\u529f\u6253\u5f00\u4ee5\u8fdb\u884c\u5199\u5165\u8bbf\u95ee\uff0c\u5219\u5176\u957f\u5ea6\u5e94\u622a\u65ad\u4e3a\u96f6\u3002 O_APPEND \u8868\u660e\u6570\u636e\u5c06\u4f1a\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002 O_DIRECTORY \u8868\u660e\u5982\u679c\u8def\u5f84\u4e0d\u662f\u76ee\u5f55\uff0c\u5219\u6253\u5f00\u5e94\u8be5\u5931\u8d25\u3002 O_NOATIME \u8868\u660e\u6587\u4ef6\u7cfb\u7edf\u7684\u8bfb\u53d6\u8bbf\u95ee\u5c06\u4e0d\u518d\u5bfc\u81f4\u4e0e\u6587\u4ef6\u76f8\u5173\u8054\u7684 atime \u4fe1\u606f\u7684\u66f4\u65b0\u3002 \u4ec5\u5728 Linux \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u53ef\u7528\u3002 O_NOFOLLOW \u8868\u660e\u5982\u679c\u8def\u5f84\u662f\u7b26\u53f7\u94fe\u63a5\uff0c\u5219\u6253\u5f00\u5e94\u8be5\u5931\u8d25\u3002 O_SYNC \u8868\u660e\u6587\u4ef6\u662f\u4e3a\u540c\u6b65 I/O \u6253\u5f00\u7684\uff0c\u5199\u5165\u64cd\u4f5c\u5c06\u4f1a\u7b49\u5f85\u6587\u4ef6\u7684\u5b8c\u6574\u6027\u3002 O_DSYNC \u8868\u660e\u6587\u4ef6\u662f\u4e3a\u540c\u6b65 I/O \u6253\u5f00\u7684\uff0c\u5199\u5165\u64cd\u4f5c\u5c06\u4f1a\u7b49\u5f85\u6570\u636e\u7684\u5b8c\u6574\u6027 O_SYMLINK \u8868\u660e\u6253\u5f00\u7b26\u53f7\u94fe\u63a5\u81ea\u8eab\uff0c\u800c\u4e0d\u662f\u5b83\u6307\u5411\u7684\u8d44\u6e90\u3002 O_DIRECT \u8868\u660e\u5c06\u5c1d\u8bd5\u6700\u5c0f\u5316\u6587\u4ef6 I/O \u7684\u7f13\u5b58\u6548\u679c\u3002 O_NONBLOCK \u8868\u660e\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\u4ee5\u975e\u963b\u585e\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u3002 UV_FS_O_FILEMAP \u5f53\u8bbe\u7f6e\u540e\uff0c\u5c06\u4f1a\u4f7f\u7528\u5185\u5b58\u6587\u4ef6\u7684\u6620\u5c04\u6765\u8bbf\u95ee\u6587\u4ef6\u3002 \u6b64\u6807\u5fd7\u4ec5\u5728 Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u53ef\u7528\u3002 \u5728\u5176\u4ed6\u64cd\u4f5c\u7cfb\u7edf\u4e0a\uff0c\u6b64\u6807\u5fd7\u4f1a\u88ab\u5ffd\u7565\u3002","title":"\u6587\u4ef6\u6253\u5f00\u7684\u5e38\u91cf#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_15","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u9002\u7528\u4e8e fs.Stats \u5bf9\u8c61\u7684 mode \u5c5e\u6027\uff0c\u7528\u4e8e\u51b3\u5b9a\u6587\u4ef6\u7684\u7c7b\u578b\u3002 \u5e38\u91cf \u8bf4\u660e S_IFMT \u7528\u4e8e\u63d0\u53d6\u6587\u4ef6\u7c7b\u578b\u4ee3\u7801\u7684\u4f4d\u63a9\u7801\u3002 S_IFREG \u8868\u793a\u5e38\u89c4\u6587\u4ef6\u3002 S_IFDIR \u8868\u793a\u76ee\u5f55\u3002 S_IFCHR \u8868\u793a\u9762\u5411\u5b57\u7b26\u7684\u8bbe\u5907\u6587\u4ef6\u3002 S_IFBLK \u8868\u793a\u9762\u5411\u5757\u7684\u8bbe\u5907\u6587\u4ef6\u3002 S_IFIFO \u8868\u793a FIFO \u6216\u7ba1\u9053\u3002 S_IFLNK \u8868\u793a\u7b26\u53f7\u94fe\u63a5\u3002 S_IFSOCK \u8868\u793a\u5957\u63a5\u5b57\u3002","title":"\u6587\u4ef6\u7c7b\u578b\u7684\u5e38\u91cf#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_16","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u4ee5\u4e0b\u5e38\u91cf\u9002\u7528\u4e8e fs.Stats \u5bf9\u8c61\u7684 mode \u5c5e\u6027\uff0c\u7528\u4e8e\u51b3\u5b9a\u6587\u4ef6\u7684\u8bbf\u95ee\u6743\u9650\u3002 \u5e38\u91cf \u8bf4\u660e S_IRWXU \u8868\u660e\u6240\u6709\u8005\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c\u3002 S_IRUSR \u8868\u660e\u6240\u6709\u8005\u53ef\u8bfb\u3002 S_IWUSR \u8868\u660e\u6240\u6709\u8005\u53ef\u5199\u3002 S_IXUSR \u8868\u660e\u6240\u6709\u8005\u53ef\u6267\u884c\u3002 S_IRWXG \u8868\u660e\u7fa4\u7ec4\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c\u3002 S_IRGRP \u8868\u660e\u7fa4\u7ec4\u53ef\u8bfb\u3002 S_IWGRP \u8868\u660e\u7fa4\u7ec4\u53ef\u5199\u3002 S_IXGRP \u8868\u660e\u7fa4\u7ec4\u53ef\u6267\u884c\u3002 S_IRWXO \u8868\u660e\u5176\u4ed6\u4eba\u53ef\u8bfb\u3001\u53ef\u5199\u3001\u53ef\u6267\u884c\u3002 S_IROTH \u8868\u660e\u5176\u4ed6\u4eba\u53ef\u8bfb\u3002 S_IWOTH \u8868\u660e\u5176\u4ed6\u4eba\u53ef\u5199\u3002 S_IXOTH \u8868\u660e\u5176\u4ed6\u4eba\u53ef\u6267\u884c\u3002","title":"\u6587\u4ef6\u6a21\u5f0f\u7684\u5e38\u91cf#"},{"location":"nodejs/Node.js-fs%E6%96%87%E6%A1%A3/#_17","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u5f53 flag \u9009\u9879\u91c7\u7528\u5b57\u7b26\u4e32\u65f6\uff0c\u53ef\u7528\u4ee5\u4e0b\u6807\u5fd7\uff1a 'a' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8ffd\u52a0\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 'ax' - \u4e0e 'a' \u76f8\u4f3c\uff0c\u4f46\u5982\u679c\u8def\u5f84\u5df2\u5b58\u5728\u5219\u5931\u8d25\u3002 'a+' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u548c\u8ffd\u52a0\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 'ax+' - \u4e0e 'a+' \u76f8\u4f3c\uff0c\u4f46\u5982\u679c\u8def\u5f84\u5df2\u5b58\u5728\u5219\u5931\u8d25\u3002 'as' - \u4ee5\u540c\u6b65\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8ffd\u52a0\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 'as+' - \u4ee5\u540c\u6b65\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u548c\u8ffd\u52a0\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u521b\u5efa\u8be5\u6587\u4ef6\u3002 'r' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u51fa\u73b0\u5f02\u5e38\u3002 'r+' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u548c\u5199\u5165\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u51fa\u73b0\u5f02\u5e38\u3002 'rs+' - \u4ee5\u540c\u6b65\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u548c\u5199\u5165\u3002\u6307\u793a\u64cd\u4f5c\u7cfb\u7edf\u7ed5\u8fc7\u672c\u5730\u7684\u6587\u4ef6\u7cfb\u7edf\u7f13\u5b58\u3002 \u8fd9\u5bf9\u4e8e\u5728 NFS \u6302\u8f7d\u4e0a\u6253\u5f00\u6587\u4ef6\u65f6\u975e\u5e38\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u5141\u8bb8\u8df3\u8fc7\u53ef\u80fd\u8fc7\u65f6\u7684\u672c\u5730\u7f13\u5b58\u3002 \u5b83\u5bf9 I/O \u6027\u80fd\u6709\u975e\u5e38\u5b9e\u9645\u7684\u5f71\u54cd\uff0c\u56e0\u6b64\u9664\u975e\u9700\u8981\uff0c\u5426\u5219\u4e0d\u5efa\u8bae\u4f7f\u7528\u6b64\u6807\u5fd7\u3002 \u8fd9\u4e0d\u4f1a\u5c06 fs.open() \u6216 fsPromises.open() \u8f6c\u6362\u4e3a\u540c\u6b65\u7684\u963b\u585e\u8c03\u7528\u3002 \u5982\u679c\u9700\u8981\u540c\u6b65\u7684\u64cd\u4f5c\uff0c\u5219\u5e94\u4f7f\u7528 fs.openSync() \u4e4b\u7c7b\u7684\u3002 'w' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u5199\u5165\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u622a\u65ad\u6587\u4ef6\u3002 'wx' - \u4e0e 'w' \u76f8\u4f3c\uff0c\u4f46\u5982\u679c\u8def\u5f84\u5df2\u5b58\u5728\u5219\u5931\u8d25\u3002 'w+' - \u6253\u5f00\u6587\u4ef6\u7528\u4e8e\u8bfb\u53d6\u548c\u5199\u5165\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\u5219\u521b\u5efa\u6587\u4ef6\uff0c\u5982\u679c\u6587\u4ef6\u5df2\u5b58\u5728\u5219\u622a\u65ad\u6587\u4ef6\u3002 'wx+' - \u4e0e 'w+' \u76f8\u4f3c\uff0c\u4f46\u5982\u679c\u8def\u5f84\u5df2\u5b58\u5728\u5219\u5931\u8d25\u3002 flag \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u6570\u5b57\uff0c\u53c2\u9605 open(2) \u6587\u6863\u3002 \u5e38\u7528\u7684\u5e38\u91cf\u53ef\u4ee5\u4ece fs.constants \u83b7\u53d6\u3002 \u5728 Windows \u4e0a\uff0c\u6807\u5fd7\u4f1a\u88ab\u9002\u5f53\u5730\u8f6c\u6362\u4e3a\u7b49\u6548\u7684\u6807\u5fd7\uff0c\u4f8b\u5982 O_WRONLY \u8f6c\u6362\u4e3a FILE_GENERIC_WRITE \u3001 O_EXCL|O_CREAT \u8f6c\u6362\u4e3a\u80fd\u88ab CreateFileW \u63a5\u53d7\u7684 CREATE_NEW \u3002 \u7279\u6709\u7684 'x' \u6807\u5fd7\uff08 open(2) \u4e2d\u7684 O_EXCL \u6807\u5fd7\uff09\u53ef\u4ee5\u786e\u4fdd\u8def\u5f84\u662f\u65b0\u521b\u5efa\u7684\u3002 \u5728 POSIX \u7cfb\u7edf\u4e0a\uff0c\u5373\u4f7f\u8def\u5f84\u662f\u4e00\u4e2a\u7b26\u53f7\u94fe\u63a5\u4e14\u6307\u5411\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u5b83\u4e5f\u4f1a\u88ab\u89c6\u4e3a\u5df2\u5b58\u5728\u3002 \u8be5\u7279\u6709\u6807\u5fd7\u4e0d\u4e00\u5b9a\u9002\u7528\u4e8e\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\u3002 \u5728 Linux \u4e0a\uff0c\u5f53\u4ee5\u8ffd\u52a0\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5199\u5165\u65e0\u6cd5\u6307\u5b9a\u4f4d\u7f6e\u3002 \u5185\u6838\u4f1a\u5ffd\u7565\u4f4d\u7f6e\u53c2\u6570\uff0c\u5e76\u59cb\u7ec8\u5c06\u6570\u636e\u8ffd\u52a0\u5230\u6587\u4ef6\u7684\u672b\u5c3e\u3002 \u5982\u679c\u8981\u4fee\u6539\u6587\u4ef6\u800c\u4e0d\u662f\u8986\u76d6\u6587\u4ef6\uff0c\u5219\u6807\u5fd7\u6a21\u5f0f\u5e94\u4e3a 'r+' \u6a21\u5f0f\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684 'w' \u6a21\u5f0f\u3002 \u67d0\u4e9b\u6807\u5fd7\u7684\u884c\u4e3a\u662f\u7279\u5b9a\u4e8e\u5e73\u53f0\u7684\u3002 \u4f8b\u5982\uff0c\u5728 macOS \u548c Linux \u4e0a\u4f7f\u7528 'a+' \u6807\u5fd7\u6253\u5f00\u76ee\u5f55\uff08\u53c2\u9605\u4e0b\u9762\u7684\u793a\u4f8b\uff09\u4f1a\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\u3002 \u800c\u5728 Windows \u548c FreeBSD \u4e0a\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u6216 FileHandle \u3002 // \u5728 macOS \u548c Linux \u4e0a\uff1a fs . open ( '<\u76ee\u5f55>' , 'a+' , ( err , fd ) => { // => [Error: EISDIR: illegal operation on a directory, open <\u76ee\u5f55>] }); // \u5728 Windows \u548c FreeBSD \u4e0a\uff1a fs . open ( '<\u76ee\u5f55>' , 'a+' , ( err , fd ) => { // => null, <fd> }); \u5728 Windows \u4e0a\uff0c\u4f7f\u7528 'w' \u6807\u5fd7\u6253\u5f00\u73b0\u5b58\u7684\u9690\u85cf\u6587\u4ef6\uff08\u901a\u8fc7 fs.open() \u3001 fs.writeFile() \u6216 fsPromises.open() \uff09\u4f1a\u629b\u51fa EPERM \u3002 \u73b0\u5b58\u7684\u9690\u85cf\u6587\u4ef6\u53ef\u4ee5\u4f7f\u7528 'r+' \u6807\u5fd7\u6253\u5f00\u7528\u4e8e\u5199\u5165\u3002 \u8c03\u7528 fs.ftruncate() \u6216 fsPromises.ftruncate() \u53ef\u4ee5\u7528\u4e8e\u91cd\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\u3002","title":"\u6587\u4ef6\u7cfb\u7edf\u6807\u5fd7#"},{"location":"nodejs/Node.js-path/","text":"Node.js v12.14.0 \u6587\u6863 \u00b6 \u76ee\u5f55 \u00b6 path\uff08\u8def\u5f84\uff09 Windows \u4e0e POSIX [path.basename(path , ext]) path.delimiter path.dirname(path) path.extname(path) path.format(pathObject) path.isAbsolute(path) [path.join( ...paths]) path.normalize(path) path.parse(path) path.posix path.relative(from, to) [path.resolve( ...paths]) path.sep path.toNamespacedPath(path) path.win32 path\uff08\u8def\u5f84\uff09 \u00b6 path \u6a21\u5757\u63d0\u4f9b\u7528\u4e8e\u5904\u7406\u6587\u4ef6\u8def\u5f84\u548c\u76ee\u5f55\u8def\u5f84\u7684\u5b9e\u7528\u5de5\u5177\u3002 \u5b83\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\u8bbf\u95ee\uff1a const path = require ( 'path' ); Windows \u4e0e POSIX \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 path \u6a21\u5757\u7684\u9ed8\u8ba4\u64cd\u4f5c\u56e0 Node.js \u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u6240\u5728\u7684\u64cd\u4f5c\u7cfb\u7edf\u800c\u5f02\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u5728 Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u65f6\uff0c path \u6a21\u5757\u5c06\u5047\u5b9a\u6b63\u5728\u4f7f\u7528 Windows \u98ce\u683c\u7684\u8def\u5f84\u3002 \u56e0\u6b64\uff0c\u4f7f\u7528 path.basename() \u53ef\u80fd\u4f1a\u5728 POSIX \u548c Windows \u4e0a\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c\uff1a \u5728 POSIX \u4e0a: path . basename ( 'C:\\\\temp\\\\myfile.html' ); // \u8fd4\u56de: 'C:\\\\temp\\\\myfile.html' \u5728 Windows \u4e0a: path . basename ( 'C:\\\\temp\\\\myfile.html' ); // \u8fd4\u56de: 'myfile.html' \u8981\u5728\u4efb\u4f55\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u4f7f\u7528 Windows \u6587\u4ef6\u8def\u5f84\u65f6\u83b7\u5f97\u4e00\u81f4\u7684\u7ed3\u679c\uff0c\u5219\u4f7f\u7528 path.win32 \uff1a \u5728 POSIX \u548c Windows \u4e0a: path . win32 . basename ( 'C:\\\\temp\\\\myfile.html' ); // \u8fd4\u56de: 'myfile.html' \u8981\u5728\u4efb\u4f55\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u4f7f\u7528 POSIX \u6587\u4ef6\u8def\u5f84\u65f6\u83b7\u5f97\u4e00\u81f4\u7684\u7ed3\u679c\uff0c\u5219\u4f7f\u7528 path.posix \uff1a \u5728 POSIX \u548c Windows \u4e0a: path . posix . basename ( '/tmp/myfile.html' ); // \u8fd4\u56de: 'myfile.html' \u5728 Windows \u4e0a\uff0cNode.js \u9075\u5faa\u6bcf\u4e2a\u9a71\u52a8\u5668\u5de5\u4f5c\u76ee\u5f55\u7684\u6982\u5ff5\u3002 \u5f53\u4f7f\u7528\u6ca1\u6709\u53cd\u659c\u6760\u7684\u9a71\u52a8\u5668\u8def\u5f84\u65f6\uff0c\u53ef\u4ee5\u89c2\u5bdf\u5230\u6b64\u884c\u4e3a\u3002 \u4f8b\u5982\uff0c path.resolve('c:\\\\') \u53ef\u80fd\u4f1a\u8fd4\u56de\u4e0e path.resolve('c:') \u4e0d\u540c\u7684\u7ed3\u679c\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605 \u6b64 MSDN \u9875\u9762 \u3002 path.basename(path[, ext]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path ext \u53ef\u9009\u7684\u6587\u4ef6\u6269\u5c55\u540d\u3002 \u8fd4\u56de: path.basename() \u65b9\u6cd5\u8fd4\u56de path \u7684\u6700\u540e\u4e00\u90e8\u5206\uff0c\u7c7b\u4f3c\u4e8e Unix \u7684 basename \u547d\u4ee4\u3002 \u5c3e\u90e8\u7684\u76ee\u5f55\u5206\u9694\u7b26\u5c06\u88ab\u5ffd\u7565\uff0c\u53c2\u9605 path.sep \u3002 path . basename ( '/foo/bar/baz/asdf/quux.html' ); // \u8fd4\u56de: 'quux.html' path . basename ( '/foo/bar/baz/asdf/quux.html' , '.html' ); // \u8fd4\u56de: 'quux' \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\u6216\u8005\u7ed9\u5b9a\u4e86 ext \u4e14\u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002 path.delimiter # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.9.3 \u63d0\u4f9b\u5e73\u53f0\u7279\u5b9a\u7684\u8def\u5f84\u5b9a\u754c\u7b26\uff1a ; \u7528\u4e8e Windows : \u7528\u4e8e POSIX \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a console . log ( process . env . PATH ); // \u6253\u5370: '/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin' process . env . PATH . split ( path . delimiter ); // \u8fd4\u56de: ['/usr/bin', '/bin', '/usr/sbin', '/sbin', '/usr/local/bin'] \u5728 Windows \u4e0a\uff1a console . log ( process . env . PATH ); // \u6253\u5370: 'C:\\Windows\\system32;C:\\Windows;C:\\Program Files\\node\\' process . env . PATH . split ( path . delimiter ); // \u8fd4\u56de: ['C:\\\\Windows\\\\system32', 'C:\\\\Windows', 'C:\\\\Program Files\\\\node\\\\'] path.dirname(path) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path \u8fd4\u56de: path.dirname() \u65b9\u6cd5\u8fd4\u56de path \u7684\u76ee\u5f55\u540d\uff0c\u7c7b\u4f3c\u4e8e Unix \u7684 dirname \u547d\u4ee4\u3002 \u5c3e\u90e8\u7684\u76ee\u5f55\u5206\u9694\u7b26\u5c06\u88ab\u5ffd\u7565\uff0c\u53c2\u9605 path.sep \u3002 path . dirname ( '/foo/bar/baz/asdf/quux' ); // \u8fd4\u56de: '/foo/bar/baz/asdf' \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002 path.extname(path) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path \u8fd4\u56de: path.extname() \u65b9\u6cd5\u8fd4\u56de path \u7684\u6269\u5c55\u540d\uff0c\u4ece\u6700\u540e\u4e00\u6b21\u51fa\u73b0 . \uff08\u53e5\u70b9\uff09\u5b57\u7b26\u5230 path \u6700\u540e\u4e00\u90e8\u5206\u7684\u5b57\u7b26\u4e32\u7ed3\u675f\u3002 \u5982\u679c\u5728 path \u7684\u6700\u540e\u4e00\u90e8\u5206\u4e2d\u6ca1\u6709 . \uff0c\u6216\u8005\u5982\u679c path \u7684\u57fa\u672c\u540d\u79f0\uff08\u53c2\u9605 path.basename() \uff09\u9664\u4e86\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4ee5\u5916\u6ca1\u6709 . \uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 path . extname ( 'index.html' ); // \u8fd4\u56de: '.html' path . extname ( 'index.coffee.md' ); // \u8fd4\u56de: '.md' path . extname ( 'index.' ); // \u8fd4\u56de: '.' path . extname ( 'index' ); // \u8fd4\u56de: '' path . extname ( '.index' ); // \u8fd4\u56de: '' path . extname ( '.index.md' ); // \u8fd4\u56de: '.md' \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002 path.format(pathObject) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.15 pathObject dir root base name ext \u8fd4\u56de: path.format() \u65b9\u6cd5\u4ece\u5bf9\u8c61\u8fd4\u56de\u8def\u5f84\u5b57\u7b26\u4e32\u3002 \u4e0e path.parse() \u76f8\u53cd\u3002 \u5f53\u4e3a pathObject \u63d0\u4f9b\u5c5e\u6027\u65f6\uff0c\u6ce8\u610f\u4ee5\u4e0b\u7ec4\u5408\uff0c\u5176\u4e2d\u4e00\u4e9b\u5c5e\u6027\u4f18\u5148\u4e8e\u53e6\u4e00\u4e9b\u5c5e\u6027\uff1a \u5982\u679c\u63d0\u4f9b\u4e86 pathObject.dir \uff0c\u5219\u5ffd\u7565 pathObject.root \u3002 \u5982\u679c pathObject.base \u5b58\u5728\uff0c\u5219\u5ffd\u7565 pathObject.ext \u548c pathObject.name \u3002 \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a // \u5982\u679c\u63d0\u4f9b\u4e86 `dir`\u3001 `root` \u548c `base`\uff0c // \u5219\u8fd4\u56de `${dir}${path.sep}${base}`\u3002 // `root` \u4f1a\u88ab\u5ffd\u7565\u3002 path . format ({ root : '/ignored' , dir : '/home/user/dir' , base : 'file.txt' }); // \u8fd4\u56de: '/home/user/dir/file.txt' // \u5982\u679c\u672a\u6307\u5b9a `dir`\uff0c\u5219\u4f7f\u7528 `root`\u3002 // \u5982\u679c\u53ea\u63d0\u4f9b `root`\uff0c\u6216 'dir` \u7b49\u4e8e `root`\uff0c\u5219\u5c06\u4e0d\u5305\u62ec\u5e73\u53f0\u5206\u9694\u7b26\u3002 // `ext` \u5c06\u88ab\u5ffd\u7565\u3002 path . format ({ root : '/' , base : 'file.txt' , ext : 'ignored' }); // \u8fd4\u56de: '/file.txt' // \u5982\u679c\u672a\u6307\u5b9a `base`\uff0c\u5219\u4f7f\u7528 `name` + `ext`\u3002 path . format ({ root : '/' , name : 'file' , ext : '.txt' }); // \u8fd4\u56de: '/file.txt' \u5728 Windows \u4e0a\uff1a path . format ({ dir : 'C:\\\\path\\\\dir' , base : 'file.txt' }); // \u8fd4\u56de: 'C:\\\\path\\\\dir\\\\file.txt' path.isAbsolute(path) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.2 path \u8fd4\u56de: path.isAbsolute() \u65b9\u6cd5\u68c0\u6d4b path \u662f\u5426\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002 \u5982\u679c\u7ed9\u5b9a\u7684 path \u662f\u96f6\u957f\u5ea6\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56de false \u3002 \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a path . isAbsolute ( '/foo/bar' ); // true path . isAbsolute ( '/baz/..' ); // true path . isAbsolute ( 'qux/' ); // false path . isAbsolute ( '.' ); // false \u5728 Windows \u4e0a\uff1a path . isAbsolute ( '//server' ); // true path . isAbsolute ( '\\\\\\\\server' ); // true path . isAbsolute ( 'C:/foo/..' ); // true path . isAbsolute ( 'C:\\\\foo\\\\..' ); // true path . isAbsolute ( 'bar\\\\baz' ); // false path . isAbsolute ( 'bar/baz' ); // false path . isAbsolute ( '.' ); // false \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002 path.join([...paths]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.16 ...paths \u8def\u5f84\u7247\u6bb5\u7684\u5e8f\u5217\u3002 \u8fd4\u56de: path.join() \u65b9\u6cd5\u4f7f\u7528\u5e73\u53f0\u7279\u5b9a\u7684\u5206\u9694\u7b26\u4f5c\u4e3a\u5b9a\u754c\u7b26\u5c06\u6240\u6709\u7ed9\u5b9a\u7684 path \u7247\u6bb5\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u7136\u540e\u89c4\u8303\u5316\u751f\u6210\u7684\u8def\u5f84\u3002 \u96f6\u957f\u5ea6\u7684 path \u7247\u6bb5\u4f1a\u88ab\u5ffd\u7565\u3002 \u5982\u679c\u8fde\u63a5\u7684\u8def\u5f84\u5b57\u7b26\u4e32\u662f\u96f6\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56de '.' \uff0c\u8868\u793a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002 path . join ( '/foo' , 'bar' , 'baz/asdf' , 'quux' , '..' ); // \u8fd4\u56de: '/foo/bar/baz/asdf' path . join ( 'foo' , {}, 'bar' ); // \u629b\u51fa 'TypeError: Path must be a string. Received {}' \u5982\u679c\u4efb\u4f55\u8def\u5f84\u7247\u6bb5\u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002 path.normalize(path) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.23 path \u8fd4\u56de: path.normalize() \u65b9\u6cd5\u89c4\u8303\u5316\u7ed9\u5b9a\u7684 path \uff0c\u89e3\u6790 '..' \u548c '.' \u7247\u6bb5\u3002 \u5f53\u627e\u5230\u591a\u4e2a\u8fde\u7eed\u7684\u8def\u5f84\u6bb5\u5206\u9694\u5b57\u7b26\u65f6\uff08\u4f8b\u5982 POSIX \u4e0a\u7684 / \u3001Windows \u4e0a\u7684 \\ \u6216 / \uff09\uff0c\u5219\u5b83\u4eec\u5c06\u88ab\u66ff\u6362\u4e3a\u5355\u4e2a\u5e73\u53f0\u7279\u5b9a\u7684\u8def\u5f84\u6bb5\u5206\u9694\u7b26\uff08POSIX \u4e0a\u7684 / \u3001Windows \u4e0a\u7684 \\ \uff09\u3002 \u5c3e\u90e8\u7684\u5206\u9694\u7b26\u4f1a\u4fdd\u7559\u3002 \u5982\u679c path \u662f\u96f6\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56de '.' \uff0c\u8868\u793a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002 \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a path . normalize ( '/foo/bar//baz/asdf/quux/..' ); // \u8fd4\u56de: '/foo/bar/baz/asdf' \u5728 Windows \u4e0a\uff1a path . normalize ( 'C:\\\\temp\\\\\\\\foo\\\\bar\\\\..\\\\' ); // \u8fd4\u56de: 'C:\\\\temp\\\\foo\\\\' \u7531\u4e8e Windows \u8bc6\u522b\u591a\u79cd\u8def\u5f84\u5206\u9694\u7b26\uff0c\u56e0\u6b64\u8fd9\u4e9b\u5206\u9694\u7b26\u90fd\u5c06\u88ab\u66ff\u6362\u4e3a Windows \u9996\u9009\u7684\u5206\u9694\u7b26\uff08 \\ \uff09\uff1a path . win32 . normalize ( 'C:////temp\\\\\\\\/\\\\/\\\\/foo/bar' ); // \u8fd4\u56de: 'C:\\\\temp\\\\foo\\\\bar' \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002 path.parse(path) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.15 path \u8fd4\u56de: path.parse() \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u5c5e\u6027\u8868\u793a path \u7684\u91cd\u8981\u5143\u7d20\u3002 \u5c3e\u90e8\u7684\u76ee\u5f55\u5206\u9694\u7b26\u5c06\u88ab\u5ffd\u7565\uff0c\u53c2\u9605 path.sep \u3002 \u8fd4\u56de\u7684\u5bf9\u8c61\u5c06\u5177\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a dir root base name ext \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a path . parse ( '/home/user/dir/file.txt' ); // \u8fd4\u56de: // { root: '/', // dir: '/home/user/dir', // base: 'file.txt', // ext: '.txt', // name: 'file' } \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 dir \u2502 base \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 root \u2502 \u2502 name \u2502 ext \u2502 \" / home/user/dir / file .txt \" \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518 \uff08 \"\" \u884c\u4e2d\u7684\u6240\u6709\u7a7a\u683c\u90fd\u5e94\u8be5\u88ab\u5ffd\u7565 \uff0c \u5b83\u4eec\u7eaf\u7cb9\u662f\u4e3a\u4e86\u683c\u5f0f\u5316 \uff09 \u5728 Windows \u4e0a\uff1a path . parse ( 'C:\\\\path\\\\dir\\\\file.txt' ); // \u8fd4\u56de: // { root: 'C:\\\\', // dir: 'C:\\\\path\\\\dir', // base: 'file.txt', // ext: '.txt', // name: 'file' } \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 dir \u2502 base \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 root \u2502 \u2502 name \u2502 ext \u2502 \" C:\\ path\\dir \\ file .txt \" \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518 \uff08 \"\" \u884c\u4e2d\u7684\u6240\u6709\u7a7a\u683c\u90fd\u5e94\u8be5\u88ab\u5ffd\u7565 \uff0c \u5b83\u4eec\u7eaf\u7cb9\u662f\u4e3a\u4e86\u683c\u5f0f\u5316 \uff09 \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002 path.posix # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.15 path.posix \u5c5e\u6027\u63d0\u4f9b\u5bf9 path \u65b9\u6cd5\u7684 POSIX \u7279\u5b9a\u5b9e\u73b0\u7684\u8bbf\u95ee\u3002 path.relative(from, to) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 from to \u8fd4\u56de: path.relative() \u65b9\u6cd5\u6839\u636e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u8fd4\u56de from \u5230 to \u7684\u76f8\u5bf9\u8def\u5f84\u3002 \u5982\u679c from \u548c to \u5404\u81ea\u89e3\u6790\u5230\u76f8\u540c\u7684\u8def\u5f84\uff08\u5206\u522b\u8c03\u7528 path.resolve() \u4e4b\u540e\uff09\uff0c\u5219\u8fd4\u56de\u96f6\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u5c06\u96f6\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u4f20\u5165 from \u6216 to \uff0c\u5219\u4f7f\u7528\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4ee3\u66ff\u8be5\u96f6\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002 \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a path . relative ( '/data/orandea/test/aaa' , '/data/orandea/impl/bbb' ); // \u8fd4\u56de: '../../impl/bbb' \u5728 Windows \u4e0a\uff1a path . relative ( 'C:\\\\orandea\\\\test\\\\aaa' , 'C:\\\\orandea\\\\impl\\\\bbb' ); // \u8fd4\u56de: '..\\\\..\\\\impl\\\\bbb' \u5982\u679c from \u6216 to \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002 path.resolve([...paths]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.3.4 ...paths \u8def\u5f84\u6216\u8def\u5f84\u7247\u6bb5\u7684\u5e8f\u5217\u3002 \u8fd4\u56de: path.resolve() \u65b9\u6cd5\u5c06\u8def\u5f84\u6216\u8def\u5f84\u7247\u6bb5\u7684\u5e8f\u5217\u89e3\u6790\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002 \u7ed9\u5b9a\u7684\u8def\u5f84\u5e8f\u5217\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u5904\u7406\uff0c\u6bcf\u4e2a\u540e\u7eed\u7684 path \u524d\u7f6e\uff0c\u76f4\u5230\u6784\u9020\u51fa\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\u3002 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u7684\u8def\u5f84\u7247\u6bb5\u5e8f\u5217\uff1a /foo \u3001 /bar \u3001 baz \uff0c\u8c03\u7528 path.resolve('/foo', '/bar', 'baz') \u5c06\u8fd4\u56de /bar/baz \u3002 \u5982\u679c\u5728\u5904\u7406\u5b8c\u6240\u6709\u7ed9\u5b9a\u7684 path \u7247\u6bb5\u4e4b\u540e\u8fd8\u672a\u751f\u6210\u7edd\u5bf9\u8def\u5f84\uff0c\u5219\u518d\u52a0\u4e0a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002 \u751f\u6210\u7684\u8def\u5f84\u5df2\u89c4\u8303\u5316\uff0c\u5e76\u4e14\u9664\u975e\u5c06\u8def\u5f84\u89e3\u6790\u4e3a\u6839\u76ee\u5f55\uff0c\u5426\u5219\u5c06\u5220\u9664\u5c3e\u90e8\u659c\u6760\u3002 \u96f6\u957f\u5ea6\u7684 path \u7247\u6bb5\u4f1a\u88ab\u5ffd\u7565\u3002 \u5982\u679c\u6ca1\u6709\u4f20\u5165 path \u7247\u6bb5\uff0c\u5219 path.resolve() \u5c06\u8fd4\u56de\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\u3002 path . resolve ( '/foo/bar' , './baz' ); // \u8fd4\u56de: '/foo/bar/baz' path . resolve ( '/foo/bar' , '/tmp/file/' ); // \u8fd4\u56de: '/tmp/file' path . resolve ( 'wwwroot' , 'static_files/png/' , '../gif/image.gif' ); // \u5982\u679c\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u662f /home/myself/node\uff0c // \u5219\u8fd4\u56de '/home/myself/node/wwwroot/static_files/gif/image.gif' \u5982\u679c\u4efb\u4f55\u53c2\u6570\u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002 path.sep # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.7.9 \u63d0\u4f9b\u5e73\u53f0\u7279\u5b9a\u7684\u8def\u5f84\u7247\u6bb5\u5206\u9694\u7b26\uff1a Windows \u4e0a\u662f \\ \u3002 POSIX \u4e0a\u662f / \u3002 \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a 'foo/bar/baz' . split ( path . sep ); // \u8fd4\u56de: ['foo', 'bar', 'baz'] \u5728 Windows \u4e0a\uff1a 'foo\\\\bar\\\\baz' . split ( path . sep ); // \u8fd4\u56de: ['foo', 'bar', 'baz'] \u5728 Windows \u4e0a\uff0c\u6b63\u659c\u6760\uff08 / \uff09\u548c\u53cd\u659c\u6760\uff08 \\ \uff09\u90fd\u88ab\u63a5\u53d7\u4e3a\u8def\u5f84\u7247\u6bb5\u5206\u9694\u7b26\u3002 \u4f46\u662f\uff0c path \u65b9\u6cd5\u53ea\u6dfb\u52a0\u53cd\u659c\u6760\uff08 \\ \uff09\u3002 path.toNamespacedPath(path) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v9.0.0 path \u8fd4\u56de: \u4ec5\u5728 Windows \u7cfb\u7edf\u4e0a\uff0c\u8fd4\u56de\u7ed9\u5b9a path \u7684\u7b49\u6548 \u540d\u79f0\u7a7a\u95f4\u524d\u7f00\u8def\u5f84 \u3002 \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5c06\u8fd4\u56de path \u800c\u4e0d\u8fdb\u884c\u4fee\u6539\u3002 \u6b64\u65b9\u6cd5\u4ec5\u5728 Windows \u7cfb\u7edf\u4e0a\u6709\u610f\u4e49\u3002 \u5728 POSIX \u7cfb\u7edf\u4e0a\uff0c\u8be5\u65b9\u6cd5\u4e0d\u53ef\u64cd\u4f5c\uff0c\u5e76\u4e14\u59cb\u7ec8\u8fd4\u56de path \u800c\u4e0d\u8fdb\u884c\u4fee\u6539\u3002 path.win32 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.15 path.win32 \u5c5e\u6027\u63d0\u4f9b\u5bf9\u7279\u5b9a\u4e8e Windows \u7684 path \u65b9\u6cd5\u7684\u5b9e\u73b0\u7684\u8bbf\u95ee\u3002","title":"Node.js-path"},{"location":"nodejs/Node.js-path/#nodejs-v12140","text":"","title":"Node.js v12.14.0 \u6587\u6863"},{"location":"nodejs/Node.js-path/#_1","text":"path\uff08\u8def\u5f84\uff09 Windows \u4e0e POSIX [path.basename(path , ext]) path.delimiter path.dirname(path) path.extname(path) path.format(pathObject) path.isAbsolute(path) [path.join( ...paths]) path.normalize(path) path.parse(path) path.posix path.relative(from, to) [path.resolve( ...paths]) path.sep path.toNamespacedPath(path) path.win32","title":"\u76ee\u5f55"},{"location":"nodejs/Node.js-path/#path","text":"path \u6a21\u5757\u63d0\u4f9b\u7528\u4e8e\u5904\u7406\u6587\u4ef6\u8def\u5f84\u548c\u76ee\u5f55\u8def\u5f84\u7684\u5b9e\u7528\u5de5\u5177\u3002 \u5b83\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\u8bbf\u95ee\uff1a const path = require ( 'path' );","title":"path\uff08\u8def\u5f84\uff09"},{"location":"nodejs/Node.js-path/#windows-posix","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 path \u6a21\u5757\u7684\u9ed8\u8ba4\u64cd\u4f5c\u56e0 Node.js \u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u6240\u5728\u7684\u64cd\u4f5c\u7cfb\u7edf\u800c\u5f02\u3002 \u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u5728 Windows \u64cd\u4f5c\u7cfb\u7edf\u4e0a\u8fd0\u884c\u65f6\uff0c path \u6a21\u5757\u5c06\u5047\u5b9a\u6b63\u5728\u4f7f\u7528 Windows \u98ce\u683c\u7684\u8def\u5f84\u3002 \u56e0\u6b64\uff0c\u4f7f\u7528 path.basename() \u53ef\u80fd\u4f1a\u5728 POSIX \u548c Windows \u4e0a\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c\uff1a \u5728 POSIX \u4e0a: path . basename ( 'C:\\\\temp\\\\myfile.html' ); // \u8fd4\u56de: 'C:\\\\temp\\\\myfile.html' \u5728 Windows \u4e0a: path . basename ( 'C:\\\\temp\\\\myfile.html' ); // \u8fd4\u56de: 'myfile.html' \u8981\u5728\u4efb\u4f55\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u4f7f\u7528 Windows \u6587\u4ef6\u8def\u5f84\u65f6\u83b7\u5f97\u4e00\u81f4\u7684\u7ed3\u679c\uff0c\u5219\u4f7f\u7528 path.win32 \uff1a \u5728 POSIX \u548c Windows \u4e0a: path . win32 . basename ( 'C:\\\\temp\\\\myfile.html' ); // \u8fd4\u56de: 'myfile.html' \u8981\u5728\u4efb\u4f55\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u4f7f\u7528 POSIX \u6587\u4ef6\u8def\u5f84\u65f6\u83b7\u5f97\u4e00\u81f4\u7684\u7ed3\u679c\uff0c\u5219\u4f7f\u7528 path.posix \uff1a \u5728 POSIX \u548c Windows \u4e0a: path . posix . basename ( '/tmp/myfile.html' ); // \u8fd4\u56de: 'myfile.html' \u5728 Windows \u4e0a\uff0cNode.js \u9075\u5faa\u6bcf\u4e2a\u9a71\u52a8\u5668\u5de5\u4f5c\u76ee\u5f55\u7684\u6982\u5ff5\u3002 \u5f53\u4f7f\u7528\u6ca1\u6709\u53cd\u659c\u6760\u7684\u9a71\u52a8\u5668\u8def\u5f84\u65f6\uff0c\u53ef\u4ee5\u89c2\u5bdf\u5230\u6b64\u884c\u4e3a\u3002 \u4f8b\u5982\uff0c path.resolve('c:\\\\') \u53ef\u80fd\u4f1a\u8fd4\u56de\u4e0e path.resolve('c:') \u4e0d\u540c\u7684\u7ed3\u679c\u3002 \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u53c2\u9605 \u6b64 MSDN \u9875\u9762 \u3002","title":"Windows \u4e0e POSIX"},{"location":"nodejs/Node.js-path/#pathbasenamepath-ext","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path ext \u53ef\u9009\u7684\u6587\u4ef6\u6269\u5c55\u540d\u3002 \u8fd4\u56de: path.basename() \u65b9\u6cd5\u8fd4\u56de path \u7684\u6700\u540e\u4e00\u90e8\u5206\uff0c\u7c7b\u4f3c\u4e8e Unix \u7684 basename \u547d\u4ee4\u3002 \u5c3e\u90e8\u7684\u76ee\u5f55\u5206\u9694\u7b26\u5c06\u88ab\u5ffd\u7565\uff0c\u53c2\u9605 path.sep \u3002 path . basename ( '/foo/bar/baz/asdf/quux.html' ); // \u8fd4\u56de: 'quux.html' path . basename ( '/foo/bar/baz/asdf/quux.html' , '.html' ); // \u8fd4\u56de: 'quux' \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\u6216\u8005\u7ed9\u5b9a\u4e86 ext \u4e14\u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002","title":"path.basename(path[, ext])#"},{"location":"nodejs/Node.js-path/#pathdelimiter","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.9.3 \u63d0\u4f9b\u5e73\u53f0\u7279\u5b9a\u7684\u8def\u5f84\u5b9a\u754c\u7b26\uff1a ; \u7528\u4e8e Windows : \u7528\u4e8e POSIX \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a console . log ( process . env . PATH ); // \u6253\u5370: '/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin' process . env . PATH . split ( path . delimiter ); // \u8fd4\u56de: ['/usr/bin', '/bin', '/usr/sbin', '/sbin', '/usr/local/bin'] \u5728 Windows \u4e0a\uff1a console . log ( process . env . PATH ); // \u6253\u5370: 'C:\\Windows\\system32;C:\\Windows;C:\\Program Files\\node\\' process . env . PATH . split ( path . delimiter ); // \u8fd4\u56de: ['C:\\\\Windows\\\\system32', 'C:\\\\Windows', 'C:\\\\Program Files\\\\node\\\\']","title":"path.delimiter#"},{"location":"nodejs/Node.js-path/#pathdirnamepath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path \u8fd4\u56de: path.dirname() \u65b9\u6cd5\u8fd4\u56de path \u7684\u76ee\u5f55\u540d\uff0c\u7c7b\u4f3c\u4e8e Unix \u7684 dirname \u547d\u4ee4\u3002 \u5c3e\u90e8\u7684\u76ee\u5f55\u5206\u9694\u7b26\u5c06\u88ab\u5ffd\u7565\uff0c\u53c2\u9605 path.sep \u3002 path . dirname ( '/foo/bar/baz/asdf/quux' ); // \u8fd4\u56de: '/foo/bar/baz/asdf' \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002","title":"path.dirname(path)#"},{"location":"nodejs/Node.js-path/#pathextnamepath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 path \u8fd4\u56de: path.extname() \u65b9\u6cd5\u8fd4\u56de path \u7684\u6269\u5c55\u540d\uff0c\u4ece\u6700\u540e\u4e00\u6b21\u51fa\u73b0 . \uff08\u53e5\u70b9\uff09\u5b57\u7b26\u5230 path \u6700\u540e\u4e00\u90e8\u5206\u7684\u5b57\u7b26\u4e32\u7ed3\u675f\u3002 \u5982\u679c\u5728 path \u7684\u6700\u540e\u4e00\u90e8\u5206\u4e2d\u6ca1\u6709 . \uff0c\u6216\u8005\u5982\u679c path \u7684\u57fa\u672c\u540d\u79f0\uff08\u53c2\u9605 path.basename() \uff09\u9664\u4e86\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4ee5\u5916\u6ca1\u6709 . \uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 path . extname ( 'index.html' ); // \u8fd4\u56de: '.html' path . extname ( 'index.coffee.md' ); // \u8fd4\u56de: '.md' path . extname ( 'index.' ); // \u8fd4\u56de: '.' path . extname ( 'index' ); // \u8fd4\u56de: '' path . extname ( '.index' ); // \u8fd4\u56de: '' path . extname ( '.index.md' ); // \u8fd4\u56de: '.md' \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002","title":"path.extname(path)#"},{"location":"nodejs/Node.js-path/#pathformatpathobject","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.15 pathObject dir root base name ext \u8fd4\u56de: path.format() \u65b9\u6cd5\u4ece\u5bf9\u8c61\u8fd4\u56de\u8def\u5f84\u5b57\u7b26\u4e32\u3002 \u4e0e path.parse() \u76f8\u53cd\u3002 \u5f53\u4e3a pathObject \u63d0\u4f9b\u5c5e\u6027\u65f6\uff0c\u6ce8\u610f\u4ee5\u4e0b\u7ec4\u5408\uff0c\u5176\u4e2d\u4e00\u4e9b\u5c5e\u6027\u4f18\u5148\u4e8e\u53e6\u4e00\u4e9b\u5c5e\u6027\uff1a \u5982\u679c\u63d0\u4f9b\u4e86 pathObject.dir \uff0c\u5219\u5ffd\u7565 pathObject.root \u3002 \u5982\u679c pathObject.base \u5b58\u5728\uff0c\u5219\u5ffd\u7565 pathObject.ext \u548c pathObject.name \u3002 \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a // \u5982\u679c\u63d0\u4f9b\u4e86 `dir`\u3001 `root` \u548c `base`\uff0c // \u5219\u8fd4\u56de `${dir}${path.sep}${base}`\u3002 // `root` \u4f1a\u88ab\u5ffd\u7565\u3002 path . format ({ root : '/ignored' , dir : '/home/user/dir' , base : 'file.txt' }); // \u8fd4\u56de: '/home/user/dir/file.txt' // \u5982\u679c\u672a\u6307\u5b9a `dir`\uff0c\u5219\u4f7f\u7528 `root`\u3002 // \u5982\u679c\u53ea\u63d0\u4f9b `root`\uff0c\u6216 'dir` \u7b49\u4e8e `root`\uff0c\u5219\u5c06\u4e0d\u5305\u62ec\u5e73\u53f0\u5206\u9694\u7b26\u3002 // `ext` \u5c06\u88ab\u5ffd\u7565\u3002 path . format ({ root : '/' , base : 'file.txt' , ext : 'ignored' }); // \u8fd4\u56de: '/file.txt' // \u5982\u679c\u672a\u6307\u5b9a `base`\uff0c\u5219\u4f7f\u7528 `name` + `ext`\u3002 path . format ({ root : '/' , name : 'file' , ext : '.txt' }); // \u8fd4\u56de: '/file.txt' \u5728 Windows \u4e0a\uff1a path . format ({ dir : 'C:\\\\path\\\\dir' , base : 'file.txt' }); // \u8fd4\u56de: 'C:\\\\path\\\\dir\\\\file.txt'","title":"path.format(pathObject)#"},{"location":"nodejs/Node.js-path/#pathisabsolutepath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.2 path \u8fd4\u56de: path.isAbsolute() \u65b9\u6cd5\u68c0\u6d4b path \u662f\u5426\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002 \u5982\u679c\u7ed9\u5b9a\u7684 path \u662f\u96f6\u957f\u5ea6\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56de false \u3002 \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a path . isAbsolute ( '/foo/bar' ); // true path . isAbsolute ( '/baz/..' ); // true path . isAbsolute ( 'qux/' ); // false path . isAbsolute ( '.' ); // false \u5728 Windows \u4e0a\uff1a path . isAbsolute ( '//server' ); // true path . isAbsolute ( '\\\\\\\\server' ); // true path . isAbsolute ( 'C:/foo/..' ); // true path . isAbsolute ( 'C:\\\\foo\\\\..' ); // true path . isAbsolute ( 'bar\\\\baz' ); // false path . isAbsolute ( 'bar/baz' ); // false path . isAbsolute ( '.' ); // false \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002","title":"path.isAbsolute(path)#"},{"location":"nodejs/Node.js-path/#pathjoinpaths","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.16 ...paths \u8def\u5f84\u7247\u6bb5\u7684\u5e8f\u5217\u3002 \u8fd4\u56de: path.join() \u65b9\u6cd5\u4f7f\u7528\u5e73\u53f0\u7279\u5b9a\u7684\u5206\u9694\u7b26\u4f5c\u4e3a\u5b9a\u754c\u7b26\u5c06\u6240\u6709\u7ed9\u5b9a\u7684 path \u7247\u6bb5\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u7136\u540e\u89c4\u8303\u5316\u751f\u6210\u7684\u8def\u5f84\u3002 \u96f6\u957f\u5ea6\u7684 path \u7247\u6bb5\u4f1a\u88ab\u5ffd\u7565\u3002 \u5982\u679c\u8fde\u63a5\u7684\u8def\u5f84\u5b57\u7b26\u4e32\u662f\u96f6\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56de '.' \uff0c\u8868\u793a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002 path . join ( '/foo' , 'bar' , 'baz/asdf' , 'quux' , '..' ); // \u8fd4\u56de: '/foo/bar/baz/asdf' path . join ( 'foo' , {}, 'bar' ); // \u629b\u51fa 'TypeError: Path must be a string. Received {}' \u5982\u679c\u4efb\u4f55\u8def\u5f84\u7247\u6bb5\u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002","title":"path.join([...paths])#"},{"location":"nodejs/Node.js-path/#pathnormalizepath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.23 path \u8fd4\u56de: path.normalize() \u65b9\u6cd5\u89c4\u8303\u5316\u7ed9\u5b9a\u7684 path \uff0c\u89e3\u6790 '..' \u548c '.' \u7247\u6bb5\u3002 \u5f53\u627e\u5230\u591a\u4e2a\u8fde\u7eed\u7684\u8def\u5f84\u6bb5\u5206\u9694\u5b57\u7b26\u65f6\uff08\u4f8b\u5982 POSIX \u4e0a\u7684 / \u3001Windows \u4e0a\u7684 \\ \u6216 / \uff09\uff0c\u5219\u5b83\u4eec\u5c06\u88ab\u66ff\u6362\u4e3a\u5355\u4e2a\u5e73\u53f0\u7279\u5b9a\u7684\u8def\u5f84\u6bb5\u5206\u9694\u7b26\uff08POSIX \u4e0a\u7684 / \u3001Windows \u4e0a\u7684 \\ \uff09\u3002 \u5c3e\u90e8\u7684\u5206\u9694\u7b26\u4f1a\u4fdd\u7559\u3002 \u5982\u679c path \u662f\u96f6\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56de '.' \uff0c\u8868\u793a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002 \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a path . normalize ( '/foo/bar//baz/asdf/quux/..' ); // \u8fd4\u56de: '/foo/bar/baz/asdf' \u5728 Windows \u4e0a\uff1a path . normalize ( 'C:\\\\temp\\\\\\\\foo\\\\bar\\\\..\\\\' ); // \u8fd4\u56de: 'C:\\\\temp\\\\foo\\\\' \u7531\u4e8e Windows \u8bc6\u522b\u591a\u79cd\u8def\u5f84\u5206\u9694\u7b26\uff0c\u56e0\u6b64\u8fd9\u4e9b\u5206\u9694\u7b26\u90fd\u5c06\u88ab\u66ff\u6362\u4e3a Windows \u9996\u9009\u7684\u5206\u9694\u7b26\uff08 \\ \uff09\uff1a path . win32 . normalize ( 'C:////temp\\\\\\\\/\\\\/\\\\/foo/bar' ); // \u8fd4\u56de: 'C:\\\\temp\\\\foo\\\\bar' \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002","title":"path.normalize(path)#"},{"location":"nodejs/Node.js-path/#pathparsepath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.15 path \u8fd4\u56de: path.parse() \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u5c5e\u6027\u8868\u793a path \u7684\u91cd\u8981\u5143\u7d20\u3002 \u5c3e\u90e8\u7684\u76ee\u5f55\u5206\u9694\u7b26\u5c06\u88ab\u5ffd\u7565\uff0c\u53c2\u9605 path.sep \u3002 \u8fd4\u56de\u7684\u5bf9\u8c61\u5c06\u5177\u6709\u4ee5\u4e0b\u5c5e\u6027\uff1a dir root base name ext \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a path . parse ( '/home/user/dir/file.txt' ); // \u8fd4\u56de: // { root: '/', // dir: '/home/user/dir', // base: 'file.txt', // ext: '.txt', // name: 'file' } \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 dir \u2502 base \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 root \u2502 \u2502 name \u2502 ext \u2502 \" / home/user/dir / file .txt \" \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518 \uff08 \"\" \u884c\u4e2d\u7684\u6240\u6709\u7a7a\u683c\u90fd\u5e94\u8be5\u88ab\u5ffd\u7565 \uff0c \u5b83\u4eec\u7eaf\u7cb9\u662f\u4e3a\u4e86\u683c\u5f0f\u5316 \uff09 \u5728 Windows \u4e0a\uff1a path . parse ( 'C:\\\\path\\\\dir\\\\file.txt' ); // \u8fd4\u56de: // { root: 'C:\\\\', // dir: 'C:\\\\path\\\\dir', // base: 'file.txt', // ext: '.txt', // name: 'file' } \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 dir \u2502 base \u2502 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2524 \u2502 root \u2502 \u2502 name \u2502 ext \u2502 \" C:\\ path\\dir \\ file .txt \" \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518 \uff08 \"\" \u884c\u4e2d\u7684\u6240\u6709\u7a7a\u683c\u90fd\u5e94\u8be5\u88ab\u5ffd\u7565 \uff0c \u5b83\u4eec\u7eaf\u7cb9\u662f\u4e3a\u4e86\u683c\u5f0f\u5316 \uff09 \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002","title":"path.parse(path)#"},{"location":"nodejs/Node.js-path/#pathposix","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.15 path.posix \u5c5e\u6027\u63d0\u4f9b\u5bf9 path \u65b9\u6cd5\u7684 POSIX \u7279\u5b9a\u5b9e\u73b0\u7684\u8bbf\u95ee\u3002","title":"path.posix#"},{"location":"nodejs/Node.js-path/#pathrelativefrom-to","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u7248\u672c\u5386\u53f2 from to \u8fd4\u56de: path.relative() \u65b9\u6cd5\u6839\u636e\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u8fd4\u56de from \u5230 to \u7684\u76f8\u5bf9\u8def\u5f84\u3002 \u5982\u679c from \u548c to \u5404\u81ea\u89e3\u6790\u5230\u76f8\u540c\u7684\u8def\u5f84\uff08\u5206\u522b\u8c03\u7528 path.resolve() \u4e4b\u540e\uff09\uff0c\u5219\u8fd4\u56de\u96f6\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002 \u5982\u679c\u5c06\u96f6\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u4f20\u5165 from \u6216 to \uff0c\u5219\u4f7f\u7528\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4ee3\u66ff\u8be5\u96f6\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\u3002 \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a path . relative ( '/data/orandea/test/aaa' , '/data/orandea/impl/bbb' ); // \u8fd4\u56de: '../../impl/bbb' \u5728 Windows \u4e0a\uff1a path . relative ( 'C:\\\\orandea\\\\test\\\\aaa' , 'C:\\\\orandea\\\\impl\\\\bbb' ); // \u8fd4\u56de: '..\\\\..\\\\impl\\\\bbb' \u5982\u679c from \u6216 to \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002","title":"path.relative(from, to)#"},{"location":"nodejs/Node.js-path/#pathresolvepaths","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.3.4 ...paths \u8def\u5f84\u6216\u8def\u5f84\u7247\u6bb5\u7684\u5e8f\u5217\u3002 \u8fd4\u56de: path.resolve() \u65b9\u6cd5\u5c06\u8def\u5f84\u6216\u8def\u5f84\u7247\u6bb5\u7684\u5e8f\u5217\u89e3\u6790\u4e3a\u7edd\u5bf9\u8def\u5f84\u3002 \u7ed9\u5b9a\u7684\u8def\u5f84\u5e8f\u5217\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u5904\u7406\uff0c\u6bcf\u4e2a\u540e\u7eed\u7684 path \u524d\u7f6e\uff0c\u76f4\u5230\u6784\u9020\u51fa\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\u3002 \u4f8b\u5982\uff0c\u7ed9\u5b9a\u7684\u8def\u5f84\u7247\u6bb5\u5e8f\u5217\uff1a /foo \u3001 /bar \u3001 baz \uff0c\u8c03\u7528 path.resolve('/foo', '/bar', 'baz') \u5c06\u8fd4\u56de /bar/baz \u3002 \u5982\u679c\u5728\u5904\u7406\u5b8c\u6240\u6709\u7ed9\u5b9a\u7684 path \u7247\u6bb5\u4e4b\u540e\u8fd8\u672a\u751f\u6210\u7edd\u5bf9\u8def\u5f84\uff0c\u5219\u518d\u52a0\u4e0a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u3002 \u751f\u6210\u7684\u8def\u5f84\u5df2\u89c4\u8303\u5316\uff0c\u5e76\u4e14\u9664\u975e\u5c06\u8def\u5f84\u89e3\u6790\u4e3a\u6839\u76ee\u5f55\uff0c\u5426\u5219\u5c06\u5220\u9664\u5c3e\u90e8\u659c\u6760\u3002 \u96f6\u957f\u5ea6\u7684 path \u7247\u6bb5\u4f1a\u88ab\u5ffd\u7565\u3002 \u5982\u679c\u6ca1\u6709\u4f20\u5165 path \u7247\u6bb5\uff0c\u5219 path.resolve() \u5c06\u8fd4\u56de\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u7684\u7edd\u5bf9\u8def\u5f84\u3002 path . resolve ( '/foo/bar' , './baz' ); // \u8fd4\u56de: '/foo/bar/baz' path . resolve ( '/foo/bar' , '/tmp/file/' ); // \u8fd4\u56de: '/tmp/file' path . resolve ( 'wwwroot' , 'static_files/png/' , '../gif/image.gif' ); // \u5982\u679c\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u662f /home/myself/node\uff0c // \u5219\u8fd4\u56de '/home/myself/node/wwwroot/static_files/gif/image.gif' \u5982\u679c\u4efb\u4f55\u53c2\u6570\u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u629b\u51fa TypeError \u3002","title":"path.resolve([...paths])#"},{"location":"nodejs/Node.js-path/#pathsep","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.7.9 \u63d0\u4f9b\u5e73\u53f0\u7279\u5b9a\u7684\u8def\u5f84\u7247\u6bb5\u5206\u9694\u7b26\uff1a Windows \u4e0a\u662f \\ \u3002 POSIX \u4e0a\u662f / \u3002 \u4f8b\u5982\uff0c\u5728 POSIX \u4e0a\uff1a 'foo/bar/baz' . split ( path . sep ); // \u8fd4\u56de: ['foo', 'bar', 'baz'] \u5728 Windows \u4e0a\uff1a 'foo\\\\bar\\\\baz' . split ( path . sep ); // \u8fd4\u56de: ['foo', 'bar', 'baz'] \u5728 Windows \u4e0a\uff0c\u6b63\u659c\u6760\uff08 / \uff09\u548c\u53cd\u659c\u6760\uff08 \\ \uff09\u90fd\u88ab\u63a5\u53d7\u4e3a\u8def\u5f84\u7247\u6bb5\u5206\u9694\u7b26\u3002 \u4f46\u662f\uff0c path \u65b9\u6cd5\u53ea\u6dfb\u52a0\u53cd\u659c\u6760\uff08 \\ \uff09\u3002","title":"path.sep#"},{"location":"nodejs/Node.js-path/#pathtonamespacedpathpath","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v9.0.0 path \u8fd4\u56de: \u4ec5\u5728 Windows \u7cfb\u7edf\u4e0a\uff0c\u8fd4\u56de\u7ed9\u5b9a path \u7684\u7b49\u6548 \u540d\u79f0\u7a7a\u95f4\u524d\u7f00\u8def\u5f84 \u3002 \u5982\u679c path \u4e0d\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u5c06\u8fd4\u56de path \u800c\u4e0d\u8fdb\u884c\u4fee\u6539\u3002 \u6b64\u65b9\u6cd5\u4ec5\u5728 Windows \u7cfb\u7edf\u4e0a\u6709\u610f\u4e49\u3002 \u5728 POSIX \u7cfb\u7edf\u4e0a\uff0c\u8be5\u65b9\u6cd5\u4e0d\u53ef\u64cd\u4f5c\uff0c\u5e76\u4e14\u59cb\u7ec8\u8fd4\u56de path \u800c\u4e0d\u8fdb\u884c\u4fee\u6539\u3002","title":"path.toNamespacedPath(path)#"},{"location":"nodejs/Node.js-path/#pathwin32","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.11.15 path.win32 \u5c5e\u6027\u63d0\u4f9b\u5bf9\u7279\u5b9a\u4e8e Windows \u7684 path \u65b9\u6cd5\u7684\u5b9e\u73b0\u7684\u8bbf\u95ee\u3002","title":"path.win32#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/","text":"Node.js v12.14.0 \u6587\u6863 \u00b6 \u8fd4\u56de\u6587\u6863\u9996\u9875 \u641c\u7d22 \u76ee\u5f55 \u00b6 global\uff08\u5168\u5c40\u53d8\u91cf\uff09 Buffer \u7c7b __dirname __filename clearImmediate(immediateObject) clearInterval(intervalObject) clearTimeout(timeoutObject) console exports global module process queueMicrotask(callback) require() [setImmediate(callback , ...args]) [setInterval(callback, delay , ...args]) [setTimeout(callback, delay , ...args]) TextDecoder TextEncoder URL URLSearchParams WebAssembly global\uff08\u5168\u5c40\u53d8\u91cf\uff09 # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6240\u6709\u6a21\u5757\u90fd\u63d0\u4f9b\u8fd9\u4e9b\u5bf9\u8c61\u3002 \u4ee5\u4e0b\u53d8\u91cf\u867d\u7136\u770b\u8d77\u6765\u662f\u5168\u5c40\u7684\uff0c\u4f46\u5176\u5b9e\u5e76\u4e0d\u662f\u3002 \u5b83\u4eec\u4ec5\u5b58\u5728\u4e8e\u6a21\u5757\u8303\u56f4\u5185\uff0c\u8bf7\u53c2\u9605 \u6a21\u5757\u7cfb\u7edf\u6587\u6863 \uff1a __dirname __filename exports module require() \u6b64\u5904\u5217\u51fa\u7684\u5bf9\u8c61\u7279\u5b9a\u4e8e Node.js\u3002 \u6709\u4e9b \u5185\u7f6e\u5bf9\u8c61 \u662f JavaScript \u8bed\u8a00\u672c\u8eab\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4eec\u4e5f\u662f\u5168\u5c40\u53ef\u8bbf\u95ee\u7684\u3002 Buffer \u7c7b # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.103 \u7528\u4e8e\u5904\u7406\u4e8c\u8fdb\u5236\u6570\u636e\u3002\u8bf7\u53c2\u9605 Buffer \u6587\u6863 \u3002 __dirname # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u53d8\u91cf\u867d\u7136\u770b\u4f3c\u5168\u5c40\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u8bf7\u53c2\u9605 __dirname \u6587\u6863\u3002 __filename # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u53d8\u91cf\u867d\u7136\u770b\u4f3c\u5168\u5c40\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u8bf7\u53c2\u9605 __filename \u6587\u6863\u3002 clearImmediate(immediateObject) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.9.1 clearImmediate \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002 clearInterval(intervalObject) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.0.1 clearInterval \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002 clearTimeout(timeoutObject) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.0.1 clearTimeout \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002 console # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.100 \u7528\u4e8e\u6253\u5370\u5230 stdout \u548c stderr \u3002 \u8bf7\u53c2\u9605 console \u6587\u6863\u3002 exports # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u53d8\u91cf\u867d\u7136\u770b\u4f3c\u5168\u5c40\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u8bf7\u53c2\u9605 exports \u6587\u6863\u3002 global # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.27 \u5168\u5c40\u7684\u547d\u540d\u7a7a\u95f4\u5bf9\u8c61\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u9876\u5c42\u4f5c\u7528\u57df\u662f\u5168\u5c40\u4f5c\u7528\u57df\u3002 \u8fd9\u610f\u5473\u7740\u5728\u6d4f\u89c8\u5668\u4e2d var something \u5c06\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u5168\u5c40\u53d8\u91cf\u3002 \u5728 Node.js \u4e2d\uff0c\u8fd9\u662f\u4e0d\u540c\u7684\u3002 \u9876\u5c42\u4f5c\u7528\u57df\u4e0d\u662f\u5168\u5c40\u4f5c\u7528\u57df\uff0cNode.js \u6a21\u5757\u4e2d\u7684 var something \u7684\u4f5c\u7528\u57df\u53ea\u5728\u8be5\u6a21\u5757\u5185\u3002 module # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u53d8\u91cf\u867d\u7136\u770b\u4f3c\u5168\u5c40\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u8bf7\u53c2\u9605 module \u6587\u6863\u3002 process # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.7 \u8fdb\u7a0b\u5bf9\u8c61\u3002 \u8bf7\u53c2\u9605 process \u6587\u6863\u3002 queueMicrotask(callback) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v11.0.0 callback \u8981\u6392\u961f\u7684\u51fd\u6570\u3002 queueMicrotask() \u65b9\u6cd5\u5c06\u5fae\u4efb\u52a1\u6392\u961f\u4ee5\u8c03\u7528 callback \u3002 \u5982\u679c callback \u629b\u51fa\u5f02\u5e38\uff0c\u5219\u5c06\u4f1a\u89e6\u53d1 process \u5bf9\u8c61 \u7684 'uncaughtException' \u4e8b\u4ef6\u3002 \u5fae\u4efb\u52a1\u961f\u5217\u7531 V8 \u7ba1\u7406\uff0c\u53ef\u4ee5\u4e0e process.nextTick() \u961f\u5217\uff08\u7531 Node.js \u7ba1\u7406\uff09\u7c7b\u4f3c\u7684\u65b9\u5f0f\u4f7f\u7528\u3002 \u59cb\u7ec8\u5728 Node.js \u4e8b\u4ef6\u5faa\u73af\u7684\u6bcf\u4e2a\u56de\u5408\u4e2d\u7684\u5fae\u4efb\u52a1\u961f\u5217\u4e4b\u524d\u5904\u7406 process.nextTick() \u961f\u5217\u3002 // `queueMicrotask()` \u7528\u4e8e\u786e\u4fdd 'load' \u4e8b\u4ef6\u59cb\u7ec8\u5f02\u6b65\u5730\u89e6\u53d1\uff0c\u4e14\u56e0\u6b64\u4fdd\u6301\u4e00\u81f4\u3002 // \u5728\u8fd9\u91cc\u4f7f\u7528 `process.nextTick()` \u4f1a\u5bfc\u81f4 'load' \u4e8b\u4ef6\u603b\u662f\u5728\u4efb\u4f55\u5176\u4ed6 promise \u4efb\u52a1\u4e4b\u524d\u89e6\u53d1\u3002 DataHandler . prototype . load = async function load ( key ) { const hit = this . _cache . get ( url ); if ( hit !== undefined ) { queueMicrotask (() => { this . emit ( 'load' , hit ); }); return ; } const data = await fetchData ( key ); this . _cache . set ( url , data ); this . emit ( 'load' , data ); }; require() # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u53d8\u91cf\u867d\u7136\u770b\u4f3c\u5168\u5c40\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u8bf7\u53c2\u9605 require() \u6587\u6863\u3002 setImmediate(callback[, ...args]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.9.1 setImmediate \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002 setInterval(callback, delay[, ...args]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.0.1 setInterval \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002 setTimeout(callback, delay[, ...args]) # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.0.1 setTimeout \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002 TextDecoder # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v11.0.0 WHATWG TextDecoder \u7c7b\u3002 \u53c2\u9605 TextDecoder \u6587\u6863\u3002 TextEncoder # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v11.0.0 WHATWG TextEncoder \u7c7b\u3002 \u53c2\u9605 TextEncoder \u6587\u6863\u3002 URL # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 WHATWG URL \u7c7b\u3002 \u8bf7\u53c2\u9605 URL \u6587\u6863\u3002 URLSearchParams # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 WHATWG URLSearchParams \u7c7b\u3002 \u8bf7\u53c2\u9605 URLSearchParams \u6587\u6863\u3002 WebAssembly # \u00b6 \u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.0.0 \u4f5c\u4e3a\u6240\u6709 W3C WebAssembly \u76f8\u5173\u529f\u80fd\u7684\u547d\u540d\u7a7a\u95f4\u7684\u5bf9\u8c61\u3002 \u6709\u5173\u4f7f\u7528\u548c\u517c\u5bb9\u6027\uff0c\u8bf7\u53c2\u9605 Mozilla \u5f00\u53d1\u8005\u7f51\u7ad9 \u3002","title":"Node.js-\u5168\u5c40\u53d8\u91cf"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#nodejs-v12140","text":"\u8fd4\u56de\u6587\u6863\u9996\u9875 \u641c\u7d22","title":"Node.js v12.14.0 \u6587\u6863"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#_1","text":"global\uff08\u5168\u5c40\u53d8\u91cf\uff09 Buffer \u7c7b __dirname __filename clearImmediate(immediateObject) clearInterval(intervalObject) clearTimeout(timeoutObject) console exports global module process queueMicrotask(callback) require() [setImmediate(callback , ...args]) [setInterval(callback, delay , ...args]) [setTimeout(callback, delay , ...args]) TextDecoder TextEncoder URL URLSearchParams WebAssembly","title":"\u76ee\u5f55"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#global","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6240\u6709\u6a21\u5757\u90fd\u63d0\u4f9b\u8fd9\u4e9b\u5bf9\u8c61\u3002 \u4ee5\u4e0b\u53d8\u91cf\u867d\u7136\u770b\u8d77\u6765\u662f\u5168\u5c40\u7684\uff0c\u4f46\u5176\u5b9e\u5e76\u4e0d\u662f\u3002 \u5b83\u4eec\u4ec5\u5b58\u5728\u4e8e\u6a21\u5757\u8303\u56f4\u5185\uff0c\u8bf7\u53c2\u9605 \u6a21\u5757\u7cfb\u7edf\u6587\u6863 \uff1a __dirname __filename exports module require() \u6b64\u5904\u5217\u51fa\u7684\u5bf9\u8c61\u7279\u5b9a\u4e8e Node.js\u3002 \u6709\u4e9b \u5185\u7f6e\u5bf9\u8c61 \u662f JavaScript \u8bed\u8a00\u672c\u8eab\u7684\u4e00\u90e8\u5206\uff0c\u5b83\u4eec\u4e5f\u662f\u5168\u5c40\u53ef\u8bbf\u95ee\u7684\u3002","title":"global\uff08\u5168\u5c40\u53d8\u91cf\uff09#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#buffer","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.103 \u7528\u4e8e\u5904\u7406\u4e8c\u8fdb\u5236\u6570\u636e\u3002\u8bf7\u53c2\u9605 Buffer \u6587\u6863 \u3002","title":"Buffer \u7c7b#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#__dirname","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u53d8\u91cf\u867d\u7136\u770b\u4f3c\u5168\u5c40\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u8bf7\u53c2\u9605 __dirname \u6587\u6863\u3002","title":"__dirname#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#__filename","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u53d8\u91cf\u867d\u7136\u770b\u4f3c\u5168\u5c40\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u8bf7\u53c2\u9605 __filename \u6587\u6863\u3002","title":"__filename#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#clearimmediateimmediateobject","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.9.1 clearImmediate \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002","title":"clearImmediate(immediateObject)#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#clearintervalintervalobject","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.0.1 clearInterval \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002","title":"clearInterval(intervalObject)#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#cleartimeouttimeoutobject","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.0.1 clearTimeout \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002","title":"clearTimeout(timeoutObject)#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#console","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.100 \u7528\u4e8e\u6253\u5370\u5230 stdout \u548c stderr \u3002 \u8bf7\u53c2\u9605 console \u6587\u6863\u3002","title":"console#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#exports","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u53d8\u91cf\u867d\u7136\u770b\u4f3c\u5168\u5c40\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u8bf7\u53c2\u9605 exports \u6587\u6863\u3002","title":"exports#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#global_1","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.27 \u5168\u5c40\u7684\u547d\u540d\u7a7a\u95f4\u5bf9\u8c61\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\uff0c\u9876\u5c42\u4f5c\u7528\u57df\u662f\u5168\u5c40\u4f5c\u7528\u57df\u3002 \u8fd9\u610f\u5473\u7740\u5728\u6d4f\u89c8\u5668\u4e2d var something \u5c06\u5b9a\u4e49\u4e00\u4e2a\u65b0\u7684\u5168\u5c40\u53d8\u91cf\u3002 \u5728 Node.js \u4e2d\uff0c\u8fd9\u662f\u4e0d\u540c\u7684\u3002 \u9876\u5c42\u4f5c\u7528\u57df\u4e0d\u662f\u5168\u5c40\u4f5c\u7528\u57df\uff0cNode.js \u6a21\u5757\u4e2d\u7684 var something \u7684\u4f5c\u7528\u57df\u53ea\u5728\u8be5\u6a21\u5757\u5185\u3002","title":"global#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#module","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u53d8\u91cf\u867d\u7136\u770b\u4f3c\u5168\u5c40\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u8bf7\u53c2\u9605 module \u6587\u6863\u3002","title":"module#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#process","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.1.7 \u8fdb\u7a0b\u5bf9\u8c61\u3002 \u8bf7\u53c2\u9605 process \u6587\u6863\u3002","title":"process#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#queuemicrotaskcallback","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v11.0.0 callback \u8981\u6392\u961f\u7684\u51fd\u6570\u3002 queueMicrotask() \u65b9\u6cd5\u5c06\u5fae\u4efb\u52a1\u6392\u961f\u4ee5\u8c03\u7528 callback \u3002 \u5982\u679c callback \u629b\u51fa\u5f02\u5e38\uff0c\u5219\u5c06\u4f1a\u89e6\u53d1 process \u5bf9\u8c61 \u7684 'uncaughtException' \u4e8b\u4ef6\u3002 \u5fae\u4efb\u52a1\u961f\u5217\u7531 V8 \u7ba1\u7406\uff0c\u53ef\u4ee5\u4e0e process.nextTick() \u961f\u5217\uff08\u7531 Node.js \u7ba1\u7406\uff09\u7c7b\u4f3c\u7684\u65b9\u5f0f\u4f7f\u7528\u3002 \u59cb\u7ec8\u5728 Node.js \u4e8b\u4ef6\u5faa\u73af\u7684\u6bcf\u4e2a\u56de\u5408\u4e2d\u7684\u5fae\u4efb\u52a1\u961f\u5217\u4e4b\u524d\u5904\u7406 process.nextTick() \u961f\u5217\u3002 // `queueMicrotask()` \u7528\u4e8e\u786e\u4fdd 'load' \u4e8b\u4ef6\u59cb\u7ec8\u5f02\u6b65\u5730\u89e6\u53d1\uff0c\u4e14\u56e0\u6b64\u4fdd\u6301\u4e00\u81f4\u3002 // \u5728\u8fd9\u91cc\u4f7f\u7528 `process.nextTick()` \u4f1a\u5bfc\u81f4 'load' \u4e8b\u4ef6\u603b\u662f\u5728\u4efb\u4f55\u5176\u4ed6 promise \u4efb\u52a1\u4e4b\u524d\u89e6\u53d1\u3002 DataHandler . prototype . load = async function load ( key ) { const hit = this . _cache . get ( url ); if ( hit !== undefined ) { queueMicrotask (() => { this . emit ( 'load' , hit ); }); return ; } const data = await fetchData ( key ); this . _cache . set ( url , data ); this . emit ( 'load' , data ); };","title":"queueMicrotask(callback)#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#require","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u6b64\u53d8\u91cf\u867d\u7136\u770b\u4f3c\u5168\u5c40\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u8bf7\u53c2\u9605 require() \u6587\u6863\u3002","title":"require()#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#setimmediatecallback-args","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.9.1 setImmediate \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002","title":"setImmediate(callback[, ...args])#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#setintervalcallback-delay-args","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.0.1 setInterval \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002","title":"setInterval(callback, delay[, ...args])#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#settimeoutcallback-delay-args","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v0.0.1 setTimeout \u5728 \u5b9a\u65f6\u5668 \u7ae0\u8282\u4e2d\u63cf\u8ff0\u3002","title":"setTimeout(callback, delay[, ...args])#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#textdecoder","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v11.0.0 WHATWG TextDecoder \u7c7b\u3002 \u53c2\u9605 TextDecoder \u6587\u6863\u3002","title":"TextDecoder#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#textencoder","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v11.0.0 WHATWG TextEncoder \u7c7b\u3002 \u53c2\u9605 TextEncoder \u6587\u6863\u3002","title":"TextEncoder#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#url","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 WHATWG URL \u7c7b\u3002 \u8bf7\u53c2\u9605 URL \u6587\u6863\u3002","title":"URL#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#urlsearchparams","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v10.0.0 WHATWG URLSearchParams \u7c7b\u3002 \u8bf7\u53c2\u9605 URLSearchParams \u6587\u6863\u3002","title":"URLSearchParams#"},{"location":"nodejs/Node.js-%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F/#webassembly","text":"\u4e2d\u82f1\u5bf9\u7167 \u63d0\u4ea4\u4fee\u6539 \u65b0\u589e\u4e8e: v8.0.0 \u4f5c\u4e3a\u6240\u6709 W3C WebAssembly \u76f8\u5173\u529f\u80fd\u7684\u547d\u540d\u7a7a\u95f4\u7684\u5bf9\u8c61\u3002 \u6709\u5173\u4f7f\u7528\u548c\u517c\u5bb9\u6027\uff0c\u8bf7\u53c2\u9605 Mozilla \u5f00\u53d1\u8005\u7f51\u7ad9 \u3002","title":"WebAssembly#"},{"location":"nodejs/Node.js%E4%BD%BF%E7%94%A8Nodemailer%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/","text":"Node.js\u4f7f\u7528Nodemailer\u53d1\u9001\u90ae\u4ef6 \u00b6 nodemailer email node.js \u9605\u8bfb\u7ea6 17 \u5206\u949f \u539f\u6587\u94fe\u63a5\uff1a Node.js\u4f7f\u7528Nodemailer\u53d1\u9001\u90ae\u4ef6 \u7535\u5b50\u90ae\u4ef6\u662f\u2014\u79cd\u7528\u7535\u5b50\u624b\u6bb5\u63d0\u4f9b\u4fe1\u606f\u4ea4\u6362\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u662f\u4e92\u8054\u7f51\u5e94\u7528\u6700\u5e7f\u7684\u670d\u52a1\u3002\u901a\u8fc7\u7f51\u7edc\u7684\u7535\u5b50\u90ae\u4ef6\u7cfb\u7edf\uff0c\u7528\u6237\u53ef\u4ee5\u4ee5\u975e\u5e38\u4f4e\u5ec9\u7684\u4ef7\u683c\uff08\u4e0d\u7ba1\u53d1\u9001\u5230\u54ea\u91cc\uff0c\u90fd\u53ea\u9700\u8d1f\u62c5\u7f51\u8d39\uff09\u3001\u975e\u5e38\u5feb\u901f\u7684\u65b9\u5f0f\uff08\u51e0\u79d2\u949f\u4e4b\u5185\u53ef\u4ee5\u53d1\u9001\u5230\u4e16\u754c\u4e0a\u4efb\u4f55\u6307\u5b9a\u7684\u76ee\u7684\u5730\uff09\uff0c\u4e0e\u4e16\u754c\u4e0a\u4efb\u4f55\u4e00\u4e2a\u89d2\u843d\u7684\u7f51\u7edc\u7528\u6237\u8054\u7cfb\u3002 \u5728\u5f88\u591a\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u90fd\u4f1a\u9047\u5230\u90ae\u4ef6\u6ce8\u518c\uff0c\u90ae\u4ef6\u53cd\u9988\u7b49\u9700\u6c42\u3002\u5728node\u4e2d\u6536\u53d1\u7535\u5b50\u90ae\u4ef6\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u5f3a\u5927\u7684\u793e\u533a\u6709\u5404\u79cd\u5404\u6837\u7684\u5305\u53ef\u4ee5\u4f9b\u6211\u4e48\u76f4\u63a5\u4f7f\u7528\u3002 Nodemailer \u5305\u5c31\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5b9e\u73b0\u53d1\u9001\u90ae\u4ef6\u7684\u529f\u80fd\u3002 Github\u6e90\u7801\uff1a https://github.com/ogilhinn/node-abc/tree/master/lesson10 Nodemailer\u7b80\u4ecb \u00b6 Nodemailer\u662f\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684Node.js\u90ae\u4ef6\u53d1\u9001\u7ec4\u4ef6 \u5b98\u7f51\u5730\u5740\uff1a https://nodemailer.com GitHub\u5730\u5740\uff1a https://github.com/nodemailer/nodemailer Nodemailer\u7684\u4e3b\u8981\u7279\u70b9\u5305\u62ec\uff1a \u652f\u6301Unicode\u7f16\u7801 \u652f\u6301Window\u7cfb\u7edf\u73af\u5883 \u652f\u6301HTML\u5185\u5bb9\u548c\u666e\u901a\u6587\u672c\u5185\u5bb9 \u652f\u6301\u9644\u4ef6(\u4f20\u9001\u5927\u9644\u4ef6) \u652f\u6301HTML\u5185\u5bb9\u4e2d\u5d4c\u5165\u56fe\u7247 \u652f\u6301SSL/STARTTLS\u5b89\u5168\u7684\u90ae\u4ef6\u53d1\u9001 \u652f\u6301\u5185\u7f6e\u7684transport\u65b9\u6cd5\u548c\u5176\u4ed6\u63d2\u4ef6\u5b9e\u73b0\u7684transport\u65b9\u6cd5 \u652f\u6301\u81ea\u5b9a\u4e49\u63d2\u4ef6\u5904\u7406\u6d88\u606f \u652f\u6301XOAUTH2\u767b\u5f55\u9a8c\u8bc1 \u5b89\u88c5\u4f7f\u7528 \u00b6 \u9996\u5148\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u8981\u4e0b\u8f7d\u5b89\u88c5 \u6ce8\u610f\uff1aNode.js v6+ npm install nodemailer --save \u6253\u5f00\u5b98\u7f51\u53ef\u4ee5\u770b\u89c1\u4e00\u4e2a\u5c0f\u4f8b\u5b50 'use strict'; const nodemailer = require('nodemailer'); // Generate test SMTP service account from ethereal.email // Only needed if you don't have a real mail account for testing nodemailer.createTestAccount((err, account) => { // create reusable transporter object using the default SMTP transport let transporter = nodemailer.createTransport({ host: 'smtp.ethereal.email', port: 587, secure: false, // true for 465, false for other ports auth: { user: account.user, // generated ethereal user pass: account.pass // generated ethereal password } }); // setup email data with unicode symbols let mailOptions = { from: '\"Fred Foo ?\" <foo@blurdybloop.com>', // sender address to: 'bar@blurdybloop.com, baz@blurdybloop.com', // list of receivers subject: 'Hello \u2714', // Subject line text: 'Hello world?', // plain text body html: '<b>Hello world?</b>' // html body }; // send mail with defined transport object transporter.sendMail(mailOptions, (error, info) => { if (error) { return console.log(error); } console.log('Message sent: %s', info.messageId); // Preview only available when sending through an Ethereal account console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info)); // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@blurdybloop.com> // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou... }); }); \u8fd9\u4e2a\u5c0f\u4f8b\u5b50\u662f\u751f\u6210\u4e86Ethereal\u7684\u8d26\u6237\u8fdb\u884c\u90ae\u4ef6\u53d1\u9001\u6f14\u793a\u7684\u3002\u4f46\u662f\u8fd9\u591a\u6ca1\u610f\u601d\uff0c\u6211\u4eec\u6765\u4f7f\u7528\u81ea\u5df1\u7684\u90ae\u7bb1\u6765\u53d1\u9001\u90ae\u4ef6 \u53d1\u51fa\u4e2a\u771f\u5b9e\u7684\u90ae\u4ef6 \u00b6 \u8fd9\u91cc\u6211\u4f7f\u7528\u4e86\u6211\u7684qq\u90ae\u7bb1\u7ed9163\u90ae\u7bb1\u53d1\u9001email\u3002 'use strict'; const nodemailer = require('nodemailer'); let transporter = nodemailer.createTransport({ // host: 'smtp.ethereal.email', service: 'qq', // \u4f7f\u7528\u4e86\u5185\u7f6e\u4f20\u8f93\u53d1\u9001\u90ae\u4ef6 \u67e5\u770b\u652f\u6301\u5217\u8868\uff1ahttps://nodemailer.com/smtp/well-known/ port: 465, // SMTP \u7aef\u53e3 secureConnection: true, // \u4f7f\u7528\u4e86 SSL auth: { user: 'xxxxxx@qq.com', // \u8fd9\u91cc\u5bc6\u7801\u4e0d\u662fqq\u5bc6\u7801\uff0c\u662f\u4f60\u8bbe\u7f6e\u7684smtp\u6388\u6743\u7801 pass: 'xxxxxx', } }); let mailOptions = { from: '\"JavaScript\u4e4b\u7985\" <xxxxx@qq.com>', // sender address to: 'xxxxxxxx@163.com', // list of receivers subject: 'Hello', // Subject line // \u53d1\u9001text\u6216\u8005html\u683c\u5f0f // text: 'Hello world?', // plain text body html: '<b>Hello world?</b>' // html body }; // send mail with defined transport object transporter.sendMail(mailOptions, (error, info) => { if (error) { return console.log(error); } console.log('Message sent: %s', info.messageId); // Message sent: <04ec7731-cc68-1ef6-303c-61b0f796b78f@qq.com> }); \u8fd0\u884c\u7a0b\u5e8f\uff0c\u6210\u529f\u5c06\u8fd4\u56demessageId\u3002\u8fd9\u662f\u4fbf\u53ef\u4ee5\u53bb\u6536\u4ef6\u7bb1\u67e5\u770b\u8fd9\u4e2a\u65b0\u90ae\u4ef6\u5566 \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6ce8\u610f\uff0cauth.pass \u4e0d\u662f\u90ae\u7bb1\u8d26\u6237\u7684\u5bc6\u7801\u800c\u662fstmp\u7684\u6388\u6743\u7801\u3002 \u5230\u6b64\u6211\u4eec\u5c31\u638c\u63e1\u4e86\u53d1\u90ae\u4ef6\u7684\u57fa\u672c\u64cd\u4f5c\u3002 \u66f4\u591a\u914d\u7f6e \u00b6 CC: Carbon Copy(\u6284\u9001)\uff0c\u7528\u4e8e\u901a\u77e5\u76f8\u5173\u7684\u4eba\uff0c\u6536\u4ef6\u4eba\u53ef\u4ee5\u770b\u5230\u90fd\u90ae\u4ef6\u90fd\u6284\u9001\u7ed9\u8c01\u4e86\u3002\u4e00\u822c\u56de\u62a5\u5de5\u4f5c\u6216\u8de8\u90e8\u95e8\u6c9f\u901a\u65f6\uff0c\u90fd\u4f1aCC\u7ed9\u6536\u4ef6\u4eba\u7684\u9886\u5bfc\u4e00\u4efd BCC:Blind Carbon Copy(\u6697\u6284\u9001)\uff0c\u4e5f\u662f\u7528\u4e8e\u901a\u77e5\u76f8\u5173\u7684\u4eba\uff0c\u4f46\u662f\u6536\u4ef6\u4eba\u662f\u770b\u4e0d\u5230\u90ae\u4ef6\u88ab\u5bc6\u9001\u7ed9\u8c01\u4e86\u3002 attachments: \u9644\u4ef6 \u66f4\u591a\u914d\u7f6e\u9879\uff1a https://nodemailer.com/message/ \u8fd9\u91cc\u6211\u4eec\u5c31\u4e0d\u6f14\u793aCC\u3001BCC\u4e86\uff0c\u8bf7\u81ea\u884c\u5c1d\u8bd5\u3002\u6211\u4eec\u6765\u8bd5\u8bd5\u53d1\u9001\u9644\u4ef6 ... // \u53ea\u9700\u6dfb\u52a0attachments\u914d\u7f6e\u9879\u5373\u53ef attachments: [ { // utf-8 string as an attachment filename: 'text.txt', content: 'hello world!' }, { filename: 'ZenQcode.png', path: path.resolve(__dirname, 'ZenQcode.png'), } ] ... \u53d1\u9001email\uff0c\u5c31\u53ef\u4ee5\u6536\u5230\u4e00\u4e2a\u5185\u5bb9\u4e3ahello world\u7684text.txt\u6587\u4ef6\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6211\u516c\u4f17\u53f7\u7684\u4e8c\u7ef4\u7801\u3002 \u597d\u770b\u7684HTML\u90ae\u4ef6 \u00b6 HTML Email \u7f16\u5199\u6307\u5357: http://www.ruanyifeng.com/blog/2013/06/html_email.html \u8fd9\u513f\uff0c\u6211\u4eec\u4f7f\u7528Foundation for Emails: https://foundation.zurb.com/emails.html\u7684\u6a21\u677f 'use strict'; const nodemailer = require('nodemailer'); const ejs = require('ejs'); const fs = require('fs'); const path = require('path'); let transporter = nodemailer.createTransport({ // host: 'smtp.ethereal.email', service: 'qq', // \u4f7f\u7528\u5185\u7f6e\u4f20\u8f93\u53d1\u9001\u90ae\u4ef6 \u67e5\u770b\u652f\u6301\u5217\u8868\uff1ahttps://nodemailer.com/smtp/well-known/ port: 465, // SMTP \u7aef\u53e3 secureConnection: true, // \u4f7f\u7528 SSL auth: { user: 'xxxxxx@qq.com', // \u8fd9\u91cc\u5bc6\u7801\u4e0d\u662fqq\u5bc6\u7801\uff0c\u662f\u4f60\u8bbe\u7f6e\u7684smtp\u6388\u6743\u7801 pass: 'xxxxxx', } }); let mailOptions = { from: '\"JavaScript\u4e4b\u7985\" <xxxxx@qq.com>', // sender address to: 'xxxxxxxx@163.com', // list of receivers subject: 'Hello', // Subject line // \u53d1\u9001text\u6216\u8005html\u683c\u5f0f // text: 'Hello world?', // plain text body html: fs.createReadStream(path.resolve(__dirname, 'email.html')) // \u6d41 }; // send mail with defined transport object transporter.sendMail(mailOptions, (error, info) => { if (error) { return console.log(error); } console.log('Message sent: %s', info.messageId); // Message sent: <04ec7731-cc68-1ef6-303c-61b0f796b78f@qq.com> }); \u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f60\u5c06\u5982\u613f\u4ee5\u507f\u6536\u5230\u5982\u4e0bEmail\u3002 \u6837\u5f0f\u53ef\u80fd\u4f1a\u6709\u7ec6\u5fae\u504f\u5dee \u4e0a\u9762email\u4e2d\u6211\u4eec\u7528\u4e86\u5916\u94fe\u7684\u56fe\u7247\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9644\u4ef6\u7684\u65b9\u5f0f\uff0c\u5c06\u56fe\u7247\u5d4c\u5165\u8fdb\u53bb\u3002\u7ed9\u9644\u4ef6\u52a0\u4e2a cid \u5c5e\u6027\u5373\u53ef\u3002 ... let mailOptions = { ... html: '<img src=\"cid:01\">', // html body attachments: [ { filename: 'ZenQcode.png', path: path.resolve(__dirname, 'ZenQcode.png'), cid: '01', } ] }; ... \u4f7f\u7528\u6a21\u677f\u5f15\u64ce \u00b6 \u90ae\u4ef6\u4fe1\u606f\u4e00\u822c\u90fd\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u6a21\u677f\u5f15\u64ce\u5bf9HTML\u5185\u5bb9\u8fdb\u884c\u6e32\u67d3\u3002 \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528Ejs\uff1a https://github.com/mde/ejs/\u6765\u505a\u6f14\u793a $ npm install ejs --save ejs\u5177\u4f53\u8bed\u6cd5\u8bf7\u53c2\u770b\u5b98\u65b9\u6587\u6863 \u5148\u5efa\u7acb\u4e00\u4e2aemail.ejs\u6587\u4ef6 <h1>hello <%= title %></h1> <p><%= desc %></p> \u4fee\u6539\u6211\u4eec\u7684js\u6587\u4ef6 ... const template = ejs.compile(fs.readFileSync(path.resolve(__dirname, 'email.ejs'), 'utf8')); const html = template({ title: 'Ejs', desc: '\u4f7f\u7528Ejs\u6e32\u67d3\u6a21\u677f', }); let mailOptions = { from: '\"JavaScript\u4e4b\u7985\" <xxxxx@qq.com>', // sender address to: 'xxxxx@163.com', // list of receivers subject: 'Hello', // Subject line html: html,// html body }; ... \u5230\u6b64\uff0c\u4f60\u7684\u90ae\u7bb1\u5c06\u6536\u5230\u4e00\u4e2a\u52a8\u6001\u6e32\u67d3\u7684hello Ejs\u3002 \u672c\u6587\u5230\u6b64\u544a\u4e00\u6bb5\u843d\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u4f60\u53ef\u4ee5\u5b9e\u73b0\u66f4\u591a\u6709\u7528\u7684\u529f\u80fd HTML email \u6846\u67b6\u63a8\u8350 \u00b6 MJML: https://mjml.io/ emailframe http://emailframe.work/ Foundation for Emails 2: [https://foundation.zurb.com/e...](https://foundation.zurb.com/emails.html) responsive HTML email template: https://github.com/leemunroe/responsive-html-email-template campaignmonitor\uff1a https://www.campaignmonitor.com/a/ \u5de6\u624b\u4ee3\u7801\uff0c\u53f3\u624b\u7816\uff0c\u629b\u7816\u5f15\u7389 \u5982\u679c\u4f60\u77e5\u9053\u66f4\u591a\u597d\u7528HTML email\u8d44\u6e90\uff0c\u7559\u8a00\u4ea4\u6d41\u8ba9\u66f4\u591a\u4eba\u77e5\u9053\u3002 \u6700\u540e\u798f\u5229\u5e72\u8d27\u6765\u4e86 \u00b6","title":"Node.js\u4f7f\u7528Nodemailer\u53d1\u9001\u90ae\u4ef6"},{"location":"nodejs/Node.js%E4%BD%BF%E7%94%A8Nodemailer%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/#nodejsnodemailer","text":"nodemailer email node.js \u9605\u8bfb\u7ea6 17 \u5206\u949f \u539f\u6587\u94fe\u63a5\uff1a Node.js\u4f7f\u7528Nodemailer\u53d1\u9001\u90ae\u4ef6 \u7535\u5b50\u90ae\u4ef6\u662f\u2014\u79cd\u7528\u7535\u5b50\u624b\u6bb5\u63d0\u4f9b\u4fe1\u606f\u4ea4\u6362\u7684\u901a\u4fe1\u65b9\u5f0f\uff0c\u662f\u4e92\u8054\u7f51\u5e94\u7528\u6700\u5e7f\u7684\u670d\u52a1\u3002\u901a\u8fc7\u7f51\u7edc\u7684\u7535\u5b50\u90ae\u4ef6\u7cfb\u7edf\uff0c\u7528\u6237\u53ef\u4ee5\u4ee5\u975e\u5e38\u4f4e\u5ec9\u7684\u4ef7\u683c\uff08\u4e0d\u7ba1\u53d1\u9001\u5230\u54ea\u91cc\uff0c\u90fd\u53ea\u9700\u8d1f\u62c5\u7f51\u8d39\uff09\u3001\u975e\u5e38\u5feb\u901f\u7684\u65b9\u5f0f\uff08\u51e0\u79d2\u949f\u4e4b\u5185\u53ef\u4ee5\u53d1\u9001\u5230\u4e16\u754c\u4e0a\u4efb\u4f55\u6307\u5b9a\u7684\u76ee\u7684\u5730\uff09\uff0c\u4e0e\u4e16\u754c\u4e0a\u4efb\u4f55\u4e00\u4e2a\u89d2\u843d\u7684\u7f51\u7edc\u7528\u6237\u8054\u7cfb\u3002 \u5728\u5f88\u591a\u9879\u76ee\u4e2d\uff0c\u6211\u4eec\u90fd\u4f1a\u9047\u5230\u90ae\u4ef6\u6ce8\u518c\uff0c\u90ae\u4ef6\u53cd\u9988\u7b49\u9700\u6c42\u3002\u5728node\u4e2d\u6536\u53d1\u7535\u5b50\u90ae\u4ef6\u4e5f\u975e\u5e38\u7b80\u5355\uff0c\u56e0\u4e3a\u5f3a\u5927\u7684\u793e\u533a\u6709\u5404\u79cd\u5404\u6837\u7684\u5305\u53ef\u4ee5\u4f9b\u6211\u4e48\u76f4\u63a5\u4f7f\u7528\u3002 Nodemailer \u5305\u5c31\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u5feb\u901f\u5b9e\u73b0\u53d1\u9001\u90ae\u4ef6\u7684\u529f\u80fd\u3002 Github\u6e90\u7801\uff1a https://github.com/ogilhinn/node-abc/tree/master/lesson10","title":"Node.js\u4f7f\u7528Nodemailer\u53d1\u9001\u90ae\u4ef6"},{"location":"nodejs/Node.js%E4%BD%BF%E7%94%A8Nodemailer%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/#nodemailer","text":"Nodemailer\u662f\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684Node.js\u90ae\u4ef6\u53d1\u9001\u7ec4\u4ef6 \u5b98\u7f51\u5730\u5740\uff1a https://nodemailer.com GitHub\u5730\u5740\uff1a https://github.com/nodemailer/nodemailer Nodemailer\u7684\u4e3b\u8981\u7279\u70b9\u5305\u62ec\uff1a \u652f\u6301Unicode\u7f16\u7801 \u652f\u6301Window\u7cfb\u7edf\u73af\u5883 \u652f\u6301HTML\u5185\u5bb9\u548c\u666e\u901a\u6587\u672c\u5185\u5bb9 \u652f\u6301\u9644\u4ef6(\u4f20\u9001\u5927\u9644\u4ef6) \u652f\u6301HTML\u5185\u5bb9\u4e2d\u5d4c\u5165\u56fe\u7247 \u652f\u6301SSL/STARTTLS\u5b89\u5168\u7684\u90ae\u4ef6\u53d1\u9001 \u652f\u6301\u5185\u7f6e\u7684transport\u65b9\u6cd5\u548c\u5176\u4ed6\u63d2\u4ef6\u5b9e\u73b0\u7684transport\u65b9\u6cd5 \u652f\u6301\u81ea\u5b9a\u4e49\u63d2\u4ef6\u5904\u7406\u6d88\u606f \u652f\u6301XOAUTH2\u767b\u5f55\u9a8c\u8bc1","title":"Nodemailer\u7b80\u4ecb"},{"location":"nodejs/Node.js%E4%BD%BF%E7%94%A8Nodemailer%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/#_1","text":"\u9996\u5148\uff0c\u6211\u4eec\u80af\u5b9a\u662f\u8981\u4e0b\u8f7d\u5b89\u88c5 \u6ce8\u610f\uff1aNode.js v6+ npm install nodemailer --save \u6253\u5f00\u5b98\u7f51\u53ef\u4ee5\u770b\u89c1\u4e00\u4e2a\u5c0f\u4f8b\u5b50 'use strict'; const nodemailer = require('nodemailer'); // Generate test SMTP service account from ethereal.email // Only needed if you don't have a real mail account for testing nodemailer.createTestAccount((err, account) => { // create reusable transporter object using the default SMTP transport let transporter = nodemailer.createTransport({ host: 'smtp.ethereal.email', port: 587, secure: false, // true for 465, false for other ports auth: { user: account.user, // generated ethereal user pass: account.pass // generated ethereal password } }); // setup email data with unicode symbols let mailOptions = { from: '\"Fred Foo ?\" <foo@blurdybloop.com>', // sender address to: 'bar@blurdybloop.com, baz@blurdybloop.com', // list of receivers subject: 'Hello \u2714', // Subject line text: 'Hello world?', // plain text body html: '<b>Hello world?</b>' // html body }; // send mail with defined transport object transporter.sendMail(mailOptions, (error, info) => { if (error) { return console.log(error); } console.log('Message sent: %s', info.messageId); // Preview only available when sending through an Ethereal account console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info)); // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@blurdybloop.com> // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou... }); }); \u8fd9\u4e2a\u5c0f\u4f8b\u5b50\u662f\u751f\u6210\u4e86Ethereal\u7684\u8d26\u6237\u8fdb\u884c\u90ae\u4ef6\u53d1\u9001\u6f14\u793a\u7684\u3002\u4f46\u662f\u8fd9\u591a\u6ca1\u610f\u601d\uff0c\u6211\u4eec\u6765\u4f7f\u7528\u81ea\u5df1\u7684\u90ae\u7bb1\u6765\u53d1\u9001\u90ae\u4ef6","title":"\u5b89\u88c5\u4f7f\u7528"},{"location":"nodejs/Node.js%E4%BD%BF%E7%94%A8Nodemailer%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/#_2","text":"\u8fd9\u91cc\u6211\u4f7f\u7528\u4e86\u6211\u7684qq\u90ae\u7bb1\u7ed9163\u90ae\u7bb1\u53d1\u9001email\u3002 'use strict'; const nodemailer = require('nodemailer'); let transporter = nodemailer.createTransport({ // host: 'smtp.ethereal.email', service: 'qq', // \u4f7f\u7528\u4e86\u5185\u7f6e\u4f20\u8f93\u53d1\u9001\u90ae\u4ef6 \u67e5\u770b\u652f\u6301\u5217\u8868\uff1ahttps://nodemailer.com/smtp/well-known/ port: 465, // SMTP \u7aef\u53e3 secureConnection: true, // \u4f7f\u7528\u4e86 SSL auth: { user: 'xxxxxx@qq.com', // \u8fd9\u91cc\u5bc6\u7801\u4e0d\u662fqq\u5bc6\u7801\uff0c\u662f\u4f60\u8bbe\u7f6e\u7684smtp\u6388\u6743\u7801 pass: 'xxxxxx', } }); let mailOptions = { from: '\"JavaScript\u4e4b\u7985\" <xxxxx@qq.com>', // sender address to: 'xxxxxxxx@163.com', // list of receivers subject: 'Hello', // Subject line // \u53d1\u9001text\u6216\u8005html\u683c\u5f0f // text: 'Hello world?', // plain text body html: '<b>Hello world?</b>' // html body }; // send mail with defined transport object transporter.sendMail(mailOptions, (error, info) => { if (error) { return console.log(error); } console.log('Message sent: %s', info.messageId); // Message sent: <04ec7731-cc68-1ef6-303c-61b0f796b78f@qq.com> }); \u8fd0\u884c\u7a0b\u5e8f\uff0c\u6210\u529f\u5c06\u8fd4\u56demessageId\u3002\u8fd9\u662f\u4fbf\u53ef\u4ee5\u53bb\u6536\u4ef6\u7bb1\u67e5\u770b\u8fd9\u4e2a\u65b0\u90ae\u4ef6\u5566 \u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6ce8\u610f\uff0cauth.pass \u4e0d\u662f\u90ae\u7bb1\u8d26\u6237\u7684\u5bc6\u7801\u800c\u662fstmp\u7684\u6388\u6743\u7801\u3002 \u5230\u6b64\u6211\u4eec\u5c31\u638c\u63e1\u4e86\u53d1\u90ae\u4ef6\u7684\u57fa\u672c\u64cd\u4f5c\u3002","title":"\u53d1\u51fa\u4e2a\u771f\u5b9e\u7684\u90ae\u4ef6"},{"location":"nodejs/Node.js%E4%BD%BF%E7%94%A8Nodemailer%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/#_3","text":"CC: Carbon Copy(\u6284\u9001)\uff0c\u7528\u4e8e\u901a\u77e5\u76f8\u5173\u7684\u4eba\uff0c\u6536\u4ef6\u4eba\u53ef\u4ee5\u770b\u5230\u90fd\u90ae\u4ef6\u90fd\u6284\u9001\u7ed9\u8c01\u4e86\u3002\u4e00\u822c\u56de\u62a5\u5de5\u4f5c\u6216\u8de8\u90e8\u95e8\u6c9f\u901a\u65f6\uff0c\u90fd\u4f1aCC\u7ed9\u6536\u4ef6\u4eba\u7684\u9886\u5bfc\u4e00\u4efd BCC:Blind Carbon Copy(\u6697\u6284\u9001)\uff0c\u4e5f\u662f\u7528\u4e8e\u901a\u77e5\u76f8\u5173\u7684\u4eba\uff0c\u4f46\u662f\u6536\u4ef6\u4eba\u662f\u770b\u4e0d\u5230\u90ae\u4ef6\u88ab\u5bc6\u9001\u7ed9\u8c01\u4e86\u3002 attachments: \u9644\u4ef6 \u66f4\u591a\u914d\u7f6e\u9879\uff1a https://nodemailer.com/message/ \u8fd9\u91cc\u6211\u4eec\u5c31\u4e0d\u6f14\u793aCC\u3001BCC\u4e86\uff0c\u8bf7\u81ea\u884c\u5c1d\u8bd5\u3002\u6211\u4eec\u6765\u8bd5\u8bd5\u53d1\u9001\u9644\u4ef6 ... // \u53ea\u9700\u6dfb\u52a0attachments\u914d\u7f6e\u9879\u5373\u53ef attachments: [ { // utf-8 string as an attachment filename: 'text.txt', content: 'hello world!' }, { filename: 'ZenQcode.png', path: path.resolve(__dirname, 'ZenQcode.png'), } ] ... \u53d1\u9001email\uff0c\u5c31\u53ef\u4ee5\u6536\u5230\u4e00\u4e2a\u5185\u5bb9\u4e3ahello world\u7684text.txt\u6587\u4ef6\uff0c\u4ee5\u53ca\u4e00\u4e2a\u6211\u516c\u4f17\u53f7\u7684\u4e8c\u7ef4\u7801\u3002","title":"\u66f4\u591a\u914d\u7f6e"},{"location":"nodejs/Node.js%E4%BD%BF%E7%94%A8Nodemailer%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/#html","text":"HTML Email \u7f16\u5199\u6307\u5357: http://www.ruanyifeng.com/blog/2013/06/html_email.html \u8fd9\u513f\uff0c\u6211\u4eec\u4f7f\u7528Foundation for Emails: https://foundation.zurb.com/emails.html\u7684\u6a21\u677f 'use strict'; const nodemailer = require('nodemailer'); const ejs = require('ejs'); const fs = require('fs'); const path = require('path'); let transporter = nodemailer.createTransport({ // host: 'smtp.ethereal.email', service: 'qq', // \u4f7f\u7528\u5185\u7f6e\u4f20\u8f93\u53d1\u9001\u90ae\u4ef6 \u67e5\u770b\u652f\u6301\u5217\u8868\uff1ahttps://nodemailer.com/smtp/well-known/ port: 465, // SMTP \u7aef\u53e3 secureConnection: true, // \u4f7f\u7528 SSL auth: { user: 'xxxxxx@qq.com', // \u8fd9\u91cc\u5bc6\u7801\u4e0d\u662fqq\u5bc6\u7801\uff0c\u662f\u4f60\u8bbe\u7f6e\u7684smtp\u6388\u6743\u7801 pass: 'xxxxxx', } }); let mailOptions = { from: '\"JavaScript\u4e4b\u7985\" <xxxxx@qq.com>', // sender address to: 'xxxxxxxx@163.com', // list of receivers subject: 'Hello', // Subject line // \u53d1\u9001text\u6216\u8005html\u683c\u5f0f // text: 'Hello world?', // plain text body html: fs.createReadStream(path.resolve(__dirname, 'email.html')) // \u6d41 }; // send mail with defined transport object transporter.sendMail(mailOptions, (error, info) => { if (error) { return console.log(error); } console.log('Message sent: %s', info.messageId); // Message sent: <04ec7731-cc68-1ef6-303c-61b0f796b78f@qq.com> }); \u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f60\u5c06\u5982\u613f\u4ee5\u507f\u6536\u5230\u5982\u4e0bEmail\u3002 \u6837\u5f0f\u53ef\u80fd\u4f1a\u6709\u7ec6\u5fae\u504f\u5dee \u4e0a\u9762email\u4e2d\u6211\u4eec\u7528\u4e86\u5916\u94fe\u7684\u56fe\u7247\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u4f7f\u7528\u9644\u4ef6\u7684\u65b9\u5f0f\uff0c\u5c06\u56fe\u7247\u5d4c\u5165\u8fdb\u53bb\u3002\u7ed9\u9644\u4ef6\u52a0\u4e2a cid \u5c5e\u6027\u5373\u53ef\u3002 ... let mailOptions = { ... html: '<img src=\"cid:01\">', // html body attachments: [ { filename: 'ZenQcode.png', path: path.resolve(__dirname, 'ZenQcode.png'), cid: '01', } ] }; ...","title":"\u597d\u770b\u7684HTML\u90ae\u4ef6"},{"location":"nodejs/Node.js%E4%BD%BF%E7%94%A8Nodemailer%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/#_4","text":"\u90ae\u4ef6\u4fe1\u606f\u4e00\u822c\u90fd\u4e0d\u662f\u56fa\u5b9a\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5f15\u5165\u6a21\u677f\u5f15\u64ce\u5bf9HTML\u5185\u5bb9\u8fdb\u884c\u6e32\u67d3\u3002 \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528Ejs\uff1a https://github.com/mde/ejs/\u6765\u505a\u6f14\u793a $ npm install ejs --save ejs\u5177\u4f53\u8bed\u6cd5\u8bf7\u53c2\u770b\u5b98\u65b9\u6587\u6863 \u5148\u5efa\u7acb\u4e00\u4e2aemail.ejs\u6587\u4ef6 <h1>hello <%= title %></h1> <p><%= desc %></p> \u4fee\u6539\u6211\u4eec\u7684js\u6587\u4ef6 ... const template = ejs.compile(fs.readFileSync(path.resolve(__dirname, 'email.ejs'), 'utf8')); const html = template({ title: 'Ejs', desc: '\u4f7f\u7528Ejs\u6e32\u67d3\u6a21\u677f', }); let mailOptions = { from: '\"JavaScript\u4e4b\u7985\" <xxxxx@qq.com>', // sender address to: 'xxxxx@163.com', // list of receivers subject: 'Hello', // Subject line html: html,// html body }; ... \u5230\u6b64\uff0c\u4f60\u7684\u90ae\u7bb1\u5c06\u6536\u5230\u4e00\u4e2a\u52a8\u6001\u6e32\u67d3\u7684hello Ejs\u3002 \u672c\u6587\u5230\u6b64\u544a\u4e00\u6bb5\u843d\uff0c\u5728\u6b64\u57fa\u7840\u4e0a\u4f60\u53ef\u4ee5\u5b9e\u73b0\u66f4\u591a\u6709\u7528\u7684\u529f\u80fd","title":"\u4f7f\u7528\u6a21\u677f\u5f15\u64ce"},{"location":"nodejs/Node.js%E4%BD%BF%E7%94%A8Nodemailer%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/#html-email","text":"MJML: https://mjml.io/ emailframe http://emailframe.work/ Foundation for Emails 2: [https://foundation.zurb.com/e...](https://foundation.zurb.com/emails.html) responsive HTML email template: https://github.com/leemunroe/responsive-html-email-template campaignmonitor\uff1a https://www.campaignmonitor.com/a/ \u5de6\u624b\u4ee3\u7801\uff0c\u53f3\u624b\u7816\uff0c\u629b\u7816\u5f15\u7389 \u5982\u679c\u4f60\u77e5\u9053\u66f4\u591a\u597d\u7528HTML email\u8d44\u6e90\uff0c\u7559\u8a00\u4ea4\u6d41\u8ba9\u66f4\u591a\u4eba\u77e5\u9053\u3002","title":"HTML email \u6846\u67b6\u63a8\u8350"},{"location":"nodejs/Node.js%E4%BD%BF%E7%94%A8Nodemailer%E5%8F%91%E9%80%81%E9%82%AE%E4%BB%B6/#_5","text":"","title":"\u6700\u540e\u798f\u5229\u5e72\u8d27\u6765\u4e86"},{"location":"nodejs/NodeJS/","text":"NodeJS \u00b6 \u8fdb\u7a0b \u4e0e \u7ebf\u7a0b \u662f\u4e00\u4e2a\u7a0b\u5e8f\u5458\u7684\u5fc5\u77e5\u6982\u5ff5\uff0c\u9762\u8bd5\u7ecf\u5e38\u88ab\u95ee\u53ca\uff0c\u4f46\u662f\u4e00\u4e9b\u6587\u7ae0\u5185\u5bb9\u53ea\u662f\u8bb2\u8bb2\u7406\u8bba\u77e5\u8bc6\uff0c\u53ef\u80fd\u4e00\u4e9b\u5c0f\u4f19\u4f34\u5e76\u6ca1\u6709\u771f\u7684\u7406\u89e3\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u5e94\u7528\u4e5f\u6bd4\u8f83\u5c11\u3002\u672c\u7bc7\u6587\u7ae0\u9664\u4e86\u4ecb\u7ecd\u6982\u5ff5\uff0c\u901a\u8fc7Node.js \u7684\u89d2\u5ea6\u8bb2\u89e3 \u8fdb\u7a0b \u4e0e \u7ebf\u7a0b \uff0c\u5e76\u4e14\u8bb2\u89e3\u4e00\u4e9b\u5728\u9879\u76ee\u4e2d\u7684\u5b9e\u6218\u7684\u5e94\u7528\uff0c\u8ba9\u4f60\u4e0d\u4ec5\u80fd\u8fce\u6218\u9762\u8bd5\u5b98\u8fd8\u53ef\u4ee5\u5728\u5b9e\u6218\u4e2d\u5b8c\u7f8e\u5e94\u7528\u3002 \u4f5c\u8005\u7b80\u4ecb\uff1akoala\uff0c\u4e13\u6ce8\u5b8c\u6574\u7684 Node.js \u6280\u672f\u6808\u5206\u4eab\uff0c\u4ece JavaScript \u5230 Node.js,\u518d\u5230\u540e\u7aef\u6570\u636e\u5e93\uff0c\u795d\u60a8\u6210\u4e3a\u4f18\u79c0\u7684\u9ad8\u7ea7 Node.js \u5de5\u7a0b\u5e08\u3002\u3010\u7a0b\u5e8f\u5458\u6210\u957f\u6307\u5317\u3011\u4f5c\u8005\uff0cGithub \u535a\u5ba2\u5f00\u6e90\u9879\u76ee https://github.com/koala-coding/goodBlog \u6587\u7ae0\u5bfc\u89c8 \u9762\u8bd5\u4f1a\u95ee Node.js\u662f\u5355\u7ebf\u7a0b\u5417\uff1f Node.js \u505a\u8017\u65f6\u7684\u8ba1\u7b97\u65f6\u5019\uff0c\u5982\u4f55\u907f\u514d\u963b\u585e\uff1f Node.js\u5982\u4f55\u5b9e\u73b0\u591a\u8fdb\u7a0b\u7684\u5f00\u542f\u548c\u5173\u95ed\uff1f Node.js\u53ef\u4ee5\u521b\u5efa\u7ebf\u7a0b\u5417\uff1f \u4f60\u4eec\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5982\u4f55\u5b9e\u73b0\u8fdb\u7a0b\u5b88\u62a4\u7684\uff1f \u9664\u4e86\u4f7f\u7528\u7b2c\u4e09\u65b9\u6a21\u5757\uff0c\u4f60\u4eec\u81ea\u5df1\u662f\u5426\u5c01\u88c5\u8fc7\u4e00\u4e2a\u591a\u8fdb\u7a0b\u67b6\u6784? \u8fdb\u7a0b \u8fdb\u7a0b Process \u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u7a0b\u5e8f\u5173\u4e8e\u67d0\u6570\u636e\u96c6\u5408\u4e0a\u7684\u4e00\u6b21\u8fd0\u884c\u6d3b\u52a8\uff0c\u662f\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u7684\u57fa\u7840\uff0c\u8fdb\u7a0b\u662f\u7ebf\u7a0b\u7684\u5bb9\u5668\uff08\u6765\u81ea\u767e\u79d1\uff09\u3002\u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u6211\u4eec\u542f\u52a8\u4e00\u4e2a\u670d\u52a1\u3001\u8fd0\u884c\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5c31\u662f\u5f00\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\uff0c\u4f8b\u5982 Java \u91cc\u7684 JVM \u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0cNode.js \u91cc\u901a\u8fc7 node app.js \u5f00\u542f\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\uff0c\u591a\u8fdb\u7a0b\u5c31\u662f\u8fdb\u7a0b\u7684\u590d\u5236\uff08fork\uff09\uff0cfork \u51fa\u6765\u7684\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u62e5\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u7a7a\u95f4\u5730\u5740\u3001\u6570\u636e\u6808\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u65e0\u6cd5\u8bbf\u95ee\u53e6\u5916\u4e00\u4e2a\u8fdb\u7a0b\u91cc\u5b9a\u4e49\u7684\u53d8\u91cf\u3001\u6570\u636e\u7ed3\u6784\uff0c\u53ea\u6709\u5efa\u7acb\u4e86 IPC \u901a\u4fe1\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u624d\u53ef\u6570\u636e\u5171\u4eab\u3002 Node.js\u5f00\u542f\u670d\u52a1\u8fdb\u7a0b\u4f8b\u5b50 const http = require('http'); const server = http.createServer(); server.listen(3000,()=>{ process.title='\u7a0b\u5e8f\u5458\u6210\u957f\u6307\u5317\u6d4b\u8bd5\u8fdb\u7a0b'; console.log('\u8fdb\u7a0bid',process.pid) }) \u8fd0\u884c\u4e0a\u9762\u4ee3\u7801\u540e\uff0c\u4ee5\u4e0b\u4e3a Mac \u7cfb\u7edf\u81ea\u5e26\u7684\u76d1\u63a7\u5de5\u5177 \u201c\u6d3b\u52a8\u76d1\u89c6\u5668\u201d \u6240\u5c55\u793a\u7684\u6548\u679c\uff0c\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521a\u5f00\u542f\u7684 Nodejs \u8fdb\u7a0b 7663 \u7ebf\u7a0b \u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u9996\u5148\u6211\u4eec\u8981\u6e05\u695a\u7ebf\u7a0b\u662f\u96b6\u5c5e\u4e8e\u8fdb\u7a0b\u7684\uff0c\u88ab\u5305\u542b\u4e8e\u8fdb\u7a0b\u4e4b\u4e2d\u3002 \u4e00\u4e2a\u7ebf\u7a0b\u53ea\u80fd\u96b6\u5c5e\u4e8e\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4f46\u662f\u4e00\u4e2a\u8fdb\u7a0b\u662f\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u7ebf\u7a0b\u7684 \u3002 \u5355\u7ebf\u7a0b \u5355\u7ebf\u7a0b\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u5f00\u4e00\u4e2a\u7ebf\u7a0b Javascript \u5c31\u662f\u5c5e\u4e8e\u5355\u7ebf\u7a0b\uff0c\u7a0b\u5e8f\u987a\u5e8f\u6267\u884c(\u8fd9\u91cc\u6682\u4e14\u4e0d\u63d0JS\u5f02\u6b65)\uff0c\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\u961f\u5217\uff0c\u524d\u9762\u4e00\u4e2a\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u540e\u9762\u624d\u53ef\u4ee5\u6267\u884c\uff0c\u5f53\u4f60\u5728\u4f7f\u7528\u5355\u7ebf\u7a0b\u8bed\u8a00\u7f16\u7801\u65f6\u5207\u52ff\u6709\u8fc7\u591a\u8017\u65f6\u7684\u540c\u6b65\u64cd\u4f5c\uff0c\u5426\u5219\u7ebf\u7a0b\u4f1a\u9020\u6210\u963b\u585e\uff0c\u5bfc\u81f4\u540e\u7eed\u54cd\u5e94\u65e0\u6cd5\u5904\u7406\u3002\u4f60\u5982\u679c\u91c7\u7528 Javascript \u8fdb\u884c\u7f16\u7801\u65f6\u5019\uff0c\u8bf7\u5c3d\u53ef\u80fd\u7684\u5229\u7528Javascript\u5f02\u6b65\u64cd\u4f5c\u7684\u7279\u6027\u3002 \u7ecf\u5178\u8ba1\u7b97\u8017\u65f6\u9020\u6210\u7ebf\u7a0b\u963b\u585e\u7684\u4f8b\u5b50 const http = require('http'); const longComputation = () => { let sum = 0; for (let i = 0; i < 1e10; i++) { sum += i; }; return sum; }; const server = http.createServer(); server.on('request', (req, res) => { if (req.url === '/compute') { console.info('\u8ba1\u7b97\u5f00\u59cb',new Date()); const sum = longComputation(); console.info('\u8ba1\u7b97\u7ed3\u675f',new Date()); return res.end(`Sum is ${sum}`); } else { res.end('Ok') } }); server.listen(3000); //\u6253\u5370\u7ed3\u679c //\u8ba1\u7b97\u5f00\u59cb 2019-07-28T07:08:49.849Z //\u8ba1\u7b97\u7ed3\u675f 2019-07-28T07:09:04.522Z \u67e5\u770b\u6253\u5370\u7ed3\u679c\uff0c\u5f53\u6211\u4eec\u8c03\u7528 127.0.0.1:3000/compute \u7684\u65f6\u5019\uff0c\u5982\u679c\u60f3\u8981\u8c03\u7528\u5176\u4ed6\u7684\u8def\u7531\u5730\u5740\u6bd4\u5982127.0.0.1/\u5927\u7ea6\u9700\u898115\u79d2\u65f6\u95f4\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u4e00\u4e2a\u7528\u6237\u8bf7\u6c42\u5b8c\u7b2c\u4e00\u4e2a compute \u63a5\u53e3\u540e\u9700\u8981\u7b49\u5f8515\u79d2\uff0c\u8fd9\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\u662f\u6781\u5176\u4e0d\u53cb\u597d\u7684\u3002\u4e0b\u6587\u6211\u4f1a\u901a\u8fc7\u521b\u5efa\u591a\u8fdb\u7a0b\u7684\u65b9\u5f0f child_process.fork \u548c cluster \u6765\u89e3\u51b3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u5355\u7ebf\u7a0b\u7684\u4e00\u4e9b\u8bf4\u660e Node.js \u867d\u7136\u662f\u5355\u7ebf\u7a0b\u6a21\u578b\uff0c\u4f46\u662f\u5176\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u3001\u5f02\u6b65\u975e\u963b\u585e\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5e94\u7528\u4e8e\u9ad8\u5e76\u53d1\u573a\u666f\uff0c\u907f\u514d\u4e86\u7ebf\u7a0b\u521b\u5efa\u3001\u7ebf\u7a0b\u4e4b\u95f4\u4e0a\u4e0b\u6587\u5207\u6362\u6240\u4ea7\u751f\u7684\u8d44\u6e90\u5f00\u9500\u3002 \u5f53\u4f60\u7684\u9879\u76ee\u4e2d\u9700\u8981\u6709\u5927\u91cf\u8ba1\u7b97\uff0cCPU \u8017\u65f6\u7684\u64cd\u4f5c\u65f6\u5019\uff0c\u8981\u6ce8\u610f\u8003\u8651\u5f00\u542f\u591a\u8fdb\u7a0b\u6765\u5b8c\u6210\u4e86\u3002 Node.js \u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u9519\u8bef\u4f1a\u5f15\u8d77\u6574\u4e2a\u5e94\u7528\u9000\u51fa\uff0c\u5e94\u7528\u7684\u5065\u58ee\u6027\u503c\u5f97\u8003\u9a8c\uff0c\u5c24\u5176\u662f\u9519\u8bef\u7684\u5f02\u5e38\u629b\u51fa\uff0c\u4ee5\u53ca\u8fdb\u7a0b\u5b88\u62a4\u662f\u5fc5\u987b\u8981\u505a\u7684\u3002 \u5355\u7ebf\u7a0b\u65e0\u6cd5\u5229\u7528\u591a\u6838CPU\uff0c\u4f46\u662f\u540e\u6765Node.js \u63d0\u4f9b\u7684API\u4ee5\u53ca\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5de5\u5177\u76f8\u5e94\u90fd\u5f97\u5230\u4e86\u89e3\u51b3\uff0c\u6587\u7ae0\u540e\u9762\u90fd\u4f1a\u8bb2\u5230\u3002 Node.js \u4e2d\u7684\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b Node.js \u662f Javascript \u5728\u670d\u52a1\u7aef\u7684\u8fd0\u884c\u73af\u5883\uff0c\u6784\u5efa\u5728 chrome \u7684 V8 \u5f15\u64ce\u4e4b\u4e0a\uff0c\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u3001\u975e\u963b\u585eI/O\u6a21\u578b\uff0c\u5145\u5206\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u5f02\u6b65 I/O \u8fdb\u884c\u591a\u4efb\u52a1\u7684\u6267\u884c\uff0c\u9002\u5408\u4e8e I/O \u5bc6\u96c6\u578b\u7684\u5e94\u7528\u573a\u666f\uff0c\u56e0\u4e3a\u5f02\u6b65\uff0c\u7a0b\u5e8f\u65e0\u9700\u963b\u585e\u7b49\u5f85\u7ed3\u679c\u8fd4\u56de\uff0c\u800c\u662f\u57fa\u4e8e\u56de\u8c03\u901a\u77e5\u7684\u673a\u5236\uff0c\u539f\u672c\u540c\u6b65\u6a21\u5f0f\u7b49\u5f85\u7684\u65f6\u95f4\uff0c\u5219\u53ef\u4ee5\u7528\u6765\u5904\u7406\u5176\u5b83\u4efb\u52a1\uff0c \u79d1\u666e\uff1a\u5728 Web \u670d\u52a1\u5668\u65b9\u9762\uff0c\u8457\u540d\u7684 Nginx \u4e5f\u662f\u91c7\u7528\u6b64\u6a21\u5f0f\uff08\u4e8b\u4ef6\u9a71\u52a8\uff09\uff0c\u907f\u514d\u4e86\u591a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u521b\u5efa\u3001\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5f00\u9500\uff0cNginx \u91c7\u7528 C \u8bed\u8a00\u8fdb\u884c\u7f16\u5199\uff0c\u4e3b\u8981\u7528\u6765\u505a\u9ad8\u6027\u80fd\u7684 Web \u670d\u52a1\u5668\uff0c\u4e0d\u9002\u5408\u505a\u4e1a\u52a1\u3002 Web\u4e1a\u52a1\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u4f60\u6709\u9ad8\u5e76\u53d1\u5e94\u7528\u573a\u666f\u90a3\u4e48 Node.js \u4f1a\u662f\u4f60\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u5728\u5355\u6838 CPU \u7cfb\u7edf\u4e4b\u4e0a\u6211\u4eec\u91c7\u7528 \u5355\u8fdb\u7a0b + \u5355\u7ebf\u7a0b \u7684\u6a21\u5f0f\u6765\u5f00\u53d1\u3002\u5728\u591a\u6838 CPU \u7cfb\u7edf\u4e4b\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7 child_process.fork \u5f00\u542f\u591a\u4e2a\u8fdb\u7a0b\uff08Node.js \u5728 v0.8 \u7248\u672c\u4e4b\u540e\u65b0\u589e\u4e86Cluster \u6765\u5b9e\u73b0\u591a\u8fdb\u7a0b\u67b6\u6784\uff09 \uff0c\u5373 \u591a\u8fdb\u7a0b + \u5355\u7ebf\u7a0b \u6a21\u5f0f\u3002\u6ce8\u610f\uff1a\u5f00\u542f\u591a\u8fdb\u7a0b\u4e0d\u662f\u4e3a\u4e86\u89e3\u51b3\u9ad8\u5e76\u53d1\uff0c\u4e3b\u8981\u662f\u89e3\u51b3\u4e86\u5355\u8fdb\u7a0b\u6a21\u5f0f\u4e0b Node.js CPU \u5229\u7528\u7387\u4e0d\u8db3\u7684\u60c5\u51b5\uff0c\u5145\u5206\u5229\u7528\u591a\u6838 CPU \u7684\u6027\u80fd\u3002 Node.js \u4e2d\u7684\u8fdb\u7a0b process \u6a21\u5757 Node.js \u4e2d\u7684\u8fdb\u7a0b Process \u662f\u4e00\u4e2a\u5168\u5c40\u5bf9\u8c61\uff0c\u65e0\u9700 require \u76f4\u63a5\u4f7f\u7528\uff0c\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5f53\u524d\u8fdb\u7a0b\u4e2d\u7684\u76f8\u5173\u4fe1\u606f\u3002\u5b98\u65b9\u6587\u6863\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u4eb2\u81ea\u5b9e\u8df5\u4e0b Process \u6587\u6863\u3002 process.env \uff1a\u73af\u5883\u53d8\u91cf\uff0c\u4f8b\u5982\u901a\u8fc7 process.env.NODE_ENV \u83b7\u53d6\u4e0d\u540c\u73af\u5883\u9879\u76ee\u914d\u7f6e\u4fe1\u606f process.nextTick \uff1a\u8fd9\u4e2a\u5728\u8c08\u53ca Event Loop \u65f6\u7ecf\u5e38\u4e3a\u4f1a\u63d0\u5230 process.pid \uff1a\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0bid process.ppid \uff1a\u5f53\u524d\u8fdb\u7a0b\u5bf9\u5e94\u7684\u7236\u8fdb\u7a0b process.cwd() \uff1a\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u5de5\u4f5c\u76ee\u5f55\uff0c process.platform \uff1a\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u8fd0\u884c\u7684\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0 process.uptime() \uff1a\u5f53\u524d\u8fdb\u7a0b\u5df2\u8fd0\u884c\u65f6\u95f4\uff0c\u4f8b\u5982\uff1apm2 \u5b88\u62a4\u8fdb\u7a0b\u7684 uptime \u503c \u8fdb\u7a0b\u4e8b\u4ef6\uff1a process.on(\u2018uncaughtException\u2019, cb) \u6355\u83b7\u5f02\u5e38\u4fe1\u606f\u3001 process.on(\u2018exit\u2019, cb\uff09 \u8fdb\u7a0b\u63a8\u51fa\u76d1\u542c \u4e09\u4e2a\u6807\u51c6\u6d41\uff1a process.stdout \u6807\u51c6\u8f93\u51fa\u3001 process.stdin \u6807\u51c6\u8f93\u5165\u3001 process.stderr \u6807\u51c6\u9519\u8bef\u8f93\u51fa process.title \u6307\u5b9a\u8fdb\u7a0b\u540d\u79f0\uff0c\u6709\u7684\u65f6\u5019\u9700\u8981\u7ed9\u8fdb\u7a0b\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0 \u4ee5\u4e0a\u4ec5\u5217\u4e3e\u4e86\u90e8\u5206\u5e38\u7528\u5230\u529f\u80fd\u70b9\uff0c\u9664\u4e86 Process \u4e4b\u5916 Node.js \u8fd8\u63d0\u4f9b\u4e86 child_process \u6a21\u5757\u7528\u6765\u5bf9\u5b50\u8fdb\u7a0b\u8fdb\u884c\u64cd\u4f5c\uff0c\u5728\u4e0b\u6587 Nodejs\u8fdb\u7a0b\u521b\u5efa\u4f1a\u7ee7\u7eed\u8bb2\u8ff0\u3002 Node.js \u8fdb\u7a0b\u521b\u5efa \u8fdb\u7a0b\u521b\u5efa\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u672c\u7bc7\u6587\u7ae0\u4ee5child_process\u6a21\u5757\u548ccluster\u6a21\u5757\u8fdb\u884c\u8bb2\u89e3\u3002 child_process\u6a21\u5757 child_process \u662f Node.js \u7684\u5185\u7f6e\u6a21\u5757\uff0c\u5b98\u7f51\u5730\u5740\uff1a child_process \u5b98\u7f51\u5730\u5740\uff1a http://nodejs.cn/api/child_process.html#child_process_child_process \u51e0\u4e2a\u5e38\u7528\u51fd\u6570\uff1a \u56db\u79cd\u65b9\u5f0f child_process.spawn() \uff1a\u9002\u7528\u4e8e\u8fd4\u56de\u5927\u91cf\u6570\u636e\uff0c\u4f8b\u5982\u56fe\u50cf\u5904\u7406\uff0c\u4e8c\u8fdb\u5236\u6570\u636e\u5904\u7406\u3002 child_process.exec() \uff1a\u9002\u7528\u4e8e\u5c0f\u91cf\u6570\u636e\uff0cmaxBuffer \u9ed8\u8ba4\u503c\u4e3a 200 * 1024 \u8d85\u51fa\u8fd9\u4e2a\u9ed8\u8ba4\u503c\u5c06\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\uff0c\u6570\u636e\u91cf\u8fc7\u5927\u53ef\u91c7\u7528 spawn\u3002 child_process.execFile() \uff1a\u7c7b\u4f3c child_process.exec() \uff0c\u533a\u522b\u662f\u4e0d\u80fd\u901a\u8fc7 shell \u6765\u6267\u884c\uff0c\u4e0d\u652f\u6301\u50cf I/O \u91cd\u5b9a\u5411\u548c\u6587\u4ef6\u67e5\u627e\u8fd9\u6837\u7684\u884c\u4e3a child_process.fork() \uff1a \u884d\u751f\u65b0\u7684\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684 V8 \u5b9e\u4f8b\u3001\u5185\u5b58\uff0c\u7cfb\u7edf\u8d44\u6e90\u662f\u6709\u9650\u7684\uff0c\u4e0d\u5efa\u8bae\u884d\u751f\u592a\u591a\u7684\u5b50\u8fdb\u7a0b\u51fa\u6765\uff0c\u901a\u957f\u6839\u636e\u7cfb\u7edf** CPU \u6838\u5fc3\u6570**\u8bbe\u7f6e\u3002 CPU \u6838\u5fc3\u6570\u8fd9\u91cc\u7279\u522b\u8bf4\u660e\u4e0b\uff0cfork \u786e\u5b9e\u53ef\u4ee5\u5f00\u542f\u591a\u4e2a\u8fdb\u7a0b\uff0c\u4f46\u662f\u5e76\u4e0d\u5efa\u8bae\u884d\u751f\u51fa\u6765\u592a\u591a\u7684\u8fdb\u7a0b\uff0ccpu\u6838\u5fc3\u6570\u7684\u83b7\u53d6\u65b9\u5f0f const cpus = require('os').cpus(); ,\u8fd9\u91cc cpus \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\uff0c\u5305\u542b\u6240\u5b89\u88c5\u7684\u6bcf\u4e2a CPU/\u5185\u6838\u7684\u4fe1\u606f\uff0c\u4e8c\u8005\u603b\u548c\u7684\u6570\u7ec4\u54e6\u3002\u5047\u8bbe\u4e3b\u673a\u88c5\u6709\u4e24\u4e2acpu\uff0c\u6bcf\u4e2acpu\u67094\u4e2a\u6838\uff0c\u90a3\u4e48\u603b\u6838\u6570\u5c31\u662f8\u3002 fork\u5f00\u542f\u5b50\u8fdb\u7a0b Demo fork\u5f00\u542f\u5b50\u8fdb\u7a0b\u89e3\u51b3\u6587\u7ae0\u8d77\u521d\u7684\u8ba1\u7b97\u8017\u65f6\u9020\u6210\u7ebf\u7a0b\u963b\u585e\u3002 \u5728\u8fdb\u884c compute \u8ba1\u7b97\u65f6\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u8ba1\u7b97\u5b8c\u6210\u901a\u8fc7 send \u65b9\u6cd5\u5c06\u7ed3\u679c\u53d1\u9001\u7ed9\u4e3b\u8fdb\u7a0b\uff0c\u4e3b\u8fdb\u7a0b\u901a\u8fc7 message \u76d1\u542c\u5230\u4fe1\u606f\u540e\u5904\u7406\u5e76\u9000\u51fa\u3002 fork_app.js const http = require('http'); const fork = require('child_process').fork; const server = http.createServer((req, res) => { if(req.url == '/compute'){ const compute = fork('./fork_compute.js'); compute.send('\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u5b50\u8fdb\u7a0b'); // \u5f53\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u4f7f\u7528 process.send() \u53d1\u9001\u6d88\u606f\u65f6\u4f1a\u89e6\u53d1 'message' \u4e8b\u4ef6 compute.on('message', sum => { res.end(`Sum is ${sum}`); compute.kill(); }); // \u5b50\u8fdb\u7a0b\u76d1\u542c\u5230\u4e00\u4e9b\u9519\u8bef\u6d88\u606f\u9000\u51fa compute.on('close', (code, signal) => { console.log(`\u6536\u5230close\u4e8b\u4ef6\uff0c\u5b50\u8fdb\u7a0b\u6536\u5230\u4fe1\u53f7 ${signal} \u800c\u7ec8\u6b62\uff0c\u9000\u51fa\u7801 ${code}`); compute.kill(); }) }else{ res.end(`ok`); } }); server.listen(3000, 127.0.0.1, () => { console.log(`server started at http://${127.0.0.1}:${3000}`); }); fork_compute.js \u9488\u5bf9\u6587\u521d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u7684\u7684\u4f8b\u5b50\u6211\u4eec\u521b\u5efa\u5b50\u8fdb\u7a0b\u62c6\u5206\u51fa\u6765\u5355\u72ec\u8fdb\u884c\u8fd0\u7b97\u3002 const computation = () => { let sum = 0; console.info('\u8ba1\u7b97\u5f00\u59cb'); console.time('\u8ba1\u7b97\u8017\u65f6'); for (let i = 0; i < 1e10; i++) { sum += i }; console.info('\u8ba1\u7b97\u7ed3\u675f'); console.timeEnd('\u8ba1\u7b97\u8017\u65f6'); return sum; }; process.on('message', msg => { console.log(msg, 'process.pid', process.pid); // \u5b50\u8fdb\u7a0bid const sum = computation(); // \u5982\u679cNode.js\u8fdb\u7a0b\u662f\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u4ea7\u751f\u7684\uff0c\u90a3\u4e48\uff0cprocess.send()\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u7ed9\u7236\u8fdb\u7a0b\u53d1\u9001\u6d88\u606f process.send(sum); }) cluster\u6a21\u5757 cluster \u5f00\u542f\u5b50\u8fdb\u7a0bDemo const http = require('http'); const numCPUs = require('os').cpus().length; const cluster = require('cluster'); if(cluster.isMaster){ console.log('Master proces id is',process.pid); // fork workers for(let i= 0;i<numCPUs;i++){ cluster.fork(); } cluster.on('exit',function(worker,code,signal){ console.log('worker process died,id',worker.process.pid) }) }else{ // Worker\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2aTCP\u8fde\u63a5 // \u8fd9\u91cc\u662f\u4e00\u4e2ahttp\u670d\u52a1\u5668 http.createServer(function(req,res){ res.writeHead(200); res.end('hello word'); }).listen(8000); } cluster\u539f\u7406\u5206\u6790 cluster\u6a21\u5757\u8c03\u7528fork\u65b9\u6cd5\u6765\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u8be5\u65b9\u6cd5\u4e0echild_process\u4e2d\u7684fork\u662f\u540c\u4e00\u4e2a\u65b9\u6cd5\u3002 cluster\u6a21\u5757\u91c7\u7528\u7684\u662f\u7ecf\u5178\u7684\u4e3b\u4ece\u6a21\u578b\uff0cCluster\u4f1a\u521b\u5efa\u4e00\u4e2amaster\uff0c\u7136\u540e\u6839\u636e\u4f60\u6307\u5b9a\u7684\u6570\u91cf\u590d\u5236\u51fa\u591a\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528 cluster.isMaster \u5c5e\u6027\u5224\u65ad\u5f53\u524d\u8fdb\u7a0b\u662fmaster\u8fd8\u662fworker(\u5de5\u4f5c\u8fdb\u7a0b)\u3002\u7531master\u8fdb\u7a0b\u6765\u7ba1\u7406\u6240\u6709\u7684\u5b50\u8fdb\u7a0b\uff0c\u4e3b\u8fdb\u7a0b\u4e0d\u8d1f\u8d23\u5177\u4f53\u7684\u4efb\u52a1\u5904\u7406\uff0c\u4e3b\u8981\u5de5\u4f5c\u662f\u8d1f\u8d23\u8c03\u5ea6\u548c\u7ba1\u7406\u3002 cluster\u6a21\u5757\u4f7f\u7528\u5185\u7f6e\u7684\u8d1f\u8f7d\u5747\u8861\u6765\u66f4\u597d\u5730\u5904\u7406\u7ebf\u7a0b\u4e4b\u95f4\u7684\u538b\u529b\uff0c\u8be5\u8d1f\u8f7d\u5747\u8861\u4f7f\u7528\u4e86 Round-robin \u7b97\u6cd5\uff08\u4e5f\u88ab\u79f0\u4e4b\u4e3a\u5faa\u73af\u7b97\u6cd5\uff09\u3002\u5f53\u4f7f\u7528Round-robin\u8c03\u5ea6\u7b56\u7565\u65f6\uff0cmaster accepts()\u6240\u6709\u4f20\u5165\u7684\u8fde\u63a5\u8bf7\u6c42\uff0c\u7136\u540e\u5c06\u76f8\u5e94\u7684TCP\u8bf7\u6c42\u5904\u7406\u53d1\u9001\u7ed9\u9009\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b\uff08\u8be5\u65b9\u5f0f\u4ecd\u7136\u901a\u8fc7IPC\u6765\u8fdb\u884c\u901a\u4fe1\uff09\u3002 \u5f00\u542f\u591a\u8fdb\u7a0b\u65f6\u5019\u7aef\u53e3\u7591\u95ee\u8bb2\u89e3\uff1a\u5982\u679c\u591a\u4e2aNode\u8fdb\u7a0b\u76d1\u542c\u540c\u4e00\u4e2a\u7aef\u53e3\u65f6\u4f1a\u51fa\u73b0 Error:listen EADDRIUNS \u7684\u9519\u8bef\uff0c\u800ccluster\u6a21\u5757\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8ba9\u591a\u4e2a\u5b50\u8fdb\u7a0b\u76d1\u542c\u540c\u4e00\u4e2a\u7aef\u53e3\u5462?\u539f\u56e0\u662fmaster\u8fdb\u7a0b\u5185\u90e8\u542f\u52a8\u4e86\u4e00\u4e2aTCP\u670d\u52a1\u5668\uff0c\u800c\u771f\u6b63\u76d1\u542c\u7aef\u53e3\u7684\u53ea\u6709\u8fd9\u4e2a\u670d\u52a1\u5668\uff0c\u5f53\u6765\u81ea\u524d\u7aef\u7684\u8bf7\u6c42\u89e6\u53d1\u670d\u52a1\u5668\u7684connection\u4e8b\u4ef6\u540e\uff0cmaster\u4f1a\u5c06\u5bf9\u5e94\u7684socket\u5177\u67c4\u53d1\u9001\u7ed9\u5b50\u8fdb\u7a0b\u3002 child_process \u6a21\u5757\u4e0ecluster \u6a21\u5757\u603b\u7ed3 \u65e0\u8bba\u662f child_process \u6a21\u5757\u8fd8\u662f cluster \u6a21\u5757\uff0c\u4e3a\u4e86\u89e3\u51b3 Node.js \u5b9e\u4f8b\u5355\u7ebf\u7a0b\u8fd0\u884c\uff0c\u65e0\u6cd5\u5229\u7528\u591a\u6838 CPU \u7684\u95ee\u9898\u800c\u51fa\u73b0\u7684\u3002\u6838\u5fc3\u5c31\u662f**\u7236\u8fdb\u7a0b\uff08\u5373 master \u8fdb\u7a0b\uff09\u8d1f\u8d23\u76d1\u542c\u7aef\u53e3\uff0c\u63a5\u6536\u5230\u65b0\u7684\u8bf7\u6c42\u540e\u5c06\u5176\u5206\u53d1\u7ed9\u4e0b\u9762\u7684 worker \u8fdb\u7a0b**\u3002 cluster\u6a21\u5757\u7684\u4e00\u4e2a\u5f0a\u7aef\uff1a cluster\u5185\u90e8\u9690\u65f6\u7684\u6784\u5efaTCP\u670d\u52a1\u5668\u7684\u65b9\u5f0f\u6765\u8bf4\u5bf9\u4f7f\u7528\u8005\u786e\u5b9e\u7b80\u5355\u548c\u900f\u660e\u4e86\u5f88\u591a\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u65e0\u6cd5\u50cf\u4f7f\u7528child_process\u90a3\u6837\u7075\u6d3b\uff0c\u56e0\u4e3a\u4e00\u76f4\u4e3b\u8fdb\u7a0b\u53ea\u80fd\u7ba1\u7406\u4e00\u7ec4\u76f8\u540c\u7684\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u800c\u81ea\u884c\u901a\u8fc7child_process\u6765\u521b\u5efa\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\u53ef\u4ee5\u63a7\u5236\u591a\u7ec4\u8fdb\u7a0b\u3002\u539f\u56e0\u662fchild_process\u64cd\u4f5c\u5b50\u8fdb\u7a0b\u65f6\uff0c\u53ef\u4ee5\u9690\u5f0f\u7684\u521b\u5efa\u591a\u4e2aTCP\u670d\u52a1\u5668\uff0c\u5bf9\u6bd4\u4e0a\u9762\u7684\u4e24\u5e45\u56fe\u5e94\u8be5\u80fd\u7406\u89e3\u6211\u8bf4\u7684\u5185\u5bb9\u3002 Node.js\u8fdb\u7a0b\u901a\u4fe1\u539f\u7406 \u524d\u9762\u8bb2\u89e3\u7684\u65e0\u8bba\u662fchild_process\u6a21\u5757\uff0c\u8fd8\u662fcluster\u6a21\u5757\uff0c\u90fd\u9700\u8981\u4e3b\u8fdb\u7a0b\u548c\u5de5\u4f5c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\u901a\u8fc7fork()\u6216\u8005\u5176\u4ed6API\uff0c\u521b\u5efa\u4e86\u5b50\u8fdb\u7a0b\u4e4b\u540e\uff0c\u4e3a\u4e86\u5b9e\u73b0\u7236\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u7236\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u624d\u80fd\u901a\u8fc7message\u548csend()\u4f20\u9012\u4fe1\u606f\u3002 IPC\u8fd9\u4e2a\u8bcd\u6211\u60f3\u5927\u5bb6\u5e76\u4e0d\u964c\u751f\uff0c\u4e0d\u7ba1\u90a3\u4e00\u5f20\u5f00\u53d1\u8bed\u8a00\u53ea\u8981\u63d0\u5230\u8fdb\u7a0b\u901a\u4fe1\uff0c\u90fd\u4f1a\u63d0\u5230\u5b83\u3002IPC\u7684\u5168\u79f0\u662fInter-Process Communication,\u5373\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002\u5b83\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u8ba9\u4e0d\u540c\u7684\u8fdb\u7a0b\u80fd\u591f\u4e92\u76f8\u8bbf\u95ee\u8d44\u6e90\u5e76\u8fdb\u884c\u534f\u8c03\u5de5\u4f5c\u3002\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u6280\u672f\u6709\u5f88\u591a\uff0c\u5982\u547d\u540d\u7ba1\u9053\uff0c\u533f\u540d\u7ba1\u9053\uff0csocket\uff0c\u4fe1\u53f7\u91cf\uff0c\u5171\u4eab\u5185\u5b58\uff0c\u6d88\u606f\u961f\u5217\u7b49\u3002Node\u4e2d\u5b9e\u73b0IPC\u901a\u9053\u662f\u4f9d\u8d56\u4e8elibuv\u3002windows\u4e0b\u7531\u547d\u540d\u7ba1\u9053(name pipe)\u5b9e\u73b0\uff0c*nix\u7cfb\u7edf\u5219\u91c7\u7528Unix Domain Socket\u5b9e\u73b0\u3002\u8868\u73b0\u5728\u5e94\u7528\u5c42\u4e0a\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u53ea\u6709\u7b80\u5355\u7684message\u4e8b\u4ef6\u548csend()\u65b9\u6cd5\uff0c\u63a5\u53e3\u5341\u5206\u7b80\u6d01\u548c\u6d88\u606f\u5316\u3002 IPC\u521b\u5efa\u548c\u5b9e\u73b0\u793a\u610f\u56fe IPC\u901a\u4fe1\u7ba1\u9053\u662f\u5982\u4f55\u521b\u5efa\u7684 \u7236\u8fdb\u7a0b\u5728\u5b9e\u9645\u521b\u5efa\u5b50\u8fdb\u7a0b\u4e4b\u524d\uff0c\u4f1a\u521b\u5efa IPC\u901a\u9053 \u5e76\u76d1\u542c\u5b83\uff0c\u7136\u540e\u624d \u771f\u6b63\u7684 \u521b\u5efa\u51fa \u5b50\u8fdb\u7a0b \uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u901a\u8fc7\u73af\u5883\u53d8\u91cf\uff08NODE_CHANNEL_FD\uff09\u544a\u8bc9\u5b50\u8fdb\u7a0b\u8fd9\u4e2aIPC\u901a\u9053\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5b50\u8fdb\u7a0b\u5728\u542f\u52a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6839\u636e\u6587\u4ef6\u63cf\u8ff0\u7b26\u53bb\u8fde\u63a5\u8fd9\u4e2a\u5df2\u5b58\u5728\u7684IPC\u901a\u9053\uff0c\u4ece\u800c\u5b8c\u6210\u7236\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u7684\u8fde\u63a5\u3002 Node.js\u53e5\u67c4\u4f20\u9012 \u8bb2\u53e5\u67c4\u4e4b\u524d\uff0c\u5148\u60f3\u4e00\u4e2a\u95ee\u9898\uff0csend\u53e5\u67c4\u53d1\u9001\u7684\u65f6\u5019\uff0c\u771f\u7684\u662f\u5c06\u670d\u52a1\u5668\u5bf9\u8c61\u53d1\u9001\u7ed9\u4e86\u5b50\u8fdb\u7a0b\uff1f \u5b50\u8fdb\u7a0b\u5bf9\u8c61send()\u65b9\u6cd5\u53ef\u4ee5\u53d1\u9001\u7684\u53e5\u67c4\u7c7b\u578b net.Socket TCP\u5957\u63a5\u5b57 net.Server TCP\u670d\u52a1\u5668\uff0c\u4efb\u610f\u5efa\u7acb\u5728TCP\u670d\u52a1\u4e0a\u7684\u5e94\u7528\u5c42\u670d\u52a1\u90fd\u53ef\u4ee5\u4eab\u53d7\u5b83\u5e26\u6765\u7684\u597d\u5904 net.Native C++\u5c42\u9762\u7684TCP\u5957\u63a5\u5b57\u6216IPC\u7ba1\u9053 dgram.Socket UDP\u5957\u63a5\u5b57 dgram.Native C++\u5c42\u9762\u7684UDP\u5957\u63a5\u5b57 send\u53e5\u67c4\u53d1\u9001\u539f\u7406\u5206\u6790 \u7ed3\u5408\u53e5\u67c4\u7684\u53d1\u9001\u4e0e\u8fd8\u539f\u793a\u610f\u56fe\u66f4\u5bb9\u6613\u7406\u89e3\u3002 send() \u65b9\u6cd5\u5728\u5c06\u6d88\u606f\u53d1\u9001\u5230IPC\u7ba1\u9053\u524d\uff0c\u5b9e\u9645\u5c06\u6d88\u606f\u7ec4\u88c5\u6210\u4e86\u4e24\u4e2a\u5bf9\u8c61\uff0c\u4e00\u4e2a\u53c2\u6570\u662fhadler\uff0c\u53e6\u4e00\u4e2a\u662fmessage\u3002message\u53c2\u6570\u5982\u4e0b\u6240\u793a\uff1a { cmd:'NODE_HANDLE', type:'net.Server', msg:message } \u53d1\u9001\u5230IPC\u7ba1\u9053\u4e2d\u7684\u5b9e\u9645\u4e0a\u662f\u6211\u4eec\u8981\u53d1\u9001\u7684\u53e5\u67c4\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u8fd9\u4e2amessage\u5bf9\u8c61\u5728\u5199\u5165\u5230IPC\u7ba1\u9053\u65f6\uff0c\u4e5f\u4f1a\u901a\u8fc7 JSON.stringfy() \u8fdb\u884c\u5e8f\u5217\u5316\u3002\u6240\u4ee5\u6700\u7ec8\u53d1\u9001\u5230IPC\u901a\u9053\u4e2d\u7684\u4fe1\u606f\u90fd\u662f\u5b57\u7b26\u4e32\uff0csend()\u65b9\u6cd5\u80fd\u53d1\u9001\u6d88\u606f\u548c\u53e5\u67c4\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u80fd\u53d1\u9001\u4efb\u4f55\u5bf9\u8c61\u3002 \u8fde\u63a5\u4e86IPC\u901a\u9053\u7684\u5b50\u7ebf\u7a0b\u53ef\u4ee5\u8bfb\u53d6\u7236\u8fdb\u7a0b\u53d1\u6765\u7684\u6d88\u606f\uff0c\u5c06\u5b57\u7b26\u4e32\u901a\u8fc7JSON.parse()\u89e3\u6790\u8fd8\u539f\u4e3a\u5bf9\u8c61\u540e\uff0c\u624d\u89e6\u53d1message\u4e8b\u4ef6\u5c06\u6d88\u606f\u4f20\u9012\u7ed9\u5e94\u7528\u5c42\u4f7f\u7528\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6d88\u606f\u5bf9\u8c61\u8fd8\u8981\u88ab\u8fdb\u884c\u8fc7\u6ee4\u5904\u7406\uff0cmessage.cmd\u7684\u503c\u5982\u679c\u4ee5NODE_\u4e3a\u524d\u7f00\uff0c\u5b83\u5c06\u54cd\u5e94\u4e00\u4e2a\u5185\u90e8\u4e8b\u4ef6internalMessage\uff0c\u5982\u679cmessage.cmd\u503c\u4e3aNODE_HANDLE,\u5b83\u5c06\u53d6\u51fa message.type \u503c\u548c\u5f97\u5230\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e00\u8d77\u8fd8\u539f\u51fa\u4e00\u4e2a\u5bf9\u5e94\u7684\u5bf9\u8c61\u3002 \u4ee5\u53d1\u9001\u7684TCP\u670d\u52a1\u5668\u53e5\u67c4\u4e3a\u4f8b\uff0c\u5b50\u8fdb\u7a0b\u6536\u5230\u6d88\u606f\u540e\u7684\u8fd8\u539f\u8fc7\u7a0b\u4ee3\u7801\u5982\u4e0b: function(message,handle,emit){ var self = this; var server = new net.Server(); server.listen(handler,function(){ emit(server); }); } \u8fd9\u6bb5\u8fd8\u539f\u4ee3\u7801\uff0c \u5b50\u8fdb\u7a0b\u6839\u636emessage.type\u521b\u5efa\u5bf9\u5e94\u7684TCP\u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u76d1\u542c\u5230\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a \u3002\u7531\u4e8e\u5e95\u5c42\u7ec6\u8282\u4e0d\u88ab\u5e94\u7528\u5c42\u611f\u77e5\uff0c\u6240\u4ee5\u5b50\u8fdb\u7a0b\u4e2d\uff0c\u5f00\u53d1\u8005\u4f1a\u6709\u4e00\u79cd\u670d\u52a1\u5668\u5bf9\u8c61\u5c31\u662f\u4ece\u7236\u8fdb\u7a0b\u4e2d\u76f4\u63a5\u4f20\u9012\u8fc7\u6765\u7684\u9519\u89c9\u3002 Node\u8fdb\u7a0b\u4e4b\u95f4\u53ea\u6709\u6d88\u606f\u4f20\u9012\uff0c\u4e0d\u4f1a\u771f\u6b63\u7684\u4f20\u9012\u5bf9\u8c61\uff0c\u8fd9\u79cd\u9519\u89c9\u662f\u62bd\u8c61\u5c01\u88c5\u7684\u7ed3\u679c\u3002\u76ee\u524dNode\u53ea\u652f\u6301\u6211\u524d\u9762\u63d0\u5230\u7684\u51e0\u79cd\u53e5\u67c4\uff0c\u5e76\u975e\u4efb\u610f\u7c7b\u578b\u7684\u53e5\u67c4\u90fd\u80fd\u5728\u8fdb\u7a0b\u4e4b\u95f4\u4f20\u9012\uff0c\u9664\u975e\u5b83\u6709\u5b8c\u6574\u7684\u53d1\u9001\u548c\u8fd8\u539f\u7684\u8fc7\u7a0b\u3002 Node.js\u591a\u8fdb\u7a0b\u67b6\u6784\u6a21\u578b \u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a\u591a\u8fdb\u7a0b\u67b6\u6784\u5b88\u62a4Demo \u7f16\u5199\u4e3b\u8fdb\u7a0b master.js \u4e3b\u8981\u5904\u7406\u4ee5\u4e0b\u903b\u8f91\uff1a \u521b\u5efa\u4e00\u4e2a server \u5e76\u76d1\u542c 3000 \u7aef\u53e3\u3002 \u6839\u636e\u7cfb\u7edf cpus \u5f00\u542f\u591a\u4e2a\u5b50\u8fdb\u7a0b \u901a\u8fc7\u5b50\u8fdb\u7a0b\u5bf9\u8c61\u7684 send \u65b9\u6cd5\u53d1\u9001\u6d88\u606f\u5230\u5b50\u8fdb\u7a0b\u8fdb\u884c\u901a\u4fe1 \u5728\u4e3b\u8fdb\u7a0b\u4e2d\u76d1\u542c\u4e86\u5b50\u8fdb\u7a0b\u7684\u53d8\u5316\uff0c\u5982\u679c\u662f\u81ea\u6740\u4fe1\u53f7\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u3002 \u4e3b\u8fdb\u7a0b\u5728\u76d1\u542c\u5230\u9000\u51fa\u6d88\u606f\u7684\u65f6\u5019\uff0c\u5148\u9000\u51fa\u5b50\u8fdb\u7a0b\u5728\u9000\u51fa\u4e3b\u8fdb\u7a0b // master.js const fork = require('child_process').fork; const cpus = require('os').cpus(); const server = require('net').createServer(); server.listen(3000); process.title = 'node-master' const workers = {}; const createWorker = () => { const worker = fork('worker.js') worker.on('message', function (message) { if (message.act === 'suicide') { createWorker(); } }) worker.on('exit', function(code, signal) { console.log('worker process exited, code: %s signal: %s', code, signal); delete workers[worker.pid]; }); worker.send('server', server); workers[worker.pid] = worker; console.log('worker process created, pid: %s ppid: %s', worker.pid, process.pid); } for (let i=0; i<cpus.length; i++) { createWorker(); } process.once('SIGINT', close.bind(this, 'SIGINT')); // kill(2) Ctrl-C process.once('SIGQUIT', close.bind(this, 'SIGQUIT')); // kill(3) Ctrl-\\ process.once('SIGTERM', close.bind(this, 'SIGTERM')); // kill(15) default process.once('exit', close.bind(this)); function close (code) { console.log('\u8fdb\u7a0b\u9000\u51fa\uff01', code); if (code !== 0) { for (let pid in workers) { console.log('master process exited, kill worker pid: ', pid); workers[pid].kill('SIGINT'); } } process.exit(0); } \u5de5\u4f5c\u8fdb\u7a0b worker.js \u5b50\u8fdb\u7a0b\u5904\u7406\u903b\u8f91\u5982\u4e0b\uff1a \u521b\u5efa\u4e00\u4e2a server \u5bf9\u8c61\uff0c\u6ce8\u610f\u8fd9\u91cc\u6700\u5f00\u59cb\u5e76\u6ca1\u6709\u76d1\u542c 3000 \u7aef\u53e3 \u901a\u8fc7 message \u4e8b\u4ef6\u63a5\u6536\u4e3b\u8fdb\u7a0b send \u65b9\u6cd5\u53d1\u9001\u7684\u6d88\u606f \u76d1\u542c uncaughtException \u4e8b\u4ef6\uff0c\u6355\u83b7\u672a\u5904\u7406\u7684\u5f02\u5e38\uff0c\u53d1\u9001\u81ea\u6740\u4fe1\u606f\u7531\u4e3b\u8fdb\u7a0b\u91cd\u5efa\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u5728\u94fe\u63a5\u5173\u95ed\u4e4b\u540e\u9000\u51fa // worker.js const http = require('http'); const server = http.createServer((req, res) => { res.writeHead(200, { 'Content-Type': 'text/plan' }); res.end('I am worker, pid: ' + process.pid + ', ppid: ' + process.ppid); throw new Error('worker process exception!'); // \u6d4b\u8bd5\u5f02\u5e38\u8fdb\u7a0b\u9000\u51fa\u3001\u91cd\u542f }); let worker; process.title = 'node-worker' process.on('message', function (message, sendHandle) { if (message === 'server') { worker = sendHandle; worker.on('connection', function(socket) { server.emit('connection', socket); }); } }); process.on('uncaughtException', function (err) { console.log(err); process.send({act: 'suicide'}); worker.close(function () { process.exit(1); }) }) Node.js \u8fdb\u7a0b\u5b88\u62a4 \u4ec0\u4e48\u662f\u8fdb\u7a0b\u5b88\u62a4\uff1f \u6bcf\u6b21\u542f\u52a8 Node.js \u7a0b\u5e8f\u90fd\u9700\u8981\u5728\u547d\u4ee4\u7a97\u53e3\u8f93\u5165\u547d\u4ee4 node app.js \u624d\u80fd\u542f\u52a8\uff0c\u4f46\u5982\u679c\u628a\u547d\u4ee4\u7a97\u53e3\u5173\u95ed\u5219Node.js \u7a0b\u5e8f\u670d\u52a1\u5c31\u4f1a\u7acb\u523b\u65ad\u6389\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5f53\u6211\u4eec\u8fd9\u4e2a Node.js \u670d\u52a1\u610f\u5916\u5d29\u6e83\u4e86\u5c31\u4e0d\u80fd\u81ea\u52a8\u91cd\u542f\u8fdb\u7a0b\u4e86\u3002\u8fd9\u4e9b\u73b0\u8c61\u90fd\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u770b\u5230\u7684\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7\u67d0\u4e9b\u65b9\u5f0f\u6765\u5b88\u62a4\u8fd9\u4e2a\u5f00\u542f\u7684\u8fdb\u7a0b\uff0c\u6267\u884c node app.js \u5f00\u542f\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\u4e4b\u540e\uff0c\u6211\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u7ec8\u7aef\u4e0a\u505a\u4e9b\u522b\u7684\u4e8b\u60c5\uff0c\u4e14\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\u3002\uff0c\u5f53\u51fa\u73b0\u95ee\u9898\u53ef\u4ee5\u81ea\u52a8\u91cd\u542f\u3002 \u5982\u4f55\u5b9e\u73b0\u8fdb\u7a0b\u5b88\u62a4 \u8fd9\u91cc\u6211\u53ea\u8bf4\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u8fdb\u7a0b\u5b88\u62a4\u6846\u67b6\uff0cpm2 \u548c forever \uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u5b9e\u73b0\u8fdb\u7a0b\u5b88\u62a4\uff0c\u5e95\u5c42\u4e5f\u90fd\u662f\u901a\u8fc7\u4e0a\u9762\u8bb2\u7684 child_process \u6a21\u5757\u548c cluster \u6a21\u5757 \u5b9e\u73b0\u7684\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u63d0\u5b83\u4eec\u7684\u539f\u7406\u3002 pm2 \u6307\u5b9a\u751f\u4ea7\u73af\u5883\u542f\u52a8\u4e00\u4e2a\u540d\u4e3a test \u7684 node \u670d\u52a1 pm2 start app.js --env production --name test pm2\u5e38\u7528api pm2 stop Name/processID \u505c\u6b62\u67d0\u4e2a\u670d\u52a1\uff0c\u901a\u8fc7\u670d\u52a1\u540d\u79f0\u6216\u8005\u670d\u52a1\u8fdb\u7a0bID pm2 delete Name/processID \u5220\u9664\u67d0\u4e2a\u670d\u52a1\uff0c\u901a\u8fc7\u670d\u52a1\u540d\u79f0\u6216\u8005\u670d\u52a1\u8fdb\u7a0bID pm2 logs [Name] \u67e5\u770b\u65e5\u5fd7\uff0c\u5982\u679c\u6dfb\u52a0\u670d\u52a1\u540d\u79f0\uff0c\u5219\u6307\u5b9a\u67e5\u770b\u67d0\u4e2a\u670d\u52a1\u7684\u65e5\u5fd7\uff0c\u4e0d\u52a0\u5219\u67e5\u770b\u6240\u6709\u65e5\u5fd7 pm2 start app.js -i 4 \u96c6\u7fa4\uff0c-i \u53c2\u6570\u7528\u6765\u544a\u8bc9PM2\u4ee5cluster_mode\u7684\u5f62\u5f0f\u8fd0\u884c\u4f60\u7684app\uff08\u5bf9\u5e94\u7684\u53ebfork_mode\uff09\uff0c\u540e\u9762\u7684\u6570\u5b57\u8868\u793a\u8981\u542f\u52a8\u7684\u5de5\u4f5c\u7ebf\u7a0b\u7684\u6570\u91cf\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u6570\u5b57\u4e3a0\uff0cPM2\u5219\u4f1a\u6839\u636e\u4f60CPU\u6838\u5fc3\u7684\u6570\u91cf\u6765\u751f\u6210\u5bf9\u5e94\u7684\u5de5\u4f5c\u7ebf\u7a0b\u3002\u6ce8\u610f\u4e00\u822c\u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528cluster_mode\u6a21\u5f0f\uff0c\u6d4b\u8bd5\u6216\u8005\u672c\u5730\u73af\u5883\u4e00\u822c\u4f7f\u7528fork\u6a21\u5f0f\uff0c\u65b9\u4fbf\u6d4b\u8bd5\u5230\u9519\u8bef\u3002 pm2 reload Name pm2 restart Name \u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u6709\u66f4\u65b0\uff0c\u53ef\u4ee5\u7528\u91cd\u8f7d\u6765\u52a0\u8f7d\u65b0\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u7528\u91cd\u542f\u6765\u5b8c\u6210,reload\u53ef\u4ee5\u505a\u52300\u79d2\u5b95\u673a\u52a0\u8f7d\u65b0\u7684\u4ee3\u7801\uff0crestart\u5219\u662f\u91cd\u65b0\u542f\u52a8\uff0c\u751f\u4ea7\u73af\u5883\u4e2d\u591a\u7528reload\u6765\u5b8c\u6210\u4ee3\u7801\u66f4\u65b0\uff01 pm2 show Name \u67e5\u770b\u670d\u52a1\u8be6\u60c5 pm2 list \u67e5\u770bpm2\u4e2d\u6240\u6709\u9879\u76ee pm2 monit \u7528monit\u53ef\u4ee5\u6253\u5f00\u5b9e\u65f6\u76d1\u89c6\u5668\u53bb\u67e5\u770b\u8d44\u6e90\u5360\u7528\u60c5\u51b5 pm2 \u5b98\u7f51\u5730\u5740\uff1a http://pm2.keymetrics.io/docs/usage/quick-start/ forever \u5c31\u4e0d\u7279\u6b8a\u8bf4\u660e\u4e86\uff0c\u5b98\u7f51\u5730\u5740 https://github.com/foreverjs/forever \u6ce8\u610f\uff1a\u4e8c\u8005\u66f4\u63a8\u8350pm2\uff0c\u770b\u4e00\u4e0b\u4e8c\u8005\u5bf9\u6bd4\u5c31\u77e5\u9053\u6211\u4e3a\u4ec0\u4e48\u66f4\u63a8\u8350\u4f7f\u7528pm2\u4e86\u3002 https://www.jianshu.com/p/fdc12d82b661 linux \u5173\u95ed\u4e00\u4e2a\u8fdb\u7a0b \u67e5\u627e\u4e0e\u8fdb\u7a0b\u76f8\u5173\u7684PID\u53f7 ps aux | grep server \u8bf4\u660e: root 20158 0.0 5.0 1251592 95396 ? Sl 5\u670817 1:19 node /srv/mini-program-api/launch_pm2.js \u4e0a\u9762\u662f\u6267\u884c\u547d\u4ee4\u540e\u5728linux\u4e2d\u663e\u793a\u7684\u7ed3\u679c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5c31\u662f\u8fdb\u7a0b\u5bf9\u5e94\u7684PID \u6740\u6b7b\u8fdb\u7a0b \u4ee5\u4f18\u96c5\u7684\u65b9\u5f0f\u7ed3\u675f\u8fdb\u7a0b kill -l PID -l\u9009\u9879\u544a\u8bc9kill\u547d\u4ee4\u7528\u597d\u50cf\u542f\u52a8\u8fdb\u7a0b\u7684\u7528\u6237\u5df2\u6ce8\u9500\u7684\u65b9\u5f0f\u7ed3\u675f\u8fdb\u7a0b\u3002 \u5f53\u4f7f\u7528\u8be5\u9009\u9879\u65f6\uff0ckill\u547d\u4ee4\u4e5f\u8bd5\u56fe\u6740\u6b7b\u6240\u7559\u4e0b\u7684\u5b50\u8fdb\u7a0b\u3002 \u4f46\u8fd9\u4e2a\u547d\u4ee4\u4e5f\u4e0d\u662f\u603b\u80fd\u6210\u529f\u2013\u6216\u8bb8\u4ecd\u7136\u9700\u8981\u5148\u624b\u5de5\u6740\u6b7b\u5b50\u8fdb\u7a0b\uff0c\u7136\u540e\u518d\u6740\u6b7b\u7236\u8fdb\u7a0b\u3002 kill \u547d\u4ee4\u7528\u4e8e\u7ec8\u6b62\u8fdb\u7a0b \u4f8b\u5982\uff1a `kill -9 [PID]` -9 \u8868\u793a\u5f3a\u8feb\u8fdb\u7a0b\u7acb\u5373\u505c\u6b62 \u8fd9\u4e2a\u5f3a\u5927\u548c\u5371\u9669\u7684\u547d\u4ee4\u8feb\u4f7f\u8fdb\u7a0b\u5728\u8fd0\u884c\u65f6\u7a81\u7136\u7ec8\u6b62\uff0c\u8fdb\u7a0b\u5728\u7ed3\u675f\u540e\u4e0d\u80fd\u81ea\u6211\u6e05\u7406\u3002 \u5371\u5bb3\u662f\u5bfc\u81f4\u7cfb\u7edf\u8d44\u6e90\u65e0\u6cd5\u6b63\u5e38\u91ca\u653e\uff0c\u4e00\u822c\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u9664\u975e\u5176\u4ed6\u529e\u6cd5\u90fd\u65e0\u6548\u3002 \u5f53\u4f7f\u7528\u6b64\u547d\u4ee4\u65f6\uff0c\u4e00\u5b9a\u8981\u901a\u8fc7ps -ef\u786e\u8ba4\u6ca1\u6709\u5269\u4e0b\u4efb\u4f55\u50f5\u5c38\u8fdb\u7a0b\u3002 \u53ea\u80fd\u901a\u8fc7\u7ec8\u6b62\u7236\u8fdb\u7a0b\u6765\u6d88\u9664\u50f5\u5c38\u8fdb\u7a0b\u3002\u5982\u679c\u50f5\u5c38\u8fdb\u7a0b\u88abinit\u6536\u517b\uff0c\u95ee\u9898\u5c31\u6bd4\u8f83\u4e25\u91cd\u4e86\u3002 \u6740\u6b7binit\u8fdb\u7a0b\u610f\u5473\u7740\u5173\u95ed\u7cfb\u7edf\u3002 \u5982\u679c\u7cfb\u7edf\u4e2d\u6709\u50f5\u5c38\u8fdb\u7a0b\uff0c\u5e76\u4e14\u5176\u7236\u8fdb\u7a0b\u662finit\uff0c \u800c\u4e14\u50f5\u5c38\u8fdb\u7a0b\u5360\u7528\u4e86\u5927\u91cf\u7684\u7cfb\u7edf\u8d44\u6e90\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5728\u67d0\u4e2a\u65f6\u5019\u91cd\u542f\u673a\u5668\u4ee5\u6e05\u9664\u8fdb\u7a0b\u8868\u4e86\u3002 killall\u547d\u4ee4 \u6740\u6b7b\u540c\u4e00\u8fdb\u7a0b\u7ec4\u5185\u7684\u6240\u6709\u8fdb\u7a0b\u3002\u5176\u5141\u8bb8\u6307\u5b9a\u8981\u7ec8\u6b62\u7684\u8fdb\u7a0b\u7684\u540d\u79f0\uff0c\u800c\u975ePID\u3002 killall httpd Node.js \u7ebf\u7a0b Node.js\u5173\u4e8e\u5355\u7ebf\u7a0b\u7684\u8bef\u533a const http = require('http'); const server = http.createServer(); server.listen(3000,()=>{ process.title='\u7a0b\u5e8f\u5458\u6210\u957f\u6307\u5317\u6d4b\u8bd5\u8fdb\u7a0b'; console.log('\u8fdb\u7a0bid',process.pid) }) \u4ecd\u7136\u770b\u672c\u6587\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff0c\u521b\u5efa\u4e86http\u670d\u52a1\uff0c\u5f00\u542f\u4e86\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u90fd\u8bf4\u4e86Node.js\u662f\u5355\u7ebf\u7a0b\uff0c\u6240\u4ee5 Node \u542f\u52a8\u540e\u7ebf\u7a0b\u6570\u5e94\u8be5\u4e3a 1\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u4f1a\u5f00\u542f7\u4e2a\u7ebf\u7a0b\u5462\uff1f\u96be\u9053Javascript\u4e0d\u662f\u5355\u7ebf\u7a0b\u4e0d\u77e5\u9053\u5c0f\u4f19\u4f34\u4eec\u6709\u6ca1\u6709\u8fd9\u4e2a\u7591\u95ee\uff1f \u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u539f\u56e0\uff1a Node \u4e2d\u6700\u6838\u5fc3\u7684\u662f v8 \u5f15\u64ce\uff0c\u5728 Node \u542f\u52a8\u540e\uff0c\u4f1a\u521b\u5efa v8 \u7684\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u662f\u591a\u7ebf\u7a0b\u7684\u3002 \u4e3b\u7ebf\u7a0b\uff1a\u7f16\u8bd1\u3001\u6267\u884c\u4ee3\u7801\u3002 \u7f16\u8bd1/\u4f18\u5316\u7ebf\u7a0b\uff1a\u5728\u4e3b\u7ebf\u7a0b\u6267\u884c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f18\u5316\u4ee3\u7801\u3002 \u5206\u6790\u5668\u7ebf\u7a0b\uff1a\u8bb0\u5f55\u5206\u6790\u4ee3\u7801\u8fd0\u884c\u65f6\u95f4\uff0c\u4e3a Crankshaft \u4f18\u5316\u4ee3\u7801\u6267\u884c\u63d0\u4f9b\u4f9d\u636e\u3002 \u5783\u573e\u56de\u6536\u7684\u51e0\u4e2a\u7ebf\u7a0b\u3002 \u6240\u4ee5\u5927\u5bb6\u5e38\u8bf4\u7684 Node \u662f\u5355\u7ebf\u7a0b\u7684\u6307\u7684\u662f JavaScript \u7684\u6267\u884c\u662f\u5355\u7ebf\u7a0b\u7684(\u5f00\u53d1\u8005\u7f16\u5199\u7684\u4ee3\u7801\u8fd0\u884c\u5728\u5355\u7ebf\u7a0b\u73af\u5883\u4e2d)\uff0c\u4f46 Javascript \u7684\u5bbf\u4e3b\u73af\u5883\uff0c\u65e0\u8bba\u662f Node \u8fd8\u662f\u6d4f\u89c8\u5668\u90fd\u662f\u591a\u7ebf\u7a0b\u7684\u56e0\u4e3alibuv\u4e2d\u6709\u7ebf\u7a0b\u6c60\u7684\u6982\u5ff5\u5b58\u5728\u7684\uff0clibuv\u4f1a\u901a\u8fc7\u7c7b\u4f3c\u7ebf\u7a0b\u6c60\u7684\u5b9e\u73b0\u6765\u6a21\u62df\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f02\u6b65\u8c03\u7528\uff0c\u8fd9\u5bf9\u5f00\u53d1\u8005\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 \u67d0\u4e9b\u5f02\u6b65 IO \u4f1a\u5360\u7528\u989d\u5916\u7684\u7ebf\u7a0b \u8fd8\u662f\u4e0a\u9762\u90a3\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u5728\u5b9a\u65f6\u5668\u6267\u884c\u7684\u540c\u65f6\uff0c\u53bb\u8bfb\u4e00\u4e2a\u6587\u4ef6\uff1a const fs = require('fs') setInterval(() => { console.log(new Date().getTime()) }, 3000) fs.readFile('./index.html', () => {}) \u7ebf\u7a0b\u6570\u91cf\u53d8\u6210\u4e86 11 \u4e2a\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728 Node \u4e2d\u6709\u4e00\u4e9b IO \u64cd\u4f5c\uff08DNS\uff0cFS\uff09\u548c\u4e00\u4e9b CPU \u5bc6\u96c6\u8ba1\u7b97\uff08Zlib\uff0cCrypto\uff09\u4f1a\u542f\u7528 Node \u7684\u7ebf\u7a0b\u6c60\uff0c\u800c\u7ebf\u7a0b\u6c60\u9ed8\u8ba4\u5927\u5c0f\u4e3a 4\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u6570\u53d8\u6210\u4e86 11\u3002 \u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u66f4\u6539\u7ebf\u7a0b\u6c60\u9ed8\u8ba4\u5927\u5c0f\uff1a process.env.UV_THREADPOOL_SIZE = 64 \u4e00\u884c\u4ee3\u7801\u8f7b\u677e\u628a\u7ebf\u7a0b\u53d8\u6210 71\u3002 Libuv Libuv \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u5f02\u6b65IO\u5e93\uff0c\u5b83\u7ed3\u5408\u4e86UNIX\u4e0b\u7684libev\u548cWindows\u4e0b\u7684IOCP\u7684\u7279\u6027\uff0c\u6700\u65e9\u7531Node\u7684\u4f5c\u8005\u5f00\u53d1\uff0c\u4e13\u95e8\u4e3aNode\u63d0\u4f9b\u591a\u5e73\u53f0\u4e0b\u7684\u5f02\u6b65IO\u652f\u6301\u3002Libuv\u672c\u8eab\u662f\u7531C++\u8bed\u8a00\u5b9e\u73b0\u7684\uff0cNode\u4e2d\u7684\u975e\u82cf\u585eIO\u4ee5\u53ca\u4e8b\u4ef6\u5faa\u73af\u7684\u5e95\u5c42\u673a\u5236\u90fd\u662f\u7531libuv\u5b9e\u73b0\u7684\u3002 libuv\u67b6\u6784\u56fe \u5728Window\u73af\u5883\u4e0b\uff0clibuv\u76f4\u63a5\u4f7f\u7528Windows\u7684IOCP\u6765\u5b9e\u73b0\u5f02\u6b65IO\u3002\u5728\u975eWindows\u73af\u5883\u4e0b\uff0clibuv\u4f7f\u7528\u591a\u7ebf\u7a0b\u6765\u6a21\u62df\u5f02\u6b65IO\u3002 \u6ce8\u610f\u4e0b\u9762\u6211\u8981\u8bf4\u7684\u8bdd\uff0cNode\u7684\u5f02\u6b65\u8c03\u7528\u662f\u7531libuv\u6765\u652f\u6301\u7684\uff0c\u4ee5\u4e0a\u9762\u7684\u8bfb\u53d6\u6587\u4ef6\u7684\u4f8b\u5b50\uff0c\u8bfb\u6587\u4ef6\u5b9e\u8d28\u7684\u7cfb\u7edf\u8c03\u7528\u662f\u7531libuv\u6765\u5b8c\u6210\u7684\uff0cNode\u53ea\u662f\u8d1f\u8d23\u8c03\u7528libuv\u7684\u63a5\u53e3\uff0c\u7b49\u6570\u636e\u8fd4\u56de\u540e\u518d\u6267\u884c\u5bf9\u5e94\u7684\u56de\u8c03\u65b9\u6cd5\u3002 Node.js \u7ebf\u7a0b\u521b\u5efa \u76f4\u5230 Node 10.5.0 \u7684\u53d1\u5e03\uff0c\u5b98\u65b9\u624d\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5b9e\u9a8c\u6027\u8d28\u7684\u6a21\u5757 worker_threads \u7ed9 Node \u63d0\u4f9b\u771f\u6b63\u7684\u591a\u7ebf\u7a0b\u80fd\u529b\u3002 \u5148\u770b\u4e0b\u7b80\u5355\u7684 demo\uff1a const { isMainThread, parentPort, workerData, threadId, MessageChannel, MessagePort, Worker } = require('worker_threads'); function mainThread() { for (let i = 0; i < 5; i++) { const worker = new Worker(__filename, { workerData: i }); worker.on('exit', code => { console.log(`main: worker stopped with exit code ${code}`); }); worker.on('message', msg => { console.log(`main: receive ${msg}`); worker.postMessage(msg + 1); }); } } function workerThread() { console.log(`worker: workerDate ${workerData}`); parentPort.on('message', msg => { console.log(`worker: receive ${msg}`); }), parentPort.postMessage(workerData); } if (isMainThread) { mainThread(); } else { workerThread(); } \u4e0a\u8ff0\u4ee3\u7801\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u5f00\u542f\u4e94\u4e2a\u5b50\u7ebf\u7a0b\uff0c\u5e76\u4e14\u4e3b\u7ebf\u7a0b\u5411\u5b50\u7ebf\u7a0b\u53d1\u9001\u7b80\u5355\u7684\u6d88\u606f\u3002 \u7531\u4e8e worker_thread \u76ee\u524d\u4ecd\u7136\u5904\u4e8e\u5b9e\u9a8c\u9636\u6bb5\uff0c\u6240\u4ee5\u542f\u52a8\u65f6\u9700\u8981\u589e\u52a0 --experimental-worker flag\uff0c\u8fd0\u884c\u540e\u89c2\u5bdf\u6d3b\u52a8\u76d1\u89c6\u5668\uff0c\u5f00\u542f\u4e865\u4e2a\u5b50\u7ebf\u7a0b worker_thread \u6a21\u5757 worker_thread \u6838\u5fc3\u4ee3\u7801\uff08\u5730\u5740 https://github.com/nodejs/node/blob/master/lib/worker_threads.js \uff09 worker_thread \u6a21\u5757\u4e2d\u6709 4 \u4e2a\u5bf9\u8c61\u548c 2 \u4e2a\u7c7b\uff0c\u53ef\u4ee5\u81ea\u5df1\u53bb\u770b\u4e0a\u9762\u7684\u6e90\u7801\u3002 isMainThread: \u662f\u5426\u662f\u4e3b\u7ebf\u7a0b\uff0c\u6e90\u7801\u4e2d\u662f\u901a\u8fc7 threadId === 0 \u8fdb\u884c\u5224\u65ad\u7684\u3002 MessagePort: \u7528\u4e8e\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u7ee7\u627f\u81ea EventEmitter\u3002 MessageChannel: \u7528\u4e8e\u521b\u5efa\u5f02\u6b65\u3001\u53cc\u5411\u901a\u4fe1\u7684\u901a\u9053\u5b9e\u4f8b\u3002 threadId: \u7ebf\u7a0b ID\u3002 Worker: \u7528\u4e8e\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u521b\u5efa\u5b50\u7ebf\u7a0b\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a filename\uff0c\u8868\u793a\u5b50\u7ebf\u7a0b\u6267\u884c\u7684\u5165\u53e3\u3002 parentPort: \u5728 worker \u7ebf\u7a0b\u91cc\u662f\u8868\u793a\u7236\u8fdb\u7a0b\u7684 MessagePort \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5728\u4e3b\u7ebf\u7a0b\u91cc\u4e3a null workerData: \u7528\u4e8e\u5728\u4e3b\u8fdb\u7a0b\u4e2d\u5411\u5b50\u8fdb\u7a0b\u4f20\u9012\u6570\u636e\uff08data \u526f\u672c\uff09 \u603b\u7ed3 \u591a\u8fdb\u7a0b vs \u591a\u7ebf\u7a0b \u5bf9\u6bd4\u4e00\u4e0b\u591a\u7ebf\u7a0b\u4e0e\u591a\u8fdb\u7a0b\uff1a","title":"NodeJS"},{"location":"nodejs/NodeJS/#nodejs","text":"\u8fdb\u7a0b \u4e0e \u7ebf\u7a0b \u662f\u4e00\u4e2a\u7a0b\u5e8f\u5458\u7684\u5fc5\u77e5\u6982\u5ff5\uff0c\u9762\u8bd5\u7ecf\u5e38\u88ab\u95ee\u53ca\uff0c\u4f46\u662f\u4e00\u4e9b\u6587\u7ae0\u5185\u5bb9\u53ea\u662f\u8bb2\u8bb2\u7406\u8bba\u77e5\u8bc6\uff0c\u53ef\u80fd\u4e00\u4e9b\u5c0f\u4f19\u4f34\u5e76\u6ca1\u6709\u771f\u7684\u7406\u89e3\uff0c\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u5e94\u7528\u4e5f\u6bd4\u8f83\u5c11\u3002\u672c\u7bc7\u6587\u7ae0\u9664\u4e86\u4ecb\u7ecd\u6982\u5ff5\uff0c\u901a\u8fc7Node.js \u7684\u89d2\u5ea6\u8bb2\u89e3 \u8fdb\u7a0b \u4e0e \u7ebf\u7a0b \uff0c\u5e76\u4e14\u8bb2\u89e3\u4e00\u4e9b\u5728\u9879\u76ee\u4e2d\u7684\u5b9e\u6218\u7684\u5e94\u7528\uff0c\u8ba9\u4f60\u4e0d\u4ec5\u80fd\u8fce\u6218\u9762\u8bd5\u5b98\u8fd8\u53ef\u4ee5\u5728\u5b9e\u6218\u4e2d\u5b8c\u7f8e\u5e94\u7528\u3002 \u4f5c\u8005\u7b80\u4ecb\uff1akoala\uff0c\u4e13\u6ce8\u5b8c\u6574\u7684 Node.js \u6280\u672f\u6808\u5206\u4eab\uff0c\u4ece JavaScript \u5230 Node.js,\u518d\u5230\u540e\u7aef\u6570\u636e\u5e93\uff0c\u795d\u60a8\u6210\u4e3a\u4f18\u79c0\u7684\u9ad8\u7ea7 Node.js \u5de5\u7a0b\u5e08\u3002\u3010\u7a0b\u5e8f\u5458\u6210\u957f\u6307\u5317\u3011\u4f5c\u8005\uff0cGithub \u535a\u5ba2\u5f00\u6e90\u9879\u76ee https://github.com/koala-coding/goodBlog \u6587\u7ae0\u5bfc\u89c8 \u9762\u8bd5\u4f1a\u95ee Node.js\u662f\u5355\u7ebf\u7a0b\u5417\uff1f Node.js \u505a\u8017\u65f6\u7684\u8ba1\u7b97\u65f6\u5019\uff0c\u5982\u4f55\u907f\u514d\u963b\u585e\uff1f Node.js\u5982\u4f55\u5b9e\u73b0\u591a\u8fdb\u7a0b\u7684\u5f00\u542f\u548c\u5173\u95ed\uff1f Node.js\u53ef\u4ee5\u521b\u5efa\u7ebf\u7a0b\u5417\uff1f \u4f60\u4eec\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u5982\u4f55\u5b9e\u73b0\u8fdb\u7a0b\u5b88\u62a4\u7684\uff1f \u9664\u4e86\u4f7f\u7528\u7b2c\u4e09\u65b9\u6a21\u5757\uff0c\u4f60\u4eec\u81ea\u5df1\u662f\u5426\u5c01\u88c5\u8fc7\u4e00\u4e2a\u591a\u8fdb\u7a0b\u67b6\u6784? \u8fdb\u7a0b \u8fdb\u7a0b Process \u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u7a0b\u5e8f\u5173\u4e8e\u67d0\u6570\u636e\u96c6\u5408\u4e0a\u7684\u4e00\u6b21\u8fd0\u884c\u6d3b\u52a8\uff0c\u662f\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u548c\u8c03\u5ea6\u7684\u57fa\u672c\u5355\u4f4d\uff0c\u662f\u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\u7684\u57fa\u7840\uff0c\u8fdb\u7a0b\u662f\u7ebf\u7a0b\u7684\u5bb9\u5668\uff08\u6765\u81ea\u767e\u79d1\uff09\u3002\u8fdb\u7a0b\u662f\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u6211\u4eec\u542f\u52a8\u4e00\u4e2a\u670d\u52a1\u3001\u8fd0\u884c\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5c31\u662f\u5f00\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\uff0c\u4f8b\u5982 Java \u91cc\u7684 JVM \u672c\u8eab\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0cNode.js \u91cc\u901a\u8fc7 node app.js \u5f00\u542f\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\uff0c\u591a\u8fdb\u7a0b\u5c31\u662f\u8fdb\u7a0b\u7684\u590d\u5236\uff08fork\uff09\uff0cfork \u51fa\u6765\u7684\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u62e5\u6709\u81ea\u5df1\u7684\u72ec\u7acb\u7a7a\u95f4\u5730\u5740\u3001\u6570\u636e\u6808\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u65e0\u6cd5\u8bbf\u95ee\u53e6\u5916\u4e00\u4e2a\u8fdb\u7a0b\u91cc\u5b9a\u4e49\u7684\u53d8\u91cf\u3001\u6570\u636e\u7ed3\u6784\uff0c\u53ea\u6709\u5efa\u7acb\u4e86 IPC \u901a\u4fe1\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u624d\u53ef\u6570\u636e\u5171\u4eab\u3002 Node.js\u5f00\u542f\u670d\u52a1\u8fdb\u7a0b\u4f8b\u5b50 const http = require('http'); const server = http.createServer(); server.listen(3000,()=>{ process.title='\u7a0b\u5e8f\u5458\u6210\u957f\u6307\u5317\u6d4b\u8bd5\u8fdb\u7a0b'; console.log('\u8fdb\u7a0bid',process.pid) }) \u8fd0\u884c\u4e0a\u9762\u4ee3\u7801\u540e\uff0c\u4ee5\u4e0b\u4e3a Mac \u7cfb\u7edf\u81ea\u5e26\u7684\u76d1\u63a7\u5de5\u5177 \u201c\u6d3b\u52a8\u76d1\u89c6\u5668\u201d \u6240\u5c55\u793a\u7684\u6548\u679c\uff0c\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u521a\u5f00\u542f\u7684 Nodejs \u8fdb\u7a0b 7663 \u7ebf\u7a0b \u7ebf\u7a0b\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u9996\u5148\u6211\u4eec\u8981\u6e05\u695a\u7ebf\u7a0b\u662f\u96b6\u5c5e\u4e8e\u8fdb\u7a0b\u7684\uff0c\u88ab\u5305\u542b\u4e8e\u8fdb\u7a0b\u4e4b\u4e2d\u3002 \u4e00\u4e2a\u7ebf\u7a0b\u53ea\u80fd\u96b6\u5c5e\u4e8e\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u4f46\u662f\u4e00\u4e2a\u8fdb\u7a0b\u662f\u53ef\u4ee5\u62e5\u6709\u591a\u4e2a\u7ebf\u7a0b\u7684 \u3002 \u5355\u7ebf\u7a0b \u5355\u7ebf\u7a0b\u5c31\u662f\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u5f00\u4e00\u4e2a\u7ebf\u7a0b Javascript \u5c31\u662f\u5c5e\u4e8e\u5355\u7ebf\u7a0b\uff0c\u7a0b\u5e8f\u987a\u5e8f\u6267\u884c(\u8fd9\u91cc\u6682\u4e14\u4e0d\u63d0JS\u5f02\u6b65)\uff0c\u53ef\u4ee5\u60f3\u8c61\u4e00\u4e0b\u961f\u5217\uff0c\u524d\u9762\u4e00\u4e2a\u6267\u884c\u5b8c\u4e4b\u540e\uff0c\u540e\u9762\u624d\u53ef\u4ee5\u6267\u884c\uff0c\u5f53\u4f60\u5728\u4f7f\u7528\u5355\u7ebf\u7a0b\u8bed\u8a00\u7f16\u7801\u65f6\u5207\u52ff\u6709\u8fc7\u591a\u8017\u65f6\u7684\u540c\u6b65\u64cd\u4f5c\uff0c\u5426\u5219\u7ebf\u7a0b\u4f1a\u9020\u6210\u963b\u585e\uff0c\u5bfc\u81f4\u540e\u7eed\u54cd\u5e94\u65e0\u6cd5\u5904\u7406\u3002\u4f60\u5982\u679c\u91c7\u7528 Javascript \u8fdb\u884c\u7f16\u7801\u65f6\u5019\uff0c\u8bf7\u5c3d\u53ef\u80fd\u7684\u5229\u7528Javascript\u5f02\u6b65\u64cd\u4f5c\u7684\u7279\u6027\u3002 \u7ecf\u5178\u8ba1\u7b97\u8017\u65f6\u9020\u6210\u7ebf\u7a0b\u963b\u585e\u7684\u4f8b\u5b50 const http = require('http'); const longComputation = () => { let sum = 0; for (let i = 0; i < 1e10; i++) { sum += i; }; return sum; }; const server = http.createServer(); server.on('request', (req, res) => { if (req.url === '/compute') { console.info('\u8ba1\u7b97\u5f00\u59cb',new Date()); const sum = longComputation(); console.info('\u8ba1\u7b97\u7ed3\u675f',new Date()); return res.end(`Sum is ${sum}`); } else { res.end('Ok') } }); server.listen(3000); //\u6253\u5370\u7ed3\u679c //\u8ba1\u7b97\u5f00\u59cb 2019-07-28T07:08:49.849Z //\u8ba1\u7b97\u7ed3\u675f 2019-07-28T07:09:04.522Z \u67e5\u770b\u6253\u5370\u7ed3\u679c\uff0c\u5f53\u6211\u4eec\u8c03\u7528 127.0.0.1:3000/compute \u7684\u65f6\u5019\uff0c\u5982\u679c\u60f3\u8981\u8c03\u7528\u5176\u4ed6\u7684\u8def\u7531\u5730\u5740\u6bd4\u5982127.0.0.1/\u5927\u7ea6\u9700\u898115\u79d2\u65f6\u95f4\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u4e00\u4e2a\u7528\u6237\u8bf7\u6c42\u5b8c\u7b2c\u4e00\u4e2a compute \u63a5\u53e3\u540e\u9700\u8981\u7b49\u5f8515\u79d2\uff0c\u8fd9\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\u662f\u6781\u5176\u4e0d\u53cb\u597d\u7684\u3002\u4e0b\u6587\u6211\u4f1a\u901a\u8fc7\u521b\u5efa\u591a\u8fdb\u7a0b\u7684\u65b9\u5f0f child_process.fork \u548c cluster \u6765\u89e3\u51b3\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 \u5355\u7ebf\u7a0b\u7684\u4e00\u4e9b\u8bf4\u660e Node.js \u867d\u7136\u662f\u5355\u7ebf\u7a0b\u6a21\u578b\uff0c\u4f46\u662f\u5176\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u3001\u5f02\u6b65\u975e\u963b\u585e\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5e94\u7528\u4e8e\u9ad8\u5e76\u53d1\u573a\u666f\uff0c\u907f\u514d\u4e86\u7ebf\u7a0b\u521b\u5efa\u3001\u7ebf\u7a0b\u4e4b\u95f4\u4e0a\u4e0b\u6587\u5207\u6362\u6240\u4ea7\u751f\u7684\u8d44\u6e90\u5f00\u9500\u3002 \u5f53\u4f60\u7684\u9879\u76ee\u4e2d\u9700\u8981\u6709\u5927\u91cf\u8ba1\u7b97\uff0cCPU \u8017\u65f6\u7684\u64cd\u4f5c\u65f6\u5019\uff0c\u8981\u6ce8\u610f\u8003\u8651\u5f00\u542f\u591a\u8fdb\u7a0b\u6765\u5b8c\u6210\u4e86\u3002 Node.js \u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u9519\u8bef\u4f1a\u5f15\u8d77\u6574\u4e2a\u5e94\u7528\u9000\u51fa\uff0c\u5e94\u7528\u7684\u5065\u58ee\u6027\u503c\u5f97\u8003\u9a8c\uff0c\u5c24\u5176\u662f\u9519\u8bef\u7684\u5f02\u5e38\u629b\u51fa\uff0c\u4ee5\u53ca\u8fdb\u7a0b\u5b88\u62a4\u662f\u5fc5\u987b\u8981\u505a\u7684\u3002 \u5355\u7ebf\u7a0b\u65e0\u6cd5\u5229\u7528\u591a\u6838CPU\uff0c\u4f46\u662f\u540e\u6765Node.js \u63d0\u4f9b\u7684API\u4ee5\u53ca\u4e00\u4e9b\u7b2c\u4e09\u65b9\u5de5\u5177\u76f8\u5e94\u90fd\u5f97\u5230\u4e86\u89e3\u51b3\uff0c\u6587\u7ae0\u540e\u9762\u90fd\u4f1a\u8bb2\u5230\u3002 Node.js \u4e2d\u7684\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b Node.js \u662f Javascript \u5728\u670d\u52a1\u7aef\u7684\u8fd0\u884c\u73af\u5883\uff0c\u6784\u5efa\u5728 chrome \u7684 V8 \u5f15\u64ce\u4e4b\u4e0a\uff0c\u57fa\u4e8e\u4e8b\u4ef6\u9a71\u52a8\u3001\u975e\u963b\u585eI/O\u6a21\u578b\uff0c\u5145\u5206\u5229\u7528\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7684\u5f02\u6b65 I/O \u8fdb\u884c\u591a\u4efb\u52a1\u7684\u6267\u884c\uff0c\u9002\u5408\u4e8e I/O \u5bc6\u96c6\u578b\u7684\u5e94\u7528\u573a\u666f\uff0c\u56e0\u4e3a\u5f02\u6b65\uff0c\u7a0b\u5e8f\u65e0\u9700\u963b\u585e\u7b49\u5f85\u7ed3\u679c\u8fd4\u56de\uff0c\u800c\u662f\u57fa\u4e8e\u56de\u8c03\u901a\u77e5\u7684\u673a\u5236\uff0c\u539f\u672c\u540c\u6b65\u6a21\u5f0f\u7b49\u5f85\u7684\u65f6\u95f4\uff0c\u5219\u53ef\u4ee5\u7528\u6765\u5904\u7406\u5176\u5b83\u4efb\u52a1\uff0c \u79d1\u666e\uff1a\u5728 Web \u670d\u52a1\u5668\u65b9\u9762\uff0c\u8457\u540d\u7684 Nginx \u4e5f\u662f\u91c7\u7528\u6b64\u6a21\u5f0f\uff08\u4e8b\u4ef6\u9a71\u52a8\uff09\uff0c\u907f\u514d\u4e86\u591a\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u521b\u5efa\u3001\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5f00\u9500\uff0cNginx \u91c7\u7528 C \u8bed\u8a00\u8fdb\u884c\u7f16\u5199\uff0c\u4e3b\u8981\u7528\u6765\u505a\u9ad8\u6027\u80fd\u7684 Web \u670d\u52a1\u5668\uff0c\u4e0d\u9002\u5408\u505a\u4e1a\u52a1\u3002 Web\u4e1a\u52a1\u5f00\u53d1\u4e2d\uff0c\u5982\u679c\u4f60\u6709\u9ad8\u5e76\u53d1\u5e94\u7528\u573a\u666f\u90a3\u4e48 Node.js \u4f1a\u662f\u4f60\u4e0d\u9519\u7684\u9009\u62e9\u3002 \u5728\u5355\u6838 CPU \u7cfb\u7edf\u4e4b\u4e0a\u6211\u4eec\u91c7\u7528 \u5355\u8fdb\u7a0b + \u5355\u7ebf\u7a0b \u7684\u6a21\u5f0f\u6765\u5f00\u53d1\u3002\u5728\u591a\u6838 CPU \u7cfb\u7edf\u4e4b\u4e0a\uff0c\u53ef\u4ee5\u901a\u8fc7 child_process.fork \u5f00\u542f\u591a\u4e2a\u8fdb\u7a0b\uff08Node.js \u5728 v0.8 \u7248\u672c\u4e4b\u540e\u65b0\u589e\u4e86Cluster \u6765\u5b9e\u73b0\u591a\u8fdb\u7a0b\u67b6\u6784\uff09 \uff0c\u5373 \u591a\u8fdb\u7a0b + \u5355\u7ebf\u7a0b \u6a21\u5f0f\u3002\u6ce8\u610f\uff1a\u5f00\u542f\u591a\u8fdb\u7a0b\u4e0d\u662f\u4e3a\u4e86\u89e3\u51b3\u9ad8\u5e76\u53d1\uff0c\u4e3b\u8981\u662f\u89e3\u51b3\u4e86\u5355\u8fdb\u7a0b\u6a21\u5f0f\u4e0b Node.js CPU \u5229\u7528\u7387\u4e0d\u8db3\u7684\u60c5\u51b5\uff0c\u5145\u5206\u5229\u7528\u591a\u6838 CPU \u7684\u6027\u80fd\u3002 Node.js \u4e2d\u7684\u8fdb\u7a0b process \u6a21\u5757 Node.js \u4e2d\u7684\u8fdb\u7a0b Process \u662f\u4e00\u4e2a\u5168\u5c40\u5bf9\u8c61\uff0c\u65e0\u9700 require \u76f4\u63a5\u4f7f\u7528\uff0c\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5f53\u524d\u8fdb\u7a0b\u4e2d\u7684\u76f8\u5173\u4fe1\u606f\u3002\u5b98\u65b9\u6587\u6863\u63d0\u4f9b\u4e86\u8be6\u7ec6\u7684\u8bf4\u660e\uff0c\u611f\u5174\u8da3\u7684\u53ef\u4ee5\u4eb2\u81ea\u5b9e\u8df5\u4e0b Process \u6587\u6863\u3002 process.env \uff1a\u73af\u5883\u53d8\u91cf\uff0c\u4f8b\u5982\u901a\u8fc7 process.env.NODE_ENV \u83b7\u53d6\u4e0d\u540c\u73af\u5883\u9879\u76ee\u914d\u7f6e\u4fe1\u606f process.nextTick \uff1a\u8fd9\u4e2a\u5728\u8c08\u53ca Event Loop \u65f6\u7ecf\u5e38\u4e3a\u4f1a\u63d0\u5230 process.pid \uff1a\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0bid process.ppid \uff1a\u5f53\u524d\u8fdb\u7a0b\u5bf9\u5e94\u7684\u7236\u8fdb\u7a0b process.cwd() \uff1a\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u5de5\u4f5c\u76ee\u5f55\uff0c process.platform \uff1a\u83b7\u53d6\u5f53\u524d\u8fdb\u7a0b\u8fd0\u884c\u7684\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0 process.uptime() \uff1a\u5f53\u524d\u8fdb\u7a0b\u5df2\u8fd0\u884c\u65f6\u95f4\uff0c\u4f8b\u5982\uff1apm2 \u5b88\u62a4\u8fdb\u7a0b\u7684 uptime \u503c \u8fdb\u7a0b\u4e8b\u4ef6\uff1a process.on(\u2018uncaughtException\u2019, cb) \u6355\u83b7\u5f02\u5e38\u4fe1\u606f\u3001 process.on(\u2018exit\u2019, cb\uff09 \u8fdb\u7a0b\u63a8\u51fa\u76d1\u542c \u4e09\u4e2a\u6807\u51c6\u6d41\uff1a process.stdout \u6807\u51c6\u8f93\u51fa\u3001 process.stdin \u6807\u51c6\u8f93\u5165\u3001 process.stderr \u6807\u51c6\u9519\u8bef\u8f93\u51fa process.title \u6307\u5b9a\u8fdb\u7a0b\u540d\u79f0\uff0c\u6709\u7684\u65f6\u5019\u9700\u8981\u7ed9\u8fdb\u7a0b\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0 \u4ee5\u4e0a\u4ec5\u5217\u4e3e\u4e86\u90e8\u5206\u5e38\u7528\u5230\u529f\u80fd\u70b9\uff0c\u9664\u4e86 Process \u4e4b\u5916 Node.js \u8fd8\u63d0\u4f9b\u4e86 child_process \u6a21\u5757\u7528\u6765\u5bf9\u5b50\u8fdb\u7a0b\u8fdb\u884c\u64cd\u4f5c\uff0c\u5728\u4e0b\u6587 Nodejs\u8fdb\u7a0b\u521b\u5efa\u4f1a\u7ee7\u7eed\u8bb2\u8ff0\u3002 Node.js \u8fdb\u7a0b\u521b\u5efa \u8fdb\u7a0b\u521b\u5efa\u6709\u591a\u79cd\u65b9\u5f0f\uff0c\u672c\u7bc7\u6587\u7ae0\u4ee5child_process\u6a21\u5757\u548ccluster\u6a21\u5757\u8fdb\u884c\u8bb2\u89e3\u3002 child_process\u6a21\u5757 child_process \u662f Node.js \u7684\u5185\u7f6e\u6a21\u5757\uff0c\u5b98\u7f51\u5730\u5740\uff1a child_process \u5b98\u7f51\u5730\u5740\uff1a http://nodejs.cn/api/child_process.html#child_process_child_process \u51e0\u4e2a\u5e38\u7528\u51fd\u6570\uff1a \u56db\u79cd\u65b9\u5f0f child_process.spawn() \uff1a\u9002\u7528\u4e8e\u8fd4\u56de\u5927\u91cf\u6570\u636e\uff0c\u4f8b\u5982\u56fe\u50cf\u5904\u7406\uff0c\u4e8c\u8fdb\u5236\u6570\u636e\u5904\u7406\u3002 child_process.exec() \uff1a\u9002\u7528\u4e8e\u5c0f\u91cf\u6570\u636e\uff0cmaxBuffer \u9ed8\u8ba4\u503c\u4e3a 200 * 1024 \u8d85\u51fa\u8fd9\u4e2a\u9ed8\u8ba4\u503c\u5c06\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5d29\u6e83\uff0c\u6570\u636e\u91cf\u8fc7\u5927\u53ef\u91c7\u7528 spawn\u3002 child_process.execFile() \uff1a\u7c7b\u4f3c child_process.exec() \uff0c\u533a\u522b\u662f\u4e0d\u80fd\u901a\u8fc7 shell \u6765\u6267\u884c\uff0c\u4e0d\u652f\u6301\u50cf I/O \u91cd\u5b9a\u5411\u548c\u6587\u4ef6\u67e5\u627e\u8fd9\u6837\u7684\u884c\u4e3a child_process.fork() \uff1a \u884d\u751f\u65b0\u7684\u8fdb\u7a0b\uff0c\u8fdb\u7a0b\u4e4b\u95f4\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684 V8 \u5b9e\u4f8b\u3001\u5185\u5b58\uff0c\u7cfb\u7edf\u8d44\u6e90\u662f\u6709\u9650\u7684\uff0c\u4e0d\u5efa\u8bae\u884d\u751f\u592a\u591a\u7684\u5b50\u8fdb\u7a0b\u51fa\u6765\uff0c\u901a\u957f\u6839\u636e\u7cfb\u7edf** CPU \u6838\u5fc3\u6570**\u8bbe\u7f6e\u3002 CPU \u6838\u5fc3\u6570\u8fd9\u91cc\u7279\u522b\u8bf4\u660e\u4e0b\uff0cfork \u786e\u5b9e\u53ef\u4ee5\u5f00\u542f\u591a\u4e2a\u8fdb\u7a0b\uff0c\u4f46\u662f\u5e76\u4e0d\u5efa\u8bae\u884d\u751f\u51fa\u6765\u592a\u591a\u7684\u8fdb\u7a0b\uff0ccpu\u6838\u5fc3\u6570\u7684\u83b7\u53d6\u65b9\u5f0f const cpus = require('os').cpus(); ,\u8fd9\u91cc cpus \u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\uff0c\u5305\u542b\u6240\u5b89\u88c5\u7684\u6bcf\u4e2a CPU/\u5185\u6838\u7684\u4fe1\u606f\uff0c\u4e8c\u8005\u603b\u548c\u7684\u6570\u7ec4\u54e6\u3002\u5047\u8bbe\u4e3b\u673a\u88c5\u6709\u4e24\u4e2acpu\uff0c\u6bcf\u4e2acpu\u67094\u4e2a\u6838\uff0c\u90a3\u4e48\u603b\u6838\u6570\u5c31\u662f8\u3002 fork\u5f00\u542f\u5b50\u8fdb\u7a0b Demo fork\u5f00\u542f\u5b50\u8fdb\u7a0b\u89e3\u51b3\u6587\u7ae0\u8d77\u521d\u7684\u8ba1\u7b97\u8017\u65f6\u9020\u6210\u7ebf\u7a0b\u963b\u585e\u3002 \u5728\u8fdb\u884c compute \u8ba1\u7b97\u65f6\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u8ba1\u7b97\u5b8c\u6210\u901a\u8fc7 send \u65b9\u6cd5\u5c06\u7ed3\u679c\u53d1\u9001\u7ed9\u4e3b\u8fdb\u7a0b\uff0c\u4e3b\u8fdb\u7a0b\u901a\u8fc7 message \u76d1\u542c\u5230\u4fe1\u606f\u540e\u5904\u7406\u5e76\u9000\u51fa\u3002 fork_app.js const http = require('http'); const fork = require('child_process').fork; const server = http.createServer((req, res) => { if(req.url == '/compute'){ const compute = fork('./fork_compute.js'); compute.send('\u5f00\u542f\u4e00\u4e2a\u65b0\u7684\u5b50\u8fdb\u7a0b'); // \u5f53\u4e00\u4e2a\u5b50\u8fdb\u7a0b\u4f7f\u7528 process.send() \u53d1\u9001\u6d88\u606f\u65f6\u4f1a\u89e6\u53d1 'message' \u4e8b\u4ef6 compute.on('message', sum => { res.end(`Sum is ${sum}`); compute.kill(); }); // \u5b50\u8fdb\u7a0b\u76d1\u542c\u5230\u4e00\u4e9b\u9519\u8bef\u6d88\u606f\u9000\u51fa compute.on('close', (code, signal) => { console.log(`\u6536\u5230close\u4e8b\u4ef6\uff0c\u5b50\u8fdb\u7a0b\u6536\u5230\u4fe1\u53f7 ${signal} \u800c\u7ec8\u6b62\uff0c\u9000\u51fa\u7801 ${code}`); compute.kill(); }) }else{ res.end(`ok`); } }); server.listen(3000, 127.0.0.1, () => { console.log(`server started at http://${127.0.0.1}:${3000}`); }); fork_compute.js \u9488\u5bf9\u6587\u521d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u7684\u7684\u4f8b\u5b50\u6211\u4eec\u521b\u5efa\u5b50\u8fdb\u7a0b\u62c6\u5206\u51fa\u6765\u5355\u72ec\u8fdb\u884c\u8fd0\u7b97\u3002 const computation = () => { let sum = 0; console.info('\u8ba1\u7b97\u5f00\u59cb'); console.time('\u8ba1\u7b97\u8017\u65f6'); for (let i = 0; i < 1e10; i++) { sum += i }; console.info('\u8ba1\u7b97\u7ed3\u675f'); console.timeEnd('\u8ba1\u7b97\u8017\u65f6'); return sum; }; process.on('message', msg => { console.log(msg, 'process.pid', process.pid); // \u5b50\u8fdb\u7a0bid const sum = computation(); // \u5982\u679cNode.js\u8fdb\u7a0b\u662f\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u4ea7\u751f\u7684\uff0c\u90a3\u4e48\uff0cprocess.send()\u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u7ed9\u7236\u8fdb\u7a0b\u53d1\u9001\u6d88\u606f process.send(sum); }) cluster\u6a21\u5757 cluster \u5f00\u542f\u5b50\u8fdb\u7a0bDemo const http = require('http'); const numCPUs = require('os').cpus().length; const cluster = require('cluster'); if(cluster.isMaster){ console.log('Master proces id is',process.pid); // fork workers for(let i= 0;i<numCPUs;i++){ cluster.fork(); } cluster.on('exit',function(worker,code,signal){ console.log('worker process died,id',worker.process.pid) }) }else{ // Worker\u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u4e2aTCP\u8fde\u63a5 // \u8fd9\u91cc\u662f\u4e00\u4e2ahttp\u670d\u52a1\u5668 http.createServer(function(req,res){ res.writeHead(200); res.end('hello word'); }).listen(8000); } cluster\u539f\u7406\u5206\u6790 cluster\u6a21\u5757\u8c03\u7528fork\u65b9\u6cd5\u6765\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u8be5\u65b9\u6cd5\u4e0echild_process\u4e2d\u7684fork\u662f\u540c\u4e00\u4e2a\u65b9\u6cd5\u3002 cluster\u6a21\u5757\u91c7\u7528\u7684\u662f\u7ecf\u5178\u7684\u4e3b\u4ece\u6a21\u578b\uff0cCluster\u4f1a\u521b\u5efa\u4e00\u4e2amaster\uff0c\u7136\u540e\u6839\u636e\u4f60\u6307\u5b9a\u7684\u6570\u91cf\u590d\u5236\u51fa\u591a\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u4f7f\u7528 cluster.isMaster \u5c5e\u6027\u5224\u65ad\u5f53\u524d\u8fdb\u7a0b\u662fmaster\u8fd8\u662fworker(\u5de5\u4f5c\u8fdb\u7a0b)\u3002\u7531master\u8fdb\u7a0b\u6765\u7ba1\u7406\u6240\u6709\u7684\u5b50\u8fdb\u7a0b\uff0c\u4e3b\u8fdb\u7a0b\u4e0d\u8d1f\u8d23\u5177\u4f53\u7684\u4efb\u52a1\u5904\u7406\uff0c\u4e3b\u8981\u5de5\u4f5c\u662f\u8d1f\u8d23\u8c03\u5ea6\u548c\u7ba1\u7406\u3002 cluster\u6a21\u5757\u4f7f\u7528\u5185\u7f6e\u7684\u8d1f\u8f7d\u5747\u8861\u6765\u66f4\u597d\u5730\u5904\u7406\u7ebf\u7a0b\u4e4b\u95f4\u7684\u538b\u529b\uff0c\u8be5\u8d1f\u8f7d\u5747\u8861\u4f7f\u7528\u4e86 Round-robin \u7b97\u6cd5\uff08\u4e5f\u88ab\u79f0\u4e4b\u4e3a\u5faa\u73af\u7b97\u6cd5\uff09\u3002\u5f53\u4f7f\u7528Round-robin\u8c03\u5ea6\u7b56\u7565\u65f6\uff0cmaster accepts()\u6240\u6709\u4f20\u5165\u7684\u8fde\u63a5\u8bf7\u6c42\uff0c\u7136\u540e\u5c06\u76f8\u5e94\u7684TCP\u8bf7\u6c42\u5904\u7406\u53d1\u9001\u7ed9\u9009\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b\uff08\u8be5\u65b9\u5f0f\u4ecd\u7136\u901a\u8fc7IPC\u6765\u8fdb\u884c\u901a\u4fe1\uff09\u3002 \u5f00\u542f\u591a\u8fdb\u7a0b\u65f6\u5019\u7aef\u53e3\u7591\u95ee\u8bb2\u89e3\uff1a\u5982\u679c\u591a\u4e2aNode\u8fdb\u7a0b\u76d1\u542c\u540c\u4e00\u4e2a\u7aef\u53e3\u65f6\u4f1a\u51fa\u73b0 Error:listen EADDRIUNS \u7684\u9519\u8bef\uff0c\u800ccluster\u6a21\u5757\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u8ba9\u591a\u4e2a\u5b50\u8fdb\u7a0b\u76d1\u542c\u540c\u4e00\u4e2a\u7aef\u53e3\u5462?\u539f\u56e0\u662fmaster\u8fdb\u7a0b\u5185\u90e8\u542f\u52a8\u4e86\u4e00\u4e2aTCP\u670d\u52a1\u5668\uff0c\u800c\u771f\u6b63\u76d1\u542c\u7aef\u53e3\u7684\u53ea\u6709\u8fd9\u4e2a\u670d\u52a1\u5668\uff0c\u5f53\u6765\u81ea\u524d\u7aef\u7684\u8bf7\u6c42\u89e6\u53d1\u670d\u52a1\u5668\u7684connection\u4e8b\u4ef6\u540e\uff0cmaster\u4f1a\u5c06\u5bf9\u5e94\u7684socket\u5177\u67c4\u53d1\u9001\u7ed9\u5b50\u8fdb\u7a0b\u3002 child_process \u6a21\u5757\u4e0ecluster \u6a21\u5757\u603b\u7ed3 \u65e0\u8bba\u662f child_process \u6a21\u5757\u8fd8\u662f cluster \u6a21\u5757\uff0c\u4e3a\u4e86\u89e3\u51b3 Node.js \u5b9e\u4f8b\u5355\u7ebf\u7a0b\u8fd0\u884c\uff0c\u65e0\u6cd5\u5229\u7528\u591a\u6838 CPU \u7684\u95ee\u9898\u800c\u51fa\u73b0\u7684\u3002\u6838\u5fc3\u5c31\u662f**\u7236\u8fdb\u7a0b\uff08\u5373 master \u8fdb\u7a0b\uff09\u8d1f\u8d23\u76d1\u542c\u7aef\u53e3\uff0c\u63a5\u6536\u5230\u65b0\u7684\u8bf7\u6c42\u540e\u5c06\u5176\u5206\u53d1\u7ed9\u4e0b\u9762\u7684 worker \u8fdb\u7a0b**\u3002 cluster\u6a21\u5757\u7684\u4e00\u4e2a\u5f0a\u7aef\uff1a cluster\u5185\u90e8\u9690\u65f6\u7684\u6784\u5efaTCP\u670d\u52a1\u5668\u7684\u65b9\u5f0f\u6765\u8bf4\u5bf9\u4f7f\u7528\u8005\u786e\u5b9e\u7b80\u5355\u548c\u900f\u660e\u4e86\u5f88\u591a\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u65e0\u6cd5\u50cf\u4f7f\u7528child_process\u90a3\u6837\u7075\u6d3b\uff0c\u56e0\u4e3a\u4e00\u76f4\u4e3b\u8fdb\u7a0b\u53ea\u80fd\u7ba1\u7406\u4e00\u7ec4\u76f8\u540c\u7684\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u800c\u81ea\u884c\u901a\u8fc7child_process\u6765\u521b\u5efa\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\u53ef\u4ee5\u63a7\u5236\u591a\u7ec4\u8fdb\u7a0b\u3002\u539f\u56e0\u662fchild_process\u64cd\u4f5c\u5b50\u8fdb\u7a0b\u65f6\uff0c\u53ef\u4ee5\u9690\u5f0f\u7684\u521b\u5efa\u591a\u4e2aTCP\u670d\u52a1\u5668\uff0c\u5bf9\u6bd4\u4e0a\u9762\u7684\u4e24\u5e45\u56fe\u5e94\u8be5\u80fd\u7406\u89e3\u6211\u8bf4\u7684\u5185\u5bb9\u3002 Node.js\u8fdb\u7a0b\u901a\u4fe1\u539f\u7406 \u524d\u9762\u8bb2\u89e3\u7684\u65e0\u8bba\u662fchild_process\u6a21\u5757\uff0c\u8fd8\u662fcluster\u6a21\u5757\uff0c\u90fd\u9700\u8981\u4e3b\u8fdb\u7a0b\u548c\u5de5\u4f5c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002\u901a\u8fc7fork()\u6216\u8005\u5176\u4ed6API\uff0c\u521b\u5efa\u4e86\u5b50\u8fdb\u7a0b\u4e4b\u540e\uff0c\u4e3a\u4e86\u5b9e\u73b0\u7236\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u7236\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u624d\u80fd\u901a\u8fc7message\u548csend()\u4f20\u9012\u4fe1\u606f\u3002 IPC\u8fd9\u4e2a\u8bcd\u6211\u60f3\u5927\u5bb6\u5e76\u4e0d\u964c\u751f\uff0c\u4e0d\u7ba1\u90a3\u4e00\u5f20\u5f00\u53d1\u8bed\u8a00\u53ea\u8981\u63d0\u5230\u8fdb\u7a0b\u901a\u4fe1\uff0c\u90fd\u4f1a\u63d0\u5230\u5b83\u3002IPC\u7684\u5168\u79f0\u662fInter-Process Communication,\u5373\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002\u5b83\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u8ba9\u4e0d\u540c\u7684\u8fdb\u7a0b\u80fd\u591f\u4e92\u76f8\u8bbf\u95ee\u8d44\u6e90\u5e76\u8fdb\u884c\u534f\u8c03\u5de5\u4f5c\u3002\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u6280\u672f\u6709\u5f88\u591a\uff0c\u5982\u547d\u540d\u7ba1\u9053\uff0c\u533f\u540d\u7ba1\u9053\uff0csocket\uff0c\u4fe1\u53f7\u91cf\uff0c\u5171\u4eab\u5185\u5b58\uff0c\u6d88\u606f\u961f\u5217\u7b49\u3002Node\u4e2d\u5b9e\u73b0IPC\u901a\u9053\u662f\u4f9d\u8d56\u4e8elibuv\u3002windows\u4e0b\u7531\u547d\u540d\u7ba1\u9053(name pipe)\u5b9e\u73b0\uff0c*nix\u7cfb\u7edf\u5219\u91c7\u7528Unix Domain Socket\u5b9e\u73b0\u3002\u8868\u73b0\u5728\u5e94\u7528\u5c42\u4e0a\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u53ea\u6709\u7b80\u5355\u7684message\u4e8b\u4ef6\u548csend()\u65b9\u6cd5\uff0c\u63a5\u53e3\u5341\u5206\u7b80\u6d01\u548c\u6d88\u606f\u5316\u3002 IPC\u521b\u5efa\u548c\u5b9e\u73b0\u793a\u610f\u56fe IPC\u901a\u4fe1\u7ba1\u9053\u662f\u5982\u4f55\u521b\u5efa\u7684 \u7236\u8fdb\u7a0b\u5728\u5b9e\u9645\u521b\u5efa\u5b50\u8fdb\u7a0b\u4e4b\u524d\uff0c\u4f1a\u521b\u5efa IPC\u901a\u9053 \u5e76\u76d1\u542c\u5b83\uff0c\u7136\u540e\u624d \u771f\u6b63\u7684 \u521b\u5efa\u51fa \u5b50\u8fdb\u7a0b \uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u901a\u8fc7\u73af\u5883\u53d8\u91cf\uff08NODE_CHANNEL_FD\uff09\u544a\u8bc9\u5b50\u8fdb\u7a0b\u8fd9\u4e2aIPC\u901a\u9053\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u5b50\u8fdb\u7a0b\u5728\u542f\u52a8\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6839\u636e\u6587\u4ef6\u63cf\u8ff0\u7b26\u53bb\u8fde\u63a5\u8fd9\u4e2a\u5df2\u5b58\u5728\u7684IPC\u901a\u9053\uff0c\u4ece\u800c\u5b8c\u6210\u7236\u5b50\u8fdb\u7a0b\u4e4b\u95f4\u7684\u8fde\u63a5\u3002 Node.js\u53e5\u67c4\u4f20\u9012 \u8bb2\u53e5\u67c4\u4e4b\u524d\uff0c\u5148\u60f3\u4e00\u4e2a\u95ee\u9898\uff0csend\u53e5\u67c4\u53d1\u9001\u7684\u65f6\u5019\uff0c\u771f\u7684\u662f\u5c06\u670d\u52a1\u5668\u5bf9\u8c61\u53d1\u9001\u7ed9\u4e86\u5b50\u8fdb\u7a0b\uff1f \u5b50\u8fdb\u7a0b\u5bf9\u8c61send()\u65b9\u6cd5\u53ef\u4ee5\u53d1\u9001\u7684\u53e5\u67c4\u7c7b\u578b net.Socket TCP\u5957\u63a5\u5b57 net.Server TCP\u670d\u52a1\u5668\uff0c\u4efb\u610f\u5efa\u7acb\u5728TCP\u670d\u52a1\u4e0a\u7684\u5e94\u7528\u5c42\u670d\u52a1\u90fd\u53ef\u4ee5\u4eab\u53d7\u5b83\u5e26\u6765\u7684\u597d\u5904 net.Native C++\u5c42\u9762\u7684TCP\u5957\u63a5\u5b57\u6216IPC\u7ba1\u9053 dgram.Socket UDP\u5957\u63a5\u5b57 dgram.Native C++\u5c42\u9762\u7684UDP\u5957\u63a5\u5b57 send\u53e5\u67c4\u53d1\u9001\u539f\u7406\u5206\u6790 \u7ed3\u5408\u53e5\u67c4\u7684\u53d1\u9001\u4e0e\u8fd8\u539f\u793a\u610f\u56fe\u66f4\u5bb9\u6613\u7406\u89e3\u3002 send() \u65b9\u6cd5\u5728\u5c06\u6d88\u606f\u53d1\u9001\u5230IPC\u7ba1\u9053\u524d\uff0c\u5b9e\u9645\u5c06\u6d88\u606f\u7ec4\u88c5\u6210\u4e86\u4e24\u4e2a\u5bf9\u8c61\uff0c\u4e00\u4e2a\u53c2\u6570\u662fhadler\uff0c\u53e6\u4e00\u4e2a\u662fmessage\u3002message\u53c2\u6570\u5982\u4e0b\u6240\u793a\uff1a { cmd:'NODE_HANDLE', type:'net.Server', msg:message } \u53d1\u9001\u5230IPC\u7ba1\u9053\u4e2d\u7684\u5b9e\u9645\u4e0a\u662f\u6211\u4eec\u8981\u53d1\u9001\u7684\u53e5\u67c4\u6587\u4ef6\u63cf\u8ff0\u7b26\u3002\u8fd9\u4e2amessage\u5bf9\u8c61\u5728\u5199\u5165\u5230IPC\u7ba1\u9053\u65f6\uff0c\u4e5f\u4f1a\u901a\u8fc7 JSON.stringfy() \u8fdb\u884c\u5e8f\u5217\u5316\u3002\u6240\u4ee5\u6700\u7ec8\u53d1\u9001\u5230IPC\u901a\u9053\u4e2d\u7684\u4fe1\u606f\u90fd\u662f\u5b57\u7b26\u4e32\uff0csend()\u65b9\u6cd5\u80fd\u53d1\u9001\u6d88\u606f\u548c\u53e5\u67c4\u5e76\u4e0d\u610f\u5473\u7740\u5b83\u80fd\u53d1\u9001\u4efb\u4f55\u5bf9\u8c61\u3002 \u8fde\u63a5\u4e86IPC\u901a\u9053\u7684\u5b50\u7ebf\u7a0b\u53ef\u4ee5\u8bfb\u53d6\u7236\u8fdb\u7a0b\u53d1\u6765\u7684\u6d88\u606f\uff0c\u5c06\u5b57\u7b26\u4e32\u901a\u8fc7JSON.parse()\u89e3\u6790\u8fd8\u539f\u4e3a\u5bf9\u8c61\u540e\uff0c\u624d\u89e6\u53d1message\u4e8b\u4ef6\u5c06\u6d88\u606f\u4f20\u9012\u7ed9\u5e94\u7528\u5c42\u4f7f\u7528\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u6d88\u606f\u5bf9\u8c61\u8fd8\u8981\u88ab\u8fdb\u884c\u8fc7\u6ee4\u5904\u7406\uff0cmessage.cmd\u7684\u503c\u5982\u679c\u4ee5NODE_\u4e3a\u524d\u7f00\uff0c\u5b83\u5c06\u54cd\u5e94\u4e00\u4e2a\u5185\u90e8\u4e8b\u4ef6internalMessage\uff0c\u5982\u679cmessage.cmd\u503c\u4e3aNODE_HANDLE,\u5b83\u5c06\u53d6\u51fa message.type \u503c\u548c\u5f97\u5230\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e00\u8d77\u8fd8\u539f\u51fa\u4e00\u4e2a\u5bf9\u5e94\u7684\u5bf9\u8c61\u3002 \u4ee5\u53d1\u9001\u7684TCP\u670d\u52a1\u5668\u53e5\u67c4\u4e3a\u4f8b\uff0c\u5b50\u8fdb\u7a0b\u6536\u5230\u6d88\u606f\u540e\u7684\u8fd8\u539f\u8fc7\u7a0b\u4ee3\u7801\u5982\u4e0b: function(message,handle,emit){ var self = this; var server = new net.Server(); server.listen(handler,function(){ emit(server); }); } \u8fd9\u6bb5\u8fd8\u539f\u4ee3\u7801\uff0c \u5b50\u8fdb\u7a0b\u6839\u636emessage.type\u521b\u5efa\u5bf9\u5e94\u7684TCP\u670d\u52a1\u5668\u5bf9\u8c61\uff0c\u7136\u540e\u76d1\u542c\u5230\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e0a \u3002\u7531\u4e8e\u5e95\u5c42\u7ec6\u8282\u4e0d\u88ab\u5e94\u7528\u5c42\u611f\u77e5\uff0c\u6240\u4ee5\u5b50\u8fdb\u7a0b\u4e2d\uff0c\u5f00\u53d1\u8005\u4f1a\u6709\u4e00\u79cd\u670d\u52a1\u5668\u5bf9\u8c61\u5c31\u662f\u4ece\u7236\u8fdb\u7a0b\u4e2d\u76f4\u63a5\u4f20\u9012\u8fc7\u6765\u7684\u9519\u89c9\u3002 Node\u8fdb\u7a0b\u4e4b\u95f4\u53ea\u6709\u6d88\u606f\u4f20\u9012\uff0c\u4e0d\u4f1a\u771f\u6b63\u7684\u4f20\u9012\u5bf9\u8c61\uff0c\u8fd9\u79cd\u9519\u89c9\u662f\u62bd\u8c61\u5c01\u88c5\u7684\u7ed3\u679c\u3002\u76ee\u524dNode\u53ea\u652f\u6301\u6211\u524d\u9762\u63d0\u5230\u7684\u51e0\u79cd\u53e5\u67c4\uff0c\u5e76\u975e\u4efb\u610f\u7c7b\u578b\u7684\u53e5\u67c4\u90fd\u80fd\u5728\u8fdb\u7a0b\u4e4b\u95f4\u4f20\u9012\uff0c\u9664\u975e\u5b83\u6709\u5b8c\u6574\u7684\u53d1\u9001\u548c\u8fd8\u539f\u7684\u8fc7\u7a0b\u3002 Node.js\u591a\u8fdb\u7a0b\u67b6\u6784\u6a21\u578b \u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\u4e00\u4e2a\u591a\u8fdb\u7a0b\u67b6\u6784\u5b88\u62a4Demo \u7f16\u5199\u4e3b\u8fdb\u7a0b master.js \u4e3b\u8981\u5904\u7406\u4ee5\u4e0b\u903b\u8f91\uff1a \u521b\u5efa\u4e00\u4e2a server \u5e76\u76d1\u542c 3000 \u7aef\u53e3\u3002 \u6839\u636e\u7cfb\u7edf cpus \u5f00\u542f\u591a\u4e2a\u5b50\u8fdb\u7a0b \u901a\u8fc7\u5b50\u8fdb\u7a0b\u5bf9\u8c61\u7684 send \u65b9\u6cd5\u53d1\u9001\u6d88\u606f\u5230\u5b50\u8fdb\u7a0b\u8fdb\u884c\u901a\u4fe1 \u5728\u4e3b\u8fdb\u7a0b\u4e2d\u76d1\u542c\u4e86\u5b50\u8fdb\u7a0b\u7684\u53d8\u5316\uff0c\u5982\u679c\u662f\u81ea\u6740\u4fe1\u53f7\u91cd\u65b0\u542f\u52a8\u4e00\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u3002 \u4e3b\u8fdb\u7a0b\u5728\u76d1\u542c\u5230\u9000\u51fa\u6d88\u606f\u7684\u65f6\u5019\uff0c\u5148\u9000\u51fa\u5b50\u8fdb\u7a0b\u5728\u9000\u51fa\u4e3b\u8fdb\u7a0b // master.js const fork = require('child_process').fork; const cpus = require('os').cpus(); const server = require('net').createServer(); server.listen(3000); process.title = 'node-master' const workers = {}; const createWorker = () => { const worker = fork('worker.js') worker.on('message', function (message) { if (message.act === 'suicide') { createWorker(); } }) worker.on('exit', function(code, signal) { console.log('worker process exited, code: %s signal: %s', code, signal); delete workers[worker.pid]; }); worker.send('server', server); workers[worker.pid] = worker; console.log('worker process created, pid: %s ppid: %s', worker.pid, process.pid); } for (let i=0; i<cpus.length; i++) { createWorker(); } process.once('SIGINT', close.bind(this, 'SIGINT')); // kill(2) Ctrl-C process.once('SIGQUIT', close.bind(this, 'SIGQUIT')); // kill(3) Ctrl-\\ process.once('SIGTERM', close.bind(this, 'SIGTERM')); // kill(15) default process.once('exit', close.bind(this)); function close (code) { console.log('\u8fdb\u7a0b\u9000\u51fa\uff01', code); if (code !== 0) { for (let pid in workers) { console.log('master process exited, kill worker pid: ', pid); workers[pid].kill('SIGINT'); } } process.exit(0); } \u5de5\u4f5c\u8fdb\u7a0b worker.js \u5b50\u8fdb\u7a0b\u5904\u7406\u903b\u8f91\u5982\u4e0b\uff1a \u521b\u5efa\u4e00\u4e2a server \u5bf9\u8c61\uff0c\u6ce8\u610f\u8fd9\u91cc\u6700\u5f00\u59cb\u5e76\u6ca1\u6709\u76d1\u542c 3000 \u7aef\u53e3 \u901a\u8fc7 message \u4e8b\u4ef6\u63a5\u6536\u4e3b\u8fdb\u7a0b send \u65b9\u6cd5\u53d1\u9001\u7684\u6d88\u606f \u76d1\u542c uncaughtException \u4e8b\u4ef6\uff0c\u6355\u83b7\u672a\u5904\u7406\u7684\u5f02\u5e38\uff0c\u53d1\u9001\u81ea\u6740\u4fe1\u606f\u7531\u4e3b\u8fdb\u7a0b\u91cd\u5efa\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u5728\u94fe\u63a5\u5173\u95ed\u4e4b\u540e\u9000\u51fa // worker.js const http = require('http'); const server = http.createServer((req, res) => { res.writeHead(200, { 'Content-Type': 'text/plan' }); res.end('I am worker, pid: ' + process.pid + ', ppid: ' + process.ppid); throw new Error('worker process exception!'); // \u6d4b\u8bd5\u5f02\u5e38\u8fdb\u7a0b\u9000\u51fa\u3001\u91cd\u542f }); let worker; process.title = 'node-worker' process.on('message', function (message, sendHandle) { if (message === 'server') { worker = sendHandle; worker.on('connection', function(socket) { server.emit('connection', socket); }); } }); process.on('uncaughtException', function (err) { console.log(err); process.send({act: 'suicide'}); worker.close(function () { process.exit(1); }) }) Node.js \u8fdb\u7a0b\u5b88\u62a4 \u4ec0\u4e48\u662f\u8fdb\u7a0b\u5b88\u62a4\uff1f \u6bcf\u6b21\u542f\u52a8 Node.js \u7a0b\u5e8f\u90fd\u9700\u8981\u5728\u547d\u4ee4\u7a97\u53e3\u8f93\u5165\u547d\u4ee4 node app.js \u624d\u80fd\u542f\u52a8\uff0c\u4f46\u5982\u679c\u628a\u547d\u4ee4\u7a97\u53e3\u5173\u95ed\u5219Node.js \u7a0b\u5e8f\u670d\u52a1\u5c31\u4f1a\u7acb\u523b\u65ad\u6389\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5f53\u6211\u4eec\u8fd9\u4e2a Node.js \u670d\u52a1\u610f\u5916\u5d29\u6e83\u4e86\u5c31\u4e0d\u80fd\u81ea\u52a8\u91cd\u542f\u8fdb\u7a0b\u4e86\u3002\u8fd9\u4e9b\u73b0\u8c61\u90fd\u4e0d\u662f\u6211\u4eec\u60f3\u8981\u770b\u5230\u7684\uff0c\u6240\u4ee5\u9700\u8981\u901a\u8fc7\u67d0\u4e9b\u65b9\u5f0f\u6765\u5b88\u62a4\u8fd9\u4e2a\u5f00\u542f\u7684\u8fdb\u7a0b\uff0c\u6267\u884c node app.js \u5f00\u542f\u4e00\u4e2a\u670d\u52a1\u8fdb\u7a0b\u4e4b\u540e\uff0c\u6211\u8fd8\u53ef\u4ee5\u5728\u8fd9\u4e2a\u7ec8\u7aef\u4e0a\u505a\u4e9b\u522b\u7684\u4e8b\u60c5\uff0c\u4e14\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\u3002\uff0c\u5f53\u51fa\u73b0\u95ee\u9898\u53ef\u4ee5\u81ea\u52a8\u91cd\u542f\u3002 \u5982\u4f55\u5b9e\u73b0\u8fdb\u7a0b\u5b88\u62a4 \u8fd9\u91cc\u6211\u53ea\u8bf4\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u8fdb\u7a0b\u5b88\u62a4\u6846\u67b6\uff0cpm2 \u548c forever \uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u5b9e\u73b0\u8fdb\u7a0b\u5b88\u62a4\uff0c\u5e95\u5c42\u4e5f\u90fd\u662f\u901a\u8fc7\u4e0a\u9762\u8bb2\u7684 child_process \u6a21\u5757\u548c cluster \u6a21\u5757 \u5b9e\u73b0\u7684\uff0c\u8fd9\u91cc\u5c31\u4e0d\u518d\u63d0\u5b83\u4eec\u7684\u539f\u7406\u3002 pm2 \u6307\u5b9a\u751f\u4ea7\u73af\u5883\u542f\u52a8\u4e00\u4e2a\u540d\u4e3a test \u7684 node \u670d\u52a1 pm2 start app.js --env production --name test pm2\u5e38\u7528api pm2 stop Name/processID \u505c\u6b62\u67d0\u4e2a\u670d\u52a1\uff0c\u901a\u8fc7\u670d\u52a1\u540d\u79f0\u6216\u8005\u670d\u52a1\u8fdb\u7a0bID pm2 delete Name/processID \u5220\u9664\u67d0\u4e2a\u670d\u52a1\uff0c\u901a\u8fc7\u670d\u52a1\u540d\u79f0\u6216\u8005\u670d\u52a1\u8fdb\u7a0bID pm2 logs [Name] \u67e5\u770b\u65e5\u5fd7\uff0c\u5982\u679c\u6dfb\u52a0\u670d\u52a1\u540d\u79f0\uff0c\u5219\u6307\u5b9a\u67e5\u770b\u67d0\u4e2a\u670d\u52a1\u7684\u65e5\u5fd7\uff0c\u4e0d\u52a0\u5219\u67e5\u770b\u6240\u6709\u65e5\u5fd7 pm2 start app.js -i 4 \u96c6\u7fa4\uff0c-i \u53c2\u6570\u7528\u6765\u544a\u8bc9PM2\u4ee5cluster_mode\u7684\u5f62\u5f0f\u8fd0\u884c\u4f60\u7684app\uff08\u5bf9\u5e94\u7684\u53ebfork_mode\uff09\uff0c\u540e\u9762\u7684\u6570\u5b57\u8868\u793a\u8981\u542f\u52a8\u7684\u5de5\u4f5c\u7ebf\u7a0b\u7684\u6570\u91cf\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u6570\u5b57\u4e3a0\uff0cPM2\u5219\u4f1a\u6839\u636e\u4f60CPU\u6838\u5fc3\u7684\u6570\u91cf\u6765\u751f\u6210\u5bf9\u5e94\u7684\u5de5\u4f5c\u7ebf\u7a0b\u3002\u6ce8\u610f\u4e00\u822c\u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528cluster_mode\u6a21\u5f0f\uff0c\u6d4b\u8bd5\u6216\u8005\u672c\u5730\u73af\u5883\u4e00\u822c\u4f7f\u7528fork\u6a21\u5f0f\uff0c\u65b9\u4fbf\u6d4b\u8bd5\u5230\u9519\u8bef\u3002 pm2 reload Name pm2 restart Name \u5e94\u7528\u7a0b\u5e8f\u4ee3\u7801\u6709\u66f4\u65b0\uff0c\u53ef\u4ee5\u7528\u91cd\u8f7d\u6765\u52a0\u8f7d\u65b0\u4ee3\u7801\uff0c\u4e5f\u53ef\u4ee5\u7528\u91cd\u542f\u6765\u5b8c\u6210,reload\u53ef\u4ee5\u505a\u52300\u79d2\u5b95\u673a\u52a0\u8f7d\u65b0\u7684\u4ee3\u7801\uff0crestart\u5219\u662f\u91cd\u65b0\u542f\u52a8\uff0c\u751f\u4ea7\u73af\u5883\u4e2d\u591a\u7528reload\u6765\u5b8c\u6210\u4ee3\u7801\u66f4\u65b0\uff01 pm2 show Name \u67e5\u770b\u670d\u52a1\u8be6\u60c5 pm2 list \u67e5\u770bpm2\u4e2d\u6240\u6709\u9879\u76ee pm2 monit \u7528monit\u53ef\u4ee5\u6253\u5f00\u5b9e\u65f6\u76d1\u89c6\u5668\u53bb\u67e5\u770b\u8d44\u6e90\u5360\u7528\u60c5\u51b5 pm2 \u5b98\u7f51\u5730\u5740\uff1a http://pm2.keymetrics.io/docs/usage/quick-start/ forever \u5c31\u4e0d\u7279\u6b8a\u8bf4\u660e\u4e86\uff0c\u5b98\u7f51\u5730\u5740 https://github.com/foreverjs/forever \u6ce8\u610f\uff1a\u4e8c\u8005\u66f4\u63a8\u8350pm2\uff0c\u770b\u4e00\u4e0b\u4e8c\u8005\u5bf9\u6bd4\u5c31\u77e5\u9053\u6211\u4e3a\u4ec0\u4e48\u66f4\u63a8\u8350\u4f7f\u7528pm2\u4e86\u3002 https://www.jianshu.com/p/fdc12d82b661 linux \u5173\u95ed\u4e00\u4e2a\u8fdb\u7a0b \u67e5\u627e\u4e0e\u8fdb\u7a0b\u76f8\u5173\u7684PID\u53f7 ps aux | grep server \u8bf4\u660e: root 20158 0.0 5.0 1251592 95396 ? Sl 5\u670817 1:19 node /srv/mini-program-api/launch_pm2.js \u4e0a\u9762\u662f\u6267\u884c\u547d\u4ee4\u540e\u5728linux\u4e2d\u663e\u793a\u7684\u7ed3\u679c\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5c31\u662f\u8fdb\u7a0b\u5bf9\u5e94\u7684PID \u6740\u6b7b\u8fdb\u7a0b \u4ee5\u4f18\u96c5\u7684\u65b9\u5f0f\u7ed3\u675f\u8fdb\u7a0b kill -l PID -l\u9009\u9879\u544a\u8bc9kill\u547d\u4ee4\u7528\u597d\u50cf\u542f\u52a8\u8fdb\u7a0b\u7684\u7528\u6237\u5df2\u6ce8\u9500\u7684\u65b9\u5f0f\u7ed3\u675f\u8fdb\u7a0b\u3002 \u5f53\u4f7f\u7528\u8be5\u9009\u9879\u65f6\uff0ckill\u547d\u4ee4\u4e5f\u8bd5\u56fe\u6740\u6b7b\u6240\u7559\u4e0b\u7684\u5b50\u8fdb\u7a0b\u3002 \u4f46\u8fd9\u4e2a\u547d\u4ee4\u4e5f\u4e0d\u662f\u603b\u80fd\u6210\u529f\u2013\u6216\u8bb8\u4ecd\u7136\u9700\u8981\u5148\u624b\u5de5\u6740\u6b7b\u5b50\u8fdb\u7a0b\uff0c\u7136\u540e\u518d\u6740\u6b7b\u7236\u8fdb\u7a0b\u3002 kill \u547d\u4ee4\u7528\u4e8e\u7ec8\u6b62\u8fdb\u7a0b \u4f8b\u5982\uff1a `kill -9 [PID]` -9 \u8868\u793a\u5f3a\u8feb\u8fdb\u7a0b\u7acb\u5373\u505c\u6b62 \u8fd9\u4e2a\u5f3a\u5927\u548c\u5371\u9669\u7684\u547d\u4ee4\u8feb\u4f7f\u8fdb\u7a0b\u5728\u8fd0\u884c\u65f6\u7a81\u7136\u7ec8\u6b62\uff0c\u8fdb\u7a0b\u5728\u7ed3\u675f\u540e\u4e0d\u80fd\u81ea\u6211\u6e05\u7406\u3002 \u5371\u5bb3\u662f\u5bfc\u81f4\u7cfb\u7edf\u8d44\u6e90\u65e0\u6cd5\u6b63\u5e38\u91ca\u653e\uff0c\u4e00\u822c\u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u9664\u975e\u5176\u4ed6\u529e\u6cd5\u90fd\u65e0\u6548\u3002 \u5f53\u4f7f\u7528\u6b64\u547d\u4ee4\u65f6\uff0c\u4e00\u5b9a\u8981\u901a\u8fc7ps -ef\u786e\u8ba4\u6ca1\u6709\u5269\u4e0b\u4efb\u4f55\u50f5\u5c38\u8fdb\u7a0b\u3002 \u53ea\u80fd\u901a\u8fc7\u7ec8\u6b62\u7236\u8fdb\u7a0b\u6765\u6d88\u9664\u50f5\u5c38\u8fdb\u7a0b\u3002\u5982\u679c\u50f5\u5c38\u8fdb\u7a0b\u88abinit\u6536\u517b\uff0c\u95ee\u9898\u5c31\u6bd4\u8f83\u4e25\u91cd\u4e86\u3002 \u6740\u6b7binit\u8fdb\u7a0b\u610f\u5473\u7740\u5173\u95ed\u7cfb\u7edf\u3002 \u5982\u679c\u7cfb\u7edf\u4e2d\u6709\u50f5\u5c38\u8fdb\u7a0b\uff0c\u5e76\u4e14\u5176\u7236\u8fdb\u7a0b\u662finit\uff0c \u800c\u4e14\u50f5\u5c38\u8fdb\u7a0b\u5360\u7528\u4e86\u5927\u91cf\u7684\u7cfb\u7edf\u8d44\u6e90\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u5728\u67d0\u4e2a\u65f6\u5019\u91cd\u542f\u673a\u5668\u4ee5\u6e05\u9664\u8fdb\u7a0b\u8868\u4e86\u3002 killall\u547d\u4ee4 \u6740\u6b7b\u540c\u4e00\u8fdb\u7a0b\u7ec4\u5185\u7684\u6240\u6709\u8fdb\u7a0b\u3002\u5176\u5141\u8bb8\u6307\u5b9a\u8981\u7ec8\u6b62\u7684\u8fdb\u7a0b\u7684\u540d\u79f0\uff0c\u800c\u975ePID\u3002 killall httpd Node.js \u7ebf\u7a0b Node.js\u5173\u4e8e\u5355\u7ebf\u7a0b\u7684\u8bef\u533a const http = require('http'); const server = http.createServer(); server.listen(3000,()=>{ process.title='\u7a0b\u5e8f\u5458\u6210\u957f\u6307\u5317\u6d4b\u8bd5\u8fdb\u7a0b'; console.log('\u8fdb\u7a0bid',process.pid) }) \u4ecd\u7136\u770b\u672c\u6587\u7b2c\u4e00\u6bb5\u4ee3\u7801\uff0c\u521b\u5efa\u4e86http\u670d\u52a1\uff0c\u5f00\u542f\u4e86\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u90fd\u8bf4\u4e86Node.js\u662f\u5355\u7ebf\u7a0b\uff0c\u6240\u4ee5 Node \u542f\u52a8\u540e\u7ebf\u7a0b\u6570\u5e94\u8be5\u4e3a 1\uff0c\u4f46\u662f\u4e3a\u4ec0\u4e48\u4f1a\u5f00\u542f7\u4e2a\u7ebf\u7a0b\u5462\uff1f\u96be\u9053Javascript\u4e0d\u662f\u5355\u7ebf\u7a0b\u4e0d\u77e5\u9053\u5c0f\u4f19\u4f34\u4eec\u6709\u6ca1\u6709\u8fd9\u4e2a\u7591\u95ee\uff1f \u89e3\u91ca\u4e00\u4e0b\u8fd9\u4e2a\u539f\u56e0\uff1a Node \u4e2d\u6700\u6838\u5fc3\u7684\u662f v8 \u5f15\u64ce\uff0c\u5728 Node \u542f\u52a8\u540e\uff0c\u4f1a\u521b\u5efa v8 \u7684\u5b9e\u4f8b\uff0c\u8fd9\u4e2a\u5b9e\u4f8b\u662f\u591a\u7ebf\u7a0b\u7684\u3002 \u4e3b\u7ebf\u7a0b\uff1a\u7f16\u8bd1\u3001\u6267\u884c\u4ee3\u7801\u3002 \u7f16\u8bd1/\u4f18\u5316\u7ebf\u7a0b\uff1a\u5728\u4e3b\u7ebf\u7a0b\u6267\u884c\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u4f18\u5316\u4ee3\u7801\u3002 \u5206\u6790\u5668\u7ebf\u7a0b\uff1a\u8bb0\u5f55\u5206\u6790\u4ee3\u7801\u8fd0\u884c\u65f6\u95f4\uff0c\u4e3a Crankshaft \u4f18\u5316\u4ee3\u7801\u6267\u884c\u63d0\u4f9b\u4f9d\u636e\u3002 \u5783\u573e\u56de\u6536\u7684\u51e0\u4e2a\u7ebf\u7a0b\u3002 \u6240\u4ee5\u5927\u5bb6\u5e38\u8bf4\u7684 Node \u662f\u5355\u7ebf\u7a0b\u7684\u6307\u7684\u662f JavaScript \u7684\u6267\u884c\u662f\u5355\u7ebf\u7a0b\u7684(\u5f00\u53d1\u8005\u7f16\u5199\u7684\u4ee3\u7801\u8fd0\u884c\u5728\u5355\u7ebf\u7a0b\u73af\u5883\u4e2d)\uff0c\u4f46 Javascript \u7684\u5bbf\u4e3b\u73af\u5883\uff0c\u65e0\u8bba\u662f Node \u8fd8\u662f\u6d4f\u89c8\u5668\u90fd\u662f\u591a\u7ebf\u7a0b\u7684\u56e0\u4e3alibuv\u4e2d\u6709\u7ebf\u7a0b\u6c60\u7684\u6982\u5ff5\u5b58\u5728\u7684\uff0clibuv\u4f1a\u901a\u8fc7\u7c7b\u4f3c\u7ebf\u7a0b\u6c60\u7684\u5b9e\u73b0\u6765\u6a21\u62df\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f02\u6b65\u8c03\u7528\uff0c\u8fd9\u5bf9\u5f00\u53d1\u8005\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 \u67d0\u4e9b\u5f02\u6b65 IO \u4f1a\u5360\u7528\u989d\u5916\u7684\u7ebf\u7a0b \u8fd8\u662f\u4e0a\u9762\u90a3\u4e2a\u4f8b\u5b50\uff0c\u6211\u4eec\u5728\u5b9a\u65f6\u5668\u6267\u884c\u7684\u540c\u65f6\uff0c\u53bb\u8bfb\u4e00\u4e2a\u6587\u4ef6\uff1a const fs = require('fs') setInterval(() => { console.log(new Date().getTime()) }, 3000) fs.readFile('./index.html', () => {}) \u7ebf\u7a0b\u6570\u91cf\u53d8\u6210\u4e86 11 \u4e2a\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728 Node \u4e2d\u6709\u4e00\u4e9b IO \u64cd\u4f5c\uff08DNS\uff0cFS\uff09\u548c\u4e00\u4e9b CPU \u5bc6\u96c6\u8ba1\u7b97\uff08Zlib\uff0cCrypto\uff09\u4f1a\u542f\u7528 Node \u7684\u7ebf\u7a0b\u6c60\uff0c\u800c\u7ebf\u7a0b\u6c60\u9ed8\u8ba4\u5927\u5c0f\u4e3a 4\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u6570\u53d8\u6210\u4e86 11\u3002 \u6211\u4eec\u53ef\u4ee5\u624b\u52a8\u66f4\u6539\u7ebf\u7a0b\u6c60\u9ed8\u8ba4\u5927\u5c0f\uff1a process.env.UV_THREADPOOL_SIZE = 64 \u4e00\u884c\u4ee3\u7801\u8f7b\u677e\u628a\u7ebf\u7a0b\u53d8\u6210 71\u3002 Libuv Libuv \u662f\u4e00\u4e2a\u8de8\u5e73\u53f0\u7684\u5f02\u6b65IO\u5e93\uff0c\u5b83\u7ed3\u5408\u4e86UNIX\u4e0b\u7684libev\u548cWindows\u4e0b\u7684IOCP\u7684\u7279\u6027\uff0c\u6700\u65e9\u7531Node\u7684\u4f5c\u8005\u5f00\u53d1\uff0c\u4e13\u95e8\u4e3aNode\u63d0\u4f9b\u591a\u5e73\u53f0\u4e0b\u7684\u5f02\u6b65IO\u652f\u6301\u3002Libuv\u672c\u8eab\u662f\u7531C++\u8bed\u8a00\u5b9e\u73b0\u7684\uff0cNode\u4e2d\u7684\u975e\u82cf\u585eIO\u4ee5\u53ca\u4e8b\u4ef6\u5faa\u73af\u7684\u5e95\u5c42\u673a\u5236\u90fd\u662f\u7531libuv\u5b9e\u73b0\u7684\u3002 libuv\u67b6\u6784\u56fe \u5728Window\u73af\u5883\u4e0b\uff0clibuv\u76f4\u63a5\u4f7f\u7528Windows\u7684IOCP\u6765\u5b9e\u73b0\u5f02\u6b65IO\u3002\u5728\u975eWindows\u73af\u5883\u4e0b\uff0clibuv\u4f7f\u7528\u591a\u7ebf\u7a0b\u6765\u6a21\u62df\u5f02\u6b65IO\u3002 \u6ce8\u610f\u4e0b\u9762\u6211\u8981\u8bf4\u7684\u8bdd\uff0cNode\u7684\u5f02\u6b65\u8c03\u7528\u662f\u7531libuv\u6765\u652f\u6301\u7684\uff0c\u4ee5\u4e0a\u9762\u7684\u8bfb\u53d6\u6587\u4ef6\u7684\u4f8b\u5b50\uff0c\u8bfb\u6587\u4ef6\u5b9e\u8d28\u7684\u7cfb\u7edf\u8c03\u7528\u662f\u7531libuv\u6765\u5b8c\u6210\u7684\uff0cNode\u53ea\u662f\u8d1f\u8d23\u8c03\u7528libuv\u7684\u63a5\u53e3\uff0c\u7b49\u6570\u636e\u8fd4\u56de\u540e\u518d\u6267\u884c\u5bf9\u5e94\u7684\u56de\u8c03\u65b9\u6cd5\u3002 Node.js \u7ebf\u7a0b\u521b\u5efa \u76f4\u5230 Node 10.5.0 \u7684\u53d1\u5e03\uff0c\u5b98\u65b9\u624d\u7ed9\u51fa\u4e86\u4e00\u4e2a\u5b9e\u9a8c\u6027\u8d28\u7684\u6a21\u5757 worker_threads \u7ed9 Node \u63d0\u4f9b\u771f\u6b63\u7684\u591a\u7ebf\u7a0b\u80fd\u529b\u3002 \u5148\u770b\u4e0b\u7b80\u5355\u7684 demo\uff1a const { isMainThread, parentPort, workerData, threadId, MessageChannel, MessagePort, Worker } = require('worker_threads'); function mainThread() { for (let i = 0; i < 5; i++) { const worker = new Worker(__filename, { workerData: i }); worker.on('exit', code => { console.log(`main: worker stopped with exit code ${code}`); }); worker.on('message', msg => { console.log(`main: receive ${msg}`); worker.postMessage(msg + 1); }); } } function workerThread() { console.log(`worker: workerDate ${workerData}`); parentPort.on('message', msg => { console.log(`worker: receive ${msg}`); }), parentPort.postMessage(workerData); } if (isMainThread) { mainThread(); } else { workerThread(); } \u4e0a\u8ff0\u4ee3\u7801\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u5f00\u542f\u4e94\u4e2a\u5b50\u7ebf\u7a0b\uff0c\u5e76\u4e14\u4e3b\u7ebf\u7a0b\u5411\u5b50\u7ebf\u7a0b\u53d1\u9001\u7b80\u5355\u7684\u6d88\u606f\u3002 \u7531\u4e8e worker_thread \u76ee\u524d\u4ecd\u7136\u5904\u4e8e\u5b9e\u9a8c\u9636\u6bb5\uff0c\u6240\u4ee5\u542f\u52a8\u65f6\u9700\u8981\u589e\u52a0 --experimental-worker flag\uff0c\u8fd0\u884c\u540e\u89c2\u5bdf\u6d3b\u52a8\u76d1\u89c6\u5668\uff0c\u5f00\u542f\u4e865\u4e2a\u5b50\u7ebf\u7a0b worker_thread \u6a21\u5757 worker_thread \u6838\u5fc3\u4ee3\u7801\uff08\u5730\u5740 https://github.com/nodejs/node/blob/master/lib/worker_threads.js \uff09 worker_thread \u6a21\u5757\u4e2d\u6709 4 \u4e2a\u5bf9\u8c61\u548c 2 \u4e2a\u7c7b\uff0c\u53ef\u4ee5\u81ea\u5df1\u53bb\u770b\u4e0a\u9762\u7684\u6e90\u7801\u3002 isMainThread: \u662f\u5426\u662f\u4e3b\u7ebf\u7a0b\uff0c\u6e90\u7801\u4e2d\u662f\u901a\u8fc7 threadId === 0 \u8fdb\u884c\u5224\u65ad\u7684\u3002 MessagePort: \u7528\u4e8e\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u7ee7\u627f\u81ea EventEmitter\u3002 MessageChannel: \u7528\u4e8e\u521b\u5efa\u5f02\u6b65\u3001\u53cc\u5411\u901a\u4fe1\u7684\u901a\u9053\u5b9e\u4f8b\u3002 threadId: \u7ebf\u7a0b ID\u3002 Worker: \u7528\u4e8e\u5728\u4e3b\u7ebf\u7a0b\u4e2d\u521b\u5efa\u5b50\u7ebf\u7a0b\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a filename\uff0c\u8868\u793a\u5b50\u7ebf\u7a0b\u6267\u884c\u7684\u5165\u53e3\u3002 parentPort: \u5728 worker \u7ebf\u7a0b\u91cc\u662f\u8868\u793a\u7236\u8fdb\u7a0b\u7684 MessagePort \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5728\u4e3b\u7ebf\u7a0b\u91cc\u4e3a null workerData: \u7528\u4e8e\u5728\u4e3b\u8fdb\u7a0b\u4e2d\u5411\u5b50\u8fdb\u7a0b\u4f20\u9012\u6570\u636e\uff08data \u526f\u672c\uff09 \u603b\u7ed3 \u591a\u8fdb\u7a0b vs \u591a\u7ebf\u7a0b \u5bf9\u6bd4\u4e00\u4e0b\u591a\u7ebf\u7a0b\u4e0e\u591a\u8fdb\u7a0b\uff1a","title":"NodeJS"},{"location":"nodejs/node-debug/","text":"Node \u8c03\u8bd5\u5de5\u5177\u5165\u95e8\u6559\u7a0b \u00b6 JavaScript \u7a0b\u5e8f\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u8c03\u8bd5\u5de5\u5177\u7684\u91cd\u8981\u6027\u65e5\u76ca\u51f8\u663e\u3002\u5ba2\u6237\u7aef\u811a\u672c\u6709\u6d4f\u89c8\u5668\uff0cNode \u811a\u672c\u600e\u4e48\u8c03\u8bd5\u5462\uff1f 2016\u5e74\uff0cNode \u51b3\u5b9a\u5c06 Chrome \u6d4f\u89c8\u5668\u7684\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u4f5c\u4e3a\u5b98\u65b9\u7684\u8c03\u8bd5\u5de5\u5177\uff0c\u4f7f\u5f97 Node \u811a\u672c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u56fe\u5f62\u754c\u9762\u8c03\u8bd5\uff0c\u8fd9\u5927\u5927\u65b9\u4fbf\u4e86\u5f00\u53d1\u8005\u3002 \u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Node \u811a\u672c\u7684\u8c03\u8bd5\u5de5\u5177\u3002 \u4e00\u3001\u793a\u4f8b\u7a0b\u5e8f \u00b6 \u4e3a\u4e86\u65b9\u4fbf\u8bb2\u89e3\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\u811a\u672c\u3002\u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a\u5de5\u4f5c\u76ee\u5f55\uff0c\u5e76\u8fdb\u5165\u8be5\u76ee\u5f55\u3002 $ mkdir debug-demo $ cd debug-demo \u7136\u540e\uff0c\u751f\u6210 package.json \u6587\u4ef6\uff0c\u5e76\u5b89\u88c5 Koa \u6846\u67b6\u548c koa-route \u6a21\u5757\u3002 $ npm init -y $ npm install --save koa koa-route \u63a5\u7740\uff0c\u65b0\u5efa\u4e00\u4e2a\u811a\u672c app.js \uff0c\u5e76\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 // app.js const Koa = require ( 'koa' ); const router = require ( 'koa-route' ); const app = new Koa (); const main = ctx => { ctx . response . body = 'Hello World' ; }; const welcome = ( ctx , name ) => { ctx . response . body = 'Hello ' + name ; }; app . use ( router . get ( '/' , main )); app . use ( router . get ( '/:name' , welcome )); app . listen ( 3000 ); console . log ( 'listening on port 3000' ); \u4e0a\u9762\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684 Web \u5e94\u7528\uff0c\u6307\u5b9a\u4e86\u4e24\u4e2a\u8def\u7531\uff0c\u8bbf\u95ee\u540e\u4f1a\u663e\u793a\u4e00\u884c\u6b22\u8fce\u4fe1\u606f\u3002\u5982\u679c\u60f3\u8be6\u7ec6\u4e86\u89e3\u4ee3\u7801\u7684\u8be6\u7ec6\u542b\u4e49\uff0c\u53ef\u4ee5\u53c2\u8003 Koa \u6559\u7a0b \u3002 \u4e8c\u3001\u542f\u52a8\u5f00\u53d1\u8005\u5de5\u5177 \u00b6 \u73b0\u5728\uff0c\u8fd0\u884c\u4e0a\u9762\u7684\u811a\u672c\u3002 $ node --inspect app.js Debugger listening on ws://127.0.0.1:9229/70643120-f8a1-4012-aaae-bcc388de4ca0 For help see https://nodejs.org/en/docs/inspector listening on port 3000 \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c --inspect \u53c2\u6570\u662f\u542f\u52a8\u8c03\u8bd5\u6a21\u5f0f\u5fc5\u9700\u7684\u3002\u8fd9\u65f6\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1//3000 \uff0c\u5c31\u53ef\u4ee5\u770b\u5230 Hello World \u4e86\u3002 \u63a5\u4e0b\u6765\uff0c\u5c31\u8981\u5f00\u59cb\u8c03\u8bd5\u4e86\u3002\u4e00\u5171\u6709\u4e24\u79cd\u6253\u5f00\u8c03\u8bd5\u5de5\u5177\u7684\u65b9\u6cd5\uff0c\u7b2c\u4e00\u79cd\u662f\u5728 Chrome \u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\uff0c\u952e\u5165 chrome://inspect \u6216\u8005 about:inspect \uff0c\u56de\u8f66\u540e\u5c31\u53ef\u4ee5\u4e0b\u9762\u7684\u9875\u9762\u3002 \u5728 Target \u90e8\u5206\uff0c\u70b9\u51fb inspect \u94fe\u63a5\uff0c\u5c31\u80fd\u8fdb\u5165\u8c03\u8bd5\u5de5\u5177\u4e86\u3002 \u7b2c\u4e8c\u79cd\u8fdb\u5165\u8c03\u8bd5\u5de5\u5177\u7684\u65b9\u6cd5\uff0c\u662f\u5728 http://127.0.0.1//3000 \u7684\u7a97\u53e3\u6253\u5f00\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\uff0c\u9876\u90e8\u5de6\u4e0a\u89d2\u6709\u4e00\u4e2a Node \u7684\u7eff\u8272\u6807\u5fd7\uff0c\u70b9\u51fb\u5c31\u53ef\u4ee5\u8fdb\u5165\u3002 \u4e09\u3001\u8c03\u8bd5\u5de5\u5177\u7a97\u53e3 \u00b6 \u8c03\u8bd5\u5de5\u5177\u5176\u5b9e\u5c31\u662f\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u7684\u5b9a\u5236\u7248\uff0c\u7701\u53bb\u4e86\u90a3\u4e9b\u5bf9\u670d\u52a1\u5668\u811a\u672c\u6ca1\u7528\u7684\u90e8\u5206\u3002 \u5b83\u4e3b\u8981\u6709\u56db\u4e2a\u9762\u677f\u3002 Console\uff1a\u63a7\u5236\u53f0 Memory\uff1a\u5185\u5b58 Profiler\uff1a\u6027\u80fd Sources\uff1a\u6e90\u7801 \u8fd9\u4e9b\u9762\u677f\u7684\u7528\u6cd5\uff0c\u57fa\u672c\u4e0a\u8ddf\u6d4f\u89c8\u5668\u73af\u5883\u5dee\u4e0d\u591a\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd Sources \uff08\u6e90\u7801\uff09\u9762\u677f\u3002 \u56db\u3001\u8bbe\u7f6e\u65ad\u70b9 \u00b6 \u8fdb\u5165 Sources \u9762\u677f\uff0c\u627e\u5230\u6b63\u5728\u8fd0\u884c\u7684\u811a\u672c app.js \u3002 \u5728\u7b2c11\u884c\uff08\u4e5f\u5c31\u662f\u4e0b\u9762\u8fd9\u4e00\u884c\uff09\u7684\u884c\u53f7\u4e0a\u70b9\u4e00\u4e0b\uff0c\u5c31\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u65ad\u70b9\u3002 ctx . response . body = 'Hello ' + name ; \u8fd9\u65f6\uff0c\u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:3000/alice \uff0c\u9875\u9762\u4f1a\u663e\u793a\u6b63\u5728\u7b49\u5f85\u670d\u52a1\u5668\u8fd4\u56de\u3002\u5207\u6362\u5230\u8c03\u8bd5\u5de5\u5177\uff0c\u53ef\u4ee5\u770b\u5230 Node \u4e3b\u7ebf\u7a0b\u5904\u4e8e\u6682\u505c\uff08paused\uff09\u9636\u6bb5\u3002 \u8fdb\u5165 Console \u9762\u677f\uff0c\u8f93\u5165 name\uff0c\u4f1a\u8fd4\u56de alice\u3002\u8fd9\u8868\u660e\u6211\u4eec\u6b63\u5904\u5728\u65ad\u70b9\u5904\u7684\u4e0a\u4e0b\u6587\uff08context\uff09\u3002 \u518d\u5207\u56de Sources \u9762\u677f\uff0c\u53f3\u4fa7\u53ef\u4ee5\u770b\u5230 Watch\u3001Call Stack\u3001Scope\u3001Breakpoints \u7b49\u6298\u53e0\u9879\u3002\u6253\u5f00 Scope \u6298\u53e0\u9879\uff0c\u53ef\u4ee5\u770b\u5230 Local \u4f5c\u7528\u57df\u548c Global \u4f5c\u7528\u57df\u91cc\u9762\u7684\u6240\u6709\u53d8\u91cf\u3002 Local \u4f5c\u7528\u57df\u91cc\u9762\uff0c\u53d8\u91cf name \u7684\u503c\u662f alice \uff0c\u53cc\u51fb\u8fdb\u5165\u7f16\u8f91\u72b6\u6001\uff0c\u628a\u5b83\u6539\u6210 bob \u3002 \u7136\u540e\uff0c\u70b9\u51fb\u9876\u90e8\u5de5\u5177\u680f\u7684\u7ee7\u7eed\u8fd0\u884c\u6309\u94ae\u3002 \u9875\u9762\u4e0a\u5c31\u53ef\u4ee5\u770b\u5230 Hello bob \u4e86\u3002 \u547d\u4ee4\u884c\u4e0b\uff0c\u6309\u4e0b ctrl + c\uff0c\u7ec8\u6b62\u8fd0\u884c app.js \u3002 \u4e94\u3001\u8c03\u8bd5\u975e\u670d\u52a1\u811a\u672c \u00b6 Web \u670d\u52a1\u811a\u672c\u4f1a\u4e00\u76f4\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u4f46\u662f\u5927\u90e8\u5206\u811a\u672c\u53ea\u662f\u5904\u7406\u67d0\u4e2a\u4efb\u52a1\uff0c\u8fd0\u884c\u5b8c\u5c31\u4f1a\u7ec8\u6b62\u3002\u8fd9\u65f6\uff0c\u4f60\u53ef\u80fd\u6839\u672c\u6ca1\u6709\u65f6\u95f4\u6253\u5f00\u8c03\u8bd5\u5de5\u5177\u3002\u7b49\u4f60\u6253\u5f00\u4e86\uff0c\u811a\u672c\u65e9\u5c31\u7ed3\u675f\u8fd0\u884c\u4e86\u3002\u8fd9\u65f6\u600e\u4e48\u8c03\u8bd5\u5462\uff1f $ node --inspect = 9229 -e \"setTimeout(function() { console.log('yes'); }, 30000)\" \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c --inspect=9229 \u6307\u5b9a\u8c03\u8bd5\u7aef\u53e3\u4e3a 9229\uff0c\u8fd9\u662f\u8c03\u8bd5\u5de5\u5177\u9ed8\u8ba4\u7684\u901a\u4fe1\u7aef\u53e3\u3002 -e \u53c2\u6570\u6307\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f5c\u4e3a\u4ee3\u7801\u8fd0\u884c\u3002 \u8bbf\u95ee chrome://inspect \uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u8c03\u8bd5\u5de5\u5177\uff0c\u8c03\u8bd5\u8fd9\u6bb5\u4ee3\u7801\u4e86\u3002 \u4ee3\u7801\u653e\u5728 setTimeout \u91cc\u9762\uff0c\u603b\u662f\u4e0d\u592a\u65b9\u4fbf\u3002\u90a3\u4e9b\u8fd0\u884c\u65f6\u95f4\u8f83\u77ed\u7684\u811a\u672c\uff0c\u53ef\u80fd\u6839\u672c\u6765\u4e0d\u53ca\u6253\u5f00\u8c03\u8bd5\u5de5\u5177\u3002\u8fd9\u65f6\u5c31\u8981\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u3002 $ node --inspect-brk = 9229 app.js \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c --inspect-brk \u6307\u5b9a\u5728\u7b2c\u4e00\u884c\u5c31\u8bbe\u7f6e\u65ad\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u5f00\u59cb\u8fd0\u884c\uff0c\u5c31\u662f\u6682\u505c\u7684\u72b6\u6001\u3002 \u516d\u3001\u5fd8\u4e86\u5199 --inspect \u600e\u4e48\u529e\uff1f \u00b6 \u6253\u5f00\u8c03\u8bd5\u5de5\u5177\u7684\u524d\u63d0\u662f\uff0c\u542f\u52a8 Node \u811a\u672c\u65f6\u5c31\u52a0\u4e0a --inspect \u53c2\u6570\u3002\u5982\u679c\u5fd8\u4e86\u8fd9\u4e2a\u53c2\u6570\uff0c\u8fd8\u80fd\u4e0d\u80fd\u8c03\u8bd5\u5462\uff1f \u56de\u7b54\u662f\u53ef\u4ee5\u7684\u3002\u9996\u5148\uff0c\u6b63\u5e38\u542f\u52a8\u811a\u672c\u3002 $ node app.js \u7136\u540e\uff0c\u5728\u53e6\u4e00\u4e2a\u547d\u4ee4\u884c\u7a97\u53e3\uff0c\u67e5\u627e\u4e0a\u9762\u811a\u672c\u7684\u8fdb\u7a0b\u53f7\u3002 $ ps ax | grep app.js 30464 pts/11 Sl+ 0 :00 node app.js 30541 pts/12 S+ 0 :00 grep app.js \u4e0a\u9762\u547d\u4ee4\u4e2d\uff0c app.js \u7684\u8fdb\u7a0b\u53f7\u662f 30464 \u3002 \u63a5\u7740\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ node -e 'process._debugProcess(30464)' \u4e0a\u9762\u547d\u4ee4\u4f1a\u5efa\u7acb\u8fdb\u7a0b 30464 \u4e0e\u8c03\u8bd5\u5de5\u5177\u7684\u8fde\u63a5\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6253\u5f00\u8c03\u8bd5\u5de5\u5177\u4e86\u3002 \u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c31\u662f\u5411\u811a\u672c\u8fdb\u7a0b\u53d1\u9001 SIGUSR1 \u4fe1\u53f7\uff0c\u4e5f\u53ef\u4ee5\u5efa\u7acb\u8c03\u8bd5\u8fde\u63a5\u3002 $ kill -SIGUSR1 67827","title":"node-debug"},{"location":"nodejs/node-debug/#node","text":"JavaScript \u7a0b\u5e8f\u8d8a\u6765\u8d8a\u590d\u6742\uff0c\u8c03\u8bd5\u5de5\u5177\u7684\u91cd\u8981\u6027\u65e5\u76ca\u51f8\u663e\u3002\u5ba2\u6237\u7aef\u811a\u672c\u6709\u6d4f\u89c8\u5668\uff0cNode \u811a\u672c\u600e\u4e48\u8c03\u8bd5\u5462\uff1f 2016\u5e74\uff0cNode \u51b3\u5b9a\u5c06 Chrome \u6d4f\u89c8\u5668\u7684\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u4f5c\u4e3a\u5b98\u65b9\u7684\u8c03\u8bd5\u5de5\u5177\uff0c\u4f7f\u5f97 Node \u811a\u672c\u4e5f\u53ef\u4ee5\u4f7f\u7528\u56fe\u5f62\u754c\u9762\u8c03\u8bd5\uff0c\u8fd9\u5927\u5927\u65b9\u4fbf\u4e86\u5f00\u53d1\u8005\u3002 \u672c\u6587\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528 Node \u811a\u672c\u7684\u8c03\u8bd5\u5de5\u5177\u3002","title":"Node \u8c03\u8bd5\u5de5\u5177\u5165\u95e8\u6559\u7a0b"},{"location":"nodejs/node-debug/#_1","text":"\u4e3a\u4e86\u65b9\u4fbf\u8bb2\u89e3\uff0c\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\u811a\u672c\u3002\u9996\u5148\uff0c\u65b0\u5efa\u4e00\u4e2a\u5de5\u4f5c\u76ee\u5f55\uff0c\u5e76\u8fdb\u5165\u8be5\u76ee\u5f55\u3002 $ mkdir debug-demo $ cd debug-demo \u7136\u540e\uff0c\u751f\u6210 package.json \u6587\u4ef6\uff0c\u5e76\u5b89\u88c5 Koa \u6846\u67b6\u548c koa-route \u6a21\u5757\u3002 $ npm init -y $ npm install --save koa koa-route \u63a5\u7740\uff0c\u65b0\u5efa\u4e00\u4e2a\u811a\u672c app.js \uff0c\u5e76\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 // app.js const Koa = require ( 'koa' ); const router = require ( 'koa-route' ); const app = new Koa (); const main = ctx => { ctx . response . body = 'Hello World' ; }; const welcome = ( ctx , name ) => { ctx . response . body = 'Hello ' + name ; }; app . use ( router . get ( '/' , main )); app . use ( router . get ( '/:name' , welcome )); app . listen ( 3000 ); console . log ( 'listening on port 3000' ); \u4e0a\u9762\u4ee3\u7801\u662f\u4e00\u4e2a\u7b80\u5355\u7684 Web \u5e94\u7528\uff0c\u6307\u5b9a\u4e86\u4e24\u4e2a\u8def\u7531\uff0c\u8bbf\u95ee\u540e\u4f1a\u663e\u793a\u4e00\u884c\u6b22\u8fce\u4fe1\u606f\u3002\u5982\u679c\u60f3\u8be6\u7ec6\u4e86\u89e3\u4ee3\u7801\u7684\u8be6\u7ec6\u542b\u4e49\uff0c\u53ef\u4ee5\u53c2\u8003 Koa \u6559\u7a0b \u3002","title":"\u4e00\u3001\u793a\u4f8b\u7a0b\u5e8f"},{"location":"nodejs/node-debug/#_2","text":"\u73b0\u5728\uff0c\u8fd0\u884c\u4e0a\u9762\u7684\u811a\u672c\u3002 $ node --inspect app.js Debugger listening on ws://127.0.0.1:9229/70643120-f8a1-4012-aaae-bcc388de4ca0 For help see https://nodejs.org/en/docs/inspector listening on port 3000 \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c --inspect \u53c2\u6570\u662f\u542f\u52a8\u8c03\u8bd5\u6a21\u5f0f\u5fc5\u9700\u7684\u3002\u8fd9\u65f6\uff0c\u6253\u5f00\u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1//3000 \uff0c\u5c31\u53ef\u4ee5\u770b\u5230 Hello World \u4e86\u3002 \u63a5\u4e0b\u6765\uff0c\u5c31\u8981\u5f00\u59cb\u8c03\u8bd5\u4e86\u3002\u4e00\u5171\u6709\u4e24\u79cd\u6253\u5f00\u8c03\u8bd5\u5de5\u5177\u7684\u65b9\u6cd5\uff0c\u7b2c\u4e00\u79cd\u662f\u5728 Chrome \u6d4f\u89c8\u5668\u7684\u5730\u5740\u680f\uff0c\u952e\u5165 chrome://inspect \u6216\u8005 about:inspect \uff0c\u56de\u8f66\u540e\u5c31\u53ef\u4ee5\u4e0b\u9762\u7684\u9875\u9762\u3002 \u5728 Target \u90e8\u5206\uff0c\u70b9\u51fb inspect \u94fe\u63a5\uff0c\u5c31\u80fd\u8fdb\u5165\u8c03\u8bd5\u5de5\u5177\u4e86\u3002 \u7b2c\u4e8c\u79cd\u8fdb\u5165\u8c03\u8bd5\u5de5\u5177\u7684\u65b9\u6cd5\uff0c\u662f\u5728 http://127.0.0.1//3000 \u7684\u7a97\u53e3\u6253\u5f00\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\uff0c\u9876\u90e8\u5de6\u4e0a\u89d2\u6709\u4e00\u4e2a Node \u7684\u7eff\u8272\u6807\u5fd7\uff0c\u70b9\u51fb\u5c31\u53ef\u4ee5\u8fdb\u5165\u3002","title":"\u4e8c\u3001\u542f\u52a8\u5f00\u53d1\u8005\u5de5\u5177"},{"location":"nodejs/node-debug/#_3","text":"\u8c03\u8bd5\u5de5\u5177\u5176\u5b9e\u5c31\u662f\u201c\u5f00\u53d1\u8005\u5de5\u5177\u201d\u7684\u5b9a\u5236\u7248\uff0c\u7701\u53bb\u4e86\u90a3\u4e9b\u5bf9\u670d\u52a1\u5668\u811a\u672c\u6ca1\u7528\u7684\u90e8\u5206\u3002 \u5b83\u4e3b\u8981\u6709\u56db\u4e2a\u9762\u677f\u3002 Console\uff1a\u63a7\u5236\u53f0 Memory\uff1a\u5185\u5b58 Profiler\uff1a\u6027\u80fd Sources\uff1a\u6e90\u7801 \u8fd9\u4e9b\u9762\u677f\u7684\u7528\u6cd5\uff0c\u57fa\u672c\u4e0a\u8ddf\u6d4f\u89c8\u5668\u73af\u5883\u5dee\u4e0d\u591a\uff0c\u8fd9\u91cc\u53ea\u4ecb\u7ecd Sources \uff08\u6e90\u7801\uff09\u9762\u677f\u3002","title":"\u4e09\u3001\u8c03\u8bd5\u5de5\u5177\u7a97\u53e3"},{"location":"nodejs/node-debug/#_4","text":"\u8fdb\u5165 Sources \u9762\u677f\uff0c\u627e\u5230\u6b63\u5728\u8fd0\u884c\u7684\u811a\u672c app.js \u3002 \u5728\u7b2c11\u884c\uff08\u4e5f\u5c31\u662f\u4e0b\u9762\u8fd9\u4e00\u884c\uff09\u7684\u884c\u53f7\u4e0a\u70b9\u4e00\u4e0b\uff0c\u5c31\u8bbe\u7f6e\u4e86\u4e00\u4e2a\u65ad\u70b9\u3002 ctx . response . body = 'Hello ' + name ; \u8fd9\u65f6\uff0c\u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:3000/alice \uff0c\u9875\u9762\u4f1a\u663e\u793a\u6b63\u5728\u7b49\u5f85\u670d\u52a1\u5668\u8fd4\u56de\u3002\u5207\u6362\u5230\u8c03\u8bd5\u5de5\u5177\uff0c\u53ef\u4ee5\u770b\u5230 Node \u4e3b\u7ebf\u7a0b\u5904\u4e8e\u6682\u505c\uff08paused\uff09\u9636\u6bb5\u3002 \u8fdb\u5165 Console \u9762\u677f\uff0c\u8f93\u5165 name\uff0c\u4f1a\u8fd4\u56de alice\u3002\u8fd9\u8868\u660e\u6211\u4eec\u6b63\u5904\u5728\u65ad\u70b9\u5904\u7684\u4e0a\u4e0b\u6587\uff08context\uff09\u3002 \u518d\u5207\u56de Sources \u9762\u677f\uff0c\u53f3\u4fa7\u53ef\u4ee5\u770b\u5230 Watch\u3001Call Stack\u3001Scope\u3001Breakpoints \u7b49\u6298\u53e0\u9879\u3002\u6253\u5f00 Scope \u6298\u53e0\u9879\uff0c\u53ef\u4ee5\u770b\u5230 Local \u4f5c\u7528\u57df\u548c Global \u4f5c\u7528\u57df\u91cc\u9762\u7684\u6240\u6709\u53d8\u91cf\u3002 Local \u4f5c\u7528\u57df\u91cc\u9762\uff0c\u53d8\u91cf name \u7684\u503c\u662f alice \uff0c\u53cc\u51fb\u8fdb\u5165\u7f16\u8f91\u72b6\u6001\uff0c\u628a\u5b83\u6539\u6210 bob \u3002 \u7136\u540e\uff0c\u70b9\u51fb\u9876\u90e8\u5de5\u5177\u680f\u7684\u7ee7\u7eed\u8fd0\u884c\u6309\u94ae\u3002 \u9875\u9762\u4e0a\u5c31\u53ef\u4ee5\u770b\u5230 Hello bob \u4e86\u3002 \u547d\u4ee4\u884c\u4e0b\uff0c\u6309\u4e0b ctrl + c\uff0c\u7ec8\u6b62\u8fd0\u884c app.js \u3002","title":"\u56db\u3001\u8bbe\u7f6e\u65ad\u70b9"},{"location":"nodejs/node-debug/#_5","text":"Web \u670d\u52a1\u811a\u672c\u4f1a\u4e00\u76f4\u5728\u540e\u53f0\u8fd0\u884c\uff0c\u4f46\u662f\u5927\u90e8\u5206\u811a\u672c\u53ea\u662f\u5904\u7406\u67d0\u4e2a\u4efb\u52a1\uff0c\u8fd0\u884c\u5b8c\u5c31\u4f1a\u7ec8\u6b62\u3002\u8fd9\u65f6\uff0c\u4f60\u53ef\u80fd\u6839\u672c\u6ca1\u6709\u65f6\u95f4\u6253\u5f00\u8c03\u8bd5\u5de5\u5177\u3002\u7b49\u4f60\u6253\u5f00\u4e86\uff0c\u811a\u672c\u65e9\u5c31\u7ed3\u675f\u8fd0\u884c\u4e86\u3002\u8fd9\u65f6\u600e\u4e48\u8c03\u8bd5\u5462\uff1f $ node --inspect = 9229 -e \"setTimeout(function() { console.log('yes'); }, 30000)\" \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c --inspect=9229 \u6307\u5b9a\u8c03\u8bd5\u7aef\u53e3\u4e3a 9229\uff0c\u8fd9\u662f\u8c03\u8bd5\u5de5\u5177\u9ed8\u8ba4\u7684\u901a\u4fe1\u7aef\u53e3\u3002 -e \u53c2\u6570\u6307\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f5c\u4e3a\u4ee3\u7801\u8fd0\u884c\u3002 \u8bbf\u95ee chrome://inspect \uff0c\u5c31\u53ef\u4ee5\u8fdb\u5165\u8c03\u8bd5\u5de5\u5177\uff0c\u8c03\u8bd5\u8fd9\u6bb5\u4ee3\u7801\u4e86\u3002 \u4ee3\u7801\u653e\u5728 setTimeout \u91cc\u9762\uff0c\u603b\u662f\u4e0d\u592a\u65b9\u4fbf\u3002\u90a3\u4e9b\u8fd0\u884c\u65f6\u95f4\u8f83\u77ed\u7684\u811a\u672c\uff0c\u53ef\u80fd\u6839\u672c\u6765\u4e0d\u53ca\u6253\u5f00\u8c03\u8bd5\u5de5\u5177\u3002\u8fd9\u65f6\u5c31\u8981\u4f7f\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u3002 $ node --inspect-brk = 9229 app.js \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c --inspect-brk \u6307\u5b9a\u5728\u7b2c\u4e00\u884c\u5c31\u8bbe\u7f6e\u65ad\u70b9\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u5f00\u59cb\u8fd0\u884c\uff0c\u5c31\u662f\u6682\u505c\u7684\u72b6\u6001\u3002","title":"\u4e94\u3001\u8c03\u8bd5\u975e\u670d\u52a1\u811a\u672c"},{"location":"nodejs/node-debug/#-inspect","text":"\u6253\u5f00\u8c03\u8bd5\u5de5\u5177\u7684\u524d\u63d0\u662f\uff0c\u542f\u52a8 Node \u811a\u672c\u65f6\u5c31\u52a0\u4e0a --inspect \u53c2\u6570\u3002\u5982\u679c\u5fd8\u4e86\u8fd9\u4e2a\u53c2\u6570\uff0c\u8fd8\u80fd\u4e0d\u80fd\u8c03\u8bd5\u5462\uff1f \u56de\u7b54\u662f\u53ef\u4ee5\u7684\u3002\u9996\u5148\uff0c\u6b63\u5e38\u542f\u52a8\u811a\u672c\u3002 $ node app.js \u7136\u540e\uff0c\u5728\u53e6\u4e00\u4e2a\u547d\u4ee4\u884c\u7a97\u53e3\uff0c\u67e5\u627e\u4e0a\u9762\u811a\u672c\u7684\u8fdb\u7a0b\u53f7\u3002 $ ps ax | grep app.js 30464 pts/11 Sl+ 0 :00 node app.js 30541 pts/12 S+ 0 :00 grep app.js \u4e0a\u9762\u547d\u4ee4\u4e2d\uff0c app.js \u7684\u8fdb\u7a0b\u53f7\u662f 30464 \u3002 \u63a5\u7740\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u547d\u4ee4\u3002 $ node -e 'process._debugProcess(30464)' \u4e0a\u9762\u547d\u4ee4\u4f1a\u5efa\u7acb\u8fdb\u7a0b 30464 \u4e0e\u8c03\u8bd5\u5de5\u5177\u7684\u8fde\u63a5\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6253\u5f00\u8c03\u8bd5\u5de5\u5177\u4e86\u3002 \u8fd8\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u5c31\u662f\u5411\u811a\u672c\u8fdb\u7a0b\u53d1\u9001 SIGUSR1 \u4fe1\u53f7\uff0c\u4e5f\u53ef\u4ee5\u5efa\u7acb\u8c03\u8bd5\u8fde\u63a5\u3002 $ kill -SIGUSR1 67827","title":"\u516d\u3001\u5fd8\u4e86\u5199 --inspect \u600e\u4e48\u529e\uff1f"},{"location":"nodejs/nodeJS%20%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/","text":"nodeJS \u57fa\u7840\u6559\u7a0b \u00b6 https://www.runoob.com/nodejs/nodejs-tutorial.html","title":"nodeJS \u57fa\u7840\u6559\u7a0b"},{"location":"nodejs/nodeJS%20%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B/#nodejs","text":"https://www.runoob.com/nodejs/nodejs-tutorial.html","title":"nodeJS \u57fa\u7840\u6559\u7a0b"},{"location":"nodejs/nodeJS%2Bmysql%2B%E8%BF%9E%E6%8E%A5%E6%B1%A0/","text":"nodeJS+mysql+\u8fde\u63a5\u6c60 \u00b6 nodejs\u7684mysql\u6a21\u5757\u5b66\u4e60(\u516d)\u8fde\u63a5\u6c60\u7684\u521b\u5efa\u548c\u4f7f\u7528 \u00b6 \u4ecb\u7ecd \u00b6 \u5728 \u8f6f\u4ef6\u5de5\u7a0b \uff0c \u8fde\u63a5\u6c60 \u662f\u4e00\u4e2a \u9ad8\u901f\u7f13\u5b58 \u7684 \u6570\u636e\u5e93\u8fde\u63a5 \u7ef4\u6301\uff0c\u4f7f\u5f97\u8fde\u63a5\u53ef\u4ee5\u5f53\u9700\u8981\u5c06\u6765\u5411\u6570\u636e\u5e93\u8bf7\u6c42\u91cd\u590d\u4f7f\u7528\u3002 [ \u6765\u6e90\u8bf7\u6c42 ] \u8fde\u63a5\u6c60\u7528\u4e8e\u63d0\u9ad8\u6570\u636e\u5e93\u4e0a\u6267\u884c\u547d\u4ee4\u7684\u6027\u80fd\u3002 \u6253\u5f00\u5e76\u4fdd\u6301\u6bcf\u4e2a\u7528\u6237\u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u7279\u522b\u8bf7\u6c42\u5230\u52a8\u6001\u6570\u636e\u5e93\u9a71\u52a8\u7684\u5236\u6210 \u7f51\u7ad9 \u5e94\u7528\uff0c\u662f\u6602\u8d35\u7684\u548c\u6d6a\u8d39\u8d44\u6e90\u3002 \u5728\u8fde\u63a5\u6c60\u4e2d\uff0c\u5728\u521b\u5efa\u8fde\u63a5\u4e4b\u540e\uff0c\u5b83\u88ab\u653e\u7f6e\u5728\u6c60\u4e2d\uff0c\u5e76\u4e14\u5b83\u88ab\u518d\u6b21\u4f7f\u7528\uff0c\u4f7f\u5f97\u4e0d\u5fc5\u5efa\u7acb\u65b0\u7684\u8fde\u63a5\u3002 \u5982\u679c\u6b63\u5728\u4f7f\u7528\u6240\u6709\u8fde\u63a5\uff0c\u5219\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u8fde\u63a5\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u6c60\u4e2d\u3002 \u8fde\u63a5\u6c60\u4e5f\u51cf\u5c11\u4e86\u7528\u6237\u5fc5\u987b\u7b49\u5f85\u5efa\u7acb\u5230\u6570\u636e\u5e93\u7684\u8fde\u63a5\u7684\u65f6\u95f4\u91cf\u3002 \u8be5\u7ec4\u4ef6\u4e5f\u63d0\u4f9b\u4e86\u521b\u5efa\u8fde\u63a5\u6c60\u7684\u65b9\u6cd5 \u00b6 \u521b\u5efa\u8fde\u63a5\u6c60 \u521b\u5efa\u8fde\u63a5\u6c60\u7684\u914d\u7f6e\u65b9\u5f0f\u548c\u521b\u5efa\u8fde\u63a5\u7684\u65b9\u5f0f\u76f8\u540c \u4f46\u662f\u4e5f\u6709\u51e0\u4e2a \u72ec\u6709\u7684\u914d\u7f6e \u5176\u4ed6\u914d\u7f6e acquireTimeout : \u83b7\u53d6\u8fde\u63a5\u65f6\u7684\u8d85\u65f6\u914d\u7f6e \u9ed8\u8ba410000 waitForConnection : \u5728\u8fde\u63a5\u6c60\u7684\u6240\u6709\u8fde\u63a5\u6ca1\u6709\u53ef\u7528\u7684\u65f6\u5019\uff0c\u5982\u679c \u662ftrue \u5c31\u8ba9\u7533\u8bf7\u8fde\u63a5\u7684\u6392\u961f\u7b49\u5f85 \uff0c \u5982\u679cfalse \u5219\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\uff0c\u9ed8\u8ba4 true connectionLimit : \u4e00\u6b21\u6027\u5efa\u7acb\u7684\u6700\u5927\u8fde\u63a5\u6570\u76ee \u9ed8\u8ba4\u4e3a 10 queueLimit: \u8fde\u63a5\u6c60\u7684\u6700\u5927\u6392\u961f\u6570\u76ee \u8d85\u51fa\u62a5\u9519 \u5982\u679c\u4e3a0\uff0c\u5219\u6ca1\u6709\u9650\u5236\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a0 \u521b\u5efa\u8fde\u63a5\u6c60\u4ee3\u7801 var mysql = require ( 'mysql' ); var pool = mysql = createPool ({ //\u521b\u5efa\u8fde\u63a5\u6c60 host : 'localhost' , user : 'we' , password : 'pass' , database : 'db' }) \u83b7\u53d6\u8fde\u63a5 pool . getConnection ( function ( err , connection ){ connection . query ( sql , function ( err , rows ){ //\u6267\u884csql\u8bed\u53e5 connection . release (); //\u5c06\u8fde\u63a5\u8fd4\u56de\u8fde\u63a5\u6c60 //\u505a\u4e9b\u4ec0\u4e48 }) }) \u5c06\u8fde\u63a5\u91ca\u653e\u4f1a\u8fde\u63a5\u6c60 connection.release(); \u5f7b\u5e95\u4ece\u8fde\u63a5\u6c60\u91cc\u5220\u9664\u4e00\u4e2a\u8fde\u63a5 connection.destroy(); node+mysql \u6570\u636e\u5e93\u8fde\u63a5\u6c60 \u00b6 2019-04-26 21:27 \u9f99\u60690707 \u9605\u8bfb(762) \u8bc4\u8bba(0) \u7f16\u8f91 \u6536\u85cf 1. \u4ec0\u4e48\u662f\u6570\u636e\u5e93\u8fde\u63a5\u6c60\uff1f \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u662f\u7a0b\u5e8f\u542f\u52a8\u65f6\u5efa\u7acb\u8db3\u591f\u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u5e76\u5c06\u8fd9\u4e9b\u8fde\u63a5\u7ec4\u6210\u4e00\u4e2a\u6c60\uff0c\u7531\u7a0b\u5e8f\u52a8\u6001\u5730\u5bf9\u6c60\u4e2d\u7684\u8fde\u63a5\u8fdb\u884c\u7533\u8bf7\uff0c\u4f7f\u7528\u548c\u91ca\u653e\u3002 2. \u4f7f\u7528\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u539f\u7406\u53ca\u4f18\u70b9\u662f\u4ec0\u4e48\uff1f \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u5728\u521d\u59cb\u5316\u65f6\u5c06\u4f1a\u521b\u5efa\u4e00\u5b9a\u6570\u91cf\u7684\u6570\u636e\u5e93\u8fde\u63a5\u653e\u5230\u8fde\u63a5\u6c60\u4e2d\uff0c\u8fde\u63a5\u6c60\u90fd\u5c06\u4e00\u76f4\u4fdd\u8bc1\u81f3\u5c11\u62e5\u6709\u8fd9\u4e48\u591a\u7684\u8fde\u63a5\u6570\u91cf\uff0c\u5f53\u6709\u6570\u636e\u5e93\u9700\u8981\u88ab\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u5411\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7533\u8bf7\u8d44\u6e90\u548c\u4f7f\u7528\uff0c\u4f7f\u7528\u5b8c\u6210\u540e\u4f1a\u91ca\u653e\u5230\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u4e2d\u3002\u5f53\u7136\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u4e2d\u62e5\u6709\u6700\u5c0f\u8fde\u63a5\u6570\u91cf\u548c\u6700\u5927\u8fde\u63a5\u6570\u91cf\uff0c\u5f53\u6570\u636e\u5e93\u7684\u8fde\u63a5\u8d85\u8fc7\u8fde\u63a5\u6c60\u4e2d\u6700\u5927\u7684\u6570\u91cf\u7684\u65f6\u5019\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u5c06\u88ab\u52a0\u5165\u5230\u7b49\u5f85\u961f\u5217\u4e2d\u3002 \u5176\u5b9e\u4ed6\u4eec\u7684\u539f\u7406\u5c31\u597d\u6bd4\u6211\u4eec\u516c\u53f8\u7684\u62db\u8058\u524d\u7aef\u5f00\u53d1\u4e00\u6837\uff0c\u5f53\u6709A\u9879\u76ee\u7684\u65f6\u5019\uff0c\u6211\u4eec\u516c\u53f8\u9700\u8981\u62db\u8058\u4e00\u4e2a\u524d\u7aef\u5f00\u53d1\u53bb\u505a\u9879\u76ee\uff0c\u4f46\u662f\u5f53\u516c\u53f8\u6709B\u3001C\u3001D\u3001\u7b49\u9879\u76ee\u7684\u65f6\u5019\uff0c\u6216\u8005\u5f88\u591a\u9879\u76ee\u7684\u65f6\u5019\u9700\u8981\u4e0d\u65ad\u7684\u62db\u8058\u524d\u7aef\u5f00\u53d1\uff0c\u90a3\u4e48\u8fd9\u6837\u4f1a\u7ed9\u516c\u53f8\u5e26\u6765\u5f88\u591a\u4eba\u529b\u6210\u672c\u7684\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u524d\u7aef\u4e3b\u7ba1\u6765\u7ba1\u7406\u8fd9\u4e9b\u524d\u7aef\u8d44\u6e90\u3002\u524d\u7aef\u4e3b\u7ba1\u624b\u4e0b\u5047\u5982\u67095\u4e2a\u524d\u7aef\u5f00\u53d1\uff0c\u90a3\u4e48\u5f53A\u3001B\u3001C\u3001D\u3001E\u3001\u9879\u76ee\u6765\u7684\u65f6\u5019\uff0c\u524d\u7aef\u4e3b\u7ba1\u4f1a\u4f9d\u6b21\u628a\u8fd9\u4e9b\u9879\u76ee\u5206\u914d\u7ed9\u5bf9\u5e94\u7684\u5f00\u53d1\u4eba\u5458\u53bb\u8ddf\u8fdb\u3002\u4f46\u662f\u5f53\u8fd8\u6709F\u7b49\u9879\u76ee\u7684\u65f6\u5019\uff0c\u56e0\u4e3aF\u9879\u76ee\u5df2\u7ecf\u8d85\u8fc7\u524d\u7aef\u4eba\u5458\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4eba\u518d\u53bb\u652f\u6301\u8fd9\u4e9b\u4e2a\u9879\u76ee\uff0c\u56e0\u6b64\u8fd9\u4e9b\u9879\u76ee\u9700\u8981\u6392\u671f\uff0c\u7b49A\u3001B\u3001C\u3001D\u3001E \u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u5f00\u53d1\u5b8c\u6210\u540e\uff0c\u4e0a\u7ebf\u4e86\uff0c\u7136\u540e\u8fd9\u4e9b\u5f00\u53d1\u4eba\u5458\u5c31\u548c\u6570\u636e\u5e93\u4e00\u6837\u91ca\u653e\u8d44\u6e90\uff0c\u8fd4\u56de\u5230\u524d\u7aef\u7ec4\u6765\uff0c\u7136\u540e\u524d\u7aef\u4e3b\u7ba1\u518d\u628aF\u9879\u76ee\u5206\u914d\u5230\u5bf9\u5e94\u7684\u5f00\u53d1\u4eba\u5458\u3002\u8fd9\u4e2a\u6bd4\u65b9\u5c31\u597d\u6bd4\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u4e86\u3002\u800c\u4e0d\u662f\u6709n\u4e2a\u9879\u76ee\u9700\u8981\u62db\u8058n\u4e2a\u524d\u7aef\u5f00\u53d1\u6765\u505a\u9879\u76ee\uff0c\u90a3\u8fd9\u6837\u7684\u7f3a\u70b9\u662f\u516c\u53f8\u7684\u4eba\u529b\u6210\u672c\u4f1a\u5927\u5927\u7684\u589e\u52a0\u3002\u6240\u4ee5\u6570\u636e\u5e93\u7684\u94fe\u63a5\u6c60\u4e5f\u662f\u8fd9\u4e2a\u610f\u601d\uff0c\u5f53\u7f51\u7ad9\u67d0\u4e00\u5929\u6709\u5f88\u5927\u7684\u6d41\u91cf\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u670d\u52a1\u5668\u9700\u8981\u4e3a\u6bcf\u6b21\u94fe\u63a5\u521b\u5efa\u4e00\u6b21\u6570\u636e\u5e93\u94fe\u63a5\u3002\u8fd9\u6837\u5c31\u5f88\u6d6a\u8d39\u6570\u636e\u5e93\u7684\u8d44\u6e90\uff0c\u5e76\u4e14\u9891\u7e41\u7684\u521b\u5efa\u548c\u5173\u95ed\u6570\u636e\u5e93\u7684\u94fe\u63a5\uff0c\u5f88\u5bb9\u6613\u5bfc\u81f4\u670d\u52a1\u5668\u5185\u5b58\u6ea2\u51fa\u7b49\u60c5\u51b5\u53d1\u751f\u3002 \u8fde\u63a5\u6c60\u7684\u4f5c\u7528\u662f\uff1a\u6570\u636e\u5e93\u7684\u8fde\u63a5\u6c60\u8d1f\u8d23\u5206\u914d\uff0c\u7ba1\u7406\u548c\u91ca\u653e\u6570\u636e\u5e93\u94fe\u63a5\u7684\u3002\u5b83\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u91cd\u590d\u4f7f\u7528\u4e00\u4e2a\u73b0\u6709\u7684\u6570\u636e\u5e93\u7684\u94fe\u63a5\u3002\u800c\u4e0d\u662f\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u3002 3. \u4f20\u7edf\u7684\u6570\u636e\u5e93\u94fe\u63a5\u548c\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7684\u8fd0\u884c\u673a\u5236\u6709\u5565\u533a\u522b\uff1f \u4f20\u7edf\u7684\u6211\u4eec\u4e00\u822c\u6765java\u6765\u8bf4\uff1ajava\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u8fc7\u7a0b\u4e00\u822c\u662f\u5982\u4e0b\uff1a \\1. \u88c5\u8f7d\u6570\u636e\u5e93\u9a71\u52a8\u7a0b\u5e8f\u3002 \\2. \u901a\u8fc7JDBC\u5efa\u7acb\u6570\u636e\u5e93\u7684\u94fe\u63a5\u3002 \\3. \u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u6267\u884c\u4e00\u4e9bsql\u8bed\u53e5\u3002 \\4. \u65ad\u5f00\u53ca\u5173\u95ed\u6570\u636e\u5e93\u7684\u94fe\u63a5\u3002 \u5982\u4e0a\u662f\u4e00\u822c\u7684java\u8bbf\u95ee\u6570\u636e\u5e93\u94fe\u63a5\u7684\u8fc7\u7a0b\u3002 \u4e0b\u9762\u6211\u4eec\u4f7f\u7528\u6570\u636e\u5e93\u7684\u8fde\u63a5\u6c60\u7684\u64cd\u4f5c\u8fc7\u7a0b\u5982\u4e0b\uff1a \\1. \u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\u521b\u5efa\u8fde\u63a5\u6c60\u3002 \\2. \u4f7f\u7528\u65f6\u5411\u8fde\u63a5\u6c60\u7533\u8bf7\u53ef\u7528\u7684\u8d44\u6e90\u3002 \\3. \u4f7f\u7528\u5b8c\u6bd5\u540e\uff0c\u5c06\u6570\u636e\u5e93\u94fe\u63a5\u8fd4\u56de\u7ed9\u8fde\u63a5\u6c60\u3002 \\4. \u7a0b\u5e8f\u9000\u51fa\u65f6\uff0c\u65ad\u5f00\u6240\u6709\u7684\u94fe\u63a5\uff0c\u5e76\u91ca\u653e\u6570\u636e\u5e93\u7684\u94fe\u63a5\u3002 \u8fd9\u5c31\u662f\u4f20\u7edf\u548c\u8fde\u63a5\u6c60\u7684\u533a\u522b\u3002 node + mysql \u5b9e\u73b0\u6570\u636e\u5e93\u8fde\u63a5\u6c60 \u5728mysql\u6a21\u5757\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 createPool\u65b9\u6cd5\u6765\u521b\u5efa\u8fde\u63a5\u6c60\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a var pool = mysql.createPool(options); options \u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u4e2d\u6709\u5f88\u591a\u5c5e\u6027\u914d\u7f6e\uff0c\u8be5\u5bf9\u8c61\u7684\u4f5c\u7528\u662f\u7528\u4e8e\u6307\u5b9a\u8be5\u8fde\u63a5\u6c60\u4e2d\u94fe\u63a5\u7684\u7edf\u4e00\u4f7f\u7528\u7684\u5404\u79cd\u9009\u9879\u3002 \u5e38\u89c1\u7684\u9009\u9879\u5982\u4e0b\uff1a connectionLimit: \u7528\u4e8e\u6307\u5b9a\u8fde\u63a5\u6c60\u4e2d\u6700\u5927\u7684\u94fe\u63a5\u6570\uff0c\u9ed8\u8ba4\u5c5e\u6027\u503c\u4e3a10. queueLimit: \u7528\u4e8e\u6307\u5b9a\u5141\u8bb8\u6302\u8d77\u7684\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5982\u679c\u6302\u8d77\u7684\u8fde\u63a5\u6570\u8d85\u8fc7\u8be5\u6570\u503c\uff0c\u5c31\u4f1a\u7acb\u5373\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\uff0c\u9ed8\u8ba4\u5c5e\u6027\u503c\u4e3a0.\u4ee3\u8868\u4e0d\u5141\u8bb8\u88ab\u6302\u8d77\u7684\u6700\u5927\u8fde\u63a5\u6570\u3002 \u5728\u5982\u4e0a\u5efa\u7acb\u8fde\u63a5\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 getConnection \u65b9\u6cd5\u4ece\u8fde\u63a5\u6c60\u4e2d\u83b7\u53d6\u4e00\u4e2a\u8fde\u63a5\u3002\u8be5\u65b9\u6cd5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\uff1a pool.getConnection(callback); getConnection \u65b9\u6cd5\u8c03\u7528\u540e\uff0c\u5b83\u6709\u4e00\u4e2a\u53c2\u6570callback\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u56de\u8c03\u51fd\u6570\u4e5f\u6709\u4e8c\u4e2a\u53c2\u6570\uff0c\u5982\u4e0b\u6240\u793a\uff1a function(err, connection) { } err\uff1a \u8be5\u53c2\u6570\u662f\u6307\u64cd\u4f5c\u5931\u8d25\u65f6\u7684\u9519\u8bef\u5bf9\u8c61\u3002 connection: \u8be5\u503c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4ee3\u8868\u83b7\u53d6\u5230\u7684\u8fde\u63a5\u5bf9\u8c61\u3002\u5f53\u8fde\u63a5\u5931\u8d25\u65f6\uff0c\u8be5\u503c\u4e3aundefined\u3002 \u5f53\u8fde\u63a5\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8be5\u8fde\u63a5\u5bf9\u8c61\u7684 release \u65b9\u6cd5\u6765\u5f52\u8fd8\u5230\u8fde\u63a5\u6c60\u4e2d\u3002\u8be5\u65b9\u6cd5\u4f7f\u7528\u5982\u4e0b\uff1a connection.release(); \u5f53\u8fde\u63a5\u4e0d\u9700\u8981\u4f7f\u7528\u4e14\u9700\u8981\u4ece\u8fde\u63a5\u6c60\u4e2d\u79fb\u9664\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528destory\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\uff1a connection.destory(); \u5f53\u8fde\u63a5\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5173\u95ed\u8be5\u8fde\u63a5\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a pool.end(); \u4e0b\u9762\u6211\u4eec\u6765\u505a\u4e00\u4e2a\u4f7f\u7528\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u505a\u4e00\u4e2ademo\u5982\u4e0b\u6240\u793a\uff1a const mysql = require('mysql'); // \u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u6c60 const pool = mysql.createPool({ host: 'localhost', port: 3306, database: 'my_db', user: 'root', password: '123456' }); // \u4ece\u8fde\u63a5\u6c60\u4e2d\u83b7\u53d6\u4e00\u4e2a\u8fde\u63a5 pool.getConnection((err, conn) => { if (err) { console.log('\u548cmysql\u6570\u636e\u5e93\u5efa\u7acb\u8fde\u63a5\u5931\u8d25'); } else { console.log('\u548cmysql\u6570\u636e\u5e93\u8fde\u63a5\u6210\u529f'); conn.query('select * from user', (err2, res) => { if (err2) { console.log('\u67e5\u8be2\u6570\u636e\u5e93\u5931\u8d25'); } else { console.log(res); pool.end(); } }) } }); \u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"nodeJS+mysql+\u8fde\u63a5\u6c60"},{"location":"nodejs/nodeJS%2Bmysql%2B%E8%BF%9E%E6%8E%A5%E6%B1%A0/#nodejsmysql","text":"","title":"nodeJS+mysql+\u8fde\u63a5\u6c60"},{"location":"nodejs/nodeJS%2Bmysql%2B%E8%BF%9E%E6%8E%A5%E6%B1%A0/#nodejsmysql_1","text":"","title":"nodejs\u7684mysql\u6a21\u5757\u5b66\u4e60(\u516d)\u8fde\u63a5\u6c60\u7684\u521b\u5efa\u548c\u4f7f\u7528"},{"location":"nodejs/nodeJS%2Bmysql%2B%E8%BF%9E%E6%8E%A5%E6%B1%A0/#_1","text":"\u5728 \u8f6f\u4ef6\u5de5\u7a0b \uff0c \u8fde\u63a5\u6c60 \u662f\u4e00\u4e2a \u9ad8\u901f\u7f13\u5b58 \u7684 \u6570\u636e\u5e93\u8fde\u63a5 \u7ef4\u6301\uff0c\u4f7f\u5f97\u8fde\u63a5\u53ef\u4ee5\u5f53\u9700\u8981\u5c06\u6765\u5411\u6570\u636e\u5e93\u8bf7\u6c42\u91cd\u590d\u4f7f\u7528\u3002 [ \u6765\u6e90\u8bf7\u6c42 ] \u8fde\u63a5\u6c60\u7528\u4e8e\u63d0\u9ad8\u6570\u636e\u5e93\u4e0a\u6267\u884c\u547d\u4ee4\u7684\u6027\u80fd\u3002 \u6253\u5f00\u5e76\u4fdd\u6301\u6bcf\u4e2a\u7528\u6237\u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u7279\u522b\u8bf7\u6c42\u5230\u52a8\u6001\u6570\u636e\u5e93\u9a71\u52a8\u7684\u5236\u6210 \u7f51\u7ad9 \u5e94\u7528\uff0c\u662f\u6602\u8d35\u7684\u548c\u6d6a\u8d39\u8d44\u6e90\u3002 \u5728\u8fde\u63a5\u6c60\u4e2d\uff0c\u5728\u521b\u5efa\u8fde\u63a5\u4e4b\u540e\uff0c\u5b83\u88ab\u653e\u7f6e\u5728\u6c60\u4e2d\uff0c\u5e76\u4e14\u5b83\u88ab\u518d\u6b21\u4f7f\u7528\uff0c\u4f7f\u5f97\u4e0d\u5fc5\u5efa\u7acb\u65b0\u7684\u8fde\u63a5\u3002 \u5982\u679c\u6b63\u5728\u4f7f\u7528\u6240\u6709\u8fde\u63a5\uff0c\u5219\u4f1a\u521b\u5efa\u4e00\u4e2a\u65b0\u8fde\u63a5\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u6c60\u4e2d\u3002 \u8fde\u63a5\u6c60\u4e5f\u51cf\u5c11\u4e86\u7528\u6237\u5fc5\u987b\u7b49\u5f85\u5efa\u7acb\u5230\u6570\u636e\u5e93\u7684\u8fde\u63a5\u7684\u65f6\u95f4\u91cf\u3002","title":"\u4ecb\u7ecd"},{"location":"nodejs/nodeJS%2Bmysql%2B%E8%BF%9E%E6%8E%A5%E6%B1%A0/#_2","text":"\u521b\u5efa\u8fde\u63a5\u6c60 \u521b\u5efa\u8fde\u63a5\u6c60\u7684\u914d\u7f6e\u65b9\u5f0f\u548c\u521b\u5efa\u8fde\u63a5\u7684\u65b9\u5f0f\u76f8\u540c \u4f46\u662f\u4e5f\u6709\u51e0\u4e2a \u72ec\u6709\u7684\u914d\u7f6e \u5176\u4ed6\u914d\u7f6e acquireTimeout : \u83b7\u53d6\u8fde\u63a5\u65f6\u7684\u8d85\u65f6\u914d\u7f6e \u9ed8\u8ba410000 waitForConnection : \u5728\u8fde\u63a5\u6c60\u7684\u6240\u6709\u8fde\u63a5\u6ca1\u6709\u53ef\u7528\u7684\u65f6\u5019\uff0c\u5982\u679c \u662ftrue \u5c31\u8ba9\u7533\u8bf7\u8fde\u63a5\u7684\u6392\u961f\u7b49\u5f85 \uff0c \u5982\u679cfalse \u5219\u8fd4\u56de\u4e00\u4e2a\u9519\u8bef\uff0c\u9ed8\u8ba4 true connectionLimit : \u4e00\u6b21\u6027\u5efa\u7acb\u7684\u6700\u5927\u8fde\u63a5\u6570\u76ee \u9ed8\u8ba4\u4e3a 10 queueLimit: \u8fde\u63a5\u6c60\u7684\u6700\u5927\u6392\u961f\u6570\u76ee \u8d85\u51fa\u62a5\u9519 \u5982\u679c\u4e3a0\uff0c\u5219\u6ca1\u6709\u9650\u5236\u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a0 \u521b\u5efa\u8fde\u63a5\u6c60\u4ee3\u7801 var mysql = require ( 'mysql' ); var pool = mysql = createPool ({ //\u521b\u5efa\u8fde\u63a5\u6c60 host : 'localhost' , user : 'we' , password : 'pass' , database : 'db' }) \u83b7\u53d6\u8fde\u63a5 pool . getConnection ( function ( err , connection ){ connection . query ( sql , function ( err , rows ){ //\u6267\u884csql\u8bed\u53e5 connection . release (); //\u5c06\u8fde\u63a5\u8fd4\u56de\u8fde\u63a5\u6c60 //\u505a\u4e9b\u4ec0\u4e48 }) }) \u5c06\u8fde\u63a5\u91ca\u653e\u4f1a\u8fde\u63a5\u6c60 connection.release(); \u5f7b\u5e95\u4ece\u8fde\u63a5\u6c60\u91cc\u5220\u9664\u4e00\u4e2a\u8fde\u63a5 connection.destroy();","title":"\u8be5\u7ec4\u4ef6\u4e5f\u63d0\u4f9b\u4e86\u521b\u5efa\u8fde\u63a5\u6c60\u7684\u65b9\u6cd5"},{"location":"nodejs/nodeJS%2Bmysql%2B%E8%BF%9E%E6%8E%A5%E6%B1%A0/#nodemysql","text":"2019-04-26 21:27 \u9f99\u60690707 \u9605\u8bfb(762) \u8bc4\u8bba(0) \u7f16\u8f91 \u6536\u85cf 1. \u4ec0\u4e48\u662f\u6570\u636e\u5e93\u8fde\u63a5\u6c60\uff1f \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u662f\u7a0b\u5e8f\u542f\u52a8\u65f6\u5efa\u7acb\u8db3\u591f\u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u5e76\u5c06\u8fd9\u4e9b\u8fde\u63a5\u7ec4\u6210\u4e00\u4e2a\u6c60\uff0c\u7531\u7a0b\u5e8f\u52a8\u6001\u5730\u5bf9\u6c60\u4e2d\u7684\u8fde\u63a5\u8fdb\u884c\u7533\u8bf7\uff0c\u4f7f\u7528\u548c\u91ca\u653e\u3002 2. \u4f7f\u7528\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u539f\u7406\u53ca\u4f18\u70b9\u662f\u4ec0\u4e48\uff1f \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u5728\u521d\u59cb\u5316\u65f6\u5c06\u4f1a\u521b\u5efa\u4e00\u5b9a\u6570\u91cf\u7684\u6570\u636e\u5e93\u8fde\u63a5\u653e\u5230\u8fde\u63a5\u6c60\u4e2d\uff0c\u8fde\u63a5\u6c60\u90fd\u5c06\u4e00\u76f4\u4fdd\u8bc1\u81f3\u5c11\u62e5\u6709\u8fd9\u4e48\u591a\u7684\u8fde\u63a5\u6570\u91cf\uff0c\u5f53\u6709\u6570\u636e\u5e93\u9700\u8981\u88ab\u8fde\u63a5\u7684\u65f6\u5019\uff0c\u5b83\u4f1a\u5411\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7533\u8bf7\u8d44\u6e90\u548c\u4f7f\u7528\uff0c\u4f7f\u7528\u5b8c\u6210\u540e\u4f1a\u91ca\u653e\u5230\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u4e2d\u3002\u5f53\u7136\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u4e2d\u62e5\u6709\u6700\u5c0f\u8fde\u63a5\u6570\u91cf\u548c\u6700\u5927\u8fde\u63a5\u6570\u91cf\uff0c\u5f53\u6570\u636e\u5e93\u7684\u8fde\u63a5\u8d85\u8fc7\u8fde\u63a5\u6c60\u4e2d\u6700\u5927\u7684\u6570\u91cf\u7684\u65f6\u5019\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u5c06\u88ab\u52a0\u5165\u5230\u7b49\u5f85\u961f\u5217\u4e2d\u3002 \u5176\u5b9e\u4ed6\u4eec\u7684\u539f\u7406\u5c31\u597d\u6bd4\u6211\u4eec\u516c\u53f8\u7684\u62db\u8058\u524d\u7aef\u5f00\u53d1\u4e00\u6837\uff0c\u5f53\u6709A\u9879\u76ee\u7684\u65f6\u5019\uff0c\u6211\u4eec\u516c\u53f8\u9700\u8981\u62db\u8058\u4e00\u4e2a\u524d\u7aef\u5f00\u53d1\u53bb\u505a\u9879\u76ee\uff0c\u4f46\u662f\u5f53\u516c\u53f8\u6709B\u3001C\u3001D\u3001\u7b49\u9879\u76ee\u7684\u65f6\u5019\uff0c\u6216\u8005\u5f88\u591a\u9879\u76ee\u7684\u65f6\u5019\u9700\u8981\u4e0d\u65ad\u7684\u62db\u8058\u524d\u7aef\u5f00\u53d1\uff0c\u90a3\u4e48\u8fd9\u6837\u4f1a\u7ed9\u516c\u53f8\u5e26\u6765\u5f88\u591a\u4eba\u529b\u6210\u672c\u7684\u3002\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u524d\u7aef\u4e3b\u7ba1\u6765\u7ba1\u7406\u8fd9\u4e9b\u524d\u7aef\u8d44\u6e90\u3002\u524d\u7aef\u4e3b\u7ba1\u624b\u4e0b\u5047\u5982\u67095\u4e2a\u524d\u7aef\u5f00\u53d1\uff0c\u90a3\u4e48\u5f53A\u3001B\u3001C\u3001D\u3001E\u3001\u9879\u76ee\u6765\u7684\u65f6\u5019\uff0c\u524d\u7aef\u4e3b\u7ba1\u4f1a\u4f9d\u6b21\u628a\u8fd9\u4e9b\u9879\u76ee\u5206\u914d\u7ed9\u5bf9\u5e94\u7684\u5f00\u53d1\u4eba\u5458\u53bb\u8ddf\u8fdb\u3002\u4f46\u662f\u5f53\u8fd8\u6709F\u7b49\u9879\u76ee\u7684\u65f6\u5019\uff0c\u56e0\u4e3aF\u9879\u76ee\u5df2\u7ecf\u8d85\u8fc7\u524d\u7aef\u4eba\u5458\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4eba\u518d\u53bb\u652f\u6301\u8fd9\u4e9b\u4e2a\u9879\u76ee\uff0c\u56e0\u6b64\u8fd9\u4e9b\u9879\u76ee\u9700\u8981\u6392\u671f\uff0c\u7b49A\u3001B\u3001C\u3001D\u3001E \u5176\u4e2d\u4efb\u4f55\u4e00\u4e2a\u5f00\u53d1\u5b8c\u6210\u540e\uff0c\u4e0a\u7ebf\u4e86\uff0c\u7136\u540e\u8fd9\u4e9b\u5f00\u53d1\u4eba\u5458\u5c31\u548c\u6570\u636e\u5e93\u4e00\u6837\u91ca\u653e\u8d44\u6e90\uff0c\u8fd4\u56de\u5230\u524d\u7aef\u7ec4\u6765\uff0c\u7136\u540e\u524d\u7aef\u4e3b\u7ba1\u518d\u628aF\u9879\u76ee\u5206\u914d\u5230\u5bf9\u5e94\u7684\u5f00\u53d1\u4eba\u5458\u3002\u8fd9\u4e2a\u6bd4\u65b9\u5c31\u597d\u6bd4\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u4e86\u3002\u800c\u4e0d\u662f\u6709n\u4e2a\u9879\u76ee\u9700\u8981\u62db\u8058n\u4e2a\u524d\u7aef\u5f00\u53d1\u6765\u505a\u9879\u76ee\uff0c\u90a3\u8fd9\u6837\u7684\u7f3a\u70b9\u662f\u516c\u53f8\u7684\u4eba\u529b\u6210\u672c\u4f1a\u5927\u5927\u7684\u589e\u52a0\u3002\u6240\u4ee5\u6570\u636e\u5e93\u7684\u94fe\u63a5\u6c60\u4e5f\u662f\u8fd9\u4e2a\u610f\u601d\uff0c\u5f53\u7f51\u7ad9\u67d0\u4e00\u5929\u6709\u5f88\u5927\u7684\u6d41\u91cf\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u670d\u52a1\u5668\u9700\u8981\u4e3a\u6bcf\u6b21\u94fe\u63a5\u521b\u5efa\u4e00\u6b21\u6570\u636e\u5e93\u94fe\u63a5\u3002\u8fd9\u6837\u5c31\u5f88\u6d6a\u8d39\u6570\u636e\u5e93\u7684\u8d44\u6e90\uff0c\u5e76\u4e14\u9891\u7e41\u7684\u521b\u5efa\u548c\u5173\u95ed\u6570\u636e\u5e93\u7684\u94fe\u63a5\uff0c\u5f88\u5bb9\u6613\u5bfc\u81f4\u670d\u52a1\u5668\u5185\u5b58\u6ea2\u51fa\u7b49\u60c5\u51b5\u53d1\u751f\u3002 \u8fde\u63a5\u6c60\u7684\u4f5c\u7528\u662f\uff1a\u6570\u636e\u5e93\u7684\u8fde\u63a5\u6c60\u8d1f\u8d23\u5206\u914d\uff0c\u7ba1\u7406\u548c\u91ca\u653e\u6570\u636e\u5e93\u94fe\u63a5\u7684\u3002\u5b83\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u91cd\u590d\u4f7f\u7528\u4e00\u4e2a\u73b0\u6709\u7684\u6570\u636e\u5e93\u7684\u94fe\u63a5\u3002\u800c\u4e0d\u662f\u91cd\u65b0\u521b\u5efa\u4e00\u4e2a\u3002 3. \u4f20\u7edf\u7684\u6570\u636e\u5e93\u94fe\u63a5\u548c\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7684\u8fd0\u884c\u673a\u5236\u6709\u5565\u533a\u522b\uff1f \u4f20\u7edf\u7684\u6211\u4eec\u4e00\u822c\u6765java\u6765\u8bf4\uff1ajava\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u8fc7\u7a0b\u4e00\u822c\u662f\u5982\u4e0b\uff1a \\1. \u88c5\u8f7d\u6570\u636e\u5e93\u9a71\u52a8\u7a0b\u5e8f\u3002 \\2. \u901a\u8fc7JDBC\u5efa\u7acb\u6570\u636e\u5e93\u7684\u94fe\u63a5\u3002 \\3. \u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u6267\u884c\u4e00\u4e9bsql\u8bed\u53e5\u3002 \\4. \u65ad\u5f00\u53ca\u5173\u95ed\u6570\u636e\u5e93\u7684\u94fe\u63a5\u3002 \u5982\u4e0a\u662f\u4e00\u822c\u7684java\u8bbf\u95ee\u6570\u636e\u5e93\u94fe\u63a5\u7684\u8fc7\u7a0b\u3002 \u4e0b\u9762\u6211\u4eec\u4f7f\u7528\u6570\u636e\u5e93\u7684\u8fde\u63a5\u6c60\u7684\u64cd\u4f5c\u8fc7\u7a0b\u5982\u4e0b\uff1a \\1. \u7a0b\u5e8f\u521d\u59cb\u5316\u65f6\u521b\u5efa\u8fde\u63a5\u6c60\u3002 \\2. \u4f7f\u7528\u65f6\u5411\u8fde\u63a5\u6c60\u7533\u8bf7\u53ef\u7528\u7684\u8d44\u6e90\u3002 \\3. \u4f7f\u7528\u5b8c\u6bd5\u540e\uff0c\u5c06\u6570\u636e\u5e93\u94fe\u63a5\u8fd4\u56de\u7ed9\u8fde\u63a5\u6c60\u3002 \\4. \u7a0b\u5e8f\u9000\u51fa\u65f6\uff0c\u65ad\u5f00\u6240\u6709\u7684\u94fe\u63a5\uff0c\u5e76\u91ca\u653e\u6570\u636e\u5e93\u7684\u94fe\u63a5\u3002 \u8fd9\u5c31\u662f\u4f20\u7edf\u548c\u8fde\u63a5\u6c60\u7684\u533a\u522b\u3002 node + mysql \u5b9e\u73b0\u6570\u636e\u5e93\u8fde\u63a5\u6c60 \u5728mysql\u6a21\u5757\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 createPool\u65b9\u6cd5\u6765\u521b\u5efa\u8fde\u63a5\u6c60\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\u6240\u793a\uff1a var pool = mysql.createPool(options); options \u53c2\u6570\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u4e2d\u6709\u5f88\u591a\u5c5e\u6027\u914d\u7f6e\uff0c\u8be5\u5bf9\u8c61\u7684\u4f5c\u7528\u662f\u7528\u4e8e\u6307\u5b9a\u8be5\u8fde\u63a5\u6c60\u4e2d\u94fe\u63a5\u7684\u7edf\u4e00\u4f7f\u7528\u7684\u5404\u79cd\u9009\u9879\u3002 \u5e38\u89c1\u7684\u9009\u9879\u5982\u4e0b\uff1a connectionLimit: \u7528\u4e8e\u6307\u5b9a\u8fde\u63a5\u6c60\u4e2d\u6700\u5927\u7684\u94fe\u63a5\u6570\uff0c\u9ed8\u8ba4\u5c5e\u6027\u503c\u4e3a10. queueLimit: \u7528\u4e8e\u6307\u5b9a\u5141\u8bb8\u6302\u8d77\u7684\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5982\u679c\u6302\u8d77\u7684\u8fde\u63a5\u6570\u8d85\u8fc7\u8be5\u6570\u503c\uff0c\u5c31\u4f1a\u7acb\u5373\u629b\u51fa\u4e00\u4e2a\u9519\u8bef\uff0c\u9ed8\u8ba4\u5c5e\u6027\u503c\u4e3a0.\u4ee3\u8868\u4e0d\u5141\u8bb8\u88ab\u6302\u8d77\u7684\u6700\u5927\u8fde\u63a5\u6570\u3002 \u5728\u5982\u4e0a\u5efa\u7acb\u8fde\u63a5\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 getConnection \u65b9\u6cd5\u4ece\u8fde\u63a5\u6c60\u4e2d\u83b7\u53d6\u4e00\u4e2a\u8fde\u63a5\u3002\u8be5\u65b9\u6cd5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\uff1a pool.getConnection(callback); getConnection \u65b9\u6cd5\u8c03\u7528\u540e\uff0c\u5b83\u6709\u4e00\u4e2a\u53c2\u6570callback\u56de\u8c03\u51fd\u6570\uff0c\u8be5\u56de\u8c03\u51fd\u6570\u4e5f\u6709\u4e8c\u4e2a\u53c2\u6570\uff0c\u5982\u4e0b\u6240\u793a\uff1a function(err, connection) { } err\uff1a \u8be5\u53c2\u6570\u662f\u6307\u64cd\u4f5c\u5931\u8d25\u65f6\u7684\u9519\u8bef\u5bf9\u8c61\u3002 connection: \u8be5\u503c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4ee3\u8868\u83b7\u53d6\u5230\u7684\u8fde\u63a5\u5bf9\u8c61\u3002\u5f53\u8fde\u63a5\u5931\u8d25\u65f6\uff0c\u8be5\u503c\u4e3aundefined\u3002 \u5f53\u8fde\u63a5\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8be5\u8fde\u63a5\u5bf9\u8c61\u7684 release \u65b9\u6cd5\u6765\u5f52\u8fd8\u5230\u8fde\u63a5\u6c60\u4e2d\u3002\u8be5\u65b9\u6cd5\u4f7f\u7528\u5982\u4e0b\uff1a connection.release(); \u5f53\u8fde\u63a5\u4e0d\u9700\u8981\u4f7f\u7528\u4e14\u9700\u8981\u4ece\u8fde\u63a5\u6c60\u4e2d\u79fb\u9664\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528destory\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4f7f\u7528\u5982\u4e0b\u6240\u793a\uff1a connection.destory(); \u5f53\u8fde\u63a5\u4e0d\u9700\u8981\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5173\u95ed\u8be5\u8fde\u63a5\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a pool.end(); \u4e0b\u9762\u6211\u4eec\u6765\u505a\u4e00\u4e2a\u4f7f\u7528\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u505a\u4e00\u4e2ademo\u5982\u4e0b\u6240\u793a\uff1a const mysql = require('mysql'); // \u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u6c60 const pool = mysql.createPool({ host: 'localhost', port: 3306, database: 'my_db', user: 'root', password: '123456' }); // \u4ece\u8fde\u63a5\u6c60\u4e2d\u83b7\u53d6\u4e00\u4e2a\u8fde\u63a5 pool.getConnection((err, conn) => { if (err) { console.log('\u548cmysql\u6570\u636e\u5e93\u5efa\u7acb\u8fde\u63a5\u5931\u8d25'); } else { console.log('\u548cmysql\u6570\u636e\u5e93\u8fde\u63a5\u6210\u529f'); conn.query('select * from user', (err2, res) => { if (err2) { console.log('\u67e5\u8be2\u6570\u636e\u5e93\u5931\u8d25'); } else { console.log(res); pool.end(); } }) } }); \u5982\u4e0b\u56fe\u6240\u793a\uff1a","title":"node+mysql \u6570\u636e\u5e93\u8fde\u63a5\u6c60"},{"location":"nodejs/nodejs%20api%E5%AD%A6%E4%B9%A0%EF%BC%9Afs.createReadStreame%28%29/","text":"nodejs api\u5b66\u4e60\uff1afs.createReadStreame() \u00b6 \u4f5c\u7528 \u8fd9\u4e2aapi\u7684\u4f5c\u7528\u662f\u6253\u5f00\u4e00\u4e2a\u53ef\u8bfb\u7684\u6587\u4ef6\u6d41\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2afs.ReadStream\u5bf9\u8c61 \u53c2\u6570 /* createReadStream(path,option):\u8be5\u7528\u6765\u6253\u5f00\u4e00\u4e2a\u53ef\u8bfb\u7684\u6587\u4ef6\u6d41\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2afs.ReadStream\u5bf9\u8c61 @params:path\u6307\u5b9a\u6587\u4ef6\u7684\u8def\u5f84 @params:options\u53ef\u9009,\u662f\u4e00\u4e2aJS\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e9b\u9009\u9879\u5982\uff1a let option={ flags: 'r',//\u6307\u5b9a\u7528\u4ec0\u4e48\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u2019w\u2019\u4ee3\u8868\u5199\uff0c\u2019r\u2019\u4ee3\u8868\u8bfb\uff0c\u7c7b\u4f3c\u7684\u8fd8\u6709\u2019r+\u2019\u3001\u2019w+\u2019\u3001\u2019a\u2019\u7b49 encoding: 'utf8',//\u6307\u5b9a\u6253\u5f00\u6587\u4ef6\u65f6\u4f7f\u7528\u7f16\u7801\u683c\u5f0f\uff0c\u9ed8\u8ba4\u5c31\u662f\u201cutf8\u201d\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4e3a\u5b83\u6307\u5b9a\u201dascii\u201d\u6216\u201dbase64\u201d fd: null,//fd\u5c5e\u6027\u9ed8\u8ba4\u4e3anull\uff0c\u5f53\u4f60\u6307\u5b9a\u4e86\u8fd9\u4e2a\u5c5e\u6027\u65f6\uff0ccreateReadableStream\u4f1a\u6839\u636e\u4f20\u5165\u7684fd\u521b\u5efa\u4e00\u4e2a\u6d41\uff0c\u5ffd\u7565path\u3002\u53e6\u5916\u4f60\u8981\u662f\u60f3\u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\u7684\u7279\u5b9a\u533a\u57df\uff0c\u53ef\u4ee5\u914d\u7f6estart\u3001end\u5c5e\u6027\uff0c\u6307\u5b9a\u8d77\u59cb\u548c\u7ed3\u675f\uff08\u5305\u542b\u5728\u5185\uff09\u7684\u5b57\u8282\u504f\u79fb mode: 0666, autoClose: true//autoClose\u5c5e\u6027\u4e3atrue\uff08\u9ed8\u8ba4\u884c\u4e3a\uff09\u65f6\uff0c\u5f53\u53d1\u751f\u9519\u8bef\u6216\u6587\u4ef6\u8bfb\u53d6\u7ed3\u675f\u65f6\u4f1a\u81ea\u52a8\u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26 } */ \u8fd4\u56de\u5bf9\u8c61 \u65e2\u7136\u5b83\u6709\u8fd4\u56de\u503c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u6211\u4eec\u4e0d\u59a8\u7528\u4e2a\u53d8\u91cf\u6765\u63a5\u6536\u8fd9\u4e2a\u503c\uff0c\u5e76\u6253\u5370\u51fa\u6765\u770b\u770b\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\uff1a \u8fd4\u56de\u5bf9\u8c61\u5305\u542b\u4e00\u5927\u5806\u5c5e\u6027\uff0c\u6709\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u53bb\u6df1\u7a76\u4e00\u4e0b ReadStream { _readableState : ReadableState { objectMode : false , highWaterMark : 65536 , buffer : BufferList { head : null , tail : null , length : 0 }, length : 0 , pipes : null , pipesCount : 0 , flowing : null , ended : false , endEmitted : false , reading : false , sync : true , needReadable : false , emittedReadable : false , readableListening : false , resumeScheduled : false , destroyed : false , defaultEncoding : 'utf8' , awaitDrain : 0 , readingMore : false , decoder : StringDecoder { encoding : 'utf8' , fillLast : [ Function : utf8FillLast ], lastNeed : 0 , lastTotal : 0 , lastChar : < Buffer 00 00 00 00 > }, encoding : 'utf8' }, readable : true , domain : null , _events : { end : [ Function ] }, _eventsCount : 1 , _maxListeners : undefined , path : './test/b.js' , fd : null , flags : 'r' , mode : 438 , start : undefined , end : undefined , autoClose : true , pos : undefined , bytesRead : 0 } \u5e38\u7528\u65b9\u6cd5 \u65e2\u7136\u8be5\u51fd\u6570\u7684\u4f5c\u7528\u662f\u7528\u6765\u6253\u5f00\u4e00\u4e2a\u53ef\u8bfb\u7684\u6587\u4ef6\u6d41\u90a3\u4e48\u6211\u5c31\u901a\u8fc7\u5199\u4e2ademo\u6765\u6d4b\u8bd5\u4e00\u4e0b\u5b83\u7684\u4f5c\u7528\uff0c\u5e76\u8bb2\u8bb2\u8be5\u51fd\u6570\u7684\u5e38\u7528\u65b9\u6cd5 const fs = require ( 'fs' ); const path = require ( 'path' ); let readStream = fs . createReadStream ( './test/b.js' ,{ encoding : 'utf8' }); //console.log(readStream); //\u8bfb\u53d6\u6587\u4ef6\u53d1\u751f\u9519\u8bef\u4e8b\u4ef6 readStream . on ( 'error' , ( err ) => { console . log ( '\u53d1\u751f\u5f02\u5e38:' , err ); }); //\u5df2\u6253\u5f00\u8981\u8bfb\u53d6\u7684\u6587\u4ef6\u4e8b\u4ef6 readStream . on ( 'open' , ( fd ) => { console . log ( '\u6587\u4ef6\u5df2\u6253\u5f00:' , fd ); }); //\u6587\u4ef6\u5df2\u7ecf\u5c31\u4f4d\uff0c\u53ef\u7528\u4e8e\u8bfb\u53d6\u4e8b\u4ef6 readStream . on ( 'ready' , () => { console . log ( '\u6587\u4ef6\u5df2\u51c6\u5907\u597d..' ); }); //\u6587\u4ef6\u8bfb\u53d6\u4e2d\u4e8b\u4ef6\u00b7\u00b7\u00b7\u00b7\u00b7 readStream . on ( 'data' , ( chunk ) => { console . log ( '\u8bfb\u53d6\u6587\u4ef6\u6570\u636e:' , chunk ); }); //\u6587\u4ef6\u8bfb\u53d6\u5b8c\u6210\u4e8b\u4ef6 readStream . on ( 'end' , () => { console . log ( '\u8bfb\u53d6\u5df2\u5b8c\u6210..' ); }); //\u6587\u4ef6\u5df2\u5173\u95ed\u4e8b\u4ef6 readStream . on ( 'close' , () => { console . log ( '\u6587\u4ef6\u5df2\u5173\u95ed\uff01' ); }); \u6548\u679c\uff1a \u63a5\u4e0b\u6765\u6211\u4eec\u968f\u4fbf\u5199\u4e00\u4e2a\u627e\u4e0d\u5230\u7684\u6587\u4ef6\u8def\u5f84\u7528\u6765\u6d4b\u8bd5\u4e00\u4e0berror\u4e8b\u4ef6\uff1a \u8fd4\u56de\u503c\u5982\u4e0b\uff0c\u628aerror\u6253\u5370\u51fa\u6765\u4e86\uff1a","title":"nodejs api\u5b66\u4e60\uff1afs.createReadStreame()"},{"location":"nodejs/nodejs%20api%E5%AD%A6%E4%B9%A0%EF%BC%9Afs.createReadStreame%28%29/#nodejs-apifscreatereadstreame","text":"\u4f5c\u7528 \u8fd9\u4e2aapi\u7684\u4f5c\u7528\u662f\u6253\u5f00\u4e00\u4e2a\u53ef\u8bfb\u7684\u6587\u4ef6\u6d41\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2afs.ReadStream\u5bf9\u8c61 \u53c2\u6570 /* createReadStream(path,option):\u8be5\u7528\u6765\u6253\u5f00\u4e00\u4e2a\u53ef\u8bfb\u7684\u6587\u4ef6\u6d41\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2afs.ReadStream\u5bf9\u8c61 @params:path\u6307\u5b9a\u6587\u4ef6\u7684\u8def\u5f84 @params:options\u53ef\u9009,\u662f\u4e00\u4e2aJS\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e9b\u9009\u9879\u5982\uff1a let option={ flags: 'r',//\u6307\u5b9a\u7528\u4ec0\u4e48\u6a21\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u2019w\u2019\u4ee3\u8868\u5199\uff0c\u2019r\u2019\u4ee3\u8868\u8bfb\uff0c\u7c7b\u4f3c\u7684\u8fd8\u6709\u2019r+\u2019\u3001\u2019w+\u2019\u3001\u2019a\u2019\u7b49 encoding: 'utf8',//\u6307\u5b9a\u6253\u5f00\u6587\u4ef6\u65f6\u4f7f\u7528\u7f16\u7801\u683c\u5f0f\uff0c\u9ed8\u8ba4\u5c31\u662f\u201cutf8\u201d\uff0c\u4f60\u8fd8\u53ef\u4ee5\u4e3a\u5b83\u6307\u5b9a\u201dascii\u201d\u6216\u201dbase64\u201d fd: null,//fd\u5c5e\u6027\u9ed8\u8ba4\u4e3anull\uff0c\u5f53\u4f60\u6307\u5b9a\u4e86\u8fd9\u4e2a\u5c5e\u6027\u65f6\uff0ccreateReadableStream\u4f1a\u6839\u636e\u4f20\u5165\u7684fd\u521b\u5efa\u4e00\u4e2a\u6d41\uff0c\u5ffd\u7565path\u3002\u53e6\u5916\u4f60\u8981\u662f\u60f3\u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\u7684\u7279\u5b9a\u533a\u57df\uff0c\u53ef\u4ee5\u914d\u7f6estart\u3001end\u5c5e\u6027\uff0c\u6307\u5b9a\u8d77\u59cb\u548c\u7ed3\u675f\uff08\u5305\u542b\u5728\u5185\uff09\u7684\u5b57\u8282\u504f\u79fb mode: 0666, autoClose: true//autoClose\u5c5e\u6027\u4e3atrue\uff08\u9ed8\u8ba4\u884c\u4e3a\uff09\u65f6\uff0c\u5f53\u53d1\u751f\u9519\u8bef\u6216\u6587\u4ef6\u8bfb\u53d6\u7ed3\u675f\u65f6\u4f1a\u81ea\u52a8\u5173\u95ed\u6587\u4ef6\u63cf\u8ff0\u7b26 } */ \u8fd4\u56de\u5bf9\u8c61 \u65e2\u7136\u5b83\u6709\u8fd4\u56de\u503c\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u90a3\u6211\u4eec\u4e0d\u59a8\u7528\u4e2a\u53d8\u91cf\u6765\u63a5\u6536\u8fd9\u4e2a\u503c\uff0c\u5e76\u6253\u5370\u51fa\u6765\u770b\u770b\u662f\u4e2a\u4ec0\u4e48\u4e1c\u897f\uff1a \u8fd4\u56de\u5bf9\u8c61\u5305\u542b\u4e00\u5927\u5806\u5c5e\u6027\uff0c\u6709\u5174\u8da3\u7684\u670b\u53cb\u53ef\u4ee5\u53bb\u6df1\u7a76\u4e00\u4e0b ReadStream { _readableState : ReadableState { objectMode : false , highWaterMark : 65536 , buffer : BufferList { head : null , tail : null , length : 0 }, length : 0 , pipes : null , pipesCount : 0 , flowing : null , ended : false , endEmitted : false , reading : false , sync : true , needReadable : false , emittedReadable : false , readableListening : false , resumeScheduled : false , destroyed : false , defaultEncoding : 'utf8' , awaitDrain : 0 , readingMore : false , decoder : StringDecoder { encoding : 'utf8' , fillLast : [ Function : utf8FillLast ], lastNeed : 0 , lastTotal : 0 , lastChar : < Buffer 00 00 00 00 > }, encoding : 'utf8' }, readable : true , domain : null , _events : { end : [ Function ] }, _eventsCount : 1 , _maxListeners : undefined , path : './test/b.js' , fd : null , flags : 'r' , mode : 438 , start : undefined , end : undefined , autoClose : true , pos : undefined , bytesRead : 0 } \u5e38\u7528\u65b9\u6cd5 \u65e2\u7136\u8be5\u51fd\u6570\u7684\u4f5c\u7528\u662f\u7528\u6765\u6253\u5f00\u4e00\u4e2a\u53ef\u8bfb\u7684\u6587\u4ef6\u6d41\u90a3\u4e48\u6211\u5c31\u901a\u8fc7\u5199\u4e2ademo\u6765\u6d4b\u8bd5\u4e00\u4e0b\u5b83\u7684\u4f5c\u7528\uff0c\u5e76\u8bb2\u8bb2\u8be5\u51fd\u6570\u7684\u5e38\u7528\u65b9\u6cd5 const fs = require ( 'fs' ); const path = require ( 'path' ); let readStream = fs . createReadStream ( './test/b.js' ,{ encoding : 'utf8' }); //console.log(readStream); //\u8bfb\u53d6\u6587\u4ef6\u53d1\u751f\u9519\u8bef\u4e8b\u4ef6 readStream . on ( 'error' , ( err ) => { console . log ( '\u53d1\u751f\u5f02\u5e38:' , err ); }); //\u5df2\u6253\u5f00\u8981\u8bfb\u53d6\u7684\u6587\u4ef6\u4e8b\u4ef6 readStream . on ( 'open' , ( fd ) => { console . log ( '\u6587\u4ef6\u5df2\u6253\u5f00:' , fd ); }); //\u6587\u4ef6\u5df2\u7ecf\u5c31\u4f4d\uff0c\u53ef\u7528\u4e8e\u8bfb\u53d6\u4e8b\u4ef6 readStream . on ( 'ready' , () => { console . log ( '\u6587\u4ef6\u5df2\u51c6\u5907\u597d..' ); }); //\u6587\u4ef6\u8bfb\u53d6\u4e2d\u4e8b\u4ef6\u00b7\u00b7\u00b7\u00b7\u00b7 readStream . on ( 'data' , ( chunk ) => { console . log ( '\u8bfb\u53d6\u6587\u4ef6\u6570\u636e:' , chunk ); }); //\u6587\u4ef6\u8bfb\u53d6\u5b8c\u6210\u4e8b\u4ef6 readStream . on ( 'end' , () => { console . log ( '\u8bfb\u53d6\u5df2\u5b8c\u6210..' ); }); //\u6587\u4ef6\u5df2\u5173\u95ed\u4e8b\u4ef6 readStream . on ( 'close' , () => { console . log ( '\u6587\u4ef6\u5df2\u5173\u95ed\uff01' ); }); \u6548\u679c\uff1a \u63a5\u4e0b\u6765\u6211\u4eec\u968f\u4fbf\u5199\u4e00\u4e2a\u627e\u4e0d\u5230\u7684\u6587\u4ef6\u8def\u5f84\u7528\u6765\u6d4b\u8bd5\u4e00\u4e0berror\u4e8b\u4ef6\uff1a \u8fd4\u56de\u503c\u5982\u4e0b\uff0c\u628aerror\u6253\u5370\u51fa\u6765\u4e86\uff1a","title":"nodejs api\u5b66\u4e60\uff1afs.createReadStreame()"},{"location":"nodejs/node%E5%AE%9A%E6%97%B6%E5%99%A8/","text":"Node \u5b9a\u65f6\u5668\u8be6\u89e3 \u00b6 JavaScript \u662f\u5355\u7ebf\u7a0b\u8fd0\u884c\uff0c\u5f02\u6b65\u64cd\u4f5c\u7279\u522b\u91cd\u8981\u3002 \u53ea\u8981\u7528\u5230\u5f15\u64ce\u4e4b\u5916\u7684\u529f\u80fd\uff0c\u5c31\u9700\u8981\u8ddf\u5916\u90e8\u4ea4\u4e92\uff0c\u4ece\u800c\u5f62\u6210\u5f02\u6b65\u64cd\u4f5c\u3002\u7531\u4e8e\u5f02\u6b65\u64cd\u4f5c\u5b9e\u5728\u592a\u591a\uff0cJavaScript \u4e0d\u5f97\u4e0d\u63d0\u4f9b\u5f88\u591a\u5f02\u6b65\u8bed\u6cd5\u3002\u8fd9\u5c31\u597d\u6bd4\uff0c\u6709\u4e9b\u4eba\u8001\u662f\u53d7\u6253\u51fb\uff0c \u4ed6\u7684\u6297\u6253\u51fb\u80fd\u529b\u5fc5\u987b\u53d8\u5f97\u5f88\u5f3a\uff0c\u5426\u5219\u4ed6\u5c31\u5b8c\u86cb\u4e86\u3002 Node \u7684\u5f02\u6b65\u8bed\u6cd5\u6bd4\u6d4f\u89c8\u5668\u66f4\u590d\u6742\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u8ddf\u5185\u6838\u5bf9\u8bdd\uff0c\u4e0d\u5f97\u4e0d\u641e\u4e86\u4e00\u4e2a\u4e13\u95e8\u7684\u5e93 libuv \u505a\u8fd9\u4ef6\u4e8b\u3002\u8fd9\u4e2a\u5e93\u8d1f\u8d23\u5404\u79cd\u56de\u8c03\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\uff0c\u6bd5\u7adf\u5f02\u6b65\u4efb\u52a1\u6700\u540e\u8fd8\u662f\u8981\u56de\u5230\u4e3b\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u4e2a\u6392\u961f\u6267\u884c\u3002 \u4e3a\u4e86\u534f\u8c03\u5f02\u6b65\u4efb\u52a1\uff0cNode \u5c45\u7136\u63d0\u4f9b\u4e86\u56db\u4e2a\u5b9a\u65f6\u5668\uff0c\u8ba9\u4efb\u52a1\u53ef\u4ee5\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u8fd0\u884c\u3002 setTimeout() setInterval() setImmediate() process.nextTick() \u524d\u4e24\u4e2a\u662f\u8bed\u8a00\u7684\u6807\u51c6\uff0c\u540e\u4e24\u4e2a\u662f Node \u72ec\u6709\u7684\u3002\u5b83\u4eec\u7684\u5199\u6cd5\u5dee\u4e0d\u591a\uff0c\u4f5c\u7528\u4e5f\u5dee\u4e0d\u591a\uff0c\u4e0d\u592a\u5bb9\u6613\u533a\u522b\u3002 \u4f60\u80fd\u8bf4\u51fa\u4e0b\u9762\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u5417\uff1f // test.js setTimeout (() => console . log ( 1 )); setImmediate (() => console . log ( 2 )); process . nextTick (() => console . log ( 3 )); Promise . resolve (). then (() => console . log ( 4 )); (() => console . log ( 5 ))(); \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u3002 $ node test.js 5 3 4 1 2 \u5982\u679c\u4f60\u80fd\u4e00\u53e3\u8bf4\u5bf9\uff0c\u53ef\u80fd\u5c31\u4e0d\u9700\u8981\u518d\u770b\u4e0b\u53bb\u4e86\u3002\u672c\u6587\u8be6\u7ec6\u89e3\u91ca\uff0cNode \u600e\u4e48\u5904\u7406\u5404\u79cd\u5b9a\u65f6\u5668\uff0c\u6216\u8005\u66f4\u5e7f\u4e49\u5730\u8bf4\uff0clibuv \u5e93\u600e\u4e48\u5b89\u6392\u5f02\u6b65\u4efb\u52a1\u5728\u4e3b\u7ebf\u7a0b\u4e0a\u6267\u884c\u3002 \u4e00\u3001\u540c\u6b65\u4efb\u52a1\u548c\u5f02\u6b65\u4efb\u52a1 \u00b6 \u9996\u5148\uff0c\u540c\u6b65\u4efb\u52a1\u603b\u662f\u6bd4\u5f02\u6b65\u4efb\u52a1\u66f4\u65e9\u6267\u884c\u3002 \u524d\u9762\u7684\u90a3\u6bb5\u4ee3\u7801\uff0c\u53ea\u6709\u6700\u540e\u4e00\u884c\u662f\u540c\u6b65\u4efb\u52a1\uff0c\u56e0\u6b64\u6700\u65e9\u6267\u884c\u3002 (() => console . log ( 5 ))(); \u4e8c\u3001\u672c\u8f6e\u5faa\u73af\u548c\u6b21\u8f6e\u5faa\u73af \u00b6 \u5f02\u6b65\u4efb\u52a1\u53ef\u4ee5\u5206\u6210\u4e24\u79cd\u3002 \u8ffd\u52a0\u5728**\u672c\u8f6e\u5faa\u73af**\u7684\u5f02\u6b65\u4efb\u52a1 \u8ffd\u52a0\u5728**\u6b21\u8f6e\u5faa\u73af**\u7684\u5f02\u6b65\u4efb\u52a1 \u6240\u8c13\u201c\u5faa\u73af\u201d\uff0c\u6307\u7684\u662f\u4e8b\u4ef6\u5faa\u73af\uff08event loop\uff09\u3002\u8fd9\u662f JavaScript \u5f15\u64ce\u5904\u7406\u5f02\u6b65\u4efb\u52a1\u7684\u65b9\u5f0f\uff0c\u540e\u6587\u4f1a\u8be6\u7ec6\u89e3\u91ca\u3002\u8fd9\u91cc\u53ea\u8981\u7406\u89e3\uff0c\u672c\u8f6e\u5faa\u73af\u4e00\u5b9a\u65e9\u4e8e\u6b21\u8f6e\u5faa\u73af\u6267\u884c\u5373\u53ef\u3002 Node \u89c4\u5b9a\uff0c process.nextTick \u548c Promise \u7684\u56de\u8c03\u51fd\u6570\uff0c\u8ffd\u52a0\u5728\u672c\u8f6e\u5faa\u73af\uff0c\u5373\u540c\u6b65\u4efb\u52a1\u4e00\u65e6\u6267\u884c\u5b8c\u6210\uff0c\u5c31\u5f00\u59cb\u6267\u884c\u5b83\u4eec\u3002\u800c setTimeout \u3001 setInterval \u3001 setImmediate \u7684\u56de\u8c03\u51fd\u6570\uff0c\u8ffd\u52a0\u5728\u6b21\u8f6e\u5faa\u73af\u3002 \u8fd9\u5c31\u662f\u8bf4\uff0c\u6587\u9996\u90a3\u6bb5\u4ee3\u7801\u7684\u7b2c\u4e09\u884c\u548c\u7b2c\u56db\u884c\uff0c\u4e00\u5b9a\u6bd4\u7b2c\u4e00\u884c\u548c\u7b2c\u4e8c\u884c\u66f4\u65e9\u6267\u884c\u3002 // \u4e0b\u9762\u4e24\u884c\uff0c\u6b21\u8f6e\u5faa\u73af\u6267\u884c setTimeout (() => console . log ( 1 )); setImmediate (() => console . log ( 2 )); // \u4e0b\u9762\u4e24\u884c\uff0c\u672c\u8f6e\u5faa\u73af\u6267\u884c process . nextTick (() => console . log ( 3 )); Promise . resolve (). then (() => console . log ( 4 )); \u4e09\u3001process.nextTick() \u00b6 process.nextTick \u8fd9\u4e2a\u540d\u5b57\u6709\u70b9\u8bef\u5bfc\uff0c\u5b83\u662f\u5728\u672c\u8f6e\u5faa\u73af\u6267\u884c\u7684\uff0c\u800c\u4e14\u662f\u6240\u6709\u5f02\u6b65\u4efb\u52a1\u91cc\u9762\u6700\u5feb\u6267\u884c\u7684\u3002 Node \u6267\u884c\u5b8c\u6240\u6709\u540c\u6b65\u4efb\u52a1\uff0c\u63a5\u4e0b\u6765\u5c31\u4f1a\u6267\u884c process.nextTick \u7684\u4efb\u52a1\u961f\u5217\u3002\u6240\u4ee5\uff0c\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u662f\u7b2c\u4e8c\u4e2a\u8f93\u51fa\u7ed3\u679c\u3002 process . nextTick (() => console . log ( 3 )); \u57fa\u672c\u4e0a\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u5f02\u6b65\u4efb\u52a1\u5c3d\u53ef\u80fd\u5feb\u5730\u6267\u884c\uff0c\u90a3\u5c31\u4f7f\u7528 process.nextTick \u3002 \u56db\u3001\u5fae\u4efb\u52a1 \u00b6 \u6839\u636e\u8bed\u8a00\u89c4\u683c\uff0c Promise \u5bf9\u8c61\u7684\u56de\u8c03\u51fd\u6570\uff0c\u4f1a\u8fdb\u5165\u5f02\u6b65\u4efb\u52a1\u91cc\u9762\u7684\u201c\u5fae\u4efb\u52a1\u201d\uff08microtask\uff09\u961f\u5217\u3002 \u5fae\u4efb\u52a1\u961f\u5217\u8ffd\u52a0\u5728 process.nextTick \u961f\u5217\u7684\u540e\u9762\uff0c\u4e5f\u5c5e\u4e8e\u672c\u8f6e\u5faa\u73af\u3002\u6240\u4ee5\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u603b\u662f\u5148\u8f93\u51fa 3 \uff0c\u518d\u8f93\u51fa 4 \u3002 process . nextTick (() => console . log ( 3 )); Promise . resolve (). then (() => console . log ( 4 )); // 3 // 4 \u6ce8\u610f\uff0c\u53ea\u6709\u524d\u4e00\u4e2a\u961f\u5217\u5168\u90e8\u6e05\u7a7a\u4ee5\u540e\uff0c\u624d\u4f1a\u6267\u884c\u4e0b\u4e00\u4e2a\u961f\u5217\u3002 process . nextTick (() => console . log ( 1 )); Promise . resolve (). then (() => console . log ( 2 )); process . nextTick (() => console . log ( 3 )); Promise . resolve (). then (() => console . log ( 4 )); // 1 // 3 // 2 // 4 \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u5168\u90e8 process.nextTick \u7684\u56de\u8c03\u51fd\u6570\uff0c\u6267\u884c\u90fd\u4f1a\u65e9\u4e8e Promise \u7684\u3002 \u81f3\u6b64\uff0c\u672c\u8f6e\u5faa\u73af\u7684\u6267\u884c\u987a\u5e8f\u5c31\u8bb2\u5b8c\u4e86\u3002 \u540c\u6b65\u4efb\u52a1 process.nextTick() \u5fae\u4efb\u52a1 \u4e94\u3001\u4e8b\u4ef6\u5faa\u73af\u7684\u6982\u5ff5 \u00b6 \u4e0b\u9762\u5f00\u59cb\u4ecb\u7ecd\u6b21\u8f6e\u5faa\u73af\u7684\u6267\u884c\u987a\u5e8f\uff0c\u8fd9\u5c31\u5fc5\u987b\u7406\u89e3\u4ec0\u4e48\u662f\u4e8b\u4ef6\u5faa\u73af\uff08event loop\uff09\u4e86\u3002 Node \u7684 \u5b98\u65b9\u6587\u6863 \u662f\u8fd9\u6837\u4ecb\u7ecd\u7684\u3002 \"When Node.js starts, it initializes the event loop, processes the provided input script which may make async API calls, schedule timers, or call process.nextTick(), then begins processing the event loop.\" \u8fd9\u6bb5\u8bdd\u5f88\u91cd\u8981\uff0c\u9700\u8981\u4ed4\u7ec6\u8bfb\u3002\u5b83\u8868\u8fbe\u4e86\u4e09\u5c42\u610f\u601d\u3002 \u9996\u5148\uff0c\u6709\u4e9b\u4eba\u4ee5\u4e3a\uff0c\u9664\u4e86\u4e3b\u7ebf\u7a0b\uff0c\u8fd8\u5b58\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u4e8b\u4ef6\u5faa\u73af\u7ebf\u7a0b\u3002\u4e0d\u662f\u8fd9\u6837\u7684\uff0c\u53ea\u6709\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff0c\u4e8b\u4ef6\u5faa\u73af\u662f\u5728\u4e3b\u7ebf\u7a0b\u4e0a\u5b8c\u6210\u7684\u3002 \u5176\u6b21\uff0cNode \u5f00\u59cb\u6267\u884c\u811a\u672c\u65f6\uff0c\u4f1a\u5148\u8fdb\u884c\u4e8b\u4ef6\u5faa\u73af\u7684\u521d\u59cb\u5316\uff0c\u4f46\u662f\u8fd9\u65f6\u4e8b\u4ef6\u5faa\u73af\u8fd8\u6ca1\u6709\u5f00\u59cb\uff0c\u4f1a\u5148\u5b8c\u6210\u4e0b\u9762\u7684\u4e8b\u60c5\u3002 \u540c\u6b65\u4efb\u52a1 \u53d1\u51fa\u5f02\u6b65\u8bf7\u6c42 \u89c4\u5212\u5b9a\u65f6\u5668\u751f\u6548\u7684\u65f6\u95f4 \u6267\u884c process.nextTick() \u7b49\u7b49 \u6700\u540e\uff0c\u4e0a\u9762\u8fd9\u4e9b\u4e8b\u60c5\u90fd\u5e72\u5b8c\u4e86\uff0c\u4e8b\u4ef6\u5faa\u73af\u5c31\u6b63\u5f0f\u5f00\u59cb\u4e86\u3002 \u516d\u3001\u4e8b\u4ef6\u5faa\u73af\u7684\u516d\u4e2a\u9636\u6bb5 \u00b6 \u4e8b\u4ef6\u5faa\u73af\u4f1a\u65e0\u9650\u6b21\u5730\u6267\u884c\uff0c\u4e00\u8f6e\u53c8\u4e00\u8f6e\u3002\u53ea\u6709\u5f02\u6b65\u4efb\u52a1\u7684\u56de\u8c03\u51fd\u6570\u961f\u5217\u6e05\u7a7a\u4e86\uff0c\u624d\u4f1a\u505c\u6b62\u6267\u884c\u3002 \u6bcf\u4e00\u8f6e\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u5206\u6210\u516d\u4e2a\u9636\u6bb5\u3002\u8fd9\u4e9b\u9636\u6bb5\u4f1a\u4f9d\u6b21\u6267\u884c\u3002 timers I/O callbacks idle, prepare poll check close callbacks \u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u4e00\u4e2a\u5148\u8fdb\u5148\u51fa\u7684\u56de\u8c03\u51fd\u6570\u961f\u5217\u3002\u53ea\u6709\u4e00\u4e2a\u9636\u6bb5\u7684\u56de\u8c03\u51fd\u6570\u961f\u5217\u6e05\u7a7a\u4e86\uff0c\u8be5\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570\u90fd\u6267\u884c\u4e86\uff0c\u4e8b\u4ef6\u5faa\u73af\u624d\u4f1a\u8fdb\u5165\u4e0b\u4e00\u4e2a\u9636\u6bb5\u3002 \u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u6bcf\u4e2a\u9636\u6bb5\u7684\u542b\u4e49\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u53ef\u4ee5\u770b \u5b98\u65b9\u6587\u6863 \uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003 libuv \u7684 \u6e90\u7801\u89e3\u8bfb \u3002 \uff081\uff09timers \u8fd9\u4e2a\u662f\u5b9a\u65f6\u5668\u9636\u6bb5\uff0c\u5904\u7406 setTimeout() \u548c setInterval() \u7684\u56de\u8c03\u51fd\u6570\u3002\u8fdb\u5165\u8fd9\u4e2a\u9636\u6bb5\u540e\uff0c\u4e3b\u7ebf\u7a0b\u4f1a\u68c0\u67e5\u4e00\u4e0b\u5f53\u524d\u65f6\u95f4\uff0c\u662f\u5426\u6ee1\u8db3\u5b9a\u65f6\u5668\u7684\u6761\u4ef6\u3002\u5982\u679c\u6ee1\u8db3\u5c31\u6267\u884c\u56de\u8c03\u51fd\u6570\uff0c\u5426\u5219\u5c31\u79bb\u5f00\u8fd9\u4e2a\u9636\u6bb5\u3002 \uff082\uff09I/O callbacks \u9664\u4e86\u4ee5\u4e0b\u64cd\u4f5c\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5176\u4ed6\u7684\u56de\u8c03\u51fd\u6570\u90fd\u5728\u8fd9\u4e2a\u9636\u6bb5\u6267\u884c\u3002 setTimeout() \u548c setInterval() \u7684\u56de\u8c03\u51fd\u6570 setImmediate() \u7684\u56de\u8c03\u51fd\u6570 \u7528\u4e8e\u5173\u95ed\u8bf7\u6c42\u7684\u56de\u8c03\u51fd\u6570\uff0c\u6bd4\u5982 socket.on('close', ...) \uff083\uff09idle, prepare \u8be5\u9636\u6bb5\u53ea\u4f9b libuv \u5185\u90e8\u8c03\u7528\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5ffd\u7565\u3002 \uff084\uff09Poll \u8fd9\u4e2a\u9636\u6bb5\u662f\u8f6e\u8be2\u65f6\u95f4\uff0c\u7528\u4e8e\u7b49\u5f85\u8fd8\u672a\u8fd4\u56de\u7684 I/O \u4e8b\u4ef6\uff0c\u6bd4\u5982\u670d\u52a1\u5668\u7684\u56de\u5e94\u3001\u7528\u6237\u79fb\u52a8\u9f20\u6807\u7b49\u7b49\u3002 \u8fd9\u4e2a\u9636\u6bb5\u7684\u65f6\u95f4\u4f1a\u6bd4\u8f83\u957f\u3002\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u5f02\u6b65\u4efb\u52a1\u8981\u5904\u7406\uff08\u6bd4\u5982\u5230\u671f\u7684\u5b9a\u65f6\u5668\uff09\uff0c\u4f1a\u4e00\u76f4\u505c\u7559\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u7b49\u5f85 I/O \u8bf7\u6c42\u8fd4\u56de\u7ed3\u679c\u3002 \uff085\uff09check \u8be5\u9636\u6bb5\u6267\u884c setImmediate() \u7684\u56de\u8c03\u51fd\u6570\u3002 \uff086\uff09close callbacks \u8be5\u9636\u6bb5\u6267\u884c\u5173\u95ed\u8bf7\u6c42\u7684\u56de\u8c03\u51fd\u6570\uff0c\u6bd4\u5982 socket.on('close', ...) \u3002 \u4e03\u3001\u4e8b\u4ef6\u5faa\u73af\u7684\u793a\u4f8b \u00b6 \u4e0b\u9762\u662f\u6765\u81ea\u5b98\u65b9\u6587\u6863\u7684\u4e00\u4e2a\u793a\u4f8b\u3002 const fs = require ( 'fs' ); const timeoutScheduled = Date . now (); // \u5f02\u6b65\u4efb\u52a1\u4e00\uff1a100ms \u540e\u6267\u884c\u7684\u5b9a\u65f6\u5668 setTimeout (() => { const delay = Date . now () - timeoutScheduled ; console . log ( ` ${ delay } ms` ); }, 100 ); // \u5f02\u6b65\u4efb\u52a1\u4e8c\uff1a\u81f3\u5c11\u9700\u8981 200ms \u7684\u6587\u4ef6\u8bfb\u53d6 fs . readFile ( 'test.js' , () => { const startCallback = Date . now (); while ( Date . now () - startCallback < 200 ) { // \u4ec0\u4e48\u4e5f\u4e0d\u505a } }); \u4e0a\u9762\u4ee3\u7801\u6709\u4e24\u4e2a\u5f02\u6b65\u4efb\u52a1\uff0c\u4e00\u4e2a\u662f 100ms \u540e\u6267\u884c\u7684\u5b9a\u65f6\u5668\uff0c\u4e00\u4e2a\u662f\u81f3\u5c11\u9700\u8981 200ms \u7684\u6587\u4ef6\u8bfb\u53d6\u3002\u8bf7\u95ee\u8fd0\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f \u811a\u672c\u8fdb\u5165\u7b2c\u4e00\u8f6e\u4e8b\u4ef6\u5faa\u73af\u4ee5\u540e\uff0c\u6ca1\u6709\u5230\u671f\u7684\u5b9a\u65f6\u5668\uff0c\u4e5f\u6ca1\u6709\u5df2\u7ecf\u53ef\u4ee5\u6267\u884c\u7684 I/O \u56de\u8c03\u51fd\u6570\uff0c\u6240\u4ee5\u4f1a\u8fdb\u5165 Poll \u9636\u6bb5\uff0c\u7b49\u5f85\u5185\u6838\u8fd4\u56de\u6587\u4ef6\u8bfb\u53d6\u7684\u7ed3\u679c\u3002\u7531\u4e8e\u8bfb\u53d6\u5c0f\u6587\u4ef6\u4e00\u822c\u4e0d\u4f1a\u8d85\u8fc7 100ms\uff0c\u6240\u4ee5\u5728\u5b9a\u65f6\u5668\u5230\u671f\u4e4b\u524d\uff0cPoll \u9636\u6bb5\u5c31\u4f1a\u5f97\u5230\u7ed3\u679c\uff0c\u56e0\u6b64\u5c31\u4f1a\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\u3002 \u7b2c\u4e8c\u8f6e\u4e8b\u4ef6\u5faa\u73af\uff0c\u4f9d\u7136\u6ca1\u6709\u5230\u671f\u7684\u5b9a\u65f6\u5668\uff0c\u4f46\u662f\u5df2\u7ecf\u6709\u4e86\u53ef\u4ee5\u6267\u884c\u7684 I/O \u56de\u8c03\u51fd\u6570\uff0c\u6240\u4ee5\u4f1a\u8fdb\u5165 I/O callbacks \u9636\u6bb5\uff0c\u6267\u884c fs.readFile \u7684\u56de\u8c03\u51fd\u6570\u3002\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u9700\u8981 200ms\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u5b83\u6267\u884c\u5230\u4e00\u534a\u7684\u65f6\u5019\uff0c100ms \u7684\u5b9a\u65f6\u5668\u5c31\u4f1a\u5230\u671f\u3002\u4f46\u662f\uff0c\u5fc5\u987b\u7b49\u5230\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u6267\u884c\u5b8c\uff0c\u624d\u4f1a\u79bb\u5f00\u8fd9\u4e2a\u9636\u6bb5\u3002 \u7b2c\u4e09\u8f6e\u4e8b\u4ef6\u5faa\u73af\uff0c\u5df2\u7ecf\u6709\u4e86\u5230\u671f\u7684\u5b9a\u65f6\u5668\uff0c\u6240\u4ee5\u4f1a\u5728 timers \u9636\u6bb5\u6267\u884c\u5b9a\u65f6\u5668\u3002\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u5927\u6982\u662f200\u591a\u6beb\u79d2\u3002 \u516b\u3001setTimeout \u548c setImmediate \u00b6 \u7531\u4e8e setTimeout \u5728 timers \u9636\u6bb5\u6267\u884c\uff0c\u800c setImmediate \u5728 check \u9636\u6bb5\u6267\u884c\u3002\u6240\u4ee5\uff0c setTimeout \u4f1a\u65e9\u4e8e setImmediate \u5b8c\u6210\u3002 setTimeout (() => console . log ( 1 )); setImmediate (() => console . log ( 2 )); \u4e0a\u9762\u4ee3\u7801\u5e94\u8be5\u5148\u8f93\u51fa 1 \uff0c\u518d\u8f93\u51fa 2 \uff0c\u4f46\u662f\u5b9e\u9645\u6267\u884c\u7684\u65f6\u5019\uff0c\u7ed3\u679c\u5374\u662f\u4e0d\u786e\u5b9a\uff0c\u6709\u65f6\u8fd8\u4f1a\u5148\u8f93\u51fa 2 \uff0c\u518d\u8f93\u51fa 1 \u3002 \u8fd9\u662f\u56e0\u4e3a setTimeout \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u9ed8\u8ba4\u4e3a 0 \u3002\u4f46\u662f\u5b9e\u9645\u4e0a\uff0cNode \u505a\u4e0d\u52300\u6beb\u79d2\uff0c\u6700\u5c11\u4e5f\u9700\u89811\u6beb\u79d2\uff0c\u6839\u636e \u5b98\u65b9\u6587\u6863 \uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u53d6\u503c\u8303\u56f4\u57281\u6beb\u79d2\u52302147483647\u6beb\u79d2\u4e4b\u95f4\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c setTimeout(f, 0) \u7b49\u540c\u4e8e setTimeout(f, 1) \u3002 \u5b9e\u9645\u6267\u884c\u7684\u65f6\u5019\uff0c\u8fdb\u5165\u4e8b\u4ef6\u5faa\u73af\u4ee5\u540e\uff0c\u6709\u53ef\u80fd\u5230\u4e861\u6beb\u79d2\uff0c\u4e5f\u53ef\u80fd\u8fd8\u6ca1\u52301\u6beb\u79d2\uff0c\u53d6\u51b3\u4e8e\u7cfb\u7edf\u5f53\u65f6\u7684\u72b6\u51b5\u3002\u5982\u679c\u6ca1\u52301\u6beb\u79d2\uff0c\u90a3\u4e48 timers \u9636\u6bb5\u5c31\u4f1a\u8df3\u8fc7\uff0c\u8fdb\u5165 check \u9636\u6bb5\uff0c\u5148\u6267\u884c setImmediate \u7684\u56de\u8c03\u51fd\u6570\u3002 \u4f46\u662f\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e00\u5b9a\u662f\u5148\u8f93\u51fa2\uff0c\u518d\u8f93\u51fa1\u3002 const fs = require ( 'fs' ); fs . readFile ( 'test.js' , () => { setTimeout (() => console . log ( 1 )); setImmediate (() => console . log ( 2 )); }); \u4e0a\u9762\u4ee3\u7801\u4f1a\u5148\u8fdb\u5165 I/O callbacks \u9636\u6bb5\uff0c\u7136\u540e\u662f check \u9636\u6bb5\uff0c\u6700\u540e\u624d\u662f timers \u9636\u6bb5\u3002\u56e0\u6b64\uff0c setImmediate \u624d\u4f1a\u65e9\u4e8e setTimeout \u6267\u884c\u3002 \u4e5d\u3001\u53c2\u8003\u94fe\u63a5 \u00b6 The Node.js Event Loop, Timers, and process.nextTick() , by Node.js Handling IO\u200a\u2014\u200aNodeJS Event Loop , by Deepal Jayasekara setImmediate() vs nextTick() vs setTimeout(fn,0) \u2013 in depth explanation , by Paul Shan Node.js event loop workflow & lifecycle in low level , by Paul Shan \uff08\u5b8c\uff09","title":"node\u5b9a\u65f6\u5668"},{"location":"nodejs/node%E5%AE%9A%E6%97%B6%E5%99%A8/#node","text":"JavaScript \u662f\u5355\u7ebf\u7a0b\u8fd0\u884c\uff0c\u5f02\u6b65\u64cd\u4f5c\u7279\u522b\u91cd\u8981\u3002 \u53ea\u8981\u7528\u5230\u5f15\u64ce\u4e4b\u5916\u7684\u529f\u80fd\uff0c\u5c31\u9700\u8981\u8ddf\u5916\u90e8\u4ea4\u4e92\uff0c\u4ece\u800c\u5f62\u6210\u5f02\u6b65\u64cd\u4f5c\u3002\u7531\u4e8e\u5f02\u6b65\u64cd\u4f5c\u5b9e\u5728\u592a\u591a\uff0cJavaScript \u4e0d\u5f97\u4e0d\u63d0\u4f9b\u5f88\u591a\u5f02\u6b65\u8bed\u6cd5\u3002\u8fd9\u5c31\u597d\u6bd4\uff0c\u6709\u4e9b\u4eba\u8001\u662f\u53d7\u6253\u51fb\uff0c \u4ed6\u7684\u6297\u6253\u51fb\u80fd\u529b\u5fc5\u987b\u53d8\u5f97\u5f88\u5f3a\uff0c\u5426\u5219\u4ed6\u5c31\u5b8c\u86cb\u4e86\u3002 Node \u7684\u5f02\u6b65\u8bed\u6cd5\u6bd4\u6d4f\u89c8\u5668\u66f4\u590d\u6742\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u8ddf\u5185\u6838\u5bf9\u8bdd\uff0c\u4e0d\u5f97\u4e0d\u641e\u4e86\u4e00\u4e2a\u4e13\u95e8\u7684\u5e93 libuv \u505a\u8fd9\u4ef6\u4e8b\u3002\u8fd9\u4e2a\u5e93\u8d1f\u8d23\u5404\u79cd\u56de\u8c03\u51fd\u6570\u7684\u6267\u884c\u65f6\u95f4\uff0c\u6bd5\u7adf\u5f02\u6b65\u4efb\u52a1\u6700\u540e\u8fd8\u662f\u8981\u56de\u5230\u4e3b\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u4e2a\u6392\u961f\u6267\u884c\u3002 \u4e3a\u4e86\u534f\u8c03\u5f02\u6b65\u4efb\u52a1\uff0cNode \u5c45\u7136\u63d0\u4f9b\u4e86\u56db\u4e2a\u5b9a\u65f6\u5668\uff0c\u8ba9\u4efb\u52a1\u53ef\u4ee5\u5728\u6307\u5b9a\u7684\u65f6\u95f4\u8fd0\u884c\u3002 setTimeout() setInterval() setImmediate() process.nextTick() \u524d\u4e24\u4e2a\u662f\u8bed\u8a00\u7684\u6807\u51c6\uff0c\u540e\u4e24\u4e2a\u662f Node \u72ec\u6709\u7684\u3002\u5b83\u4eec\u7684\u5199\u6cd5\u5dee\u4e0d\u591a\uff0c\u4f5c\u7528\u4e5f\u5dee\u4e0d\u591a\uff0c\u4e0d\u592a\u5bb9\u6613\u533a\u522b\u3002 \u4f60\u80fd\u8bf4\u51fa\u4e0b\u9762\u4ee3\u7801\u7684\u8fd0\u884c\u7ed3\u679c\u5417\uff1f // test.js setTimeout (() => console . log ( 1 )); setImmediate (() => console . log ( 2 )); process . nextTick (() => console . log ( 3 )); Promise . resolve (). then (() => console . log ( 4 )); (() => console . log ( 5 ))(); \u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\u3002 $ node test.js 5 3 4 1 2 \u5982\u679c\u4f60\u80fd\u4e00\u53e3\u8bf4\u5bf9\uff0c\u53ef\u80fd\u5c31\u4e0d\u9700\u8981\u518d\u770b\u4e0b\u53bb\u4e86\u3002\u672c\u6587\u8be6\u7ec6\u89e3\u91ca\uff0cNode \u600e\u4e48\u5904\u7406\u5404\u79cd\u5b9a\u65f6\u5668\uff0c\u6216\u8005\u66f4\u5e7f\u4e49\u5730\u8bf4\uff0clibuv \u5e93\u600e\u4e48\u5b89\u6392\u5f02\u6b65\u4efb\u52a1\u5728\u4e3b\u7ebf\u7a0b\u4e0a\u6267\u884c\u3002","title":"Node \u5b9a\u65f6\u5668\u8be6\u89e3"},{"location":"nodejs/node%E5%AE%9A%E6%97%B6%E5%99%A8/#_1","text":"\u9996\u5148\uff0c\u540c\u6b65\u4efb\u52a1\u603b\u662f\u6bd4\u5f02\u6b65\u4efb\u52a1\u66f4\u65e9\u6267\u884c\u3002 \u524d\u9762\u7684\u90a3\u6bb5\u4ee3\u7801\uff0c\u53ea\u6709\u6700\u540e\u4e00\u884c\u662f\u540c\u6b65\u4efb\u52a1\uff0c\u56e0\u6b64\u6700\u65e9\u6267\u884c\u3002 (() => console . log ( 5 ))();","title":"\u4e00\u3001\u540c\u6b65\u4efb\u52a1\u548c\u5f02\u6b65\u4efb\u52a1"},{"location":"nodejs/node%E5%AE%9A%E6%97%B6%E5%99%A8/#_2","text":"\u5f02\u6b65\u4efb\u52a1\u53ef\u4ee5\u5206\u6210\u4e24\u79cd\u3002 \u8ffd\u52a0\u5728**\u672c\u8f6e\u5faa\u73af**\u7684\u5f02\u6b65\u4efb\u52a1 \u8ffd\u52a0\u5728**\u6b21\u8f6e\u5faa\u73af**\u7684\u5f02\u6b65\u4efb\u52a1 \u6240\u8c13\u201c\u5faa\u73af\u201d\uff0c\u6307\u7684\u662f\u4e8b\u4ef6\u5faa\u73af\uff08event loop\uff09\u3002\u8fd9\u662f JavaScript \u5f15\u64ce\u5904\u7406\u5f02\u6b65\u4efb\u52a1\u7684\u65b9\u5f0f\uff0c\u540e\u6587\u4f1a\u8be6\u7ec6\u89e3\u91ca\u3002\u8fd9\u91cc\u53ea\u8981\u7406\u89e3\uff0c\u672c\u8f6e\u5faa\u73af\u4e00\u5b9a\u65e9\u4e8e\u6b21\u8f6e\u5faa\u73af\u6267\u884c\u5373\u53ef\u3002 Node \u89c4\u5b9a\uff0c process.nextTick \u548c Promise \u7684\u56de\u8c03\u51fd\u6570\uff0c\u8ffd\u52a0\u5728\u672c\u8f6e\u5faa\u73af\uff0c\u5373\u540c\u6b65\u4efb\u52a1\u4e00\u65e6\u6267\u884c\u5b8c\u6210\uff0c\u5c31\u5f00\u59cb\u6267\u884c\u5b83\u4eec\u3002\u800c setTimeout \u3001 setInterval \u3001 setImmediate \u7684\u56de\u8c03\u51fd\u6570\uff0c\u8ffd\u52a0\u5728\u6b21\u8f6e\u5faa\u73af\u3002 \u8fd9\u5c31\u662f\u8bf4\uff0c\u6587\u9996\u90a3\u6bb5\u4ee3\u7801\u7684\u7b2c\u4e09\u884c\u548c\u7b2c\u56db\u884c\uff0c\u4e00\u5b9a\u6bd4\u7b2c\u4e00\u884c\u548c\u7b2c\u4e8c\u884c\u66f4\u65e9\u6267\u884c\u3002 // \u4e0b\u9762\u4e24\u884c\uff0c\u6b21\u8f6e\u5faa\u73af\u6267\u884c setTimeout (() => console . log ( 1 )); setImmediate (() => console . log ( 2 )); // \u4e0b\u9762\u4e24\u884c\uff0c\u672c\u8f6e\u5faa\u73af\u6267\u884c process . nextTick (() => console . log ( 3 )); Promise . resolve (). then (() => console . log ( 4 ));","title":"\u4e8c\u3001\u672c\u8f6e\u5faa\u73af\u548c\u6b21\u8f6e\u5faa\u73af"},{"location":"nodejs/node%E5%AE%9A%E6%97%B6%E5%99%A8/#processnexttick","text":"process.nextTick \u8fd9\u4e2a\u540d\u5b57\u6709\u70b9\u8bef\u5bfc\uff0c\u5b83\u662f\u5728\u672c\u8f6e\u5faa\u73af\u6267\u884c\u7684\uff0c\u800c\u4e14\u662f\u6240\u6709\u5f02\u6b65\u4efb\u52a1\u91cc\u9762\u6700\u5feb\u6267\u884c\u7684\u3002 Node \u6267\u884c\u5b8c\u6240\u6709\u540c\u6b65\u4efb\u52a1\uff0c\u63a5\u4e0b\u6765\u5c31\u4f1a\u6267\u884c process.nextTick \u7684\u4efb\u52a1\u961f\u5217\u3002\u6240\u4ee5\uff0c\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u662f\u7b2c\u4e8c\u4e2a\u8f93\u51fa\u7ed3\u679c\u3002 process . nextTick (() => console . log ( 3 )); \u57fa\u672c\u4e0a\uff0c\u5982\u679c\u4f60\u5e0c\u671b\u5f02\u6b65\u4efb\u52a1\u5c3d\u53ef\u80fd\u5feb\u5730\u6267\u884c\uff0c\u90a3\u5c31\u4f7f\u7528 process.nextTick \u3002","title":"\u4e09\u3001process.nextTick()"},{"location":"nodejs/node%E5%AE%9A%E6%97%B6%E5%99%A8/#_3","text":"\u6839\u636e\u8bed\u8a00\u89c4\u683c\uff0c Promise \u5bf9\u8c61\u7684\u56de\u8c03\u51fd\u6570\uff0c\u4f1a\u8fdb\u5165\u5f02\u6b65\u4efb\u52a1\u91cc\u9762\u7684\u201c\u5fae\u4efb\u52a1\u201d\uff08microtask\uff09\u961f\u5217\u3002 \u5fae\u4efb\u52a1\u961f\u5217\u8ffd\u52a0\u5728 process.nextTick \u961f\u5217\u7684\u540e\u9762\uff0c\u4e5f\u5c5e\u4e8e\u672c\u8f6e\u5faa\u73af\u3002\u6240\u4ee5\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u603b\u662f\u5148\u8f93\u51fa 3 \uff0c\u518d\u8f93\u51fa 4 \u3002 process . nextTick (() => console . log ( 3 )); Promise . resolve (). then (() => console . log ( 4 )); // 3 // 4 \u6ce8\u610f\uff0c\u53ea\u6709\u524d\u4e00\u4e2a\u961f\u5217\u5168\u90e8\u6e05\u7a7a\u4ee5\u540e\uff0c\u624d\u4f1a\u6267\u884c\u4e0b\u4e00\u4e2a\u961f\u5217\u3002 process . nextTick (() => console . log ( 1 )); Promise . resolve (). then (() => console . log ( 2 )); process . nextTick (() => console . log ( 3 )); Promise . resolve (). then (() => console . log ( 4 )); // 1 // 3 // 2 // 4 \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u5168\u90e8 process.nextTick \u7684\u56de\u8c03\u51fd\u6570\uff0c\u6267\u884c\u90fd\u4f1a\u65e9\u4e8e Promise \u7684\u3002 \u81f3\u6b64\uff0c\u672c\u8f6e\u5faa\u73af\u7684\u6267\u884c\u987a\u5e8f\u5c31\u8bb2\u5b8c\u4e86\u3002 \u540c\u6b65\u4efb\u52a1 process.nextTick() \u5fae\u4efb\u52a1","title":"\u56db\u3001\u5fae\u4efb\u52a1"},{"location":"nodejs/node%E5%AE%9A%E6%97%B6%E5%99%A8/#_4","text":"\u4e0b\u9762\u5f00\u59cb\u4ecb\u7ecd\u6b21\u8f6e\u5faa\u73af\u7684\u6267\u884c\u987a\u5e8f\uff0c\u8fd9\u5c31\u5fc5\u987b\u7406\u89e3\u4ec0\u4e48\u662f\u4e8b\u4ef6\u5faa\u73af\uff08event loop\uff09\u4e86\u3002 Node \u7684 \u5b98\u65b9\u6587\u6863 \u662f\u8fd9\u6837\u4ecb\u7ecd\u7684\u3002 \"When Node.js starts, it initializes the event loop, processes the provided input script which may make async API calls, schedule timers, or call process.nextTick(), then begins processing the event loop.\" \u8fd9\u6bb5\u8bdd\u5f88\u91cd\u8981\uff0c\u9700\u8981\u4ed4\u7ec6\u8bfb\u3002\u5b83\u8868\u8fbe\u4e86\u4e09\u5c42\u610f\u601d\u3002 \u9996\u5148\uff0c\u6709\u4e9b\u4eba\u4ee5\u4e3a\uff0c\u9664\u4e86\u4e3b\u7ebf\u7a0b\uff0c\u8fd8\u5b58\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u4e8b\u4ef6\u5faa\u73af\u7ebf\u7a0b\u3002\u4e0d\u662f\u8fd9\u6837\u7684\uff0c\u53ea\u6709\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff0c\u4e8b\u4ef6\u5faa\u73af\u662f\u5728\u4e3b\u7ebf\u7a0b\u4e0a\u5b8c\u6210\u7684\u3002 \u5176\u6b21\uff0cNode \u5f00\u59cb\u6267\u884c\u811a\u672c\u65f6\uff0c\u4f1a\u5148\u8fdb\u884c\u4e8b\u4ef6\u5faa\u73af\u7684\u521d\u59cb\u5316\uff0c\u4f46\u662f\u8fd9\u65f6\u4e8b\u4ef6\u5faa\u73af\u8fd8\u6ca1\u6709\u5f00\u59cb\uff0c\u4f1a\u5148\u5b8c\u6210\u4e0b\u9762\u7684\u4e8b\u60c5\u3002 \u540c\u6b65\u4efb\u52a1 \u53d1\u51fa\u5f02\u6b65\u8bf7\u6c42 \u89c4\u5212\u5b9a\u65f6\u5668\u751f\u6548\u7684\u65f6\u95f4 \u6267\u884c process.nextTick() \u7b49\u7b49 \u6700\u540e\uff0c\u4e0a\u9762\u8fd9\u4e9b\u4e8b\u60c5\u90fd\u5e72\u5b8c\u4e86\uff0c\u4e8b\u4ef6\u5faa\u73af\u5c31\u6b63\u5f0f\u5f00\u59cb\u4e86\u3002","title":"\u4e94\u3001\u4e8b\u4ef6\u5faa\u73af\u7684\u6982\u5ff5"},{"location":"nodejs/node%E5%AE%9A%E6%97%B6%E5%99%A8/#_5","text":"\u4e8b\u4ef6\u5faa\u73af\u4f1a\u65e0\u9650\u6b21\u5730\u6267\u884c\uff0c\u4e00\u8f6e\u53c8\u4e00\u8f6e\u3002\u53ea\u6709\u5f02\u6b65\u4efb\u52a1\u7684\u56de\u8c03\u51fd\u6570\u961f\u5217\u6e05\u7a7a\u4e86\uff0c\u624d\u4f1a\u505c\u6b62\u6267\u884c\u3002 \u6bcf\u4e00\u8f6e\u7684\u4e8b\u4ef6\u5faa\u73af\uff0c\u5206\u6210\u516d\u4e2a\u9636\u6bb5\u3002\u8fd9\u4e9b\u9636\u6bb5\u4f1a\u4f9d\u6b21\u6267\u884c\u3002 timers I/O callbacks idle, prepare poll check close callbacks \u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u4e00\u4e2a\u5148\u8fdb\u5148\u51fa\u7684\u56de\u8c03\u51fd\u6570\u961f\u5217\u3002\u53ea\u6709\u4e00\u4e2a\u9636\u6bb5\u7684\u56de\u8c03\u51fd\u6570\u961f\u5217\u6e05\u7a7a\u4e86\uff0c\u8be5\u6267\u884c\u7684\u56de\u8c03\u51fd\u6570\u90fd\u6267\u884c\u4e86\uff0c\u4e8b\u4ef6\u5faa\u73af\u624d\u4f1a\u8fdb\u5165\u4e0b\u4e00\u4e2a\u9636\u6bb5\u3002 \u4e0b\u9762\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u6bcf\u4e2a\u9636\u6bb5\u7684\u542b\u4e49\uff0c\u8be6\u7ec6\u4ecb\u7ecd\u53ef\u4ee5\u770b \u5b98\u65b9\u6587\u6863 \uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003 libuv \u7684 \u6e90\u7801\u89e3\u8bfb \u3002 \uff081\uff09timers \u8fd9\u4e2a\u662f\u5b9a\u65f6\u5668\u9636\u6bb5\uff0c\u5904\u7406 setTimeout() \u548c setInterval() \u7684\u56de\u8c03\u51fd\u6570\u3002\u8fdb\u5165\u8fd9\u4e2a\u9636\u6bb5\u540e\uff0c\u4e3b\u7ebf\u7a0b\u4f1a\u68c0\u67e5\u4e00\u4e0b\u5f53\u524d\u65f6\u95f4\uff0c\u662f\u5426\u6ee1\u8db3\u5b9a\u65f6\u5668\u7684\u6761\u4ef6\u3002\u5982\u679c\u6ee1\u8db3\u5c31\u6267\u884c\u56de\u8c03\u51fd\u6570\uff0c\u5426\u5219\u5c31\u79bb\u5f00\u8fd9\u4e2a\u9636\u6bb5\u3002 \uff082\uff09I/O callbacks \u9664\u4e86\u4ee5\u4e0b\u64cd\u4f5c\u7684\u56de\u8c03\u51fd\u6570\uff0c\u5176\u4ed6\u7684\u56de\u8c03\u51fd\u6570\u90fd\u5728\u8fd9\u4e2a\u9636\u6bb5\u6267\u884c\u3002 setTimeout() \u548c setInterval() \u7684\u56de\u8c03\u51fd\u6570 setImmediate() \u7684\u56de\u8c03\u51fd\u6570 \u7528\u4e8e\u5173\u95ed\u8bf7\u6c42\u7684\u56de\u8c03\u51fd\u6570\uff0c\u6bd4\u5982 socket.on('close', ...) \uff083\uff09idle, prepare \u8be5\u9636\u6bb5\u53ea\u4f9b libuv \u5185\u90e8\u8c03\u7528\uff0c\u8fd9\u91cc\u53ef\u4ee5\u5ffd\u7565\u3002 \uff084\uff09Poll \u8fd9\u4e2a\u9636\u6bb5\u662f\u8f6e\u8be2\u65f6\u95f4\uff0c\u7528\u4e8e\u7b49\u5f85\u8fd8\u672a\u8fd4\u56de\u7684 I/O \u4e8b\u4ef6\uff0c\u6bd4\u5982\u670d\u52a1\u5668\u7684\u56de\u5e94\u3001\u7528\u6237\u79fb\u52a8\u9f20\u6807\u7b49\u7b49\u3002 \u8fd9\u4e2a\u9636\u6bb5\u7684\u65f6\u95f4\u4f1a\u6bd4\u8f83\u957f\u3002\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u5f02\u6b65\u4efb\u52a1\u8981\u5904\u7406\uff08\u6bd4\u5982\u5230\u671f\u7684\u5b9a\u65f6\u5668\uff09\uff0c\u4f1a\u4e00\u76f4\u505c\u7559\u5728\u8fd9\u4e2a\u9636\u6bb5\uff0c\u7b49\u5f85 I/O \u8bf7\u6c42\u8fd4\u56de\u7ed3\u679c\u3002 \uff085\uff09check \u8be5\u9636\u6bb5\u6267\u884c setImmediate() \u7684\u56de\u8c03\u51fd\u6570\u3002 \uff086\uff09close callbacks \u8be5\u9636\u6bb5\u6267\u884c\u5173\u95ed\u8bf7\u6c42\u7684\u56de\u8c03\u51fd\u6570\uff0c\u6bd4\u5982 socket.on('close', ...) \u3002","title":"\u516d\u3001\u4e8b\u4ef6\u5faa\u73af\u7684\u516d\u4e2a\u9636\u6bb5"},{"location":"nodejs/node%E5%AE%9A%E6%97%B6%E5%99%A8/#_6","text":"\u4e0b\u9762\u662f\u6765\u81ea\u5b98\u65b9\u6587\u6863\u7684\u4e00\u4e2a\u793a\u4f8b\u3002 const fs = require ( 'fs' ); const timeoutScheduled = Date . now (); // \u5f02\u6b65\u4efb\u52a1\u4e00\uff1a100ms \u540e\u6267\u884c\u7684\u5b9a\u65f6\u5668 setTimeout (() => { const delay = Date . now () - timeoutScheduled ; console . log ( ` ${ delay } ms` ); }, 100 ); // \u5f02\u6b65\u4efb\u52a1\u4e8c\uff1a\u81f3\u5c11\u9700\u8981 200ms \u7684\u6587\u4ef6\u8bfb\u53d6 fs . readFile ( 'test.js' , () => { const startCallback = Date . now (); while ( Date . now () - startCallback < 200 ) { // \u4ec0\u4e48\u4e5f\u4e0d\u505a } }); \u4e0a\u9762\u4ee3\u7801\u6709\u4e24\u4e2a\u5f02\u6b65\u4efb\u52a1\uff0c\u4e00\u4e2a\u662f 100ms \u540e\u6267\u884c\u7684\u5b9a\u65f6\u5668\uff0c\u4e00\u4e2a\u662f\u81f3\u5c11\u9700\u8981 200ms \u7684\u6587\u4ef6\u8bfb\u53d6\u3002\u8bf7\u95ee\u8fd0\u884c\u7ed3\u679c\u662f\u4ec0\u4e48\uff1f \u811a\u672c\u8fdb\u5165\u7b2c\u4e00\u8f6e\u4e8b\u4ef6\u5faa\u73af\u4ee5\u540e\uff0c\u6ca1\u6709\u5230\u671f\u7684\u5b9a\u65f6\u5668\uff0c\u4e5f\u6ca1\u6709\u5df2\u7ecf\u53ef\u4ee5\u6267\u884c\u7684 I/O \u56de\u8c03\u51fd\u6570\uff0c\u6240\u4ee5\u4f1a\u8fdb\u5165 Poll \u9636\u6bb5\uff0c\u7b49\u5f85\u5185\u6838\u8fd4\u56de\u6587\u4ef6\u8bfb\u53d6\u7684\u7ed3\u679c\u3002\u7531\u4e8e\u8bfb\u53d6\u5c0f\u6587\u4ef6\u4e00\u822c\u4e0d\u4f1a\u8d85\u8fc7 100ms\uff0c\u6240\u4ee5\u5728\u5b9a\u65f6\u5668\u5230\u671f\u4e4b\u524d\uff0cPoll \u9636\u6bb5\u5c31\u4f1a\u5f97\u5230\u7ed3\u679c\uff0c\u56e0\u6b64\u5c31\u4f1a\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c\u3002 \u7b2c\u4e8c\u8f6e\u4e8b\u4ef6\u5faa\u73af\uff0c\u4f9d\u7136\u6ca1\u6709\u5230\u671f\u7684\u5b9a\u65f6\u5668\uff0c\u4f46\u662f\u5df2\u7ecf\u6709\u4e86\u53ef\u4ee5\u6267\u884c\u7684 I/O \u56de\u8c03\u51fd\u6570\uff0c\u6240\u4ee5\u4f1a\u8fdb\u5165 I/O callbacks \u9636\u6bb5\uff0c\u6267\u884c fs.readFile \u7684\u56de\u8c03\u51fd\u6570\u3002\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u9700\u8981 200ms\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u5b83\u6267\u884c\u5230\u4e00\u534a\u7684\u65f6\u5019\uff0c100ms \u7684\u5b9a\u65f6\u5668\u5c31\u4f1a\u5230\u671f\u3002\u4f46\u662f\uff0c\u5fc5\u987b\u7b49\u5230\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u6267\u884c\u5b8c\uff0c\u624d\u4f1a\u79bb\u5f00\u8fd9\u4e2a\u9636\u6bb5\u3002 \u7b2c\u4e09\u8f6e\u4e8b\u4ef6\u5faa\u73af\uff0c\u5df2\u7ecf\u6709\u4e86\u5230\u671f\u7684\u5b9a\u65f6\u5668\uff0c\u6240\u4ee5\u4f1a\u5728 timers \u9636\u6bb5\u6267\u884c\u5b9a\u65f6\u5668\u3002\u6700\u540e\u8f93\u51fa\u7ed3\u679c\u5927\u6982\u662f200\u591a\u6beb\u79d2\u3002","title":"\u4e03\u3001\u4e8b\u4ef6\u5faa\u73af\u7684\u793a\u4f8b"},{"location":"nodejs/node%E5%AE%9A%E6%97%B6%E5%99%A8/#settimeout-setimmediate","text":"\u7531\u4e8e setTimeout \u5728 timers \u9636\u6bb5\u6267\u884c\uff0c\u800c setImmediate \u5728 check \u9636\u6bb5\u6267\u884c\u3002\u6240\u4ee5\uff0c setTimeout \u4f1a\u65e9\u4e8e setImmediate \u5b8c\u6210\u3002 setTimeout (() => console . log ( 1 )); setImmediate (() => console . log ( 2 )); \u4e0a\u9762\u4ee3\u7801\u5e94\u8be5\u5148\u8f93\u51fa 1 \uff0c\u518d\u8f93\u51fa 2 \uff0c\u4f46\u662f\u5b9e\u9645\u6267\u884c\u7684\u65f6\u5019\uff0c\u7ed3\u679c\u5374\u662f\u4e0d\u786e\u5b9a\uff0c\u6709\u65f6\u8fd8\u4f1a\u5148\u8f93\u51fa 2 \uff0c\u518d\u8f93\u51fa 1 \u3002 \u8fd9\u662f\u56e0\u4e3a setTimeout \u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u9ed8\u8ba4\u4e3a 0 \u3002\u4f46\u662f\u5b9e\u9645\u4e0a\uff0cNode \u505a\u4e0d\u52300\u6beb\u79d2\uff0c\u6700\u5c11\u4e5f\u9700\u89811\u6beb\u79d2\uff0c\u6839\u636e \u5b98\u65b9\u6587\u6863 \uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u7684\u53d6\u503c\u8303\u56f4\u57281\u6beb\u79d2\u52302147483647\u6beb\u79d2\u4e4b\u95f4\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c setTimeout(f, 0) \u7b49\u540c\u4e8e setTimeout(f, 1) \u3002 \u5b9e\u9645\u6267\u884c\u7684\u65f6\u5019\uff0c\u8fdb\u5165\u4e8b\u4ef6\u5faa\u73af\u4ee5\u540e\uff0c\u6709\u53ef\u80fd\u5230\u4e861\u6beb\u79d2\uff0c\u4e5f\u53ef\u80fd\u8fd8\u6ca1\u52301\u6beb\u79d2\uff0c\u53d6\u51b3\u4e8e\u7cfb\u7edf\u5f53\u65f6\u7684\u72b6\u51b5\u3002\u5982\u679c\u6ca1\u52301\u6beb\u79d2\uff0c\u90a3\u4e48 timers \u9636\u6bb5\u5c31\u4f1a\u8df3\u8fc7\uff0c\u8fdb\u5165 check \u9636\u6bb5\uff0c\u5148\u6267\u884c setImmediate \u7684\u56de\u8c03\u51fd\u6570\u3002 \u4f46\u662f\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u4e00\u5b9a\u662f\u5148\u8f93\u51fa2\uff0c\u518d\u8f93\u51fa1\u3002 const fs = require ( 'fs' ); fs . readFile ( 'test.js' , () => { setTimeout (() => console . log ( 1 )); setImmediate (() => console . log ( 2 )); }); \u4e0a\u9762\u4ee3\u7801\u4f1a\u5148\u8fdb\u5165 I/O callbacks \u9636\u6bb5\uff0c\u7136\u540e\u662f check \u9636\u6bb5\uff0c\u6700\u540e\u624d\u662f timers \u9636\u6bb5\u3002\u56e0\u6b64\uff0c setImmediate \u624d\u4f1a\u65e9\u4e8e setTimeout \u6267\u884c\u3002","title":"\u516b\u3001setTimeout \u548c setImmediate"},{"location":"nodejs/node%E5%AE%9A%E6%97%B6%E5%99%A8/#_7","text":"The Node.js Event Loop, Timers, and process.nextTick() , by Node.js Handling IO\u200a\u2014\u200aNodeJS Event Loop , by Deepal Jayasekara setImmediate() vs nextTick() vs setTimeout(fn,0) \u2013 in depth explanation , by Paul Shan Node.js event loop workflow & lifecycle in low level , by Paul Shan \uff08\u5b8c\uff09","title":"\u4e5d\u3001\u53c2\u8003\u94fe\u63a5"},{"location":"nodejs/%E4%BD%BF%E7%94%A8nodejs%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/","text":"\u4f7f\u7528nodejs\u8fde\u63a5mysql\u6570\u636e\u5e93\u5b9e\u73b0\u589e\u5220\u6539\u67e5 \u00b6 \u9996\u5148\u8981\u6709\u6570\u636e\u5e93 \u4f7f\u7528xampp \u6216\u8005 phpstudy \u53ef\u4ee5\u50bb\u74dc\u5f0f\u5b89\u88c5 \u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u6587\u4ef6\u5939 \u4e4b\u540e\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u521d\u59cb\u5316package.json (npm init) \u5148\u5728\u9879\u76ee\u4e2d\u5b89\u88c5mysql \u548c express ,\u8fd9\u4e2a\u9879\u76ee\u91cc\u4f7f\u7528express \u56e0\u4e3aexpress\u5b9e\u73b0\u8def\u7531\u6bd4\u8f83\u65b9\u4fbf cnpm install mysql express --save \u5df2\u7ecf\u5b89\u88c5\u597dmysql\u548cexpress \u63a5\u4e0b\u6765\u521b\u5efaapp.js \u5728app.js\u91cc\u5f15\u5165express\u5e76\u5b9e\u4f8b\u5316express\u5bf9\u8c61 \u5728app.js\u91cc\u5f15\u5165mysql \u5f00\u542f\u4e00\u4e2a\u670d\u52a1\u5668 \u63a5\u4e0b\u6765\u521b\u5efa\u8fde\u63a5 \u4f7f\u7528db.connect()\u65b9\u6cd5\u8fde\u63a5 ,\u8fd9\u4e2a\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570 \u6709\u9519\u8bef\u5c31\u62a5\u9519 \u521b\u5efa\u6570\u636e\u5e93 \u5728\u4e00\u4e2a\u8def\u7531\u91cc\u5199sql\u8bed\u53e5 \u4f7f\u7528db.query\u6765\u6267\u884csql\u8bed\u53e5 db.query()\u65b9\u6cd5\u6709\u4e24\u4e2a\u53c2\u6570 ,\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8981\u6267\u884c\u7684\u8bed\u53e5 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e2a\u56de\u8c03\u51fd\u6570 \u56de\u8c03\u51fd\u6570\u91cc\u53ef\u4ee5\u63a5\u6536\u9519\u8bef\u4fe1\u606f,\u4e5f\u6709\u6267\u884c\u540e\u56de\u6765\u7684\u4fe1\u606f \u4f9d\u7136\u662f\u9519\u8bef\u4f18\u5148 \u63a5\u4e0b\u6765\u5728\u6d4f\u89c8\u5668\u91cc\u8bbf\u95ee127.0.0.1:3000/createdb \u9875\u9762\u4e0a\u663e\u793a\u521b\u5efa\u6210\u529f \u6570\u636e\u5e93\u91cc\u5df2\u7ecf\u6709nodemysql\u6570\u636e\u5e93\u4e86 \u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u5728\u914d\u7f6e\u8fde\u63a5\u6570\u636e\u5e93\u91cc\u52a0\u4e0a\u5f53\u524d\u7684\u6570\u636e\u5e93\u4e86 \u521b\u5efa\u8868 \u4e5f\u662f\u5728\u4e00\u4e2a\u8def\u7531\u91cc\u5199sql\u8bed\u53e5 \u7c7b\u578b\u662f int \u6570\u503c AUTO_INCREMENT \u8ba9id \u81ea\u589e, VARCHAR(255) \u5b57\u7b26\u4e32 \u957f\u5ea6255,PRIMARY KEY(ID) \u628aid\u8bbe\u4e3a\u4e3b\u952e \u4f7f\u7528db.query()\u65b9\u6cd5\u6267\u884csql\u8bed\u53e5 \u73b0\u5728\u5728\u6d4f\u89c8\u5668\u91cc\u8bbf\u95ee127.0.0.1:3000/createpoststable \u9875\u9762\u4e0a\u663e\u793a\u521b\u5efa\u6210\u529f \u6570\u636e\u5e93\u91cc\u5df2\u7ecf\u6709posts\u7684\u8868\u4e86 \u63a5\u4e0b\u6765\u5f80\u6570\u636e\u5e93\u8fd9\u4e2a\u8868\u91cc\u63d2\u5165\u5185\u5bb9 \u63d2\u5165\u5185\u5bb9 \u8fd8\u662f\u5728\u4e00\u4e2a\u8def\u7531\u91cc\u64cd\u4f5c \u5199\u4e2a\u95ee\u53f7 \u9632\u6b62sql\u6ce8\u5165 \u4f1a\u5728\u6267\u884c\u65f6\u628apost\u4f20\u8fdbsql\u8bed\u53e5 \u66ff\u6362\u95ee\u53f7 \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee127.0.0.1:3000/addpost1 \u9875\u9762\u4e0a\u663e\u793a\u6210\u529f \u6570\u636e\u5e93\u91cc\u4e5f\u6709\u4e86\u8fd9\u4e00\u6761\u6570\u636e \u67e5\u8be2\u5185\u5bb9 \u67e5\u8be2posts\u8868\u4e2d\u6240\u6709\u6570\u636e \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee 127.0.0.1:3000/getposts \u9875\u9762\u663e\u793a\u67e5\u8be2\u6210\u529f \u6253\u5370\u4e86\u67e5\u8be2\u5230\u7684\u7ed3\u679c \u5982\u679c\u8981\u628a\u67e5\u8be2\u5230\u7684\u5185\u5bb9\u8fd4\u56de\u51fa\u53bb \u4f7f\u7528res.json(result) \u6d4f\u89c8\u5668\u4e2d\u6548\u679c \u63a5\u4e0b\u6765\u67e5\u8be2\u5355\u6761\u5185\u5bb9 \u4f7f\u7528req.params.id\u63a5\u6536\u4f20\u6765\u7684\u53c2\u6570 \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee127.0.0.1:3000/getposts/1 \u9875\u9762\u4e2d\u663e\u793a\u4e86\u67e5\u8be2\u5230\u7684\u5355\u6761\u6570\u636e \u66f4\u65b0\u5185\u5bb9 \u66f4\u65b0\u7684\u662f\u67d0\u4e00\u6761\u5185\u5bb9 \u6240\u4ee5\u8fd8\u7528\u4f20\u53c2\u6570 \u9700\u8981\u6ce8\u610f\u7684\u662f \u8981\u66f4\u65b0\u7684newTitle\u662f\u5b57\u7b26\u4e32 \u6240\u4ee5\u5199sql\u8bed\u53e5\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528\u5355\u5f15\u53f7 \u5f15\u8d77\u6765 ,\u5982\u679c\u662f\u6570\u503c\u5c31\u4e0d\u7528\u4e86. \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee127.0.0.1:3000/updatepost/1 \u9875\u9762\u4e0a\u663e\u793a\u66f4\u65b0\u6210\u529f \u8bbf\u95ee127.0.0.1:3000/getposts/1 \u770b\u770b\u6570\u636e\u6709\u6ca1\u6709\u53d8\u5316 \u6709\u53d8\u5316\u4e86 \u5220\u9664\u5185\u5bb9 \u8fd8\u662f\u5728\u4e00\u4e2a\u8def\u7531\u91cc\u5199\u65b9\u6cd5 \u4f20\u6765\u8981\u5220\u9664\u7684\u53c2\u6570 \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee127.0.0.1:3000/deletepost/1 \u5220\u9664\u7b2c\u4e00\u6761\u6570\u636e \u9875\u9762\u4e0a\u663e\u793a\u5220\u9664\u6210\u529f \u6570\u636e\u5e93\u91cc\u53ea\u6709\u4e00\u6761\u6570\u636e\u4e86 \u81f3\u6b64 \u4f7f\u7528nodejs+express \u8fde\u63a5mysql\u6570\u636e\u5e93 \u589e\u5220\u6539\u67e5 \u5df2\u7ecf\u5168\u90e8\u5b9e\u73b0 \u5bf9\u5e94demo\u94fe\u63a5: http://note.youdao.com/noteshare?id=7c4348713a5b07f47d959b4bc32915b9","title":"\u4f7f\u7528nodejs\u8fde\u63a5mysql\u6570\u636e\u5e93\u5b9e\u73b0\u589e\u5220\u6539\u67e5"},{"location":"nodejs/%E4%BD%BF%E7%94%A8nodejs%E8%BF%9E%E6%8E%A5mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E7%8E%B0%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/#nodejsmysql","text":"\u9996\u5148\u8981\u6709\u6570\u636e\u5e93 \u4f7f\u7528xampp \u6216\u8005 phpstudy \u53ef\u4ee5\u50bb\u74dc\u5f0f\u5b89\u88c5 \u65b0\u5efa\u4e00\u4e2a\u9879\u76ee\u6587\u4ef6\u5939 \u4e4b\u540e\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u521d\u59cb\u5316package.json (npm init) \u5148\u5728\u9879\u76ee\u4e2d\u5b89\u88c5mysql \u548c express ,\u8fd9\u4e2a\u9879\u76ee\u91cc\u4f7f\u7528express \u56e0\u4e3aexpress\u5b9e\u73b0\u8def\u7531\u6bd4\u8f83\u65b9\u4fbf cnpm install mysql express --save \u5df2\u7ecf\u5b89\u88c5\u597dmysql\u548cexpress \u63a5\u4e0b\u6765\u521b\u5efaapp.js \u5728app.js\u91cc\u5f15\u5165express\u5e76\u5b9e\u4f8b\u5316express\u5bf9\u8c61 \u5728app.js\u91cc\u5f15\u5165mysql \u5f00\u542f\u4e00\u4e2a\u670d\u52a1\u5668 \u63a5\u4e0b\u6765\u521b\u5efa\u8fde\u63a5 \u4f7f\u7528db.connect()\u65b9\u6cd5\u8fde\u63a5 ,\u8fd9\u4e2a\u65b9\u6cd5\u63a5\u6536\u4e00\u4e2a\u53c2\u6570 \u6709\u9519\u8bef\u5c31\u62a5\u9519 \u521b\u5efa\u6570\u636e\u5e93 \u5728\u4e00\u4e2a\u8def\u7531\u91cc\u5199sql\u8bed\u53e5 \u4f7f\u7528db.query\u6765\u6267\u884csql\u8bed\u53e5 db.query()\u65b9\u6cd5\u6709\u4e24\u4e2a\u53c2\u6570 ,\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u8981\u6267\u884c\u7684\u8bed\u53e5 \u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u4e2a\u56de\u8c03\u51fd\u6570 \u56de\u8c03\u51fd\u6570\u91cc\u53ef\u4ee5\u63a5\u6536\u9519\u8bef\u4fe1\u606f,\u4e5f\u6709\u6267\u884c\u540e\u56de\u6765\u7684\u4fe1\u606f \u4f9d\u7136\u662f\u9519\u8bef\u4f18\u5148 \u63a5\u4e0b\u6765\u5728\u6d4f\u89c8\u5668\u91cc\u8bbf\u95ee127.0.0.1:3000/createdb \u9875\u9762\u4e0a\u663e\u793a\u521b\u5efa\u6210\u529f \u6570\u636e\u5e93\u91cc\u5df2\u7ecf\u6709nodemysql\u6570\u636e\u5e93\u4e86 \u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u5728\u914d\u7f6e\u8fde\u63a5\u6570\u636e\u5e93\u91cc\u52a0\u4e0a\u5f53\u524d\u7684\u6570\u636e\u5e93\u4e86 \u521b\u5efa\u8868 \u4e5f\u662f\u5728\u4e00\u4e2a\u8def\u7531\u91cc\u5199sql\u8bed\u53e5 \u7c7b\u578b\u662f int \u6570\u503c AUTO_INCREMENT \u8ba9id \u81ea\u589e, VARCHAR(255) \u5b57\u7b26\u4e32 \u957f\u5ea6255,PRIMARY KEY(ID) \u628aid\u8bbe\u4e3a\u4e3b\u952e \u4f7f\u7528db.query()\u65b9\u6cd5\u6267\u884csql\u8bed\u53e5 \u73b0\u5728\u5728\u6d4f\u89c8\u5668\u91cc\u8bbf\u95ee127.0.0.1:3000/createpoststable \u9875\u9762\u4e0a\u663e\u793a\u521b\u5efa\u6210\u529f \u6570\u636e\u5e93\u91cc\u5df2\u7ecf\u6709posts\u7684\u8868\u4e86 \u63a5\u4e0b\u6765\u5f80\u6570\u636e\u5e93\u8fd9\u4e2a\u8868\u91cc\u63d2\u5165\u5185\u5bb9 \u63d2\u5165\u5185\u5bb9 \u8fd8\u662f\u5728\u4e00\u4e2a\u8def\u7531\u91cc\u64cd\u4f5c \u5199\u4e2a\u95ee\u53f7 \u9632\u6b62sql\u6ce8\u5165 \u4f1a\u5728\u6267\u884c\u65f6\u628apost\u4f20\u8fdbsql\u8bed\u53e5 \u66ff\u6362\u95ee\u53f7 \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee127.0.0.1:3000/addpost1 \u9875\u9762\u4e0a\u663e\u793a\u6210\u529f \u6570\u636e\u5e93\u91cc\u4e5f\u6709\u4e86\u8fd9\u4e00\u6761\u6570\u636e \u67e5\u8be2\u5185\u5bb9 \u67e5\u8be2posts\u8868\u4e2d\u6240\u6709\u6570\u636e \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee 127.0.0.1:3000/getposts \u9875\u9762\u663e\u793a\u67e5\u8be2\u6210\u529f \u6253\u5370\u4e86\u67e5\u8be2\u5230\u7684\u7ed3\u679c \u5982\u679c\u8981\u628a\u67e5\u8be2\u5230\u7684\u5185\u5bb9\u8fd4\u56de\u51fa\u53bb \u4f7f\u7528res.json(result) \u6d4f\u89c8\u5668\u4e2d\u6548\u679c \u63a5\u4e0b\u6765\u67e5\u8be2\u5355\u6761\u5185\u5bb9 \u4f7f\u7528req.params.id\u63a5\u6536\u4f20\u6765\u7684\u53c2\u6570 \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee127.0.0.1:3000/getposts/1 \u9875\u9762\u4e2d\u663e\u793a\u4e86\u67e5\u8be2\u5230\u7684\u5355\u6761\u6570\u636e \u66f4\u65b0\u5185\u5bb9 \u66f4\u65b0\u7684\u662f\u67d0\u4e00\u6761\u5185\u5bb9 \u6240\u4ee5\u8fd8\u7528\u4f20\u53c2\u6570 \u9700\u8981\u6ce8\u610f\u7684\u662f \u8981\u66f4\u65b0\u7684newTitle\u662f\u5b57\u7b26\u4e32 \u6240\u4ee5\u5199sql\u8bed\u53e5\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528\u5355\u5f15\u53f7 \u5f15\u8d77\u6765 ,\u5982\u679c\u662f\u6570\u503c\u5c31\u4e0d\u7528\u4e86. \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee127.0.0.1:3000/updatepost/1 \u9875\u9762\u4e0a\u663e\u793a\u66f4\u65b0\u6210\u529f \u8bbf\u95ee127.0.0.1:3000/getposts/1 \u770b\u770b\u6570\u636e\u6709\u6ca1\u6709\u53d8\u5316 \u6709\u53d8\u5316\u4e86 \u5220\u9664\u5185\u5bb9 \u8fd8\u662f\u5728\u4e00\u4e2a\u8def\u7531\u91cc\u5199\u65b9\u6cd5 \u4f20\u6765\u8981\u5220\u9664\u7684\u53c2\u6570 \u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee127.0.0.1:3000/deletepost/1 \u5220\u9664\u7b2c\u4e00\u6761\u6570\u636e \u9875\u9762\u4e0a\u663e\u793a\u5220\u9664\u6210\u529f \u6570\u636e\u5e93\u91cc\u53ea\u6709\u4e00\u6761\u6570\u636e\u4e86 \u81f3\u6b64 \u4f7f\u7528nodejs+express \u8fde\u63a5mysql\u6570\u636e\u5e93 \u589e\u5220\u6539\u67e5 \u5df2\u7ecf\u5168\u90e8\u5b9e\u73b0 \u5bf9\u5e94demo\u94fe\u63a5: http://note.youdao.com/noteshare?id=7c4348713a5b07f47d959b4bc32915b9","title":"\u4f7f\u7528nodejs\u8fde\u63a5mysql\u6570\u636e\u5e93\u5b9e\u73b0\u589e\u5220\u6539\u67e5"},{"location":"nodejs/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84nodeJS/","text":"\u5982\u4f55\u4f7f\u7528 Node.js \u5f00\u53d1\u547d\u4ee4\u884c\u7a0b\u5e8f\uff1f \u00b6 \u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u662f\u5426\u6613\u7528\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u53d6\u51b3\u4e8e\u5f00\u53d1\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684\u80fd\u529b\u3002 Node.js \u4f5c\u4e3a\u76ee\u524d\u6700\u70ed\u95e8\u7684\u5f00\u53d1\u5de5\u5177\u4e4b\u4e00\uff0c\u600e\u6837\u4f7f\u7528\u5b83\u5f00\u53d1\u547d\u4ee4\u884c\u7a0b\u5e8f\uff0c\u662f Web \u5f00\u53d1\u8005\u5e94\u8be5\u638c\u63e1\u7684\u6280\u80fd\u3002 \u6700\u8fd1\uff0cNpm\u7684\u7f51\u5fd7\u6709\u4e00\u7ec4 \u7cfb\u5217\u6587\u7ae0 \uff0c\u6211\u89c9\u5f97\u5199\u5f97\u975e\u5e38\u597d\u3002\u4e0b\u9762\u5c31\u662f\u6211\u5728\u5b83\u7684\u57fa\u7840\u4e0a\u6269\u5c55\u7684\u6559\u7a0b\uff0c\u5e94\u8be5\u662f\u76ee\u524d\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u4e86\u3002 \u4e00\u3001\u53ef\u6267\u884c\u811a\u672c \u00b6 \u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u8bb2\u8d77\u3002 \u9996\u5148\uff0c\u4f7f\u7528 JavaScript \u8bed\u8a00\uff0c\u5199\u4e00\u4e2a\u53ef\u6267\u884c\u811a\u672c hello \u3002 #!/usr/bin/env node console . log ( 'hello world' ); \u7136\u540e\uff0c\u4fee\u6539 hello \u7684\u6743\u9650\u3002 $ chmod 755 hello \u73b0\u5728\uff0chello \u5c31\u53ef\u4ee5\u6267\u884c\u4e86\u3002 $ ./hello hello world \u5982\u679c\u60f3\u628a hello \u524d\u9762\u7684\u8def\u5f84\u53bb\u9664\uff0c\u53ef\u4ee5\u5c06 hello \u7684\u8def\u5f84\u52a0\u5165\u73af\u5883\u53d8\u91cf PATH\u3002\u4f46\u662f\uff0c\u53e6\u4e00\u79cd\u66f4\u597d\u7684\u505a\u6cd5\uff0c\u662f\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u65b0\u5efa package.json \uff0c\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 { \"name\" : \"hello\" , \"bin\" : { \"hello\" : \"hello\" } } \u7136\u540e\u6267\u884c npm link \u547d\u4ee4\u3002 $ npm link \u73b0\u5728\u518d\u6267\u884c hello \uff0c\u5c31\u4e0d\u7528\u8f93\u5165\u8def\u5f84\u4e86\u3002 $ hello hello world \u4e8c\u3001\u547d\u4ee4\u884c\u53c2\u6570\u7684\u539f\u59cb\u5199\u6cd5 \u00b6 \u547d\u4ee4\u884c\u53c2\u6570\u53ef\u4ee5\u7528\u7cfb\u7edf\u53d8\u91cf process.argv \u83b7\u53d6\u3002 #!/usr/bin/env node console . log ( 'hello ' , process . argv [ 2 ]); \u6267\u884c\u65f6\uff0c\u76f4\u63a5\u5728\u811a\u672c\u6587\u4ef6\u540e\u9762\uff0c\u52a0\u4e0a\u53c2\u6570\u5373\u53ef\u3002 $ . / hello tom hello tom \u4e09\u3001\u65b0\u5efa\u8fdb\u7a0b \u00b6 \u811a\u672c\u53ef\u4ee5\u901a\u8fc7 child_process \u6a21\u5757\u65b0\u5efa\u5b50\u8fdb\u7a0b\uff0c\u4ece\u800c\u6267\u884c Unix \u7cfb\u7edf\u547d\u4ee4\u3002 #!/usr/bin/env node var name = process . argv [ 2 ]; var exec = require ( 'child_process' ). exec ; var child = exec ( 'echo hello ' + name , function ( err , stdout , stderr ) { if ( err ) throw err ; console . log ( stdout ); }); \u7528\u6cd5\u5982\u4e0b\u3002 $ ./hello tom hello tom \u56db\u3001shelljs \u6a21\u5757 \u00b6 shelljs \u6a21\u5757\u91cd\u65b0\u5305\u88c5\u4e86 child_process\uff0c\u8c03\u7528\u7cfb\u7edf\u547d\u4ee4\u66f4\u52a0\u65b9\u4fbf\u3002\u5b83\u9700\u8981\u5b89\u88c5\u540e\u4f7f\u7528\u3002 npm install --save shelljs \u7136\u540e\uff0c\u6539\u5199\u811a\u672c\u3002 #!/usr/bin/env node var name = process . argv [ 2 ]; var shell = require ( \"shelljs\" ); shell . exec ( \"echo hello \" + name ); \u4e0a\u9762\u4ee3\u7801\u662f shelljs \u7684\u672c\u5730\u6a21\u5f0f\uff0c\u5373\u901a\u8fc7 exec \u65b9\u6cd5\u6267\u884c shell \u547d\u4ee4\u3002\u6b64\u5916\u8fd8\u6709\u5168\u5c40\u6a21\u5f0f\uff0c\u5141\u8bb8\u76f4\u63a5\u5728\u811a\u672c\u4e2d\u5199 shell \u547d\u4ee4\u3002 require ( 'shelljs/global' ); if ( ! which ( 'git' )) { echo ( 'Sorry, this script requires git' ); exit ( 1 ); } mkdir ( '-p' , 'out/Release' ); cp ( '-R' , 'stuff/*' , 'out/Release' ); cd ( 'lib' ); ls ( '*.js' ). forEach ( function ( file ) { sed ( '-i' , 'BUILD_VERSION' , 'v0.1.2' , file ); sed ( '-i' , /.*REMOVE_THIS_LINE.*\\n/ , '' , file ); sed ( '-i' , /.*REPLACE_LINE_WITH_MACRO.*\\n/ , cat ( 'macro.js' ), file ); }); cd ( '..' ); if ( exec ( 'git commit -am \"Auto-commit\"' ). code !== 0 ) { echo ( 'Error: Git commit failed' ); exit ( 1 ); } \u4e94\u3001yargs \u6a21\u5757 \u00b6 shelljs \u53ea\u89e3\u51b3\u4e86\u5982\u4f55\u8c03\u7528 shell \u547d\u4ee4\uff0c\u800c yargs \u6a21\u5757\u80fd\u591f\u89e3\u51b3\u5982\u4f55\u5904\u7406\u547d\u4ee4\u884c\u53c2\u6570\u3002\u5b83\u4e5f\u9700\u8981\u5b89\u88c5\u3002 $ npm install --save yargs yargs \u6a21\u5757\u63d0\u4f9b argv \u5bf9\u8c61\uff0c\u7528\u6765\u8bfb\u53d6\u547d\u4ee4\u884c\u53c2\u6570\u3002\u8bf7\u770b\u6539\u5199\u540e\u7684 hello \u3002 #!/usr/bin/env node var argv = require ( 'yargs' ). argv ; console . log ( 'hello ' , argv . name ); \u4f7f\u7528\u65f6\uff0c\u4e0b\u9762\u4e24\u79cd\u7528\u6cd5\u90fd\u53ef\u4ee5\u3002 $ hello --name = tom hello tom $ hello --name tom hello tom \u5982\u679c\u5c06 argv.name \u6539\u6210 argv.n\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5b57\u6bcd\u7684\u77ed\u53c2\u6570\u5f62\u5f0f\u4e86\u3002 $ hello -n tom hello tom \u53ef\u4ee5\u4f7f\u7528 alias \u65b9\u6cd5\uff0c\u6307\u5b9a name \u662f n \u7684\u522b\u540d\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ) . alias ( 'n' , 'name' ) . argv ; console . log ( 'hello ' , argv . n ); \u8fd9\u6837\u4e00\u6765\uff0c\u77ed\u53c2\u6570\u548c\u957f\u53c2\u6570\u5c31\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002 $ hello -n tom hello tom $ hello --name tom hello tom argv \u5bf9\u8c61\u6709\u4e00\u4e2a\u4e0b\u5212\u7ebf\uff08_\uff09\u5c5e\u6027\uff0c\u53ef\u4ee5\u83b7\u53d6\u975e\u8fde\u8bcd\u7ebf\u5f00\u5934\u7684\u53c2\u6570\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ). argv ; console . log ( 'hello ' , argv . n ); console . log ( argv . _ ); \u7528\u6cd5\u5982\u4e0b\u3002 $ hello A -n tom B C hello tom [ 'A' , 'B' , 'C' ] \u516d\u3001\u547d\u4ee4\u884c\u53c2\u6570\u7684\u914d\u7f6e \u00b6 yargs \u6a21\u5757\u8fd8\u63d0\u4f9b3\u4e2a\u65b9\u6cd5\uff0c\u7528\u6765\u914d\u7f6e\u547d\u4ee4\u884c\u53c2\u6570\u3002 demand\uff1a\u662f\u5426\u5fc5\u9009 default\uff1a\u9ed8\u8ba4\u503c describe\uff1a\u63d0\u793a #!/usr/bin/env node var argv = require ( 'yargs' ) . demand ([ 'n' ]) . default ({ n : 'tom' }) . describe ({ n : 'your name' }) . argv ; console . log ( 'hello ' , argv . n ); \u4e0a\u9762\u4ee3\u7801\u6307\u5b9a n \u53c2\u6570\u4e0d\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u503c\u4e3a tom\uff0c\u5e76\u7ed9\u51fa\u4e00\u884c\u63d0\u793a\u3002 options \u65b9\u6cd5\u5141\u8bb8\u5c06\u6240\u6709\u8fd9\u4e9b\u914d\u7f6e\u5199\u8fdb\u4e00\u4e2a\u5bf9\u8c61\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ) . option ( 'n' , { alias : 'name' , demand : true , default : 'tom' , describe : 'your name' , type : 'string' }) . argv ; console . log ( 'hello ' , argv . n ); \u6709\u65f6\uff0c\u67d0\u4e9b\u53c2\u6570\u4e0d\u9700\u8981\u503c\uff0c\u53ea\u8d77\u5230\u4e00\u4e2a\u5f00\u5173\u4f5c\u7528\uff0c\u8fd9\u65f6\u53ef\u4ee5\u7528 boolean \u65b9\u6cd5\u6307\u5b9a\u8fd9\u4e9b\u53c2\u6570\u8fd4\u56de\u5e03\u5c14\u503c\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ) . boolean ([ 'n' ]) . argv ; console . log ( 'hello ' , argv . n ); \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u53c2\u6570 n \u603b\u662f\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u7528\u6cd5\u5982\u4e0b\u3002 $ hello hello false $ hello -n hello true $ hello -n tom hello true boolean \u65b9\u6cd5\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5c5e\u6027\uff0c\u5199\u5165 option \u5bf9\u8c61\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ) . option ( 'n' , { boolean : true }) . argv ; console . log ( 'hello ' , argv . n ); \u4e03\u3001\u5e2e\u52a9\u4fe1\u606f \u00b6 yargs \u6a21\u5757\u63d0\u4f9b\u4ee5\u4e0b\u65b9\u6cd5\uff0c\u751f\u6210\u5e2e\u52a9\u4fe1\u606f\u3002 usage\uff1a\u7528\u6cd5\u683c\u5f0f example\uff1a\u63d0\u4f9b\u4f8b\u5b50 help\uff1a\u663e\u793a\u5e2e\u52a9\u4fe1\u606f epilog\uff1a\u51fa\u73b0\u5728\u5e2e\u52a9\u4fe1\u606f\u7684\u7ed3\u5c3e #!/usr/bin/env node var argv = require ( 'yargs' ) . option ( 'f' , { alias : 'name' , demand : true , default : 'tom' , describe : 'your name' , type : 'string' }) . usage ( 'Usage: hello [options]' ) . example ( 'hello -n tom' , 'say hello to Tom' ) . help ( 'h' ) . alias ( 'h' , 'help' ) . epilog ( 'copyright 2015' ) . argv ; console . log ( 'hello ' , argv . n ); \u6267\u884c\u7ed3\u679c\u5982\u4e0b\u3002 $ hello -h Usage: hello [ options ] Options: -f, --name your name [ string ] [ required ] [ default: \"tom\" ] -h, --help Show help [ boolean ] Examples: hello -n tom say hello to Tom copyright 2015 \u516b\u3001\u5b50\u547d\u4ee4 \u00b6 yargs \u6a21\u5757\u8fd8\u5141\u8bb8\u901a\u8fc7 command \u65b9\u6cd5\uff0c\u8bbe\u7f6e Git \u98ce\u683c\u7684\u5b50\u547d\u4ee4\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ) . command ( \"morning\" , \"good morning\" , function ( yargs ) { console . log ( \"Good Morning\" ); }) . command ( \"evening\" , \"good evening\" , function ( yargs ) { console . log ( \"Good Evening\" ); }) . argv ; console . log ( 'hello ' , argv . n ); \u7528\u6cd5\u5982\u4e0b\u3002 $ hello morning -n tom Good Morning hello tom \u53ef\u4ee5\u5c06\u8fd9\u4e2a\u529f\u80fd\u4e0e shellojs \u6a21\u5757\u7ed3\u5408\u8d77\u6765\u3002 #!/usr/bin/env node require ( 'shelljs/global' ); var argv = require ( 'yargs' ) . command ( \"morning\" , \"good morning\" , function ( yargs ) { echo ( \"Good Morning\" ); }) . command ( \"evening\" , \"good evening\" , function ( yargs ) { echo ( \"Good Evening\" ); }) . argv ; console . log ( 'hello ' , argv . n ); \u6bcf\u4e2a\u5b50\u547d\u4ee4\u5f80\u5f80\u6709\u81ea\u5df1\u7684\u53c2\u6570\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u5728\u56de\u8c03\u51fd\u6570\u4e2d\u5355\u72ec\u6307\u5b9a\u3002\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u8981\u5148\u7528 reset \u65b9\u6cd5\u91cd\u7f6e yargs \u5bf9\u8c61\u3002 #!/usr/bin/env node require ( 'shelljs/global' ); var argv = require ( 'yargs' ) . command ( \"morning\" , \"good morning\" , function ( yargs ) { echo ( \"Good Morning\" ); var argv = yargs . reset () . option ( \"m\" , { alias : \"message\" , description : \"provide any sentence\" }) . help ( \"h\" ) . alias ( \"h\" , \"help\" ) . argv ; echo ( argv . m ); }) . argv ; \u7528\u6cd5\u5982\u4e0b\u3002 $ hello morning -m \"Are you hungry?\" Good Morning Are you hungry? \u4e5d\u3001\u5176\u4ed6\u4e8b\u9879 \u00b6 \uff081\uff09\u8fd4\u56de\u503c \u6839\u636e Unix \u4f20\u7edf\uff0c\u7a0b\u5e8f\u6267\u884c\u6210\u529f\u8fd4\u56de 0\uff0c\u5426\u5219\u8fd4\u56de 1 \u3002 if ( err ) { process . exit ( 1 ); } else { process . exit ( 0 ); } \uff082\uff09\u91cd\u5b9a\u5411 Unix \u5141\u8bb8\u7a0b\u5e8f\u4e4b\u95f4\u4f7f\u7528\u7ba1\u9053\u91cd\u5b9a\u5411\u6570\u636e\u3002 $ ps aux | grep 'node' \u811a\u672c\u53ef\u4ee5\u901a\u8fc7\u76d1\u542c\u6807\u51c6\u8f93\u5165\u7684data \u4e8b\u4ef6\uff0c\u83b7\u53d6\u91cd\u5b9a\u5411\u7684\u6570\u636e\u3002 process . stdin . resume (); process . stdin . setEncoding ( 'utf8' ); process . stdin . on ( 'data' , function ( data ) { process . stdout . write ( data ); }); \u4e0b\u9762\u662f\u7528\u6cd5\u3002 $ echo 'foo' | . / hello hello foo \uff083\uff09\u7cfb\u7edf\u4fe1\u53f7 \u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u5411\u6267\u884c\u4e2d\u7684\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\uff0cprocess \u5bf9\u8c61\u80fd\u591f\u76d1\u542c\u4fe1\u53f7\u4e8b\u4ef6\u3002 process . on ( 'SIGINT' , function () { console . log ( 'Got a SIGINT' ); process . exit ( 0 ); }); \u53d1\u9001\u4fe1\u53f7\u7684\u65b9\u6cd5\u5982\u4e0b\u3002 $ kill -s SIGINT [ process_id ] \uff08\u5b8c\uff09","title":"\u547d\u4ee4\u884c\u7684nodeJS"},{"location":"nodejs/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84nodeJS/#nodejs","text":"\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u662f\u5426\u6613\u7528\uff0c\u5f88\u5927\u7a0b\u5ea6\u4e0a\uff0c\u53d6\u51b3\u4e8e\u5f00\u53d1\u547d\u4ee4\u884c\u7a0b\u5e8f\u7684\u80fd\u529b\u3002 Node.js \u4f5c\u4e3a\u76ee\u524d\u6700\u70ed\u95e8\u7684\u5f00\u53d1\u5de5\u5177\u4e4b\u4e00\uff0c\u600e\u6837\u4f7f\u7528\u5b83\u5f00\u53d1\u547d\u4ee4\u884c\u7a0b\u5e8f\uff0c\u662f Web \u5f00\u53d1\u8005\u5e94\u8be5\u638c\u63e1\u7684\u6280\u80fd\u3002 \u6700\u8fd1\uff0cNpm\u7684\u7f51\u5fd7\u6709\u4e00\u7ec4 \u7cfb\u5217\u6587\u7ae0 \uff0c\u6211\u89c9\u5f97\u5199\u5f97\u975e\u5e38\u597d\u3002\u4e0b\u9762\u5c31\u662f\u6211\u5728\u5b83\u7684\u57fa\u7840\u4e0a\u6269\u5c55\u7684\u6559\u7a0b\uff0c\u5e94\u8be5\u662f\u76ee\u524d\u6700\u597d\u7684\u89e3\u51b3\u65b9\u6848\u4e86\u3002","title":"\u5982\u4f55\u4f7f\u7528 Node.js \u5f00\u53d1\u547d\u4ee4\u884c\u7a0b\u5e8f\uff1f"},{"location":"nodejs/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84nodeJS/#_1","text":"\u6211\u4eec\u4ece\u6700\u7b80\u5355\u7684\u8bb2\u8d77\u3002 \u9996\u5148\uff0c\u4f7f\u7528 JavaScript \u8bed\u8a00\uff0c\u5199\u4e00\u4e2a\u53ef\u6267\u884c\u811a\u672c hello \u3002 #!/usr/bin/env node console . log ( 'hello world' ); \u7136\u540e\uff0c\u4fee\u6539 hello \u7684\u6743\u9650\u3002 $ chmod 755 hello \u73b0\u5728\uff0chello \u5c31\u53ef\u4ee5\u6267\u884c\u4e86\u3002 $ ./hello hello world \u5982\u679c\u60f3\u628a hello \u524d\u9762\u7684\u8def\u5f84\u53bb\u9664\uff0c\u53ef\u4ee5\u5c06 hello \u7684\u8def\u5f84\u52a0\u5165\u73af\u5883\u53d8\u91cf PATH\u3002\u4f46\u662f\uff0c\u53e6\u4e00\u79cd\u66f4\u597d\u7684\u505a\u6cd5\uff0c\u662f\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u65b0\u5efa package.json \uff0c\u5199\u5165\u4e0b\u9762\u7684\u5185\u5bb9\u3002 { \"name\" : \"hello\" , \"bin\" : { \"hello\" : \"hello\" } } \u7136\u540e\u6267\u884c npm link \u547d\u4ee4\u3002 $ npm link \u73b0\u5728\u518d\u6267\u884c hello \uff0c\u5c31\u4e0d\u7528\u8f93\u5165\u8def\u5f84\u4e86\u3002 $ hello hello world","title":"\u4e00\u3001\u53ef\u6267\u884c\u811a\u672c"},{"location":"nodejs/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84nodeJS/#_2","text":"\u547d\u4ee4\u884c\u53c2\u6570\u53ef\u4ee5\u7528\u7cfb\u7edf\u53d8\u91cf process.argv \u83b7\u53d6\u3002 #!/usr/bin/env node console . log ( 'hello ' , process . argv [ 2 ]); \u6267\u884c\u65f6\uff0c\u76f4\u63a5\u5728\u811a\u672c\u6587\u4ef6\u540e\u9762\uff0c\u52a0\u4e0a\u53c2\u6570\u5373\u53ef\u3002 $ . / hello tom hello tom","title":"\u4e8c\u3001\u547d\u4ee4\u884c\u53c2\u6570\u7684\u539f\u59cb\u5199\u6cd5"},{"location":"nodejs/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84nodeJS/#_3","text":"\u811a\u672c\u53ef\u4ee5\u901a\u8fc7 child_process \u6a21\u5757\u65b0\u5efa\u5b50\u8fdb\u7a0b\uff0c\u4ece\u800c\u6267\u884c Unix \u7cfb\u7edf\u547d\u4ee4\u3002 #!/usr/bin/env node var name = process . argv [ 2 ]; var exec = require ( 'child_process' ). exec ; var child = exec ( 'echo hello ' + name , function ( err , stdout , stderr ) { if ( err ) throw err ; console . log ( stdout ); }); \u7528\u6cd5\u5982\u4e0b\u3002 $ ./hello tom hello tom","title":"\u4e09\u3001\u65b0\u5efa\u8fdb\u7a0b"},{"location":"nodejs/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84nodeJS/#shelljs","text":"shelljs \u6a21\u5757\u91cd\u65b0\u5305\u88c5\u4e86 child_process\uff0c\u8c03\u7528\u7cfb\u7edf\u547d\u4ee4\u66f4\u52a0\u65b9\u4fbf\u3002\u5b83\u9700\u8981\u5b89\u88c5\u540e\u4f7f\u7528\u3002 npm install --save shelljs \u7136\u540e\uff0c\u6539\u5199\u811a\u672c\u3002 #!/usr/bin/env node var name = process . argv [ 2 ]; var shell = require ( \"shelljs\" ); shell . exec ( \"echo hello \" + name ); \u4e0a\u9762\u4ee3\u7801\u662f shelljs \u7684\u672c\u5730\u6a21\u5f0f\uff0c\u5373\u901a\u8fc7 exec \u65b9\u6cd5\u6267\u884c shell \u547d\u4ee4\u3002\u6b64\u5916\u8fd8\u6709\u5168\u5c40\u6a21\u5f0f\uff0c\u5141\u8bb8\u76f4\u63a5\u5728\u811a\u672c\u4e2d\u5199 shell \u547d\u4ee4\u3002 require ( 'shelljs/global' ); if ( ! which ( 'git' )) { echo ( 'Sorry, this script requires git' ); exit ( 1 ); } mkdir ( '-p' , 'out/Release' ); cp ( '-R' , 'stuff/*' , 'out/Release' ); cd ( 'lib' ); ls ( '*.js' ). forEach ( function ( file ) { sed ( '-i' , 'BUILD_VERSION' , 'v0.1.2' , file ); sed ( '-i' , /.*REMOVE_THIS_LINE.*\\n/ , '' , file ); sed ( '-i' , /.*REPLACE_LINE_WITH_MACRO.*\\n/ , cat ( 'macro.js' ), file ); }); cd ( '..' ); if ( exec ( 'git commit -am \"Auto-commit\"' ). code !== 0 ) { echo ( 'Error: Git commit failed' ); exit ( 1 ); }","title":"\u56db\u3001shelljs \u6a21\u5757"},{"location":"nodejs/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84nodeJS/#yargs","text":"shelljs \u53ea\u89e3\u51b3\u4e86\u5982\u4f55\u8c03\u7528 shell \u547d\u4ee4\uff0c\u800c yargs \u6a21\u5757\u80fd\u591f\u89e3\u51b3\u5982\u4f55\u5904\u7406\u547d\u4ee4\u884c\u53c2\u6570\u3002\u5b83\u4e5f\u9700\u8981\u5b89\u88c5\u3002 $ npm install --save yargs yargs \u6a21\u5757\u63d0\u4f9b argv \u5bf9\u8c61\uff0c\u7528\u6765\u8bfb\u53d6\u547d\u4ee4\u884c\u53c2\u6570\u3002\u8bf7\u770b\u6539\u5199\u540e\u7684 hello \u3002 #!/usr/bin/env node var argv = require ( 'yargs' ). argv ; console . log ( 'hello ' , argv . name ); \u4f7f\u7528\u65f6\uff0c\u4e0b\u9762\u4e24\u79cd\u7528\u6cd5\u90fd\u53ef\u4ee5\u3002 $ hello --name = tom hello tom $ hello --name tom hello tom \u5982\u679c\u5c06 argv.name \u6539\u6210 argv.n\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u5b57\u6bcd\u7684\u77ed\u53c2\u6570\u5f62\u5f0f\u4e86\u3002 $ hello -n tom hello tom \u53ef\u4ee5\u4f7f\u7528 alias \u65b9\u6cd5\uff0c\u6307\u5b9a name \u662f n \u7684\u522b\u540d\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ) . alias ( 'n' , 'name' ) . argv ; console . log ( 'hello ' , argv . n ); \u8fd9\u6837\u4e00\u6765\uff0c\u77ed\u53c2\u6570\u548c\u957f\u53c2\u6570\u5c31\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002 $ hello -n tom hello tom $ hello --name tom hello tom argv \u5bf9\u8c61\u6709\u4e00\u4e2a\u4e0b\u5212\u7ebf\uff08_\uff09\u5c5e\u6027\uff0c\u53ef\u4ee5\u83b7\u53d6\u975e\u8fde\u8bcd\u7ebf\u5f00\u5934\u7684\u53c2\u6570\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ). argv ; console . log ( 'hello ' , argv . n ); console . log ( argv . _ ); \u7528\u6cd5\u5982\u4e0b\u3002 $ hello A -n tom B C hello tom [ 'A' , 'B' , 'C' ]","title":"\u4e94\u3001yargs \u6a21\u5757"},{"location":"nodejs/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84nodeJS/#_4","text":"yargs \u6a21\u5757\u8fd8\u63d0\u4f9b3\u4e2a\u65b9\u6cd5\uff0c\u7528\u6765\u914d\u7f6e\u547d\u4ee4\u884c\u53c2\u6570\u3002 demand\uff1a\u662f\u5426\u5fc5\u9009 default\uff1a\u9ed8\u8ba4\u503c describe\uff1a\u63d0\u793a #!/usr/bin/env node var argv = require ( 'yargs' ) . demand ([ 'n' ]) . default ({ n : 'tom' }) . describe ({ n : 'your name' }) . argv ; console . log ( 'hello ' , argv . n ); \u4e0a\u9762\u4ee3\u7801\u6307\u5b9a n \u53c2\u6570\u4e0d\u53ef\u7701\u7565\uff0c\u9ed8\u8ba4\u503c\u4e3a tom\uff0c\u5e76\u7ed9\u51fa\u4e00\u884c\u63d0\u793a\u3002 options \u65b9\u6cd5\u5141\u8bb8\u5c06\u6240\u6709\u8fd9\u4e9b\u914d\u7f6e\u5199\u8fdb\u4e00\u4e2a\u5bf9\u8c61\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ) . option ( 'n' , { alias : 'name' , demand : true , default : 'tom' , describe : 'your name' , type : 'string' }) . argv ; console . log ( 'hello ' , argv . n ); \u6709\u65f6\uff0c\u67d0\u4e9b\u53c2\u6570\u4e0d\u9700\u8981\u503c\uff0c\u53ea\u8d77\u5230\u4e00\u4e2a\u5f00\u5173\u4f5c\u7528\uff0c\u8fd9\u65f6\u53ef\u4ee5\u7528 boolean \u65b9\u6cd5\u6307\u5b9a\u8fd9\u4e9b\u53c2\u6570\u8fd4\u56de\u5e03\u5c14\u503c\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ) . boolean ([ 'n' ]) . argv ; console . log ( 'hello ' , argv . n ); \u4e0a\u9762\u4ee3\u7801\u4e2d\uff0c\u53c2\u6570 n \u603b\u662f\u8fd4\u56de\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u7528\u6cd5\u5982\u4e0b\u3002 $ hello hello false $ hello -n hello true $ hello -n tom hello true boolean \u65b9\u6cd5\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5c5e\u6027\uff0c\u5199\u5165 option \u5bf9\u8c61\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ) . option ( 'n' , { boolean : true }) . argv ; console . log ( 'hello ' , argv . n );","title":"\u516d\u3001\u547d\u4ee4\u884c\u53c2\u6570\u7684\u914d\u7f6e"},{"location":"nodejs/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84nodeJS/#_5","text":"yargs \u6a21\u5757\u63d0\u4f9b\u4ee5\u4e0b\u65b9\u6cd5\uff0c\u751f\u6210\u5e2e\u52a9\u4fe1\u606f\u3002 usage\uff1a\u7528\u6cd5\u683c\u5f0f example\uff1a\u63d0\u4f9b\u4f8b\u5b50 help\uff1a\u663e\u793a\u5e2e\u52a9\u4fe1\u606f epilog\uff1a\u51fa\u73b0\u5728\u5e2e\u52a9\u4fe1\u606f\u7684\u7ed3\u5c3e #!/usr/bin/env node var argv = require ( 'yargs' ) . option ( 'f' , { alias : 'name' , demand : true , default : 'tom' , describe : 'your name' , type : 'string' }) . usage ( 'Usage: hello [options]' ) . example ( 'hello -n tom' , 'say hello to Tom' ) . help ( 'h' ) . alias ( 'h' , 'help' ) . epilog ( 'copyright 2015' ) . argv ; console . log ( 'hello ' , argv . n ); \u6267\u884c\u7ed3\u679c\u5982\u4e0b\u3002 $ hello -h Usage: hello [ options ] Options: -f, --name your name [ string ] [ required ] [ default: \"tom\" ] -h, --help Show help [ boolean ] Examples: hello -n tom say hello to Tom copyright 2015","title":"\u4e03\u3001\u5e2e\u52a9\u4fe1\u606f"},{"location":"nodejs/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84nodeJS/#_6","text":"yargs \u6a21\u5757\u8fd8\u5141\u8bb8\u901a\u8fc7 command \u65b9\u6cd5\uff0c\u8bbe\u7f6e Git \u98ce\u683c\u7684\u5b50\u547d\u4ee4\u3002 #!/usr/bin/env node var argv = require ( 'yargs' ) . command ( \"morning\" , \"good morning\" , function ( yargs ) { console . log ( \"Good Morning\" ); }) . command ( \"evening\" , \"good evening\" , function ( yargs ) { console . log ( \"Good Evening\" ); }) . argv ; console . log ( 'hello ' , argv . n ); \u7528\u6cd5\u5982\u4e0b\u3002 $ hello morning -n tom Good Morning hello tom \u53ef\u4ee5\u5c06\u8fd9\u4e2a\u529f\u80fd\u4e0e shellojs \u6a21\u5757\u7ed3\u5408\u8d77\u6765\u3002 #!/usr/bin/env node require ( 'shelljs/global' ); var argv = require ( 'yargs' ) . command ( \"morning\" , \"good morning\" , function ( yargs ) { echo ( \"Good Morning\" ); }) . command ( \"evening\" , \"good evening\" , function ( yargs ) { echo ( \"Good Evening\" ); }) . argv ; console . log ( 'hello ' , argv . n ); \u6bcf\u4e2a\u5b50\u547d\u4ee4\u5f80\u5f80\u6709\u81ea\u5df1\u7684\u53c2\u6570\uff0c\u8fd9\u65f6\u5c31\u9700\u8981\u5728\u56de\u8c03\u51fd\u6570\u4e2d\u5355\u72ec\u6307\u5b9a\u3002\u56de\u8c03\u51fd\u6570\u4e2d\uff0c\u8981\u5148\u7528 reset \u65b9\u6cd5\u91cd\u7f6e yargs \u5bf9\u8c61\u3002 #!/usr/bin/env node require ( 'shelljs/global' ); var argv = require ( 'yargs' ) . command ( \"morning\" , \"good morning\" , function ( yargs ) { echo ( \"Good Morning\" ); var argv = yargs . reset () . option ( \"m\" , { alias : \"message\" , description : \"provide any sentence\" }) . help ( \"h\" ) . alias ( \"h\" , \"help\" ) . argv ; echo ( argv . m ); }) . argv ; \u7528\u6cd5\u5982\u4e0b\u3002 $ hello morning -m \"Are you hungry?\" Good Morning Are you hungry?","title":"\u516b\u3001\u5b50\u547d\u4ee4"},{"location":"nodejs/%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84nodeJS/#_7","text":"\uff081\uff09\u8fd4\u56de\u503c \u6839\u636e Unix \u4f20\u7edf\uff0c\u7a0b\u5e8f\u6267\u884c\u6210\u529f\u8fd4\u56de 0\uff0c\u5426\u5219\u8fd4\u56de 1 \u3002 if ( err ) { process . exit ( 1 ); } else { process . exit ( 0 ); } \uff082\uff09\u91cd\u5b9a\u5411 Unix \u5141\u8bb8\u7a0b\u5e8f\u4e4b\u95f4\u4f7f\u7528\u7ba1\u9053\u91cd\u5b9a\u5411\u6570\u636e\u3002 $ ps aux | grep 'node' \u811a\u672c\u53ef\u4ee5\u901a\u8fc7\u76d1\u542c\u6807\u51c6\u8f93\u5165\u7684data \u4e8b\u4ef6\uff0c\u83b7\u53d6\u91cd\u5b9a\u5411\u7684\u6570\u636e\u3002 process . stdin . resume (); process . stdin . setEncoding ( 'utf8' ); process . stdin . on ( 'data' , function ( data ) { process . stdout . write ( data ); }); \u4e0b\u9762\u662f\u7528\u6cd5\u3002 $ echo 'foo' | . / hello hello foo \uff083\uff09\u7cfb\u7edf\u4fe1\u53f7 \u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u5411\u6267\u884c\u4e2d\u7684\u8fdb\u7a0b\u53d1\u9001\u4fe1\u53f7\uff0cprocess \u5bf9\u8c61\u80fd\u591f\u76d1\u542c\u4fe1\u53f7\u4e8b\u4ef6\u3002 process . on ( 'SIGINT' , function () { console . log ( 'Got a SIGINT' ); process . exit ( 0 ); }); \u53d1\u9001\u4fe1\u53f7\u7684\u65b9\u6cd5\u5982\u4e0b\u3002 $ kill -s SIGINT [ process_id ] \uff08\u5b8c\uff09","title":"\u4e5d\u3001\u5176\u4ed6\u4e8b\u9879"},{"location":"nodejs/%E5%BB%96%E9%9B%AA%E5%B3%B0%20NodeJS/","text":"\u5ed6\u96ea\u5cf0 NodeJS https://www.liaoxuefeng.com/wiki/1022910821149312/1023025235359040","title":"\u5ed6\u96ea\u5cf0 NodeJS"},{"location":"python/django%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/","text":"Django \u4ecb\u7ecd \u00b6 \u9700\u8981\u57fa\u672c\u7684Python\u77e5\u8bc6\u3002Django\u662f\u4e00\u4e2apython\u6846\u67b6\u3002Django\u91c7\u7528\u4e86MVC\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5373\u6a21\u578bM\uff0c\u89c6\u56feV\u548c\u63a7\u5236\u5668C\u3002\u4e0d\u540c\u7684python\u7248\u672c\u5bf9\u5e94\u7684\u4e0d\u540c\u7684Django\uff0c\u76ee\u524d\u7535\u8111\u4e0a\u5b89\u88c5\u7684\u662fpython2.7.10\u7684\u7248\u672c\uff0c\u6240\u4ee5\u5b89\u88c5\u7684Django\u9700\u8981\u5339\u914d\u3002 Django\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u7684Web\u5e94\u7528\u6846\u67b6\uff0c\u7531Python\u5199\u6210\u3002\u91c7\u7528\u4e86MVT\u7684\u6846\u67b6\u6a21\u5f0f\uff0c\u5373\u6a21\u578bM\uff0c\u89c6\u56feV\u548c\u6a21\u7248T\u3002 \u53c2\u8003\u7f51\u7ad9\uff1a http://www.runoob.com/django/django-install.html https://www.jianshu.com/p/faeee7d5ad3b ERROR: No matching distribution found for Django \u62a5\u9519\u89e3\u51b3 \u00b6 \u4eca\u5929\u5b89\u88c5\u4e00\u4e2a python \u4f9d\u8d56\u65f6\uff0c\u6267\u884c pip install -r requirements.txt \u540e\uff0c\u754c\u9762\u51fa\u73b0 ERROR: No matching distribution found for Django === 3.0.2\" \u8fd9\u4e2a\u62a5\u9519\u3002\u6211\u7684\u4f9d\u8d56\u5982\u4e0b\uff1a Django==3.0.2 django-appconf==1.0.3 django-statici18n==1.9.0 django-webpack-loader==0.6.0 djangorestframework==3.11.0 PyMySQL==0.9.3 \u67e5\u627e\u8d44\u6599\u540e\uff0c\u53d1\u73b0\u53ef\u80fd\u662f\u5982\u4e0b\u95ee\u9898 \u95ee\u98981 pip \u7248\u672c\u592a\u8001 \u00b6 \u6267\u884c easy_install *--upgrade pip* easy_install *--upgrade pip* pip --version # pip 20.2.3 from /Library/Python/2.7/site-packages/pip (python 2.7) \u6211\u7684 pip \u5df2\u7ecf\u66f4\u65b0\uff0c\u6267\u884c pip install \u8fd8\u662f\u539f\u6765\u7684\u9519\u8bef \u95ee\u98982 python\u7248\u672c\u4e0d\u5bf9\u5e94 \u00b6 \u6211\u8fd9\u91cc\u9700\u8981\u5b89\u88c5 3.0.2 \u7684 Django\uff0c\u9ed8\u8ba4\u7535\u8111\u7684python\u7248\u672c\u662f 2.7\u3002\u6211\u521b\u5efa\u7684\u865a\u62df\u73af\u5883\u662f 2.7 \u7684\u7248\u672c\uff0c\u6240\u4ee5\u65e0\u6cd5\u5b89\u88c5\u3002 stackoverflow \u4e0a\u7684\u89e3\u91ca\u662f\uff1a You don't need to update pip to find new packages. It looks them up on PyPI. Ubuntu 16.04's python3 package is for version 3.5., which is supported by Django 2.2 . Either upgrade your Python (I recommend using something like pyenv or pythonz to easily decouple your Python version from your operating system) or use Django 2.2. django 3.0.2 \u9700\u8981 python3 \u7684\u73af\u5883\uff0c\u6211\u672c\u5730\u9ed8\u8ba4\u662f python2 \u7684\u865a\u62df\u73af\u5883\uff0c\u6240\u4ee5\u65e0\u6cd5\u5b89\u88c5\u3002 \u89e3\u51b3\u65b9\u6848\u662f\uff1a\u65b0\u5efa\u4e00\u4e2apython3\u7684\u865a\u62df\u73af\u5883\uff08\u5177\u4f53\u53c2\u8003\u53e6\u4e00\u7bc7\u535a\u5ba2\uff09 \u7136\u540e\u53ef\u4ee5\u987a\u5229\u5b89\u88c5\uff1a \u53c2\u8003\u7f51\u5740 \u00b6 https://stackoverflow.com/questions/60027430/no-matching-distribution-found-for-django-3-0-on-ubuntu-16-04 https://blog.csdn.net/w417950004/article/details/74171327","title":"django \u5e38\u89c1\u95ee\u9898.md"},{"location":"python/django%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/#django","text":"\u9700\u8981\u57fa\u672c\u7684Python\u77e5\u8bc6\u3002Django\u662f\u4e00\u4e2apython\u6846\u67b6\u3002Django\u91c7\u7528\u4e86MVC\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u5373\u6a21\u578bM\uff0c\u89c6\u56feV\u548c\u63a7\u5236\u5668C\u3002\u4e0d\u540c\u7684python\u7248\u672c\u5bf9\u5e94\u7684\u4e0d\u540c\u7684Django\uff0c\u76ee\u524d\u7535\u8111\u4e0a\u5b89\u88c5\u7684\u662fpython2.7.10\u7684\u7248\u672c\uff0c\u6240\u4ee5\u5b89\u88c5\u7684Django\u9700\u8981\u5339\u914d\u3002 Django\u662f\u4e00\u4e2a\u5f00\u653e\u6e90\u4ee3\u7801\u7684Web\u5e94\u7528\u6846\u67b6\uff0c\u7531Python\u5199\u6210\u3002\u91c7\u7528\u4e86MVT\u7684\u6846\u67b6\u6a21\u5f0f\uff0c\u5373\u6a21\u578bM\uff0c\u89c6\u56feV\u548c\u6a21\u7248T\u3002 \u53c2\u8003\u7f51\u7ad9\uff1a http://www.runoob.com/django/django-install.html https://www.jianshu.com/p/faeee7d5ad3b","title":"Django \u4ecb\u7ecd"},{"location":"python/django%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/#error-no-matching-distribution-found-for-django","text":"\u4eca\u5929\u5b89\u88c5\u4e00\u4e2a python \u4f9d\u8d56\u65f6\uff0c\u6267\u884c pip install -r requirements.txt \u540e\uff0c\u754c\u9762\u51fa\u73b0 ERROR: No matching distribution found for Django === 3.0.2\" \u8fd9\u4e2a\u62a5\u9519\u3002\u6211\u7684\u4f9d\u8d56\u5982\u4e0b\uff1a Django==3.0.2 django-appconf==1.0.3 django-statici18n==1.9.0 django-webpack-loader==0.6.0 djangorestframework==3.11.0 PyMySQL==0.9.3 \u67e5\u627e\u8d44\u6599\u540e\uff0c\u53d1\u73b0\u53ef\u80fd\u662f\u5982\u4e0b\u95ee\u9898","title":"ERROR: No matching distribution found for Django \u62a5\u9519\u89e3\u51b3"},{"location":"python/django%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/#1-pip","text":"\u6267\u884c easy_install *--upgrade pip* easy_install *--upgrade pip* pip --version # pip 20.2.3 from /Library/Python/2.7/site-packages/pip (python 2.7) \u6211\u7684 pip \u5df2\u7ecf\u66f4\u65b0\uff0c\u6267\u884c pip install \u8fd8\u662f\u539f\u6765\u7684\u9519\u8bef","title":"\u95ee\u98981 pip \u7248\u672c\u592a\u8001"},{"location":"python/django%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/#2-python","text":"\u6211\u8fd9\u91cc\u9700\u8981\u5b89\u88c5 3.0.2 \u7684 Django\uff0c\u9ed8\u8ba4\u7535\u8111\u7684python\u7248\u672c\u662f 2.7\u3002\u6211\u521b\u5efa\u7684\u865a\u62df\u73af\u5883\u662f 2.7 \u7684\u7248\u672c\uff0c\u6240\u4ee5\u65e0\u6cd5\u5b89\u88c5\u3002 stackoverflow \u4e0a\u7684\u89e3\u91ca\u662f\uff1a You don't need to update pip to find new packages. It looks them up on PyPI. Ubuntu 16.04's python3 package is for version 3.5., which is supported by Django 2.2 . Either upgrade your Python (I recommend using something like pyenv or pythonz to easily decouple your Python version from your operating system) or use Django 2.2. django 3.0.2 \u9700\u8981 python3 \u7684\u73af\u5883\uff0c\u6211\u672c\u5730\u9ed8\u8ba4\u662f python2 \u7684\u865a\u62df\u73af\u5883\uff0c\u6240\u4ee5\u65e0\u6cd5\u5b89\u88c5\u3002 \u89e3\u51b3\u65b9\u6848\u662f\uff1a\u65b0\u5efa\u4e00\u4e2apython3\u7684\u865a\u62df\u73af\u5883\uff08\u5177\u4f53\u53c2\u8003\u53e6\u4e00\u7bc7\u535a\u5ba2\uff09 \u7136\u540e\u53ef\u4ee5\u987a\u5229\u5b89\u88c5\uff1a","title":"\u95ee\u98982 python\u7248\u672c\u4e0d\u5bf9\u5e94"},{"location":"python/django%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/#_1","text":"https://stackoverflow.com/questions/60027430/no-matching-distribution-found-for-django-3-0-on-ubuntu-16-04 https://blog.csdn.net/w417950004/article/details/74171327","title":"\u53c2\u8003\u7f51\u5740"},{"location":"python/flask-basic/","text":"Flask \u4ecb\u7ecd \u00b6 \u4ecb\u7ecd \u00b6 Flask \u4f9d\u8d56\u4e24\u4e2a\u5916\u90e8\u5e93\uff1a Werkzeug \u548c Jinja2 \u3002 Werkzeug \u662f\u4e00\u4e2a WSGI\uff08\u5728 Web \u5e94\u7528\u548c\u591a\u79cd\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6807\u51c6 Python \u63a5\u53e3) \u5de5\u5177\u96c6\u3002Jinja2 \u8d1f\u8d23\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9996\u5148\u9700\u8981 Python 2.6 \u6216\u66f4\u9ad8\u7684\u7248\u672c\uff0c\u6240\u4ee5\u8bf7\u786e\u8ba4\u6709\u4e00\u4e2a\u6700\u65b0\u7684 Python 2.x \u5b89\u88c5\u3002 \u5728 Python 3 \u4e2d\u4f7f\u7528 Flask \u8bf7\u53c2\u8003\uff1a Python 3 \u652f\u6301 \u3002 \u5b89\u88c5\u65b9\u6cd5\u4e00\uff1avirtualenv(\u865a\u62df\u73af\u5883\u5b89\u88c5) \u00b6 \u4f60\u5f88\u53ef\u80fd\u60f3\u5728\u5f00\u53d1\u4e2d\u7528\u4e0a virtualenv\uff0c\u5982\u679c\u4f60\u6709\u751f\u4ea7\u73af\u5883\u7684 shell \u6743\u9650\uff0c\u4f60\u540c\u6837\u4f1a\u4e50\u4e8e\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u5b83\u3002 virtualenv \u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f\u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u559c\u6b22 Python\uff0c\u4e0d\u4ec5\u4f1a\u5728\u91c7\u7528 Flask \u7684Web \u5e94\u7528\u4e2d\u7528\u4e0a virtualenv\uff0c\u5728\u522b\u7684\u9879\u76ee\u4e2d\u4f60\u4e5f\u4f1a\u60f3\u7528\u4e0a\u5b83\u3002\u4f60\u62e5\u6709\u7684\u9879\u76ee\u8d8a\u591a\uff0c\u540c\u65f6\u4f7f\u7528\u4e0d\u540c\u7248\u672c\u7684 Python \u5de5\u4f5c\u7684\u53ef\u80fd\u6027\u4e5f\u5c31\u8d8a\u5927\uff0c\u6216\u8005\u8d77\u7801\u9700\u8981\u4e0d\u540c\u7248\u672c\u7684 Python \u5e93\u3002\u60b2\u60e8\u73b0\u5b9e\u662f\uff1a\u5e38\u5e38\u4f1a\u6709\u5e93\u7834\u574f\u5411\u540e\u517c\u5bb9\u6027\uff0c\u7136\u800c\u6b63\u7ecf\u5e94\u7528\u4e0d\u91c7\u7528\u5916\u90e8\u5e93\u7684\u53ef\u80fd\u5fae\u4e4e\u5176\u5fae\u3002\u5f53\u5728\u4f60\u7684\u9879\u76ee\u4e2d\uff0c\u51fa\u73b0\u4e24\u4e2a\u6216\u66f4\u591a\u4f9d\u8d56\u6027\u51b2\u7a81\u65f6\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f virtualenv \u62ef\u6551\u4e16\u754c\uff01virtualenv \u4e3a\u6bcf\u4e2a\u4e0d\u540c\u9879\u76ee\u63d0\u4f9b\u4e00\u4efd Python \u5b89\u88c5\u3002\u5b83\u5e76\u6ca1\u6709\u771f\u6b63\u5b89\u88c5\u591a\u4e2a Python \u526f\u672c\uff0c\u4f46\u662f\u5b83\u786e\u5b9e\u63d0\u4f9b\u4e86\u4e00\u79cd\u5de7\u5999\u7684\u65b9\u5f0f\u6765\u8ba9\u5404\u9879\u76ee\u73af\u5883\u4fdd\u6301\u72ec\u7acb\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b virtualenv \u662f\u600e\u4e48\u5de5\u4f5c\u7684\u3002 \u5982\u679c\u4f60\u5728 Mac OS X \u6216 Linux \u4e0b\uff0c\u4e0b\u9762\u4e24\u6761\u547d\u4ee4\u53ef\u80fd\u4f1a\u9002\u7528: $ sudo easy_install virtualenv $ sudo pip install virtualenv \u4e0a\u8ff0\u7684\u547d\u4ee4\u4f1a\u5728\u4f60\u7684\u7cfb\u7edf\u4e2d\u5b89\u88c5 virtualenv\u3002\u5b83\u751a\u81f3\u53ef\u80fd\u4f1a\u5b58\u5728\u4e8e\u5305\u7ba1\u7406\u5668\u4e2d\u3002 virtualenv \u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u4f60\u53ef\u4ee5\u7acb\u5373\u6253\u5f00 shell \u7136\u540e\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u73af\u5883\u3002\u6211\u901a\u5e38\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u5176\u4e0b\u521b\u5efa\u4e00\u4e2a venv \u6587\u4ef6\u5939 $ mkdir myproject $ cd myproject $ virtualenv venv New python executable in venv/bin/python Installing distribute............done. \u73b0\u5728\uff0c\u65e0\u8bba\u4f55\u65f6\u4f60\u60f3\u5728\u67d0\u4e2a\u9879\u76ee\u4e0a\u5de5\u4f5c\uff0c\u53ea\u9700\u8981\u6fc0\u6d3b\u76f8\u5e94\u7684\u73af\u5883\u3002\u5728 OS X \u548c Linux \u4e0a\uff0c\u6267\u884c\u5982\u4e0b\u64cd\u4f5c: $ . venv/bin/activate \u65e0\u8bba\u901a\u8fc7\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u73b0\u5728\u5e94\u8be5\u5df2\u7ecf\u6fc0\u6d3b\u4e86 virtualenv\uff08\u6ce8\u610f\u4f60\u7684 shell \u63d0\u793a\u7b26\u663e\u793a\u7684\u662f\u5f53\u524d\u6d3b\u52a8\u7684\u73af\u5883\uff09\u3002 \u73b0\u5728\u4f60\u53ea\u9700\u8981\u952e\u5165\u4ee5\u4e0b\u7684\u547d\u4ee4\u6765\u6fc0\u6d3b virtualenv \u4e2d\u7684 Flask: $ pip install Flask \u51e0\u79d2\u949f\u540e\uff0c\u4e00\u5207\u90fd\u641e\u5b9a\u4e86\u3002 \u5b89\u88c5\u65b9\u6cd5\u4e8c\uff1a\u5168\u5c40\u5b89\u88c5 \u00b6 \u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u867d\u7136\u6211\u4e0d\u63a8\u8350\u3002\u53ea\u9700\u8981\u4ee5 root \u6743\u9650\u8fd0\u884c pip\u3002\u73b0\u5728\u4ee5\u8fd9\u79cd\u6a21\u5f0f\u5b89\u88c5 flask\u3002 $ sudo pip install Flask \u57fa\u672c\u4f7f\u7528 \u00b6 \u4e00\u4e2a\u6700\u5c0f\u7684 Flask \u5e94\u7528\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837: from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return 'Hello World!' if __name__ == '__main__' : app . run () \u628a\u5b83\u4fdd\u5b58\u4e3a hello.py \uff08\u6216\u662f\u7c7b\u4f3c\u7684\uff09\uff0c\u7136\u540e\u7528 Python \u89e3\u91ca\u5668\u6765\u8fd0\u884c\u3002 \u786e\u4fdd\u4f60\u7684\u5e94\u7528\u6587\u4ef6\u540d\u4e0d\u662f flask.py \uff0c\u56e0\u4e3a\u8fd9\u5c06\u4e0e Flask \u672c\u8eab\u51b2\u7a81\u3002 python hello.py * Running on http://127.0.0.1:5000/ \u73b0\u5728\u8bbf\u95ee http://127.0.0.1:5000/ \uff0c\u4f60\u4f1a\u770b\u89c1 Hello World \u95ee\u5019\u3002\u6b32\u5173\u95ed\u670d\u52a1\u5668\uff0c\u6309 Ctrl+C\u3002 \u90a3\u4e48\uff0c\u8fd9\u6bb5\u4ee3\u7801\u505a\u4e86\u4ec0\u4e48\uff1f \u9996\u5148\uff0c\u6211\u4eec\u5bfc\u5165\u4e86 Flask \u7c7b\u3002\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5c06\u4f1a\u662f\u6211\u4eec\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u8be5\u7c7b\u7684\u5b9e\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5e94\u7528\u6a21\u5757\u6216\u8005\u5305\u7684\u540d\u79f0\u3002 \u5982\u679c\u4f60\u4f7f\u7528\u5355\u4e00\u7684\u6a21\u5757\uff08\u5982\u672c\u4f8b\uff09\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 name \uff0c\u56e0\u4e3a\u6a21\u5757\u7684\u540d\u79f0\u5c06\u4f1a\u56e0\u5176\u4f5c\u4e3a\u5355\u72ec\u5e94\u7528\u542f\u52a8\u8fd8\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u800c\u6709\u4e0d\u540c\uff08 \u4e5f\u5373\u662f '__main__' \u6216\u5b9e\u9645\u7684\u5bfc\u5165\u540d\uff09\u3002\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u8fd9\u6837 Flask \u624d\u77e5\u9053\u5230\u54ea\u53bb\u627e\u6a21\u677f\u3001\u9759\u6001\u6587\u4ef6\u7b49\u7b49\u3002\u8be6\u60c5\u89c1 Flask \u7684\u6587\u6863\u3002 \u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 route() \u88c5\u9970\u5668\u544a\u8bc9 Flask \u4ec0\u4e48\u6837\u7684URL \u80fd\u89e6\u53d1\u6211\u4eec\u7684\u51fd\u6570\u3002 \u8fd9\u4e2a\u51fd\u6570\u7684\u540d\u5b57\u4e5f\u5728\u751f\u6210 URL \u65f6\u88ab\u7279\u5b9a\u7684\u51fd\u6570\u91c7\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u6211\u4eec\u60f3\u8981\u663e\u793a\u5728\u7528\u6237\u6d4f\u89c8\u5668\u4e2d\u7684\u4fe1\u606f\u3002 \u6700\u540e\u6211\u4eec\u7528 run() \u51fd\u6570\u6765\u8ba9\u5e94\u7528\u8fd0\u884c\u5728\u672c\u5730\u670d\u52a1\u5668\u4e0a\u3002 \u5176\u4e2d if __name__ =='__main__': \u786e\u4fdd\u670d\u52a1\u5668\u53ea\u4f1a\u5728\u8be5\u811a\u672c\u88ab Python \u89e3\u91ca\u5668\u76f4\u63a5\u6267\u884c\u7684\u65f6\u5019\u624d\u4f1a\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u7684\u65f6\u5019\u3002 \u5916\u90e8\u53ef\u8bbf\u95ee\u7684\u670d\u52a1\u5668 \u5982\u679c\u4f60\u8fd0\u884c\u4e86\u8fd9\u4e2a\u670d\u52a1\u5668\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u53ea\u80fd\u4ece\u4f60\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u8bbf\u95ee\uff0c\u7f51\u7edc\u4e2d\u5176\u5b83\u4efb\u4f55\u7684\u5730\u65b9\u90fd\u4e0d\u80fd\u8bbf\u95ee\u3002\u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4f60\u7684\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u4efb\u610f Python \u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u884c\u4e3a\u662f\u9ed8\u8ba4\u7684\u3002 \u5982\u679c\u4f60\u7981\u7528\u4e86 debug \u6216\u4fe1\u4efb\u4f60\u6240\u5728\u7f51\u7edc\u7684\u7528\u6237\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u4fee\u6539\u8c03\u7528 run() \u7684\u65b9\u6cd5\u4f7f\u4f60\u7684\u670d\u52a1\u5668\u516c\u5f00\u53ef\u7528\uff0c\u5982\u4e0b: app.run(host='0.0.0.0') \u8fd9\u4f1a\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u76d1\u542c\u6240\u6709\u516c\u7f51 IP\u3002 \u8c03\u8bd5\u6a21\u5f0f \u00b6 \u867d\u7136 run() \u65b9\u6cd5\u9002\u7528\u4e8e\u542f\u52a8\u672c\u5730\u7684\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u4f46\u662f\u4f60\u6bcf\u6b21\u4fee\u6539\u4ee3\u7801\u540e\u90fd\u8981\u624b\u52a8\u91cd\u542f\u5b83\u3002\u8fd9\u6837\u5e76\u4e0d\u591f\u4f18\u96c5\uff0c\u800c\u4e14 Flask \u53ef\u4ee5\u505a\u5230\u66f4\u597d\u3002\u5982\u679c\u4f60\u542f\u7528\u4e86\u8c03\u8bd5\u652f\u6301\uff0c\u670d\u52a1\u5668\u4f1a\u5728\u4ee3\u7801\u4fee\u6539\u540e\u81ea\u52a8\u91cd\u65b0\u8f7d\u5165\uff0c\u5e76\u5728\u53d1\u751f\u9519\u8bef\u65f6\u63d0\u4f9b\u4e00\u4e2a\u76f8\u5f53\u6709\u7528\u7684\u8c03\u8bd5\u5668\u3002 \u6709\u4e24\u79cd\u9014\u5f84\u6765\u542f\u7528\u8c03\u8bd5\u6a21\u5f0f\u3002\u4e00\u79cd\u662f\u76f4\u63a5\u5728\u5e94\u7528\u5bf9\u8c61\u4e0a\u8bbe\u7f6e: app . debug = True app . run () \u53e6\u4e00\u79cd\u662f\u4f5c\u4e3a run \u65b9\u6cd5\u7684\u4e00\u4e2a\u53c2\u6570\u4f20\u5165: app.run(debug=True) \u4e24\u79cd\u65b9\u6cd5\u7684\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002 \u6ce8\u610f \u5c3d\u7ba1\u4ea4\u4e92\u5f0f\u8c03\u8bd5\u5668\u5728\u5141\u8bb8 fork \u7684\u73af\u5883\u4e2d\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\uff08\u4e5f\u5373\u5728\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\u6b63\u5e38\u4f7f\u7528\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff09\uff0c\u4f46\u5b83\u4f9d\u7136\u5141\u8bb8\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002\u8fd9\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u5de8\u5927\u7684\u5b89\u5168\u9690\u60a3\uff0c\u56e0\u6b64\u5b83 \u7edd\u5bf9\u4e0d\u80fd\u7528\u4e8e\u751f\u4ea7\u73af\u5883 \u3002 \u8def\u7531 \u00b6 \u73b0\u4ee3 Web \u5e94\u7528\u7684 URL \u5341\u5206\u4f18\u96c5\uff0c\u6613\u4e8e\u4eba\u4eec\u8fa8\u8bc6\u8bb0\u5fc6\uff0c\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u90a3\u4e9b\u9762\u5411\u4f7f\u7528\u4f4e\u901f\u7f51\u7edc\u8fde\u63a5\u79fb\u52a8\u8bbe\u5907\u8bbf\u95ee\u7684\u5e94\u7528\u7279\u522b\u6709\u7528\u3002\u5982\u679c\u53ef\u4ee5\u4e0d\u8bbf\u95ee\u7d22\u5f15\u9875\uff0c\u800c\u662f\u76f4\u63a5\u8bbf\u95ee\u60f3\u8981\u7684\u90a3\u4e2a\u9875\u9762\uff0c\u4ed6\u4eec\u591a\u534a\u4f1a\u7b11\u9010\u989c\u5f00\u800c\u518d\u5ea6\u5149\u987e\u3002 \u5982\u4e0a\u6240\u89c1\uff0c route() \u88c5\u9970\u5668\u628a\u4e00\u4e2a\u51fd\u6570\u7ed1\u5b9a\u5230\u5bf9\u5e94\u7684 URL \u4e0a\u3002\u4f46\u662f\uff0c\u4e0d\u4ec5\u5982\u6b64\uff01\u4f60\u53ef\u4ee5\u6784\u9020\u542b\u6709\u52a8\u6001\u90e8\u5206\u7684 URL\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e00\u4e2a\u51fd\u6570\u4e0a\u9644\u7740\u591a\u4e2a\u89c4\u5219\u3002 \u8fd9\u91cc\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u4f8b\u5b50: @app . route ( '/' ) def index (): return 'Index Page' @app . route ( '/hello' ) def hello (): return 'Hello World' URL\u4f20\u53c2 \u00b6 \u8981\u7ed9 URL \u6dfb\u52a0\u53d8\u91cf\u90e8\u5206\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u7279\u6b8a\u7684\u5b57\u6bb5\u6807\u8bb0\u4e3a <variable_name> \uff0c \u8fd9\u4e2a\u90e8\u5206\u5c06\u4f1a\u4f5c\u4e3a\u547d\u540d\u53c2\u6570\u4f20\u9012\u5230\u4f60\u7684\u51fd\u6570\u3002\u89c4\u5219\u53ef\u4ee5\u7528 <converter:variable_name> \u6307\u5b9a\u4e00\u4e2a\u53ef\u9009\u7684\u8f6c\u6362\u5668\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4e0d\u9519\u7684\u4f8b\u5b50: @app . route ( '/user/<username>' ) def show_user_profile ( username ): # show the user profile for that user return 'User %s ' % username @app . route ( '/post/<int:post_id>' ) def show_post ( post_id ): # show the post with the given id, the id is an integer return 'Post %d ' % post_id \u8f6c\u6362\u5668\u6709\u4e0b\u9762\u51e0\u79cd\uff1a int \u63a5\u53d7\u6574\u6570 float \u540c int \uff0c\u4f46\u662f\u63a5\u53d7\u6d6e\u70b9\u6570 path \u548c\u9ed8\u8ba4\u7684\u76f8\u4f3c\uff0c\u4f46\u4e5f\u63a5\u53d7\u659c\u7ebf \u552f\u4e00 URL / \u91cd\u5b9a\u5411\u884c\u4e3a \u00b6 Flask \u7684 URL \u89c4\u5219\u57fa\u4e8e Werkzeug \u7684\u8def\u7531\u6a21\u5757\u3002\u8fd9\u4e2a\u6a21\u5757\u80cc\u540e\u7684\u601d\u60f3\u662f\u57fa\u4e8e Apache \u4ee5\u53ca\u66f4\u65e9\u7684 HTTP \u670d\u52a1\u5668\u4e3b\u5f20\u7684\u5148\u4f8b\uff0c\u4fdd\u8bc1\u4f18\u96c5\u4e14\u552f\u4e00\u7684 URL\u3002 \u4ee5\u8fd9\u4e24\u4e2a\u89c4\u5219\u4e3a\u4f8b: @app . route ( '/projects/' ) def projects (): return 'The project page' @app . route ( '/about' ) def about (): return 'The about page' \u867d\u7136\u5b83\u4eec\u770b\u8d77\u6765\u7740\u5b9e\u76f8\u4f3c\uff0c\u4f46\u5b83\u4eec\u7ed3\u5c3e\u659c\u7ebf\u7684\u4f7f\u7528\u5728 URL \u5b9a\u4e49 \u4e2d\u4e0d\u540c\u3002 \u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d\uff0c\u6307\u5411 projects \u7684\u89c4\u8303 URL \u5c3e\u7aef\u6709\u4e00\u4e2a\u659c\u7ebf\u3002\u8fd9\u79cd\u611f\u89c9\u5f88\u50cf\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u5939\u3002\u8bbf\u95ee\u4e00\u4e2a\u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u88ab Flask \u91cd\u5b9a\u5411\u5230\u5e26\u659c\u7ebf\u7684\u89c4\u8303 URL \u53bb\u3002 \u7136\u800c\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684 URL \u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\uff0c\u7c7b\u4f3c UNIX-like \u7cfb\u7edf\u4e0b\u7684\u6587\u4ef6\u7684\u8def\u5f84\u540d\u3002\u8bbf\u95ee\u7ed3\u5c3e\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u4ea7\u751f\u4e00\u4e2a 404 \u201cNot Found\u201d \u9519\u8bef\u3002 \u8fd9\u4e2a\u884c\u4e3a\u4f7f\u5f97\u5728\u9057\u5fd8\u5c3e\u659c\u7ebf\u65f6\uff0c\u5141\u8bb8\u5173\u8054\u7684 URL \u63a5\u4efb\u5de5\u4f5c\uff0c\u4e0e Apache \u548c\u5176\u5b83\u7684\u670d\u52a1\u5668\u7684\u884c\u4e3a\u5e76\u65e0\u4e8c\u5f02\u3002\u6b64\u5916\uff0c\u4e5f\u4fdd\u8bc1\u4e86 URL \u7684\u552f\u4e00\uff0c\u6709\u52a9\u4e8e\u907f\u514d\u641c\u7d22\u5f15\u64ce\u7d22\u5f15\u540c\u4e00\u4e2a\u9875\u9762\u4e24\u6b21\u3002 \u6784\u9020 URL \u00b6 \u5982\u679c Flask \u80fd\u5339\u914d URL\uff0c\u90a3\u4e48 Flask \u53ef\u4ee5\u751f\u6210\u5b83\u4eec\u5417\uff1f\u5f53\u7136\u53ef\u4ee5\u3002\u4f60\u53ef\u4ee5\u7528 url_for() \u6765\u7ed9\u6307\u5b9a\u7684\u51fd\u6570\u6784\u9020 URL\u3002\u5b83\u63a5\u53d7\u51fd\u6570\u540d\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4e5f\u63a5\u53d7\u5bf9\u5e94 URL \u89c4\u5219\u7684\u53d8\u91cf\u90e8\u5206\u7684\u547d\u540d\u53c2\u6570\u3002\u672a\u77e5\u53d8\u91cf\u90e8\u5206\u4f1a\u6dfb\u52a0\u5230 URL \u672b\u5c3e\u4f5c\u4e3a\u67e5\u8be2\u53c2\u6570\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: >>> from flask import Flask , url_for >>> app = Flask ( __name__ ) >>> @app . route ( '/' ) ... def index (): pass ... >>> @app . route ( '/login' ) ... def login (): pass ... >>> @app . route ( '/user/<username>' ) ... def profile ( username ): pass ... >>> with app . test_request_context (): ... print url_for ( 'index' ) ... print url_for ( 'login' ) ... print url_for ( 'login' , next = '/' ) ... print url_for ( 'profile' , username = 'John Doe' ) ... / / login / login ? next =/ / user / John % 20 Doe \uff08\u8fd9\u91cc\u4e5f\u7528\u5230\u4e86 test_request_context() \u65b9\u6cd5\uff0c\u4e0b\u9762\u4f1a\u89e3\u91ca\u3002\u5373\u4f7f\u6211\u4eec\u6b63\u5728\u901a\u8fc7 Python \u7684 shell \u8fdb\u884c\u4ea4\u4e92\uff0c\u5b83\u4f9d\u7136\u4f1a\u544a\u8bc9 Flask \u8981\u8868\u73b0\u4e3a\u6b63\u5728\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u89e3\u91ca\u3002 \u73af\u5883\u5c40\u90e8\u53d8\u91cf \uff09 \u4e3a\u4ec0\u4e48\u4f60\u8981\u6784\u5efa URL \u800c\u975e\u5728\u6a21\u677f\u4e2d\u786c\u7f16\u7801\uff1f\u8fd9\u91cc\u6709\u4e09\u4e2a\u7edd\u5999\u7684\u7406\u7531\uff1a \u53cd\u5411\u6784\u5efa\u901a\u5e38\u6bd4\u786c\u7f16\u7801\u7684\u63cf\u8ff0\u6027\u66f4\u597d\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5141\u8bb8\u4f60\u4e00\u6b21\u6027\u4fee\u6539 URL\uff0c \u800c\u4e0d\u662f\u5230\u5904\u8fb9\u627e\u8fb9\u6539\u3002 URL \u6784\u5efa\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\u548c Unicode \u6570\u636e\uff0c\u514d\u53bb\u4f60\u5f88\u591a\u9ebb\u70e6\u3002 \u5982\u679c\u4f60\u7684\u5e94\u7528\u4e0d\u4f4d\u4e8e URL \u7684\u6839\u8def\u5f84\uff08\u6bd4\u5982\uff0c\u5728 /myapplication \u4e0b\uff0c\u800c\u4e0d\u662f / \uff09\uff0c url_for() \u4f1a\u59a5\u5584\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002 HTTP \u65b9\u6cd5 \u00b6 HTTP \uff08\u4e0e Web \u5e94\u7528\u4f1a\u8bdd\u7684\u534f\u8bae\uff09\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u8bbf\u95ee URL \u65b9\u6cd5\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8def\u7531\u53ea\u56de\u5e94 GET \u8bf7\u6c42\uff0c\u4f46\u662f\u901a\u8fc7 route() \u88c5\u9970\u5668\u4f20\u9012 methods \u53c2\u6570\u53ef\u4ee5\u6539\u53d8\u8fd9\u4e2a\u884c\u4e3a\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : do_the_login () else : show_the_login_form () \u5982\u679c\u5b58\u5728 GET \uff0c\u90a3\u4e48\u4e5f\u4f1a\u66ff\u4f60\u81ea\u52a8\u5730\u6dfb\u52a0 HEAD\uff0c\u65e0\u9700\u5e72\u9884\u3002\u5b83\u4f1a\u786e\u4fdd\u9075\u7167 HTTP RFC \uff08\u63cf\u8ff0 HTTP \u534f\u8bae\u7684\u6587\u6863\uff09\u5904\u7406 HEAD \u8bf7\u6c42\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5b8c\u5168\u5ffd\u7565\u8fd9\u90e8\u5206\u7684 HTTP \u89c4\u8303\u3002\u540c\u6837\uff0c\u81ea\u4ece Flask 0.6 \u8d77\uff0c \u4e5f\u5b9e\u73b0\u4e86 OPTIONS \u7684\u81ea\u52a8\u5904\u7406\u3002 \u4f60\u4e0d\u77e5\u9053\u4e00\u4e2a HTTP \u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u8fd9\u91cc\u4f1a\u7b80\u8981\u4ecb\u7ecd HTTP \u65b9\u6cd5\u548c\u5b83\u4eec\u4e3a\u4ec0\u4e48\u91cd\u8981\uff1a HTTP \u65b9\u6cd5\uff08\u4e5f\u7ecf\u5e38\u88ab\u53eb\u505a\u201c\u8c13\u8bcd\u201d\uff09\u544a\u77e5\u670d\u52a1\u5668\uff0c\u5ba2\u6237\u7aef\u60f3\u5bf9\u8bf7\u6c42\u7684\u9875\u9762 \u505a \u4e9b\u4ec0\u4e48\u3002\u4e0b\u9762\u7684\u90fd\u662f\u975e\u5e38\u5e38\u89c1\u7684\u65b9\u6cd5\uff1a GET\uff1a\u6d4f\u89c8\u5668\u544a\u77e5\u670d\u52a1\u5668\uff1a\u53ea \u83b7\u53d6 \u9875\u9762\u4e0a\u7684\u4fe1\u606f\u5e76\u53d1\u7ed9\u6211\u3002\u8fd9\u662f\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u3002 HEAD\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u6b32\u83b7\u53d6\u4fe1\u606f\uff0c\u4f46\u662f\u53ea\u5173\u5fc3 \u6d88\u606f\u5934 \u3002\u5e94\u7528\u5e94\u50cf\u5904\u7406 GET \u8bf7\u6c42\u4e00\u6837\u6765\u5904\u7406\u5b83\uff0c\u4f46\u662f\u4e0d\u5206\u53d1\u5b9e\u9645\u5185\u5bb9\u3002\u5728 Flask \u4e2d\u4f60\u5b8c\u5168\u65e0\u9700 \u4eba\u5de5 \u5e72\u9884\uff0c\u5e95\u5c42\u7684 Werkzeug \u5e93\u5df2\u7ecf\u66ff\u4f60\u6253\u70b9\u597d\u4e86\u3002 POST\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u60f3\u5728 URL \u4e0a \u53d1\u5e03 \u65b0\u4fe1\u606f\u3002\u5e76\u4e14\uff0c\u670d\u52a1\u5668\u5fc5\u987b\u786e\u4fdd \u6570\u636e\u5df2\u5b58\u50a8\u4e14\u4ec5\u5b58\u50a8\u4e00\u6b21\u3002\u8fd9\u662f HTML \u8868\u5355\u901a\u5e38\u53d1\u9001\u6570\u636e\u5230\u670d\u52a1\u5668\u7684\u65b9\u6cd5\u3002 PUT\uff1a\u7c7b\u4f3c POST \u4f46\u662f\u670d\u52a1\u5668\u53ef\u80fd\u89e6\u53d1\u4e86\u5b58\u50a8\u8fc7\u7a0b\u591a\u6b21\uff0c\u591a\u6b21\u8986\u76d6\u6389\u65e7\u503c\u3002\u4f60\u53ef \u80fd\u4f1a\u95ee\u8fd9\u6709\u4ec0\u4e48\u7528\uff0c\u5f53\u7136\u8fd9\u662f\u6709\u539f\u56e0\u7684\u3002\u8003\u8651\u5230\u4f20\u8f93\u4e2d\u8fde\u63a5\u53ef\u80fd\u4f1a\u4e22\u5931\uff0c\u5728 \u8fd9\u79cd \u60c5\u51b5\u4e0b\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u7cfb\u7edf\u53ef\u80fd\u5b89\u5168\u5730\u7b2c\u4e8c\u6b21\u63a5\u6536\u8bf7\u6c42\uff0c\u800c \u4e0d\u7834\u574f\u5176\u5b83\u4e1c\u897f\u3002\u56e0\u4e3a POST\u5b83\u53ea\u89e6\u53d1\u4e00\u6b21\uff0c\u6240\u4ee5\u7528 POST \u662f\u4e0d\u53ef\u80fd\u7684\u3002 DELETE\uff1a\u5220\u9664\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002 OPTIONS\uff1a\u7ed9\u5ba2\u6237\u7aef\u63d0\u4f9b\u4e00\u4e2a\u654f\u6377\u7684\u9014\u5f84\u6765\u5f04\u6e05\u8fd9\u4e2a URL \u652f\u6301\u54ea\u4e9b HTTP \u65b9\u6cd5\u3002 \u4ece Flask 0.6 \u5f00\u59cb\uff0c\u5b9e\u73b0\u4e86\u81ea\u52a8\u5904\u7406\u3002. \u9759\u6001\u6587\u4ef6 \u00b6 \u52a8\u6001 web \u5e94\u7528\u4e5f\u4f1a\u9700\u8981\u9759\u6001\u6587\u4ef6\uff0c\u901a\u5e38\u662f CSS \u548c JavaScript \u6587\u4ef6\u3002\u7406\u60f3\u72b6\u51b5\u4e0b\uff0c \u4f60\u5df2\u7ecf\u914d\u7f6e\u597d Web \u670d\u52a1\u5668\u6765\u63d0\u4f9b\u9759\u6001\u6587\u4ef6\uff0c\u4f46\u662f\u5728\u5f00\u53d1\u4e2d\uff0cFlask \u4e5f\u53ef\u4ee5\u505a\u5230\u3002 \u53ea\u8981\u5728\u4f60\u7684\u5305\u4e2d\u6216\u662f\u6a21\u5757\u7684\u6240\u5728\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a static \u7684\u6587\u4ef6\u5939\uff0c\u5728\u5e94\u7528\u4e2d\u4f7f\u7528 /static \u5373\u53ef\u8bbf\u95ee\u3002 \u7ed9\u9759\u6001\u6587\u4ef6\u751f\u6210 URL \uff0c\u4f7f\u7528\u7279\u6b8a\u7684 'static' \u7aef\u70b9\u540d: ```python url_for('static', filename='style.css') \u8fd9\u4e2a\u6587\u4ef6\u5e94\u8be5\u5b58\u50a8\u5728\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684 `static/style.css` \u3002 ## \u6a21\u677f\u6e32\u67d3 \u7528 Python \u751f\u6210 HTML \u5341\u5206\u65e0\u8da3\uff0c\u800c\u4e14\u76f8\u5f53\u7e41\u7410\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u624b\u52a8\u5bf9 HTML \u505a\u8f6c\u4e49\u6765\u4fdd\u8bc1\u5e94\u7528\u7684\u5b89\u5168\u3002\u4e3a\u6b64\uff0cFlask \u914d\u5907\u4e86 [Jinja2](http://jinja.pocoo.org/) \u6a21\u677f\u5f15\u64ce\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 [`render_template()`](http://docs.jinkan.org/docs/flask/api.html#flask.render_template) \u65b9\u6cd5\u6765\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9700\u8981\u505a\u7684\u4e00\u5207\u5c31\u662f\u5c06\u6a21\u677f\u540d\u548c\u4f60\u60f3\u4f5c\u4e3a\u5173\u952e\u5b57\u7684\u53c2\u6570\u4f20\u5165\u6a21\u677f\u7684\u53d8\u91cf\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c55\u793a\u5982\u4f55\u6e32\u67d3\u6a21\u677f\u7684\u7b80\u4f8b: ```python from flask import render_template @app.route('/hello/') @app.route('/hello/<name>') def hello(name=None): return render_template('hello.html', name=name) Flask \u4f1a\u5728 templates \u6587\u4ef6\u5939\u91cc\u5bfb\u627e\u6a21\u677f\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u662f\u4e2a\u6a21\u5757\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u5e94\u8be5\u4e0e\u6a21\u5757\u540c\u7ea7\uff1b\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u5305\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5939\u4f5c\u4e3a\u5305\u7684\u5b50\u76ee\u5f55: \u60c5\u51b5 1 : \u6a21\u5757: /application.py /templates /hello.html \u60c5\u51b5 2 : \u5305: /application /__init__.py /templates /hello.html \u5173\u4e8e\u6a21\u677f\uff0c\u4f60\u53ef\u4ee5\u53d1\u6325 Jinja2 \u6a21\u677f\u7684\u5168\u90e8\u5b9e\u4f8b\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u89c1 Jinja2 \u6a21\u677f\u6587\u6863 \u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u6a21\u677f\u5b9e\u4f8b\uff1a <!doctype html> < title > Hello from Flask </ title > {% if name %} < h1 > Hello {{ name }}! </ h1 > {% else %} < h1 > Hello World! </ h1 > {% endif %} \u5728\u6a21\u677f\u91cc\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8bbf\u95ee request \u3001 session \u548c g [ 1] \u5bf9\u8c61\uff0c \u4ee5\u53ca get_flashed_messages() \u51fd\u6570\u3002 \u6a21\u677f\u7ee7\u627f\u8ba9\u6a21\u677f\u7528\u8d77\u6765\u76f8\u5f53\u987a\u624b\u3002\u5982\u6b32\u4e86\u89e3\u7ee7\u627f\u7684\u5de5\u4f5c\u673a\u7406\uff0c\u8bf7\u8df3\u8f6c\u5230 \u6a21\u677f\u7ee7\u627f \u6a21\u5f0f\u7684\u6587\u6863\u3002\u6700\u8d77\u7801\uff0c\u6a21\u677f\u7ee7\u627f\u80fd\u4f7f\u7279\u5b9a\u5143\u7d20 \uff08\u6bd4\u5982\u9875\u7709\u3001\u5bfc\u822a\u680f\u548c\u9875\u811a\uff09\u53ef\u4ee5\u51fa\u73b0\u5728\u6240\u6709\u7684\u9875\u9762\u3002 \u81ea\u52a8\u8f6c\u4e49\u529f\u80fd\u9ed8\u8ba4\u662f\u5f00\u542f\u7684\uff0c\u6240\u4ee5\u5982\u679c name \u5305\u542b HTML \uff0c\u5b83\u5c06\u4f1a\u88ab\u81ea\u52a8\u8f6c\u4e49\u3002\u5982\u679c\u4f60\u80fd\u4fe1\u4efb\u4e00\u4e2a\u53d8\u91cf\uff0c\u5e76\u4e14\u4f60\u77e5\u9053\u5b83\u662f\u5b89\u5168\u7684\uff08\u4f8b\u5982\u4e00\u4e2a\u6a21\u5757\u628a Wiki \u6807\u8bb0\u8f6c\u6362\u4e3a HTML\uff09\uff0c\u4f60\u53ef\u4ee5\u7528 Markup \u7c7b\u6216 |safe \u8fc7\u6ee4\u5668\u5728\u6a21\u677f\u4e2d\u628a\u5b83\u6807\u8bb0\u4e3a\u5b89\u5168\u7684\u3002\u5728 Jinja 2 \u6587\u6863\u4e2d\uff0c\u4f60\u4f1a\u770b\u5230\u66f4\u591a\u7684\u4f8b\u5b50\u3002 \u8fd9\u91cc\u662f\u4e00\u4e2a Markup \u7c7b\u5982\u4f55\u4f7f\u7528\u7684\u7b80\u5355\u4ecb\u7ecd: >>> from flask import Markup >>> Markup ( '<strong>Hello %s !</strong>' ) % '<blink>hacker</blink>' Markup ( u '<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>' ) >>> Markup . escape ( '<blink>hacker</blink>' ) Markup ( u '&lt;blink&gt;hacker&lt;/blink&gt;' ) >>> Markup ( '<em>Marked up</em> &raquo; HTML' ) . striptags () u 'Marked up \\xbb HTML' \u5728 0.5 \u7248\u66f4\u6539: \u81ea\u52a8\u8f6c\u4e49\u4e0d\u518d\u5728\u6240\u6709\u6a21\u677f\u4e2d\u542f\u7528\u3002\u4e0b\u5217\u6269\u5c55\u540d\u7684\u6a21\u677f\u4f1a\u89e6\u53d1\u81ea\u52a8\u8f6c\u4e49\uff1a .html \u3001 .htm \u3001 .xml \u3001 .xhtml \u3002\u4ece\u5b57\u7b26\u4e32\u52a0\u8f7d\u7684\u6a21\u677f\u4f1a\u7981\u7528\u81ea\u52a8\u8f6c\u4e49\u3002 [ 1] \u4e0d\u786e\u5b9a g \u5bf9\u8c61\u662f\u4ec0\u4e48\uff1f\u5b83\u5141\u8bb8\u4f60\u6309\u9700\u5b58\u50a8\u4fe1\u606f\uff0c \u67e5\u770b\uff08 g \uff09\u5bf9\u8c61\u7684\u6587\u6863\u548c \u5728 Flask \u4e2d\u4f7f\u7528 SQLite 3 \u7684\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002 \u8bbf\u95ee\u8bf7\u6c42\u6570\u636e \u00b6 \u5bf9\u4e8e Web \u5e94\u7528\uff0c\u4e0e\u5ba2\u6237\u7aef\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u7684\u6570\u636e\u4ea4\u4e92\u81f3\u5173\u91cd\u8981\u3002\u5728 Flask \u4e2d\u7531\u5168\u5c40\u7684 request \u5bf9\u8c61\u6765\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\u5982\u679c\u4f60\u6709\u4e00\u5b9a\u7684 Python \u7ecf\u9a8c\uff0c\u4f60\u4f1a\u597d\u5947\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u662f\u5168\u5c40\u7684\uff0c\u4e3a\u4ec0\u4e48 Flask \u8fd8\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002\u7b54\u6848\u662f\u73af\u5883\u4f5c\u7528\u57df\uff1a \u73af\u5883\u5c40\u90e8\u53d8\u91cf \u00b6 \u5185\u5e55 \u5982\u679c\u4f60\u60f3\u7406\u89e3\u5176\u5de5\u4f5c\u673a\u5236\u53ca\u5982\u4f55\u5229\u7528\u73af\u5883\u5c40\u90e8\u53d8\u91cf\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u8bf7\u9605\u8bfb\u6b64\u8282\uff0c\u5426\u5219\u53ef\u8df3\u8fc7\u3002 Flask \u4e2d\u7684\u67d0\u4e9b\u5bf9\u8c61\u662f\u5168\u5c40\u5bf9\u8c61\uff0c\u4f46\u5374\u4e0d\u662f\u901a\u5e38\u7684\u90a3\u79cd\u3002\u8fd9\u4e9b\u5bf9\u8c61\u5b9e\u9645\u4e0a\u662f\u7279\u5b9a\u73af\u5883\u7684\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7406\u3002\u867d\u7136\u5f88\u62d7\u53e3\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f88\u5bb9\u6613\u7406\u89e3\u3002 \u60f3\u8c61\u4e00\u4e0b\u5904\u7406\u7ebf\u7a0b\u7684\u73af\u5883\u3002\u4e00\u4e2a\u8bf7\u6c42\u4f20\u5165\uff0cWeb \u670d\u52a1\u5668\u51b3\u5b9a\u751f\u6210\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff08 \u6216\u8005\u522b\u7684\u4ec0\u4e48\u4e1c\u897f\uff0c\u53ea\u8981\u8fd9\u4e2a\u5e95\u5c42\u7684\u5bf9\u8c61\u53ef\u4ee5\u80dc\u4efb\u5e76\u53d1\u7cfb\u7edf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7ebf\u7a0b\uff09\u3002 \u5f53 Flask \u5f00\u59cb\u5b83\u5185\u90e8\u7684\u8bf7\u6c42\u5904\u7406\u65f6\uff0c\u5b83\u8ba4\u5b9a\u5f53\u524d\u7ebf\u7a0b\u662f\u6d3b\u52a8\u7684\u73af\u5883\uff0c\u5e76\u7ed1\u5b9a\u5f53\u524d\u7684\u5e94\u7528\u548c WSGI \u73af\u5883\u5230\u90a3\u4e2a\u73af\u5883\u4e0a\uff08\u7ebf\u7a0b\uff09\u3002\u5b83\u7684\u5b9e\u73b0\u5f88\u5de7\u5999\uff0c\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u5e94\u7528\u8c03\u7528\u53e6\u4e00\u4e2a\u5e94\u7528\u65f6\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002 \u6240\u4ee5\uff0c\u8fd9\u5bf9\u4f60\u6765\u8bf4\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u9664\u975e\u4f60\u8981\u505a\u7c7b\u4f3c\u5355\u5143\u6d4b\u8bd5\u7684\u4e1c\u897f\uff0c\u5426\u5219\u4f60\u57fa\u672c\u4e0a\u53ef\u4ee5\u5b8c\u5168\u65e0\u89c6\u5b83\u3002\u4f60\u4f1a\u53d1\u73b0\u4f9d\u8d56\u4e8e\u4e00\u6bb5\u8bf7\u6c42\u5bf9\u8c61\u7684\u4ee3\u7801\uff0c\u56e0\u6ca1\u6709\u8bf7\u6c42\u5bf9\u8c61\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u81ea\u884c\u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u5e76\u4e14\u628a\u5b83\u7ed1\u5b9a\u5230\u73af\u5883\u4e2d\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u7528 test_request_context() \u73af\u5883\u7ba1\u7406\u5668\u3002\u7ed3\u5408 with \u58f0\u660e\uff0c\u7ed1\u5b9a\u4e00\u4e2a\u6d4b\u8bd5\u8bf7\u6c42\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u4e0e\u4e4b\u4ea4\u4e92\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50: from flask import request with app . test_request_context ( '/hello' , method = 'POST' ): # now you can do something with the request until the # end of the with block, such as basic assertions: assert request . path == '/hello' assert request . method == 'POST' \u53e6\u4e00\u79cd\u53ef\u80fd\u662f\uff1a\u4f20\u9012\u6574\u4e2a WSGI \u73af\u5883\u7ed9 request_context() \u65b9\u6cd5: from flask import request with app . request_context ( environ ): assert request . method == 'POST' \u8bf7\u6c42\u5bf9\u8c61 \u00b6 API \u7ae0\u8282\u5bf9\u8bf7\u6c42\u5bf9\u8c61\u4f5c\u4e86\u8be6\u5c3d\u9610\u8ff0\uff08\u53c2\u89c1 request \uff09\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e0d\u4f1a\u8d58\u8ff0\u3002\u6b64\u5904\u5bbd\u6cdb\u4ecb\u7ecd\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u3002\u9996\u5148\u4ece flask \u6a21\u5757\u91cc\u5bfc\u5165\u5b83: from flask import request \u5f53\u524d\u8bf7\u6c42\u7684 HTTP \u65b9\u6cd5\u53ef\u901a\u8fc7 method \u5c5e\u6027\u6765\u8bbf\u95ee\u3002\u901a\u8fc7:attr:~flask.request.form \u5c5e\u6027\u6765\u8bbf\u95ee\u8868\u5355\u6570\u636e\uff08 POST \u6216 PUT \u8bf7\u6c42\u63d0\u4ea4\u7684\u6570\u636e\uff09\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u7528\u5230\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e24\u4e2a\u5c5e\u6027\u7684\u5b8c\u6574\u5b9e\u4f8b: @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): error = None if request . method == 'POST' : if ( request . form [ 'username' ], request . form [ 'password' ]): return log_the_user_in ( request . form [ 'username' ]) else : error = 'Invalid username/password' # the code below is executed if the request method # was GET or the credentials were invalid return render_template ( 'login.html' , error = error ) \u5f53\u8bbf\u95ee form \u5c5e\u6027\u4e2d\u7684\u4e0d\u5b58\u5728\u7684\u952e\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4f1a\u629b\u51fa\u4e00\u4e2a\u7279\u6b8a\u7684 KeyError \u5f02\u5e38\u3002\u4f60\u53ef\u4ee5\u50cf\u6355\u83b7\u6807\u51c6\u7684 KeyError \u4e00\u6837\u6765\u6355\u83b7\u5b83\u3002 \u5982\u679c\u4f60\u4e0d\u8fd9\u4e48\u505a\uff0c\u5b83\u4f1a\u663e\u793a\u4e00\u4e2a HTTP 400 Bad Request \u9519\u8bef\u9875\u9762\u3002\u6240\u4ee5\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\u4f60\u5e76\u4e0d\u9700\u8981\u5e72\u9884\u8fd9\u4e2a\u884c\u4e3a\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7 args \u5c5e\u6027\u6765\u8bbf\u95ee URL \u4e2d\u63d0\u4ea4\u7684\u53c2\u6570 \uff08 ?key=value \uff09: searchword = request . args . get ( 'q' , '' ) \u6211\u4eec\u63a8\u8350\u7528 get \u6765\u8bbf\u95ee URL \u53c2\u6570\u6216\u6355\u83b7 KeyError \uff0c\u56e0\u4e3a\u7528\u6237\u53ef\u80fd\u4f1a\u4fee\u6539 URL\uff0c\u5411\u4ed6\u4eec\u5c55\u73b0\u4e00\u4e2a 400 bad request \u9875\u9762\u4f1a\u5f71\u54cd\u7528\u6237\u4f53\u9a8c\u3002 \u6587\u4ef6\u4e0a\u4f20 \u00b6 \u7528 Flask \u5904\u7406\u6587\u4ef6\u4e0a\u4f20\u5f88\u7b80\u5355\u3002\u53ea\u8981\u786e\u4fdd\u4f60\u6ca1\u5fd8\u8bb0\u5728 HTML \u8868\u5355\u4e2d\u8bbe\u7f6e enctype=\"multipart/form-data\" \u5c5e\u6027\uff0c\u4e0d\u7136\u4f60\u7684\u6d4f\u89c8\u5668\u6839\u672c\u4e0d\u4f1a\u53d1\u9001\u6587\u4ef6\u3002 \u5df2\u4e0a\u4f20\u7684\u6587\u4ef6\u5b58\u50a8\u5728\u5185\u5b58\u6216\u662f\u6587\u4ef6\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u4e34\u65f6\u7684\u4f4d\u7f6e\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u5bf9\u8c61\u7684 files \u5c5e\u6027\u8bbf\u95ee\u5b83\u4eec\u3002\u6bcf\u4e2a\u4e0a\u4f20\u7684\u6587\u4ef6\u90fd\u4f1a\u5b58\u50a8\u5728\u8fd9\u4e2a\u5b57\u5178\u91cc\u3002\u5b83\u8868\u73b0\u8fd1\u4e4e\u4e3a\u4e00\u4e2a\u6807\u51c6\u7684 Python file \u5bf9\u8c61\uff0c\u4f46\u5b83\u8fd8\u6709\u4e00\u4e2a save() \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8\u4f60\u628a\u6587\u4ef6\u4fdd\u5b58\u5230\u670d\u52a1\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u7528\u5b83\u4fdd\u5b58\u6587\u4ef6\u7684\u4f8b\u5b50: from flask import request @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/uploaded_file.txt' ) ... \u5982\u679c\u4f60\u60f3\u77e5\u9053\u4e0a\u4f20\u524d\u6587\u4ef6\u5728\u5ba2\u6237\u7aef\u7684\u6587\u4ef6\u540d\u662f\u4ec0\u4e48\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee filename \u5c5e\u6027\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c \u6c38\u8fdc\u4e0d\u8981\u4fe1\u4efb\u8fd9\u4e2a\u503c\uff0c\u8fd9\u4e2a\u503c\u662f\u53ef\u4ee5\u4f2a\u9020\u7684\u3002\u5982\u679c\u4f60\u8981\u628a\u6587\u4ef6\u6309\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u6587\u4ef6\u540d\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u90a3\u4e48\u8bf7\u628a\u5b83\u4f20\u9012\u7ed9 Werkzeug \u63d0\u4f9b\u7684 secure_filename() \u51fd\u6570: from flask import request from werkzeug import secure_filename @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/' + secure_filename ( f . filename )) ... Cookies \u00b6 \u4f60\u53ef\u4ee5\u901a\u8fc7 cookies \u5c5e\u6027\u6765\u8bbf\u95ee Cookies\uff0c\u7528\u54cd\u5e94\u5bf9\u8c61\u7684 set_cookie \u65b9\u6cd5\u6765\u8bbe\u7f6e Cookies\u3002\u8bf7\u6c42\u5bf9\u8c61\u7684 cookies \u5c5e\u6027\u662f\u4e00\u4e2a\u5185\u5bb9\u4e3a\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u6240\u6709 Cookies \u7684\u5b57\u5178\u3002\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u4f1a\u8bdd\uff0c\u8bf7\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528 Cookies\uff0c\u8bf7\u53c2\u8003 \u4f1a\u8bdd \u4e00\u8282\u3002\u5728 Flask \u4e2d\uff0c\u5df2\u7ecf\u6ce8\u610f\u5904\u7406\u4e86\u4e00\u4e9b Cookies \u5b89\u5168\u7ec6\u8282\u3002 \u8bfb\u53d6 cookies: from flask import request @app . route ( '/' ) def index (): username = request . cookies . get ( 'username' ) # use cookies.get(key) instead of cookies[key] to not get a # KeyError if the cookie is missing. \u5b58\u50a8 cookies: from flask import make_response @app . route ( '/' ) def index (): resp = make_response ( render_template ( ... )) resp . set_cookie ( 'username' , 'the username' ) return resp \u53ef\u6ce8\u610f\u5230\u7684\u662f\uff0cCookies \u662f\u8bbe\u7f6e\u5728\u54cd\u5e94\u5bf9\u8c61\u4e0a\u7684\u3002\u7531\u4e8e\u901a\u5e38\u89c6\u56fe\u51fd\u6570\u53ea\u662f\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u4e4b\u540e Flask \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u4f60\u8981\u663e\u5f0f\u5730\u8f6c\u6362\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u7136\u540e\u518d\u8fdb\u884c\u4fee\u6539\u3002 \u6709\u65f6\u5019\u4f60\u60f3\u8bbe\u7f6e Cookie\uff0c\u4f46\u54cd\u5e94\u5bf9\u8c61\u4e0d\u80fd\u918b\u5728\u3002\u8fd9\u53ef\u4ee5\u5229\u7528 \u5ef6\u8fdf\u8bf7\u6c42\u56de\u8c03 \u6a21\u5f0f\u5b9e\u73b0\u3002 \u4e3a\u6b64\uff0c\u4e5f\u53ef\u4ee5\u9605\u8bfb \u5173\u4e8e\u54cd\u5e94 \u3002 \u91cd\u5b9a\u5411\u548c\u9519\u8bef \u00b6 \u4f60\u53ef\u4ee5\u7528 redirect() \u51fd\u6570\u628a\u7528\u6237\u91cd\u5b9a\u5411\u5230\u5176\u5b83\u5730\u65b9\u3002\u653e\u5f03\u8bf7\u6c42\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\uff0c\u7528 abort() \u51fd\u6570\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u5b83\u4eec\u5982\u4f55\u4f7f\u7528\u7684\u4f8b\u5b50: from flask import abort , redirect , url_for @app . route ( '/' ) def index (): return redirect ( url_for ( 'login' )) @app . route ( '/login' ) def login (): abort ( 401 ) this_is_never_executed () \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u65e0\u610f\u4e49\u7684\u4f8b\u5b50\u56e0\u4e3a\u7528\u6237\u4f1a\u4ece\u4e3b\u9875\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u4e0d\u80fd\u8bbf\u95ee\u7684\u9875\u9762 \uff08401 \u610f\u5473\u7740\u7981\u6b62\u8bbf\u95ee\uff09\uff0c\u4f46\u662f\u5b83\u5c55\u793a\u4e86\u91cd\u5b9a\u5411\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9519\u8bef\u4ee3\u7801\u4f1a\u663e\u793a\u4e00\u4e2a\u9ed1\u767d\u7684\u9519\u8bef\u9875\u9762\u3002\u5982\u679c\u4f60\u8981\u5b9a\u5236\u9519\u8bef\u9875\u9762\uff0c \u53ef\u4ee5\u4f7f\u7528 errorhandler() \u88c5\u9970\u5668: from flask import render_template @app . errorhandler ( 404 ) def page_not_found ( error ): return render_template ( 'page_not_found.html' ), 404 \u6ce8\u610f render_template() \u8c03\u7528\u4e4b\u540e\u7684 404 \u3002\u8fd9\u544a\u8bc9 Flask\uff0c\u8be5\u9875\u7684\u9519\u8bef\u4ee3\u7801\u662f 404 \uff0c\u5373\u6ca1\u6709\u627e\u5230\u3002\u9ed8\u8ba4\u4e3a 200\uff0c\u4e5f\u5c31\u662f\u4e00\u5207\u6b63\u5e38\u3002 \u5173\u4e8e\u54cd\u5e94 \u00b6 \u89c6\u56fe\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u4e3a\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c \u5b83\u88ab\u8f6c\u6362\u4e3a\u8be5\u5b57\u7b26\u4e32\u4e3a\u4e3b\u4f53\u7684\u3001\u72b6\u6001\u7801\u4e3a 200 OK``\u7684 \u3001 MIME \u7c7b\u578b\u662f ``text/html \u7684\u54cd\u5e94\u5bf9\u8c61\u3002Flask \u628a\u8fd4\u56de\u503c\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u7684\u903b\u8f91\u662f\u8fd9\u6837\uff1a \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u5b83\u4f1a\u4ece\u89c6\u56fe\u76f4\u63a5\u8fd4\u56de\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u54cd\u5e94\u5bf9\u8c61\u4f1a\u7528\u5b57\u7b26\u4e32\u6570\u636e\u548c\u9ed8\u8ba4\u53c2\u6570\u521b\u5efa\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u4e14\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u63d0\u4f9b\u989d\u5916\u7684\u4fe1\u606f\u3002\u8fd9\u6837\u7684\u5143\u7ec4\u5fc5\u987b\u662f (response, status, headers) \u7684\u5f62\u5f0f\uff0c\u4e14\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u3002 status \u503c\u4f1a\u8986\u76d6\u72b6\u6001\u4ee3\u7801\uff0c headers \u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u8868\u6216\u5b57\u5178\uff0c\u4f5c\u4e3a\u989d\u5916\u7684\u6d88\u606f\u6807\u5934\u503c\u3002 \u5982\u679c\u4e0a\u8ff0\u6761\u4ef6\u5747\u4e0d\u6ee1\u8db3\uff0c Flask \u4f1a\u5047\u8bbe\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u3002 \u5982\u679c\u4f60\u60f3\u5728\u89c6\u56fe\u91cc\u64cd\u7eb5\u4e0a\u8ff0\u6b65\u9aa4\u7ed3\u679c\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u3002 \u8b6c\u5982\u4f60\u6709\u8fd9\u6837\u4e00\u4e2a\u89c6\u56fe: @app . errorhandler ( 404 ) def not_found ( error ): return render_template ( 'error.html' ), 404 \u4f60\u53ea\u9700\u8981\u628a\u8fd4\u56de\u503c\u8868\u8fbe\u5f0f\u4f20\u9012\u7ed9 make_response() \uff0c\u83b7\u53d6\u7ed3\u679c\u5bf9\u8c61\u5e76\u4fee\u6539\uff0c\u7136\u540e\u518d\u8fd4\u56de\u5b83: @app . errorhandler ( 404 ) def not_found ( error ): resp = make_response ( render_template ( 'error.html' ), 404 ) resp . headers [ 'X-Something' ] = 'A value' return resp \u4f1a\u8bdd \u00b6 \u9664\u8bf7\u6c42\u5bf9\u8c61\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a session \u5bf9\u8c61\u3002\u5b83\u5141\u8bb8\u4f60\u5728\u4e0d\u540c\u8bf7\u6c42\u95f4\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u7684\u4fe1\u606f\u3002\u5b83\u662f\u5728 Cookies \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u5bf9 Cookies \u8fdb\u884c\u5bc6\u94a5\u7b7e\u540d\u3002\u8fd9\u610f\u5473\u7740\u7528\u6237\u53ef\u4ee5\u67e5\u770b\u4f60 Cookie \u7684\u5185\u5bb9\uff0c\u4f46\u5374\u4e0d\u80fd\u4fee\u6539\u5b83\uff0c\u9664\u975e\u7528\u6237\u77e5\u9053\u7b7e\u540d\u7684\u5bc6\u94a5\u3002 \u8981\u4f7f\u7528\u4f1a\u8bdd\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5bc6\u94a5\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4f1a\u8bdd\u5982\u4f55\u5de5\u4f5c: from flask import Flask , session , redirect , url_for , escape , request app = Flask ( __name__ ) @app . route ( '/' ) def index (): if 'username' in session : return 'Logged in as %s ' % escape ( session [ 'username' ]) return 'You are not logged in' @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : session [ 'username' ] = request . form [ 'username' ] return redirect ( url_for ( 'index' )) return ''' <form action=\"\" method=\"post\"> <p><input type=text name=username> <p><input type=submit value=Login> </form> ''' @app . route ( '/logout' ) def logout (): # remove the username from the session if it's there session . pop ( 'username' , None ) return redirect ( url_for ( 'index' )) # set the secret key. keep this really secret: app . secret_key = 'A0Zr98j/3yX R~XHH!jmN]LWX/,?RT' \u8fd9\u91cc\u63d0\u5230\u7684 escape() \u53ef\u4ee5\u5728\u4f60\u6a21\u677f\u5f15\u64ce\u5916\u505a\u8f6c\u4e49\uff08\u5982\u540c\u672c\u4f8b\uff09\u3002 \u5982\u4f55\u751f\u6210\u5f3a\u58ee\u7684\u5bc6\u94a5 \u968f\u673a\u7684\u95ee\u9898\u5728\u4e8e\u5f88\u96be\u5224\u65ad\u4ec0\u4e48\u662f\u771f\u968f\u673a\u3002\u4e00\u4e2a\u5bc6\u94a5\u5e94\u8be5\u8db3\u591f\u968f\u673a\u3002\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u57fa\u4e8e\u4e00\u4e2a\u5bc6\u94a5\u968f\u673a\u751f\u6210\u5668\u6765\u751f\u6210\u6f02\u4eae\u7684\u968f\u673a\u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u7528\u6765\u505a\u5bc6\u94a5: >>> import os >>> os . urandom ( 24 ) ' \\xfd {H \\xe5 < \\x95\\xf9\\xe3\\x96 .5 \\xd1\\x01 O<! \\xd5\\xa2\\xa0\\x9f R\" \\xa1\\xa8 ' \u628a\u8fd9\u4e2a\u503c\u590d\u5236\u7c98\u8d34\u8fdb\u4f60\u7684\u4ee3\u7801\u4e2d\uff0c\u4f60\u5c31\u6709\u4e86\u5bc6\u94a5\u3002 \u4f7f\u7528\u57fa\u4e8e cookie \u7684\u4f1a\u8bdd\u9700\u6ce8\u610f: Flask \u4f1a\u5c06\u4f60\u653e\u8fdb\u4f1a\u8bdd\u5bf9\u8c61\u7684\u503c\u5e8f\u5217\u5316\u81f3 Cookies\u3002\u5982\u679c\u4f60\u53d1\u73b0\u67d0\u4e9b\u503c\u5728\u8bf7\u6c42\u4e4b\u95f4\u5e76\u6ca1\u6709\u6301\u4e45\u5b58\u5728\uff0c\u7136\u800c\u786e\u5b9e\u5df2\u7ecf\u542f\u7528\u4e86 Cookies\uff0c\u4f46\u4e5f\u6ca1\u6709\u5f97\u5230\u660e\u786e\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u65f6\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u9875\u9762\u54cd\u5e94\u4e2d\u7684 Cookies \u7684\u5927\u5c0f\uff0c\u5e76\u4e0e Web \u6d4f\u89c8\u5668\u6240\u652f\u6301\u7684\u5927\u5c0f\u5bf9\u6bd4\u3002 \u6d88\u606f\u95ea\u73b0 \u00b6 \u53cd\u9988\uff0c\u662f\u826f\u597d\u7684\u5e94\u7528\u548c\u7528\u6237\u754c\u9762\u7684\u91cd\u8981\u6784\u6210\u3002\u5982\u679c\u7528\u6237\u5f97\u4e0d\u5230\u8db3\u591f\u7684\u53cd\u9988\uff0c\u4ed6\u4eec\u5f88\u53ef\u80fd\u5f00\u59cb\u538c\u6076\u8fd9\u4e2a\u5e94\u7528\u3002 Flask \u63d0\u4f9b\u4e86\u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u7ed9\u7528\u6237\u53cd\u9988\u3002 \u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\u901a\u5e38\u4f1a\u5728\u8bf7\u6c42\u7ed3\u675f\u65f6\u8bb0\u5f55\u4fe1\u606f\uff0c\u5e76\u5728\u4e0b\u4e00\u4e2a\uff08\u4e14\u4ec5\u5728\u4e0b\u4e00\u4e2a\uff09\u8bf7\u6c42\u4e2d\u8bbf\u95ee\u8bb0\u5f55\u7684\u4fe1\u606f\u3002\u5c55\u73b0\u8fd9\u4e9b\u6d88\u606f\u901a\u5e38\u7ed3\u5408\u8981\u6a21\u677f\u5e03\u5c40\u3002 \u4f7f\u7528 flash() \u65b9\u6cd5\u53ef\u4ee5\u95ea\u73b0\u4e00\u6761\u6d88\u606f\u3002\u8981\u64cd\u4f5c\u6d88\u606f\u672c\u8eab\uff0c\u8bf7\u4f7f\u7528 get_flashed_messages() \u51fd\u6570\uff0c\u5e76\u4e14\u5728\u6a21\u677f\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002\u5b8c\u6574\u7684\u4f8b\u5b50\u89c1 \u6d88\u606f\u95ea\u73b0 \u90e8\u5206\u3002 \u65e5\u5fd7\u8bb0\u5f55 \u00b6 0.3 \u65b0\u7248\u529f\u80fd. \u6709\u65f6\u5019\u4f60\u4f1a\u5904\u4e8e\u8fd9\u6837\u4e00\u79cd\u5883\u5730\uff0c\u4f60\u5904\u7406\u7684\u6570\u636e\u672c\u5e94\u8be5\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u6bd4\u5982\uff0c\u4f60\u4f1a\u6709\u4e00\u4e9b\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u4f46\u8bf7\u6c42\u663e\u7136\u662f\u7578\u5f62\u7684\u3002\u8fd9\u53ef\u80fd\u662f\u7528\u6237\u7be1\u6539\u4e86\u6570\u636e\uff0c\u6216\u662f\u5ba2\u6237\u7aef\u4ee3\u7801\u7684\u7c97\u5236\u6ee5\u9020\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6b63\u5e38\u5730\u8fd4\u56de 400 Bad Request \u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u6709\u65f6\u5019\u4e0d\u80fd\u8fd9\u4e48\u505a\uff0c\u5e76\u4e14\u8981\u8ba9\u4ee3\u7801\u7ee7\u7eed\u8fd0\u884c\u3002 \u4f60\u53ef\u80fd\u4f9d\u7136\u60f3\u8981\u8bb0\u5f55\u4e0b\uff0c\u662f\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u3002\u8fd9\u65f6\u65e5\u5fd7\u8bb0\u5f55\u5c31\u6d3e\u4e0a\u4e86\u7528\u573a\u3002\u4ece Flask 0.3 \u5f00\u59cb\uff0cFlask \u5c31\u5df2\u7ecf\u9884\u7f6e\u4e86\u65e5\u5fd7\u7cfb\u7edf\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u8c03\u7528\u65e5\u5fd7\u8bb0\u5f55\u7684\u4f8b\u5b50: app . logger . debug ( 'A value for debugging' ) app . logger . warning ( 'A warning occurred ( %d apples)' , 42 ) app . logger . error ( 'An error occurred' ) \u9644\u5e26\u7684 logger \u662f\u4e00\u4e2a\u6807\u51c6\u65e5\u5fd7\u7c7b Logger \uff0c\u6240\u4ee5\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605 logging \u7684\u6587\u6863 \u3002 \u6574\u5408 WSGI \u4e2d\u95f4\u4ef6 \u00b6 \u5982\u679c\u4f60\u60f3\u7ed9\u4f60\u7684\u5e94\u7528\u6dfb\u52a0 WSGI \u4e2d\u95f4\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5c01\u88c5\u5185\u90e8 WSGI \u5e94\u7528\u3002\u4f8b\u5982\u82e5\u662f\u4f60\u60f3\u7528 Werkzeug \u5305\u4e2d\u7684\u67d0\u4e2a\u4e2d\u95f4\u4ef6\u6765\u5e94\u4ed8 lighttpd \u4e2d\u7684 bugs \uff0c\u53ef\u4ee5\u8fd9\u6837\u505a: from werkzeug.contrib.fixers import LighttpdCGIRootFix app . wsgi_app = LighttpdCGIRootFix ( app . wsgi_app ) \u90e8\u7f72\u5230 Web \u670d\u52a1\u5668 \u00b6 \u51c6\u5907\u597d\u90e8\u7f72\u4f60\u7684 Flask \u5e94\u7528\u4e86\uff1f\u4f60\u53ef\u4ee5\u7acb\u5373\u90e8\u7f72\u5230\u6258\u7ba1\u5e73\u53f0\u6765\u5706\u6ee1\u5b8c\u6210\u5feb\u901f\u5165\u95e8\uff0c\u4ee5\u4e0b\u5382\u5546\u5747\u5411\u5c0f\u9879\u76ee\u63d0\u4f9b\u514d\u8d39\u7684\u65b9\u6848: \u5728 Heroku \u4e0a\u90e8\u7f72 Flask \u5728 dotCloud \u4e0a\u90e8\u7f72 Flask \u9644 Flask \u7684\u5177\u4f53\u8bf4\u660e \u6258\u7ba1 Flask \u5e94\u7528\u7684\u5176\u5b83\u9009\u62e9: \u5728 Webfaction \u4e0a\u90e8\u7f72 Flask \u5728 Google App Engine \u4e0a\u90e8\u7f72 Flask \u7528 Localtunnel \u5171\u4eab\u4f60\u7684\u672c\u5730\u670d\u52a1\u5668 \u5982\u679c\u4f60\u6709\u81ea\u5df1\u7684\u4e3b\u673a\uff0c\u5e76\u4e14\u51c6\u5907\u81ea\u5df1\u6258\u7ba1\uff0c\u53c2\u89c1 \u90e8\u7f72\u9009\u62e9 \u7ae0\u8282\u3002","title":"flask-basic.md"},{"location":"python/flask-basic/#flask","text":"","title":"Flask \u4ecb\u7ecd"},{"location":"python/flask-basic/#_1","text":"Flask \u4f9d\u8d56\u4e24\u4e2a\u5916\u90e8\u5e93\uff1a Werkzeug \u548c Jinja2 \u3002 Werkzeug \u662f\u4e00\u4e2a WSGI\uff08\u5728 Web \u5e94\u7528\u548c\u591a\u79cd\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6807\u51c6 Python \u63a5\u53e3) \u5de5\u5177\u96c6\u3002Jinja2 \u8d1f\u8d23\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9996\u5148\u9700\u8981 Python 2.6 \u6216\u66f4\u9ad8\u7684\u7248\u672c\uff0c\u6240\u4ee5\u8bf7\u786e\u8ba4\u6709\u4e00\u4e2a\u6700\u65b0\u7684 Python 2.x \u5b89\u88c5\u3002 \u5728 Python 3 \u4e2d\u4f7f\u7528 Flask \u8bf7\u53c2\u8003\uff1a Python 3 \u652f\u6301 \u3002","title":"\u4ecb\u7ecd"},{"location":"python/flask-basic/#virtualenv","text":"\u4f60\u5f88\u53ef\u80fd\u60f3\u5728\u5f00\u53d1\u4e2d\u7528\u4e0a virtualenv\uff0c\u5982\u679c\u4f60\u6709\u751f\u4ea7\u73af\u5883\u7684 shell \u6743\u9650\uff0c\u4f60\u540c\u6837\u4f1a\u4e50\u4e8e\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528\u5b83\u3002 virtualenv \u89e3\u51b3\u4e86\u4ec0\u4e48\u95ee\u9898\uff1f\u5982\u679c\u4f60\u50cf\u6211\u4e00\u6837\u559c\u6b22 Python\uff0c\u4e0d\u4ec5\u4f1a\u5728\u91c7\u7528 Flask \u7684Web \u5e94\u7528\u4e2d\u7528\u4e0a virtualenv\uff0c\u5728\u522b\u7684\u9879\u76ee\u4e2d\u4f60\u4e5f\u4f1a\u60f3\u7528\u4e0a\u5b83\u3002\u4f60\u62e5\u6709\u7684\u9879\u76ee\u8d8a\u591a\uff0c\u540c\u65f6\u4f7f\u7528\u4e0d\u540c\u7248\u672c\u7684 Python \u5de5\u4f5c\u7684\u53ef\u80fd\u6027\u4e5f\u5c31\u8d8a\u5927\uff0c\u6216\u8005\u8d77\u7801\u9700\u8981\u4e0d\u540c\u7248\u672c\u7684 Python \u5e93\u3002\u60b2\u60e8\u73b0\u5b9e\u662f\uff1a\u5e38\u5e38\u4f1a\u6709\u5e93\u7834\u574f\u5411\u540e\u517c\u5bb9\u6027\uff0c\u7136\u800c\u6b63\u7ecf\u5e94\u7528\u4e0d\u91c7\u7528\u5916\u90e8\u5e93\u7684\u53ef\u80fd\u5fae\u4e4e\u5176\u5fae\u3002\u5f53\u5728\u4f60\u7684\u9879\u76ee\u4e2d\uff0c\u51fa\u73b0\u4e24\u4e2a\u6216\u66f4\u591a\u4f9d\u8d56\u6027\u51b2\u7a81\u65f6\uff0c\u4f60\u4f1a\u600e\u4e48\u505a\uff1f virtualenv \u62ef\u6551\u4e16\u754c\uff01virtualenv \u4e3a\u6bcf\u4e2a\u4e0d\u540c\u9879\u76ee\u63d0\u4f9b\u4e00\u4efd Python \u5b89\u88c5\u3002\u5b83\u5e76\u6ca1\u6709\u771f\u6b63\u5b89\u88c5\u591a\u4e2a Python \u526f\u672c\uff0c\u4f46\u662f\u5b83\u786e\u5b9e\u63d0\u4f9b\u4e86\u4e00\u79cd\u5de7\u5999\u7684\u65b9\u5f0f\u6765\u8ba9\u5404\u9879\u76ee\u73af\u5883\u4fdd\u6301\u72ec\u7acb\u3002\u8ba9\u6211\u4eec\u6765\u770b\u770b virtualenv \u662f\u600e\u4e48\u5de5\u4f5c\u7684\u3002 \u5982\u679c\u4f60\u5728 Mac OS X \u6216 Linux \u4e0b\uff0c\u4e0b\u9762\u4e24\u6761\u547d\u4ee4\u53ef\u80fd\u4f1a\u9002\u7528: $ sudo easy_install virtualenv $ sudo pip install virtualenv \u4e0a\u8ff0\u7684\u547d\u4ee4\u4f1a\u5728\u4f60\u7684\u7cfb\u7edf\u4e2d\u5b89\u88c5 virtualenv\u3002\u5b83\u751a\u81f3\u53ef\u80fd\u4f1a\u5b58\u5728\u4e8e\u5305\u7ba1\u7406\u5668\u4e2d\u3002 virtualenv \u5b89\u88c5\u5b8c\u6bd5\u540e\uff0c\u4f60\u53ef\u4ee5\u7acb\u5373\u6253\u5f00 shell \u7136\u540e\u521b\u5efa\u4f60\u81ea\u5df1\u7684\u73af\u5883\u3002\u6211\u901a\u5e38\u521b\u5efa\u4e00\u4e2a\u9879\u76ee\u6587\u4ef6\u5939\uff0c\u5e76\u5728\u5176\u4e0b\u521b\u5efa\u4e00\u4e2a venv \u6587\u4ef6\u5939 $ mkdir myproject $ cd myproject $ virtualenv venv New python executable in venv/bin/python Installing distribute............done. \u73b0\u5728\uff0c\u65e0\u8bba\u4f55\u65f6\u4f60\u60f3\u5728\u67d0\u4e2a\u9879\u76ee\u4e0a\u5de5\u4f5c\uff0c\u53ea\u9700\u8981\u6fc0\u6d3b\u76f8\u5e94\u7684\u73af\u5883\u3002\u5728 OS X \u548c Linux \u4e0a\uff0c\u6267\u884c\u5982\u4e0b\u64cd\u4f5c: $ . venv/bin/activate \u65e0\u8bba\u901a\u8fc7\u54ea\u79cd\u65b9\u5f0f\uff0c\u4f60\u73b0\u5728\u5e94\u8be5\u5df2\u7ecf\u6fc0\u6d3b\u4e86 virtualenv\uff08\u6ce8\u610f\u4f60\u7684 shell \u63d0\u793a\u7b26\u663e\u793a\u7684\u662f\u5f53\u524d\u6d3b\u52a8\u7684\u73af\u5883\uff09\u3002 \u73b0\u5728\u4f60\u53ea\u9700\u8981\u952e\u5165\u4ee5\u4e0b\u7684\u547d\u4ee4\u6765\u6fc0\u6d3b virtualenv \u4e2d\u7684 Flask: $ pip install Flask \u51e0\u79d2\u949f\u540e\uff0c\u4e00\u5207\u90fd\u641e\u5b9a\u4e86\u3002","title":"\u5b89\u88c5\u65b9\u6cd5\u4e00\uff1avirtualenv(\u865a\u62df\u73af\u5883\u5b89\u88c5)"},{"location":"python/flask-basic/#_2","text":"\u8fd9\u6837\u4e5f\u662f\u53ef\u4ee5\u7684\uff0c\u867d\u7136\u6211\u4e0d\u63a8\u8350\u3002\u53ea\u9700\u8981\u4ee5 root \u6743\u9650\u8fd0\u884c pip\u3002\u73b0\u5728\u4ee5\u8fd9\u79cd\u6a21\u5f0f\u5b89\u88c5 flask\u3002 $ sudo pip install Flask","title":"\u5b89\u88c5\u65b9\u6cd5\u4e8c\uff1a\u5168\u5c40\u5b89\u88c5"},{"location":"python/flask-basic/#_3","text":"\u4e00\u4e2a\u6700\u5c0f\u7684 Flask \u5e94\u7528\u770b\u8d77\u6765\u4f1a\u662f\u8fd9\u6837: from flask import Flask app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return 'Hello World!' if __name__ == '__main__' : app . run () \u628a\u5b83\u4fdd\u5b58\u4e3a hello.py \uff08\u6216\u662f\u7c7b\u4f3c\u7684\uff09\uff0c\u7136\u540e\u7528 Python \u89e3\u91ca\u5668\u6765\u8fd0\u884c\u3002 \u786e\u4fdd\u4f60\u7684\u5e94\u7528\u6587\u4ef6\u540d\u4e0d\u662f flask.py \uff0c\u56e0\u4e3a\u8fd9\u5c06\u4e0e Flask \u672c\u8eab\u51b2\u7a81\u3002 python hello.py * Running on http://127.0.0.1:5000/ \u73b0\u5728\u8bbf\u95ee http://127.0.0.1:5000/ \uff0c\u4f60\u4f1a\u770b\u89c1 Hello World \u95ee\u5019\u3002\u6b32\u5173\u95ed\u670d\u52a1\u5668\uff0c\u6309 Ctrl+C\u3002 \u90a3\u4e48\uff0c\u8fd9\u6bb5\u4ee3\u7801\u505a\u4e86\u4ec0\u4e48\uff1f \u9996\u5148\uff0c\u6211\u4eec\u5bfc\u5165\u4e86 Flask \u7c7b\u3002\u8fd9\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u5c06\u4f1a\u662f\u6211\u4eec\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\u3002 \u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u8be5\u7c7b\u7684\u5b9e\u4f8b\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5e94\u7528\u6a21\u5757\u6216\u8005\u5305\u7684\u540d\u79f0\u3002 \u5982\u679c\u4f60\u4f7f\u7528\u5355\u4e00\u7684\u6a21\u5757\uff08\u5982\u672c\u4f8b\uff09\uff0c\u4f60\u5e94\u8be5\u4f7f\u7528 name \uff0c\u56e0\u4e3a\u6a21\u5757\u7684\u540d\u79f0\u5c06\u4f1a\u56e0\u5176\u4f5c\u4e3a\u5355\u72ec\u5e94\u7528\u542f\u52a8\u8fd8\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u800c\u6709\u4e0d\u540c\uff08 \u4e5f\u5373\u662f '__main__' \u6216\u5b9e\u9645\u7684\u5bfc\u5165\u540d\uff09\u3002\u8fd9\u662f\u5fc5\u987b\u7684\uff0c\u8fd9\u6837 Flask \u624d\u77e5\u9053\u5230\u54ea\u53bb\u627e\u6a21\u677f\u3001\u9759\u6001\u6587\u4ef6\u7b49\u7b49\u3002\u8be6\u60c5\u89c1 Flask \u7684\u6587\u6863\u3002 \u7136\u540e\uff0c\u6211\u4eec\u4f7f\u7528 route() \u88c5\u9970\u5668\u544a\u8bc9 Flask \u4ec0\u4e48\u6837\u7684URL \u80fd\u89e6\u53d1\u6211\u4eec\u7684\u51fd\u6570\u3002 \u8fd9\u4e2a\u51fd\u6570\u7684\u540d\u5b57\u4e5f\u5728\u751f\u6210 URL \u65f6\u88ab\u7279\u5b9a\u7684\u51fd\u6570\u91c7\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u6211\u4eec\u60f3\u8981\u663e\u793a\u5728\u7528\u6237\u6d4f\u89c8\u5668\u4e2d\u7684\u4fe1\u606f\u3002 \u6700\u540e\u6211\u4eec\u7528 run() \u51fd\u6570\u6765\u8ba9\u5e94\u7528\u8fd0\u884c\u5728\u672c\u5730\u670d\u52a1\u5668\u4e0a\u3002 \u5176\u4e2d if __name__ =='__main__': \u786e\u4fdd\u670d\u52a1\u5668\u53ea\u4f1a\u5728\u8be5\u811a\u672c\u88ab Python \u89e3\u91ca\u5668\u76f4\u63a5\u6267\u884c\u7684\u65f6\u5019\u624d\u4f1a\u8fd0\u884c\uff0c\u800c\u4e0d\u662f\u4f5c\u4e3a\u6a21\u5757\u5bfc\u5165\u7684\u65f6\u5019\u3002 \u5916\u90e8\u53ef\u8bbf\u95ee\u7684\u670d\u52a1\u5668 \u5982\u679c\u4f60\u8fd0\u884c\u4e86\u8fd9\u4e2a\u670d\u52a1\u5668\uff0c\u4f60\u4f1a\u53d1\u73b0\u5b83\u53ea\u80fd\u4ece\u4f60\u81ea\u5df1\u7684\u8ba1\u7b97\u673a\u4e0a\u8bbf\u95ee\uff0c\u7f51\u7edc\u4e2d\u5176\u5b83\u4efb\u4f55\u7684\u5730\u65b9\u90fd\u4e0d\u80fd\u8bbf\u95ee\u3002\u5728\u8c03\u8bd5\u6a21\u5f0f\u4e0b\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4f60\u7684\u8ba1\u7b97\u673a\u4e0a\u6267\u884c\u4efb\u610f Python \u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u884c\u4e3a\u662f\u9ed8\u8ba4\u7684\u3002 \u5982\u679c\u4f60\u7981\u7528\u4e86 debug \u6216\u4fe1\u4efb\u4f60\u6240\u5728\u7f51\u7edc\u7684\u7528\u6237\uff0c\u4f60\u53ef\u4ee5\u7b80\u5355\u4fee\u6539\u8c03\u7528 run() \u7684\u65b9\u6cd5\u4f7f\u4f60\u7684\u670d\u52a1\u5668\u516c\u5f00\u53ef\u7528\uff0c\u5982\u4e0b: app.run(host='0.0.0.0') \u8fd9\u4f1a\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u76d1\u542c\u6240\u6709\u516c\u7f51 IP\u3002","title":"\u57fa\u672c\u4f7f\u7528"},{"location":"python/flask-basic/#_4","text":"\u867d\u7136 run() \u65b9\u6cd5\u9002\u7528\u4e8e\u542f\u52a8\u672c\u5730\u7684\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u4f46\u662f\u4f60\u6bcf\u6b21\u4fee\u6539\u4ee3\u7801\u540e\u90fd\u8981\u624b\u52a8\u91cd\u542f\u5b83\u3002\u8fd9\u6837\u5e76\u4e0d\u591f\u4f18\u96c5\uff0c\u800c\u4e14 Flask \u53ef\u4ee5\u505a\u5230\u66f4\u597d\u3002\u5982\u679c\u4f60\u542f\u7528\u4e86\u8c03\u8bd5\u652f\u6301\uff0c\u670d\u52a1\u5668\u4f1a\u5728\u4ee3\u7801\u4fee\u6539\u540e\u81ea\u52a8\u91cd\u65b0\u8f7d\u5165\uff0c\u5e76\u5728\u53d1\u751f\u9519\u8bef\u65f6\u63d0\u4f9b\u4e00\u4e2a\u76f8\u5f53\u6709\u7528\u7684\u8c03\u8bd5\u5668\u3002 \u6709\u4e24\u79cd\u9014\u5f84\u6765\u542f\u7528\u8c03\u8bd5\u6a21\u5f0f\u3002\u4e00\u79cd\u662f\u76f4\u63a5\u5728\u5e94\u7528\u5bf9\u8c61\u4e0a\u8bbe\u7f6e: app . debug = True app . run () \u53e6\u4e00\u79cd\u662f\u4f5c\u4e3a run \u65b9\u6cd5\u7684\u4e00\u4e2a\u53c2\u6570\u4f20\u5165: app.run(debug=True) \u4e24\u79cd\u65b9\u6cd5\u7684\u6548\u679c\u5b8c\u5168\u76f8\u540c\u3002 \u6ce8\u610f \u5c3d\u7ba1\u4ea4\u4e92\u5f0f\u8c03\u8bd5\u5668\u5728\u5141\u8bb8 fork \u7684\u73af\u5883\u4e2d\u65e0\u6cd5\u6b63\u5e38\u4f7f\u7528\uff08\u4e5f\u5373\u5728\u751f\u4ea7\u670d\u52a1\u5668\u4e0a\u6b63\u5e38\u4f7f\u7528\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u7684\uff09\uff0c\u4f46\u5b83\u4f9d\u7136\u5141\u8bb8\u6267\u884c\u4efb\u610f\u4ee3\u7801\u3002\u8fd9\u4f7f\u5b83\u6210\u4e3a\u4e00\u4e2a\u5de8\u5927\u7684\u5b89\u5168\u9690\u60a3\uff0c\u56e0\u6b64\u5b83 \u7edd\u5bf9\u4e0d\u80fd\u7528\u4e8e\u751f\u4ea7\u73af\u5883 \u3002","title":"\u8c03\u8bd5\u6a21\u5f0f"},{"location":"python/flask-basic/#_5","text":"\u73b0\u4ee3 Web \u5e94\u7528\u7684 URL \u5341\u5206\u4f18\u96c5\uff0c\u6613\u4e8e\u4eba\u4eec\u8fa8\u8bc6\u8bb0\u5fc6\uff0c\u8fd9\u4e00\u70b9\u5bf9\u4e8e\u90a3\u4e9b\u9762\u5411\u4f7f\u7528\u4f4e\u901f\u7f51\u7edc\u8fde\u63a5\u79fb\u52a8\u8bbe\u5907\u8bbf\u95ee\u7684\u5e94\u7528\u7279\u522b\u6709\u7528\u3002\u5982\u679c\u53ef\u4ee5\u4e0d\u8bbf\u95ee\u7d22\u5f15\u9875\uff0c\u800c\u662f\u76f4\u63a5\u8bbf\u95ee\u60f3\u8981\u7684\u90a3\u4e2a\u9875\u9762\uff0c\u4ed6\u4eec\u591a\u534a\u4f1a\u7b11\u9010\u989c\u5f00\u800c\u518d\u5ea6\u5149\u987e\u3002 \u5982\u4e0a\u6240\u89c1\uff0c route() \u88c5\u9970\u5668\u628a\u4e00\u4e2a\u51fd\u6570\u7ed1\u5b9a\u5230\u5bf9\u5e94\u7684 URL \u4e0a\u3002\u4f46\u662f\uff0c\u4e0d\u4ec5\u5982\u6b64\uff01\u4f60\u53ef\u4ee5\u6784\u9020\u542b\u6709\u52a8\u6001\u90e8\u5206\u7684 URL\uff0c\u4e5f\u53ef\u4ee5\u5728\u4e00\u4e2a\u51fd\u6570\u4e0a\u9644\u7740\u591a\u4e2a\u89c4\u5219\u3002 \u8fd9\u91cc\u662f\u4e00\u4e9b\u57fa\u672c\u7684\u4f8b\u5b50: @app . route ( '/' ) def index (): return 'Index Page' @app . route ( '/hello' ) def hello (): return 'Hello World'","title":"\u8def\u7531"},{"location":"python/flask-basic/#url","text":"\u8981\u7ed9 URL \u6dfb\u52a0\u53d8\u91cf\u90e8\u5206\uff0c\u4f60\u53ef\u4ee5\u628a\u8fd9\u4e9b\u7279\u6b8a\u7684\u5b57\u6bb5\u6807\u8bb0\u4e3a <variable_name> \uff0c \u8fd9\u4e2a\u90e8\u5206\u5c06\u4f1a\u4f5c\u4e3a\u547d\u540d\u53c2\u6570\u4f20\u9012\u5230\u4f60\u7684\u51fd\u6570\u3002\u89c4\u5219\u53ef\u4ee5\u7528 <converter:variable_name> \u6307\u5b9a\u4e00\u4e2a\u53ef\u9009\u7684\u8f6c\u6362\u5668\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4e0d\u9519\u7684\u4f8b\u5b50: @app . route ( '/user/<username>' ) def show_user_profile ( username ): # show the user profile for that user return 'User %s ' % username @app . route ( '/post/<int:post_id>' ) def show_post ( post_id ): # show the post with the given id, the id is an integer return 'Post %d ' % post_id \u8f6c\u6362\u5668\u6709\u4e0b\u9762\u51e0\u79cd\uff1a int \u63a5\u53d7\u6574\u6570 float \u540c int \uff0c\u4f46\u662f\u63a5\u53d7\u6d6e\u70b9\u6570 path \u548c\u9ed8\u8ba4\u7684\u76f8\u4f3c\uff0c\u4f46\u4e5f\u63a5\u53d7\u659c\u7ebf","title":"URL\u4f20\u53c2"},{"location":"python/flask-basic/#url_1","text":"Flask \u7684 URL \u89c4\u5219\u57fa\u4e8e Werkzeug \u7684\u8def\u7531\u6a21\u5757\u3002\u8fd9\u4e2a\u6a21\u5757\u80cc\u540e\u7684\u601d\u60f3\u662f\u57fa\u4e8e Apache \u4ee5\u53ca\u66f4\u65e9\u7684 HTTP \u670d\u52a1\u5668\u4e3b\u5f20\u7684\u5148\u4f8b\uff0c\u4fdd\u8bc1\u4f18\u96c5\u4e14\u552f\u4e00\u7684 URL\u3002 \u4ee5\u8fd9\u4e24\u4e2a\u89c4\u5219\u4e3a\u4f8b: @app . route ( '/projects/' ) def projects (): return 'The project page' @app . route ( '/about' ) def about (): return 'The about page' \u867d\u7136\u5b83\u4eec\u770b\u8d77\u6765\u7740\u5b9e\u76f8\u4f3c\uff0c\u4f46\u5b83\u4eec\u7ed3\u5c3e\u659c\u7ebf\u7684\u4f7f\u7528\u5728 URL \u5b9a\u4e49 \u4e2d\u4e0d\u540c\u3002 \u7b2c\u4e00\u79cd\u60c5\u51b5\u4e2d\uff0c\u6307\u5411 projects \u7684\u89c4\u8303 URL \u5c3e\u7aef\u6709\u4e00\u4e2a\u659c\u7ebf\u3002\u8fd9\u79cd\u611f\u89c9\u5f88\u50cf\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u5939\u3002\u8bbf\u95ee\u4e00\u4e2a\u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u88ab Flask \u91cd\u5b9a\u5411\u5230\u5e26\u659c\u7ebf\u7684\u89c4\u8303 URL \u53bb\u3002 \u7136\u800c\uff0c\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684 URL \u7ed3\u5c3e\u4e0d\u5e26\u659c\u7ebf\uff0c\u7c7b\u4f3c UNIX-like \u7cfb\u7edf\u4e0b\u7684\u6587\u4ef6\u7684\u8def\u5f84\u540d\u3002\u8bbf\u95ee\u7ed3\u5c3e\u5e26\u659c\u7ebf\u7684 URL \u4f1a\u4ea7\u751f\u4e00\u4e2a 404 \u201cNot Found\u201d \u9519\u8bef\u3002 \u8fd9\u4e2a\u884c\u4e3a\u4f7f\u5f97\u5728\u9057\u5fd8\u5c3e\u659c\u7ebf\u65f6\uff0c\u5141\u8bb8\u5173\u8054\u7684 URL \u63a5\u4efb\u5de5\u4f5c\uff0c\u4e0e Apache \u548c\u5176\u5b83\u7684\u670d\u52a1\u5668\u7684\u884c\u4e3a\u5e76\u65e0\u4e8c\u5f02\u3002\u6b64\u5916\uff0c\u4e5f\u4fdd\u8bc1\u4e86 URL \u7684\u552f\u4e00\uff0c\u6709\u52a9\u4e8e\u907f\u514d\u641c\u7d22\u5f15\u64ce\u7d22\u5f15\u540c\u4e00\u4e2a\u9875\u9762\u4e24\u6b21\u3002","title":"\u552f\u4e00 URL / \u91cd\u5b9a\u5411\u884c\u4e3a"},{"location":"python/flask-basic/#url_2","text":"\u5982\u679c Flask \u80fd\u5339\u914d URL\uff0c\u90a3\u4e48 Flask \u53ef\u4ee5\u751f\u6210\u5b83\u4eec\u5417\uff1f\u5f53\u7136\u53ef\u4ee5\u3002\u4f60\u53ef\u4ee5\u7528 url_for() \u6765\u7ed9\u6307\u5b9a\u7684\u51fd\u6570\u6784\u9020 URL\u3002\u5b83\u63a5\u53d7\u51fd\u6570\u540d\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4e5f\u63a5\u53d7\u5bf9\u5e94 URL \u89c4\u5219\u7684\u53d8\u91cf\u90e8\u5206\u7684\u547d\u540d\u53c2\u6570\u3002\u672a\u77e5\u53d8\u91cf\u90e8\u5206\u4f1a\u6dfb\u52a0\u5230 URL \u672b\u5c3e\u4f5c\u4e3a\u67e5\u8be2\u53c2\u6570\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: >>> from flask import Flask , url_for >>> app = Flask ( __name__ ) >>> @app . route ( '/' ) ... def index (): pass ... >>> @app . route ( '/login' ) ... def login (): pass ... >>> @app . route ( '/user/<username>' ) ... def profile ( username ): pass ... >>> with app . test_request_context (): ... print url_for ( 'index' ) ... print url_for ( 'login' ) ... print url_for ( 'login' , next = '/' ) ... print url_for ( 'profile' , username = 'John Doe' ) ... / / login / login ? next =/ / user / John % 20 Doe \uff08\u8fd9\u91cc\u4e5f\u7528\u5230\u4e86 test_request_context() \u65b9\u6cd5\uff0c\u4e0b\u9762\u4f1a\u89e3\u91ca\u3002\u5373\u4f7f\u6211\u4eec\u6b63\u5728\u901a\u8fc7 Python \u7684 shell \u8fdb\u884c\u4ea4\u4e92\uff0c\u5b83\u4f9d\u7136\u4f1a\u544a\u8bc9 Flask \u8981\u8868\u73b0\u4e3a\u6b63\u5728\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u3002\u8bf7\u770b\u4e0b\u9762\u7684\u89e3\u91ca\u3002 \u73af\u5883\u5c40\u90e8\u53d8\u91cf \uff09 \u4e3a\u4ec0\u4e48\u4f60\u8981\u6784\u5efa URL \u800c\u975e\u5728\u6a21\u677f\u4e2d\u786c\u7f16\u7801\uff1f\u8fd9\u91cc\u6709\u4e09\u4e2a\u7edd\u5999\u7684\u7406\u7531\uff1a \u53cd\u5411\u6784\u5efa\u901a\u5e38\u6bd4\u786c\u7f16\u7801\u7684\u63cf\u8ff0\u6027\u66f4\u597d\u3002\u66f4\u91cd\u8981\u7684\u662f\uff0c\u5b83\u5141\u8bb8\u4f60\u4e00\u6b21\u6027\u4fee\u6539 URL\uff0c \u800c\u4e0d\u662f\u5230\u5904\u8fb9\u627e\u8fb9\u6539\u3002 URL \u6784\u5efa\u4f1a\u8f6c\u4e49\u7279\u6b8a\u5b57\u7b26\u548c Unicode \u6570\u636e\uff0c\u514d\u53bb\u4f60\u5f88\u591a\u9ebb\u70e6\u3002 \u5982\u679c\u4f60\u7684\u5e94\u7528\u4e0d\u4f4d\u4e8e URL \u7684\u6839\u8def\u5f84\uff08\u6bd4\u5982\uff0c\u5728 /myapplication \u4e0b\uff0c\u800c\u4e0d\u662f / \uff09\uff0c url_for() \u4f1a\u59a5\u5584\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u3002","title":"\u6784\u9020 URL"},{"location":"python/flask-basic/#http","text":"HTTP \uff08\u4e0e Web \u5e94\u7528\u4f1a\u8bdd\u7684\u534f\u8bae\uff09\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u8bbf\u95ee URL \u65b9\u6cd5\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8def\u7531\u53ea\u56de\u5e94 GET \u8bf7\u6c42\uff0c\u4f46\u662f\u901a\u8fc7 route() \u88c5\u9970\u5668\u4f20\u9012 methods \u53c2\u6570\u53ef\u4ee5\u6539\u53d8\u8fd9\u4e2a\u884c\u4e3a\u3002\u8fd9\u91cc\u6709\u4e00\u4e9b\u4f8b\u5b50: @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : do_the_login () else : show_the_login_form () \u5982\u679c\u5b58\u5728 GET \uff0c\u90a3\u4e48\u4e5f\u4f1a\u66ff\u4f60\u81ea\u52a8\u5730\u6dfb\u52a0 HEAD\uff0c\u65e0\u9700\u5e72\u9884\u3002\u5b83\u4f1a\u786e\u4fdd\u9075\u7167 HTTP RFC \uff08\u63cf\u8ff0 HTTP \u534f\u8bae\u7684\u6587\u6863\uff09\u5904\u7406 HEAD \u8bf7\u6c42\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u5b8c\u5168\u5ffd\u7565\u8fd9\u90e8\u5206\u7684 HTTP \u89c4\u8303\u3002\u540c\u6837\uff0c\u81ea\u4ece Flask 0.6 \u8d77\uff0c \u4e5f\u5b9e\u73b0\u4e86 OPTIONS \u7684\u81ea\u52a8\u5904\u7406\u3002 \u4f60\u4e0d\u77e5\u9053\u4e00\u4e2a HTTP \u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u4e0d\u5fc5\u62c5\u5fc3\uff0c\u8fd9\u91cc\u4f1a\u7b80\u8981\u4ecb\u7ecd HTTP \u65b9\u6cd5\u548c\u5b83\u4eec\u4e3a\u4ec0\u4e48\u91cd\u8981\uff1a HTTP \u65b9\u6cd5\uff08\u4e5f\u7ecf\u5e38\u88ab\u53eb\u505a\u201c\u8c13\u8bcd\u201d\uff09\u544a\u77e5\u670d\u52a1\u5668\uff0c\u5ba2\u6237\u7aef\u60f3\u5bf9\u8bf7\u6c42\u7684\u9875\u9762 \u505a \u4e9b\u4ec0\u4e48\u3002\u4e0b\u9762\u7684\u90fd\u662f\u975e\u5e38\u5e38\u89c1\u7684\u65b9\u6cd5\uff1a GET\uff1a\u6d4f\u89c8\u5668\u544a\u77e5\u670d\u52a1\u5668\uff1a\u53ea \u83b7\u53d6 \u9875\u9762\u4e0a\u7684\u4fe1\u606f\u5e76\u53d1\u7ed9\u6211\u3002\u8fd9\u662f\u6700\u5e38\u7528\u7684\u65b9\u6cd5\u3002 HEAD\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u6b32\u83b7\u53d6\u4fe1\u606f\uff0c\u4f46\u662f\u53ea\u5173\u5fc3 \u6d88\u606f\u5934 \u3002\u5e94\u7528\u5e94\u50cf\u5904\u7406 GET \u8bf7\u6c42\u4e00\u6837\u6765\u5904\u7406\u5b83\uff0c\u4f46\u662f\u4e0d\u5206\u53d1\u5b9e\u9645\u5185\u5bb9\u3002\u5728 Flask \u4e2d\u4f60\u5b8c\u5168\u65e0\u9700 \u4eba\u5de5 \u5e72\u9884\uff0c\u5e95\u5c42\u7684 Werkzeug \u5e93\u5df2\u7ecf\u66ff\u4f60\u6253\u70b9\u597d\u4e86\u3002 POST\uff1a\u6d4f\u89c8\u5668\u544a\u8bc9\u670d\u52a1\u5668\uff1a\u60f3\u5728 URL \u4e0a \u53d1\u5e03 \u65b0\u4fe1\u606f\u3002\u5e76\u4e14\uff0c\u670d\u52a1\u5668\u5fc5\u987b\u786e\u4fdd \u6570\u636e\u5df2\u5b58\u50a8\u4e14\u4ec5\u5b58\u50a8\u4e00\u6b21\u3002\u8fd9\u662f HTML \u8868\u5355\u901a\u5e38\u53d1\u9001\u6570\u636e\u5230\u670d\u52a1\u5668\u7684\u65b9\u6cd5\u3002 PUT\uff1a\u7c7b\u4f3c POST \u4f46\u662f\u670d\u52a1\u5668\u53ef\u80fd\u89e6\u53d1\u4e86\u5b58\u50a8\u8fc7\u7a0b\u591a\u6b21\uff0c\u591a\u6b21\u8986\u76d6\u6389\u65e7\u503c\u3002\u4f60\u53ef \u80fd\u4f1a\u95ee\u8fd9\u6709\u4ec0\u4e48\u7528\uff0c\u5f53\u7136\u8fd9\u662f\u6709\u539f\u56e0\u7684\u3002\u8003\u8651\u5230\u4f20\u8f93\u4e2d\u8fde\u63a5\u53ef\u80fd\u4f1a\u4e22\u5931\uff0c\u5728 \u8fd9\u79cd \u60c5\u51b5\u4e0b\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u7cfb\u7edf\u53ef\u80fd\u5b89\u5168\u5730\u7b2c\u4e8c\u6b21\u63a5\u6536\u8bf7\u6c42\uff0c\u800c \u4e0d\u7834\u574f\u5176\u5b83\u4e1c\u897f\u3002\u56e0\u4e3a POST\u5b83\u53ea\u89e6\u53d1\u4e00\u6b21\uff0c\u6240\u4ee5\u7528 POST \u662f\u4e0d\u53ef\u80fd\u7684\u3002 DELETE\uff1a\u5220\u9664\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002 OPTIONS\uff1a\u7ed9\u5ba2\u6237\u7aef\u63d0\u4f9b\u4e00\u4e2a\u654f\u6377\u7684\u9014\u5f84\u6765\u5f04\u6e05\u8fd9\u4e2a URL \u652f\u6301\u54ea\u4e9b HTTP \u65b9\u6cd5\u3002 \u4ece Flask 0.6 \u5f00\u59cb\uff0c\u5b9e\u73b0\u4e86\u81ea\u52a8\u5904\u7406\u3002.","title":"HTTP \u65b9\u6cd5"},{"location":"python/flask-basic/#_6","text":"\u52a8\u6001 web \u5e94\u7528\u4e5f\u4f1a\u9700\u8981\u9759\u6001\u6587\u4ef6\uff0c\u901a\u5e38\u662f CSS \u548c JavaScript \u6587\u4ef6\u3002\u7406\u60f3\u72b6\u51b5\u4e0b\uff0c \u4f60\u5df2\u7ecf\u914d\u7f6e\u597d Web \u670d\u52a1\u5668\u6765\u63d0\u4f9b\u9759\u6001\u6587\u4ef6\uff0c\u4f46\u662f\u5728\u5f00\u53d1\u4e2d\uff0cFlask \u4e5f\u53ef\u4ee5\u505a\u5230\u3002 \u53ea\u8981\u5728\u4f60\u7684\u5305\u4e2d\u6216\u662f\u6a21\u5757\u7684\u6240\u5728\u76ee\u5f55\u4e2d\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a static \u7684\u6587\u4ef6\u5939\uff0c\u5728\u5e94\u7528\u4e2d\u4f7f\u7528 /static \u5373\u53ef\u8bbf\u95ee\u3002 \u7ed9\u9759\u6001\u6587\u4ef6\u751f\u6210 URL \uff0c\u4f7f\u7528\u7279\u6b8a\u7684 'static' \u7aef\u70b9\u540d: ```python url_for('static', filename='style.css') \u8fd9\u4e2a\u6587\u4ef6\u5e94\u8be5\u5b58\u50a8\u5728\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684 `static/style.css` \u3002 ## \u6a21\u677f\u6e32\u67d3 \u7528 Python \u751f\u6210 HTML \u5341\u5206\u65e0\u8da3\uff0c\u800c\u4e14\u76f8\u5f53\u7e41\u7410\uff0c\u56e0\u4e3a\u4f60\u5fc5\u987b\u624b\u52a8\u5bf9 HTML \u505a\u8f6c\u4e49\u6765\u4fdd\u8bc1\u5e94\u7528\u7684\u5b89\u5168\u3002\u4e3a\u6b64\uff0cFlask \u914d\u5907\u4e86 [Jinja2](http://jinja.pocoo.org/) \u6a21\u677f\u5f15\u64ce\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 [`render_template()`](http://docs.jinkan.org/docs/flask/api.html#flask.render_template) \u65b9\u6cd5\u6765\u6e32\u67d3\u6a21\u677f\u3002\u4f60\u9700\u8981\u505a\u7684\u4e00\u5207\u5c31\u662f\u5c06\u6a21\u677f\u540d\u548c\u4f60\u60f3\u4f5c\u4e3a\u5173\u952e\u5b57\u7684\u53c2\u6570\u4f20\u5165\u6a21\u677f\u7684\u53d8\u91cf\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u5c55\u793a\u5982\u4f55\u6e32\u67d3\u6a21\u677f\u7684\u7b80\u4f8b: ```python from flask import render_template @app.route('/hello/') @app.route('/hello/<name>') def hello(name=None): return render_template('hello.html', name=name) Flask \u4f1a\u5728 templates \u6587\u4ef6\u5939\u91cc\u5bfb\u627e\u6a21\u677f\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u7684\u5e94\u7528\u662f\u4e2a\u6a21\u5757\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5939\u5e94\u8be5\u4e0e\u6a21\u5757\u540c\u7ea7\uff1b\u5982\u679c\u5b83\u662f\u4e00\u4e2a\u5305\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6587\u4ef6\u5939\u4f5c\u4e3a\u5305\u7684\u5b50\u76ee\u5f55: \u60c5\u51b5 1 : \u6a21\u5757: /application.py /templates /hello.html \u60c5\u51b5 2 : \u5305: /application /__init__.py /templates /hello.html \u5173\u4e8e\u6a21\u677f\uff0c\u4f60\u53ef\u4ee5\u53d1\u6325 Jinja2 \u6a21\u677f\u7684\u5168\u90e8\u5b9e\u4f8b\u3002\u66f4\u591a\u4fe1\u606f\u8bf7\u89c1 Jinja2 \u6a21\u677f\u6587\u6863 \u3002 \u8fd9\u91cc\u6709\u4e00\u4e2a\u6a21\u677f\u5b9e\u4f8b\uff1a <!doctype html> < title > Hello from Flask </ title > {% if name %} < h1 > Hello {{ name }}! </ h1 > {% else %} < h1 > Hello World! </ h1 > {% endif %} \u5728\u6a21\u677f\u91cc\uff0c\u4f60\u4e5f\u53ef\u4ee5\u8bbf\u95ee request \u3001 session \u548c g [ 1] \u5bf9\u8c61\uff0c \u4ee5\u53ca get_flashed_messages() \u51fd\u6570\u3002 \u6a21\u677f\u7ee7\u627f\u8ba9\u6a21\u677f\u7528\u8d77\u6765\u76f8\u5f53\u987a\u624b\u3002\u5982\u6b32\u4e86\u89e3\u7ee7\u627f\u7684\u5de5\u4f5c\u673a\u7406\uff0c\u8bf7\u8df3\u8f6c\u5230 \u6a21\u677f\u7ee7\u627f \u6a21\u5f0f\u7684\u6587\u6863\u3002\u6700\u8d77\u7801\uff0c\u6a21\u677f\u7ee7\u627f\u80fd\u4f7f\u7279\u5b9a\u5143\u7d20 \uff08\u6bd4\u5982\u9875\u7709\u3001\u5bfc\u822a\u680f\u548c\u9875\u811a\uff09\u53ef\u4ee5\u51fa\u73b0\u5728\u6240\u6709\u7684\u9875\u9762\u3002 \u81ea\u52a8\u8f6c\u4e49\u529f\u80fd\u9ed8\u8ba4\u662f\u5f00\u542f\u7684\uff0c\u6240\u4ee5\u5982\u679c name \u5305\u542b HTML \uff0c\u5b83\u5c06\u4f1a\u88ab\u81ea\u52a8\u8f6c\u4e49\u3002\u5982\u679c\u4f60\u80fd\u4fe1\u4efb\u4e00\u4e2a\u53d8\u91cf\uff0c\u5e76\u4e14\u4f60\u77e5\u9053\u5b83\u662f\u5b89\u5168\u7684\uff08\u4f8b\u5982\u4e00\u4e2a\u6a21\u5757\u628a Wiki \u6807\u8bb0\u8f6c\u6362\u4e3a HTML\uff09\uff0c\u4f60\u53ef\u4ee5\u7528 Markup \u7c7b\u6216 |safe \u8fc7\u6ee4\u5668\u5728\u6a21\u677f\u4e2d\u628a\u5b83\u6807\u8bb0\u4e3a\u5b89\u5168\u7684\u3002\u5728 Jinja 2 \u6587\u6863\u4e2d\uff0c\u4f60\u4f1a\u770b\u5230\u66f4\u591a\u7684\u4f8b\u5b50\u3002 \u8fd9\u91cc\u662f\u4e00\u4e2a Markup \u7c7b\u5982\u4f55\u4f7f\u7528\u7684\u7b80\u5355\u4ecb\u7ecd: >>> from flask import Markup >>> Markup ( '<strong>Hello %s !</strong>' ) % '<blink>hacker</blink>' Markup ( u '<strong>Hello &lt;blink&gt;hacker&lt;/blink&gt;!</strong>' ) >>> Markup . escape ( '<blink>hacker</blink>' ) Markup ( u '&lt;blink&gt;hacker&lt;/blink&gt;' ) >>> Markup ( '<em>Marked up</em> &raquo; HTML' ) . striptags () u 'Marked up \\xbb HTML' \u5728 0.5 \u7248\u66f4\u6539: \u81ea\u52a8\u8f6c\u4e49\u4e0d\u518d\u5728\u6240\u6709\u6a21\u677f\u4e2d\u542f\u7528\u3002\u4e0b\u5217\u6269\u5c55\u540d\u7684\u6a21\u677f\u4f1a\u89e6\u53d1\u81ea\u52a8\u8f6c\u4e49\uff1a .html \u3001 .htm \u3001 .xml \u3001 .xhtml \u3002\u4ece\u5b57\u7b26\u4e32\u52a0\u8f7d\u7684\u6a21\u677f\u4f1a\u7981\u7528\u81ea\u52a8\u8f6c\u4e49\u3002 [ 1] \u4e0d\u786e\u5b9a g \u5bf9\u8c61\u662f\u4ec0\u4e48\uff1f\u5b83\u5141\u8bb8\u4f60\u6309\u9700\u5b58\u50a8\u4fe1\u606f\uff0c \u67e5\u770b\uff08 g \uff09\u5bf9\u8c61\u7684\u6587\u6863\u548c \u5728 Flask \u4e2d\u4f7f\u7528 SQLite 3 \u7684\u6587\u6863\u4ee5\u83b7\u53d6\u66f4\u591a\u4fe1\u606f\u3002","title":"\u9759\u6001\u6587\u4ef6"},{"location":"python/flask-basic/#_7","text":"\u5bf9\u4e8e Web \u5e94\u7528\uff0c\u4e0e\u5ba2\u6237\u7aef\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u7684\u6570\u636e\u4ea4\u4e92\u81f3\u5173\u91cd\u8981\u3002\u5728 Flask \u4e2d\u7531\u5168\u5c40\u7684 request \u5bf9\u8c61\u6765\u63d0\u4f9b\u8fd9\u4e9b\u4fe1\u606f\u3002\u5982\u679c\u4f60\u6709\u4e00\u5b9a\u7684 Python \u7ecf\u9a8c\uff0c\u4f60\u4f1a\u597d\u5947\uff0c\u4e3a\u4ec0\u4e48\u8fd9\u4e2a\u5bf9\u8c61\u662f\u5168\u5c40\u7684\uff0c\u4e3a\u4ec0\u4e48 Flask \u8fd8\u80fd\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u3002\u7b54\u6848\u662f\u73af\u5883\u4f5c\u7528\u57df\uff1a","title":"\u8bbf\u95ee\u8bf7\u6c42\u6570\u636e"},{"location":"python/flask-basic/#_8","text":"\u5185\u5e55 \u5982\u679c\u4f60\u60f3\u7406\u89e3\u5176\u5de5\u4f5c\u673a\u5236\u53ca\u5982\u4f55\u5229\u7528\u73af\u5883\u5c40\u90e8\u53d8\u91cf\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\uff0c\u8bf7\u9605\u8bfb\u6b64\u8282\uff0c\u5426\u5219\u53ef\u8df3\u8fc7\u3002 Flask \u4e2d\u7684\u67d0\u4e9b\u5bf9\u8c61\u662f\u5168\u5c40\u5bf9\u8c61\uff0c\u4f46\u5374\u4e0d\u662f\u901a\u5e38\u7684\u90a3\u79cd\u3002\u8fd9\u4e9b\u5bf9\u8c61\u5b9e\u9645\u4e0a\u662f\u7279\u5b9a\u73af\u5883\u7684\u5c40\u90e8\u5bf9\u8c61\u7684\u4ee3\u7406\u3002\u867d\u7136\u5f88\u62d7\u53e3\uff0c\u4f46\u5b9e\u9645\u4e0a\u5f88\u5bb9\u6613\u7406\u89e3\u3002 \u60f3\u8c61\u4e00\u4e0b\u5904\u7406\u7ebf\u7a0b\u7684\u73af\u5883\u3002\u4e00\u4e2a\u8bf7\u6c42\u4f20\u5165\uff0cWeb \u670d\u52a1\u5668\u51b3\u5b9a\u751f\u6210\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff08 \u6216\u8005\u522b\u7684\u4ec0\u4e48\u4e1c\u897f\uff0c\u53ea\u8981\u8fd9\u4e2a\u5e95\u5c42\u7684\u5bf9\u8c61\u53ef\u4ee5\u80dc\u4efb\u5e76\u53d1\u7cfb\u7edf\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u7ebf\u7a0b\uff09\u3002 \u5f53 Flask \u5f00\u59cb\u5b83\u5185\u90e8\u7684\u8bf7\u6c42\u5904\u7406\u65f6\uff0c\u5b83\u8ba4\u5b9a\u5f53\u524d\u7ebf\u7a0b\u662f\u6d3b\u52a8\u7684\u73af\u5883\uff0c\u5e76\u7ed1\u5b9a\u5f53\u524d\u7684\u5e94\u7528\u548c WSGI \u73af\u5883\u5230\u90a3\u4e2a\u73af\u5883\u4e0a\uff08\u7ebf\u7a0b\uff09\u3002\u5b83\u7684\u5b9e\u73b0\u5f88\u5de7\u5999\uff0c\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u5e94\u7528\u8c03\u7528\u53e6\u4e00\u4e2a\u5e94\u7528\u65f6\u4e0d\u4f1a\u51fa\u73b0\u95ee\u9898\u3002 \u6240\u4ee5\uff0c\u8fd9\u5bf9\u4f60\u6765\u8bf4\u610f\u5473\u7740\u4ec0\u4e48\uff1f\u9664\u975e\u4f60\u8981\u505a\u7c7b\u4f3c\u5355\u5143\u6d4b\u8bd5\u7684\u4e1c\u897f\uff0c\u5426\u5219\u4f60\u57fa\u672c\u4e0a\u53ef\u4ee5\u5b8c\u5168\u65e0\u89c6\u5b83\u3002\u4f60\u4f1a\u53d1\u73b0\u4f9d\u8d56\u4e8e\u4e00\u6bb5\u8bf7\u6c42\u5bf9\u8c61\u7684\u4ee3\u7801\uff0c\u56e0\u6ca1\u6709\u8bf7\u6c42\u5bf9\u8c61\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\u89e3\u51b3\u65b9\u6848\u662f\uff0c\u81ea\u884c\u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u5e76\u4e14\u628a\u5b83\u7ed1\u5b9a\u5230\u73af\u5883\u4e2d\u3002\u5355\u5143\u6d4b\u8bd5\u7684\u6700\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u662f\uff1a\u7528 test_request_context() \u73af\u5883\u7ba1\u7406\u5668\u3002\u7ed3\u5408 with \u58f0\u660e\uff0c\u7ed1\u5b9a\u4e00\u4e2a\u6d4b\u8bd5\u8bf7\u6c42\uff0c\u8fd9\u6837\u4f60\u624d\u80fd\u4e0e\u4e4b\u4ea4\u4e92\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50: from flask import request with app . test_request_context ( '/hello' , method = 'POST' ): # now you can do something with the request until the # end of the with block, such as basic assertions: assert request . path == '/hello' assert request . method == 'POST' \u53e6\u4e00\u79cd\u53ef\u80fd\u662f\uff1a\u4f20\u9012\u6574\u4e2a WSGI \u73af\u5883\u7ed9 request_context() \u65b9\u6cd5: from flask import request with app . request_context ( environ ): assert request . method == 'POST'","title":"\u73af\u5883\u5c40\u90e8\u53d8\u91cf"},{"location":"python/flask-basic/#_9","text":"API \u7ae0\u8282\u5bf9\u8bf7\u6c42\u5bf9\u8c61\u4f5c\u4e86\u8be6\u5c3d\u9610\u8ff0\uff08\u53c2\u89c1 request \uff09\uff0c\u56e0\u6b64\u8fd9\u91cc\u4e0d\u4f1a\u8d58\u8ff0\u3002\u6b64\u5904\u5bbd\u6cdb\u4ecb\u7ecd\u4e00\u4e9b\u6700\u5e38\u7528\u7684\u64cd\u4f5c\u3002\u9996\u5148\u4ece flask \u6a21\u5757\u91cc\u5bfc\u5165\u5b83: from flask import request \u5f53\u524d\u8bf7\u6c42\u7684 HTTP \u65b9\u6cd5\u53ef\u901a\u8fc7 method \u5c5e\u6027\u6765\u8bbf\u95ee\u3002\u901a\u8fc7:attr:~flask.request.form \u5c5e\u6027\u6765\u8bbf\u95ee\u8868\u5355\u6570\u636e\uff08 POST \u6216 PUT \u8bf7\u6c42\u63d0\u4ea4\u7684\u6570\u636e\uff09\u3002\u8fd9\u91cc\u6709\u4e00\u4e2a\u7528\u5230\u4e0a\u9762\u63d0\u5230\u7684\u90a3\u4e24\u4e2a\u5c5e\u6027\u7684\u5b8c\u6574\u5b9e\u4f8b: @app . route ( '/login' , methods = [ 'POST' , 'GET' ]) def login (): error = None if request . method == 'POST' : if ( request . form [ 'username' ], request . form [ 'password' ]): return log_the_user_in ( request . form [ 'username' ]) else : error = 'Invalid username/password' # the code below is executed if the request method # was GET or the credentials were invalid return render_template ( 'login.html' , error = error ) \u5f53\u8bbf\u95ee form \u5c5e\u6027\u4e2d\u7684\u4e0d\u5b58\u5728\u7684\u952e\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f\u4f1a\u629b\u51fa\u4e00\u4e2a\u7279\u6b8a\u7684 KeyError \u5f02\u5e38\u3002\u4f60\u53ef\u4ee5\u50cf\u6355\u83b7\u6807\u51c6\u7684 KeyError \u4e00\u6837\u6765\u6355\u83b7\u5b83\u3002 \u5982\u679c\u4f60\u4e0d\u8fd9\u4e48\u505a\uff0c\u5b83\u4f1a\u663e\u793a\u4e00\u4e2a HTTP 400 Bad Request \u9519\u8bef\u9875\u9762\u3002\u6240\u4ee5\uff0c\u591a\u6570\u60c5\u51b5\u4e0b\u4f60\u5e76\u4e0d\u9700\u8981\u5e72\u9884\u8fd9\u4e2a\u884c\u4e3a\u3002 \u4f60\u53ef\u4ee5\u901a\u8fc7 args \u5c5e\u6027\u6765\u8bbf\u95ee URL \u4e2d\u63d0\u4ea4\u7684\u53c2\u6570 \uff08 ?key=value \uff09: searchword = request . args . get ( 'q' , '' ) \u6211\u4eec\u63a8\u8350\u7528 get \u6765\u8bbf\u95ee URL \u53c2\u6570\u6216\u6355\u83b7 KeyError \uff0c\u56e0\u4e3a\u7528\u6237\u53ef\u80fd\u4f1a\u4fee\u6539 URL\uff0c\u5411\u4ed6\u4eec\u5c55\u73b0\u4e00\u4e2a 400 bad request \u9875\u9762\u4f1a\u5f71\u54cd\u7528\u6237\u4f53\u9a8c\u3002","title":"\u8bf7\u6c42\u5bf9\u8c61"},{"location":"python/flask-basic/#_10","text":"\u7528 Flask \u5904\u7406\u6587\u4ef6\u4e0a\u4f20\u5f88\u7b80\u5355\u3002\u53ea\u8981\u786e\u4fdd\u4f60\u6ca1\u5fd8\u8bb0\u5728 HTML \u8868\u5355\u4e2d\u8bbe\u7f6e enctype=\"multipart/form-data\" \u5c5e\u6027\uff0c\u4e0d\u7136\u4f60\u7684\u6d4f\u89c8\u5668\u6839\u672c\u4e0d\u4f1a\u53d1\u9001\u6587\u4ef6\u3002 \u5df2\u4e0a\u4f20\u7684\u6587\u4ef6\u5b58\u50a8\u5728\u5185\u5b58\u6216\u662f\u6587\u4ef6\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u4e34\u65f6\u7684\u4f4d\u7f6e\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8bf7\u6c42\u5bf9\u8c61\u7684 files \u5c5e\u6027\u8bbf\u95ee\u5b83\u4eec\u3002\u6bcf\u4e2a\u4e0a\u4f20\u7684\u6587\u4ef6\u90fd\u4f1a\u5b58\u50a8\u5728\u8fd9\u4e2a\u5b57\u5178\u91cc\u3002\u5b83\u8868\u73b0\u8fd1\u4e4e\u4e3a\u4e00\u4e2a\u6807\u51c6\u7684 Python file \u5bf9\u8c61\uff0c\u4f46\u5b83\u8fd8\u6709\u4e00\u4e2a save() \u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5141\u8bb8\u4f60\u628a\u6587\u4ef6\u4fdd\u5b58\u5230\u670d\u52a1\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u7528\u5b83\u4fdd\u5b58\u6587\u4ef6\u7684\u4f8b\u5b50: from flask import request @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/uploaded_file.txt' ) ... \u5982\u679c\u4f60\u60f3\u77e5\u9053\u4e0a\u4f20\u524d\u6587\u4ef6\u5728\u5ba2\u6237\u7aef\u7684\u6587\u4ef6\u540d\u662f\u4ec0\u4e48\uff0c\u4f60\u53ef\u4ee5\u8bbf\u95ee filename \u5c5e\u6027\u3002\u4f46\u8bf7\u8bb0\u4f4f\uff0c \u6c38\u8fdc\u4e0d\u8981\u4fe1\u4efb\u8fd9\u4e2a\u503c\uff0c\u8fd9\u4e2a\u503c\u662f\u53ef\u4ee5\u4f2a\u9020\u7684\u3002\u5982\u679c\u4f60\u8981\u628a\u6587\u4ef6\u6309\u5ba2\u6237\u7aef\u63d0\u4f9b\u7684\u6587\u4ef6\u540d\u5b58\u50a8\u5728\u670d\u52a1\u5668\u4e0a\uff0c\u90a3\u4e48\u8bf7\u628a\u5b83\u4f20\u9012\u7ed9 Werkzeug \u63d0\u4f9b\u7684 secure_filename() \u51fd\u6570: from flask import request from werkzeug import secure_filename @app . route ( '/upload' , methods = [ 'GET' , 'POST' ]) def upload_file (): if request . method == 'POST' : f = request . files [ 'the_file' ] f . save ( '/var/www/uploads/' + secure_filename ( f . filename )) ...","title":"\u6587\u4ef6\u4e0a\u4f20"},{"location":"python/flask-basic/#cookies","text":"\u4f60\u53ef\u4ee5\u901a\u8fc7 cookies \u5c5e\u6027\u6765\u8bbf\u95ee Cookies\uff0c\u7528\u54cd\u5e94\u5bf9\u8c61\u7684 set_cookie \u65b9\u6cd5\u6765\u8bbe\u7f6e Cookies\u3002\u8bf7\u6c42\u5bf9\u8c61\u7684 cookies \u5c5e\u6027\u662f\u4e00\u4e2a\u5185\u5bb9\u4e3a\u5ba2\u6237\u7aef\u63d0\u4ea4\u7684\u6240\u6709 Cookies \u7684\u5b57\u5178\u3002\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u4f1a\u8bdd\uff0c\u8bf7\u4e0d\u8981\u76f4\u63a5\u4f7f\u7528 Cookies\uff0c\u8bf7\u53c2\u8003 \u4f1a\u8bdd \u4e00\u8282\u3002\u5728 Flask \u4e2d\uff0c\u5df2\u7ecf\u6ce8\u610f\u5904\u7406\u4e86\u4e00\u4e9b Cookies \u5b89\u5168\u7ec6\u8282\u3002 \u8bfb\u53d6 cookies: from flask import request @app . route ( '/' ) def index (): username = request . cookies . get ( 'username' ) # use cookies.get(key) instead of cookies[key] to not get a # KeyError if the cookie is missing. \u5b58\u50a8 cookies: from flask import make_response @app . route ( '/' ) def index (): resp = make_response ( render_template ( ... )) resp . set_cookie ( 'username' , 'the username' ) return resp \u53ef\u6ce8\u610f\u5230\u7684\u662f\uff0cCookies \u662f\u8bbe\u7f6e\u5728\u54cd\u5e94\u5bf9\u8c61\u4e0a\u7684\u3002\u7531\u4e8e\u901a\u5e38\u89c6\u56fe\u51fd\u6570\u53ea\u662f\u8fd4\u56de\u5b57\u7b26\u4e32\uff0c\u4e4b\u540e Flask \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u4f60\u8981\u663e\u5f0f\u5730\u8f6c\u6362\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u7136\u540e\u518d\u8fdb\u884c\u4fee\u6539\u3002 \u6709\u65f6\u5019\u4f60\u60f3\u8bbe\u7f6e Cookie\uff0c\u4f46\u54cd\u5e94\u5bf9\u8c61\u4e0d\u80fd\u918b\u5728\u3002\u8fd9\u53ef\u4ee5\u5229\u7528 \u5ef6\u8fdf\u8bf7\u6c42\u56de\u8c03 \u6a21\u5f0f\u5b9e\u73b0\u3002 \u4e3a\u6b64\uff0c\u4e5f\u53ef\u4ee5\u9605\u8bfb \u5173\u4e8e\u54cd\u5e94 \u3002","title":"Cookies"},{"location":"python/flask-basic/#_11","text":"\u4f60\u53ef\u4ee5\u7528 redirect() \u51fd\u6570\u628a\u7528\u6237\u91cd\u5b9a\u5411\u5230\u5176\u5b83\u5730\u65b9\u3002\u653e\u5f03\u8bf7\u6c42\u5e76\u8fd4\u56de\u9519\u8bef\u4ee3\u7801\uff0c\u7528 abort() \u51fd\u6570\u3002\u8fd9\u91cc\u662f\u4e00\u4e2a\u5b83\u4eec\u5982\u4f55\u4f7f\u7528\u7684\u4f8b\u5b50: from flask import abort , redirect , url_for @app . route ( '/' ) def index (): return redirect ( url_for ( 'login' )) @app . route ( '/login' ) def login (): abort ( 401 ) this_is_never_executed () \u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u65e0\u610f\u4e49\u7684\u4f8b\u5b50\u56e0\u4e3a\u7528\u6237\u4f1a\u4ece\u4e3b\u9875\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u4e0d\u80fd\u8bbf\u95ee\u7684\u9875\u9762 \uff08401 \u610f\u5473\u7740\u7981\u6b62\u8bbf\u95ee\uff09\uff0c\u4f46\u662f\u5b83\u5c55\u793a\u4e86\u91cd\u5b9a\u5411\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u9519\u8bef\u4ee3\u7801\u4f1a\u663e\u793a\u4e00\u4e2a\u9ed1\u767d\u7684\u9519\u8bef\u9875\u9762\u3002\u5982\u679c\u4f60\u8981\u5b9a\u5236\u9519\u8bef\u9875\u9762\uff0c \u53ef\u4ee5\u4f7f\u7528 errorhandler() \u88c5\u9970\u5668: from flask import render_template @app . errorhandler ( 404 ) def page_not_found ( error ): return render_template ( 'page_not_found.html' ), 404 \u6ce8\u610f render_template() \u8c03\u7528\u4e4b\u540e\u7684 404 \u3002\u8fd9\u544a\u8bc9 Flask\uff0c\u8be5\u9875\u7684\u9519\u8bef\u4ee3\u7801\u662f 404 \uff0c\u5373\u6ca1\u6709\u627e\u5230\u3002\u9ed8\u8ba4\u4e3a 200\uff0c\u4e5f\u5c31\u662f\u4e00\u5207\u6b63\u5e38\u3002","title":"\u91cd\u5b9a\u5411\u548c\u9519\u8bef"},{"location":"python/flask-basic/#_12","text":"\u89c6\u56fe\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u4e3a\u4e00\u4e2a\u54cd\u5e94\u5bf9\u8c61\u3002\u5982\u679c\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c \u5b83\u88ab\u8f6c\u6362\u4e3a\u8be5\u5b57\u7b26\u4e32\u4e3a\u4e3b\u4f53\u7684\u3001\u72b6\u6001\u7801\u4e3a 200 OK``\u7684 \u3001 MIME \u7c7b\u578b\u662f ``text/html \u7684\u54cd\u5e94\u5bf9\u8c61\u3002Flask \u628a\u8fd4\u56de\u503c\u8f6c\u6362\u4e3a\u54cd\u5e94\u5bf9\u8c61\u7684\u903b\u8f91\u662f\u8fd9\u6837\uff1a \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u5b83\u4f1a\u4ece\u89c6\u56fe\u76f4\u63a5\u8fd4\u56de\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u54cd\u5e94\u5bf9\u8c61\u4f1a\u7528\u5b57\u7b26\u4e32\u6570\u636e\u548c\u9ed8\u8ba4\u53c2\u6570\u521b\u5efa\u3002 \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\uff0c\u4e14\u5143\u7ec4\u4e2d\u7684\u5143\u7d20\u53ef\u4ee5\u63d0\u4f9b\u989d\u5916\u7684\u4fe1\u606f\u3002\u8fd9\u6837\u7684\u5143\u7ec4\u5fc5\u987b\u662f (response, status, headers) \u7684\u5f62\u5f0f\uff0c\u4e14\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u3002 status \u503c\u4f1a\u8986\u76d6\u72b6\u6001\u4ee3\u7801\uff0c headers \u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u8868\u6216\u5b57\u5178\uff0c\u4f5c\u4e3a\u989d\u5916\u7684\u6d88\u606f\u6807\u5934\u503c\u3002 \u5982\u679c\u4e0a\u8ff0\u6761\u4ef6\u5747\u4e0d\u6ee1\u8db3\uff0c Flask \u4f1a\u5047\u8bbe\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u5408\u6cd5\u7684 WSGI \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u8f6c\u6362\u4e3a\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61\u3002 \u5982\u679c\u4f60\u60f3\u5728\u89c6\u56fe\u91cc\u64cd\u7eb5\u4e0a\u8ff0\u6b65\u9aa4\u7ed3\u679c\u7684\u54cd\u5e94\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528 make_response() \u51fd\u6570\u3002 \u8b6c\u5982\u4f60\u6709\u8fd9\u6837\u4e00\u4e2a\u89c6\u56fe: @app . errorhandler ( 404 ) def not_found ( error ): return render_template ( 'error.html' ), 404 \u4f60\u53ea\u9700\u8981\u628a\u8fd4\u56de\u503c\u8868\u8fbe\u5f0f\u4f20\u9012\u7ed9 make_response() \uff0c\u83b7\u53d6\u7ed3\u679c\u5bf9\u8c61\u5e76\u4fee\u6539\uff0c\u7136\u540e\u518d\u8fd4\u56de\u5b83: @app . errorhandler ( 404 ) def not_found ( error ): resp = make_response ( render_template ( 'error.html' ), 404 ) resp . headers [ 'X-Something' ] = 'A value' return resp","title":"\u5173\u4e8e\u54cd\u5e94"},{"location":"python/flask-basic/#_13","text":"\u9664\u8bf7\u6c42\u5bf9\u8c61\u4e4b\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a session \u5bf9\u8c61\u3002\u5b83\u5141\u8bb8\u4f60\u5728\u4e0d\u540c\u8bf7\u6c42\u95f4\u5b58\u50a8\u7279\u5b9a\u7528\u6237\u7684\u4fe1\u606f\u3002\u5b83\u662f\u5728 Cookies \u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u5bf9 Cookies \u8fdb\u884c\u5bc6\u94a5\u7b7e\u540d\u3002\u8fd9\u610f\u5473\u7740\u7528\u6237\u53ef\u4ee5\u67e5\u770b\u4f60 Cookie \u7684\u5185\u5bb9\uff0c\u4f46\u5374\u4e0d\u80fd\u4fee\u6539\u5b83\uff0c\u9664\u975e\u7528\u6237\u77e5\u9053\u7b7e\u540d\u7684\u5bc6\u94a5\u3002 \u8981\u4f7f\u7528\u4f1a\u8bdd\uff0c\u4f60\u9700\u8981\u8bbe\u7f6e\u4e00\u4e2a\u5bc6\u94a5\u3002\u8fd9\u91cc\u4ecb\u7ecd\u4f1a\u8bdd\u5982\u4f55\u5de5\u4f5c: from flask import Flask , session , redirect , url_for , escape , request app = Flask ( __name__ ) @app . route ( '/' ) def index (): if 'username' in session : return 'Logged in as %s ' % escape ( session [ 'username' ]) return 'You are not logged in' @app . route ( '/login' , methods = [ 'GET' , 'POST' ]) def login (): if request . method == 'POST' : session [ 'username' ] = request . form [ 'username' ] return redirect ( url_for ( 'index' )) return ''' <form action=\"\" method=\"post\"> <p><input type=text name=username> <p><input type=submit value=Login> </form> ''' @app . route ( '/logout' ) def logout (): # remove the username from the session if it's there session . pop ( 'username' , None ) return redirect ( url_for ( 'index' )) # set the secret key. keep this really secret: app . secret_key = 'A0Zr98j/3yX R~XHH!jmN]LWX/,?RT' \u8fd9\u91cc\u63d0\u5230\u7684 escape() \u53ef\u4ee5\u5728\u4f60\u6a21\u677f\u5f15\u64ce\u5916\u505a\u8f6c\u4e49\uff08\u5982\u540c\u672c\u4f8b\uff09\u3002 \u5982\u4f55\u751f\u6210\u5f3a\u58ee\u7684\u5bc6\u94a5 \u968f\u673a\u7684\u95ee\u9898\u5728\u4e8e\u5f88\u96be\u5224\u65ad\u4ec0\u4e48\u662f\u771f\u968f\u673a\u3002\u4e00\u4e2a\u5bc6\u94a5\u5e94\u8be5\u8db3\u591f\u968f\u673a\u3002\u4f60\u7684\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u57fa\u4e8e\u4e00\u4e2a\u5bc6\u94a5\u968f\u673a\u751f\u6210\u5668\u6765\u751f\u6210\u6f02\u4eae\u7684\u968f\u673a\u503c\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u7528\u6765\u505a\u5bc6\u94a5: >>> import os >>> os . urandom ( 24 ) ' \\xfd {H \\xe5 < \\x95\\xf9\\xe3\\x96 .5 \\xd1\\x01 O<! \\xd5\\xa2\\xa0\\x9f R\" \\xa1\\xa8 ' \u628a\u8fd9\u4e2a\u503c\u590d\u5236\u7c98\u8d34\u8fdb\u4f60\u7684\u4ee3\u7801\u4e2d\uff0c\u4f60\u5c31\u6709\u4e86\u5bc6\u94a5\u3002 \u4f7f\u7528\u57fa\u4e8e cookie \u7684\u4f1a\u8bdd\u9700\u6ce8\u610f: Flask \u4f1a\u5c06\u4f60\u653e\u8fdb\u4f1a\u8bdd\u5bf9\u8c61\u7684\u503c\u5e8f\u5217\u5316\u81f3 Cookies\u3002\u5982\u679c\u4f60\u53d1\u73b0\u67d0\u4e9b\u503c\u5728\u8bf7\u6c42\u4e4b\u95f4\u5e76\u6ca1\u6709\u6301\u4e45\u5b58\u5728\uff0c\u7136\u800c\u786e\u5b9e\u5df2\u7ecf\u542f\u7528\u4e86 Cookies\uff0c\u4f46\u4e5f\u6ca1\u6709\u5f97\u5230\u660e\u786e\u7684\u9519\u8bef\u4fe1\u606f\u3002\u8fd9\u65f6\uff0c\u8bf7\u68c0\u67e5\u4f60\u7684\u9875\u9762\u54cd\u5e94\u4e2d\u7684 Cookies \u7684\u5927\u5c0f\uff0c\u5e76\u4e0e Web \u6d4f\u89c8\u5668\u6240\u652f\u6301\u7684\u5927\u5c0f\u5bf9\u6bd4\u3002","title":"\u4f1a\u8bdd"},{"location":"python/flask-basic/#_14","text":"\u53cd\u9988\uff0c\u662f\u826f\u597d\u7684\u5e94\u7528\u548c\u7528\u6237\u754c\u9762\u7684\u91cd\u8981\u6784\u6210\u3002\u5982\u679c\u7528\u6237\u5f97\u4e0d\u5230\u8db3\u591f\u7684\u53cd\u9988\uff0c\u4ed6\u4eec\u5f88\u53ef\u80fd\u5f00\u59cb\u538c\u6076\u8fd9\u4e2a\u5e94\u7528\u3002 Flask \u63d0\u4f9b\u4e86\u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\uff0c\u53ef\u4ee5\u7b80\u5355\u5730\u7ed9\u7528\u6237\u53cd\u9988\u3002 \u6d88\u606f\u95ea\u73b0\u7cfb\u7edf\u901a\u5e38\u4f1a\u5728\u8bf7\u6c42\u7ed3\u675f\u65f6\u8bb0\u5f55\u4fe1\u606f\uff0c\u5e76\u5728\u4e0b\u4e00\u4e2a\uff08\u4e14\u4ec5\u5728\u4e0b\u4e00\u4e2a\uff09\u8bf7\u6c42\u4e2d\u8bbf\u95ee\u8bb0\u5f55\u7684\u4fe1\u606f\u3002\u5c55\u73b0\u8fd9\u4e9b\u6d88\u606f\u901a\u5e38\u7ed3\u5408\u8981\u6a21\u677f\u5e03\u5c40\u3002 \u4f7f\u7528 flash() \u65b9\u6cd5\u53ef\u4ee5\u95ea\u73b0\u4e00\u6761\u6d88\u606f\u3002\u8981\u64cd\u4f5c\u6d88\u606f\u672c\u8eab\uff0c\u8bf7\u4f7f\u7528 get_flashed_messages() \u51fd\u6570\uff0c\u5e76\u4e14\u5728\u6a21\u677f\u4e2d\u4e5f\u53ef\u4ee5\u4f7f\u7528\u3002\u5b8c\u6574\u7684\u4f8b\u5b50\u89c1 \u6d88\u606f\u95ea\u73b0 \u90e8\u5206\u3002","title":"\u6d88\u606f\u95ea\u73b0"},{"location":"python/flask-basic/#_15","text":"0.3 \u65b0\u7248\u529f\u80fd. \u6709\u65f6\u5019\u4f60\u4f1a\u5904\u4e8e\u8fd9\u6837\u4e00\u79cd\u5883\u5730\uff0c\u4f60\u5904\u7406\u7684\u6570\u636e\u672c\u5e94\u8be5\u662f\u6b63\u786e\u7684\uff0c\u4f46\u5b9e\u9645\u4e0a\u4e0d\u662f\u3002 \u6bd4\u5982\uff0c\u4f60\u4f1a\u6709\u4e00\u4e9b\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u7684\u5ba2\u6237\u7aef\u4ee3\u7801\uff0c\u4f46\u8bf7\u6c42\u663e\u7136\u662f\u7578\u5f62\u7684\u3002\u8fd9\u53ef\u80fd\u662f\u7528\u6237\u7be1\u6539\u4e86\u6570\u636e\uff0c\u6216\u662f\u5ba2\u6237\u7aef\u4ee3\u7801\u7684\u7c97\u5236\u6ee5\u9020\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6b63\u5e38\u5730\u8fd4\u56de 400 Bad Request \u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u6709\u65f6\u5019\u4e0d\u80fd\u8fd9\u4e48\u505a\uff0c\u5e76\u4e14\u8981\u8ba9\u4ee3\u7801\u7ee7\u7eed\u8fd0\u884c\u3002 \u4f60\u53ef\u80fd\u4f9d\u7136\u60f3\u8981\u8bb0\u5f55\u4e0b\uff0c\u662f\u4ec0\u4e48\u4e0d\u5bf9\u52b2\u3002\u8fd9\u65f6\u65e5\u5fd7\u8bb0\u5f55\u5c31\u6d3e\u4e0a\u4e86\u7528\u573a\u3002\u4ece Flask 0.3 \u5f00\u59cb\uff0cFlask \u5c31\u5df2\u7ecf\u9884\u7f6e\u4e86\u65e5\u5fd7\u7cfb\u7edf\u3002 \u8fd9\u91cc\u6709\u4e00\u4e9b\u8c03\u7528\u65e5\u5fd7\u8bb0\u5f55\u7684\u4f8b\u5b50: app . logger . debug ( 'A value for debugging' ) app . logger . warning ( 'A warning occurred ( %d apples)' , 42 ) app . logger . error ( 'An error occurred' ) \u9644\u5e26\u7684 logger \u662f\u4e00\u4e2a\u6807\u51c6\u65e5\u5fd7\u7c7b Logger \uff0c\u6240\u4ee5\u66f4\u591a\u4fe1\u606f\u8bf7\u67e5\u9605 logging \u7684\u6587\u6863 \u3002","title":"\u65e5\u5fd7\u8bb0\u5f55"},{"location":"python/flask-basic/#wsgi","text":"\u5982\u679c\u4f60\u60f3\u7ed9\u4f60\u7684\u5e94\u7528\u6dfb\u52a0 WSGI \u4e2d\u95f4\u4ef6\uff0c\u4f60\u53ef\u4ee5\u5c01\u88c5\u5185\u90e8 WSGI \u5e94\u7528\u3002\u4f8b\u5982\u82e5\u662f\u4f60\u60f3\u7528 Werkzeug \u5305\u4e2d\u7684\u67d0\u4e2a\u4e2d\u95f4\u4ef6\u6765\u5e94\u4ed8 lighttpd \u4e2d\u7684 bugs \uff0c\u53ef\u4ee5\u8fd9\u6837\u505a: from werkzeug.contrib.fixers import LighttpdCGIRootFix app . wsgi_app = LighttpdCGIRootFix ( app . wsgi_app )","title":"\u6574\u5408 WSGI \u4e2d\u95f4\u4ef6"},{"location":"python/flask-basic/#web","text":"\u51c6\u5907\u597d\u90e8\u7f72\u4f60\u7684 Flask \u5e94\u7528\u4e86\uff1f\u4f60\u53ef\u4ee5\u7acb\u5373\u90e8\u7f72\u5230\u6258\u7ba1\u5e73\u53f0\u6765\u5706\u6ee1\u5b8c\u6210\u5feb\u901f\u5165\u95e8\uff0c\u4ee5\u4e0b\u5382\u5546\u5747\u5411\u5c0f\u9879\u76ee\u63d0\u4f9b\u514d\u8d39\u7684\u65b9\u6848: \u5728 Heroku \u4e0a\u90e8\u7f72 Flask \u5728 dotCloud \u4e0a\u90e8\u7f72 Flask \u9644 Flask \u7684\u5177\u4f53\u8bf4\u660e \u6258\u7ba1 Flask \u5e94\u7528\u7684\u5176\u5b83\u9009\u62e9: \u5728 Webfaction \u4e0a\u90e8\u7f72 Flask \u5728 Google App Engine \u4e0a\u90e8\u7f72 Flask \u7528 Localtunnel \u5171\u4eab\u4f60\u7684\u672c\u5730\u670d\u52a1\u5668 \u5982\u679c\u4f60\u6709\u81ea\u5df1\u7684\u4e3b\u673a\uff0c\u5e76\u4e14\u51c6\u5907\u81ea\u5df1\u6258\u7ba1\uff0c\u53c2\u89c1 \u90e8\u7f72\u9009\u62e9 \u7ae0\u8282\u3002","title":"\u90e8\u7f72\u5230 Web \u670d\u52a1\u5668"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/","text":"Flask \u8bfe\u7a0b\u5927\u7eb2 \u00b6 \u77e5\u4e4e\u9879\u76ee\u9700\u6c42\uff1a\u53ef\u4ee5\u7528\u6237\u6ce8\u518c\u3001\u7528\u6237\u767b\u5f55\u3001\u641c\u7d22\u65e5\u5fd7\u3001\u53d1\u5e03\u65e5\u5fd7\uff08\u589e\u5220\u6539\u67e5\uff09\u3001\u589e\u52a0\u8bc4\u8bba \u7b2c0\u7ae0 \u5b89\u88c5\u73af\u5883 \u00b6 \u5b89\u88c5 python \u00b6 py2.7(mac\u81ea\u5e26python2.7\uff09\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u5165 python\uff1bWindows \u9700\u8981\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff08python pip easy-install \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff09\u8fd9\u91cc\u9700\u8981\u8bbe\u7f6e python \u7684\u73af\u5883\u53d8\u91cf\u548c pip \u7684\u73af\u5883\u53d8\u91cf \u6253\u5f00\u8ba1\u7b97\u673a-\u5c5e\u6027-\u9ad8\u7ea7\u5c5e\u6027-\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf-\u589e\u52a0\u73af\u5883\u53d8\u91cf \u540d\u79f0\u662f PATH \u5c5e\u6027\u662f\u6587\u4ef6\u8def\u5f84 C:/Python27;C:/Python27/Scripts \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u540e\uff0c\u5728cmd\u4e2d\u53ef\u4ee5\u770b\u5230python\u548cpip\u7684\u7248\u672c\u53f7 \u5b89\u88c5\u865a\u62df\u73af\u5883 virtualenv \u00b6 \u6240\u4ee5\u9700\u8981python\u865a\u62df\u73af\u5883\u3002\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u4e0d\u540c\u7684falsk\u7684\u7248\u672c\u548c\u5e93\uff0c\u4e24\u4e2a\u7248\u672c\u4f1a\u5171\u5b58\u3002\u865a\u62df\u73af\u5883\u4f1a\u907f\u514d\u7248\u672c\u51b2\u7a81\u3002 \u5b89\u88c5\u865a\u62df\u73af\u5883 sudo pip install virtualenv mkdir Test cd test virtualenv flask-env Windows\u6fc0\u6d3b\u865a\u62df\u73af\u5883 cd falsk-dev/scripts activate deactivate # \u9000\u51fa Mac \u6fc0\u6d3b\u865a\u62df\u73af\u5883 source ~/Virtualenv/flask-env/bin/activate # source path/bin/activate deactivate # \u9000\u51fa \u5b89\u88c5flask \u00b6 falsk \u7248\u672c\u517c\u5bb9\u95ee\u9898\uff1a\u6559\u7a0b\u662f0.12.2 \u73b0\u5728\u5b89\u88c5\u7684\u662f 1.1.1 \u7248\u672c\uff1b\u53ef\u80fd\u90e8\u5206\u4ee3\u7801\u4e0d\u517c\u5bb9 source ~/Virtualenv/flask-env/bin/activate pip install flask python import flask print flask.__version__ # 1.1.1 \u73b0\u5728\u865a\u62df\u73af\u5883\u548cflask\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6bd5\uff08windows\u73af\u5883\u4e0b\uff09 \u7b2c\u4e00\u7ae0 URLs \u548c\u89c6\u56fe \u00b6 \u7b2c\u4e00\u8bfe hello flask \u00b6 \u7b2c\u4e00\u6b21\u521b\u5efa\u9879\u76ee\u7684\u65f6\u5019\uff0c\u9700\u8981\u6dfb\u52a0\u865a\u62df\u73af\u5883\uff08\u5728pycharm\uff09\u9009\u62e9\u865a\u62df\u73af\u5883\u4e2d\u7684python\u6267\u884c\u6587\u4ef6 flask \u4ee3\u7801\u57fa\u672c\u7ed3\u6784\u89e3\u91ca #coding=utf-8 # python 2\u9700\u8981\u8bbe\u7f6e\u8bed\u8a00utf-8 # \u4eceFlask\u6846\u67b6\u4e2d\u5bfc\u5165\u8fd9\u4e2a\u7c7b from flask import Flask # \u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u9700\u8981\u4f20\u53c2 app = Flask ( __name__ ) # \u88c5\u9970\u5668 @\u5f00\u5934\uff0c\u4f4d\u4e8e\u51fd\u6570\u7684\u4e0a\u9762 # \u662fURL\u89c6\u56fe\u51fd\u6570\u7684\u6620\u5c04 # 127.0.0.1:5000 \u4f1a\u6620\u5c04\u5230\u4e0b\u9762\u7684\u51fd\u6570 @app . route ( '/' ) def hello_world (): return 'Hello Michael An!' @app . route ( '/index' ) def index_page (): return 'Hello Index Page' # \u5165\u53e3\u7a0b\u5e8f\uff1a\u542f\u52a8\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u63a5\u53d7\u7528\u6237\u7684\u8bf7\u6c42\uff08eventlistener\uff09 if __name__ == '__main__' : app . run () \u7b2c\u4e8c\u8bfe debug \u00b6 app.run(debug=True) \u53ef\u4ee5\u6253\u5f00\u8c03\u8bd5\u6a21\u5f0f \u53ef\u4ee5\u9879\u76ee\u70ed\u52a0\u8f7d\uff08\u4fee\u6539python\u6587\u4ef6\u624d\u884c\uff0cJS\u6587\u4ef6\u4fee\u6539\u540e\u4e0d\u4f1a\u70ed\u52a0\u8f7d\uff09\uff1b\u53ef\u4ee5\u51fa\u73b0\u95ee\u9898\u540e\u5728\u9875\u9762\u4e2d\u770b\u5230\u62a5\u9519\u8be6\u60c5 \u5916\u90e8\u914d\u7f6e\u6587\u4ef6 \u00b6 \u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 config.py\uff0c\u52a0\u5165\u5927\u5199\u7684\u53c2\u6570 DEBUG = True # SECRET_KEY \u5728\u4e3b\u6587\u4ef6\u4e2d\u5f15\u5165\u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u7528\u914d\u7f6e main.py import config app . config . from_object ( config ) \u7b2c3\u8bfe URL \u4f20\u53c2 \u00b6 \u53ef\u4ee5\u5728URL\u4e2d\u4f20\u53c2 @app . route ( '/page/<number>' ) def change_page ( number ): return 'change page to %s ' % number \u53c2\u6570\u9700\u8981\u653e\u5728\u5c16\u62ec\u53f7\u4e2d\uff0c\u89c6\u56fe\u51fd\u6570\u4e2d\u53c2\u6570\u548c\u539f\u59cb\u53c2\u6570\u76f8\u540c\u3002 \u7b2c4\u8bfe URL\u53cd\u8f6c \u00b6 \u53ef\u4ee5\u5728\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\u4e2d\uff0c\u4f20\u5165\u5176\u4ed6\u89c6\u56fe\u51fd\u6570\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684URL \u4f7f\u7528 url_for \u5185\u7f6e\u51fd\u6570 \u7528\u9014\uff1a\u9875\u9762\u91cd\u5b9a\u5411\uff1bHTML\u4e2dA\u94fe\u63a5 from flask import Flask , url_for import config app = Flask ( __name__ ) app . config . from_object ( config ) @app . route ( '/' ) def hello_world (): print url_for ( 'handle_index' ) print url_for ( 'change_page' , number = 20 ) return 'Hello World!' @app . route ( '/index' ) def handle_index (): return 'index page' @app . route ( '/page/<number>' ) def change_page ( number ): return 'this is %s ' % number if __name__ == '__main__' : app . run () \u6ce8\u610f\uff1a\u8fd0\u884cflask\u540e\uff0c\u9700\u8981\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684\u5173\u95ed\u6309\u94ae\uff0c\u624d\u80fd\u5173\u95ed\u5f53\u524d\u7684\u672c\u5730\u670d\u52a1\u5668\u3002\u5426\u5219\u5173\u95ed\u8f6f\u4ef6\u540e\uff0c\u672c\u5730\u670d\u52a1\u5668\u8fd8\u5728\u8fd0\u884c\uff0c\u53ef\u80fd\u5f71\u54cd\u5176\u4ed6\u7684\u672c\u5730\u670d\u52a1\u5668\u3002 \u7b2c5\u8bfe \u9875\u9762\u91cd\u5b9a\u5411\u548c\u8df3\u8f6c \u00b6 \u5b9e\u9645\u4f7f\u7528:\u7528\u6237\u672a\u767b\u5f55\u65f6\uff0c\u8df3\u8f6c\uff08\u91cd\u5b9a\u5411\uff09\u5230\u767b\u5f55\u754c\u9762 #coding=utf-8 from flask import Flask , redirect , url_for app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return redirect ( url_for ( 'login' )) # return redirect('/login/') # return 'Hello World!' # \u5982\u679c\u662f\u56fa\u5b9a\u7684URL\uff0c\u90a3\u4e48\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u8def\u5f84\u66f4\u6539\u540e\uff0c\u91cd\u5b9a\u5411\u4f1a\u9519\u8bef # \u4f7f\u7528url_for\u52a8\u6001\u83b7\u53d6\u89c6\u56fe\u51fd\u6570\u7684\u8df3\u8f6c\u4f4d\u7f6e @app . route ( '/login/' ) def login (): return 'This is login page, please login' # we can use cookie to check user login state in the future @app . route ( '/question/<id>' ) def question ( id ): if id == '1' : return 'Your question is 1, This is question page' else : return redirect ( url_for ( 'login' )) if __name__ == '__main__' : app . run ( debug = True ) \u7b2c\u4e8c\u7ae0 Jinja2\u6a21\u677f \u00b6 \u7b2c\u4e00\u8bfe \u6a21\u677f\u6e32\u67d3\u548c\u4f20\u53c2 \u00b6 \u6a21\u677f\u653e\u5728 templates \u8def\u5f84\u4e0b \u5bfc\u5165\u6a21\u677f\uff1arender_template \u51fd\u6570\uff1b\u6ce8\u610f\uff1a\u4e0d\u9700\u8981\u5199templates\u6587\u4ef6\u5939\u7684\u8def\u5f84\uff0c\u76f4\u63a5\u5199\u5165\u53e3\u6587\u4ef6 \u6a21\u677f\u4f20\u53c2\uff1arender_template \u51fd\u6570\u4e2d\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8fdb\u884c\u4f20\u53c2\uff1b\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u53d8\u91cf\u9700\u8981 {{ \u53c2\u6570 }} \u7b2c\u4e8c\u8bfe \u6a21\u677f\u4e2d\u8bbf\u95ee\u5c5e\u6027\u548c\u5b57\u5178 \u00b6 \u8bbf\u95ee\u6a21\u578b\u4e2d\u7684\u5c5e\u6027\u6216\u8005\u5b57\u5178\u3002\u4f7f\u7528\u70b9\u8bed\u6cd5\u6216\u8005\u4e2d\u62ec\u53f7\u53ef\u4ee5\u83b7\u53d6\u503c \u7b2c\u4e09\u8bfe \u6761\u4ef6\u8bed\u53e5 \u00b6 {% if user %} <p>{{ user.name }}</p> <p>\u6ce8\u9500</p> {% else %} <p>\u767b\u5f55</p> <p>\u6ce8\u518c</p> {% endif %} and or not \u903b\u8f91\u64cd\u4f5c \u7b2c\u56db\u8bfe \u5faa\u73af\u8bed\u53e5 \u00b6 \u904d\u5386\u5b57\u5178 \u00b6 python \u4e2d\u904d\u5386\u5b57\u5178\u548c JS \u4e0d\u540c user = { 'name' : 'Mike' , 'age' : 18 } for k , v in user . items (): print k print v Jinja2 \u6a21\u677f\u4e2d\u7684\u4f7f\u7528 \u5176\u4ed6\u7684\u904d\u5386\u548cpython\u4e00\u6837\uff0c \u4f7f\u7528 items() keys() values() iteritems() itrtkeys() itervalues() \u8fed\u4ee3\u5668\u904d\u5386 <dl> <% for key, value, in my_dict.iteritems() %> <dt>{{ key|e }}</dt> <dd>{{ value|e }}</dd> <% endfor %> </dl> \u904d\u5386\u5217\u8868 \u00b6 \u6ca1\u6709\u503c\u7684\u60c5\u51b5 <ul> {% for user in users %} <li>{{ user.name }}</li> {% else %} <li>no users found</li> {% endfor %} </ul> \u5c0f\u6848\u4f8b\uff1a\u56db\u5927\u540d\u8457\u7684\u6e32\u67d3","title":"flask\u7f51\u6613\u4e91\u8bfe\u5802\u7b14\u8bb0.md"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#flask","text":"\u77e5\u4e4e\u9879\u76ee\u9700\u6c42\uff1a\u53ef\u4ee5\u7528\u6237\u6ce8\u518c\u3001\u7528\u6237\u767b\u5f55\u3001\u641c\u7d22\u65e5\u5fd7\u3001\u53d1\u5e03\u65e5\u5fd7\uff08\u589e\u5220\u6539\u67e5\uff09\u3001\u589e\u52a0\u8bc4\u8bba","title":"Flask \u8bfe\u7a0b\u5927\u7eb2"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#0","text":"","title":"\u7b2c0\u7ae0 \u5b89\u88c5\u73af\u5883"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#python","text":"py2.7(mac\u81ea\u5e26python2.7\uff09\u76f4\u63a5\u5728\u63a7\u5236\u53f0\u8f93\u5165 python\uff1bWindows \u9700\u8981\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff08python pip easy-install \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff09\u8fd9\u91cc\u9700\u8981\u8bbe\u7f6e python \u7684\u73af\u5883\u53d8\u91cf\u548c pip \u7684\u73af\u5883\u53d8\u91cf \u6253\u5f00\u8ba1\u7b97\u673a-\u5c5e\u6027-\u9ad8\u7ea7\u5c5e\u6027-\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf-\u589e\u52a0\u73af\u5883\u53d8\u91cf \u540d\u79f0\u662f PATH \u5c5e\u6027\u662f\u6587\u4ef6\u8def\u5f84 C:/Python27;C:/Python27/Scripts \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u540e\uff0c\u5728cmd\u4e2d\u53ef\u4ee5\u770b\u5230python\u548cpip\u7684\u7248\u672c\u53f7","title":"\u5b89\u88c5 python"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#virtualenv","text":"\u6240\u4ee5\u9700\u8981python\u865a\u62df\u73af\u5883\u3002\u4e0d\u540c\u7684\u865a\u62df\u73af\u5883\u4e2d\u5b89\u88c5\u4e0d\u540c\u7684falsk\u7684\u7248\u672c\u548c\u5e93\uff0c\u4e24\u4e2a\u7248\u672c\u4f1a\u5171\u5b58\u3002\u865a\u62df\u73af\u5883\u4f1a\u907f\u514d\u7248\u672c\u51b2\u7a81\u3002 \u5b89\u88c5\u865a\u62df\u73af\u5883 sudo pip install virtualenv mkdir Test cd test virtualenv flask-env Windows\u6fc0\u6d3b\u865a\u62df\u73af\u5883 cd falsk-dev/scripts activate deactivate # \u9000\u51fa Mac \u6fc0\u6d3b\u865a\u62df\u73af\u5883 source ~/Virtualenv/flask-env/bin/activate # source path/bin/activate deactivate # \u9000\u51fa","title":"\u5b89\u88c5\u865a\u62df\u73af\u5883 virtualenv"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#flask_1","text":"falsk \u7248\u672c\u517c\u5bb9\u95ee\u9898\uff1a\u6559\u7a0b\u662f0.12.2 \u73b0\u5728\u5b89\u88c5\u7684\u662f 1.1.1 \u7248\u672c\uff1b\u53ef\u80fd\u90e8\u5206\u4ee3\u7801\u4e0d\u517c\u5bb9 source ~/Virtualenv/flask-env/bin/activate pip install flask python import flask print flask.__version__ # 1.1.1 \u73b0\u5728\u865a\u62df\u73af\u5883\u548cflask\u5df2\u7ecf\u914d\u7f6e\u5b8c\u6bd5\uff08windows\u73af\u5883\u4e0b\uff09","title":"\u5b89\u88c5flask"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#urls","text":"","title":"\u7b2c\u4e00\u7ae0 URLs \u548c\u89c6\u56fe"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#hello-flask","text":"\u7b2c\u4e00\u6b21\u521b\u5efa\u9879\u76ee\u7684\u65f6\u5019\uff0c\u9700\u8981\u6dfb\u52a0\u865a\u62df\u73af\u5883\uff08\u5728pycharm\uff09\u9009\u62e9\u865a\u62df\u73af\u5883\u4e2d\u7684python\u6267\u884c\u6587\u4ef6 flask \u4ee3\u7801\u57fa\u672c\u7ed3\u6784\u89e3\u91ca #coding=utf-8 # python 2\u9700\u8981\u8bbe\u7f6e\u8bed\u8a00utf-8 # \u4eceFlask\u6846\u67b6\u4e2d\u5bfc\u5165\u8fd9\u4e2a\u7c7b from flask import Flask # \u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u9700\u8981\u4f20\u53c2 app = Flask ( __name__ ) # \u88c5\u9970\u5668 @\u5f00\u5934\uff0c\u4f4d\u4e8e\u51fd\u6570\u7684\u4e0a\u9762 # \u662fURL\u89c6\u56fe\u51fd\u6570\u7684\u6620\u5c04 # 127.0.0.1:5000 \u4f1a\u6620\u5c04\u5230\u4e0b\u9762\u7684\u51fd\u6570 @app . route ( '/' ) def hello_world (): return 'Hello Michael An!' @app . route ( '/index' ) def index_page (): return 'Hello Index Page' # \u5165\u53e3\u7a0b\u5e8f\uff1a\u542f\u52a8\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u63a5\u53d7\u7528\u6237\u7684\u8bf7\u6c42\uff08eventlistener\uff09 if __name__ == '__main__' : app . run ()","title":"\u7b2c\u4e00\u8bfe hello flask"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#debug","text":"app.run(debug=True) \u53ef\u4ee5\u6253\u5f00\u8c03\u8bd5\u6a21\u5f0f \u53ef\u4ee5\u9879\u76ee\u70ed\u52a0\u8f7d\uff08\u4fee\u6539python\u6587\u4ef6\u624d\u884c\uff0cJS\u6587\u4ef6\u4fee\u6539\u540e\u4e0d\u4f1a\u70ed\u52a0\u8f7d\uff09\uff1b\u53ef\u4ee5\u51fa\u73b0\u95ee\u9898\u540e\u5728\u9875\u9762\u4e2d\u770b\u5230\u62a5\u9519\u8be6\u60c5","title":"\u7b2c\u4e8c\u8bfe debug"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_1","text":"\u65b0\u5efa\u914d\u7f6e\u6587\u4ef6 config.py\uff0c\u52a0\u5165\u5927\u5199\u7684\u53c2\u6570 DEBUG = True # SECRET_KEY \u5728\u4e3b\u6587\u4ef6\u4e2d\u5f15\u5165\u914d\u7f6e\u6587\u4ef6\uff0c\u4f7f\u7528\u914d\u7f6e main.py import config app . config . from_object ( config )","title":"\u5916\u90e8\u914d\u7f6e\u6587\u4ef6"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#3-url","text":"\u53ef\u4ee5\u5728URL\u4e2d\u4f20\u53c2 @app . route ( '/page/<number>' ) def change_page ( number ): return 'change page to %s ' % number \u53c2\u6570\u9700\u8981\u653e\u5728\u5c16\u62ec\u53f7\u4e2d\uff0c\u89c6\u56fe\u51fd\u6570\u4e2d\u53c2\u6570\u548c\u539f\u59cb\u53c2\u6570\u76f8\u540c\u3002","title":"\u7b2c3\u8bfe URL \u4f20\u53c2"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#4-url","text":"\u53ef\u4ee5\u5728\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\u4e2d\uff0c\u4f20\u5165\u5176\u4ed6\u89c6\u56fe\u51fd\u6570\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684URL \u4f7f\u7528 url_for \u5185\u7f6e\u51fd\u6570 \u7528\u9014\uff1a\u9875\u9762\u91cd\u5b9a\u5411\uff1bHTML\u4e2dA\u94fe\u63a5 from flask import Flask , url_for import config app = Flask ( __name__ ) app . config . from_object ( config ) @app . route ( '/' ) def hello_world (): print url_for ( 'handle_index' ) print url_for ( 'change_page' , number = 20 ) return 'Hello World!' @app . route ( '/index' ) def handle_index (): return 'index page' @app . route ( '/page/<number>' ) def change_page ( number ): return 'this is %s ' % number if __name__ == '__main__' : app . run () \u6ce8\u610f\uff1a\u8fd0\u884cflask\u540e\uff0c\u9700\u8981\u70b9\u51fb\u5de6\u4e0b\u89d2\u7684\u5173\u95ed\u6309\u94ae\uff0c\u624d\u80fd\u5173\u95ed\u5f53\u524d\u7684\u672c\u5730\u670d\u52a1\u5668\u3002\u5426\u5219\u5173\u95ed\u8f6f\u4ef6\u540e\uff0c\u672c\u5730\u670d\u52a1\u5668\u8fd8\u5728\u8fd0\u884c\uff0c\u53ef\u80fd\u5f71\u54cd\u5176\u4ed6\u7684\u672c\u5730\u670d\u52a1\u5668\u3002","title":"\u7b2c4\u8bfe URL\u53cd\u8f6c"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#5","text":"\u5b9e\u9645\u4f7f\u7528:\u7528\u6237\u672a\u767b\u5f55\u65f6\uff0c\u8df3\u8f6c\uff08\u91cd\u5b9a\u5411\uff09\u5230\u767b\u5f55\u754c\u9762 #coding=utf-8 from flask import Flask , redirect , url_for app = Flask ( __name__ ) @app . route ( '/' ) def hello_world (): return redirect ( url_for ( 'login' )) # return redirect('/login/') # return 'Hello World!' # \u5982\u679c\u662f\u56fa\u5b9a\u7684URL\uff0c\u90a3\u4e48\u89c6\u56fe\u51fd\u6570\u4e2d\u7684\u8def\u5f84\u66f4\u6539\u540e\uff0c\u91cd\u5b9a\u5411\u4f1a\u9519\u8bef # \u4f7f\u7528url_for\u52a8\u6001\u83b7\u53d6\u89c6\u56fe\u51fd\u6570\u7684\u8df3\u8f6c\u4f4d\u7f6e @app . route ( '/login/' ) def login (): return 'This is login page, please login' # we can use cookie to check user login state in the future @app . route ( '/question/<id>' ) def question ( id ): if id == '1' : return 'Your question is 1, This is question page' else : return redirect ( url_for ( 'login' )) if __name__ == '__main__' : app . run ( debug = True )","title":"\u7b2c5\u8bfe \u9875\u9762\u91cd\u5b9a\u5411\u548c\u8df3\u8f6c"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#jinja2","text":"","title":"\u7b2c\u4e8c\u7ae0 Jinja2\u6a21\u677f"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_2","text":"\u6a21\u677f\u653e\u5728 templates \u8def\u5f84\u4e0b \u5bfc\u5165\u6a21\u677f\uff1arender_template \u51fd\u6570\uff1b\u6ce8\u610f\uff1a\u4e0d\u9700\u8981\u5199templates\u6587\u4ef6\u5939\u7684\u8def\u5f84\uff0c\u76f4\u63a5\u5199\u5165\u53e3\u6587\u4ef6 \u6a21\u677f\u4f20\u53c2\uff1arender_template \u51fd\u6570\u4e2d\u7b2c\u4e8c\u4e2a\u53c2\u6570\u8fdb\u884c\u4f20\u53c2\uff1b\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u53d8\u91cf\u9700\u8981 {{ \u53c2\u6570 }}","title":"\u7b2c\u4e00\u8bfe \u6a21\u677f\u6e32\u67d3\u548c\u4f20\u53c2"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_3","text":"\u8bbf\u95ee\u6a21\u578b\u4e2d\u7684\u5c5e\u6027\u6216\u8005\u5b57\u5178\u3002\u4f7f\u7528\u70b9\u8bed\u6cd5\u6216\u8005\u4e2d\u62ec\u53f7\u53ef\u4ee5\u83b7\u53d6\u503c","title":"\u7b2c\u4e8c\u8bfe \u6a21\u677f\u4e2d\u8bbf\u95ee\u5c5e\u6027\u548c\u5b57\u5178"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_4","text":"{% if user %} <p>{{ user.name }}</p> <p>\u6ce8\u9500</p> {% else %} <p>\u767b\u5f55</p> <p>\u6ce8\u518c</p> {% endif %} and or not \u903b\u8f91\u64cd\u4f5c","title":"\u7b2c\u4e09\u8bfe \u6761\u4ef6\u8bed\u53e5"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_5","text":"","title":"\u7b2c\u56db\u8bfe \u5faa\u73af\u8bed\u53e5"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_6","text":"python \u4e2d\u904d\u5386\u5b57\u5178\u548c JS \u4e0d\u540c user = { 'name' : 'Mike' , 'age' : 18 } for k , v in user . items (): print k print v Jinja2 \u6a21\u677f\u4e2d\u7684\u4f7f\u7528 \u5176\u4ed6\u7684\u904d\u5386\u548cpython\u4e00\u6837\uff0c \u4f7f\u7528 items() keys() values() iteritems() itrtkeys() itervalues() \u8fed\u4ee3\u5668\u904d\u5386 <dl> <% for key, value, in my_dict.iteritems() %> <dt>{{ key|e }}</dt> <dd>{{ value|e }}</dd> <% endfor %> </dl>","title":"\u904d\u5386\u5b57\u5178"},{"location":"python/flask%E7%BD%91%E6%98%93%E4%BA%91%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0/#_7","text":"\u6ca1\u6709\u503c\u7684\u60c5\u51b5 <ul> {% for user in users %} <li>{{ user.name }}</li> {% else %} <li>no users found</li> {% endfor %} </ul> \u5c0f\u6848\u4f8b\uff1a\u56db\u5927\u540d\u8457\u7684\u6e32\u67d3","title":"\u904d\u5386\u5217\u8868"},{"location":"python/pandas%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/","text":"\u5b89\u88c5pandas\u65f6\u51fa\u73b0\u73af\u5883\u9519\u8bef \u00b6 \u5728\u5b89\u88c5pandas\u65f6\u51fa\u73b0Could not install packages due to an EnvironmentError Consider using the --user option or check the permissions \u6b64\u65f6\u5728install\u540e\u9762\u52a0--user\u5373\u53ef pip install --user pandas \u5206\u7c7b: python\u6570\u636e\u5206\u6790 ValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements \u00b6 \u9519\u8bef\u5982\u4e0b\uff1a ValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements \u4ee3\u7801\uff1a import pandas as pd out_pred_rows = [] sub = pd . DataFrame ( out_pred_rows ) sub . columns = [ 'ImageId' , 'EncodedPixels' ] # \u5982\u679cout_pred_rows\u4e3a\u7a7a\uff0c\u5219\u8fd9\u53e5\u8bdd\u4f1a\u62a5\u9519 sub = sub [ sub . EncodedPixels . notnull ()] \u89e3\u51b3\u65b9\u6848\uff1a \u4fdd\u8bc1out_pred_rows\u4e0d\u4e3a\u7a7a \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/wangdongwei0/article/details/83863533","title":"pandas \u5e38\u89c1\u95ee\u9898.md"},{"location":"python/pandas%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/#pandas","text":"\u5728\u5b89\u88c5pandas\u65f6\u51fa\u73b0Could not install packages due to an EnvironmentError Consider using the --user option or check the permissions \u6b64\u65f6\u5728install\u540e\u9762\u52a0--user\u5373\u53ef pip install --user pandas \u5206\u7c7b: python\u6570\u636e\u5206\u6790","title":"\u5b89\u88c5pandas\u65f6\u51fa\u73b0\u73af\u5883\u9519\u8bef"},{"location":"python/pandas%20%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/#valueerror-length-mismatch-expected-axis-has-0-elements-new-values-have-2-elements","text":"\u9519\u8bef\u5982\u4e0b\uff1a ValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements \u4ee3\u7801\uff1a import pandas as pd out_pred_rows = [] sub = pd . DataFrame ( out_pred_rows ) sub . columns = [ 'ImageId' , 'EncodedPixels' ] # \u5982\u679cout_pred_rows\u4e3a\u7a7a\uff0c\u5219\u8fd9\u53e5\u8bdd\u4f1a\u62a5\u9519 sub = sub [ sub . EncodedPixels . notnull ()] \u89e3\u51b3\u65b9\u6848\uff1a \u4fdd\u8bc1out_pred_rows\u4e0d\u4e3a\u7a7a \u539f\u6587\u94fe\u63a5\uff1a https://blog.csdn.net/wangdongwei0/article/details/83863533","title":"ValueError: Length mismatch: Expected axis has 0 elements, new values have 2 elements"},{"location":"python/%E6%90%AD%E5%BB%BApython3%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/","text":"Mac \u642d\u5efa python3 \u5f00\u53d1\u73af\u5883 \u00b6 \u95ee\u9898\u63cf\u8ff0 \u00b6 \u6211\u672c\u5730\u9700\u8981\u8fd0\u884c\u4e00\u4e2a Django3 \u7684\u9879\u76ee\uff0cDjango3 \u9700\u8981 python3 \u7684\u5f00\u53d1\u73af\u5883\uff0c\u6211\u7684 MAC \u4e0a\u9ed8\u8ba4\u5b89\u88c5 python 2.7.10 \u7248\u672c\uff0c\u6240\u4ee5\u9700\u8981\u65b0\u5efa\u4e00\u4e2a python3 \u7684\u5f00\u53d1\u73af\u5883\u3002 \u56e0\u4e3a\u5176\u4ed6\u9879\u76ee\u4f1a\u4f7f\u7528 python2 \u7684\u5f00\u53d1\u73af\u5883\u3002\u4e3a\u4e86\u907f\u514d\u9879\u76ee\u4e92\u76f8\u5e72\u6270\uff0c\u6211\u4f7f\u7528 virtualenv \u642d\u5efa python3 \u5f00\u53d1\u73af\u5883\u3002 \u5b89\u88c5python3 \u00b6 \u5982\u679c\u7535\u8111\u4e0a\u6ca1\u6709 python3 \u7684\u8f6f\u4ef6\uff0c\u9700\u8981\u4e0b\u8f7d\u5b89\u88c5\uff1b\u5982\u679c\u5df2\u7ecf\u6709python3\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u7ae0\uff1a \u5b89\u88c5\u811a\u672c\u5982\u4e0b\uff1a wget https://www.python.org/ftp/python/3.4.3/Python-3.4.3.tgz tar zxvf Python-3.4.3.tgz cd Python-3.4.3 ./configure --enable-shared --prefix = /usr/local make && make altinstall \u5b89\u88c5\u5176\u5b83\u7248\u672c\u7684python\u53ef\u4ece\u5b98\u7f51\u4e0b\u8f7d\uff1a https://www.python.org/ \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u8f93\u5165 python3 \u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6210\u529f\uff0c\u56fe\u7247\u5982\u4e0b\uff08\u6211\u672c\u5730\u5b89\u88c5\u76843.7.0\u7248\u672c\uff09 \u642d\u5efapython3\u5f00\u53d1\u73af\u5883 \u00b6 1\u3001\u5b89\u88c5virtualenv\uff0c\u53ef\u4ee5\u901a\u8fc7pip\u8fdb\u884c\u5b89\u88c5\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a pip install virtualenv 2\u3001\u521b\u5efa\u865a\u62df\u73af\u5883\uff1a \u6ce8\u610f\uff1a\u8fd9\u91cc python3.7 \u5bf9\u5e94\u4f60\u5b89\u88c5\u7684\u7248\u672c\uff083.4\u6216\u80053.7\uff09 virtualenv -p /usr/local/bin/python3.7 \u4f60\u7684\u865a\u62df\u73af\u5883\u7684\u540d\u79f0\uff08\u4f8b\u5982\uff0cpy37-michael-blog-env\uff09 \u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u540e\uff0c\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efa\u865a\u62df\u73af\u5883\u6587\u4ef6\u5939\uff08py37-michael-blog-env\uff09\u3002 3\u3001\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff1a source py37-michael-blog-env/bin/activate \u8fdb\u884c\u76f8\u5173\u5f00\u53d1\uff08pip install -r requirements\uff09\u7b49\u7b49 \u52a0\u5165\u56fe\u7247 4\u3001\u9000\u51fa\u865a\u62df\u73af\u5883 deactivate \u3000\u3000\u3000\u3000\u3000\u3000 \u518d\u6b21\u8fdb\u5165\u9879\u76ee\u65f6\uff0c\u53ea\u9700\u8981\u6267\u884c3-4\u6b65\u9aa4\u5373\u53ef\uff08\u6fc0\u6d3b-\u5f00\u53d1-\u9000\u51fa\u865a\u62df\u73af\u5883\uff09","title":"\u642d\u5efapython3\u5f00\u53d1\u73af\u5883.md"},{"location":"python/%E6%90%AD%E5%BB%BApython3%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#mac-python3","text":"","title":"Mac \u642d\u5efa python3 \u5f00\u53d1\u73af\u5883"},{"location":"python/%E6%90%AD%E5%BB%BApython3%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#_1","text":"\u6211\u672c\u5730\u9700\u8981\u8fd0\u884c\u4e00\u4e2a Django3 \u7684\u9879\u76ee\uff0cDjango3 \u9700\u8981 python3 \u7684\u5f00\u53d1\u73af\u5883\uff0c\u6211\u7684 MAC \u4e0a\u9ed8\u8ba4\u5b89\u88c5 python 2.7.10 \u7248\u672c\uff0c\u6240\u4ee5\u9700\u8981\u65b0\u5efa\u4e00\u4e2a python3 \u7684\u5f00\u53d1\u73af\u5883\u3002 \u56e0\u4e3a\u5176\u4ed6\u9879\u76ee\u4f1a\u4f7f\u7528 python2 \u7684\u5f00\u53d1\u73af\u5883\u3002\u4e3a\u4e86\u907f\u514d\u9879\u76ee\u4e92\u76f8\u5e72\u6270\uff0c\u6211\u4f7f\u7528 virtualenv \u642d\u5efa python3 \u5f00\u53d1\u73af\u5883\u3002","title":"\u95ee\u9898\u63cf\u8ff0"},{"location":"python/%E6%90%AD%E5%BB%BApython3%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#python3","text":"\u5982\u679c\u7535\u8111\u4e0a\u6ca1\u6709 python3 \u7684\u8f6f\u4ef6\uff0c\u9700\u8981\u4e0b\u8f7d\u5b89\u88c5\uff1b\u5982\u679c\u5df2\u7ecf\u6709python3\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u7ae0\uff1a \u5b89\u88c5\u811a\u672c\u5982\u4e0b\uff1a wget https://www.python.org/ftp/python/3.4.3/Python-3.4.3.tgz tar zxvf Python-3.4.3.tgz cd Python-3.4.3 ./configure --enable-shared --prefix = /usr/local make && make altinstall \u5b89\u88c5\u5176\u5b83\u7248\u672c\u7684python\u53ef\u4ece\u5b98\u7f51\u4e0b\u8f7d\uff1a https://www.python.org/ \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u7ec8\u7aef\u8f93\u5165 python3 \u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6210\u529f\uff0c\u56fe\u7247\u5982\u4e0b\uff08\u6211\u672c\u5730\u5b89\u88c5\u76843.7.0\u7248\u672c\uff09","title":"\u5b89\u88c5python3"},{"location":"python/%E6%90%AD%E5%BB%BApython3%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#python3_1","text":"1\u3001\u5b89\u88c5virtualenv\uff0c\u53ef\u4ee5\u901a\u8fc7pip\u8fdb\u884c\u5b89\u88c5\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a pip install virtualenv 2\u3001\u521b\u5efa\u865a\u62df\u73af\u5883\uff1a \u6ce8\u610f\uff1a\u8fd9\u91cc python3.7 \u5bf9\u5e94\u4f60\u5b89\u88c5\u7684\u7248\u672c\uff083.4\u6216\u80053.7\uff09 virtualenv -p /usr/local/bin/python3.7 \u4f60\u7684\u865a\u62df\u73af\u5883\u7684\u540d\u79f0\uff08\u4f8b\u5982\uff0cpy37-michael-blog-env\uff09 \u6267\u884c\u4e0a\u8ff0\u547d\u4ee4\u540e\uff0c\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u521b\u5efa\u865a\u62df\u73af\u5883\u6587\u4ef6\u5939\uff08py37-michael-blog-env\uff09\u3002 3\u3001\u6fc0\u6d3b\u865a\u62df\u73af\u5883\uff1a source py37-michael-blog-env/bin/activate \u8fdb\u884c\u76f8\u5173\u5f00\u53d1\uff08pip install -r requirements\uff09\u7b49\u7b49 \u52a0\u5165\u56fe\u7247 4\u3001\u9000\u51fa\u865a\u62df\u73af\u5883 deactivate \u3000\u3000\u3000\u3000\u3000\u3000 \u518d\u6b21\u8fdb\u5165\u9879\u76ee\u65f6\uff0c\u53ea\u9700\u8981\u6267\u884c3-4\u6b65\u9aa4\u5373\u53ef\uff08\u6fc0\u6d3b-\u5f00\u53d1-\u9000\u51fa\u865a\u62df\u73af\u5883\uff09","title":"\u642d\u5efapython3\u5f00\u53d1\u73af\u5883"},{"location":"sql/Mac%20pip%20install%20mysql-python%20unsuccessful/","text":"Mac pip install mysql-python \u00b6 Mac pip install mysql-python unsuccessfulI nstalled MySQL and Workbench from website. I have a django project whose requirements.txt: Django==1.11.12 djangorestframework==3.8.2 django-cors-headers==2.2.0 drfdocs==0.0.11 mysql-python==1.2.5 django-rest-auth==0.9.3 django-allauth==0.35.0 nltk==3.2.5 django-extensions==2.0.7 pyparsing==2.2.0 pydot==1.2.4 When I run pip install -r requirements.txt I got an error mysql_config not found . To solve this I ran PATH=$PATH:/usr/local/mysql/bin It now throws _mysql.c:44:10: fatal error: 'my_config.h' file not found #include \"my_config.h\" ^~~~~~~~~~~~~ 1 error generated. error: command 'cc' failed with exit status 1 ---------------------------------------- Command \"\"/Users/nitish/gitProjects/Vision Backlog/vb_env/bin/python\" -u -c \"import setuptools, tokenize;__file__='/private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-M4ue9E/mysql-python/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-record-7OCzf1/install-record.txt --single-version-externally-managed --compile --install-headers \"/Users/nitish/gitProjects/Vision Backlog/vb_env/include/site/python2.7/mysql-python\"\" failed with error code 1 in /private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-M4ue9E/mysql-python/ Why is this happening? UPDATE: following bellow solution threw: Collecting MySQL-python Using cached https://files.pythonhosted.org/packages/a5/e9/51b544da85a36a68debe7a7091f068d802fc515a3a202652828c73453cad/MySQL-python-1.2.5.zip Complete output from command python setup.py egg_info: Traceback (most recent call last): File \"<string>\", line 1, in <module> File \"/private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-X6b4rU/MySQL-python/setup.py\", line 17, in <module> metadata, options = get_config() File \"setup_posix.py\", line 53, in get_config libraries = [ dequote(i[2:]) for i in libs if i.startswith(compiler_flag(\"l\")) ] File \"setup_posix.py\", line 8, in dequote if s[0] in \"\\\"'\" and s[0] == s[-1]: IndexError: string index out of range \u7b2c\u4e00\u79cd Please, try: CFLAGS=-Qunused-arguments CPPFLAGS=-Qunused-arguments pip install -r requirements.txt If it does not work: First install mysql-connector-c brew install mysql-connector-c pip install MySQL-python If you are using Windows: https://dev.mysql.com/downloads/connector/c/ You can also check what happend when you try install it with pip3. UPDATE: If you have Linux: Please open the /usr/local/bin/mysql_config . And then: #Create options Libs = \"-L $ pkglibdir \" Libs = \" $ libs -l\" replace with: #Create options Libs = \"- L $ pkglibdir\" Libs = \"$ libs -lmysqlclient -lssl -lcrypto\" Save it and reinstall mysql-python . pip uninstall mysql-python pip install mysql-python For Mac: LDFLAGS=-L/usr/local/opt/openssl/lib pip install mysql-python should be helpful. \u7b2c\u4e8c\u79cd 26 Installing of an older version of the MySQL worked for me: brew remove mysql brew install mysql@5.7 brew link --force mysql@5.7 pip install mysql-python See: issue on the MySQLdb1 Github and this sof answer","title":"Mac pip install mysql-python unsuccessful.md"},{"location":"sql/Mac%20pip%20install%20mysql-python%20unsuccessful/#mac-pip-install-mysql-python","text":"Mac pip install mysql-python unsuccessfulI nstalled MySQL and Workbench from website. I have a django project whose requirements.txt: Django==1.11.12 djangorestframework==3.8.2 django-cors-headers==2.2.0 drfdocs==0.0.11 mysql-python==1.2.5 django-rest-auth==0.9.3 django-allauth==0.35.0 nltk==3.2.5 django-extensions==2.0.7 pyparsing==2.2.0 pydot==1.2.4 When I run pip install -r requirements.txt I got an error mysql_config not found . To solve this I ran PATH=$PATH:/usr/local/mysql/bin It now throws _mysql.c:44:10: fatal error: 'my_config.h' file not found #include \"my_config.h\" ^~~~~~~~~~~~~ 1 error generated. error: command 'cc' failed with exit status 1 ---------------------------------------- Command \"\"/Users/nitish/gitProjects/Vision Backlog/vb_env/bin/python\" -u -c \"import setuptools, tokenize;__file__='/private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-M4ue9E/mysql-python/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-record-7OCzf1/install-record.txt --single-version-externally-managed --compile --install-headers \"/Users/nitish/gitProjects/Vision Backlog/vb_env/include/site/python2.7/mysql-python\"\" failed with error code 1 in /private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-M4ue9E/mysql-python/ Why is this happening? UPDATE: following bellow solution threw: Collecting MySQL-python Using cached https://files.pythonhosted.org/packages/a5/e9/51b544da85a36a68debe7a7091f068d802fc515a3a202652828c73453cad/MySQL-python-1.2.5.zip Complete output from command python setup.py egg_info: Traceback (most recent call last): File \"<string>\", line 1, in <module> File \"/private/var/folders/ql/_w2_rlvs2351pdcnzhn04sf40000gn/T/pip-install-X6b4rU/MySQL-python/setup.py\", line 17, in <module> metadata, options = get_config() File \"setup_posix.py\", line 53, in get_config libraries = [ dequote(i[2:]) for i in libs if i.startswith(compiler_flag(\"l\")) ] File \"setup_posix.py\", line 8, in dequote if s[0] in \"\\\"'\" and s[0] == s[-1]: IndexError: string index out of range \u7b2c\u4e00\u79cd Please, try: CFLAGS=-Qunused-arguments CPPFLAGS=-Qunused-arguments pip install -r requirements.txt If it does not work: First install mysql-connector-c brew install mysql-connector-c pip install MySQL-python If you are using Windows: https://dev.mysql.com/downloads/connector/c/ You can also check what happend when you try install it with pip3. UPDATE: If you have Linux: Please open the /usr/local/bin/mysql_config . And then: #Create options Libs = \"-L $ pkglibdir \" Libs = \" $ libs -l\" replace with: #Create options Libs = \"- L $ pkglibdir\" Libs = \"$ libs -lmysqlclient -lssl -lcrypto\" Save it and reinstall mysql-python . pip uninstall mysql-python pip install mysql-python For Mac: LDFLAGS=-L/usr/local/opt/openssl/lib pip install mysql-python should be helpful. \u7b2c\u4e8c\u79cd 26 Installing of an older version of the MySQL worked for me: brew remove mysql brew install mysql@5.7 brew link --force mysql@5.7 pip install mysql-python See: issue on the MySQLdb1 Github and this sof answer","title":"Mac pip install mysql-python"},{"location":"sql/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/","text":"Mac\u5b89\u88c5MySQLdb\uff08python-mysql\uff09\u6a21\u5757 \u00b6 \u524d\u9762 \u00b6 Python\u5199\u7684\u9879\u76ee\u9700\u8981\u8fde\u63a5MySQL\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u672c\u5730\u9700\u8981\u5b89\u88c5MySQLdb\u6a21\u5757\uff0c\u4f46\u662f\u5728\u5b89\u88c5\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u662f\u9047\u5230\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u5728\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e0b\uff0c\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u7b80\u4e66\u7684Markdown\u7f16\u8f91\u5668\u7528\u7740\u592a\u723d\u4e86\uff0c\u7528\u4e86\u5f88\u4e45\uff0c\u8fd8\u662f\u559c\u6b22\u8fd9\u79cd\u7b80\u6d01\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u8ba9\u4f60\u66f4\u5173\u6ce8\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5176\u5b83\u3002 \u64cd\u4f5c\u7cfb\u7edf\uff1aMacOS 10.12.5 Python\u7248\u672c\uff1a2.7.10 pip\uff1a 9.0.1 \u5f00\u59cb\u5427 \u00b6 \u4e00\u822c\u7684\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u8fde\u63a5MySQL\u7684\u4ee3\u7801\uff0c\u6216\u8005\u4f9d\u8d56\u4e8eMySQLdb\u7c7b\u5e93\u7684\u7c7b\u5e93\uff0c\u5c31\u4f1a\u770b\u5230\u8fd9\u4e2a\uff1a ImportError: No module named MySQLdb \uff0c\u63d0\u793a\u627e\u4e0d\u5230\u6a21\u5757\u3002 \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u5b89\u88c5\u5bf9\u5e94\u7684 MySQL for Python \u4e86\uff0c\u4e5f\u5c31\u662f MySQL-python \uff0c\u5728\u7ec8\u7aef\u6267\u884c pip install MySQL-python \uff0c\u989d~\u524d\u63d0\u662f\u4f60\u5df2\u7ecf\u5b89\u88c5pip\u4e86\u554a\u3002 \u9047\u5230\u9519\u8bef \u00b6 \u5f53\u4f60\u6309\u4e0b\u56de\u8f66\u952e\u7684\u90a3\u4e00\u5239\u90a3\uff0c\u5c4f\u5e55\u4e0a\uff0c\u5c31\u51fa\u73b0\u4e86\u9519\u8bef\uff1a EnvironmentError: mysql_config not found \uff0c\u55ef\uff0c\u8fd9\u662f\u548b\u56de\u4e8b\uff0c\u7f51\u4e0a\u67e5\u67e5\u53bb\u3002\u3002\u3002 \u7c97\u7565\u770b\u4e86\u4e00\u4e0b\uff0c\u5927\u6982\u610f\u601d\u5c31\u662f\uff0c\u4f60\u8fd8\u9700\u8981\u5b89\u88c5\u4e00\u4e2aMySQL\uff0cWhat\uff1f\u6211\u5c31\u662f\u60f3\u8fde\u63a5\u4e00\u4e0b\u6570\u636e\u5e93\uff0c\u4e0d\u81f3\u4e8e\u8fd8\u8981\u4e0b\u4e00\u4e2a\u6570\u636e\u5e93\u5427\u3002\u4ed4\u7ec6\u770b\u4e86\u770b\u53c8\uff0c\u539f\u6765\u662f\u9700\u8981\u5b89\u88c5\u4e00\u4e2amysql\u5f00\u53d1\u5305\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u672c\u5730\u5b89\u88c5\u4e00\u4e2aMySQL\uff09\uff0c\u597d\u5427\uff0c\u6ca1\u529e\u6cd5\uff0c\u90a3\u518d\u6765\u3002 \u5728\u5b98\u7f51\u770b\u4e86\u4e0b\uff0c\u5e94\u8be5\u5c31\u662f\u8fd9\u4e2a\u8d27 \u624b\u52a8\u4e0b\u8f7d\u4e86dmg\u7248\u672c\u7684\uff0c\u6839\u636e\u63d0\u793a\u5b89\u88c5\u5b8c\u6bd5\uff0c\u7ec8\u7aef\u8fd0\u884c pip install MySQL-python \u53d1\u4e0b\u8fd8\u662f\u539f\u6765\u7684\u9519\u8bef\uff0c\u53c8\u53bb\u67e5\u4e86\u67e5\u8d44\u6599\uff0c\u5e94\u8be5\u662f\u5b89\u88c5\u7684mysql\u5e93\u6ca1\u6709\u52a0\u5165\u73af\u5883\u53d8\u91cf\uff0c\u73b0\u5728\u5c31\u662f\u8981\u627e\u5230\u6211\u521a\u624d\u5b89\u88c5\u7684mysql\u5230\u54ea\u4e2a\u76ee\u5f55\u4e86\u3002\u7ec8\u7aef\u7a97\u53e3\u6267\u884c find / -name mysql_config \uff0c\u7ed3\u679c\u4e2d\u6709\u4e00\u4e2a\uff1a/usr/local/mysql-connector-c-6.1.10-macos10.12-x86_64/bin/mysql_config \uff0c\u5e94\u8be5\u5c31\u662f\u5b83\u4e86\uff0c\u901a\u8fc7\uff1a export PATH=$PATH:/usr/local/mysql-connector-c-6.1.10-macos10.12-x86_64/bin/ \u52a0\u5165\u73af\u5883\u53d8\u91cf\u3002 \u518d\u6b21\u9519\u8bef \u00b6 \u518d\u6b21\u6267\u884c pip install MySQL-python \uff0c\u770b\u5230\u8f93\u51fa\u7684\u9519\u8bef\uff0c\u6211\u7b80\u76f4\u5d29\u6e83\u4e86\u3002 Collecting MySQL - python Using cached MySQL - python - 1 . 2 . 5 . zip Complete output from command python setup . py egg_info : Traceback ( most recent call last ): File \"<string>\" , line 1 , in < module > File \"/private/var/folders/d1/1lnf846x6p119488dvhnqj740000gn/T/pip-build-b16vZo/MySQL-python/setup.py\" , line 17 , in < module > metadata , options = get_config () File \"setup_posix.py\" , line 53 , in get_config libraries = [ dequote ( i [ 2 : ] ) for i in libs if i . startswith ( compiler_flag ( \"l\" )) ] File \"setup_posix.py\" , line 8 , in dequote if s [ 0 ] in \" \\\" '\" and s [ 0 ] == s [- 1 ] : IndexError : string index out of range ---------------------------------------- \u6362\u4e00\u79cd\u65b9\u5f0f \u00b6 \u8fd8\u80fd\u4e0d\u80fd\u6109\u5feb\u7684\u73a9\u800d\u4e86~ Google\u4e86\u4e00\u4e0b\uff0c\u6ca1\u6709\u89e3\u51b3\uff0c\u6211\u60f3\u6211\u8981\u6362\u4e00\u79cd\u65b9\u5f0f\u4e86\u3002 \u628a\u521a\u624d\u5b89\u88c5\u7684mysql\u5f00\u53d1\u5305\u5220\u6389\u3002 \u901a\u8fc7brew\u91cd\u65b0\u5b89\u88c5\u8bd5\u8bd5\u3002 # install brew ruby -e \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install ) \" \u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u53bbbrew\u5b98\u7f51\u770b\u770b\uff0c\u5c45\u7136\u6709\u4e2d\u6587\uff0c\u539a\u9053\uff1a https://brew.sh/index_zh-cn.html \u6000\u7591\u4eba\u751f/\u80dc\u5229\u5728\u671b \u00b6 \u8fd9\u4e00\u6b21\u76f4\u63a5 brew install mysql \uff0c\u7b49\u5f85\u5b89\u88c5\u5b8c\u6bd5\uff0c\u518d\u518d\u518d\u6267\u884c pip install MySQL-python \uff0c\u55ef~\u679c\u7136\u8fd8\u662f\u9519\u8bef\uff0c\u8fd9\u5c31\u662f\u4eba\u751f\u554a\u3002 3 warnings generated. cc -bundle -undefined dynamic_lookup -arch x86_64 -arch i386 -Wl,-F. build/temp.macosx-10.12-intel-2.7/_mysql.o -L/usr/local/Cellar/mysql/5.7.18_1/lib -lmysqlclient -lssl -lcrypto -o build/lib.macosx-10.12-intel-2.7/_mysql.so ld: library not found for -lssl clang: error: linker command failed with exit code 1 ( use -v to see invocation ) error: command 'cc' failed with exit status 1 \u5c31\u662f\u4e0a\u9762\u8fd9\u4e2a\u9519\u8bef\uff0c\u4e8e\u662f\u4e4e\uff0c\u6211\u53c8Google\uff0c\u53d1\u73b0\u4e86\uff1a https://stackoverflow.com/questions/22697440/cc-failed-with-exit-status-1-error-when-install-python-library \u5c31\u662f\u8fd9\u4e2a\u4eba\u89e3\u7b54\u7684\uff0c\u548c\u6211\u9047\u5230\u7684\u95ee\u9898\u4e00\u6837 \u7136\u540e\u6211\u901a\u8fc7\u5927\u795e\u7684\u6307\u793a\uff1a xcode-select --install \uff0c\u4f1a\u5f39\u51faxcode\u7684\u8f6f\u4ef6\u5b89\u88c5\u7a97\u53e3\uff0c\u7b49\u5f85\u51e0\u5206\u949f\uff0c\u5b89\u88c5\u5b8c\u6bd5\uff0c\u518d\u6b21\u6267\u884c\uff1a pip install MySQL-python \u3002 \u547c~\u6210\u529f\u4e86\u4f60\u76f8\u4fe1\u5417\uff1f Collecting MySQL-python Downloading MySQL-python-1.2.5.zip ( 108kB ) 100 % | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112kB 127kB/s Installing collected packages: MySQL-python Running setup.py install for MySQL-python ... done Successfully installed MySQL-python-1.2.5","title":"Mac\u5b89\u88c5MySQLdb\uff08python-mysql\uff09\u6a21\u5757.md"},{"location":"sql/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#macmysqldbpython-mysql","text":"","title":"Mac\u5b89\u88c5MySQLdb\uff08python-mysql\uff09\u6a21\u5757"},{"location":"sql/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_1","text":"Python\u5199\u7684\u9879\u76ee\u9700\u8981\u8fde\u63a5MySQL\u6570\u636e\u5e93\uff0c\u6240\u4ee5\u672c\u5730\u9700\u8981\u5b89\u88c5MySQLdb\u6a21\u5757\uff0c\u4f46\u662f\u5728\u5b89\u88c5\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u662f\u9047\u5230\u4e86\u4e00\u4e9b\u95ee\u9898\uff0c\u5728\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e0b\uff0c\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u7b80\u4e66\u7684Markdown\u7f16\u8f91\u5668\u7528\u7740\u592a\u723d\u4e86\uff0c\u7528\u4e86\u5f88\u4e45\uff0c\u8fd8\u662f\u559c\u6b22\u8fd9\u79cd\u7b80\u6d01\u7b80\u5355\u7684\u4e1c\u897f\uff0c\u8ba9\u4f60\u66f4\u5173\u6ce8\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u5176\u5b83\u3002 \u64cd\u4f5c\u7cfb\u7edf\uff1aMacOS 10.12.5 Python\u7248\u672c\uff1a2.7.10 pip\uff1a 9.0.1","title":"\u524d\u9762"},{"location":"sql/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_2","text":"\u4e00\u822c\u7684\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u4e86\u8fde\u63a5MySQL\u7684\u4ee3\u7801\uff0c\u6216\u8005\u4f9d\u8d56\u4e8eMySQLdb\u7c7b\u5e93\u7684\u7c7b\u5e93\uff0c\u5c31\u4f1a\u770b\u5230\u8fd9\u4e2a\uff1a ImportError: No module named MySQLdb \uff0c\u63d0\u793a\u627e\u4e0d\u5230\u6a21\u5757\u3002 \u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u9700\u8981\u5b89\u88c5\u5bf9\u5e94\u7684 MySQL for Python \u4e86\uff0c\u4e5f\u5c31\u662f MySQL-python \uff0c\u5728\u7ec8\u7aef\u6267\u884c pip install MySQL-python \uff0c\u989d~\u524d\u63d0\u662f\u4f60\u5df2\u7ecf\u5b89\u88c5pip\u4e86\u554a\u3002","title":"\u5f00\u59cb\u5427"},{"location":"sql/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_3","text":"\u5f53\u4f60\u6309\u4e0b\u56de\u8f66\u952e\u7684\u90a3\u4e00\u5239\u90a3\uff0c\u5c4f\u5e55\u4e0a\uff0c\u5c31\u51fa\u73b0\u4e86\u9519\u8bef\uff1a EnvironmentError: mysql_config not found \uff0c\u55ef\uff0c\u8fd9\u662f\u548b\u56de\u4e8b\uff0c\u7f51\u4e0a\u67e5\u67e5\u53bb\u3002\u3002\u3002 \u7c97\u7565\u770b\u4e86\u4e00\u4e0b\uff0c\u5927\u6982\u610f\u601d\u5c31\u662f\uff0c\u4f60\u8fd8\u9700\u8981\u5b89\u88c5\u4e00\u4e2aMySQL\uff0cWhat\uff1f\u6211\u5c31\u662f\u60f3\u8fde\u63a5\u4e00\u4e0b\u6570\u636e\u5e93\uff0c\u4e0d\u81f3\u4e8e\u8fd8\u8981\u4e0b\u4e00\u4e2a\u6570\u636e\u5e93\u5427\u3002\u4ed4\u7ec6\u770b\u4e86\u770b\u53c8\uff0c\u539f\u6765\u662f\u9700\u8981\u5b89\u88c5\u4e00\u4e2amysql\u5f00\u53d1\u5305\uff08\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u672c\u5730\u5b89\u88c5\u4e00\u4e2aMySQL\uff09\uff0c\u597d\u5427\uff0c\u6ca1\u529e\u6cd5\uff0c\u90a3\u518d\u6765\u3002 \u5728\u5b98\u7f51\u770b\u4e86\u4e0b\uff0c\u5e94\u8be5\u5c31\u662f\u8fd9\u4e2a\u8d27 \u624b\u52a8\u4e0b\u8f7d\u4e86dmg\u7248\u672c\u7684\uff0c\u6839\u636e\u63d0\u793a\u5b89\u88c5\u5b8c\u6bd5\uff0c\u7ec8\u7aef\u8fd0\u884c pip install MySQL-python \u53d1\u4e0b\u8fd8\u662f\u539f\u6765\u7684\u9519\u8bef\uff0c\u53c8\u53bb\u67e5\u4e86\u67e5\u8d44\u6599\uff0c\u5e94\u8be5\u662f\u5b89\u88c5\u7684mysql\u5e93\u6ca1\u6709\u52a0\u5165\u73af\u5883\u53d8\u91cf\uff0c\u73b0\u5728\u5c31\u662f\u8981\u627e\u5230\u6211\u521a\u624d\u5b89\u88c5\u7684mysql\u5230\u54ea\u4e2a\u76ee\u5f55\u4e86\u3002\u7ec8\u7aef\u7a97\u53e3\u6267\u884c find / -name mysql_config \uff0c\u7ed3\u679c\u4e2d\u6709\u4e00\u4e2a\uff1a/usr/local/mysql-connector-c-6.1.10-macos10.12-x86_64/bin/mysql_config \uff0c\u5e94\u8be5\u5c31\u662f\u5b83\u4e86\uff0c\u901a\u8fc7\uff1a export PATH=$PATH:/usr/local/mysql-connector-c-6.1.10-macos10.12-x86_64/bin/ \u52a0\u5165\u73af\u5883\u53d8\u91cf\u3002","title":"\u9047\u5230\u9519\u8bef"},{"location":"sql/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_4","text":"\u518d\u6b21\u6267\u884c pip install MySQL-python \uff0c\u770b\u5230\u8f93\u51fa\u7684\u9519\u8bef\uff0c\u6211\u7b80\u76f4\u5d29\u6e83\u4e86\u3002 Collecting MySQL - python Using cached MySQL - python - 1 . 2 . 5 . zip Complete output from command python setup . py egg_info : Traceback ( most recent call last ): File \"<string>\" , line 1 , in < module > File \"/private/var/folders/d1/1lnf846x6p119488dvhnqj740000gn/T/pip-build-b16vZo/MySQL-python/setup.py\" , line 17 , in < module > metadata , options = get_config () File \"setup_posix.py\" , line 53 , in get_config libraries = [ dequote ( i [ 2 : ] ) for i in libs if i . startswith ( compiler_flag ( \"l\" )) ] File \"setup_posix.py\" , line 8 , in dequote if s [ 0 ] in \" \\\" '\" and s [ 0 ] == s [- 1 ] : IndexError : string index out of range ----------------------------------------","title":"\u518d\u6b21\u9519\u8bef"},{"location":"sql/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_5","text":"\u8fd8\u80fd\u4e0d\u80fd\u6109\u5feb\u7684\u73a9\u800d\u4e86~ Google\u4e86\u4e00\u4e0b\uff0c\u6ca1\u6709\u89e3\u51b3\uff0c\u6211\u60f3\u6211\u8981\u6362\u4e00\u79cd\u65b9\u5f0f\u4e86\u3002 \u628a\u521a\u624d\u5b89\u88c5\u7684mysql\u5f00\u53d1\u5305\u5220\u6389\u3002 \u901a\u8fc7brew\u91cd\u65b0\u5b89\u88c5\u8bd5\u8bd5\u3002 # install brew ruby -e \" $( curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install ) \" \u6709\u5174\u8da3\u7684\u540c\u5b66\u53ef\u4ee5\u53bbbrew\u5b98\u7f51\u770b\u770b\uff0c\u5c45\u7136\u6709\u4e2d\u6587\uff0c\u539a\u9053\uff1a https://brew.sh/index_zh-cn.html","title":"\u6362\u4e00\u79cd\u65b9\u5f0f"},{"location":"sql/Mac%E5%AE%89%E8%A3%85MySQLdb%EF%BC%88python-mysql%EF%BC%89%E6%A8%A1%E5%9D%97/#_6","text":"\u8fd9\u4e00\u6b21\u76f4\u63a5 brew install mysql \uff0c\u7b49\u5f85\u5b89\u88c5\u5b8c\u6bd5\uff0c\u518d\u518d\u518d\u6267\u884c pip install MySQL-python \uff0c\u55ef~\u679c\u7136\u8fd8\u662f\u9519\u8bef\uff0c\u8fd9\u5c31\u662f\u4eba\u751f\u554a\u3002 3 warnings generated. cc -bundle -undefined dynamic_lookup -arch x86_64 -arch i386 -Wl,-F. build/temp.macosx-10.12-intel-2.7/_mysql.o -L/usr/local/Cellar/mysql/5.7.18_1/lib -lmysqlclient -lssl -lcrypto -o build/lib.macosx-10.12-intel-2.7/_mysql.so ld: library not found for -lssl clang: error: linker command failed with exit code 1 ( use -v to see invocation ) error: command 'cc' failed with exit status 1 \u5c31\u662f\u4e0a\u9762\u8fd9\u4e2a\u9519\u8bef\uff0c\u4e8e\u662f\u4e4e\uff0c\u6211\u53c8Google\uff0c\u53d1\u73b0\u4e86\uff1a https://stackoverflow.com/questions/22697440/cc-failed-with-exit-status-1-error-when-install-python-library \u5c31\u662f\u8fd9\u4e2a\u4eba\u89e3\u7b54\u7684\uff0c\u548c\u6211\u9047\u5230\u7684\u95ee\u9898\u4e00\u6837 \u7136\u540e\u6211\u901a\u8fc7\u5927\u795e\u7684\u6307\u793a\uff1a xcode-select --install \uff0c\u4f1a\u5f39\u51faxcode\u7684\u8f6f\u4ef6\u5b89\u88c5\u7a97\u53e3\uff0c\u7b49\u5f85\u51e0\u5206\u949f\uff0c\u5b89\u88c5\u5b8c\u6bd5\uff0c\u518d\u6b21\u6267\u884c\uff1a pip install MySQL-python \u3002 \u547c~\u6210\u529f\u4e86\u4f60\u76f8\u4fe1\u5417\uff1f Collecting MySQL-python Downloading MySQL-python-1.2.5.zip ( 108kB ) 100 % | \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 | 112kB 127kB/s Installing collected packages: MySQL-python Running setup.py install for MySQL-python ... done Successfully installed MySQL-python-1.2.5","title":"\u6000\u7591\u4eba\u751f/\u80dc\u5229\u5728\u671b"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/","text":"Python \u64cd\u4f5c MySQL \u6570\u636e\u5e93 \u00b6 Python \u6807\u51c6\u6570\u636e\u5e93\u63a5\u53e3\u4e3a Python DB-API\uff0cPython DB-API\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u6570\u636e\u5e93\u5e94\u7528\u7f16\u7a0b\u63a5\u53e3\u3002 \u4e0d\u540c\u7684\u6570\u636e\u5e93\u4f60\u9700\u8981\u4e0b\u8f7d\u4e0d\u540c\u7684DB API\u6a21\u5757\uff0c\u4f8b\u5982\u4f60\u9700\u8981\u8bbf\u95eeOracle\u6570\u636e\u5e93\u548cMysql\u6570\u636e\uff0c\u4f60\u9700\u8981\u4e0b\u8f7dOracle\u548cMySQL\u6570\u636e\u5e93\u6a21\u5757\u3002DB-API \u662f\u4e00\u4e2a\u89c4\u8303. \u5b83\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u5fc5\u987b\u7684\u5bf9\u8c61\u548c\u6570\u636e\u5e93\u5b58\u53d6\u65b9\u5f0f, \u4ee5\u4fbf\u4e3a\u5404\u79cd\u5404\u6837\u7684\u5e95\u5c42\u6570\u636e\u5e93\u7cfb\u7edf\u548c\u591a\u79cd\u591a\u6837\u7684\u6570\u636e\u5e93\u63a5\u53e3\u7a0b\u5e8f\u63d0\u4f9b\u4e00\u81f4\u7684\u8bbf\u95ee\u63a5\u53e3 \u3002Python\u7684DB-API\uff0c\u4e3a\u5927\u591a\u6570\u7684\u6570\u636e\u5e93\u5b9e\u73b0\u4e86\u63a5\u53e3\uff0c\u4f7f\u7528\u5b83\u8fde\u63a5\u5404\u6570\u636e\u5e93\u540e\uff0c\u5c31\u53ef\u4ee5\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u64cd\u4f5c\u5404\u6570\u636e\u5e93\u3002 Python DB-API\u4f7f\u7528\u6d41\u7a0b\uff1a \u5f15\u5165 API \u6a21\u5757\u3002 \u83b7\u53d6\u4e0e\u6570\u636e\u5e93\u7684\u8fde\u63a5\u3002 \u6267\u884cSQL\u8bed\u53e5\u548c\u5b58\u50a8\u8fc7\u7a0b\u3002 \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\u3002 \u4ec0\u4e48\u662fMySQLdb? \u00b6 MySQLdb \u662f\u7528\u4e8ePython\u94fe\u63a5Mysql\u6570\u636e\u5e93\u7684\u63a5\u53e3\uff0c\u5b83\u5b9e\u73b0\u4e86 Python \u6570\u636e\u5e93 API \u89c4\u8303 V2.0\uff0c\u57fa\u4e8e MySQL C API \u4e0a\u5efa\u7acb\u7684\u3002 \u5982\u4f55\u5b89\u88c5MySQLdb? \u00b6 \u4e3a\u4e86\u7528DB-API\u7f16\u5199MySQL\u811a\u672c\uff0c\u5fc5\u987b\u786e\u4fdd\u5df2\u7ecf\u5b89\u88c5\u4e86MySQL\u3002\u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5e76\u6267\u884c\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb \u5982\u679c\u6267\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff0c\u610f\u5473\u7740\u4f60\u6ca1\u6709\u5b89\u88c5 MySQLdb \u6a21\u5757\uff1a ```python Traceback (most recent call last): File \"test.py\", line 3, in import MySQLdb ImportError: No module named MySQLdb \u5b89\u88c5MySQLdb\uff0c\u8bf7\u8bbf\u95ee http://sourceforge.net/projects/mysql-python \uff0c(Linux\u5e73\u53f0\u53ef\u4ee5\u8bbf\u95ee\uff1ahttps://pypi.python.org/pypi/MySQL-python)\u4ece\u8fd9\u91cc\u53ef\u9009\u62e9\u9002\u5408\u60a8\u7684\u5e73\u53f0\u7684\u5b89\u88c5\u5305\uff0c\u5206\u4e3a\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6e90\u4ee3\u7801\u5b89\u88c5\u5305\u3002 \u5982\u679c\u60a8\u9009\u62e9\u4e8c\u8fdb\u5236\u6587\u4ef6\u53d1\u884c\u7248\u672c\u7684\u8bdd\uff0c\u5b89\u88c5\u8fc7\u7a0b\u57fa\u672c\u5b89\u88c5\u63d0\u793a\u5373\u53ef\u5b8c\u6210\u3002\u5982\u679c\u4ece\u6e90\u4ee3\u7801\u8fdb\u884c\u5b89\u88c5\u7684\u8bdd\uff0c\u5219\u9700\u8981\u5207\u6362\u5230MySQLdb\u53d1\u884c\u7248\u672c\u7684\u9876\u7ea7\u76ee\u5f55\uff0c\u5e76\u952e\u5165\u4e0b\u5217\u547d\u4ee4: ```bash $ gunzip MySQL-python-1.2.2.tar.gz $ tar -xvf MySQL-python-1.2.2.tar $ cd MySQL-python-1.2.2 $ python setup.py build $ python setup.py install **\u6ce8\u610f\uff1a**\u8bf7\u786e\u4fdd\u60a8\u6709root\u6743\u9650\u6765\u5b89\u88c5\u4e0a\u8ff0\u6a21\u5757\u3002 \u5b89\u88c5\u62a5\u95191: \u6267\u884c sudo python setup.py build \u51fa\u73b0\u95ee\u9898(SSL\u6743\u9650) sudo python setup.py build Downloading http://pypi.python.org/packages/source/d/distribute/distribute-0.6.28.tar.gz urllib2.HTTPError: HTTP Error 403 : SSL is required \u53ef\u4ee5\u53c2\u8003 https://blog.csdn.net/bin642264643/article/details/91972480 \u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee\u8fd9\u4e2a\u94fe\u63a5\u8fdb\u884c\u4e0b\u8f7d\u3002\u4e0b\u8f7d\u7ed3\u675f\uff0c\u5e76\u653e\u5728\u8def\u5f84\u4e0b\uff0c\u7136\u540e\u6267\u884c python setup.py build \u5b89\u88c5\u62a5\u9519\uff1a\u51fa\u73b0\u4e0b\u9762\u7684\u95ee\u9898 running build running build_py copying MySQLdb/release.py -> build/lib.macosx-10.13-intel-2.7/MySQLdb running build_ext building '_mysql' extension cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch x86_64 -pipe -Dversion_info =( 1 ,2,4, 'beta' ,4 ) -D__version__ = 1 .2.4b4 -I/usr/local/mysql/include -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c _mysql.c -o build/temp.macosx-10.13-intel-2.7/_mysql.o _mysql.c:44:10: fatal error: 'my_config.h' file not found #include \"my_config.h\" ^~~~~~~~~~~~~ 1 error generated. error: command 'cc' failed with exit status 1 \u89e3\u51b3\u65b9\u6cd51\uff1a https://stackoverflow.com/questions/21638444/error-command-cc-failed-with-exit-status-1-mysqldb-installation-on-mac The problem is unused arguments passed to compiler. Try this before running your build code: export CFLAGS = -Qunused-arguments export CPPFLAGS = -Qunused-arguments \u4f7f\u7528\u4e0a\u9762\u7684\u7f16\u8bd1\u4e0d\u5904\u7406\u554a\u554a\uff01\u770b\u4e00\u4e0b\u6700\u65b0\u7684\u6559\u7a0b\u2018 \u53ef\u80fd\u662fpython2.7.10 \u6216\u80053\u7248\u672c\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u672c\u5730\u73b0\u5728\u4e24\u4e2a\u7248\u672c\u90fd\u5b89\u88c5 \u53ef\u80fd\u662f\u7248\u672c\u4e0d\u5bf9\u5e94\uff0cMySQL_python-1.2.5-cp27-none-win_amd64.whl \u652f\u6301windows\u7248\u672c\u6216\u8005linux\u7cfb\u7edf\uff0c\u4e0d\u652f\u6301Mac\u7cfb\u7edf\u3002 \u89e3\u51b3\u65b9\u6cd52\uff1a https://stackoverflow.com/questions/50864438/mac-pip-install-mysql-python-unsuccessful Installing of an older version of the MySQL worked for me: brew remove mysql brew install mysql@5.7 brew link --force mysql@5.7 pip install mysql-python \u6570\u636e\u5e93\u8fde\u63a5 \u00b6 \u8fde\u63a5\u6570\u636e\u5e93\u524d\uff0c\u8bf7\u5148\u786e\u8ba4\u4ee5\u4e0b\u4e8b\u9879\uff1a \u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u6570\u636e\u5e93 TESTDB. \u5728TESTDB\u6570\u636e\u5e93\u4e2d\u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u8868 EMPLOYEE EMPLOYEE\u8868\u5b57\u6bb5\u4e3a FIRST_NAME, LAST_NAME, AGE, SEX \u548c INCOME\u3002 \u8fde\u63a5\u6570\u636e\u5e93TESTDB\u4f7f\u7528\u7684\u7528\u6237\u540d\u4e3a \"testuser\" \uff0c\u5bc6\u7801\u4e3a \"test123\",\u4f60\u53ef\u4ee5\u53ef\u4ee5\u81ea\u5df1\u8bbe\u5b9a\u6216\u8005\u76f4\u63a5\u4f7f\u7528root\u7528\u6237\u540d\u53ca\u5176\u5bc6\u7801\uff0cMysql\u6570\u636e\u5e93\u7528\u6237\u6388\u6743\u8bf7\u4f7f\u7528Grant\u547d\u4ee4\u3002 \u5728\u4f60\u7684\u673a\u5b50\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 Python MySQLdb \u6a21\u5757\u3002 \u5982\u679c\u60a8\u5bf9sql\u8bed\u53e5\u4e0d\u719f\u6089\uff0c\u53ef\u4ee5\u8bbf\u95ee\u6211\u4eec\u7684 SQL\u57fa\u7840\u6559\u7a0b \u5b9e\u4f8b\uff1a \u00b6 \u4ee5\u4e0b\u5b9e\u4f8b\u94fe\u63a5Mysql\u7684TESTDB\u6570\u636e\u5e93\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # \u4f7f\u7528execute\u65b9\u6cd5\u6267\u884cSQL\u8bed\u53e5 cursor . execute ( \"SELECT VERSION()\" ) # \u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u4e00\u6761\u6570\u636e data = cursor . fetchone () print \"Database version : %s \" % data # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db . close () \u6267\u884c\u4ee5\u4e0a\u811a\u672c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Database version : 5.0.45 \u521b\u5efa\u6570\u636e\u5e93\u8868 \u00b6 \u5982\u679c\u6570\u636e\u5e93\u8fde\u63a5\u5b58\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528execute()\u65b9\u6cd5\u6765\u4e3a\u6570\u636e\u5e93\u521b\u5efa\u8868\uff0c\u5982\u4e0b\u6240\u793a\u521b\u5efa\u8868EMPLOYEE\uff1a ```python !/usr/bin/python \u00b6 - - coding: UTF-8 - - \u00b6 import MySQLdb \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 \u00b6 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 \u00b6 cursor = db.cursor() \u5982\u679c\u6570\u636e\u8868\u5df2\u7ecf\u5b58\u5728\u4f7f\u7528 execute() \u65b9\u6cd5\u5220\u9664\u8868\u3002 \u00b6 cursor.execute(\"DROP TABLE IF EXISTS EMPLOYEE\") \u521b\u5efa\u6570\u636e\u8868SQL\u8bed\u53e5 \u00b6 sql = \"\"\"CREATE TABLE EMPLOYEE ( FIRST_NAME CHAR(20) NOT NULL, LAST_NAME CHAR(20), AGE INT, SEX CHAR(1), INCOME FLOAT )\"\"\" cursor.execute(sql) \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 \u00b6 db.close() ------ ## \u6570\u636e\u5e93\u63d2\u5165\u64cd\u4f5c \u4ee5\u4e0b\u5b9e\u4f8b\u4f7f\u7528\u6267\u884c SQL INSERT \u8bed\u53e5\u5411\u8868 EMPLOYEE \u63d2\u5165\u8bb0\u5f55\uff1a ```python #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db.cursor() # SQL \u63d2\u5165\u8bed\u53e5 sql = \"\"\"INSERT INTO EMPLOYEE(FIRST_NAME, LAST_NAME, AGE, SEX, INCOME) VALUES ('Mac', 'Mohan', 20, 'M', 2000)\"\"\" try: # \u6267\u884csql\u8bed\u53e5 cursor.execute(sql) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db.commit() except: # Rollback in case there is any error db.rollback() # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db.close() \u4ee5\u4e0a\u4f8b\u5b50\u4e5f\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # SQL \u63d2\u5165\u8bed\u53e5 sql = \"INSERT INTO EMPLOYEE(FIRST_NAME, \\ LAST_NAME, AGE, SEX, INCOME) \\ VALUES ( %s , %s , %s , %s , %s )\" % \\ ( 'Mac' , 'Mohan' , 20 , 'M' , 2000 ) try : # \u6267\u884csql\u8bed\u53e5 cursor . execute ( sql ) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db . close () \u5b9e\u4f8b\uff1a \u00b6 \u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528\u53d8\u91cf\u5411SQL\u8bed\u53e5\u4e2d\u4f20\u9012\u53c2\u6570: .................................. user_id = \"test123\" password = \"password\" con.execute('insert into Login values(%s, %s)' % \\ (user_id, password)) .................................. \u6570\u636e\u5e93\u67e5\u8be2\u64cd\u4f5c \u00b6 Python\u67e5\u8be2Mysql\u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u5355\u6761\u6570\u636e, \u4f7f\u7528fetchall() \u65b9\u6cd5\u83b7\u53d6\u591a\u6761\u6570\u636e\u3002 fetchone(): \u8be5\u65b9\u6cd5\u83b7\u53d6\u4e0b\u4e00\u4e2a\u67e5\u8be2\u7ed3\u679c\u96c6\u3002\u7ed3\u679c\u96c6\u662f\u4e00\u4e2a\u5bf9\u8c61 **fetchall():**\u63a5\u6536\u5168\u90e8\u7684\u8fd4\u56de\u7ed3\u679c\u884c. rowcount: \u8fd9\u662f\u4e00\u4e2a\u53ea\u8bfb\u5c5e\u6027\uff0c\u5e76\u8fd4\u56de\u6267\u884cexecute()\u65b9\u6cd5\u540e\u5f71\u54cd\u7684\u884c\u6570\u3002 \u5b9e\u4f8b\uff1a \u00b6 \u67e5\u8be2EMPLOYEE\u8868\u4e2dsalary\uff08\u5de5\u8d44\uff09\u5b57\u6bb5\u5927\u4e8e1000\u7684\u6240\u6709\u6570\u636e\uff1a ```python !/usr/bin/python \u00b6 - - coding: UTF-8 - - \u00b6 import MySQLdb \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 \u00b6 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 \u00b6 cursor = db.cursor() SQL \u67e5\u8be2\u8bed\u53e5 \u00b6 sql = \"SELECT * FROM EMPLOYEE \\ WHERE INCOME > %s\" % (1000) try: # \u6267\u884cSQL\u8bed\u53e5 cursor.execute(sql) # \u83b7\u53d6\u6240\u6709\u8bb0\u5f55\u5217\u8868 results = cursor.fetchall() for row in results: fname = row[0] lname = row[1] age = row[2] sex = row[3] income = row[4] # \u6253\u5370\u7ed3\u679c print \"fname=%s,lname=%s,age=%s,sex=%s,income=%s\" % \\ (fname, lname, age, sex, income ) except: print \"Error: unable to fecth data\" \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 \u00b6 db.close() \u4ee5\u4e0a\u811a\u672c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a fname=Mac, lname=Mohan, age=20, sex=M, income=2000 ------ ## \u6570\u636e\u5e93\u66f4\u65b0\u64cd\u4f5c \u66f4\u65b0\u64cd\u4f5c\u7528\u4e8e\u66f4\u65b0\u6570\u636e\u8868\u7684\u7684\u6570\u636e\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u5c06 EMPLOYEE \u8868\u4e2d\u7684 SEX \u5b57\u6bb5\u4e3a 'M' \u7684 AGE \u5b57\u6bb5\u9012\u589e 1\uff1a ```python #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db.cursor() # SQL \u66f4\u65b0\u8bed\u53e5 sql = \"UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = '%c'\" % ('M') try: # \u6267\u884cSQL\u8bed\u53e5 cursor.execute(sql) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db.commit() except: # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db.rollback() # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db.close() \u5220\u9664\u64cd\u4f5c \u00b6 \u5220\u9664\u64cd\u4f5c\u7528\u4e8e\u5220\u9664\u6570\u636e\u8868\u4e2d\u7684\u6570\u636e\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86\u5220\u9664\u6570\u636e\u8868 EMPLOYEE \u4e2d AGE \u5927\u4e8e 20 \u7684\u6240\u6709\u6570\u636e\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # SQL \u5220\u9664\u8bed\u53e5 sql = \"DELETE FROM EMPLOYEE WHERE AGE > %s \" % ( 20 ) try : # \u6267\u884cSQL\u8bed\u53e5 cursor . execute ( sql ) # \u63d0\u4ea4\u4fee\u6539 db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () # \u5173\u95ed\u8fde\u63a5 db.close() \u6267\u884c\u4e8b\u52a1 \u00b6 \u4e8b\u52a1\u673a\u5236\u53ef\u4ee5\u786e\u4fdd\u6570\u636e\u4e00\u81f4\u6027\u3002 \u4e8b\u52a1\u5e94\u8be5\u5177\u67094\u4e2a\u5c5e\u6027\uff1a\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u3001\u6301\u4e45\u6027\u3002\u8fd9\u56db\u4e2a\u5c5e\u6027\u901a\u5e38\u79f0\u4e3aACID\u7279\u6027\u3002 \u539f\u5b50\u6027\uff08atomicity\uff09\u3002\u4e00\u4e2a\u4e8b\u52a1\u662f\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\uff0c\u4e8b\u52a1\u4e2d\u5305\u62ec\u7684\u8bf8\u64cd\u4f5c\u8981\u4e48\u90fd\u505a\uff0c\u8981\u4e48\u90fd\u4e0d\u505a\u3002 \u4e00\u81f4\u6027\uff08consistency\uff09\u3002\u4e8b\u52a1\u5fc5\u987b\u662f\u4f7f\u6570\u636e\u5e93\u4ece\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u53d8\u5230\u53e6\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u3002\u4e00\u81f4\u6027\u4e0e\u539f\u5b50\u6027\u662f\u5bc6\u5207\u76f8\u5173\u7684\u3002 \u9694\u79bb\u6027\uff08isolation\uff09\u3002\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u80fd\u88ab\u5176\u4ed6\u4e8b\u52a1\u5e72\u6270\u3002\u5373\u4e00\u4e2a\u4e8b\u52a1\u5185\u90e8\u7684\u64cd\u4f5c\u53ca\u4f7f\u7528\u7684\u6570\u636e\u5bf9\u5e76\u53d1\u7684\u5176\u4ed6\u4e8b\u52a1\u662f\u9694\u79bb\u7684\uff0c\u5e76\u53d1\u6267\u884c\u7684\u5404\u4e2a\u4e8b\u52a1\u4e4b\u95f4\u4e0d\u80fd\u4e92\u76f8\u5e72\u6270\u3002 \u6301\u4e45\u6027\uff08durability\uff09\u3002\u6301\u7eed\u6027\u4e5f\u79f0\u6c38\u4e45\u6027\uff08permanence\uff09\uff0c\u6307\u4e00\u4e2a\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u5b83\u5bf9\u6570\u636e\u5e93\u4e2d\u6570\u636e\u7684\u6539\u53d8\u5c31\u5e94\u8be5\u662f\u6c38\u4e45\u6027\u7684\u3002\u63a5\u4e0b\u6765\u7684\u5176\u4ed6\u64cd\u4f5c\u6216\u6545\u969c\u4e0d\u5e94\u8be5\u5bf9\u5176\u6709\u4efb\u4f55\u5f71\u54cd\u3002 Python DB API 2.0 \u7684\u4e8b\u52a1\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u6cd5 commit \u6216 rollback\u3002 \u5b9e\u4f8b\uff1a \u00b6 # SQL\u5220\u9664\u8bb0\u5f55\u8bed\u53e5 sql = \"DELETE FROM EMPLOYEE WHERE AGE > %s\" % ( 20 ) try : # \u6267\u884c SQL\u8bed\u53e5 cursor . execute ( sql ) # \u5411\u6570\u636e\u5e93\u63d0\u4ea4 db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () \u5bf9\u4e8e\u652f\u6301\u4e8b\u52a1\u7684\u6570\u636e\u5e93\uff0c \u5728Python\u6570\u636e\u5e93\u7f16\u7a0b\u4e2d\uff0c\u5f53\u6e38\u6807\u5efa\u7acb\u4e4b\u65f6\uff0c\u5c31\u81ea\u52a8\u5f00\u59cb\u4e86\u4e00\u4e2a\u9690\u5f62\u7684\u6570\u636e\u5e93\u4e8b\u52a1\u3002 commit()\u65b9\u6cd5\u6e38\u6807\u7684\u6240\u6709\u66f4\u65b0\u64cd\u4f5c\uff0crollback\uff08\uff09\u65b9\u6cd5\u56de\u6eda\u5f53\u524d\u6e38\u6807\u7684\u6240\u6709\u64cd\u4f5c\u3002\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u90fd\u5f00\u59cb\u4e86\u4e00\u4e2a\u65b0\u7684\u4e8b\u52a1\u3002 \u9519\u8bef\u5904\u7406 \u00b6 DB API\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u9519\u8bef\u53ca\u5f02\u5e38\uff0c\u4e0b\u8868\u5217\u51fa\u4e86\u8fd9\u4e9b\u9519\u8bef\u548c\u5f02\u5e38: \u5f02\u5e38 \u63cf\u8ff0 Warning \u5f53\u6709\u4e25\u91cd\u8b66\u544a\u65f6\u89e6\u53d1\uff0c\u4f8b\u5982\u63d2\u5165\u6570\u636e\u662f\u88ab\u622a\u65ad\u7b49\u7b49\u3002\u5fc5\u987b\u662f StandardError \u7684\u5b50\u7c7b\u3002 Error \u8b66\u544a\u4ee5\u5916\u6240\u6709\u5176\u4ed6\u9519\u8bef\u7c7b\u3002\u5fc5\u987b\u662f StandardError \u7684\u5b50\u7c7b\u3002 InterfaceError \u5f53\u6709\u6570\u636e\u5e93\u63a5\u53e3\u6a21\u5757\u672c\u8eab\u7684\u9519\u8bef\uff08\u800c\u4e0d\u662f\u6570\u636e\u5e93\u7684\u9519\u8bef\uff09\u53d1\u751f\u65f6\u89e6\u53d1\u3002 \u5fc5\u987b\u662fError\u7684\u5b50\u7c7b\u3002 DatabaseError \u548c\u6570\u636e\u5e93\u6709\u5173\u7684\u9519\u8bef\u53d1\u751f\u65f6\u89e6\u53d1\u3002 \u5fc5\u987b\u662fError\u7684\u5b50\u7c7b\u3002 DataError \u5f53\u6709\u6570\u636e\u5904\u7406\u65f6\u7684\u9519\u8bef\u53d1\u751f\u65f6\u89e6\u53d1\uff0c\u4f8b\u5982\uff1a\u9664\u96f6\u9519\u8bef\uff0c\u6570\u636e\u8d85\u8303\u56f4\u7b49\u7b49\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 OperationalError \u6307\u975e\u7528\u6237\u63a7\u5236\u7684\uff0c\u800c\u662f\u64cd\u4f5c\u6570\u636e\u5e93\u65f6\u53d1\u751f\u7684\u9519\u8bef\u3002\u4f8b\u5982\uff1a\u8fde\u63a5\u610f\u5916\u65ad\u5f00\u3001 \u6570\u636e\u5e93\u540d\u672a\u627e\u5230\u3001\u4e8b\u52a1\u5904\u7406\u5931\u8d25\u3001\u5185\u5b58\u5206\u914d\u9519\u8bef\u7b49\u7b49\u64cd\u4f5c\u6570\u636e\u5e93\u662f\u53d1\u751f\u7684\u9519\u8bef\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 IntegrityError \u5b8c\u6574\u6027\u76f8\u5173\u7684\u9519\u8bef\uff0c\u4f8b\u5982\u5916\u952e\u68c0\u67e5\u5931\u8d25\u7b49\u3002\u5fc5\u987b\u662fDatabaseError\u5b50\u7c7b\u3002 InternalError \u6570\u636e\u5e93\u7684\u5185\u90e8\u9519\u8bef\uff0c\u4f8b\u5982\u6e38\u6807\uff08cursor\uff09\u5931\u6548\u4e86\u3001\u4e8b\u52a1\u540c\u6b65\u5931\u8d25\u7b49\u7b49\u3002 \u5fc5\u987b\u662fDatabaseError\u5b50\u7c7b\u3002 ProgrammingError \u7a0b\u5e8f\u9519\u8bef\uff0c\u4f8b\u5982\u6570\u636e\u8868\uff08table\uff09\u6ca1\u627e\u5230\u6216\u5df2\u5b58\u5728\u3001SQL\u8bed\u53e5\u8bed\u6cd5\u9519\u8bef\u3001 \u53c2\u6570\u6570\u91cf\u9519\u8bef\u7b49\u7b49\u3002\u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 NotSupportedError \u4e0d\u652f\u6301\u9519\u8bef\uff0c\u6307\u4f7f\u7528\u4e86\u6570\u636e\u5e93\u4e0d\u652f\u6301\u7684\u51fd\u6570\u6216API\u7b49\u3002\u4f8b\u5982\u5728\u8fde\u63a5\u5bf9\u8c61\u4e0a \u4f7f\u7528.rollback()\u51fd\u6570\uff0c\u7136\u800c\u6570\u636e\u5e93\u5e76\u4e0d\u652f\u6301\u4e8b\u52a1\u6216\u8005\u4e8b\u52a1\u5df2\u5173\u95ed\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 \u8bf4\u660e \u00b6 \u5173\u4e8eMysql\u7684\u8fde\u63a5\uff0c\u7ecf\u8fc7\u6478\u7d22\uff0c\u5efa\u8bae\u6b63\u6587\u4fee\u6539\u4e00\u4e0b\uff0c\u4f7f\u7528mysql\u5b98\u65b9\u63d0\u4f9b\u7684\u8fde\u63a5\u5668\uff0c\u6211\u76ee\u524d\u5b89\u88c5\u7684mysql\u662f8.0.12\u7248\u672c\uff0c\u6570\u636e\u5e93\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5b89\u88c5\u201cmysql-connector-python-8.0.12-py2.7-windows-x86-64bit\u201d\uff0c\u5f53\u7136\u4e86\uff0c\u8981\u6839\u636e\u81ea\u5df1\u7684\u64cd\u4f5c\u7cfb\u7edf\u548cpython\u7248\u672c\u4ee5\u53ca\u4f4d\u6570\u8fdb\u884c\u9009\u62e9\uff0c\u6211\u662fwin10\u768464\u4f4d\uff0cpython2.7\u768464\u4f4d\uff0c\u6545\u9009\u62e9\u7684\u4e0a\u8ff0\u63d2\u4ef6\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u76f4\u63a5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u8fdb\u884c\u6d4b\u8bd5\uff1a # -*- coding:utf-8 -*- import mysql.connector # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u7684\u7528\u6237\u540d\u3001\u5bc6\u7801\u53ca\u6570\u636e\u5e93\u540d\u79f0\u8fdb\u884c\u4fee\u6539\uff09 cnn = mysql . connector . connect ( user = 'root' , passwd = 'root' , database = 'testdb' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = cnn . cursor () # \u4f7f\u7528execute\u65b9\u6cd5\u6267\u884cSQL\u8bed\u53e5 cursor . execute ( \"SELECT VERSION()\" ) # \u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u4e00\u6761\u6570\u636e data = cursor . fetchone () print \"Database version : %s \" % data # \u6267\u884csql\u8bed\u53e5 cnn . close () \u663e\u793a\u7684\u7ed3\u679c\u5e94\u8be5\u5982\u4e0b \uff1a Database version : 8.0 . 12 \u663e\u793a\u7684\u7ed3\u679c\u5e94\u8be5\u5982\u4e0b\uff1a Database version : 8.0.12 \u76f8\u5173\u8d44\u6e90\u4e0b\u8f7d\u94fe\u63a5\u5982\u4e0b\uff1a Python2.7\uff08\u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u7248\u672c\u8bed\u53e5\u517c\u5bb9\u6027\u9ad8\uff0c\u9002\u5408\u5165\u95e8\uff09\uff1a https://blog.python.org/2018/05/python-2715-released.html Mysql8.0.12\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u9700\u8981\u9009\u62e9\u7248\u672c\uff09\uff1a https://dev.mysql.com/downloads/installer/ Mysql\u5b98\u65b9\u6570\u636e\u5e93\u8fde\u63a5\u5668\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u9700\u8981\u9009\u62e9\uff09\uff1a https://dev.mysql.com/downloads/connector/python/ \u5907\u6ce8\uff1a\u6709\u4e9b\u9875\u9762\u6253\u5f00\u4f1a\u5f88\u56f0\u96be\uff0c\u539f\u56e0\u4e0d\u89e3\u91ca\uff0c\u5982\u679c\u5b9e\u5728\u6253\u4e0d\u5f00\uff0c\u90a3\u5c31\u81ea\u5df1\u641c\u4e00\u4e0b\u5427\u3002 fun_zb fun_zb fun***@qq.com1\u5e74\u524d (2018-08-25","title":"Python\u64cd\u4f5c MySQL\u6570\u636e\u5e93.md"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#python-mysql","text":"Python \u6807\u51c6\u6570\u636e\u5e93\u63a5\u53e3\u4e3a Python DB-API\uff0cPython DB-API\u4e3a\u5f00\u53d1\u4eba\u5458\u63d0\u4f9b\u4e86\u6570\u636e\u5e93\u5e94\u7528\u7f16\u7a0b\u63a5\u53e3\u3002 \u4e0d\u540c\u7684\u6570\u636e\u5e93\u4f60\u9700\u8981\u4e0b\u8f7d\u4e0d\u540c\u7684DB API\u6a21\u5757\uff0c\u4f8b\u5982\u4f60\u9700\u8981\u8bbf\u95eeOracle\u6570\u636e\u5e93\u548cMysql\u6570\u636e\uff0c\u4f60\u9700\u8981\u4e0b\u8f7dOracle\u548cMySQL\u6570\u636e\u5e93\u6a21\u5757\u3002DB-API \u662f\u4e00\u4e2a\u89c4\u8303. \u5b83\u5b9a\u4e49\u4e86\u4e00\u7cfb\u5217\u5fc5\u987b\u7684\u5bf9\u8c61\u548c\u6570\u636e\u5e93\u5b58\u53d6\u65b9\u5f0f, \u4ee5\u4fbf\u4e3a\u5404\u79cd\u5404\u6837\u7684\u5e95\u5c42\u6570\u636e\u5e93\u7cfb\u7edf\u548c\u591a\u79cd\u591a\u6837\u7684\u6570\u636e\u5e93\u63a5\u53e3\u7a0b\u5e8f\u63d0\u4f9b\u4e00\u81f4\u7684\u8bbf\u95ee\u63a5\u53e3 \u3002Python\u7684DB-API\uff0c\u4e3a\u5927\u591a\u6570\u7684\u6570\u636e\u5e93\u5b9e\u73b0\u4e86\u63a5\u53e3\uff0c\u4f7f\u7528\u5b83\u8fde\u63a5\u5404\u6570\u636e\u5e93\u540e\uff0c\u5c31\u53ef\u4ee5\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u64cd\u4f5c\u5404\u6570\u636e\u5e93\u3002 Python DB-API\u4f7f\u7528\u6d41\u7a0b\uff1a \u5f15\u5165 API \u6a21\u5757\u3002 \u83b7\u53d6\u4e0e\u6570\u636e\u5e93\u7684\u8fde\u63a5\u3002 \u6267\u884cSQL\u8bed\u53e5\u548c\u5b58\u50a8\u8fc7\u7a0b\u3002 \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\u3002","title":"Python \u64cd\u4f5c MySQL \u6570\u636e\u5e93"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysqldb","text":"MySQLdb \u662f\u7528\u4e8ePython\u94fe\u63a5Mysql\u6570\u636e\u5e93\u7684\u63a5\u53e3\uff0c\u5b83\u5b9e\u73b0\u4e86 Python \u6570\u636e\u5e93 API \u89c4\u8303 V2.0\uff0c\u57fa\u4e8e MySQL C API \u4e0a\u5efa\u7acb\u7684\u3002","title":"\u4ec0\u4e48\u662fMySQLdb?"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysqldb_1","text":"\u4e3a\u4e86\u7528DB-API\u7f16\u5199MySQL\u811a\u672c\uff0c\u5fc5\u987b\u786e\u4fdd\u5df2\u7ecf\u5b89\u88c5\u4e86MySQL\u3002\u590d\u5236\u4ee5\u4e0b\u4ee3\u7801\uff0c\u5e76\u6267\u884c\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb \u5982\u679c\u6267\u884c\u540e\u7684\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\u6240\u793a\uff0c\u610f\u5473\u7740\u4f60\u6ca1\u6709\u5b89\u88c5 MySQLdb \u6a21\u5757\uff1a ```python Traceback (most recent call last): File \"test.py\", line 3, in import MySQLdb ImportError: No module named MySQLdb \u5b89\u88c5MySQLdb\uff0c\u8bf7\u8bbf\u95ee http://sourceforge.net/projects/mysql-python \uff0c(Linux\u5e73\u53f0\u53ef\u4ee5\u8bbf\u95ee\uff1ahttps://pypi.python.org/pypi/MySQL-python)\u4ece\u8fd9\u91cc\u53ef\u9009\u62e9\u9002\u5408\u60a8\u7684\u5e73\u53f0\u7684\u5b89\u88c5\u5305\uff0c\u5206\u4e3a\u9884\u7f16\u8bd1\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u548c\u6e90\u4ee3\u7801\u5b89\u88c5\u5305\u3002 \u5982\u679c\u60a8\u9009\u62e9\u4e8c\u8fdb\u5236\u6587\u4ef6\u53d1\u884c\u7248\u672c\u7684\u8bdd\uff0c\u5b89\u88c5\u8fc7\u7a0b\u57fa\u672c\u5b89\u88c5\u63d0\u793a\u5373\u53ef\u5b8c\u6210\u3002\u5982\u679c\u4ece\u6e90\u4ee3\u7801\u8fdb\u884c\u5b89\u88c5\u7684\u8bdd\uff0c\u5219\u9700\u8981\u5207\u6362\u5230MySQLdb\u53d1\u884c\u7248\u672c\u7684\u9876\u7ea7\u76ee\u5f55\uff0c\u5e76\u952e\u5165\u4e0b\u5217\u547d\u4ee4: ```bash $ gunzip MySQL-python-1.2.2.tar.gz $ tar -xvf MySQL-python-1.2.2.tar $ cd MySQL-python-1.2.2 $ python setup.py build $ python setup.py install **\u6ce8\u610f\uff1a**\u8bf7\u786e\u4fdd\u60a8\u6709root\u6743\u9650\u6765\u5b89\u88c5\u4e0a\u8ff0\u6a21\u5757\u3002 \u5b89\u88c5\u62a5\u95191: \u6267\u884c sudo python setup.py build \u51fa\u73b0\u95ee\u9898(SSL\u6743\u9650) sudo python setup.py build Downloading http://pypi.python.org/packages/source/d/distribute/distribute-0.6.28.tar.gz urllib2.HTTPError: HTTP Error 403 : SSL is required \u53ef\u4ee5\u53c2\u8003 https://blog.csdn.net/bin642264643/article/details/91972480 \u76f4\u63a5\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee\u8fd9\u4e2a\u94fe\u63a5\u8fdb\u884c\u4e0b\u8f7d\u3002\u4e0b\u8f7d\u7ed3\u675f\uff0c\u5e76\u653e\u5728\u8def\u5f84\u4e0b\uff0c\u7136\u540e\u6267\u884c python setup.py build \u5b89\u88c5\u62a5\u9519\uff1a\u51fa\u73b0\u4e0b\u9762\u7684\u95ee\u9898 running build running build_py copying MySQLdb/release.py -> build/lib.macosx-10.13-intel-2.7/MySQLdb running build_ext building '_mysql' extension cc -fno-strict-aliasing -fno-common -dynamic -arch x86_64 -arch i386 -g -Os -pipe -fno-common -fno-strict-aliasing -fwrapv -DENABLE_DTRACE -DMACOSX -DNDEBUG -Wall -Wstrict-prototypes -Wshorten-64-to-32 -DNDEBUG -g -fwrapv -Os -Wall -Wstrict-prototypes -DENABLE_DTRACE -arch i386 -arch x86_64 -pipe -Dversion_info =( 1 ,2,4, 'beta' ,4 ) -D__version__ = 1 .2.4b4 -I/usr/local/mysql/include -I/System/Library/Frameworks/Python.framework/Versions/2.7/include/python2.7 -c _mysql.c -o build/temp.macosx-10.13-intel-2.7/_mysql.o _mysql.c:44:10: fatal error: 'my_config.h' file not found #include \"my_config.h\" ^~~~~~~~~~~~~ 1 error generated. error: command 'cc' failed with exit status 1 \u89e3\u51b3\u65b9\u6cd51\uff1a https://stackoverflow.com/questions/21638444/error-command-cc-failed-with-exit-status-1-mysqldb-installation-on-mac The problem is unused arguments passed to compiler. Try this before running your build code: export CFLAGS = -Qunused-arguments export CPPFLAGS = -Qunused-arguments \u4f7f\u7528\u4e0a\u9762\u7684\u7f16\u8bd1\u4e0d\u5904\u7406\u554a\u554a\uff01\u770b\u4e00\u4e0b\u6700\u65b0\u7684\u6559\u7a0b\u2018 \u53ef\u80fd\u662fpython2.7.10 \u6216\u80053\u7248\u672c\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u672c\u5730\u73b0\u5728\u4e24\u4e2a\u7248\u672c\u90fd\u5b89\u88c5 \u53ef\u80fd\u662f\u7248\u672c\u4e0d\u5bf9\u5e94\uff0cMySQL_python-1.2.5-cp27-none-win_amd64.whl \u652f\u6301windows\u7248\u672c\u6216\u8005linux\u7cfb\u7edf\uff0c\u4e0d\u652f\u6301Mac\u7cfb\u7edf\u3002 \u89e3\u51b3\u65b9\u6cd52\uff1a https://stackoverflow.com/questions/50864438/mac-pip-install-mysql-python-unsuccessful Installing of an older version of the MySQL worked for me: brew remove mysql brew install mysql@5.7 brew link --force mysql@5.7 pip install mysql-python","title":"\u5982\u4f55\u5b89\u88c5MySQLdb?"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_1","text":"\u8fde\u63a5\u6570\u636e\u5e93\u524d\uff0c\u8bf7\u5148\u786e\u8ba4\u4ee5\u4e0b\u4e8b\u9879\uff1a \u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u6570\u636e\u5e93 TESTDB. \u5728TESTDB\u6570\u636e\u5e93\u4e2d\u60a8\u5df2\u7ecf\u521b\u5efa\u4e86\u8868 EMPLOYEE EMPLOYEE\u8868\u5b57\u6bb5\u4e3a FIRST_NAME, LAST_NAME, AGE, SEX \u548c INCOME\u3002 \u8fde\u63a5\u6570\u636e\u5e93TESTDB\u4f7f\u7528\u7684\u7528\u6237\u540d\u4e3a \"testuser\" \uff0c\u5bc6\u7801\u4e3a \"test123\",\u4f60\u53ef\u4ee5\u53ef\u4ee5\u81ea\u5df1\u8bbe\u5b9a\u6216\u8005\u76f4\u63a5\u4f7f\u7528root\u7528\u6237\u540d\u53ca\u5176\u5bc6\u7801\uff0cMysql\u6570\u636e\u5e93\u7528\u6237\u6388\u6743\u8bf7\u4f7f\u7528Grant\u547d\u4ee4\u3002 \u5728\u4f60\u7684\u673a\u5b50\u4e0a\u5df2\u7ecf\u5b89\u88c5\u4e86 Python MySQLdb \u6a21\u5757\u3002 \u5982\u679c\u60a8\u5bf9sql\u8bed\u53e5\u4e0d\u719f\u6089\uff0c\u53ef\u4ee5\u8bbf\u95ee\u6211\u4eec\u7684 SQL\u57fa\u7840\u6559\u7a0b","title":"\u6570\u636e\u5e93\u8fde\u63a5"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_2","text":"\u4ee5\u4e0b\u5b9e\u4f8b\u94fe\u63a5Mysql\u7684TESTDB\u6570\u636e\u5e93\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # \u4f7f\u7528execute\u65b9\u6cd5\u6267\u884cSQL\u8bed\u53e5 cursor . execute ( \"SELECT VERSION()\" ) # \u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u4e00\u6761\u6570\u636e data = cursor . fetchone () print \"Database version : %s \" % data # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db . close () \u6267\u884c\u4ee5\u4e0a\u811a\u672c\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a Database version : 5.0.45","title":"\u5b9e\u4f8b\uff1a"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_3","text":"\u5982\u679c\u6570\u636e\u5e93\u8fde\u63a5\u5b58\u5728\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528execute()\u65b9\u6cd5\u6765\u4e3a\u6570\u636e\u5e93\u521b\u5efa\u8868\uff0c\u5982\u4e0b\u6240\u793a\u521b\u5efa\u8868EMPLOYEE\uff1a ```python","title":"\u521b\u5efa\u6570\u636e\u5e93\u8868"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#usrbinpython","text":"","title":"!/usr/bin/python"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#-coding-utf-8-","text":"import MySQLdb","title":"-- coding: UTF-8 --"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_4","text":"db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' )","title":"\u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#cursor","text":"cursor = db.cursor()","title":"\u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#execute","text":"cursor.execute(\"DROP TABLE IF EXISTS EMPLOYEE\")","title":"\u5982\u679c\u6570\u636e\u8868\u5df2\u7ecf\u5b58\u5728\u4f7f\u7528 execute() \u65b9\u6cd5\u5220\u9664\u8868\u3002"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#sql","text":"sql = \"\"\"CREATE TABLE EMPLOYEE ( FIRST_NAME CHAR(20) NOT NULL, LAST_NAME CHAR(20), AGE INT, SEX CHAR(1), INCOME FLOAT )\"\"\" cursor.execute(sql)","title":"\u521b\u5efa\u6570\u636e\u8868SQL\u8bed\u53e5"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_5","text":"db.close() ------ ## \u6570\u636e\u5e93\u63d2\u5165\u64cd\u4f5c \u4ee5\u4e0b\u5b9e\u4f8b\u4f7f\u7528\u6267\u884c SQL INSERT \u8bed\u53e5\u5411\u8868 EMPLOYEE \u63d2\u5165\u8bb0\u5f55\uff1a ```python #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db.cursor() # SQL \u63d2\u5165\u8bed\u53e5 sql = \"\"\"INSERT INTO EMPLOYEE(FIRST_NAME, LAST_NAME, AGE, SEX, INCOME) VALUES ('Mac', 'Mohan', 20, 'M', 2000)\"\"\" try: # \u6267\u884csql\u8bed\u53e5 cursor.execute(sql) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db.commit() except: # Rollback in case there is any error db.rollback() # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db.close() \u4ee5\u4e0a\u4f8b\u5b50\u4e5f\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u5f62\u5f0f\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # SQL \u63d2\u5165\u8bed\u53e5 sql = \"INSERT INTO EMPLOYEE(FIRST_NAME, \\ LAST_NAME, AGE, SEX, INCOME) \\ VALUES ( %s , %s , %s , %s , %s )\" % \\ ( 'Mac' , 'Mohan' , 20 , 'M' , 2000 ) try : # \u6267\u884csql\u8bed\u53e5 cursor . execute ( sql ) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db . close ()","title":"\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_6","text":"\u4ee5\u4e0b\u4ee3\u7801\u4f7f\u7528\u53d8\u91cf\u5411SQL\u8bed\u53e5\u4e2d\u4f20\u9012\u53c2\u6570: .................................. user_id = \"test123\" password = \"password\" con.execute('insert into Login values(%s, %s)' % \\ (user_id, password)) ..................................","title":"\u5b9e\u4f8b\uff1a"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_7","text":"Python\u67e5\u8be2Mysql\u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u5355\u6761\u6570\u636e, \u4f7f\u7528fetchall() \u65b9\u6cd5\u83b7\u53d6\u591a\u6761\u6570\u636e\u3002 fetchone(): \u8be5\u65b9\u6cd5\u83b7\u53d6\u4e0b\u4e00\u4e2a\u67e5\u8be2\u7ed3\u679c\u96c6\u3002\u7ed3\u679c\u96c6\u662f\u4e00\u4e2a\u5bf9\u8c61 **fetchall():**\u63a5\u6536\u5168\u90e8\u7684\u8fd4\u56de\u7ed3\u679c\u884c. rowcount: \u8fd9\u662f\u4e00\u4e2a\u53ea\u8bfb\u5c5e\u6027\uff0c\u5e76\u8fd4\u56de\u6267\u884cexecute()\u65b9\u6cd5\u540e\u5f71\u54cd\u7684\u884c\u6570\u3002","title":"\u6570\u636e\u5e93\u67e5\u8be2\u64cd\u4f5c"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_8","text":"\u67e5\u8be2EMPLOYEE\u8868\u4e2dsalary\uff08\u5de5\u8d44\uff09\u5b57\u6bb5\u5927\u4e8e1000\u7684\u6240\u6709\u6570\u636e\uff1a ```python","title":"\u5b9e\u4f8b\uff1a"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#usrbinpython_1","text":"","title":"!/usr/bin/python"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#-coding-utf-8-_1","text":"import MySQLdb","title":"-- coding: UTF-8 --"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_9","text":"db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' )","title":"\u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#cursor_1","text":"cursor = db.cursor()","title":"\u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#sql_1","text":"sql = \"SELECT * FROM EMPLOYEE \\ WHERE INCOME > %s\" % (1000) try: # \u6267\u884cSQL\u8bed\u53e5 cursor.execute(sql) # \u83b7\u53d6\u6240\u6709\u8bb0\u5f55\u5217\u8868 results = cursor.fetchall() for row in results: fname = row[0] lname = row[1] age = row[2] sex = row[3] income = row[4] # \u6253\u5370\u7ed3\u679c print \"fname=%s,lname=%s,age=%s,sex=%s,income=%s\" % \\ (fname, lname, age, sex, income ) except: print \"Error: unable to fecth data\"","title":"SQL \u67e5\u8be2\u8bed\u53e5"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_10","text":"db.close() \u4ee5\u4e0a\u811a\u672c\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a fname=Mac, lname=Mohan, age=20, sex=M, income=2000 ------ ## \u6570\u636e\u5e93\u66f4\u65b0\u64cd\u4f5c \u66f4\u65b0\u64cd\u4f5c\u7528\u4e8e\u66f4\u65b0\u6570\u636e\u8868\u7684\u7684\u6570\u636e\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u5c06 EMPLOYEE \u8868\u4e2d\u7684 SEX \u5b57\u6bb5\u4e3a 'M' \u7684 AGE \u5b57\u6bb5\u9012\u589e 1\uff1a ```python #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb.connect(\"localhost\", \"testuser\", \"test123\", \"TESTDB\", charset='utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db.cursor() # SQL \u66f4\u65b0\u8bed\u53e5 sql = \"UPDATE EMPLOYEE SET AGE = AGE + 1 WHERE SEX = '%c'\" % ('M') try: # \u6267\u884cSQL\u8bed\u53e5 cursor.execute(sql) # \u63d0\u4ea4\u5230\u6570\u636e\u5e93\u6267\u884c db.commit() except: # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db.rollback() # \u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5 db.close()","title":"\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_11","text":"\u5220\u9664\u64cd\u4f5c\u7528\u4e8e\u5220\u9664\u6570\u636e\u8868\u4e2d\u7684\u6570\u636e\uff0c\u4ee5\u4e0b\u5b9e\u4f8b\u6f14\u793a\u4e86\u5220\u9664\u6570\u636e\u8868 EMPLOYEE \u4e2d AGE \u5927\u4e8e 20 \u7684\u6240\u6709\u6570\u636e\uff1a #!/usr/bin/python # -*- coding: UTF-8 -*- import MySQLdb # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5 db = MySQLdb . connect ( \"localhost\" , \"testuser\" , \"test123\" , \"TESTDB\" , charset = 'utf8' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = db . cursor () # SQL \u5220\u9664\u8bed\u53e5 sql = \"DELETE FROM EMPLOYEE WHERE AGE > %s \" % ( 20 ) try : # \u6267\u884cSQL\u8bed\u53e5 cursor . execute ( sql ) # \u63d0\u4ea4\u4fee\u6539 db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () # \u5173\u95ed\u8fde\u63a5 db.close()","title":"\u5220\u9664\u64cd\u4f5c"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_12","text":"\u4e8b\u52a1\u673a\u5236\u53ef\u4ee5\u786e\u4fdd\u6570\u636e\u4e00\u81f4\u6027\u3002 \u4e8b\u52a1\u5e94\u8be5\u5177\u67094\u4e2a\u5c5e\u6027\uff1a\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u9694\u79bb\u6027\u3001\u6301\u4e45\u6027\u3002\u8fd9\u56db\u4e2a\u5c5e\u6027\u901a\u5e38\u79f0\u4e3aACID\u7279\u6027\u3002 \u539f\u5b50\u6027\uff08atomicity\uff09\u3002\u4e00\u4e2a\u4e8b\u52a1\u662f\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\uff0c\u4e8b\u52a1\u4e2d\u5305\u62ec\u7684\u8bf8\u64cd\u4f5c\u8981\u4e48\u90fd\u505a\uff0c\u8981\u4e48\u90fd\u4e0d\u505a\u3002 \u4e00\u81f4\u6027\uff08consistency\uff09\u3002\u4e8b\u52a1\u5fc5\u987b\u662f\u4f7f\u6570\u636e\u5e93\u4ece\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u53d8\u5230\u53e6\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u3002\u4e00\u81f4\u6027\u4e0e\u539f\u5b50\u6027\u662f\u5bc6\u5207\u76f8\u5173\u7684\u3002 \u9694\u79bb\u6027\uff08isolation\uff09\u3002\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u80fd\u88ab\u5176\u4ed6\u4e8b\u52a1\u5e72\u6270\u3002\u5373\u4e00\u4e2a\u4e8b\u52a1\u5185\u90e8\u7684\u64cd\u4f5c\u53ca\u4f7f\u7528\u7684\u6570\u636e\u5bf9\u5e76\u53d1\u7684\u5176\u4ed6\u4e8b\u52a1\u662f\u9694\u79bb\u7684\uff0c\u5e76\u53d1\u6267\u884c\u7684\u5404\u4e2a\u4e8b\u52a1\u4e4b\u95f4\u4e0d\u80fd\u4e92\u76f8\u5e72\u6270\u3002 \u6301\u4e45\u6027\uff08durability\uff09\u3002\u6301\u7eed\u6027\u4e5f\u79f0\u6c38\u4e45\u6027\uff08permanence\uff09\uff0c\u6307\u4e00\u4e2a\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u5b83\u5bf9\u6570\u636e\u5e93\u4e2d\u6570\u636e\u7684\u6539\u53d8\u5c31\u5e94\u8be5\u662f\u6c38\u4e45\u6027\u7684\u3002\u63a5\u4e0b\u6765\u7684\u5176\u4ed6\u64cd\u4f5c\u6216\u6545\u969c\u4e0d\u5e94\u8be5\u5bf9\u5176\u6709\u4efb\u4f55\u5f71\u54cd\u3002 Python DB API 2.0 \u7684\u4e8b\u52a1\u63d0\u4f9b\u4e86\u4e24\u4e2a\u65b9\u6cd5 commit \u6216 rollback\u3002","title":"\u6267\u884c\u4e8b\u52a1"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_13","text":"# SQL\u5220\u9664\u8bb0\u5f55\u8bed\u53e5 sql = \"DELETE FROM EMPLOYEE WHERE AGE > %s\" % ( 20 ) try : # \u6267\u884c SQL\u8bed\u53e5 cursor . execute ( sql ) # \u5411\u6570\u636e\u5e93\u63d0\u4ea4 db . commit () except : # \u53d1\u751f\u9519\u8bef\u65f6\u56de\u6eda db . rollback () \u5bf9\u4e8e\u652f\u6301\u4e8b\u52a1\u7684\u6570\u636e\u5e93\uff0c \u5728Python\u6570\u636e\u5e93\u7f16\u7a0b\u4e2d\uff0c\u5f53\u6e38\u6807\u5efa\u7acb\u4e4b\u65f6\uff0c\u5c31\u81ea\u52a8\u5f00\u59cb\u4e86\u4e00\u4e2a\u9690\u5f62\u7684\u6570\u636e\u5e93\u4e8b\u52a1\u3002 commit()\u65b9\u6cd5\u6e38\u6807\u7684\u6240\u6709\u66f4\u65b0\u64cd\u4f5c\uff0crollback\uff08\uff09\u65b9\u6cd5\u56de\u6eda\u5f53\u524d\u6e38\u6807\u7684\u6240\u6709\u64cd\u4f5c\u3002\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u90fd\u5f00\u59cb\u4e86\u4e00\u4e2a\u65b0\u7684\u4e8b\u52a1\u3002","title":"\u5b9e\u4f8b\uff1a"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_14","text":"DB API\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e9b\u6570\u636e\u5e93\u64cd\u4f5c\u7684\u9519\u8bef\u53ca\u5f02\u5e38\uff0c\u4e0b\u8868\u5217\u51fa\u4e86\u8fd9\u4e9b\u9519\u8bef\u548c\u5f02\u5e38: \u5f02\u5e38 \u63cf\u8ff0 Warning \u5f53\u6709\u4e25\u91cd\u8b66\u544a\u65f6\u89e6\u53d1\uff0c\u4f8b\u5982\u63d2\u5165\u6570\u636e\u662f\u88ab\u622a\u65ad\u7b49\u7b49\u3002\u5fc5\u987b\u662f StandardError \u7684\u5b50\u7c7b\u3002 Error \u8b66\u544a\u4ee5\u5916\u6240\u6709\u5176\u4ed6\u9519\u8bef\u7c7b\u3002\u5fc5\u987b\u662f StandardError \u7684\u5b50\u7c7b\u3002 InterfaceError \u5f53\u6709\u6570\u636e\u5e93\u63a5\u53e3\u6a21\u5757\u672c\u8eab\u7684\u9519\u8bef\uff08\u800c\u4e0d\u662f\u6570\u636e\u5e93\u7684\u9519\u8bef\uff09\u53d1\u751f\u65f6\u89e6\u53d1\u3002 \u5fc5\u987b\u662fError\u7684\u5b50\u7c7b\u3002 DatabaseError \u548c\u6570\u636e\u5e93\u6709\u5173\u7684\u9519\u8bef\u53d1\u751f\u65f6\u89e6\u53d1\u3002 \u5fc5\u987b\u662fError\u7684\u5b50\u7c7b\u3002 DataError \u5f53\u6709\u6570\u636e\u5904\u7406\u65f6\u7684\u9519\u8bef\u53d1\u751f\u65f6\u89e6\u53d1\uff0c\u4f8b\u5982\uff1a\u9664\u96f6\u9519\u8bef\uff0c\u6570\u636e\u8d85\u8303\u56f4\u7b49\u7b49\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 OperationalError \u6307\u975e\u7528\u6237\u63a7\u5236\u7684\uff0c\u800c\u662f\u64cd\u4f5c\u6570\u636e\u5e93\u65f6\u53d1\u751f\u7684\u9519\u8bef\u3002\u4f8b\u5982\uff1a\u8fde\u63a5\u610f\u5916\u65ad\u5f00\u3001 \u6570\u636e\u5e93\u540d\u672a\u627e\u5230\u3001\u4e8b\u52a1\u5904\u7406\u5931\u8d25\u3001\u5185\u5b58\u5206\u914d\u9519\u8bef\u7b49\u7b49\u64cd\u4f5c\u6570\u636e\u5e93\u662f\u53d1\u751f\u7684\u9519\u8bef\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 IntegrityError \u5b8c\u6574\u6027\u76f8\u5173\u7684\u9519\u8bef\uff0c\u4f8b\u5982\u5916\u952e\u68c0\u67e5\u5931\u8d25\u7b49\u3002\u5fc5\u987b\u662fDatabaseError\u5b50\u7c7b\u3002 InternalError \u6570\u636e\u5e93\u7684\u5185\u90e8\u9519\u8bef\uff0c\u4f8b\u5982\u6e38\u6807\uff08cursor\uff09\u5931\u6548\u4e86\u3001\u4e8b\u52a1\u540c\u6b65\u5931\u8d25\u7b49\u7b49\u3002 \u5fc5\u987b\u662fDatabaseError\u5b50\u7c7b\u3002 ProgrammingError \u7a0b\u5e8f\u9519\u8bef\uff0c\u4f8b\u5982\u6570\u636e\u8868\uff08table\uff09\u6ca1\u627e\u5230\u6216\u5df2\u5b58\u5728\u3001SQL\u8bed\u53e5\u8bed\u6cd5\u9519\u8bef\u3001 \u53c2\u6570\u6570\u91cf\u9519\u8bef\u7b49\u7b49\u3002\u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002 NotSupportedError \u4e0d\u652f\u6301\u9519\u8bef\uff0c\u6307\u4f7f\u7528\u4e86\u6570\u636e\u5e93\u4e0d\u652f\u6301\u7684\u51fd\u6570\u6216API\u7b49\u3002\u4f8b\u5982\u5728\u8fde\u63a5\u5bf9\u8c61\u4e0a \u4f7f\u7528.rollback()\u51fd\u6570\uff0c\u7136\u800c\u6570\u636e\u5e93\u5e76\u4e0d\u652f\u6301\u4e8b\u52a1\u6216\u8005\u4e8b\u52a1\u5df2\u5173\u95ed\u3002 \u5fc5\u987b\u662fDatabaseError\u7684\u5b50\u7c7b\u3002","title":"\u9519\u8bef\u5904\u7406"},{"location":"sql/Python%E6%93%8D%E4%BD%9C%20MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_15","text":"\u5173\u4e8eMysql\u7684\u8fde\u63a5\uff0c\u7ecf\u8fc7\u6478\u7d22\uff0c\u5efa\u8bae\u6b63\u6587\u4fee\u6539\u4e00\u4e0b\uff0c\u4f7f\u7528mysql\u5b98\u65b9\u63d0\u4f9b\u7684\u8fde\u63a5\u5668\uff0c\u6211\u76ee\u524d\u5b89\u88c5\u7684mysql\u662f8.0.12\u7248\u672c\uff0c\u6570\u636e\u5e93\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5b89\u88c5\u201cmysql-connector-python-8.0.12-py2.7-windows-x86-64bit\u201d\uff0c\u5f53\u7136\u4e86\uff0c\u8981\u6839\u636e\u81ea\u5df1\u7684\u64cd\u4f5c\u7cfb\u7edf\u548cpython\u7248\u672c\u4ee5\u53ca\u4f4d\u6570\u8fdb\u884c\u9009\u62e9\uff0c\u6211\u662fwin10\u768464\u4f4d\uff0cpython2.7\u768464\u4f4d\uff0c\u6545\u9009\u62e9\u7684\u4e0a\u8ff0\u63d2\u4ef6\uff0c\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u76f4\u63a5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u8fdb\u884c\u6d4b\u8bd5\uff1a # -*- coding:utf-8 -*- import mysql.connector # \u6253\u5f00\u6570\u636e\u5e93\u8fde\u63a5\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u7684\u7528\u6237\u540d\u3001\u5bc6\u7801\u53ca\u6570\u636e\u5e93\u540d\u79f0\u8fdb\u884c\u4fee\u6539\uff09 cnn = mysql . connector . connect ( user = 'root' , passwd = 'root' , database = 'testdb' ) # \u4f7f\u7528cursor()\u65b9\u6cd5\u83b7\u53d6\u64cd\u4f5c\u6e38\u6807 cursor = cnn . cursor () # \u4f7f\u7528execute\u65b9\u6cd5\u6267\u884cSQL\u8bed\u53e5 cursor . execute ( \"SELECT VERSION()\" ) # \u4f7f\u7528 fetchone() \u65b9\u6cd5\u83b7\u53d6\u4e00\u6761\u6570\u636e data = cursor . fetchone () print \"Database version : %s \" % data # \u6267\u884csql\u8bed\u53e5 cnn . close () \u663e\u793a\u7684\u7ed3\u679c\u5e94\u8be5\u5982\u4e0b \uff1a Database version : 8.0 . 12 \u663e\u793a\u7684\u7ed3\u679c\u5e94\u8be5\u5982\u4e0b\uff1a Database version : 8.0.12 \u76f8\u5173\u8d44\u6e90\u4e0b\u8f7d\u94fe\u63a5\u5982\u4e0b\uff1a Python2.7\uff08\u4e2a\u4eba\u89c9\u5f97\u8fd9\u4e2a\u7248\u672c\u8bed\u53e5\u517c\u5bb9\u6027\u9ad8\uff0c\u9002\u5408\u5165\u95e8\uff09\uff1a https://blog.python.org/2018/05/python-2715-released.html Mysql8.0.12\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u9700\u8981\u9009\u62e9\u7248\u672c\uff09\uff1a https://dev.mysql.com/downloads/installer/ Mysql\u5b98\u65b9\u6570\u636e\u5e93\u8fde\u63a5\u5668\uff08\u8bf7\u6839\u636e\u81ea\u5df1\u9700\u8981\u9009\u62e9\uff09\uff1a https://dev.mysql.com/downloads/connector/python/ \u5907\u6ce8\uff1a\u6709\u4e9b\u9875\u9762\u6253\u5f00\u4f1a\u5f88\u56f0\u96be\uff0c\u539f\u56e0\u4e0d\u89e3\u91ca\uff0c\u5982\u679c\u5b9e\u5728\u6253\u4e0d\u5f00\uff0c\u90a3\u5c31\u81ea\u5df1\u641c\u4e00\u4e0b\u5427\u3002 fun_zb fun_zb fun***@qq.com1\u5e74\u524d (2018-08-25","title":"\u8bf4\u660e"},{"location":"sql/SQLite-API-Python/","text":"SQLite - Python \u00b6 \u5b89\u88c5 \u00b6 SQLite3 \u53ef\u4f7f\u7528 sqlite3 \u6a21\u5757\u4e0e Python \u8fdb\u884c\u96c6\u6210\u3002sqlite3 \u6a21\u5757\u662f\u7531 Gerhard Haring \u7f16\u5199\u7684\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0e PEP 249 \u63cf\u8ff0\u7684 DB-API 2.0 \u89c4\u8303\u517c\u5bb9\u7684 SQL \u63a5\u53e3\u3002\u60a8\u4e0d\u9700\u8981\u5355\u72ec\u5b89\u88c5\u8be5\u6a21\u5757\uff0c\u56e0\u4e3a Python 2.5.x \u4ee5\u4e0a\u7248\u672c\u9ed8\u8ba4\u81ea\u5e26\u4e86\u8be5\u6a21\u5757\u3002 \u4e3a\u4e86\u4f7f\u7528 sqlite3 \u6a21\u5757\uff0c\u60a8\u9996\u5148\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u8868\u793a\u6570\u636e\u5e93\u7684\u8fde\u63a5\u5bf9\u8c61\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u521b\u5efa\u5149\u6807\u5bf9\u8c61\uff0c\u8fd9\u5c06\u5e2e\u52a9\u60a8\u6267\u884c\u6240\u6709\u7684 SQL \u8bed\u53e5\u3002 Python sqlite3 \u6a21\u5757 API \u00b6 \u4ee5\u4e0b\u662f\u91cd\u8981\u7684 sqlite3 \u6a21\u5757\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u6ee1\u8db3\u60a8\u5728 Python \u7a0b\u5e8f\u4e2d\u4f7f\u7528 SQLite \u6570\u636e\u5e93\u7684\u9700\u6c42\u3002\u5982\u679c\u60a8\u9700\u8981\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u67e5\u770b Python sqlite3 \u6a21\u5757\u7684\u5b98\u65b9\u6587\u6863\u3002 \u5e8f\u53f7 API & \u63cf\u8ff0 1 sqlite3.connect(database [,timeout ,other optional arguments]) \u8be5 API \u6253\u5f00\u4e00\u4e2a\u5230 SQLite \u6570\u636e\u5e93\u6587\u4ef6 database \u7684\u94fe\u63a5\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 \":memory:\" \u6765\u5728 RAM \u4e2d\u6253\u5f00\u4e00\u4e2a\u5230 database \u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u800c\u4e0d\u662f\u5728\u78c1\u76d8\u4e0a\u6253\u5f00\u3002\u5982\u679c\u6570\u636e\u5e93\u6210\u529f\u6253\u5f00\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u8fde\u63a5\u5bf9\u8c61\u3002\u5f53\u4e00\u4e2a\u6570\u636e\u5e93\u88ab\u591a\u4e2a\u8fde\u63a5\u8bbf\u95ee\uff0c\u4e14\u5176\u4e2d\u4e00\u4e2a\u4fee\u6539\u4e86\u6570\u636e\u5e93\uff0c\u6b64\u65f6 SQLite \u6570\u636e\u5e93\u88ab\u9501\u5b9a\uff0c\u76f4\u5230\u4e8b\u52a1\u63d0\u4ea4\u3002timeout \u53c2\u6570\u8868\u793a\u8fde\u63a5\u7b49\u5f85\u9501\u5b9a\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u76f4\u5230\u53d1\u751f\u5f02\u5e38\u65ad\u5f00\u8fde\u63a5\u3002timeout \u53c2\u6570\u9ed8\u8ba4\u662f 5.0\uff085 \u79d2\uff09\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u6570\u636e\u5e93\u540d\u79f0 filename \u4e0d\u5b58\u5728\uff0c\u5219\u8be5\u8c03\u7528\u5c06\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u5982\u679c\u60a8\u4e0d\u60f3\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u521b\u5efa\u6570\u636e\u5e93\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u6307\u5b9a\u5e26\u6709\u8def\u5f84\u7684\u6587\u4ef6\u540d\uff0c\u8fd9\u6837\u60a8\u5c31\u80fd\u5728\u4efb\u610f\u5730\u65b9\u521b\u5efa\u6570\u636e\u5e93\u3002 2 connection.cursor([cursorClass]) \u8be5\u4f8b\u7a0b\u521b\u5efa\u4e00\u4e2a cursor \uff0c\u5c06\u5728 Python \u6570\u636e\u5e93\u7f16\u7a0b\u4e2d\u7528\u5230\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u5355\u4e00\u7684\u53ef\u9009\u7684\u53c2\u6570 cursorClass\u3002\u5982\u679c\u63d0\u4f9b\u4e86\u8be5\u53c2\u6570\uff0c\u5219\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u6269\u5c55\u81ea sqlite3.Cursor \u7684\u81ea\u5b9a\u4e49\u7684 cursor \u7c7b\u3002 3 cursor.execute(sql [, optional parameters]) \u8be5\u4f8b\u7a0b\u6267\u884c\u4e00\u4e2a SQL \u8bed\u53e5\u3002\u8be5 SQL \u8bed\u53e5\u53ef\u4ee5\u88ab\u53c2\u6570\u5316\uff08\u5373\u4f7f\u7528\u5360\u4f4d\u7b26\u4ee3\u66ff SQL \u6587\u672c\uff09\u3002sqlite3 \u6a21\u5757\u652f\u6301\u4e24\u79cd\u7c7b\u578b\u7684\u5360\u4f4d\u7b26\uff1a\u95ee\u53f7\u548c\u547d\u540d\u5360\u4f4d\u7b26\uff08\u547d\u540d\u6837\u5f0f\uff09\u3002\u4f8b\u5982\uff1acursor.execute(\"insert into people values (?, ?)\", (who, age)) 4 connection.execute(sql [, optional parameters]) \u8be5\u4f8b\u7a0b\u662f\u4e0a\u9762\u6267\u884c\u7684\u7531\u5149\u6807\uff08cursor\uff09\u5bf9\u8c61\u63d0\u4f9b\u7684\u65b9\u6cd5\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u5b83\u901a\u8fc7\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u4e86\u4e00\u4e2a\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 execute \u65b9\u6cd5\u3002 5 cursor.executemany(sql, seq_of_parameters) \u8be5\u4f8b\u7a0b\u5bf9 seq_of_parameters \u4e2d\u7684\u6240\u6709\u53c2\u6570\u6216\u6620\u5c04\u6267\u884c\u4e00\u4e2a SQL \u547d\u4ee4\u3002 6 connection.executemany(sql[, parameters]) \u8be5\u4f8b\u7a0b\u662f\u4e00\u4e2a\u7531\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u7684\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 executemany \u65b9\u6cd5\u3002 7 cursor.executescript(sql_script) \u8be5\u4f8b\u7a0b\u4e00\u65e6\u63a5\u6536\u5230\u811a\u672c\uff0c\u4f1a\u6267\u884c\u591a\u4e2a SQL \u8bed\u53e5\u3002\u5b83\u9996\u5148\u6267\u884c COMMIT \u8bed\u53e5\uff0c\u7136\u540e\u6267\u884c\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u7684 SQL \u811a\u672c\u3002\u6240\u6709\u7684 SQL \u8bed\u53e5\u5e94\u8be5\u7528\u5206\u53f7\uff08;\uff09\u5206\u9694\u3002 8 connection.executescript(sql_script) \u8be5\u4f8b\u7a0b\u662f\u4e00\u4e2a\u7531\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u7684\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 executescript \u65b9\u6cd5\u3002 9 connection.total_changes() \u8be5\u4f8b\u7a0b\u8fd4\u56de\u81ea\u6570\u636e\u5e93\u8fde\u63a5\u6253\u5f00\u4ee5\u6765\u88ab\u4fee\u6539\u3001\u63d2\u5165\u6216\u5220\u9664\u7684\u6570\u636e\u5e93\u603b\u884c\u6570\u3002 10 connection.commit() \u8be5\u65b9\u6cd5\u63d0\u4ea4\u5f53\u524d\u7684\u4e8b\u52a1\u3002\u5982\u679c\u60a8\u672a\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u90a3\u4e48\u81ea\u60a8\u4e0a\u4e00\u6b21\u8c03\u7528 commit() \u4ee5\u6765\u6240\u505a\u7684\u4efb\u4f55\u52a8\u4f5c\u5bf9\u5176\u4ed6\u6570\u636e\u5e93\u8fde\u63a5\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 11 connection.rollback() \u8be5\u65b9\u6cd5\u56de\u6eda\u81ea\u4e0a\u4e00\u6b21\u8c03\u7528 commit() \u4ee5\u6765\u5bf9\u6570\u636e\u5e93\u6240\u505a\u7684\u66f4\u6539\u3002 12 connection.close() \u8be5\u65b9\u6cd5\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u4f1a\u81ea\u52a8\u8c03\u7528 commit()\u3002\u5982\u679c\u60a8\u4e4b\u524d\u672a\u8c03\u7528 commit() \u65b9\u6cd5\uff0c\u5c31\u76f4\u63a5\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u60a8\u6240\u505a\u7684\u6240\u6709\u66f4\u6539\u5c06\u5168\u90e8\u4e22\u5931\uff01 13 cursor.fetchone() \u8be5\u65b9\u6cd5\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u7684\u4e0b\u4e00\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5355\u4e00\u7684\u5e8f\u5217\uff0c\u5f53\u6ca1\u6709\u66f4\u591a\u53ef\u7528\u7684\u6570\u636e\u65f6\uff0c\u5219\u8fd4\u56de None\u3002 14 cursor.fetchmany([size=cursor.arraysize]) \u8be5\u65b9\u6cd5\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u7684\u4e0b\u4e00\u884c\u7ec4\uff0c\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u3002\u5f53\u6ca1\u6709\u66f4\u591a\u7684\u53ef\u7528\u7684\u884c\u65f6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u5217\u8868\u3002\u8be5\u65b9\u6cd5\u5c1d\u8bd5\u83b7\u53d6\u7531 size \u53c2\u6570\u6307\u5b9a\u7684\u5c3d\u53ef\u80fd\u591a\u7684\u884c\u3002 15 cursor.fetchall() \u8be5\u4f8b\u7a0b\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u6240\u6709\uff08\u5269\u4f59\uff09\u7684\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u3002\u5f53\u6ca1\u6709\u53ef\u7528\u7684\u884c\u65f6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u5217\u8868\u3002 \u8fde\u63a5\u6570\u636e\u5e93 \u00b6 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u8fde\u63a5\u5230\u4e00\u4e2a\u73b0\u6709\u7684\u6570\u636e\u5e93\u3002\u5982\u679c\u6570\u636e\u5e93\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u88ab\u521b\u5efa\uff0c\u6700\u540e\u5c06\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u5e93\u5bf9\u8c61\u3002 #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) print \"Opened database successfully\" ; # import sqlite3 conn = sqlite3 . connect ( 'michael.db' ) print \"open database successfully\" \u5728\u8fd9\u91cc\uff0c\u60a8\u4e5f\u53ef\u4ee5\u628a\u6570\u636e\u5e93\u540d\u79f0\u590d\u5236\u4e3a\u7279\u5b9a\u7684\u540d\u79f0 :memory: \uff0c\u8fd9\u6837\u5c31\u4f1a\u5728 RAM \u4e2d\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u6765\u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u521b\u5efa\u6211\u4eec\u7684\u6570\u636e\u5e93 test.db \u3002\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6539\u53d8\u8def\u5f84\u3002\u4fdd\u5b58\u4e0a\u9762\u4ee3\u7801\u5230 sqlite.py \u6587\u4ef6\u4e2d\uff0c\u5e76\u6309\u5982\u4e0b\u6240\u793a\u6267\u884c\u3002\u5982\u679c\u6570\u636e\u5e93\u6210\u529f\u521b\u5efa\uff0c\u90a3\u4e48\u4f1a\u663e\u793a\u4e0b\u9762\u6240\u793a\u7684\u6d88\u606f\uff1a $chmod +x sqlite.py $./sqlite.py Open database successfully \u521b\u5efa\u8868 \u00b6 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u6bb5\u5c06\u7528\u4e8e\u5728\u5148\u524d\u521b\u5efa\u7684\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a\u8868\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) print \"Opened database successfully\" ; c = conn . cursor () c . execute ( '''CREATE TABLE COMPANY (ID INT PRIMARY KEY NOT NULL, NAME TEXT NOT NULL, AGE INT NOT NULL, ADDRESS CHAR(50), SALARY REAL);''' ) print \"Table created successfully\" ; conn . commit () conn . close () import sqlite3 conn = sqlite3 . connect ( 'michael.db' ) print \"OPEN database successfully\" c = conn . cursor () c . execute ( '''CREATE TABLE ACCOUNT (ID INT PRIMARY KEY NOT NULL, NAME TEXT NOT NULL, AGE INT NOT NULL, ADDRESS CHAR(50), SALARY REAL);''' ) print \"create table successfully\" conn . commit () conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u5728 test.db \u4e2d\u521b\u5efa COMPANY \u8868\uff0c\u5e76\u663e\u793a\u4e0b\u9762\u6240\u793a\u7684\u6d88\u606f\uff1a Opened database successfully Table created successfully INSERT \u64cd\u4f5c \u00b6 \u4e0b\u9762\u7684 Python \u7a0b\u5e8f\u663e\u793a\u4e86\u5982\u4f55\u5728\u4e0a\u9762\u521b\u5efa\u7684 COMPANY \u8868\u4e2d\u521b\u5efa\u8bb0\u5f55\uff1a ```python !/usr/bin/python \u00b6 import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() print \"Opened database successfully\" c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (1, 'Paul', 32, 'California', 20000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (2, 'Allen', 25, 'Texas', 15000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (3, 'Teddy', 23, 'Norway', 20000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (4, 'Mark', 25, 'Rich-Mond ', 65000.00 )\") conn.commit() print \"Records created successfully\"; conn.close() import sqlite3 conn = sqlite3.connect('michael.db') c = conn.cursor() print 'Open successfully' c.execute(\"INSERT INTO ACCOUNT (ID,NAME,AGE,ADDRESS,SALARY) VALUES(1, 'Mike', 32, NULL, 10000)\") conn.commit() conn.close() \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u5728 COMPANY \u8868\u4e2d\u521b\u5efa\u7ed9\u5b9a\u8bb0\u5f55\uff0c\u5e76\u4f1a\u663e\u793a\u4ee5\u4e0b\u4e24\u884c\uff1a Opened database successfully Records created successfully ## SELECT \u64cd\u4f5c \u4e0b\u9762\u7684 Python \u7a0b\u5e8f\u663e\u793a\u4e86\u5982\u4f55\u4ece\u524d\u9762\u521b\u5efa\u7684 COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u8bb0\u5f55\uff1a ```python #!/usr/bin/python import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() cursor = c.execute(\"SELECT id, name, address, salary from COMPANY\") for row in cursor: print \"ID = \", row[0] print \"NAME = \", row[1] print \"ADDRESS = \", row[2] print \"SALARY = \", row[3], \"\\n\" conn.close() import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() cursor = c.execute(\"SELECT id, name, address, salary from ACCOUNT\") for row in cursor: print row[0] print row[1] print row[2] print row[3] conn.close() \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully ID = 1 NAME = Paul ADDRESS = California SALARY = 20000 .0 ID = 2 NAME = Allen ADDRESS = Texas SALARY = 15000 .0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000 .0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000 .0 Operation done successfully UPDATE \u64cd\u4f5c \u00b6 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528 UPDATE \u8bed\u53e5\u6765\u66f4\u65b0\u4efb\u4f55\u8bb0\u5f55\uff0c\u7136\u540e\u4ece COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u66f4\u65b0\u7684\u8bb0\u5f55\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) c = conn . cursor () c . execute ( \"UPDATE COMPANY set SALARY = 25000.00 where ID=1\" ) conn . commit () cursor = conn . execute ( \"SELECT id, name, address, salary from COMPANY\" ) for row in cursor : print \"ID = \" , row [ 0 ] print \"NAME = \" , row [ 1 ] print \"ADDRESS = \" , row [ 2 ] print \"SALARY = \" , row [ 3 ], \" \\n \" conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully Total number of rows updated : 1 ID = 1 NAME = Paul ADDRESS = California SALARY = 25000.0 ID = 2 NAME = Allen ADDRESS = Texas SALARY = 15000.0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000.0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000.0 Operation done successfully DELETE \u64cd\u4f5c \u00b6 \u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528 DELETE \u8bed\u53e5\u5220\u9664\u4efb\u4f55\u8bb0\u5f55\uff0c\u7136\u540e\u4ece COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u5269\u4f59\u7684\u8bb0\u5f55\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) c = conn . cursor () c . execute ( \"DELETE from COMPANY where ID=2;\" ) conn . commit () print \"Total number of rows deleted :\" , conn . total_changes cursor = conn . execute ( \"SELECT id, name, address, salary from COMPANY\" ) for row in cursor : print \"ID = \" , row [ 0 ] print \"NAME = \" , row [ 1 ] print \"ADDRESS = \" , row [ 2 ] print \"SALARY = \" , row [ 3 ], \" \\n \" conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully Total number of rows deleted : 1 ID = 1 NAME = Paul ADDRESS = California SALARY = 20000.0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000.0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000.0 Operation done successfully","title":"SQLite-API-Python.md"},{"location":"sql/SQLite-API-Python/#sqlite-python","text":"","title":"SQLite - Python"},{"location":"sql/SQLite-API-Python/#_1","text":"SQLite3 \u53ef\u4f7f\u7528 sqlite3 \u6a21\u5757\u4e0e Python \u8fdb\u884c\u96c6\u6210\u3002sqlite3 \u6a21\u5757\u662f\u7531 Gerhard Haring \u7f16\u5199\u7684\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0e PEP 249 \u63cf\u8ff0\u7684 DB-API 2.0 \u89c4\u8303\u517c\u5bb9\u7684 SQL \u63a5\u53e3\u3002\u60a8\u4e0d\u9700\u8981\u5355\u72ec\u5b89\u88c5\u8be5\u6a21\u5757\uff0c\u56e0\u4e3a Python 2.5.x \u4ee5\u4e0a\u7248\u672c\u9ed8\u8ba4\u81ea\u5e26\u4e86\u8be5\u6a21\u5757\u3002 \u4e3a\u4e86\u4f7f\u7528 sqlite3 \u6a21\u5757\uff0c\u60a8\u9996\u5148\u5fc5\u987b\u521b\u5efa\u4e00\u4e2a\u8868\u793a\u6570\u636e\u5e93\u7684\u8fde\u63a5\u5bf9\u8c61\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u6709\u9009\u62e9\u5730\u521b\u5efa\u5149\u6807\u5bf9\u8c61\uff0c\u8fd9\u5c06\u5e2e\u52a9\u60a8\u6267\u884c\u6240\u6709\u7684 SQL \u8bed\u53e5\u3002","title":"\u5b89\u88c5"},{"location":"sql/SQLite-API-Python/#python-sqlite3-api","text":"\u4ee5\u4e0b\u662f\u91cd\u8981\u7684 sqlite3 \u6a21\u5757\u7a0b\u5e8f\uff0c\u53ef\u4ee5\u6ee1\u8db3\u60a8\u5728 Python \u7a0b\u5e8f\u4e2d\u4f7f\u7528 SQLite \u6570\u636e\u5e93\u7684\u9700\u6c42\u3002\u5982\u679c\u60a8\u9700\u8981\u4e86\u89e3\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u67e5\u770b Python sqlite3 \u6a21\u5757\u7684\u5b98\u65b9\u6587\u6863\u3002 \u5e8f\u53f7 API & \u63cf\u8ff0 1 sqlite3.connect(database [,timeout ,other optional arguments]) \u8be5 API \u6253\u5f00\u4e00\u4e2a\u5230 SQLite \u6570\u636e\u5e93\u6587\u4ef6 database \u7684\u94fe\u63a5\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 \":memory:\" \u6765\u5728 RAM \u4e2d\u6253\u5f00\u4e00\u4e2a\u5230 database \u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u800c\u4e0d\u662f\u5728\u78c1\u76d8\u4e0a\u6253\u5f00\u3002\u5982\u679c\u6570\u636e\u5e93\u6210\u529f\u6253\u5f00\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u8fde\u63a5\u5bf9\u8c61\u3002\u5f53\u4e00\u4e2a\u6570\u636e\u5e93\u88ab\u591a\u4e2a\u8fde\u63a5\u8bbf\u95ee\uff0c\u4e14\u5176\u4e2d\u4e00\u4e2a\u4fee\u6539\u4e86\u6570\u636e\u5e93\uff0c\u6b64\u65f6 SQLite \u6570\u636e\u5e93\u88ab\u9501\u5b9a\uff0c\u76f4\u5230\u4e8b\u52a1\u63d0\u4ea4\u3002timeout \u53c2\u6570\u8868\u793a\u8fde\u63a5\u7b49\u5f85\u9501\u5b9a\u7684\u6301\u7eed\u65f6\u95f4\uff0c\u76f4\u5230\u53d1\u751f\u5f02\u5e38\u65ad\u5f00\u8fde\u63a5\u3002timeout \u53c2\u6570\u9ed8\u8ba4\u662f 5.0\uff085 \u79d2\uff09\u3002\u5982\u679c\u7ed9\u5b9a\u7684\u6570\u636e\u5e93\u540d\u79f0 filename \u4e0d\u5b58\u5728\uff0c\u5219\u8be5\u8c03\u7528\u5c06\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u5982\u679c\u60a8\u4e0d\u60f3\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u521b\u5efa\u6570\u636e\u5e93\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u6307\u5b9a\u5e26\u6709\u8def\u5f84\u7684\u6587\u4ef6\u540d\uff0c\u8fd9\u6837\u60a8\u5c31\u80fd\u5728\u4efb\u610f\u5730\u65b9\u521b\u5efa\u6570\u636e\u5e93\u3002 2 connection.cursor([cursorClass]) \u8be5\u4f8b\u7a0b\u521b\u5efa\u4e00\u4e2a cursor \uff0c\u5c06\u5728 Python \u6570\u636e\u5e93\u7f16\u7a0b\u4e2d\u7528\u5230\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a\u5355\u4e00\u7684\u53ef\u9009\u7684\u53c2\u6570 cursorClass\u3002\u5982\u679c\u63d0\u4f9b\u4e86\u8be5\u53c2\u6570\uff0c\u5219\u5b83\u5fc5\u987b\u662f\u4e00\u4e2a\u6269\u5c55\u81ea sqlite3.Cursor \u7684\u81ea\u5b9a\u4e49\u7684 cursor \u7c7b\u3002 3 cursor.execute(sql [, optional parameters]) \u8be5\u4f8b\u7a0b\u6267\u884c\u4e00\u4e2a SQL \u8bed\u53e5\u3002\u8be5 SQL \u8bed\u53e5\u53ef\u4ee5\u88ab\u53c2\u6570\u5316\uff08\u5373\u4f7f\u7528\u5360\u4f4d\u7b26\u4ee3\u66ff SQL \u6587\u672c\uff09\u3002sqlite3 \u6a21\u5757\u652f\u6301\u4e24\u79cd\u7c7b\u578b\u7684\u5360\u4f4d\u7b26\uff1a\u95ee\u53f7\u548c\u547d\u540d\u5360\u4f4d\u7b26\uff08\u547d\u540d\u6837\u5f0f\uff09\u3002\u4f8b\u5982\uff1acursor.execute(\"insert into people values (?, ?)\", (who, age)) 4 connection.execute(sql [, optional parameters]) \u8be5\u4f8b\u7a0b\u662f\u4e0a\u9762\u6267\u884c\u7684\u7531\u5149\u6807\uff08cursor\uff09\u5bf9\u8c61\u63d0\u4f9b\u7684\u65b9\u6cd5\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u5b83\u901a\u8fc7\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u4e86\u4e00\u4e2a\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 execute \u65b9\u6cd5\u3002 5 cursor.executemany(sql, seq_of_parameters) \u8be5\u4f8b\u7a0b\u5bf9 seq_of_parameters \u4e2d\u7684\u6240\u6709\u53c2\u6570\u6216\u6620\u5c04\u6267\u884c\u4e00\u4e2a SQL \u547d\u4ee4\u3002 6 connection.executemany(sql[, parameters]) \u8be5\u4f8b\u7a0b\u662f\u4e00\u4e2a\u7531\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u7684\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 executemany \u65b9\u6cd5\u3002 7 cursor.executescript(sql_script) \u8be5\u4f8b\u7a0b\u4e00\u65e6\u63a5\u6536\u5230\u811a\u672c\uff0c\u4f1a\u6267\u884c\u591a\u4e2a SQL \u8bed\u53e5\u3002\u5b83\u9996\u5148\u6267\u884c COMMIT \u8bed\u53e5\uff0c\u7136\u540e\u6267\u884c\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u7684 SQL \u811a\u672c\u3002\u6240\u6709\u7684 SQL \u8bed\u53e5\u5e94\u8be5\u7528\u5206\u53f7\uff08;\uff09\u5206\u9694\u3002 8 connection.executescript(sql_script) \u8be5\u4f8b\u7a0b\u662f\u4e00\u4e2a\u7531\u8c03\u7528\u5149\u6807\uff08cursor\uff09\u65b9\u6cd5\u521b\u5efa\u7684\u4e2d\u95f4\u7684\u5149\u6807\u5bf9\u8c61\u7684\u5feb\u6377\u65b9\u5f0f\uff0c\u7136\u540e\u901a\u8fc7\u7ed9\u5b9a\u7684\u53c2\u6570\u8c03\u7528\u5149\u6807\u7684 executescript \u65b9\u6cd5\u3002 9 connection.total_changes() \u8be5\u4f8b\u7a0b\u8fd4\u56de\u81ea\u6570\u636e\u5e93\u8fde\u63a5\u6253\u5f00\u4ee5\u6765\u88ab\u4fee\u6539\u3001\u63d2\u5165\u6216\u5220\u9664\u7684\u6570\u636e\u5e93\u603b\u884c\u6570\u3002 10 connection.commit() \u8be5\u65b9\u6cd5\u63d0\u4ea4\u5f53\u524d\u7684\u4e8b\u52a1\u3002\u5982\u679c\u60a8\u672a\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u90a3\u4e48\u81ea\u60a8\u4e0a\u4e00\u6b21\u8c03\u7528 commit() \u4ee5\u6765\u6240\u505a\u7684\u4efb\u4f55\u52a8\u4f5c\u5bf9\u5176\u4ed6\u6570\u636e\u5e93\u8fde\u63a5\u6765\u8bf4\u662f\u4e0d\u53ef\u89c1\u7684\u3002 11 connection.rollback() \u8be5\u65b9\u6cd5\u56de\u6eda\u81ea\u4e0a\u4e00\u6b21\u8c03\u7528 commit() \u4ee5\u6765\u5bf9\u6570\u636e\u5e93\u6240\u505a\u7684\u66f4\u6539\u3002 12 connection.close() \u8be5\u65b9\u6cd5\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\u3002\u8bf7\u6ce8\u610f\uff0c\u8fd9\u4e0d\u4f1a\u81ea\u52a8\u8c03\u7528 commit()\u3002\u5982\u679c\u60a8\u4e4b\u524d\u672a\u8c03\u7528 commit() \u65b9\u6cd5\uff0c\u5c31\u76f4\u63a5\u5173\u95ed\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u60a8\u6240\u505a\u7684\u6240\u6709\u66f4\u6539\u5c06\u5168\u90e8\u4e22\u5931\uff01 13 cursor.fetchone() \u8be5\u65b9\u6cd5\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u7684\u4e0b\u4e00\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5355\u4e00\u7684\u5e8f\u5217\uff0c\u5f53\u6ca1\u6709\u66f4\u591a\u53ef\u7528\u7684\u6570\u636e\u65f6\uff0c\u5219\u8fd4\u56de None\u3002 14 cursor.fetchmany([size=cursor.arraysize]) \u8be5\u65b9\u6cd5\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u7684\u4e0b\u4e00\u884c\u7ec4\uff0c\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u3002\u5f53\u6ca1\u6709\u66f4\u591a\u7684\u53ef\u7528\u7684\u884c\u65f6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u5217\u8868\u3002\u8be5\u65b9\u6cd5\u5c1d\u8bd5\u83b7\u53d6\u7531 size \u53c2\u6570\u6307\u5b9a\u7684\u5c3d\u53ef\u80fd\u591a\u7684\u884c\u3002 15 cursor.fetchall() \u8be5\u4f8b\u7a0b\u83b7\u53d6\u67e5\u8be2\u7ed3\u679c\u96c6\u4e2d\u6240\u6709\uff08\u5269\u4f59\uff09\u7684\u884c\uff0c\u8fd4\u56de\u4e00\u4e2a\u5217\u8868\u3002\u5f53\u6ca1\u6709\u53ef\u7528\u7684\u884c\u65f6\uff0c\u5219\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u5217\u8868\u3002","title":"Python sqlite3 \u6a21\u5757 API"},{"location":"sql/SQLite-API-Python/#_2","text":"\u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u8fde\u63a5\u5230\u4e00\u4e2a\u73b0\u6709\u7684\u6570\u636e\u5e93\u3002\u5982\u679c\u6570\u636e\u5e93\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u5b83\u5c31\u4f1a\u88ab\u521b\u5efa\uff0c\u6700\u540e\u5c06\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u5e93\u5bf9\u8c61\u3002 #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) print \"Opened database successfully\" ; # import sqlite3 conn = sqlite3 . connect ( 'michael.db' ) print \"open database successfully\" \u5728\u8fd9\u91cc\uff0c\u60a8\u4e5f\u53ef\u4ee5\u628a\u6570\u636e\u5e93\u540d\u79f0\u590d\u5236\u4e3a\u7279\u5b9a\u7684\u540d\u79f0 :memory: \uff0c\u8fd9\u6837\u5c31\u4f1a\u5728 RAM \u4e2d\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u73b0\u5728\uff0c\u8ba9\u6211\u4eec\u6765\u8fd0\u884c\u4e0a\u9762\u7684\u7a0b\u5e8f\uff0c\u5728\u5f53\u524d\u76ee\u5f55\u4e2d\u521b\u5efa\u6211\u4eec\u7684\u6570\u636e\u5e93 test.db \u3002\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6539\u53d8\u8def\u5f84\u3002\u4fdd\u5b58\u4e0a\u9762\u4ee3\u7801\u5230 sqlite.py \u6587\u4ef6\u4e2d\uff0c\u5e76\u6309\u5982\u4e0b\u6240\u793a\u6267\u884c\u3002\u5982\u679c\u6570\u636e\u5e93\u6210\u529f\u521b\u5efa\uff0c\u90a3\u4e48\u4f1a\u663e\u793a\u4e0b\u9762\u6240\u793a\u7684\u6d88\u606f\uff1a $chmod +x sqlite.py $./sqlite.py Open database successfully","title":"\u8fde\u63a5\u6570\u636e\u5e93"},{"location":"sql/SQLite-API-Python/#_3","text":"\u4e0b\u9762\u7684 Python \u4ee3\u7801\u6bb5\u5c06\u7528\u4e8e\u5728\u5148\u524d\u521b\u5efa\u7684\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u4e00\u4e2a\u8868\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) print \"Opened database successfully\" ; c = conn . cursor () c . execute ( '''CREATE TABLE COMPANY (ID INT PRIMARY KEY NOT NULL, NAME TEXT NOT NULL, AGE INT NOT NULL, ADDRESS CHAR(50), SALARY REAL);''' ) print \"Table created successfully\" ; conn . commit () conn . close () import sqlite3 conn = sqlite3 . connect ( 'michael.db' ) print \"OPEN database successfully\" c = conn . cursor () c . execute ( '''CREATE TABLE ACCOUNT (ID INT PRIMARY KEY NOT NULL, NAME TEXT NOT NULL, AGE INT NOT NULL, ADDRESS CHAR(50), SALARY REAL);''' ) print \"create table successfully\" conn . commit () conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u5728 test.db \u4e2d\u521b\u5efa COMPANY \u8868\uff0c\u5e76\u663e\u793a\u4e0b\u9762\u6240\u793a\u7684\u6d88\u606f\uff1a Opened database successfully Table created successfully","title":"\u521b\u5efa\u8868"},{"location":"sql/SQLite-API-Python/#insert","text":"\u4e0b\u9762\u7684 Python \u7a0b\u5e8f\u663e\u793a\u4e86\u5982\u4f55\u5728\u4e0a\u9762\u521b\u5efa\u7684 COMPANY \u8868\u4e2d\u521b\u5efa\u8bb0\u5f55\uff1a ```python","title":"INSERT \u64cd\u4f5c"},{"location":"sql/SQLite-API-Python/#usrbinpython","text":"import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() print \"Opened database successfully\" c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (1, 'Paul', 32, 'California', 20000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (2, 'Allen', 25, 'Texas', 15000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (3, 'Teddy', 23, 'Norway', 20000.00 )\") c.execute(\"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \\ VALUES (4, 'Mark', 25, 'Rich-Mond ', 65000.00 )\") conn.commit() print \"Records created successfully\"; conn.close() import sqlite3 conn = sqlite3.connect('michael.db') c = conn.cursor() print 'Open successfully' c.execute(\"INSERT INTO ACCOUNT (ID,NAME,AGE,ADDRESS,SALARY) VALUES(1, 'Mike', 32, NULL, 10000)\") conn.commit() conn.close() \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u5728 COMPANY \u8868\u4e2d\u521b\u5efa\u7ed9\u5b9a\u8bb0\u5f55\uff0c\u5e76\u4f1a\u663e\u793a\u4ee5\u4e0b\u4e24\u884c\uff1a Opened database successfully Records created successfully ## SELECT \u64cd\u4f5c \u4e0b\u9762\u7684 Python \u7a0b\u5e8f\u663e\u793a\u4e86\u5982\u4f55\u4ece\u524d\u9762\u521b\u5efa\u7684 COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u8bb0\u5f55\uff1a ```python #!/usr/bin/python import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() cursor = c.execute(\"SELECT id, name, address, salary from COMPANY\") for row in cursor: print \"ID = \", row[0] print \"NAME = \", row[1] print \"ADDRESS = \", row[2] print \"SALARY = \", row[3], \"\\n\" conn.close() import sqlite3 conn = sqlite3.connect('test.db') c = conn.cursor() cursor = c.execute(\"SELECT id, name, address, salary from ACCOUNT\") for row in cursor: print row[0] print row[1] print row[2] print row[3] conn.close() \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully ID = 1 NAME = Paul ADDRESS = California SALARY = 20000 .0 ID = 2 NAME = Allen ADDRESS = Texas SALARY = 15000 .0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000 .0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000 .0 Operation done successfully","title":"!/usr/bin/python"},{"location":"sql/SQLite-API-Python/#update","text":"\u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528 UPDATE \u8bed\u53e5\u6765\u66f4\u65b0\u4efb\u4f55\u8bb0\u5f55\uff0c\u7136\u540e\u4ece COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u66f4\u65b0\u7684\u8bb0\u5f55\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) c = conn . cursor () c . execute ( \"UPDATE COMPANY set SALARY = 25000.00 where ID=1\" ) conn . commit () cursor = conn . execute ( \"SELECT id, name, address, salary from COMPANY\" ) for row in cursor : print \"ID = \" , row [ 0 ] print \"NAME = \" , row [ 1 ] print \"ADDRESS = \" , row [ 2 ] print \"SALARY = \" , row [ 3 ], \" \\n \" conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully Total number of rows updated : 1 ID = 1 NAME = Paul ADDRESS = California SALARY = 25000.0 ID = 2 NAME = Allen ADDRESS = Texas SALARY = 15000.0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000.0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000.0 Operation done successfully","title":"UPDATE \u64cd\u4f5c"},{"location":"sql/SQLite-API-Python/#delete","text":"\u4e0b\u9762\u7684 Python \u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4f7f\u7528 DELETE \u8bed\u53e5\u5220\u9664\u4efb\u4f55\u8bb0\u5f55\uff0c\u7136\u540e\u4ece COMPANY \u8868\u4e2d\u83b7\u53d6\u5e76\u663e\u793a\u5269\u4f59\u7684\u8bb0\u5f55\uff1a #!/usr/bin/python import sqlite3 conn = sqlite3 . connect ( 'test.db' ) c = conn . cursor () c . execute ( \"DELETE from COMPANY where ID=2;\" ) conn . commit () print \"Total number of rows deleted :\" , conn . total_changes cursor = conn . execute ( \"SELECT id, name, address, salary from COMPANY\" ) for row in cursor : print \"ID = \" , row [ 0 ] print \"NAME = \" , row [ 1 ] print \"ADDRESS = \" , row [ 2 ] print \"SALARY = \" , row [ 3 ], \" \\n \" conn . close () \u4e0a\u8ff0\u7a0b\u5e8f\u6267\u884c\u65f6\uff0c\u5b83\u4f1a\u4ea7\u751f\u4ee5\u4e0b\u7ed3\u679c\uff1a Opened database successfully Total number of rows deleted : 1 ID = 1 NAME = Paul ADDRESS = California SALARY = 20000.0 ID = 3 NAME = Teddy ADDRESS = Norway SALARY = 20000.0 ID = 4 NAME = Mark ADDRESS = Rich-Mond SALARY = 65000.0 Operation done successfully","title":"DELETE \u64cd\u4f5c"},{"location":"sql/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E5%BF%B5/","text":"\u6570\u636e\u5e93\u6982\u5ff5\u5165\u95e8 \u00b6 \u6570\u636e\u5e93 \u00b6 \u4ece\u73b0\u5b9e\u95ee\u9898\u4e2d\u62bd\u8c61\u603b\u7ed3\u51fa\u7684\u6570\u636e\u5e93\u3002 1\u3001\u73b0\u5b9e\u95ee\u9898\u4e2d\u7684\u6570\u636e\u5173\u7cfb 2\u3001\u73b0\u5b9e\u95ee\u9898\u4e2d\u7684\u6570\u636e\u5173\u7cfb\u8f6c\u5316\u6210\u6570\u636e\u5e93\uff08\u91cd\u70b9\uff09 3\u3001\u6570\u636e\u5e93\uff1a\u6309\u7167\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\uff0c\u5b58\u50a8\u548c\u7ba1\u7406\u6570\u636e\u7684\u4ed3\u5e93\uff1b\u5b58\u50a8\u5728\u672c\u5730\u6216\u8005\u7f51\u7edc\u7684\u7ed3\u6784\u5316\u7684\u8868\u683c\u3002 4\u3001\u6570\u636e\u5e93\u8f6c\u5316\uff08\u589e\u5220\u6539\u67e5\uff09\u589e\u52a0create\u3001\u5220\u9664delete\u3001\u6539\u53d8update\u3001\u67e5\u627eretrieve search 5\u3001\u6570\u636e\u5e93\u6570\u636e\u89e3\u51b3\u73b0\u5b9e\u95ee\u9898 \u7ed3\u6784\u5316\u6570\u636e\u5e93\u5206\u4e3a\u4e09\u90e8\u5206\uff08\u7c7b\u4f3c\u4e8eexcel\u8868\u683c\uff09\uff1a\u8868\u540d\u3001\u5b57\u6bb5\uff08\u8868\u5934\uff09\u3001\u7d22\u5f15\uff08\u53d8\u91cf\uff09\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u636e\u8868\u662f\u4e00\u4e2a\u4e8c\u7ef4\u8868\u683c\u3002 \u73b0\u5b9e\u95ee\u9898\u5bf9\u5e94\u5173\u7cfb\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\uff1a 1\u3001\u4e00\u5bf9\u4e00\uff1a\u67d0\u7528\u6237\u5bf9\u5e94\u67d0\u4e00\u4e2a\u8d2d\u7269\u8f66\uff1b 2\u3001\u4e00\u5bf9\u591a\uff1a\uff08\u67d0\u5546\u54c1\u5177\u6709\u591a\u79cd\u5c5e\u6027\uff1a\u4ef7\u683c\u3001\u5e93\u5b58\uff09\u4e00\u4e2a\u5de5\u5382\u5177\u6709\u591a\u4e2a\u5458\u5de5\uff1b \u5de5\u5382\u8868 \u7f16\u53f7-\u4e3b\u952e \u5de5\u5382\u540d 1 \u767e\u5ea6 2 \u65b0\u6d6a \u804c\u5de5\u8868 \u59d3\u540d \u5f15\u7528-\u5916\u952e \u674e\u654f 1 \u5f20\u534e 1 3\u3001\u591a\u5bf9\u591a\uff1a\u4e0d\u540c\u5e97\u94fa\u5177\u6709\u4e0d\u540c\u7684\u5546\u54c1\uff1b \u804c\u5de5\u8868 \u4e3b\u952e \u59d3\u540d 1 \u5f20\u4e09 2 \u674e\u56db 3 \u738b\u4e94 \u4ea7\u54c1\u8868 \u4e3b\u952e \u578b\u53f7 1 \u534e\u4e3a6 2 \u534e\u4e3a8 \u751f\u4ea7\u8bb0\u5f55\u8868 \u4e3b\u952e\uff08\u751f\u4ea7\u8bb0\u5f55\u8868\uff09 \u5916\u952e1\uff08=>\u804c\u5de5\u8868\uff09 \u5916\u952e3\uff08=>\u4ea7\u54c1\u8868\uff09 \u751f\u4ea7\u65e5\u671f 1 1 1 1.1 2 2 1 1.2 3 3 2 1.3 \u5f20\u4e09\u548c\u674e\u56db\u751f\u4ea7\u4e86\u534e\u4e3a6\uff1b\u738b\u4e94\u751f\u4ea7\u4e86\u534e\u4e3a8\uff1b\u751f\u4ea7\u65e5\u671f\u662f\u8fd9\u4e2a\u8868\u7684\u5c5e\u6027\uff1b \u4ece\u5b9e\u9645\u590d\u6742\u95ee\u9898=>\u5b9e\u9645\u7b80\u5355\u95ee\u9898=>\u6d41\u7a0b\u56fe=>\u6570\u636e\u5e93\uff08\u5b57\u6bb5\uff09 \u4e0a\u9762\u7684\u6570\u636e\u5e93\u5c31\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08\u4e09\u79cd\u5bf9\u5e94\u7c7b\u578b\uff09 \u8bbe\u8ba1\u539f\u578b-\u6570\u636e\u5e93\u5efa\u6a21-\u7f16\u5199\u540e\u53f0\u7a0b\u5e8f \u5728\u6570\u636e\u5e93\u4e2d\uff0c\u4e0d\u540c\u7684\u5bf9\u8c61\u5b58\u5728\u5173\u7cfb\uff1a\u4e00\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u8868\u53ef\u4ee5\u8868\u793a\uff08\u4e00\u5bf9\u591a\u589e\u52a0\u4e3b\u952e\uff09\uff1b\u591a\u5bf9\u591a\u7684\u60c5\u51b5\uff0c\u9700\u8981\u901a\u8fc7\u4e2d\u95f4\u5173\u7cfb\u8868\u8fdb\u884c\u94fe\u63a5\uff1a\u4e00\u4e2a\u4e3b\u952e\u5bf9\u5e94\u4e0d\u540c\u7684\u5916\u952e\uff1b\u9ed8\u8ba4\u4e24\u4e2a\u5b58\u5728\u591a\u5bf9\u591a\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u53d8\u91cf\uff0c\u8f6c\u5316\u6210\u82e5\u5e72\u4e2a\u4e00\u5bf9\u4e00\u7684\u5bf9\u5e94\u5173\u7cfb\uff1b \u6570\u636e\u5e93\u7684\u67e5\u8be2\u65b9\u6cd5\uff1a\u8f6c\u5316\u6210\u6570\u636e\u5e93\u7684\u6392\u5e8f\uff1b\u5bf9\u4e8e\u67d0\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u8fdb\u884c\u6392\u5e8f\uff1b\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u5c31\u662f\u53ef\u4ee5\u8fdb\u884c\u67e5\u8be2\uff1b\u6392\u5e8f\u7684\u591a\u79cd\u65b9\u6cd5\uff1b \u6848\u4f8b \u00b6 \u4e00\u4e2a\u7b80\u5355\u8d2d\u7269\u7f51\u7ad9\u7684\u6570\u636e\u5e93\u8bbe\u8ba1 1\u3001\u754c\u9762\u8bbe\u8ba1\uff1a \u4e70\u5bb6\u754c\u9762\uff1a\u7528\u6237\u6ce8\u518c\uff08\u5f39\u7a97\uff09\u3001\u7528\u6237\u767b\u5f55\uff08\u5f39\u7a97\uff09\u3001\u5546\u54c1\u5c55\u793a\u754c\u9762\uff08\u4e3b\u9875\uff09\u3001\u8d2d\u7269\u8f66\u754c\u9762\uff08\u4e3b\u9875\uff09\u3001\u8d2d\u4e70\u754c\u9762\uff08\u6b21\u7ea7\u4e3b\u9875\uff09\u3001\u8ba2\u5355\u754c\u9762\uff08\u6b21\u7ea7\u4e3b\u9875\uff09\u3001\u652f\u4ed8\u754c\u9762\uff08\u7b2c\u4e09\u65b9\u8df3\u8f6c\uff09\u3002 \u5356\u5bb6\u754c\u9762\uff1a\u5356\u5bb6\u6ce8\u518c\u3001\u5356\u5bb6\u767b\u5f55\u3001\u5546\u54c1\u4e0a\u67b6\u754c\u9762\u3001\u5546\u54c1\u5e93\u5b58\u72b6\u6001\u3001\u5546\u5e97\u5e03\u7f6e\u3001\u7edf\u8ba1\u754c\u9762\u3002 2\u3001\u6570\u636e\u5206\u6790 \u4e70\u5bb6\u7aef\uff1a\u4e70\u5bb6\uff08\u59d3\u540d\u7535\u8bdd\uff09\u5546\u54c1\uff08\u4ef7\u683c\u540d\u79f0\uff09\u8d2d\u7269\u8f66\u3001\u8ba2\u5355\u7b49\u8868 \u5356\u5bb6\u7aef\uff1a\u5356\u5bb6\u4fe1\u606f\u3001\u5546\u54c1\u4e0a\u67b6\u4fe1\u606f\uff1b \u6700\u590d\u6742\u7684\u8868\uff08\u8d2d\u7269\u8f66\u8868\u548c\u5546\u54c1\u8868\u7684\u5173\u7cfb\uff09 1.\u4e70\u5bb6\u8868 \u4e3b\u952e \u59d3\u540d \u5bc6\u7801 \u5730\u5740 \u7535\u8bdd 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 2.\u5356\u5bb6\u8868 \u4e3b\u952e \u59d3\u540d \u5bc6\u7801 \u5730\u5740 \u7535\u8bdd 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 3.\u5546\u54c1\u8868 \u4e3b\u952e \u5546\u54c1\u540d\u79f0 \u4ef7\u683c \u5e93\u5b58 \u5356\u5bb6\u4e3b\u952e\uff082\uff09 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 4.\u8ba2\u5355\u8868 \u4e3b\u952e \u5546\u54c1\u4e3b\u952e\uff083\uff09 \u5355\u4ef7 \u6570\u91cf \u4e70\u5bb6\u4e3b\u952e\uff081\uff09 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 5.\u8d2d\u7269\u8f66\u8868 \u4e3b\u952e \u4e70\u5bb6\u4e3b\u952e\uff081\uff09 \u5546\u54c1\u4e3b\u952e\uff083\uff09 \u6570\u91cf \u603b\u4ef7 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u603b\u7ed3\uff1a\u6570\u636e\u53ef\u662f\u5b58\u50a8\u7ed3\u6784\u5316\u8868\u683c\u6570\u636e\u7684\u4ed3\u5e93\uff0c\u7531\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884cCURD\u64cd\u4f5c\uff0c\u4ece\u800c\u5b9e\u73b0\u8bb0\u5f55\u7684\u76ee\u7684\uff0c\u5b8c\u6210\u6570\u636e\u63d0\u53d6\u548c\u5206\u6790\u7684\u4efb\u52a1\u3002","title":"\u6570\u636e\u5e93\u6982\u5ff5.md"},{"location":"sql/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E5%BF%B5/#_1","text":"","title":"\u6570\u636e\u5e93\u6982\u5ff5\u5165\u95e8"},{"location":"sql/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E5%BF%B5/#_2","text":"\u4ece\u73b0\u5b9e\u95ee\u9898\u4e2d\u62bd\u8c61\u603b\u7ed3\u51fa\u7684\u6570\u636e\u5e93\u3002 1\u3001\u73b0\u5b9e\u95ee\u9898\u4e2d\u7684\u6570\u636e\u5173\u7cfb 2\u3001\u73b0\u5b9e\u95ee\u9898\u4e2d\u7684\u6570\u636e\u5173\u7cfb\u8f6c\u5316\u6210\u6570\u636e\u5e93\uff08\u91cd\u70b9\uff09 3\u3001\u6570\u636e\u5e93\uff1a\u6309\u7167\u6570\u636e\u7ed3\u6784\u6765\u7ec4\u7ec7\uff0c\u5b58\u50a8\u548c\u7ba1\u7406\u6570\u636e\u7684\u4ed3\u5e93\uff1b\u5b58\u50a8\u5728\u672c\u5730\u6216\u8005\u7f51\u7edc\u7684\u7ed3\u6784\u5316\u7684\u8868\u683c\u3002 4\u3001\u6570\u636e\u5e93\u8f6c\u5316\uff08\u589e\u5220\u6539\u67e5\uff09\u589e\u52a0create\u3001\u5220\u9664delete\u3001\u6539\u53d8update\u3001\u67e5\u627eretrieve search 5\u3001\u6570\u636e\u5e93\u6570\u636e\u89e3\u51b3\u73b0\u5b9e\u95ee\u9898 \u7ed3\u6784\u5316\u6570\u636e\u5e93\u5206\u4e3a\u4e09\u90e8\u5206\uff08\u7c7b\u4f3c\u4e8eexcel\u8868\u683c\uff09\uff1a\u8868\u540d\u3001\u5b57\u6bb5\uff08\u8868\u5934\uff09\u3001\u7d22\u5f15\uff08\u53d8\u91cf\uff09\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u636e\u8868\u662f\u4e00\u4e2a\u4e8c\u7ef4\u8868\u683c\u3002 \u73b0\u5b9e\u95ee\u9898\u5bf9\u5e94\u5173\u7cfb\u5206\u4e3a\u4e09\u79cd\u60c5\u51b5\uff1a 1\u3001\u4e00\u5bf9\u4e00\uff1a\u67d0\u7528\u6237\u5bf9\u5e94\u67d0\u4e00\u4e2a\u8d2d\u7269\u8f66\uff1b 2\u3001\u4e00\u5bf9\u591a\uff1a\uff08\u67d0\u5546\u54c1\u5177\u6709\u591a\u79cd\u5c5e\u6027\uff1a\u4ef7\u683c\u3001\u5e93\u5b58\uff09\u4e00\u4e2a\u5de5\u5382\u5177\u6709\u591a\u4e2a\u5458\u5de5\uff1b \u5de5\u5382\u8868 \u7f16\u53f7-\u4e3b\u952e \u5de5\u5382\u540d 1 \u767e\u5ea6 2 \u65b0\u6d6a \u804c\u5de5\u8868 \u59d3\u540d \u5f15\u7528-\u5916\u952e \u674e\u654f 1 \u5f20\u534e 1 3\u3001\u591a\u5bf9\u591a\uff1a\u4e0d\u540c\u5e97\u94fa\u5177\u6709\u4e0d\u540c\u7684\u5546\u54c1\uff1b \u804c\u5de5\u8868 \u4e3b\u952e \u59d3\u540d 1 \u5f20\u4e09 2 \u674e\u56db 3 \u738b\u4e94 \u4ea7\u54c1\u8868 \u4e3b\u952e \u578b\u53f7 1 \u534e\u4e3a6 2 \u534e\u4e3a8 \u751f\u4ea7\u8bb0\u5f55\u8868 \u4e3b\u952e\uff08\u751f\u4ea7\u8bb0\u5f55\u8868\uff09 \u5916\u952e1\uff08=>\u804c\u5de5\u8868\uff09 \u5916\u952e3\uff08=>\u4ea7\u54c1\u8868\uff09 \u751f\u4ea7\u65e5\u671f 1 1 1 1.1 2 2 1 1.2 3 3 2 1.3 \u5f20\u4e09\u548c\u674e\u56db\u751f\u4ea7\u4e86\u534e\u4e3a6\uff1b\u738b\u4e94\u751f\u4ea7\u4e86\u534e\u4e3a8\uff1b\u751f\u4ea7\u65e5\u671f\u662f\u8fd9\u4e2a\u8868\u7684\u5c5e\u6027\uff1b \u4ece\u5b9e\u9645\u590d\u6742\u95ee\u9898=>\u5b9e\u9645\u7b80\u5355\u95ee\u9898=>\u6d41\u7a0b\u56fe=>\u6570\u636e\u5e93\uff08\u5b57\u6bb5\uff09 \u4e0a\u9762\u7684\u6570\u636e\u5e93\u5c31\u662f\u5173\u7cfb\u578b\u6570\u636e\u5e93\uff08\u4e09\u79cd\u5bf9\u5e94\u7c7b\u578b\uff09 \u8bbe\u8ba1\u539f\u578b-\u6570\u636e\u5e93\u5efa\u6a21-\u7f16\u5199\u540e\u53f0\u7a0b\u5e8f \u5728\u6570\u636e\u5e93\u4e2d\uff0c\u4e0d\u540c\u7684\u5bf9\u8c61\u5b58\u5728\u5173\u7cfb\uff1a\u4e00\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a\u7684\u60c5\u51b5\uff0c\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a\u8868\u53ef\u4ee5\u8868\u793a\uff08\u4e00\u5bf9\u591a\u589e\u52a0\u4e3b\u952e\uff09\uff1b\u591a\u5bf9\u591a\u7684\u60c5\u51b5\uff0c\u9700\u8981\u901a\u8fc7\u4e2d\u95f4\u5173\u7cfb\u8868\u8fdb\u884c\u94fe\u63a5\uff1a\u4e00\u4e2a\u4e3b\u952e\u5bf9\u5e94\u4e0d\u540c\u7684\u5916\u952e\uff1b\u9ed8\u8ba4\u4e24\u4e2a\u5b58\u5728\u591a\u5bf9\u591a\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u53d8\u91cf\uff0c\u8f6c\u5316\u6210\u82e5\u5e72\u4e2a\u4e00\u5bf9\u4e00\u7684\u5bf9\u5e94\u5173\u7cfb\uff1b \u6570\u636e\u5e93\u7684\u67e5\u8be2\u65b9\u6cd5\uff1a\u8f6c\u5316\u6210\u6570\u636e\u5e93\u7684\u6392\u5e8f\uff1b\u5bf9\u4e8e\u67d0\u4e2a\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u8fdb\u884c\u6392\u5e8f\uff1b\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u5c31\u662f\u53ef\u4ee5\u8fdb\u884c\u67e5\u8be2\uff1b\u6392\u5e8f\u7684\u591a\u79cd\u65b9\u6cd5\uff1b","title":"\u6570\u636e\u5e93"},{"location":"sql/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A6%82%E5%BF%B5/#_3","text":"\u4e00\u4e2a\u7b80\u5355\u8d2d\u7269\u7f51\u7ad9\u7684\u6570\u636e\u5e93\u8bbe\u8ba1 1\u3001\u754c\u9762\u8bbe\u8ba1\uff1a \u4e70\u5bb6\u754c\u9762\uff1a\u7528\u6237\u6ce8\u518c\uff08\u5f39\u7a97\uff09\u3001\u7528\u6237\u767b\u5f55\uff08\u5f39\u7a97\uff09\u3001\u5546\u54c1\u5c55\u793a\u754c\u9762\uff08\u4e3b\u9875\uff09\u3001\u8d2d\u7269\u8f66\u754c\u9762\uff08\u4e3b\u9875\uff09\u3001\u8d2d\u4e70\u754c\u9762\uff08\u6b21\u7ea7\u4e3b\u9875\uff09\u3001\u8ba2\u5355\u754c\u9762\uff08\u6b21\u7ea7\u4e3b\u9875\uff09\u3001\u652f\u4ed8\u754c\u9762\uff08\u7b2c\u4e09\u65b9\u8df3\u8f6c\uff09\u3002 \u5356\u5bb6\u754c\u9762\uff1a\u5356\u5bb6\u6ce8\u518c\u3001\u5356\u5bb6\u767b\u5f55\u3001\u5546\u54c1\u4e0a\u67b6\u754c\u9762\u3001\u5546\u54c1\u5e93\u5b58\u72b6\u6001\u3001\u5546\u5e97\u5e03\u7f6e\u3001\u7edf\u8ba1\u754c\u9762\u3002 2\u3001\u6570\u636e\u5206\u6790 \u4e70\u5bb6\u7aef\uff1a\u4e70\u5bb6\uff08\u59d3\u540d\u7535\u8bdd\uff09\u5546\u54c1\uff08\u4ef7\u683c\u540d\u79f0\uff09\u8d2d\u7269\u8f66\u3001\u8ba2\u5355\u7b49\u8868 \u5356\u5bb6\u7aef\uff1a\u5356\u5bb6\u4fe1\u606f\u3001\u5546\u54c1\u4e0a\u67b6\u4fe1\u606f\uff1b \u6700\u590d\u6742\u7684\u8868\uff08\u8d2d\u7269\u8f66\u8868\u548c\u5546\u54c1\u8868\u7684\u5173\u7cfb\uff09 1.\u4e70\u5bb6\u8868 \u4e3b\u952e \u59d3\u540d \u5bc6\u7801 \u5730\u5740 \u7535\u8bdd 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 2.\u5356\u5bb6\u8868 \u4e3b\u952e \u59d3\u540d \u5bc6\u7801 \u5730\u5740 \u7535\u8bdd 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 3.\u5546\u54c1\u8868 \u4e3b\u952e \u5546\u54c1\u540d\u79f0 \u4ef7\u683c \u5e93\u5b58 \u5356\u5bb6\u4e3b\u952e\uff082\uff09 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 4.\u8ba2\u5355\u8868 \u4e3b\u952e \u5546\u54c1\u4e3b\u952e\uff083\uff09 \u5355\u4ef7 \u6570\u91cf \u4e70\u5bb6\u4e3b\u952e\uff081\uff09 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 5.\u8d2d\u7269\u8f66\u8868 \u4e3b\u952e \u4e70\u5bb6\u4e3b\u952e\uff081\uff09 \u5546\u54c1\u4e3b\u952e\uff083\uff09 \u6570\u91cf \u603b\u4ef7 1 \u3002\u3002\u3002 \u3002\u3002\u3002 \u3002\u3002\u3002 \u603b\u7ed3\uff1a\u6570\u636e\u53ef\u662f\u5b58\u50a8\u7ed3\u6784\u5316\u8868\u683c\u6570\u636e\u7684\u4ed3\u5e93\uff0c\u7531\u7f16\u7a0b\u8bed\u8a00\u8fdb\u884cCURD\u64cd\u4f5c\uff0c\u4ece\u800c\u5b9e\u73b0\u8bb0\u5f55\u7684\u76ee\u7684\uff0c\u5b8c\u6210\u6570\u636e\u63d0\u53d6\u548c\u5206\u6790\u7684\u4efb\u52a1\u3002","title":"\u6848\u4f8b"},{"location":"sql/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/","text":"\u5982\u4f55\u81ea\u5b66MySQL\u6570\u636e\u5e93 \u00b6 MySQL\u77e5\u8bc6\u4f53\u7cfb \u00b6 \u57fa\u7840\uff1a sql\u8bed\u53e5 \u8868\u7ed3\u6784\u8bbe\u8ba1 \u8c03\u4f18\uff1a \u7d22\u5f15\u3001\u6162\u67e5\u8be2\u4f18\u5316 \u914d\u7f6e\u53c2\u6570\u8c03\u4f18 \u6838\u5fc3\u539f\u7406\uff1a InnoDb\u5b58\u50a8\u5f15\u64ce \uff08\u5305\u62ec\u9694\u79bb\u7ea7\u522b\u3001\u4e8b\u52a1\u3001\u9501\u3001\u7f13\u5b58\u6c60\u3001\u56de\u6eda\u65e5\u5fd7\u7b49\u7b49\uff09 Mysqld (\u5305\u62ec\u8fde\u63a5\u7ba1\u7406\u3001\u8fdb\u7a0b\u7ba1\u7406\u3001\u67e5\u8be2\u7f13\u5b58\u3001\u67e5\u8be2\u4f18\u5316\u3001\u65e5\u5fd7\u7b49\u7b49) \u67b6\u6784\u4e0e\u8fd0\u7ef4\uff1a \u7528\u6237\u4e0e\u6743\u9650\u3001\u5b89\u5168 \u5907\u4efd\u4e0e\u6062\u590d \u65e5\u5fd7 \u5206\u5e03\u5f0f\u4e0e\u9ad8\u53ef\u7528 MySQL\u96f6\u57fa\u7840\u56fe\u89e3 \u00b6 \u9996\u5148\uff0c\u5b66\u4e60\u57fa\u672c\u7684SQL\u8bed\u6cd5\u3002\u4f60\u5c31\u53ef\u4ee5\u7f16\u5199SQL\u8bed\u53e5\u4e86\u3002\u63a8\u8350\uff1aW3Schools\u7684 SQL \u6559\u7a0b \u3002 \u5176\u6b21\uff0c\u5b66\u4e60\u6570\u636e\u5e93\u7684\u4e3b\u8981\u529f\u80fd\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u6bd4\u5982\u7528\u6237\u76f8\u5173\u6216\u8005\u6743\u9650\u76f8\u5173\u7b49\u7b49\u3002 \u6211\u63a8\u8350\u4e24\u672c\u4e66\uff1a \u4e00\u3001\u300aMySQL\u5fc5\u77e5\u5fc5\u4f1a\u300b \u8fd9\u672c\u4e66\u8bb2\u7684\u975e\u5e38\u5168\uff0c\u4ece\u57fa\u672c\u6982\u5ff5\uff0c\u5230\u67e5\u8be2\u5230\u63d2\u5165\u65b0\u5efa\u8868\uff0c\u7528\u6237\u7684\u7ba1\u7406\uff0c\u90fd\u6709\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u975e\u5e38\u9002\u5408\u6ca1\u6709\u4efb\u4f55\u57fa\u7840\u7684\u540c\u5b66\u6765\u5b66\u4e60Mysql\uff0c\u603b\u4e4b\u8fd9\u672c\u4e66\u5b66\u4e60\u7684\u65b9\u6cd5\u5c31\u662f\uff1a1\u3001\u5341\u5206\u949f\u4e86\u89e3\u4e0b\u6570\u636e\u5e93\u7684\u57fa\u672c\u6982\u5ff5 2\u3001\u627e\u5230\u7ec3\u624b\u7684\u6570\u636e\u5e93 3\u3001\u5bf9\u7167\u7740\u4e0a\u9762\u7684\u5185\u5bb9\u53bb\u6572\u3002\u672c\u4e66\u91cc\u4e5f\u6709\u5927\u91cf\u7684\u5185\u5bb9\u662f\u8bb2sql\u7684\uff0c\u53ef\u4ee5\u7ed3\u5408w3c\u7684sql\u6559\u7a0b\u4e00\u8d77\uff0c\u6709\u53d6\u820d\u5730\u770b\u3002 \u4e8c\u3001\u300a\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\u300b\u8fd9\u672c\u4e66\u662fdba\u5fc5\u770b\u7684\u3002 \u770b\u5b8c\u8fd9\u4e9b\u5e76\u4e14\u5b9e\u8df5+\u601d\u8003\u4e4b\u540e\uff0c\u53ef\u4ee5\u7b97\u5165\u95e8\u4e86\u3002 MySQL\u6df1\u5165\u5b66\u4e60 \u00b6 \u6211\u63a8\u8350\u51e0\u672c\u4e66\uff08\u5f88\u591a\u5927\u795e\u90fd\u8fd9\u4e48\u63a8\u8350\uff09\uff0c\u300a\u9ad8\u6027\u80fdMySQL(\u7b2c3\u7248)\u300b\u3001 \u300aMySQL\u6280\u672f\u5185\u5e55(\u7b2c4\u7248)\u300b\uff0c\u300aMySQL\u6280\u672f\u5185\u5e55 InnoDB\u5b58\u50a8\u5f15\u64ce\u300b\uff0c\u300a\u6df1\u5165\u7406\u89e3MySQL\u300b\u8fd8\u6709Mysql\u7684\u5b98\u7f51\u3002\u8bfb\u5b8c\u8fd9\u4e9b\u4e1c\u897f\uff0c\u518d\u52a0\u4e9b\u4e30\u5bcc\u7684\u7ecf\u9a8c\uff0c\u7406\u8bba\u4e0a\u6765\u8bb2\u5c31\u5177\u5907DBA\u7684\u6c34\u5e73\u4e86\u3002 \u5341\u5206\u63a8\u8350\u9605\u8bfb Planet MySQL \u4e0a\u6c47\u603b\u7684\u535a\u5ba2\uff0c\u7279\u522b\u662f Percona's MySQL & InnoDB performance and scalability blog . \u6211\u95ee\u4f60\uff0c\u9762\u5bf9\u4e00\u4e2a\u5e76\u53d1\u91cf\u6bd4\u8f83\u9ad8\u7684\u573a\u666f\uff0c\u5982\u4f55\u914d\u7f6emysql\u7684\u8fde\u63a5\u6570\uff1f \u4f60\u53ef\u80fd\u4f1a\u56de\u7b54\uff1a\u201c\u54e6\uff0c\u5c31\u662f\u8c03\u9ad8max_connection\u7684\u6570\u503c\u5427\u3002\u201d \u90a3\uff0c\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\u8c03\u5230\u591a\u5c11\u662f\u6700\u5408\u9002\u7684\u5462\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bbe\u7f6e\u5c31\u6700\u5408\u9002\u5462\uff1f \u4e5f\u8bb8\u4f60\u4f1a\u56de\u7b54\uff1a\u201c\u6069\u6211\u77e5\u9053\uff0c\u53ef\u4ee5\u770b\u7cfb\u7edf\u4e4b\u524d\u7684max_ used _connection\u7684\u6570\u503c\uff0c\u7136\u540e\u6765\u8bbe\u7f6e\u3002\u4e5f\u53ef\u4ee5\u8c03\u9ad8back_log\u7684\u503c\u3002\u201d \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0cmax_connection\u8fde\u63a5\u6570\u592a\u9ad8\u4f1a\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\u5f71\u54cd\u5462\uff1fback_log\u8bbe\u7f6e\u7684\u592a\u9ad8\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\u5730\u65b9\u5462\uff1fmax_connect\u7684\u4e0a\u9650\u5176\u5b9e\u662f\u53d6\u51b3\u4e8emysql\u80fd\u83b7\u5f97\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u5c31\u7b97\u8bbe\u7f6e\u621010000\uff0c\u6700\u540e\u4e5f\u662f\u6ca1\u7528\u7684\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e\u673a\u5668\u7684\u60c5\u51b5\u81ea\u52a8\u8c03\u4f4e\u3002 \u4e5f\u8bb8\u4f60\u4f1a\u56de\u7b54\uff1a\u201c\u6069\u6211\u77e5\u9053\uff0c\u8bbe\u7f6e\u592a\u9ad8\uff0c\u4f1a\u6709\u7cfb\u7edf\u5f00\u9500...\u201d \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0c\u8fd9\u4e9b\u5f00\u9500\u5177\u4f53\u662f\u4ec0\u4e48\u5462\uff1f\u662f\u4ec0\u4e48\u5de5\u4f5c\u5bfc\u81f4\u4e86\u9700\u8981\u8fd9\u4e9b\u5185\u5b58\u5f00\u9500\uff1f \u4e5f\u8bb8\u4f60\u8fd8\u4f1a\u56de\u7b54\uff0c\u5728\u8fde\u63a5\u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u7acb\u523b\u4e3a\u5b83\u5206\u914d\u8fde\u63a5\u7f13\u51b2\u533a\u4ee5\u53ca\u67e5\u8be2\u7f13\u51b2\u533a\uff0c\u8fd9\u4e9b\u90fd\u4f1a\u5403\u5185\u5b58\u3002 \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0c\u5360\u636e\u7684\u8d44\u6e90\u5177\u4f53\u662f\u591a\u5c11\u5462\uff1f\u53d6\u51b3\u4e8e\u54ea\u4e9b\u56e0\u7d20\u5462\uff1f \u5982\u4f55\u81ea\u5b66mysql? \u4f60\u5fc5\u987b\u4e0d\u65ad\u601d\u8003\uff0c\u624d\u80fd\u5728\u5de5\u4f5c\u4e2d\u9762\u5bf9\u5177\u4f53\u573a\u666f\u7684\u65f6\u5019\uff0c\u975e\u5e38\u6de1\u5b9a\u5730\u63a8\u65ad\uff1a\u201c\u54e6\uff0c\u4e00\u5b9a\u662f\u8fd9\u91cc\u51fa\u4e86\u95ee\u9898\u3002\u5e94\u8be5\u600e\u4e48\u600e\u4e48\u505a\u3002\u201d \u9762\u5bf9\u95ee\u9898\uff0c\u62ff\u51fa\u6253\u7834\u7802\u9505\u95ee\u5230\u5e95\u7684\u7cbe\u795e\uff0c\u5148\u601d\u8003\u4e00\u756a\uff0c\u7ed9\u51fa\u81ea\u5df1\u7684\u5047\u8bbe\uff0c\u4e0d\u8981\u7740\u6025\u5730\u53bb\u627e\u5ea6\u5a18\uff0c\u8c37\u6b4c\u3002\u601d\u8003\u8fc7\u540e\uff0c\u5e26\u7740\u4f60\u7684\u63a8\u65ad\u6216\u8005\u7b54\u6848\uff0c\u5927\u80c6\u5730\u53bb\u641c\u7d22\u5427\uff01\u53bb\u770b\u770b\u522b\u4eba\u7684\u89c1\u89e3\uff0c\u53bb\u770b\u770b\u5b98\u65b9\u7684\u63cf\u8ff0\uff01 \u8fd9\u624d\u662f\u4e00\u4e2a\u5de5\u7a0b\u5e08\u5e94\u6709\u7684\u6001\u5ea6\u3002 \u6700\u540e\u6211\u60f3\u7ed9\u51fa\u4e00\u4e9b\u6709\u4ef7\u503c\u7684\u5b66\u4e60\u8d44\u6599\u3002\u53ef\u4ee5\u7701\u53bb\u4e00\u4e9b\u65f6\u95f4\u3002 \u5b66\u4e60\u8d44\u6599 \u00b6 \u7535\u5b50\u4e66 \u00b6 \u6211\u8ba4\u4e3a\u591a\u770b\u4e66\u8fd8\u662f\u6709\u597d\u5904\u7684\u3002\u6709\u4e9b\u4e66\u503c\u5f97\u53cd\u590d\u770b\u8bb8\u591a\u904d\uff0c\u6709\u65f6\u5019\u53ea\u770b\u4e00\u904d\u65e0\u6cd5\u6df1\u523b\u7406\u89e3\u5438\u6536\uff0c\u601d\u8003\u4e5f\u4e0d\u591f\u5145\u5206\u3002 \u7535\u5b50\u4e66\u4e0b\u8f7d\u4f20\u9001\u95e8 \u300amysql\u5fc5\u77e5\u5fc5\u4f1a\u300b \u300a\u9ad8\u6027\u80fdmysql\u7b2c\u4e09\u7248\u300b \u300a\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\u300b \u300a\u6df1\u5165\u7406\u89e3MySQL\u300b \u300aMySQL\u6027\u80fd\u8c03\u4f18\u4e0e\u67b6\u6784\u8bbe\u8ba1--\u5168\u518c\u300b\u300aSQL Antipatterns\u300b \u300aMySQL\u6280\u672f\u5185\u5e55 InnoDB\u5b58\u50a8\u5f15\u64ce\u300b \u5b66\u4e60\u7f51\u7ad9 \u00b6 MySQL Tutorial - Learn MySQL Fast, Easy and Fun. \u53ef\u4ee5\u5feb\u901f\uff0c\u7b80\u5355\u548c\u6709\u8da3\u7684\u5b66\u4e60MySQL\u3002\u4ee5\u7b80\u5355\u6613\u61c2\u7684\u65b9\u5f0f\u4e3a\u60a8\u63d0\u4f9b\u5b8c\u6574\u7684MySQL\u6559\u7a0b\u3002\u6bcf\u4e2a\u6559\u7a0b\u90fd\u6709SQL\u811a\u672c\u548c\u53ef\u7528\u5c4f\u5e55\u622a\u56fe\u7684\u5b9e\u9645\u793a\u4f8b\u3002 mysql\u5b66\u4e60\u8d44\u6599 | mysql\u6df1\u5165\u5b66\u4e60\u7b14\u8bb0 \u6df1\u5ea6\u7b14\u8bb0 \u6709\u5f88\u591amysql\u7684\u8d44\u6599\u53ef\u4ee5\u770b\uff0c\u8fd8\u53ef\u4ee5\u770b\u7f51\u53cb\u505a\u7684\u5b66\u4e60\u7b14\u8bb0\u3002 W3Schools SQL \u6559\u7a0b \u53ef\u4ee5\u5b66\u4e60\u57fa\u7840\u7684sql\u8bed\u53e5 \u5b98\u65b9\u624b\u518c \u00b6 \u65e0\u8bba\u82f1\u6587\u597d\u4e0d\u597d\uff0c\u770b\u82f1\u6587\u624b\u518c\u7684\u80fd\u529b\u662f\u4e00\u5b9a\u8981\u6709\uff0c\u4e5f\u4e00\u5b9a\u8981\u57f9\u517b\u7684\u3002 mysql\u5b98\u65b9\u624b\u518c\uff1a14 The InnoDB Storage Engine \u5927\u725b\u535a\u5ba2 \u00b6 \u9886\u57df\u4e13\u5bb6\u7684\u535a\u5ba2\u662f\u5341\u5206\u5177\u6709\u5b66\u4e60\u4ef7\u503c\u7684\uff0c\u4e0b\u9762\u5217\u4e3e\u51e0\u4e2a\u6bd4\u8f83\u597d\u7684\uff1a \u4f55\u767b\u6210\u7684\u6280\u672f\u535a\u5ba2 \u4f55\u767b\u6210\u7684\u6280\u672f\u535a\u5ba2 \u6dd8\u5b9d\u4e01\u5947 \u8ffd\u98ce\u5200\u00b7\u4e01\u5947 - ITeye\u6280\u672f\u7f51\u7ad9 \u5468\u632f\u5174@\u6dd8\u5b9d \u82b1\u540d\uff1a\u82cf\u666e \u4e00\u4e2a\u6545\u4e8b@MySQL DBA \u963f\u91cc\u4e91\u6570\u636e\u5e93\u9ad8\u7ea7\u4e13\u5bb6\u5f6d\u7acb\u52cb\u4e3a MariaDB Foundation \u6b63\u5f0f\u6210\u5458\uff0c\u8d1f\u8d23\u5168\u7403Replication\u6a21\u5757\u76f8\u5173\u8865\u4e01\u7684Review\u3002\u5f6d\u7acb\u52cb\u4e5f\u6210\u4e3a\u9996\u4f4d\u88abMariaDB\u57fa\u91d1\u4f1a\u5f15\u5165\u7684\u4e2d\u56fd\u7a0b\u5e8f\u5458\u3002 P.Linux Laboratory Planet MySQL \u8f6c\u884c\u81ea\u5b66MySQL\u6570\u636e\u5e93 \u00b6 \u672c\u4eba\u662f\u4e2a\u6d3b\u751f\u751f\u7684\u4f8b\u5b50\uff0c\u5927\u5b66\u5b66\u7684\u4eea\u5668\u4eea\u8868\u4e13\u4e1a\uff0c\u6bd5\u4e1a\u524d\u7b2c\u4e00\u4efd\u5b9e\u4e60\u5de5\u4f5c\u662f\u7535\u8def\u677f\u6d4b\u8bd5\u30020\u57fa\u7840\u81ea\u5b66mysql\u548clinux\uff0c\u73b0\u4efb\u56fd\u5185\u67d0\u516c\u6709\u4e91mysql &&mongodb dba\u3002 \u5bf9\u4e8e\u975e\u8ba1\u7b97\u673a\u51fa\u8eab\u7684\u6211\uff0c\u5927\u5b66\u53ea\u4f1ahello word\u548c\u8dd1\u9a6c\u706f\uff0c\u671f\u95f4\u8fc7\u7a0b\u786e\u5b9e\u975e\u5e38\u66f2\u6298\uff0c\u5206\u4eab\u4e0b\u6211\u7684\u81ea\u5b66\u8fc7\u7a0b\uff1a 1\u3001 \u81ea\u5df1\u5728windows\u548clinux\u4e0a\u5b89\u88c5\u4e86mysql\uff0c\u81ea\u5b66linux\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5b66\u4e60mysql\u7684\u6700\u57fa\u7840\u7684\u77e5\u8bc6\uff0c\u5373**\u600e\u4e48\u5199sql\uff0c\u5b58\u50a8\u8fc7\u7a0b\uff0c\u8868\u7684\u8bbe\u8ba1**\u7b49\uff0c\u4ece0\u5230\u719f\u6089\u5927\u6982\u82b1\u4e863\u4e2a\u6708 \uff0c\u63a8\u8350**\u300amysql\u5165\u95e8\u5f88\u7b80\u5355\u300b**\u3002 2\u3001\u7cfb\u7edf\u5730\u8f83\u4e3a\u6df1\u5165\u5730\u5b66\u4e60**mysql\u7684sql\u4f18\u5316\uff0c\u5907\u4efd\u548c\u6062\u590d\uff0c\u53c2\u6570\u4f18\u5316\uff0c\u67b6\u6784\u4f18\u5316\uff0c\u786c\u4ef6\u5c42\u9762\u7684\u4f18\u5316\uff0c\u9ad8\u53ef\u7528\u65b9\u6848\uff0c\u590d\u5236\u6280\u672f**\u7b49\u7b49\uff0c\u8fd9\u6bb5\u65f6\u95f4\u4f60\u4e0d\u4e00\u5b9a\u80fd\u5b9e\u9645\u63a5\u89e6\u5230\u8fd9\u4e9b\uff0c\u5c31\u50cf\u6211\u5f53\u521d\u90a3\u6837\uff0c\u80af\u5b9a\u6ca1\u4ec0\u4e48\u516c\u53f8\u62db\u4e00\u4e2a\u5c0f\u767d\u3002 \u6211\u9009\u62e9\u81ea\u5df1\u770b\u4e66\uff0c\u63a8\u8350**\u300a\u9ad8\u6027\u80fdmysql\u300b**\uff0c\u91cc\u9762\u6240\u6709\u7684\u7ae0\u8282\u90fd\u9700\u8981\u770b\u4e00\u904d\uff0c\u4ee5\u73b0\u5728\u7684\u6c34\u5e73\u80af\u5b9a\u770b\u4e0d\u61c2\uff0c\u4f46\u9700\u8981\u77e5\u9053\u5927\u6982\u600e\u4e48\u56de\u4e8b\uff0c\u4e3a\u540e\u7eed\u7684\u627emysql\u521d\u7ea7dba\u7684\u5de5\u4f5c\u6253\u4e00\u4e2a\u94fa\u57ab\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5927\u6982\u4e5f\u9700\u89813\u4e2a\u6708\u3002 3\u3001 \u7eb8\u4e0a\u5f97\u6765\u7ec8\u89c9\u6d45\uff0c\u5b8c\u6210\u4ee5\u4e0a\u4e24\u6b65\uff0c\u6211\u5f00\u59cb\u51c6\u5907**\u627e\u4e00\u4efdmysql\u76f8\u5173\u7684\u5de5\u4f5c**\uff0c\u800c\u4e0d\u662f\u5929\u5929\u7528\u7740excel\u8868\u683c\u505a\u7740select * from table_sb\u8fd9\u6837\u7684\u5de5\u4f5c\u3002 \u5f53\u7136\u6211\u8fd9\u4e48\u7325\u7410\u7684\u4eba\u80af\u5b9a\u4e0d\u4f1a\u88f8\u8f9e\uff0c\u8be5\u753b\u7684\u7535\u8def\u677f\u4e5f\u4e00\u6837\u753b\uff0c\u4e1a\u4f59\u65f6\u95f4\u5f00\u59cb\u6295\u521d\u7ea7mysql dba\u7684\u5de5\u4f5c\uff0c\u5e76\u4e14\u4e0d\u95f4\u65ad\u5730\u5b66\u4e60\uff0c\u7f51\u4e0a\u5404\u79cd\u627emysql\u9762\u8bd5\u7684\u76f8\u5173\u9898\u76ee\uff08\u5b9e\u9645\u4e0a\u6211\u5f53\u65f6\u5b8c\u5168\u6ca1\u6709\u4efb\u4f55\u5b9e\u6218\u7ecf\u9a8c\uff09\uff0c\u9646\u7eed\u6536\u5230\u4e00\u4e9b\u9762\u8bd5\uff0c\u51ed\u501f\u4e4b\u524d\u81ea\u5b66\u7684mysql\u77e5\u8bc6\uff0c\u5f00\u59cb\u80e1\u4e71\u5439\u725b\u903c\uff0c\u5148\u6df7\u8fdb\u53bb\u518d\u8bf4\u3002 \u4f60\u4e0d\u505amysql\u5b9e\u9645\u76f8\u5173\u7684\u5de5\u4f5c\uff0c\u6c38\u8fdc\u4e5f\u4e0d\u77e5\u9053\u81ea\u5df1\u4e4b\u524d\u8ba4\u77e5\u7684db\u77e5\u8bc6\u6709\u591a\u5e7c\u7a1a\u3002 \u53cb\u60c5\u63d0\u793a\u4e00\u70b9\uff0c\u4e00\u822c\u516c\u53f8\u90fd\u6ca1\u6709\u4e13\u804cdba\u7684\uff0c\u6240\u4ee5\u9762\u8bd5\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u81ea\u4fe1\uff0c\u5176\u5b9e\u4f60\u5b66\u4e86\u8fd9\u4e48\u591a\uff0c\u867d\u7136\u6beb\u65e0\u5b9e\u6218\u7ecf\u9a8c\uff0c\u7406\u8bba\u77e5\u8bc6\u5f88\u5927\u6982\u7387\u6bd4\u9762\u8bd5\u4f60\u7684\u4eba\u725b\u903c\uff0c\u6240\u4ee5\u5404\u79cd\u5439\uff0c\u6211\u5c31\u8fd9\u6837\u771f\u6b63\u8fdb\u5165\u521d\u7ea7dba\u7684\u5708\u5b50\uff08\u7531\u4e8e\u8fd9\u65f6\u5bf9linux\u8fd8\u5904\u4e8ecd ls\u7684\u6c34\u5e73\uff0c\u6240\u4ee5\u4e4b\u524d\u4e5f\u6839\u672c\u6ca1\u505a\u8fc7\u8fd0\u7ef4\uff09\uff0c\u8fd9\u4e2a\u8fb9\u5de5\u4f5c\u8fb9\u627e\u5de5\u4f5c\u7684\u8fc7\u7a0b\u53c8\u6301\u7eed\u4e862\u4e2a\u6708\u3002 4\u3001\u771f\u6b63\u8fdb\u5165\u4e92\u8054\u7f51\uff0c\u63a5\u89e6\u751f\u4ea7\u73af\u5883\u540e\uff0c\u8fd9\u662f\u6211\u8fdb\u6b65\u6700\u5927\u7684\u65f6\u5019\u3002 \u7b2c\u4e00\u6b65\u9700\u8981**\u5c06\u4e4b\u524d\u6240\u5b66\u771f\u6b63\u5730\u5e94\u7528\u8d77\u6765**\uff0c\u5e76\u4e14\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u518d\u56de\u5934\u770b\u4e4b\u524d\u7684\u4e66\u7c4d\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u771f\u6b63\u53bb\u7406\u89e3\uff0c\u800c\u4e0d\u662f\u4f3c\u662f\u800c\u975e\uff0c\u4e00\u77e5\u534a\u89e3\u3002 \u8fd9\u65f6\u518d\u63a8\u8350**\u300a\u9ad8\u6027\u80fdmysql \u7b2c\u4e09\u7248\u300b \uff0c\u5168\u672c\u518d\u770b\u4e00\u904d\uff0c\u8fd9\u65f6\u9700\u8981\u5168\u90e8\u770b\u61c2\uff0c\u53e6\u5916\u8fd8\u6709 \u300amysql\u6280\u672f\u5185\u5e55\uff1ainnodb\u5b58\u50a8\u5f15\u64ce\u300b \u7b49\u7b49\u3002 \u603b\u4e4b\u8fd9\u6bb5\u65f6\u95f4\u5c31\u9700\u8981**\u5f00\u59cb\u5173\u6ce8mysql\u4e00\u4e9b\u7ec6\u8282**\u4e86\uff0c\u6bd4\u5982**db\u6545\u969c\u5904\u7406\uff0c\u9ad8\u53ef\u7528\uff0c\u8d1f\u8f7d\u5747\u8861**\u7b49\u7b49\u7684\u5177\u4f53\u5b9e\u73b0\u4e86\u3002 \u53e6\u5916\uff0c**linux\u7684\u77e5\u8bc6\u540c\u6b65\u4e5f\u8981\u6df1\u5165\u53bb\u5b66\u4e60 \uff0c\u81f3\u5c11\u4f1a\u5199shell\u811a\u672c\uff0c\u5e38\u89c1\u7684linux\u77e5\u8bc6\u7b49\uff0c\u6211\u5728\u8fd9\u82b1\u4e861\u5e74\u591a\uff1b 5\u3001 dba\u7684\u5de5\u4f5c\u4e00\u822c\u662f\u975e\u5e38\u8f7b\u95f2\u7684\uff0c\u6bd5\u7adf\u4e0d\u662f\u5927\u516c\u53f8\uff0c\u6280\u672f\u80fd\u529b\u6709\u9650\uff0c\u8be5\u5b66\u7684\u4e5f\u5b66\u5f97\u5dee\u4e0d\u591a\u4e86\uff0c\u63a5\u89e6\u4e0d\u5230**\u6d77\u91cf\u6570\u636e\uff0c\u9ad8\u5e76\u53d1**\u7b49\u6bd4\u8f83\u953b\u70bc\u4eba\u7684\u573a\u5408\uff0c\u4e8e\u662f\u6211\u53c8\u51c6\u5907\u8df3\u4e86\u3002 \u4e8e\u662f\u6765\u4e86\u516c\u6709\u4e91\uff0c\u73b0\u5728\u6bcf\u5929\u8fd0\u7ef4\u4e07\u591a\u4e2adb\u5b9e\u4f8b\uff0c\u5e73\u5747\u6bcf\u5929\u5904\u74065+\u4e2a\u7d27\u6025db\u6545\u969c\uff0c\u51e0\u4e4emysql\u4f1a\u9047\u5230\u7684\u95ee\u9898\uff0c\u611f\u89c9\u90fd\u9047\u5230\u4e86\uff0c\u80fd\u611f\u89c9\u5230\u6280\u672f\u5b9e\u529b\u548c\u7ecf\u9a8c\u4e5f\u5728\u6bcf\u5929\u90fd\u5728\u79ef\u7d2f\uff0c\u5728\u8fdb\u6b65\u3002 \u4f46\u662f\u611f\u89c9\u8fd8\u662f\u6b20\u7f3a\u4e86\u5f88\u591a\uff0c**\u4e0b\u4e00\u6b65\u5c31\u770b\u4f60\u9009\u62e9**\u4e86\uff0c\u662f\u518d\u53bb\u7814\u7a76\u6e90\u4ee3\u7801\uff0c\u5e95\u5c42\u539f\u7406\u7684\u4e1c\u897f\u591a\u70b9\uff0c\u8fd8\u662f\u6570\u636e\u5e93\u8fd0\u7ef4\u548c\u5e94\u7528\u591a\u4e00\u70b9\uff0c\u5c31\u6bd4\u5982\u4e1a\u754c\u59dc\u627f\u5c27\uff0c\u4f55\u767b\u6210\u4e0e\u53f6\u91d1\u8363\u7684\u533a\u522b\u3002 \u7531\u4e8e\u6211\u7684\u5386\u53f2\u539f\u56e0\uff0c\u5bf9c++\u7b49\u51e0\u4e4e\u4e0d\u61c2\uff0c\u5e73\u65f6\u4e5f\u7528\u4e0d\u5230\uff0c\u6240\u4ee5\u770b\u4ee3\u7801\u7b49\u4e8b\u5b9e\u9645\u592a\u7d2f\uff0c\u4e8e\u662f\u6211\u518d\u53bb\u5b66mongodb\uff0c\u63a5\u4e86\u516c\u53f8mongodb\u8fd0\u7ef4\u7684\u6d3b\uff0c\u7b97\u662f\u5728\u5e7f\u5ea6\u4e0a\u7684\u4e00\u4e2a\u6269\u5c55\uff0c\u4e07\u4e00\u54ea\u5929mysql\u4e0d\u884c\u4e86\u5462 6\u3001 \u603b\u4e4b\uff0c\u5bf9\u4e8edb\u5c0f\u767d\u6765\u8bf4\uff0c\u6700\u91cd\u8981\u7684\u4e00\u70b9\u5c31\u662f\uff0c \u5b66\u4e60\u7684\u8fc7\u7a0b\u4e0d\u80fd\u65ad \u3002","title":"\u6df1\u5165MySQL\u6570\u636e\u5e93.md"},{"location":"sql/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysql","text":"","title":"\u5982\u4f55\u81ea\u5b66MySQL\u6570\u636e\u5e93"},{"location":"sql/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysql_1","text":"\u57fa\u7840\uff1a sql\u8bed\u53e5 \u8868\u7ed3\u6784\u8bbe\u8ba1 \u8c03\u4f18\uff1a \u7d22\u5f15\u3001\u6162\u67e5\u8be2\u4f18\u5316 \u914d\u7f6e\u53c2\u6570\u8c03\u4f18 \u6838\u5fc3\u539f\u7406\uff1a InnoDb\u5b58\u50a8\u5f15\u64ce \uff08\u5305\u62ec\u9694\u79bb\u7ea7\u522b\u3001\u4e8b\u52a1\u3001\u9501\u3001\u7f13\u5b58\u6c60\u3001\u56de\u6eda\u65e5\u5fd7\u7b49\u7b49\uff09 Mysqld (\u5305\u62ec\u8fde\u63a5\u7ba1\u7406\u3001\u8fdb\u7a0b\u7ba1\u7406\u3001\u67e5\u8be2\u7f13\u5b58\u3001\u67e5\u8be2\u4f18\u5316\u3001\u65e5\u5fd7\u7b49\u7b49) \u67b6\u6784\u4e0e\u8fd0\u7ef4\uff1a \u7528\u6237\u4e0e\u6743\u9650\u3001\u5b89\u5168 \u5907\u4efd\u4e0e\u6062\u590d \u65e5\u5fd7 \u5206\u5e03\u5f0f\u4e0e\u9ad8\u53ef\u7528","title":"MySQL\u77e5\u8bc6\u4f53\u7cfb"},{"location":"sql/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysql_2","text":"\u9996\u5148\uff0c\u5b66\u4e60\u57fa\u672c\u7684SQL\u8bed\u6cd5\u3002\u4f60\u5c31\u53ef\u4ee5\u7f16\u5199SQL\u8bed\u53e5\u4e86\u3002\u63a8\u8350\uff1aW3Schools\u7684 SQL \u6559\u7a0b \u3002 \u5176\u6b21\uff0c\u5b66\u4e60\u6570\u636e\u5e93\u7684\u4e3b\u8981\u529f\u80fd\u548c\u4f7f\u7528\u65b9\u6cd5\uff0c\u6bd4\u5982\u7528\u6237\u76f8\u5173\u6216\u8005\u6743\u9650\u76f8\u5173\u7b49\u7b49\u3002 \u6211\u63a8\u8350\u4e24\u672c\u4e66\uff1a \u4e00\u3001\u300aMySQL\u5fc5\u77e5\u5fc5\u4f1a\u300b \u8fd9\u672c\u4e66\u8bb2\u7684\u975e\u5e38\u5168\uff0c\u4ece\u57fa\u672c\u6982\u5ff5\uff0c\u5230\u67e5\u8be2\u5230\u63d2\u5165\u65b0\u5efa\u8868\uff0c\u7528\u6237\u7684\u7ba1\u7406\uff0c\u90fd\u6709\u5177\u4f53\u7684\u4f8b\u5b50\uff0c\u975e\u5e38\u9002\u5408\u6ca1\u6709\u4efb\u4f55\u57fa\u7840\u7684\u540c\u5b66\u6765\u5b66\u4e60Mysql\uff0c\u603b\u4e4b\u8fd9\u672c\u4e66\u5b66\u4e60\u7684\u65b9\u6cd5\u5c31\u662f\uff1a1\u3001\u5341\u5206\u949f\u4e86\u89e3\u4e0b\u6570\u636e\u5e93\u7684\u57fa\u672c\u6982\u5ff5 2\u3001\u627e\u5230\u7ec3\u624b\u7684\u6570\u636e\u5e93 3\u3001\u5bf9\u7167\u7740\u4e0a\u9762\u7684\u5185\u5bb9\u53bb\u6572\u3002\u672c\u4e66\u91cc\u4e5f\u6709\u5927\u91cf\u7684\u5185\u5bb9\u662f\u8bb2sql\u7684\uff0c\u53ef\u4ee5\u7ed3\u5408w3c\u7684sql\u6559\u7a0b\u4e00\u8d77\uff0c\u6709\u53d6\u820d\u5730\u770b\u3002 \u4e8c\u3001\u300a\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\u300b\u8fd9\u672c\u4e66\u662fdba\u5fc5\u770b\u7684\u3002 \u770b\u5b8c\u8fd9\u4e9b\u5e76\u4e14\u5b9e\u8df5+\u601d\u8003\u4e4b\u540e\uff0c\u53ef\u4ee5\u7b97\u5165\u95e8\u4e86\u3002","title":"MySQL\u96f6\u57fa\u7840\u56fe\u89e3"},{"location":"sql/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysql_3","text":"\u6211\u63a8\u8350\u51e0\u672c\u4e66\uff08\u5f88\u591a\u5927\u795e\u90fd\u8fd9\u4e48\u63a8\u8350\uff09\uff0c\u300a\u9ad8\u6027\u80fdMySQL(\u7b2c3\u7248)\u300b\u3001 \u300aMySQL\u6280\u672f\u5185\u5e55(\u7b2c4\u7248)\u300b\uff0c\u300aMySQL\u6280\u672f\u5185\u5e55 InnoDB\u5b58\u50a8\u5f15\u64ce\u300b\uff0c\u300a\u6df1\u5165\u7406\u89e3MySQL\u300b\u8fd8\u6709Mysql\u7684\u5b98\u7f51\u3002\u8bfb\u5b8c\u8fd9\u4e9b\u4e1c\u897f\uff0c\u518d\u52a0\u4e9b\u4e30\u5bcc\u7684\u7ecf\u9a8c\uff0c\u7406\u8bba\u4e0a\u6765\u8bb2\u5c31\u5177\u5907DBA\u7684\u6c34\u5e73\u4e86\u3002 \u5341\u5206\u63a8\u8350\u9605\u8bfb Planet MySQL \u4e0a\u6c47\u603b\u7684\u535a\u5ba2\uff0c\u7279\u522b\u662f Percona's MySQL & InnoDB performance and scalability blog . \u6211\u95ee\u4f60\uff0c\u9762\u5bf9\u4e00\u4e2a\u5e76\u53d1\u91cf\u6bd4\u8f83\u9ad8\u7684\u573a\u666f\uff0c\u5982\u4f55\u914d\u7f6emysql\u7684\u8fde\u63a5\u6570\uff1f \u4f60\u53ef\u80fd\u4f1a\u56de\u7b54\uff1a\u201c\u54e6\uff0c\u5c31\u662f\u8c03\u9ad8max_connection\u7684\u6570\u503c\u5427\u3002\u201d \u90a3\uff0c\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\u8c03\u5230\u591a\u5c11\u662f\u6700\u5408\u9002\u7684\u5462\uff1f\u4e3a\u4ec0\u4e48\u8fd9\u6837\u8bbe\u7f6e\u5c31\u6700\u5408\u9002\u5462\uff1f \u4e5f\u8bb8\u4f60\u4f1a\u56de\u7b54\uff1a\u201c\u6069\u6211\u77e5\u9053\uff0c\u53ef\u4ee5\u770b\u7cfb\u7edf\u4e4b\u524d\u7684max_ used _connection\u7684\u6570\u503c\uff0c\u7136\u540e\u6765\u8bbe\u7f6e\u3002\u4e5f\u53ef\u4ee5\u8c03\u9ad8back_log\u7684\u503c\u3002\u201d \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0cmax_connection\u8fde\u63a5\u6570\u592a\u9ad8\u4f1a\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\u5f71\u54cd\u5462\uff1fback_log\u8bbe\u7f6e\u7684\u592a\u9ad8\u6709\u4ec0\u4e48\u4e0d\u597d\u7684\u5730\u65b9\u5462\uff1fmax_connect\u7684\u4e0a\u9650\u5176\u5b9e\u662f\u53d6\u51b3\u4e8emysql\u80fd\u83b7\u5f97\u7684\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u6570\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\u4f60\u5c31\u7b97\u8bbe\u7f6e\u621010000\uff0c\u6700\u540e\u4e5f\u662f\u6ca1\u7528\u7684\uff0c\u7cfb\u7edf\u4f1a\u6839\u636e\u673a\u5668\u7684\u60c5\u51b5\u81ea\u52a8\u8c03\u4f4e\u3002 \u4e5f\u8bb8\u4f60\u4f1a\u56de\u7b54\uff1a\u201c\u6069\u6211\u77e5\u9053\uff0c\u8bbe\u7f6e\u592a\u9ad8\uff0c\u4f1a\u6709\u7cfb\u7edf\u5f00\u9500...\u201d \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0c\u8fd9\u4e9b\u5f00\u9500\u5177\u4f53\u662f\u4ec0\u4e48\u5462\uff1f\u662f\u4ec0\u4e48\u5de5\u4f5c\u5bfc\u81f4\u4e86\u9700\u8981\u8fd9\u4e9b\u5185\u5b58\u5f00\u9500\uff1f \u4e5f\u8bb8\u4f60\u8fd8\u4f1a\u56de\u7b54\uff0c\u5728\u8fde\u63a5\u521b\u5efa\u7684\u65f6\u5019\uff0c\u4f1a\u7acb\u523b\u4e3a\u5b83\u5206\u914d\u8fde\u63a5\u7f13\u51b2\u533a\u4ee5\u53ca\u67e5\u8be2\u7f13\u51b2\u533a\uff0c\u8fd9\u4e9b\u90fd\u4f1a\u5403\u5185\u5b58\u3002 \u90a3\u4f60\u6709\u6ca1\u6709\u601d\u8003\u8fc7\uff0c\u5360\u636e\u7684\u8d44\u6e90\u5177\u4f53\u662f\u591a\u5c11\u5462\uff1f\u53d6\u51b3\u4e8e\u54ea\u4e9b\u56e0\u7d20\u5462\uff1f \u5982\u4f55\u81ea\u5b66mysql? \u4f60\u5fc5\u987b\u4e0d\u65ad\u601d\u8003\uff0c\u624d\u80fd\u5728\u5de5\u4f5c\u4e2d\u9762\u5bf9\u5177\u4f53\u573a\u666f\u7684\u65f6\u5019\uff0c\u975e\u5e38\u6de1\u5b9a\u5730\u63a8\u65ad\uff1a\u201c\u54e6\uff0c\u4e00\u5b9a\u662f\u8fd9\u91cc\u51fa\u4e86\u95ee\u9898\u3002\u5e94\u8be5\u600e\u4e48\u600e\u4e48\u505a\u3002\u201d \u9762\u5bf9\u95ee\u9898\uff0c\u62ff\u51fa\u6253\u7834\u7802\u9505\u95ee\u5230\u5e95\u7684\u7cbe\u795e\uff0c\u5148\u601d\u8003\u4e00\u756a\uff0c\u7ed9\u51fa\u81ea\u5df1\u7684\u5047\u8bbe\uff0c\u4e0d\u8981\u7740\u6025\u5730\u53bb\u627e\u5ea6\u5a18\uff0c\u8c37\u6b4c\u3002\u601d\u8003\u8fc7\u540e\uff0c\u5e26\u7740\u4f60\u7684\u63a8\u65ad\u6216\u8005\u7b54\u6848\uff0c\u5927\u80c6\u5730\u53bb\u641c\u7d22\u5427\uff01\u53bb\u770b\u770b\u522b\u4eba\u7684\u89c1\u89e3\uff0c\u53bb\u770b\u770b\u5b98\u65b9\u7684\u63cf\u8ff0\uff01 \u8fd9\u624d\u662f\u4e00\u4e2a\u5de5\u7a0b\u5e08\u5e94\u6709\u7684\u6001\u5ea6\u3002 \u6700\u540e\u6211\u60f3\u7ed9\u51fa\u4e00\u4e9b\u6709\u4ef7\u503c\u7684\u5b66\u4e60\u8d44\u6599\u3002\u53ef\u4ee5\u7701\u53bb\u4e00\u4e9b\u65f6\u95f4\u3002","title":"MySQL\u6df1\u5165\u5b66\u4e60"},{"location":"sql/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_1","text":"","title":"\u5b66\u4e60\u8d44\u6599"},{"location":"sql/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_2","text":"\u6211\u8ba4\u4e3a\u591a\u770b\u4e66\u8fd8\u662f\u6709\u597d\u5904\u7684\u3002\u6709\u4e9b\u4e66\u503c\u5f97\u53cd\u590d\u770b\u8bb8\u591a\u904d\uff0c\u6709\u65f6\u5019\u53ea\u770b\u4e00\u904d\u65e0\u6cd5\u6df1\u523b\u7406\u89e3\u5438\u6536\uff0c\u601d\u8003\u4e5f\u4e0d\u591f\u5145\u5206\u3002 \u7535\u5b50\u4e66\u4e0b\u8f7d\u4f20\u9001\u95e8 \u300amysql\u5fc5\u77e5\u5fc5\u4f1a\u300b \u300a\u9ad8\u6027\u80fdmysql\u7b2c\u4e09\u7248\u300b \u300a\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5\u300b \u300a\u6df1\u5165\u7406\u89e3MySQL\u300b \u300aMySQL\u6027\u80fd\u8c03\u4f18\u4e0e\u67b6\u6784\u8bbe\u8ba1--\u5168\u518c\u300b\u300aSQL Antipatterns\u300b \u300aMySQL\u6280\u672f\u5185\u5e55 InnoDB\u5b58\u50a8\u5f15\u64ce\u300b","title":"\u7535\u5b50\u4e66"},{"location":"sql/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_3","text":"MySQL Tutorial - Learn MySQL Fast, Easy and Fun. \u53ef\u4ee5\u5feb\u901f\uff0c\u7b80\u5355\u548c\u6709\u8da3\u7684\u5b66\u4e60MySQL\u3002\u4ee5\u7b80\u5355\u6613\u61c2\u7684\u65b9\u5f0f\u4e3a\u60a8\u63d0\u4f9b\u5b8c\u6574\u7684MySQL\u6559\u7a0b\u3002\u6bcf\u4e2a\u6559\u7a0b\u90fd\u6709SQL\u811a\u672c\u548c\u53ef\u7528\u5c4f\u5e55\u622a\u56fe\u7684\u5b9e\u9645\u793a\u4f8b\u3002 mysql\u5b66\u4e60\u8d44\u6599 | mysql\u6df1\u5165\u5b66\u4e60\u7b14\u8bb0 \u6df1\u5ea6\u7b14\u8bb0 \u6709\u5f88\u591amysql\u7684\u8d44\u6599\u53ef\u4ee5\u770b\uff0c\u8fd8\u53ef\u4ee5\u770b\u7f51\u53cb\u505a\u7684\u5b66\u4e60\u7b14\u8bb0\u3002 W3Schools SQL \u6559\u7a0b \u53ef\u4ee5\u5b66\u4e60\u57fa\u7840\u7684sql\u8bed\u53e5","title":"\u5b66\u4e60\u7f51\u7ad9"},{"location":"sql/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_4","text":"\u65e0\u8bba\u82f1\u6587\u597d\u4e0d\u597d\uff0c\u770b\u82f1\u6587\u624b\u518c\u7684\u80fd\u529b\u662f\u4e00\u5b9a\u8981\u6709\uff0c\u4e5f\u4e00\u5b9a\u8981\u57f9\u517b\u7684\u3002 mysql\u5b98\u65b9\u624b\u518c\uff1a14 The InnoDB Storage Engine","title":"\u5b98\u65b9\u624b\u518c"},{"location":"sql/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#_5","text":"\u9886\u57df\u4e13\u5bb6\u7684\u535a\u5ba2\u662f\u5341\u5206\u5177\u6709\u5b66\u4e60\u4ef7\u503c\u7684\uff0c\u4e0b\u9762\u5217\u4e3e\u51e0\u4e2a\u6bd4\u8f83\u597d\u7684\uff1a \u4f55\u767b\u6210\u7684\u6280\u672f\u535a\u5ba2 \u4f55\u767b\u6210\u7684\u6280\u672f\u535a\u5ba2 \u6dd8\u5b9d\u4e01\u5947 \u8ffd\u98ce\u5200\u00b7\u4e01\u5947 - ITeye\u6280\u672f\u7f51\u7ad9 \u5468\u632f\u5174@\u6dd8\u5b9d \u82b1\u540d\uff1a\u82cf\u666e \u4e00\u4e2a\u6545\u4e8b@MySQL DBA \u963f\u91cc\u4e91\u6570\u636e\u5e93\u9ad8\u7ea7\u4e13\u5bb6\u5f6d\u7acb\u52cb\u4e3a MariaDB Foundation \u6b63\u5f0f\u6210\u5458\uff0c\u8d1f\u8d23\u5168\u7403Replication\u6a21\u5757\u76f8\u5173\u8865\u4e01\u7684Review\u3002\u5f6d\u7acb\u52cb\u4e5f\u6210\u4e3a\u9996\u4f4d\u88abMariaDB\u57fa\u91d1\u4f1a\u5f15\u5165\u7684\u4e2d\u56fd\u7a0b\u5e8f\u5458\u3002 P.Linux Laboratory Planet MySQL","title":"\u5927\u725b\u535a\u5ba2"},{"location":"sql/%E6%B7%B1%E5%85%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/#mysql_4","text":"\u672c\u4eba\u662f\u4e2a\u6d3b\u751f\u751f\u7684\u4f8b\u5b50\uff0c\u5927\u5b66\u5b66\u7684\u4eea\u5668\u4eea\u8868\u4e13\u4e1a\uff0c\u6bd5\u4e1a\u524d\u7b2c\u4e00\u4efd\u5b9e\u4e60\u5de5\u4f5c\u662f\u7535\u8def\u677f\u6d4b\u8bd5\u30020\u57fa\u7840\u81ea\u5b66mysql\u548clinux\uff0c\u73b0\u4efb\u56fd\u5185\u67d0\u516c\u6709\u4e91mysql &&mongodb dba\u3002 \u5bf9\u4e8e\u975e\u8ba1\u7b97\u673a\u51fa\u8eab\u7684\u6211\uff0c\u5927\u5b66\u53ea\u4f1ahello word\u548c\u8dd1\u9a6c\u706f\uff0c\u671f\u95f4\u8fc7\u7a0b\u786e\u5b9e\u975e\u5e38\u66f2\u6298\uff0c\u5206\u4eab\u4e0b\u6211\u7684\u81ea\u5b66\u8fc7\u7a0b\uff1a 1\u3001 \u81ea\u5df1\u5728windows\u548clinux\u4e0a\u5b89\u88c5\u4e86mysql\uff0c\u81ea\u5b66linux\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5b66\u4e60mysql\u7684\u6700\u57fa\u7840\u7684\u77e5\u8bc6\uff0c\u5373**\u600e\u4e48\u5199sql\uff0c\u5b58\u50a8\u8fc7\u7a0b\uff0c\u8868\u7684\u8bbe\u8ba1**\u7b49\uff0c\u4ece0\u5230\u719f\u6089\u5927\u6982\u82b1\u4e863\u4e2a\u6708 \uff0c\u63a8\u8350**\u300amysql\u5165\u95e8\u5f88\u7b80\u5355\u300b**\u3002 2\u3001\u7cfb\u7edf\u5730\u8f83\u4e3a\u6df1\u5165\u5730\u5b66\u4e60**mysql\u7684sql\u4f18\u5316\uff0c\u5907\u4efd\u548c\u6062\u590d\uff0c\u53c2\u6570\u4f18\u5316\uff0c\u67b6\u6784\u4f18\u5316\uff0c\u786c\u4ef6\u5c42\u9762\u7684\u4f18\u5316\uff0c\u9ad8\u53ef\u7528\u65b9\u6848\uff0c\u590d\u5236\u6280\u672f**\u7b49\u7b49\uff0c\u8fd9\u6bb5\u65f6\u95f4\u4f60\u4e0d\u4e00\u5b9a\u80fd\u5b9e\u9645\u63a5\u89e6\u5230\u8fd9\u4e9b\uff0c\u5c31\u50cf\u6211\u5f53\u521d\u90a3\u6837\uff0c\u80af\u5b9a\u6ca1\u4ec0\u4e48\u516c\u53f8\u62db\u4e00\u4e2a\u5c0f\u767d\u3002 \u6211\u9009\u62e9\u81ea\u5df1\u770b\u4e66\uff0c\u63a8\u8350**\u300a\u9ad8\u6027\u80fdmysql\u300b**\uff0c\u91cc\u9762\u6240\u6709\u7684\u7ae0\u8282\u90fd\u9700\u8981\u770b\u4e00\u904d\uff0c\u4ee5\u73b0\u5728\u7684\u6c34\u5e73\u80af\u5b9a\u770b\u4e0d\u61c2\uff0c\u4f46\u9700\u8981\u77e5\u9053\u5927\u6982\u600e\u4e48\u56de\u4e8b\uff0c\u4e3a\u540e\u7eed\u7684\u627emysql\u521d\u7ea7dba\u7684\u5de5\u4f5c\u6253\u4e00\u4e2a\u94fa\u57ab\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5927\u6982\u4e5f\u9700\u89813\u4e2a\u6708\u3002 3\u3001 \u7eb8\u4e0a\u5f97\u6765\u7ec8\u89c9\u6d45\uff0c\u5b8c\u6210\u4ee5\u4e0a\u4e24\u6b65\uff0c\u6211\u5f00\u59cb\u51c6\u5907**\u627e\u4e00\u4efdmysql\u76f8\u5173\u7684\u5de5\u4f5c**\uff0c\u800c\u4e0d\u662f\u5929\u5929\u7528\u7740excel\u8868\u683c\u505a\u7740select * from table_sb\u8fd9\u6837\u7684\u5de5\u4f5c\u3002 \u5f53\u7136\u6211\u8fd9\u4e48\u7325\u7410\u7684\u4eba\u80af\u5b9a\u4e0d\u4f1a\u88f8\u8f9e\uff0c\u8be5\u753b\u7684\u7535\u8def\u677f\u4e5f\u4e00\u6837\u753b\uff0c\u4e1a\u4f59\u65f6\u95f4\u5f00\u59cb\u6295\u521d\u7ea7mysql dba\u7684\u5de5\u4f5c\uff0c\u5e76\u4e14\u4e0d\u95f4\u65ad\u5730\u5b66\u4e60\uff0c\u7f51\u4e0a\u5404\u79cd\u627emysql\u9762\u8bd5\u7684\u76f8\u5173\u9898\u76ee\uff08\u5b9e\u9645\u4e0a\u6211\u5f53\u65f6\u5b8c\u5168\u6ca1\u6709\u4efb\u4f55\u5b9e\u6218\u7ecf\u9a8c\uff09\uff0c\u9646\u7eed\u6536\u5230\u4e00\u4e9b\u9762\u8bd5\uff0c\u51ed\u501f\u4e4b\u524d\u81ea\u5b66\u7684mysql\u77e5\u8bc6\uff0c\u5f00\u59cb\u80e1\u4e71\u5439\u725b\u903c\uff0c\u5148\u6df7\u8fdb\u53bb\u518d\u8bf4\u3002 \u4f60\u4e0d\u505amysql\u5b9e\u9645\u76f8\u5173\u7684\u5de5\u4f5c\uff0c\u6c38\u8fdc\u4e5f\u4e0d\u77e5\u9053\u81ea\u5df1\u4e4b\u524d\u8ba4\u77e5\u7684db\u77e5\u8bc6\u6709\u591a\u5e7c\u7a1a\u3002 \u53cb\u60c5\u63d0\u793a\u4e00\u70b9\uff0c\u4e00\u822c\u516c\u53f8\u90fd\u6ca1\u6709\u4e13\u804cdba\u7684\uff0c\u6240\u4ee5\u9762\u8bd5\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u81ea\u4fe1\uff0c\u5176\u5b9e\u4f60\u5b66\u4e86\u8fd9\u4e48\u591a\uff0c\u867d\u7136\u6beb\u65e0\u5b9e\u6218\u7ecf\u9a8c\uff0c\u7406\u8bba\u77e5\u8bc6\u5f88\u5927\u6982\u7387\u6bd4\u9762\u8bd5\u4f60\u7684\u4eba\u725b\u903c\uff0c\u6240\u4ee5\u5404\u79cd\u5439\uff0c\u6211\u5c31\u8fd9\u6837\u771f\u6b63\u8fdb\u5165\u521d\u7ea7dba\u7684\u5708\u5b50\uff08\u7531\u4e8e\u8fd9\u65f6\u5bf9linux\u8fd8\u5904\u4e8ecd ls\u7684\u6c34\u5e73\uff0c\u6240\u4ee5\u4e4b\u524d\u4e5f\u6839\u672c\u6ca1\u505a\u8fc7\u8fd0\u7ef4\uff09\uff0c\u8fd9\u4e2a\u8fb9\u5de5\u4f5c\u8fb9\u627e\u5de5\u4f5c\u7684\u8fc7\u7a0b\u53c8\u6301\u7eed\u4e862\u4e2a\u6708\u3002 4\u3001\u771f\u6b63\u8fdb\u5165\u4e92\u8054\u7f51\uff0c\u63a5\u89e6\u751f\u4ea7\u73af\u5883\u540e\uff0c\u8fd9\u662f\u6211\u8fdb\u6b65\u6700\u5927\u7684\u65f6\u5019\u3002 \u7b2c\u4e00\u6b65\u9700\u8981**\u5c06\u4e4b\u524d\u6240\u5b66\u771f\u6b63\u5730\u5e94\u7528\u8d77\u6765**\uff0c\u5e76\u4e14\u5e94\u7528\u7684\u8fc7\u7a0b\u4e2d\uff0c\u518d\u56de\u5934\u770b\u4e4b\u524d\u7684\u4e66\u7c4d\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u771f\u6b63\u53bb\u7406\u89e3\uff0c\u800c\u4e0d\u662f\u4f3c\u662f\u800c\u975e\uff0c\u4e00\u77e5\u534a\u89e3\u3002 \u8fd9\u65f6\u518d\u63a8\u8350**\u300a\u9ad8\u6027\u80fdmysql \u7b2c\u4e09\u7248\u300b \uff0c\u5168\u672c\u518d\u770b\u4e00\u904d\uff0c\u8fd9\u65f6\u9700\u8981\u5168\u90e8\u770b\u61c2\uff0c\u53e6\u5916\u8fd8\u6709 \u300amysql\u6280\u672f\u5185\u5e55\uff1ainnodb\u5b58\u50a8\u5f15\u64ce\u300b \u7b49\u7b49\u3002 \u603b\u4e4b\u8fd9\u6bb5\u65f6\u95f4\u5c31\u9700\u8981**\u5f00\u59cb\u5173\u6ce8mysql\u4e00\u4e9b\u7ec6\u8282**\u4e86\uff0c\u6bd4\u5982**db\u6545\u969c\u5904\u7406\uff0c\u9ad8\u53ef\u7528\uff0c\u8d1f\u8f7d\u5747\u8861**\u7b49\u7b49\u7684\u5177\u4f53\u5b9e\u73b0\u4e86\u3002 \u53e6\u5916\uff0c**linux\u7684\u77e5\u8bc6\u540c\u6b65\u4e5f\u8981\u6df1\u5165\u53bb\u5b66\u4e60 \uff0c\u81f3\u5c11\u4f1a\u5199shell\u811a\u672c\uff0c\u5e38\u89c1\u7684linux\u77e5\u8bc6\u7b49\uff0c\u6211\u5728\u8fd9\u82b1\u4e861\u5e74\u591a\uff1b 5\u3001 dba\u7684\u5de5\u4f5c\u4e00\u822c\u662f\u975e\u5e38\u8f7b\u95f2\u7684\uff0c\u6bd5\u7adf\u4e0d\u662f\u5927\u516c\u53f8\uff0c\u6280\u672f\u80fd\u529b\u6709\u9650\uff0c\u8be5\u5b66\u7684\u4e5f\u5b66\u5f97\u5dee\u4e0d\u591a\u4e86\uff0c\u63a5\u89e6\u4e0d\u5230**\u6d77\u91cf\u6570\u636e\uff0c\u9ad8\u5e76\u53d1**\u7b49\u6bd4\u8f83\u953b\u70bc\u4eba\u7684\u573a\u5408\uff0c\u4e8e\u662f\u6211\u53c8\u51c6\u5907\u8df3\u4e86\u3002 \u4e8e\u662f\u6765\u4e86\u516c\u6709\u4e91\uff0c\u73b0\u5728\u6bcf\u5929\u8fd0\u7ef4\u4e07\u591a\u4e2adb\u5b9e\u4f8b\uff0c\u5e73\u5747\u6bcf\u5929\u5904\u74065+\u4e2a\u7d27\u6025db\u6545\u969c\uff0c\u51e0\u4e4emysql\u4f1a\u9047\u5230\u7684\u95ee\u9898\uff0c\u611f\u89c9\u90fd\u9047\u5230\u4e86\uff0c\u80fd\u611f\u89c9\u5230\u6280\u672f\u5b9e\u529b\u548c\u7ecf\u9a8c\u4e5f\u5728\u6bcf\u5929\u90fd\u5728\u79ef\u7d2f\uff0c\u5728\u8fdb\u6b65\u3002 \u4f46\u662f\u611f\u89c9\u8fd8\u662f\u6b20\u7f3a\u4e86\u5f88\u591a\uff0c**\u4e0b\u4e00\u6b65\u5c31\u770b\u4f60\u9009\u62e9**\u4e86\uff0c\u662f\u518d\u53bb\u7814\u7a76\u6e90\u4ee3\u7801\uff0c\u5e95\u5c42\u539f\u7406\u7684\u4e1c\u897f\u591a\u70b9\uff0c\u8fd8\u662f\u6570\u636e\u5e93\u8fd0\u7ef4\u548c\u5e94\u7528\u591a\u4e00\u70b9\uff0c\u5c31\u6bd4\u5982\u4e1a\u754c\u59dc\u627f\u5c27\uff0c\u4f55\u767b\u6210\u4e0e\u53f6\u91d1\u8363\u7684\u533a\u522b\u3002 \u7531\u4e8e\u6211\u7684\u5386\u53f2\u539f\u56e0\uff0c\u5bf9c++\u7b49\u51e0\u4e4e\u4e0d\u61c2\uff0c\u5e73\u65f6\u4e5f\u7528\u4e0d\u5230\uff0c\u6240\u4ee5\u770b\u4ee3\u7801\u7b49\u4e8b\u5b9e\u9645\u592a\u7d2f\uff0c\u4e8e\u662f\u6211\u518d\u53bb\u5b66mongodb\uff0c\u63a5\u4e86\u516c\u53f8mongodb\u8fd0\u7ef4\u7684\u6d3b\uff0c\u7b97\u662f\u5728\u5e7f\u5ea6\u4e0a\u7684\u4e00\u4e2a\u6269\u5c55\uff0c\u4e07\u4e00\u54ea\u5929mysql\u4e0d\u884c\u4e86\u5462 6\u3001 \u603b\u4e4b\uff0c\u5bf9\u4e8edb\u5c0f\u767d\u6765\u8bf4\uff0c\u6700\u91cd\u8981\u7684\u4e00\u70b9\u5c31\u662f\uff0c \u5b66\u4e60\u7684\u8fc7\u7a0b\u4e0d\u80fd\u65ad \u3002","title":"\u8f6c\u884c\u81ea\u5b66MySQL\u6570\u636e\u5e93"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/","text":"MySQL \u6570\u636e\u5e93\u5165\u95e8\u5b66\u4e60 \u00b6 \u963f\u91cc\u4e91\u5927\u5b66 \u94fe\u63a5\u5730\u5740\uff1a https://edu.aliyun.com/course/153/lesson/list mysql \u6570\u636e\u5e93\u7684\u7b80\u5355\u4ecb\u7ecd\uff0c\u5b89\u88c5\u914d\u7f6eMYSQL\uff0c\u57fa\u672c\u7684SQL\u547d\u4ee4\u3002 01 \u7b80\u4ecb \u00b6 SQL\uff1a\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0cstrcutured query language \u7ed3\u6784\u5316\u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u4e3b\u8981\u7528\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u589e\u5220\u6539\u67e5 select * from tb MySQL \u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u662f\u6570\u636e\u5e93\u7684\u4e00\u79cd\uff08\u5176\u4ed6\u7684Oracle\uff09\u3002MYSQL\u662f\u5f00\u6e90\u6570\u636e\u5e93\u3002 02 \u5b89\u88c5 \u00b6 \u5b98\u7f51\uff1adev.mysql.com/downloads/mysql windows \u5b89\u88c5 \u00b6 \u5728\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5305\u540e\uff0c\u9009\u62e9\u9ed8\u8ba4\u7684developer\u5b89\u88c5\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5\uff1b \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u5982\u679c\u68c0\u6d4b\u5230office\u4e2d\u7f3a\u5c11\u63d2\u4ef6\uff0c\u53ef\u4ee5\u4e0d\u7528\u5904\u7406\uff0c\u56e0\u4e3a\u4e3b\u8981\u5728CLI\u6a21\u5f0f\u4e0b\u4f7f\u7528MYSQL \u5b89\u88c5\u4e2d\u9700\u8981\u8bbe\u7f6eroot\u7528\u6237\u7684\u5bc6\u7801\uff0c\u5176\u4ed6\u7c7b\u578b\u7684\u7528\u6237\uff08\u4e0d\u6dfb\u52a0\u5176\u4ed6\u7528\u6237\uff09 \u6309\u7167\u5b89\u88c5\u5305\u7684\u6d41\u7a0b\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u4efb\u52a1\u7ba1\u7406\u5668\u4e0b\u9762\u770b\u5230\u670d\u52a1\u6b63\u5728\u8fd0\u884c\uff0c\u9700\u8981\u5728cmd\u4e0b\u9762\u786e\u8ba4\u5b89\u88c5. mysql -u root -p # -u \u8868\u793a\u7528\u6237 -p \u8868\u793a\u9700\u8981\u5bc6\u7801 linux \u5b89\u88c5 \u00b6 sudo yum install mysql mysql-server sudo apt-get install mysql mysql-server ( ubuntu ) mysqladmin -u root -p password 'root' # \u8bbe\u7f6e\u65b0\u5bc6\u7801\u662froot Mac \u5b89\u88c5 \u00b6 \u5b89\u88c5\u5305\u7684\u683c\u5f0f\u662f dmg \u5b89\u88c5\u5b8c\u6bd5\u540e\u9700\u8981\u8bbe\u7f6eroot\u5bc6\u7801 /usr/local/mysql/bin/mysqladmin -u root -p password root # \u5b89\u88c5\u6d4b\u8bd5\u6210\u529f\uff0c\u5bc6\u7801\u548c\u5f00\u673a\u5bc6\u7801\u4e00\u81f4 /usr/local/mysql/bin/mysql -u root -p # \u6253\u5f00mysql\u7684\u5bc6\u7801\u662f root \u5f00\u542f\u6216\u8005\u5173\u95ed\u670d\u52a1\u6709\u4e24\u79cd\u65b9\u6cd5 CLI sudo /Library/StartupItems/MySQLCOM/MYSQLCOM start | stop | restart GUI \u7cfb\u7edf\u914d\u7f6e - MYSQL - stop |start \u6ce8\u610f \uff1a\u5b89\u88c5\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u9009\u62e9\u5f3a\u5bc6\u7801\u6216\u8005\u662f\u5f31\u5bc6\u7801\u3002\u73b0\u5728\u672c\u5730\u6d4b\u8bd5\u4f7f\u7528\u5f31\u5bc6\u7801\u3002\u5bc6\u7801\u6700\u5c11\u662f8\u4f4d\uff0c\u8fd9\u91cc\u8bbe\u7f6e12345678 \u4f5c\u4e3aroot\u7684\u5bc6\u7801\u3002 \u73b0\u5728\u5bc6\u7801\u662f root \u6ce8\u610f2 \uff1a \u5982\u679cmysql\u5df2\u7ecf\u8fd0\u884c\uff0c\u4f46\u662f\u8f93\u5165 mysql \u663e\u793a\u547d\u4ee4\u4e0d\u5b58\u5728\uff1a\u9047\u4e0a-bash: mysql: command not found\u7684\u60c5\u51b5\u522b\u7740\u6025 \u8fd9\u4e2a\u662f\u56e0\u4e3a/usr/local/bin\u76ee\u5f55\u4e0b\u7f3a\u5931mysql\u5bfc\u81f4\uff0c\u53ea\u9700\u8981\u4e00\u4e0b\u65b9\u6cd5\u5efa\u7acb\u8f6f\u94fe\u63a5\uff0c\u5373\u53ef\u4ee5\u89e3\u51b3\uff1a \u628amysql\u5b89\u88c5\u76ee\u5f55\uff0c\u6bd4\u5982MYSQLPATH/bin/mysql\uff0c\u6620\u5c04\u5230/usr/local/bin\u76ee\u5f55\u4e0b\uff1a # cd /usr/local/bin # ln -fs /MYSQLPATH/bin/mysql mysql \u8fd8\u6709\u5176\u5b83\u5e38\u7528\u547d\u4ee4mysqladmin\u3001mysqldump\u7b49\u4e0d\u53ef\u7528\u65f6\u5019\u90fd\u53ef\u6309\u7528\u6b64\u65b9\u6cd5\u89e3\u51b3\u3002 \u6ce8\uff1a\u5176\u4e2dMYSQLPATH\u662fmysql\u7684\u5b9e\u9645\u5b89\u88c5\u8def\u5f84\uff08MAC \u9ed8\u8ba4\u8def\u5f84 /usr/local/mysql/bin/mysql\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://www.cnblogs.com/yang1314/p/9288767.html 03 \u914d\u7f6e \u00b6 MYSQL \u7684\u914d\u7f6e\u6587\u4ef6\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 my.cof Mac \u7684\u6587\u4ef6\u8def\u5f84\u662f /usr/local/mysql/my.cof \u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u662f\u7a7a\u7684 \u53ef\u4ee5\u914d\u7f6e\u5b57\u7b26\u96c6\uff0c\u7f13\u5b58\u5927\u5c0f\u7b49 [client] default-character-set=utf8 # \u6dfb\u52a0\u5b57\u7b26\u96c6\uff0c\u907f\u514d\u4e71\u7801 [mysqld] character-set-server=utf8 default-storage-engine=INNODB # \u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce INNODB \u4fee\u6539\u914d\u7f6e\u540e\uff0c\u9700\u8981\u91cd\u542f mysql (\u6216\u8005\u5728\u8bbe\u7f6e\u4e2d\u91cd\u542f) sudo /Library/StartupItems/MySQLCOM/MYSQLCOM restart \u81ea\u5df1\u914d\u7f6e\u7684\u95ee\u9898\uff1a\u4f7f\u7528vim\u7f16\u8f91\u5668\u4fdd\u5b58\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u4fdd\u5b58\u914d\u7f6e\uff1b\u4f7f\u7528sudo\u4e5f\u4e0d\u884c \"/usr/local/mysql-8.0.18-macos10.14-x86_64/my.cof\" E212: Can't open file for writing Warning: Changing a readonly file 04 \u6570\u636e\u5e93\u64cd\u4f5c \u00b6 show databases ; create database gc ; drop database gc ; \u4e0d\u540c\u6570\u636e\u5e93\u7684\u6570\u636e\u662f\u4e0d\u4f1a\u5e72\u6270\u7684\u3002\u6570\u636e\u5e93\u662f\u6570\u636e\u5e93\u8f6f\u4ef6\u4e2d\u57fa\u672c\u7684\u5355\u4f4d 05 \u6570\u636e\u7c7b\u578b \u00b6 database \u5305\u62ec tables \u8868\u4e2d\u6bcf\u4e00\u884c\u5c31\u662f\u4e00\u6761\u6570\u636e\uff1b\u5217\u5c31\u662f\u4e0d\u540c\u7684\u5b57\u6bb5\uff0c\u4e0d\u540c\u7684\u5b57\u6bb5\u5bf9\u5e94\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u548c\u6570\u636e\u7ed3\u6784\uff08\u4f8b\u5982ID\u662f\u81ea\u589e\u957f\u7684\u6574\u5f62\uff0cName\u662f\u957f\u5b57\u7b26\u4e32\uff09\uff0c\u662f\u5426\u6709\u9ed8\u8ba4\u503c\u7b49\u3002\u4e0b\u9762\u662f\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u3002\u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u903b\u8f91\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002 \u6587\u672c\u7c7b \u00b6 VARCHAR(size) \u957f\u5ea6\u5c0f\u4e8e255\u7684\u53ef\u53d8\u957f\u5ea6\u5b57\u7b26\u4e32\uff1avarchar \u957f\u5ea6\u5c0f\u4e8e65535\u5b57\u7b26\uff08\u901a\u5e38\u6587\u672c\u8db3\u591f\u4f7f\u7528\uff09\uff0c\u957f\u5ea6\u53ef\u4ee5\u6539\u53d8\uff08mqsql 5.0.3 \u4e4b\u524d\u8868\u793a65535\u5b57\u8282\uff09\uff0c\u67e5\u8be2\u901f\u5ea6\u4e2d\u7b49 TEXT \u957f\u5ea6\u4e2d\u7b49\u7684\u5b57\u7b26\u4e32\uff0ctext \u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u53d7\u9650\u5236\uff0c\u67e5\u8be2\u901f\u5ea6\u6700\u6162\uff0c\u901a\u5e38\u4f18\u5148\u4f7f\u7528varchar LONGTEXT \u957f\u5ea6\u5f88\u957f\u7684\u5b57\u7b26\u4e32 CHAR\uff1achar \u8868\u793a\u4f20\u7edf\u7684\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5c0f\u4e8e255\u5b57\u7b26\uff0c\u957f\u5ea6\u56fa\u5b9a\uff0c\u9002\u7528\u4e8e\u8f83\u77ed\u56fa\u5b9a\u957f\u5ea6\u7684\u6570\u636e\uff08\u8eab\u4efd\u8bc1\u53f7\u548c\u7535\u8bdd\u53f7\uff09\uff0c\u67e5\u8be2\u8868\u901f\u5ea6\u6700\u5feb Foreign key \u5916\u952e primary key \u4e3b\u952e \u5728mysql\u4e2d\uff0c\u5982\u679c\u628a\u8868\u7684\u4e3b\u952e\u8bbe\u4e3aauto_increment\u7c7b\u578b\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u81ea\u52a8\u4e3a\u4e3b\u952e\u8d4b\u503c\u3002 \u65e5\u671f\u7c7b \u00b6 DATETIME \u5e74\u6708\u65e5\u65f6\u5206\u79d2 \u6570\u503c\u7c7b \u00b6 TINYINT -128~127 \u6216\u8005\u5b58\u50a8\u5e03\u5c14\u503c INT \u5c0f\u6570\u5b57 BIGINT \u5927\u6570\u5b57\uff08ID\uff0c\u81ea\u589e\u957f\uff09 DOUBLE \u6d6e\u70b9\u578b\uff08\u4e0d\u4f7f\u7528FLOAT\uff09 06 \u6570\u636e\u8868\u64cd\u4f5c\uff08table\uff09 \u00b6 CREATE TABLE account ( id bigint ( 20 ), createTime datetime , ip varchar ( 255 ), mobile varchar ( 255 ), name varchar ( 255 ), brief text , comments text , location varchar ( 255 ), qq varchar ( 255 ), gender int ( 11 ), city varchar ( 255 ), province varchar ( 255 ) ); drop table account ; describe account ; # \u67e5\u770b\u5f53\u524d\u7684\u8868\u7684\u5185\u90e8\u7ed3\u6784 create database Michael ; use Michael ; show tables ; CREATE TABLE gc (...); describe gc ; drop table gc ; \u8868\u91cd\u547d\u540d alter table \u8868\u540d rename \u65b0\u8868\u540d 07 \u5217\u64cd\u4f5c \u00b6 \u589e\u52a0\u5220\u9664\u8868\u7684\u5217 alter table \u8868\u540d add \u65b0\u5217\u540d \u5217\u6570\u636e\u7c7b\u578b not null default 1 ; # \u540e\u9762\u7684 not null default 1 \u662f\u53ef\u9009\u53c2\u6570 alter table \u8868\u540d drop \u5df2\u6709\u5217\u540d ; \u4fee\u6539\u5217\u540d\u6216\u8005\u6570\u636e\u7c7b\u578b: \u53ef\u4ee5\u5355\u72ec\u4fee\u6539\u5217\u540d\u540e\u8005\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u4e00\u8d77\u4fee\u6539\u5217\u540d\u548c\u6570\u636e\u7c7b\u578b alter table \u8868\u540d change \u65e7\u5217\u540d \u65b0\u5217\u540d \u65b0\u7684\u6570\u636e\u7c7b\u578b 08 \u8868\u6570\u636e\u64cd\u4f5c \u00b6 insert \u63d2\u5165 \u00b6 \u589e\u52a0\uff08\u63d2\u5165\uff09\u8868\u6570\u636e insert into \u8868\u540d values ( key1 , key2 , key3 ...) insert into tableName ( column1 , column2 ) values ( key1 , key2 ) select \u67e5\u8be2 \u00b6 \u67e5\u8be2\u8868\u6570\u636e select * from \u8868\u540d select \u5217\u540d1 , \u5217\u540d2 from \u8868\u540d where \u7b5b\u9009 \u00b6 select * from tableName where title = 't' ; # \u67e5\u8be2\u6761\u4ef6\u53ef\u4ee5\u662f\u5927\u4e8e\u5c0f\u4e8e\u7b49\u4e8e\u4e0d\u7b49\u4e8e\uff0c\u6216\u8005between\u8303\u56f4 # \u53ef\u4ee5\u901a\u8fc7 and or \u8fdb\u884c\u591a\u5143\u9009\u62e9\uff0c\u62ec\u53f7\u589e\u52a0\u4f18\u5148\u7ea7 # \u6ce8\u610f\uff1a\u5224\u65ad\u76f8\u7b49\u662f = \u4e0d\u662f\u4e24\u4e2a\u7b49\u53f7 select * from gc where name = 'Michael' and ( id = 20 or id = 22 ); \u5224\u65ad null \u662f\u7279\u6b8a\u7684\uff0c\u9700\u8981\u901a\u8fc7 is is not \u5224\u65ad\uff0c\u4e0d\u80fd\u901a\u8fc7 = != \u5224\u65ad select * from gc where email is null and name is not null ; distinct \u53bb\u91cd \u00b6 \u5982\u679c\u7b5b\u9009\u8fc7\u7a0b\u4e2d\u6709\u91cd\u590d\u7684\u6570\u636e\uff0c\u90a3\u4e48\u53ef\u4ee5\u52a0\u4e0a\u5173\u952e\u5b57 distinct \u53bb\u9664\u91cd\u590d\u7684\u884c\u3002\u4e0b\u9762\u7684\u67e5\u8be2\u7ed3\u679c\u4e2d\uff0c\u5982\u679cname\u548cage\u76f8\u540c\u7684\u6570\u636e\u6709\u591a\u884c\uff0c\u90a3\u4e48\u7ed3\u679c\u4e2d\u53ea\u663e\u793a\u4e00\u884c select distinct name , age from gc ; order by \u6392\u5e8f \u00b6 \u5347\u5e8f\u6216\u8005\u964d\u5e8f # \u67e5\u8be2\u7ed3\u679c\u6392\u5e8f(\u5347\u5e8f\u6216\u8005\u964d\u5e8f) order by columnName desc/asc select * from gc order by id asc ; # \u5c06\u67e5\u8be2\u7684\u7ed3\u679c\u6309\u7167ID\u5347\u5e8f\u7684\u60c5\u51b5\u8fdb\u884c\u6392\u5e8f select * from gc order by age asc , name desc ; limit \u9650\u5236 \u00b6 \u4f7f\u7528 limit \u622a\u53d6\u67e5\u8be2\u7ed3\u679c\uff08\u7c7b\u4f3c\u4e8esplice\u51fd\u6570\uff09limit \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5f00\u59cb\u7684\u4f4d\u7f6e\uff08\u9ed8\u8ba4\u662f0\uff0c\u53ef\u4ee5\u4e0d\u9009\uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u622a\u53d6\u7684\u6570\u91cf\u3002 select * from gc [ where name is not null ] [ order by id asc ] limit 5 ; select * from gc [ where name is not null ] [ order by id asc ] limit 3 , 5 ; # \u4e2d\u62ec\u53f7\u5185\u90e8\u662f\u53ef\u9009\u53c2\u6570\uff08order\u5fc5\u987b\u5728where\u540e\u9762\uff09 # \u7b2c\u4e00\u53e5\uff1a\u5728\u83b7\u53d6\u7684\u7ed3\u679c\u4e2d\uff0c\u622a\u53d6\u524d\u4e94\u6761\u8bb0\u5f55\uff08index = 0 \u5230 index = 4\uff09 # \u7b2c\u4e8c\u53e5\uff1alimit \u4eceindex=3 \u5f00\u59cb\u622a\u53d6\uff0c\u622a\u53d65\u6761\u8bb0\u5f55 \u7ec4\u5408\u4f7f\u7528 insert select \u00b6 \u53ef\u4ee5\u5728\u4e00\u4e2a\u8868\u4e2d\u67e5\u8be2\u6570\u636e\uff0cselect * from table\uff0c \u7136\u540e\u628a\u67e5\u8be2\u7684\u7ed3\u679c\u63d2\u5165\u5230\u53e6\u4e00\u4e2a\u8868\u4e2d\uff08\u6570\u636e\u8fc1\u79fb\u4f1a\u7528\u5230\uff09 insert into account values ( 10 ); insert into account select name , age from oldAccount ; update \u66f4\u65b0 \u00b6 update tableName set columnName = newValue where XXX \u5982\u679c\u4f7f\u7528where\u6dfb\u52a0\uff0c\u90a3\u4e48\u4fee\u6539\u6ee1\u8db3\u6761\u4ef6\u7684\u90e8\u5206\uff1b\u5426\u5219\u4fee\u6539\u6574\u5217\u7684\u6570\u636e\uff1b update account set name = 'Tom' , email = '123@qq.com' where id = 1 ; where \u9ad8\u7ea7\u7528\u6cd5 \u00b6 in \u5b57\u7b26\u4e32\u8303\u56f4\uff08\u79bb\u6563\u503c\uff09 select * from account where id in ( value1 , value2 ...); select * from account where id in ( select id from oldAccount where id < 10 ); \u4ece\u4e00\u4e2a\u96c6\u5408\u4e2d\u9009\u62e9\u53e6\u4e00\u4e2a\u96c6\u5408\uff08\u9009\u62e9\u7684\u53ef\u4ee5\u4f7f\u5b57\u7b26\u4e32\u8303\u56f4\uff0c\u662f\u6570\u503c\u8303\u56f4\u7684\u6269\u5927\uff09 between \u6570\u503c\u8303\u56f4\uff08\u8fde\u7eed\uff09 select * from account where id between 5 and 10 ; # \u8fd9\u91cc\u7684\u9009\u62e9\u662f[5, 10] select * from account where id not between 5 and 10 ; # Like \u5b57\u7b26\u4e32\u7684\u6a21\u7cca\u5339\u914d select * from account where name like '%ab%' ;","title":"\u963f\u91cc\u4e91MySQL\u5165\u95e8.md"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#mysql","text":"\u963f\u91cc\u4e91\u5927\u5b66 \u94fe\u63a5\u5730\u5740\uff1a https://edu.aliyun.com/course/153/lesson/list mysql \u6570\u636e\u5e93\u7684\u7b80\u5355\u4ecb\u7ecd\uff0c\u5b89\u88c5\u914d\u7f6eMYSQL\uff0c\u57fa\u672c\u7684SQL\u547d\u4ee4\u3002","title":"MySQL \u6570\u636e\u5e93\u5165\u95e8\u5b66\u4e60"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#01","text":"SQL\uff1a\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\uff0cstrcutured query language \u7ed3\u6784\u5316\u7684\u67e5\u8be2\u8bed\u8a00\uff0c\u4e3b\u8981\u7528\u4e8e\u6570\u636e\u5e93\u4e2d\u7684\u589e\u5220\u6539\u67e5 select * from tb MySQL \u5173\u7cfb\u578b\u6570\u636e\u5e93\uff0c\u662f\u6570\u636e\u5e93\u7684\u4e00\u79cd\uff08\u5176\u4ed6\u7684Oracle\uff09\u3002MYSQL\u662f\u5f00\u6e90\u6570\u636e\u5e93\u3002","title":"01 \u7b80\u4ecb"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#02","text":"\u5b98\u7f51\uff1adev.mysql.com/downloads/mysql","title":"02 \u5b89\u88c5"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#windows","text":"\u5728\u5b98\u7f51\u4e0b\u8f7d\u5b89\u88c5\u5305\u540e\uff0c\u9009\u62e9\u9ed8\u8ba4\u7684developer\u5b89\u88c5\u65b9\u5f0f\u8fdb\u884c\u5b89\u88c5\uff1b \u5b89\u88c5\u8fc7\u7a0b\u4e2d\u5982\u679c\u68c0\u6d4b\u5230office\u4e2d\u7f3a\u5c11\u63d2\u4ef6\uff0c\u53ef\u4ee5\u4e0d\u7528\u5904\u7406\uff0c\u56e0\u4e3a\u4e3b\u8981\u5728CLI\u6a21\u5f0f\u4e0b\u4f7f\u7528MYSQL \u5b89\u88c5\u4e2d\u9700\u8981\u8bbe\u7f6eroot\u7528\u6237\u7684\u5bc6\u7801\uff0c\u5176\u4ed6\u7c7b\u578b\u7684\u7528\u6237\uff08\u4e0d\u6dfb\u52a0\u5176\u4ed6\u7528\u6237\uff09 \u6309\u7167\u5b89\u88c5\u5305\u7684\u6d41\u7a0b\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u53ef\u4ee5\u5728\u4efb\u52a1\u7ba1\u7406\u5668\u4e0b\u9762\u770b\u5230\u670d\u52a1\u6b63\u5728\u8fd0\u884c\uff0c\u9700\u8981\u5728cmd\u4e0b\u9762\u786e\u8ba4\u5b89\u88c5. mysql -u root -p # -u \u8868\u793a\u7528\u6237 -p \u8868\u793a\u9700\u8981\u5bc6\u7801","title":"windows \u5b89\u88c5"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#linux","text":"sudo yum install mysql mysql-server sudo apt-get install mysql mysql-server ( ubuntu ) mysqladmin -u root -p password 'root' # \u8bbe\u7f6e\u65b0\u5bc6\u7801\u662froot","title":"linux \u5b89\u88c5"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#mac","text":"\u5b89\u88c5\u5305\u7684\u683c\u5f0f\u662f dmg \u5b89\u88c5\u5b8c\u6bd5\u540e\u9700\u8981\u8bbe\u7f6eroot\u5bc6\u7801 /usr/local/mysql/bin/mysqladmin -u root -p password root # \u5b89\u88c5\u6d4b\u8bd5\u6210\u529f\uff0c\u5bc6\u7801\u548c\u5f00\u673a\u5bc6\u7801\u4e00\u81f4 /usr/local/mysql/bin/mysql -u root -p # \u6253\u5f00mysql\u7684\u5bc6\u7801\u662f root \u5f00\u542f\u6216\u8005\u5173\u95ed\u670d\u52a1\u6709\u4e24\u79cd\u65b9\u6cd5 CLI sudo /Library/StartupItems/MySQLCOM/MYSQLCOM start | stop | restart GUI \u7cfb\u7edf\u914d\u7f6e - MYSQL - stop |start \u6ce8\u610f \uff1a\u5b89\u88c5\u8fc7\u7a0b\u4e2d\uff0c\u4f1a\u9009\u62e9\u5f3a\u5bc6\u7801\u6216\u8005\u662f\u5f31\u5bc6\u7801\u3002\u73b0\u5728\u672c\u5730\u6d4b\u8bd5\u4f7f\u7528\u5f31\u5bc6\u7801\u3002\u5bc6\u7801\u6700\u5c11\u662f8\u4f4d\uff0c\u8fd9\u91cc\u8bbe\u7f6e12345678 \u4f5c\u4e3aroot\u7684\u5bc6\u7801\u3002 \u73b0\u5728\u5bc6\u7801\u662f root \u6ce8\u610f2 \uff1a \u5982\u679cmysql\u5df2\u7ecf\u8fd0\u884c\uff0c\u4f46\u662f\u8f93\u5165 mysql \u663e\u793a\u547d\u4ee4\u4e0d\u5b58\u5728\uff1a\u9047\u4e0a-bash: mysql: command not found\u7684\u60c5\u51b5\u522b\u7740\u6025 \u8fd9\u4e2a\u662f\u56e0\u4e3a/usr/local/bin\u76ee\u5f55\u4e0b\u7f3a\u5931mysql\u5bfc\u81f4\uff0c\u53ea\u9700\u8981\u4e00\u4e0b\u65b9\u6cd5\u5efa\u7acb\u8f6f\u94fe\u63a5\uff0c\u5373\u53ef\u4ee5\u89e3\u51b3\uff1a \u628amysql\u5b89\u88c5\u76ee\u5f55\uff0c\u6bd4\u5982MYSQLPATH/bin/mysql\uff0c\u6620\u5c04\u5230/usr/local/bin\u76ee\u5f55\u4e0b\uff1a # cd /usr/local/bin # ln -fs /MYSQLPATH/bin/mysql mysql \u8fd8\u6709\u5176\u5b83\u5e38\u7528\u547d\u4ee4mysqladmin\u3001mysqldump\u7b49\u4e0d\u53ef\u7528\u65f6\u5019\u90fd\u53ef\u6309\u7528\u6b64\u65b9\u6cd5\u89e3\u51b3\u3002 \u6ce8\uff1a\u5176\u4e2dMYSQLPATH\u662fmysql\u7684\u5b9e\u9645\u5b89\u88c5\u8def\u5f84\uff08MAC \u9ed8\u8ba4\u8def\u5f84 /usr/local/mysql/bin/mysql\uff09 \u539f\u6587\u94fe\u63a5\uff1a https://www.cnblogs.com/yang1314/p/9288767.html","title":"Mac \u5b89\u88c5"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#03","text":"MYSQL \u7684\u914d\u7f6e\u6587\u4ef6\u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 my.cof Mac \u7684\u6587\u4ef6\u8def\u5f84\u662f /usr/local/mysql/my.cof \u9ed8\u8ba4\u7684\u914d\u7f6e\u6587\u4ef6\u662f\u7a7a\u7684 \u53ef\u4ee5\u914d\u7f6e\u5b57\u7b26\u96c6\uff0c\u7f13\u5b58\u5927\u5c0f\u7b49 [client] default-character-set=utf8 # \u6dfb\u52a0\u5b57\u7b26\u96c6\uff0c\u907f\u514d\u4e71\u7801 [mysqld] character-set-server=utf8 default-storage-engine=INNODB # \u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce INNODB \u4fee\u6539\u914d\u7f6e\u540e\uff0c\u9700\u8981\u91cd\u542f mysql (\u6216\u8005\u5728\u8bbe\u7f6e\u4e2d\u91cd\u542f) sudo /Library/StartupItems/MySQLCOM/MYSQLCOM restart \u81ea\u5df1\u914d\u7f6e\u7684\u95ee\u9898\uff1a\u4f7f\u7528vim\u7f16\u8f91\u5668\u4fdd\u5b58\u7684\u65f6\u5019\uff0c\u4e0d\u80fd\u4fdd\u5b58\u914d\u7f6e\uff1b\u4f7f\u7528sudo\u4e5f\u4e0d\u884c \"/usr/local/mysql-8.0.18-macos10.14-x86_64/my.cof\" E212: Can't open file for writing Warning: Changing a readonly file","title":"03 \u914d\u7f6e"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#04","text":"show databases ; create database gc ; drop database gc ; \u4e0d\u540c\u6570\u636e\u5e93\u7684\u6570\u636e\u662f\u4e0d\u4f1a\u5e72\u6270\u7684\u3002\u6570\u636e\u5e93\u662f\u6570\u636e\u5e93\u8f6f\u4ef6\u4e2d\u57fa\u672c\u7684\u5355\u4f4d","title":"04 \u6570\u636e\u5e93\u64cd\u4f5c"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#05","text":"database \u5305\u62ec tables \u8868\u4e2d\u6bcf\u4e00\u884c\u5c31\u662f\u4e00\u6761\u6570\u636e\uff1b\u5217\u5c31\u662f\u4e0d\u540c\u7684\u5b57\u6bb5\uff0c\u4e0d\u540c\u7684\u5b57\u6bb5\u5bf9\u5e94\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u548c\u6570\u636e\u7ed3\u6784\uff08\u4f8b\u5982ID\u662f\u81ea\u589e\u957f\u7684\u6574\u5f62\uff0cName\u662f\u957f\u5b57\u7b26\u4e32\uff09\uff0c\u662f\u5426\u6709\u9ed8\u8ba4\u503c\u7b49\u3002\u4e0b\u9762\u662f\u5e38\u89c1\u7684\u6570\u636e\u7c7b\u578b\u3002\u6839\u636e\u5b9e\u9645\u4e1a\u52a1\u903b\u8f91\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002","title":"05 \u6570\u636e\u7c7b\u578b"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#_1","text":"VARCHAR(size) \u957f\u5ea6\u5c0f\u4e8e255\u7684\u53ef\u53d8\u957f\u5ea6\u5b57\u7b26\u4e32\uff1avarchar \u957f\u5ea6\u5c0f\u4e8e65535\u5b57\u7b26\uff08\u901a\u5e38\u6587\u672c\u8db3\u591f\u4f7f\u7528\uff09\uff0c\u957f\u5ea6\u53ef\u4ee5\u6539\u53d8\uff08mqsql 5.0.3 \u4e4b\u524d\u8868\u793a65535\u5b57\u8282\uff09\uff0c\u67e5\u8be2\u901f\u5ea6\u4e2d\u7b49 TEXT \u957f\u5ea6\u4e2d\u7b49\u7684\u5b57\u7b26\u4e32\uff0ctext \u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u53d7\u9650\u5236\uff0c\u67e5\u8be2\u901f\u5ea6\u6700\u6162\uff0c\u901a\u5e38\u4f18\u5148\u4f7f\u7528varchar LONGTEXT \u957f\u5ea6\u5f88\u957f\u7684\u5b57\u7b26\u4e32 CHAR\uff1achar \u8868\u793a\u4f20\u7edf\u7684\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5c0f\u4e8e255\u5b57\u7b26\uff0c\u957f\u5ea6\u56fa\u5b9a\uff0c\u9002\u7528\u4e8e\u8f83\u77ed\u56fa\u5b9a\u957f\u5ea6\u7684\u6570\u636e\uff08\u8eab\u4efd\u8bc1\u53f7\u548c\u7535\u8bdd\u53f7\uff09\uff0c\u67e5\u8be2\u8868\u901f\u5ea6\u6700\u5feb Foreign key \u5916\u952e primary key \u4e3b\u952e \u5728mysql\u4e2d\uff0c\u5982\u679c\u628a\u8868\u7684\u4e3b\u952e\u8bbe\u4e3aauto_increment\u7c7b\u578b\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u81ea\u52a8\u4e3a\u4e3b\u952e\u8d4b\u503c\u3002","title":"\u6587\u672c\u7c7b"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#_2","text":"DATETIME \u5e74\u6708\u65e5\u65f6\u5206\u79d2","title":"\u65e5\u671f\u7c7b"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#_3","text":"TINYINT -128~127 \u6216\u8005\u5b58\u50a8\u5e03\u5c14\u503c INT \u5c0f\u6570\u5b57 BIGINT \u5927\u6570\u5b57\uff08ID\uff0c\u81ea\u589e\u957f\uff09 DOUBLE \u6d6e\u70b9\u578b\uff08\u4e0d\u4f7f\u7528FLOAT\uff09","title":"\u6570\u503c\u7c7b"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#06-table","text":"CREATE TABLE account ( id bigint ( 20 ), createTime datetime , ip varchar ( 255 ), mobile varchar ( 255 ), name varchar ( 255 ), brief text , comments text , location varchar ( 255 ), qq varchar ( 255 ), gender int ( 11 ), city varchar ( 255 ), province varchar ( 255 ) ); drop table account ; describe account ; # \u67e5\u770b\u5f53\u524d\u7684\u8868\u7684\u5185\u90e8\u7ed3\u6784 create database Michael ; use Michael ; show tables ; CREATE TABLE gc (...); describe gc ; drop table gc ; \u8868\u91cd\u547d\u540d alter table \u8868\u540d rename \u65b0\u8868\u540d","title":"06 \u6570\u636e\u8868\u64cd\u4f5c\uff08table\uff09"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#07","text":"\u589e\u52a0\u5220\u9664\u8868\u7684\u5217 alter table \u8868\u540d add \u65b0\u5217\u540d \u5217\u6570\u636e\u7c7b\u578b not null default 1 ; # \u540e\u9762\u7684 not null default 1 \u662f\u53ef\u9009\u53c2\u6570 alter table \u8868\u540d drop \u5df2\u6709\u5217\u540d ; \u4fee\u6539\u5217\u540d\u6216\u8005\u6570\u636e\u7c7b\u578b: \u53ef\u4ee5\u5355\u72ec\u4fee\u6539\u5217\u540d\u540e\u8005\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u4e00\u8d77\u4fee\u6539\u5217\u540d\u548c\u6570\u636e\u7c7b\u578b alter table \u8868\u540d change \u65e7\u5217\u540d \u65b0\u5217\u540d \u65b0\u7684\u6570\u636e\u7c7b\u578b","title":"07 \u5217\u64cd\u4f5c"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#08","text":"","title":"08 \u8868\u6570\u636e\u64cd\u4f5c"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#insert","text":"\u589e\u52a0\uff08\u63d2\u5165\uff09\u8868\u6570\u636e insert into \u8868\u540d values ( key1 , key2 , key3 ...) insert into tableName ( column1 , column2 ) values ( key1 , key2 )","title":"insert \u63d2\u5165"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#select","text":"\u67e5\u8be2\u8868\u6570\u636e select * from \u8868\u540d select \u5217\u540d1 , \u5217\u540d2 from \u8868\u540d","title":"select \u67e5\u8be2"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#where","text":"select * from tableName where title = 't' ; # \u67e5\u8be2\u6761\u4ef6\u53ef\u4ee5\u662f\u5927\u4e8e\u5c0f\u4e8e\u7b49\u4e8e\u4e0d\u7b49\u4e8e\uff0c\u6216\u8005between\u8303\u56f4 # \u53ef\u4ee5\u901a\u8fc7 and or \u8fdb\u884c\u591a\u5143\u9009\u62e9\uff0c\u62ec\u53f7\u589e\u52a0\u4f18\u5148\u7ea7 # \u6ce8\u610f\uff1a\u5224\u65ad\u76f8\u7b49\u662f = \u4e0d\u662f\u4e24\u4e2a\u7b49\u53f7 select * from gc where name = 'Michael' and ( id = 20 or id = 22 ); \u5224\u65ad null \u662f\u7279\u6b8a\u7684\uff0c\u9700\u8981\u901a\u8fc7 is is not \u5224\u65ad\uff0c\u4e0d\u80fd\u901a\u8fc7 = != \u5224\u65ad select * from gc where email is null and name is not null ;","title":"where \u7b5b\u9009"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#distinct","text":"\u5982\u679c\u7b5b\u9009\u8fc7\u7a0b\u4e2d\u6709\u91cd\u590d\u7684\u6570\u636e\uff0c\u90a3\u4e48\u53ef\u4ee5\u52a0\u4e0a\u5173\u952e\u5b57 distinct \u53bb\u9664\u91cd\u590d\u7684\u884c\u3002\u4e0b\u9762\u7684\u67e5\u8be2\u7ed3\u679c\u4e2d\uff0c\u5982\u679cname\u548cage\u76f8\u540c\u7684\u6570\u636e\u6709\u591a\u884c\uff0c\u90a3\u4e48\u7ed3\u679c\u4e2d\u53ea\u663e\u793a\u4e00\u884c select distinct name , age from gc ;","title":"distinct \u53bb\u91cd"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#order-by","text":"\u5347\u5e8f\u6216\u8005\u964d\u5e8f # \u67e5\u8be2\u7ed3\u679c\u6392\u5e8f(\u5347\u5e8f\u6216\u8005\u964d\u5e8f) order by columnName desc/asc select * from gc order by id asc ; # \u5c06\u67e5\u8be2\u7684\u7ed3\u679c\u6309\u7167ID\u5347\u5e8f\u7684\u60c5\u51b5\u8fdb\u884c\u6392\u5e8f select * from gc order by age asc , name desc ;","title":"order by \u6392\u5e8f"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#limit","text":"\u4f7f\u7528 limit \u622a\u53d6\u67e5\u8be2\u7ed3\u679c\uff08\u7c7b\u4f3c\u4e8esplice\u51fd\u6570\uff09limit \u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5f00\u59cb\u7684\u4f4d\u7f6e\uff08\u9ed8\u8ba4\u662f0\uff0c\u53ef\u4ee5\u4e0d\u9009\uff09\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u622a\u53d6\u7684\u6570\u91cf\u3002 select * from gc [ where name is not null ] [ order by id asc ] limit 5 ; select * from gc [ where name is not null ] [ order by id asc ] limit 3 , 5 ; # \u4e2d\u62ec\u53f7\u5185\u90e8\u662f\u53ef\u9009\u53c2\u6570\uff08order\u5fc5\u987b\u5728where\u540e\u9762\uff09 # \u7b2c\u4e00\u53e5\uff1a\u5728\u83b7\u53d6\u7684\u7ed3\u679c\u4e2d\uff0c\u622a\u53d6\u524d\u4e94\u6761\u8bb0\u5f55\uff08index = 0 \u5230 index = 4\uff09 # \u7b2c\u4e8c\u53e5\uff1alimit \u4eceindex=3 \u5f00\u59cb\u622a\u53d6\uff0c\u622a\u53d65\u6761\u8bb0\u5f55","title":"limit \u9650\u5236"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#insert-select","text":"\u53ef\u4ee5\u5728\u4e00\u4e2a\u8868\u4e2d\u67e5\u8be2\u6570\u636e\uff0cselect * from table\uff0c \u7136\u540e\u628a\u67e5\u8be2\u7684\u7ed3\u679c\u63d2\u5165\u5230\u53e6\u4e00\u4e2a\u8868\u4e2d\uff08\u6570\u636e\u8fc1\u79fb\u4f1a\u7528\u5230\uff09 insert into account values ( 10 ); insert into account select name , age from oldAccount ;","title":"\u7ec4\u5408\u4f7f\u7528 insert select"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#update","text":"update tableName set columnName = newValue where XXX \u5982\u679c\u4f7f\u7528where\u6dfb\u52a0\uff0c\u90a3\u4e48\u4fee\u6539\u6ee1\u8db3\u6761\u4ef6\u7684\u90e8\u5206\uff1b\u5426\u5219\u4fee\u6539\u6574\u5217\u7684\u6570\u636e\uff1b update account set name = 'Tom' , email = '123@qq.com' where id = 1 ;","title":"update \u66f4\u65b0"},{"location":"sql/%E9%98%BF%E9%87%8C%E4%BA%91MySQL%E5%85%A5%E9%97%A8/#where_1","text":"in \u5b57\u7b26\u4e32\u8303\u56f4\uff08\u79bb\u6563\u503c\uff09 select * from account where id in ( value1 , value2 ...); select * from account where id in ( select id from oldAccount where id < 10 ); \u4ece\u4e00\u4e2a\u96c6\u5408\u4e2d\u9009\u62e9\u53e6\u4e00\u4e2a\u96c6\u5408\uff08\u9009\u62e9\u7684\u53ef\u4ee5\u4f7f\u5b57\u7b26\u4e32\u8303\u56f4\uff0c\u662f\u6570\u503c\u8303\u56f4\u7684\u6269\u5927\uff09 between \u6570\u503c\u8303\u56f4\uff08\u8fde\u7eed\uff09 select * from account where id between 5 and 10 ; # \u8fd9\u91cc\u7684\u9009\u62e9\u662f[5, 10] select * from account where id not between 5 and 10 ; # Like \u5b57\u7b26\u4e32\u7684\u6a21\u7cca\u5339\u914d select * from account where name like '%ab%' ;","title":"where \u9ad8\u7ea7\u7528\u6cd5"}]}